

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri Apr 15 17:16:14 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    73  0000                     
    74                           	psect	idataBANK0
    75  015E16                     __pidataBANK0:
    76                           	opt stack 0
    77                           
    78                           ;initializer for _delay_quartz_frequency_value
    79  015E16  10                 	db	16
    80                           
    81                           	psect	mediumconst
    82  00FEC2                     __pmediumconst:
    83                           	opt stack 0
    84  00FEC2  00                 	db	0
    85  00FEC3                     __npowers_:
    86                           	opt stack 0
    87  00FEC3  0000               	dw	0
    88  00FEC5  3F80               	dw	16256
    89  00FEC7  CCCD               	dw	52429
    90  00FEC9  3DCC               	dw	15820
    91  00FECB  D70A               	dw	55050
    92  00FECD  3C23               	dw	15395
    93  00FECF  126F               	dw	4719
    94  00FED1  3A83               	dw	14979
    95  00FED3  B717               	dw	46871
    96  00FED5  38D1               	dw	14545
    97  00FED7  C5AC               	dw	50604
    98  00FED9  3727               	dw	14119
    99  00FEDB  37BD               	dw	14269
   100  00FEDD  3586               	dw	13702
   101  00FEDF  BF95               	dw	49045
   102  00FEE1  33D6               	dw	13270
   103  00FEE3  CC77               	dw	52343
   104  00FEE5  322B               	dw	12843
   105  00FEE7  705F               	dw	28767
   106  00FEE9  3089               	dw	12425
   107  00FEEB  E6FF               	dw	59135
   108  00FEED  2EDB               	dw	11995
   109  00FEEF  E508               	dw	58632
   110  00FEF1  1E3C               	dw	7740
   111  00FEF3  4260               	dw	16992
   112  00FEF5  0DA2               	dw	3490
   113  00FEF7                     __end_of__npowers_:
   114                           	opt stack 0
   115  00FEF7                     __powers_:
   116                           	opt stack 0
   117  00FEF7  0000               	dw	0
   118  00FEF9  3F80               	dw	16256
   119  00FEFB  0000               	dw	0
   120  00FEFD  4120               	dw	16672
   121  00FEFF  0000               	dw	0
   122  00FF01  42C8               	dw	17096
   123  00FF03  0000               	dw	0
   124  00FF05  447A               	dw	17530
   125  00FF07  4000               	dw	16384
   126  00FF09  461C               	dw	17948
   127  00FF0B  5000               	dw	20480
   128  00FF0D  47C3               	dw	18371
   129  00FF0F  2400               	dw	9216
   130  00FF11  4974               	dw	18804
   131  00FF13  9680               	dw	38528
   132  00FF15  4B18               	dw	19224
   133  00FF17  BC20               	dw	48160
   134  00FF19  4CBE               	dw	19646
   135  00FF1B  6B28               	dw	27432
   136  00FF1D  4E6E               	dw	20078
   137  00FF1F  02F9               	dw	761
   138  00FF21  5015               	dw	20501
   139  00FF23  78EC               	dw	30956
   140  00FF25  60AD               	dw	24749
   141  00FF27  F2CA               	dw	62154
   142  00FF29  7149               	dw	29001
   143  00FF2B                     __end_of__powers_:
   144                           	opt stack 0
   145  00FF2B                     _dpowers:
   146                           	opt stack 0
   147  00FF2B  0001               	dw	1
   148  00FF2D  0000               	dw	0
   149  00FF2F  000A               	dw	10
   150  00FF31  0000               	dw	0
   151  00FF33  0064               	dw	100
   152  00FF35  0000               	dw	0
   153  00FF37  03E8               	dw	1000
   154  00FF39  0000               	dw	0
   155  00FF3B  2710               	dw	10000
   156  00FF3D  0000               	dw	0
   157  00FF3F  86A0               	dw	34464
   158  00FF41  0001               	dw	1
   159  00FF43  4240               	dw	16960
   160  00FF45  000F               	dw	15
   161  00FF47  9680               	dw	38528
   162  00FF49  0098               	dw	152
   163  00FF4B  E100               	dw	57600
   164  00FF4D  05F5               	dw	1525
   165  00FF4F  CA00               	dw	51712
   166  00FF51  3B9A               	dw	15258
   167  00FF53                     __end_of_dpowers:
   168                           	opt stack 0
   169  0000                     _RXB1CON	set	3920
   170  0000                     _RXB1CONbits	set	3920
   171  0000                     _RXB1D0	set	3926
   172  0000                     _RXB1D1	set	3927
   173  0000                     _RXB1D2	set	3928
   174  0000                     _RXB1D3	set	3929
   175  0000                     _RXB1D4	set	3930
   176  0000                     _RXB1D5	set	3931
   177  0000                     _RXB1D6	set	3932
   178  0000                     _RXB1D7	set	3933
   179  0000                     _RXB1DLC	set	3925
   180  0000                     _RXB1DLCbits	set	3925
   181  0000                     _RXB1EIDH	set	3923
   182  0000                     _RXB1EIDL	set	3924
   183  0000                     _RXB1SIDH	set	3921
   184  0000                     _RXB1SIDL	set	3922
   185  0000                     _RXB1SIDLbits	set	3922
   186  0000                     _RXF0EIDH	set	3842
   187  0000                     _RXF0EIDL	set	3843
   188  0000                     _RXF0SIDH	set	3840
   189  0000                     _RXF0SIDL	set	3841
   190  0000                     _RXF0SIDLbits	set	3841
   191  0000                     _RXF1EIDH	set	3846
   192  0000                     _RXF1EIDL	set	3847
   193  0000                     _RXF1SIDH	set	3844
   194  0000                     _RXF1SIDL	set	3845
   195  0000                     _RXF1SIDLbits	set	3845
   196  0000                     _RXF2EIDH	set	3850
   197  0000                     _RXF2EIDL	set	3851
   198  0000                     _RXF2SIDH	set	3848
   199  0000                     _RXF2SIDL	set	3849
   200  0000                     _RXF2SIDLbits	set	3849
   201  0000                     _RXF3EIDH	set	3854
   202  0000                     _RXF3EIDL	set	3855
   203  0000                     _RXF3SIDH	set	3852
   204  0000                     _RXF3SIDL	set	3853
   205  0000                     _RXF3SIDLbits	set	3853
   206  0000                     _RXF4EIDH	set	3858
   207  0000                     _RXF4EIDL	set	3859
   208  0000                     _RXF4SIDH	set	3856
   209  0000                     _RXF4SIDL	set	3857
   210  0000                     _RXF4SIDLbits	set	3857
   211  0000                     _RXF5EIDH	set	3862
   212  0000                     _RXF5EIDL	set	3863
   213  0000                     _RXF5SIDH	set	3860
   214  0000                     _RXF5SIDL	set	3861
   215  0000                     _RXF5SIDLbits	set	3861
   216  0000                     _RXM0EIDH	set	3866
   217  0000                     _RXM0EIDL	set	3867
   218  0000                     _RXM0SIDH	set	3864
   219  0000                     _RXM0SIDL	set	3865
   220  0000                     _RXM0SIDLbits	set	3865
   221  0000                     _RXM1EIDH	set	3870
   222  0000                     _RXM1EIDL	set	3871
   223  0000                     _RXM1SIDH	set	3868
   224  0000                     _RXM1SIDL	set	3869
   225  0000                     _RXM1SIDLbits	set	3869
   226  0000                     _TXB0CONbits	set	3904
   227  0000                     _TXB0D0	set	3910
   228  0000                     _TXB0D1	set	3911
   229  0000                     _TXB0D2	set	3912
   230  0000                     _TXB0D3	set	3913
   231  0000                     _TXB0D4	set	3914
   232  0000                     _TXB0D5	set	3915
   233  0000                     _TXB0D6	set	3916
   234  0000                     _TXB0D7	set	3917
   235  0000                     _TXB0DLC	set	3909
   236  0000                     _TXB0DLCbits	set	3909
   237  0000                     _TXB0EIDH	set	3907
   238  0000                     _TXB0EIDL	set	3908
   239  0000                     _TXB0SIDH	set	3905
   240  0000                     _TXB0SIDL	set	3906
   241  0000                     _TXB0SIDLbits	set	3906
   242  0000                     _TXB1CONbits	set	3888
   243  0000                     _TXB1D0	set	3894
   244  0000                     _TXB1D1	set	3895
   245  0000                     _TXB1D2	set	3896
   246  0000                     _TXB1D3	set	3897
   247  0000                     _TXB1D4	set	3898
   248  0000                     _TXB1D5	set	3899
   249  0000                     _TXB1D6	set	3900
   250  0000                     _TXB1D7	set	3901
   251  0000                     _TXB1DLC	set	3893
   252  0000                     _TXB1DLCbits	set	3893
   253  0000                     _TXB1EIDH	set	3891
   254  0000                     _TXB1EIDL	set	3892
   255  0000                     _TXB1SIDH	set	3889
   256  0000                     _TXB1SIDL	set	3890
   257  0000                     _TXB1SIDLbits	set	3890
   258  0000                     _TXB2CONbits	set	3872
   259  0000                     _TXB2D0	set	3878
   260  0000                     _TXB2D1	set	3879
   261  0000                     _TXB2D2	set	3880
   262  0000                     _TXB2D3	set	3881
   263  0000                     _TXB2D4	set	3882
   264  0000                     _TXB2D5	set	3883
   265  0000                     _TXB2D6	set	3884
   266  0000                     _TXB2D7	set	3885
   267  0000                     _TXB2DLC	set	3877
   268  0000                     _TXB2DLCbits	set	3877
   269  0000                     _TXB2EIDH	set	3875
   270  0000                     _TXB2EIDL	set	3876
   271  0000                     _TXB2SIDH	set	3873
   272  0000                     _TXB2SIDL	set	3874
   273  0000                     _TXB2SIDLbits	set	3874
   274  0000                     _ADCON0bits	set	4034
   275  0000                     _ADCON1	set	4033
   276  0000                     _ADCON2bits	set	4032
   277  0000                     _ADRESH	set	4036
   278  0000                     _BRGCON1	set	3952
   279  0000                     _BRGCON2	set	3953
   280  0000                     _BRGCON2bits	set	3953
   281  0000                     _BRGCON3	set	3954
   282  0000                     _BRGCON3bits	set	3954
   283  0000                     _CANCON	set	3951
   284  0000                     _CANCONbits	set	3951
   285  0000                     _CANSTAT	set	3950
   286  0000                     _COMSTATbits	set	3956
   287  0000                     _INTCONbits	set	4082
   288  0000                     _IPR2bits	set	4002
   289  0000                     _IPR3bits	set	4005
   290  0000                     _LATA	set	3977
   291  0000                     _LATB	set	3978
   292  0000                     _LATC	set	3979
   293  0000                     _LATCbits	set	3979
   294  0000                     _LATD	set	3980
   295  0000                     _LATDbits	set	3980
   296  0000                     _LATE	set	3981
   297  0000                     _LATEbits	set	3981
   298  0000                     _PIE2bits	set	4000
   299  0000                     _PIE3bits	set	4003
   300  0000                     _PIR2bits	set	4001
   301  0000                     _PIR3bits	set	4004
   302  0000                     _PORTAbits	set	3968
   303  0000                     _PORTBbits	set	3969
   304  0000                     _PORTDbits	set	3971
   305  0000                     _RCONbits	set	4048
   306  0000                     _RXB0CON	set	3936
   307  0000                     _RXB0CONbits	set	3936
   308  0000                     _RXB0D0	set	3942
   309  0000                     _RXB0D1	set	3943
   310  0000                     _RXB0D2	set	3944
   311  0000                     _RXB0D3	set	3945
   312  0000                     _RXB0D4	set	3946
   313  0000                     _RXB0D5	set	3947
   314  0000                     _RXB0D6	set	3948
   315  0000                     _RXB0D7	set	3949
   316  0000                     _RXB0DLC	set	3941
   317  0000                     _RXB0DLCbits	set	3941
   318  0000                     _RXB0EIDH	set	3939
   319  0000                     _RXB0EIDL	set	3940
   320  0000                     _RXB0SIDH	set	3937
   321  0000                     _RXB0SIDL	set	3938
   322  0000                     _RXB0SIDLbits	set	3938
   323  0000                     _RXERRCNT	set	3957
   324  0000                     _T3CON	set	4017
   325  0000                     _TMR3H	set	4019
   326  0000                     _TMR3L	set	4018
   327  0000                     _TRISA	set	3986
   328  0000                     _TRISB	set	3987
   329  0000                     _TRISC	set	3988
   330  0000                     _TRISD	set	3989
   331  0000                     _TRISE	set	3990
   332  0000                     _TXERRCNT	set	3958
   333  00FF53                     STR_3:
   334  00FF53  20                 	db	32
   335  00FF54  20                 	db	32
   336  00FF55  50                 	db	80	;'P'
   337  00FF56  72                 	db	114	;'r'
   338  00FF57  65                 	db	101	;'e'
   339  00FF58  73                 	db	115	;'s'
   340  00FF59  73                 	db	115	;'s'
   341  00FF5A  20                 	db	32
   342  00FF5B  74                 	db	116	;'t'
   343  00FF5C  68                 	db	104	;'h'
   344  00FF5D  65                 	db	101	;'e'
   345  00FF5E  20                 	db	32
   346  00FF5F  62                 	db	98	;'b'
   347  00FF60  75                 	db	117	;'u'
   348  00FF61  74                 	db	116	;'t'
   349  00FF62  74                 	db	116	;'t'
   350  00FF63  6F                 	db	111	;'o'
   351  00FF64  6E                 	db	110	;'n'
   352  00FF65  20                 	db	32
   353  00FF66  20                 	db	32
   354  00FF67  00                 	db	0
   355  00FF68                     STR_2:
   356  00FF68  3D                 	db	61	;'='
   357  00FF69  3D                 	db	61	;'='
   358  00FF6A  3E                 	db	62	;'>'
   359  00FF6B  20                 	db	32
   360  00FF6C  56                 	db	86	;'V'
   361  00FF6D  45                 	db	69	;'E'
   362  00FF6E  48                 	db	72	;'H'
   363  00FF6F  49                 	db	73	;'I'
   364  00FF70  43                 	db	67	;'C'
   365  00FF71  4C                 	db	76	;'L'
   366  00FF72  45                 	db	69	;'E'
   367  00FF73  20                 	db	32
   368  00FF74  20                 	db	32
   369  00FF75  4F                 	db	79	;'O'
   370  00FF76  46                 	db	70	;'F'
   371  00FF77  46                 	db	70	;'F'
   372  00FF78  20                 	db	32
   373  00FF79  3C                 	db	60	;'<'
   374  00FF7A  3D                 	db	61	;'='
   375  00FF7B  3D                 	db	61	;'='
   376  00FF7C  00                 	db	0
   377  00FF7D                     STR_6:
   378  00FF7D  3D                 	db	61	;'='
   379  00FF7E  3D                 	db	61	;'='
   380  00FF7F  3D                 	db	61	;'='
   381  00FF80  20                 	db	32
   382  00FF81  56                 	db	86	;'V'
   383  00FF82  45                 	db	69	;'E'
   384  00FF83  48                 	db	72	;'H'
   385  00FF84  49                 	db	73	;'I'
   386  00FF85  43                 	db	67	;'C'
   387  00FF86  4C                 	db	76	;'L'
   388  00FF87  45                 	db	69	;'E'
   389  00FF88  20                 	db	32
   390  00FF89  44                 	db	68	;'D'
   391  00FF8A  41                 	db	65	;'A'
   392  00FF8B  54                 	db	84	;'T'
   393  00FF8C  41                 	db	65	;'A'
   394  00FF8D  20                 	db	32
   395  00FF8E  3D                 	db	61	;'='
   396  00FF8F  3D                 	db	61	;'='
   397  00FF90  3D                 	db	61	;'='
   398  00FF91  00                 	db	0
   399  00FF92                     STR_1:
   400  00FF92  3D                 	db	61	;'='
   401  00FF93  3D                 	db	61	;'='
   402  00FF94  3D                 	db	61	;'='
   403  00FF95  3D                 	db	61	;'='
   404  00FF96  3D                 	db	61	;'='
   405  00FF97  3D                 	db	61	;'='
   406  00FF98  3D                 	db	61	;'='
   407  00FF99  3D                 	db	61	;'='
   408  00FF9A  3D                 	db	61	;'='
   409  00FF9B  3D                 	db	61	;'='
   410  00FF9C  3D                 	db	61	;'='
   411  00FF9D  3D                 	db	61	;'='
   412  00FF9E  3D                 	db	61	;'='
   413  00FF9F  3D                 	db	61	;'='
   414  00FFA0  3D                 	db	61	;'='
   415  00FFA1  3D                 	db	61	;'='
   416  00FFA2  3D                 	db	61	;'='
   417  00FFA3  3D                 	db	61	;'='
   418  00FFA4  3D                 	db	61	;'='
   419  00FFA5  3D                 	db	61	;'='
   420  00FFA6  00                 	db	0
   421  00FFA7                     STR_8:
   422  00FFA7  53                 	db	83	;'S'
   423  00FFA8  70                 	db	112	;'p'
   424  00FFA9  65                 	db	101	;'e'
   425  00FFAA  65                 	db	101	;'e'
   426  00FFAB  64                 	db	100	;'d'
   427  00FFAC  3A                 	db	58	;':'
   428  00FFAD  20                 	db	32
   429  00FFAE  30                 	db	48	;'0'
   430  00FFAF  2E                 	db	46
   431  00FFB0  30                 	db	48	;'0'
   432  00FFB1  30                 	db	48	;'0'
   433  00FFB2  20                 	db	32
   434  00FFB3  4B                 	db	75	;'K'
   435  00FFB4  6D                 	db	109	;'m'
   436  00FFB5  2F                 	db	47
   437  00FFB6  68                 	db	104	;'h'
   438  00FFB7  00                 	db	0
   439  00FFB8                     STR_9:
   440  00FFB8  50                 	db	80	;'P'
   441  00FFB9  61                 	db	97	;'a'
   442  00FFBA  72                 	db	114	;'r'
   443  00FFBB  6B                 	db	107	;'k'
   444  00FFBC  20                 	db	32
   445  00FFBD  61                 	db	97	;'a'
   446  00FFBE  73                 	db	115	;'s'
   447  00FFBF  73                 	db	115	;'s'
   448  00FFC0  69                 	db	105	;'i'
   449  00FFC1  73                 	db	115	;'s'
   450  00FFC2  74                 	db	116	;'t'
   451  00FFC3  3A                 	db	58	;':'
   452  00FFC4  20                 	db	32
   453  00FFC5  00                 	db	0
   454  00FFC6                     STR_7:
   455  00FFC6  44                 	db	68	;'D'
   456  00FFC7  69                 	db	105	;'i'
   457  00FFC8  72                 	db	114	;'r'
   458  00FFC9  65                 	db	101	;'e'
   459  00FFCA  63                 	db	99	;'c'
   460  00FFCB  74                 	db	116	;'t'
   461  00FFCC  69                 	db	105	;'i'
   462  00FFCD  6F                 	db	111	;'o'
   463  00FFCE  6E                 	db	110	;'n'
   464  00FFCF  3A                 	db	58	;':'
   465  00FFD0  20                 	db	32
   466  00FFD1  00                 	db	0
   467  00FFD2                     STR_13:
   468  00FFD2  4F                 	db	79	;'O'
   469  00FFD3  46                 	db	70	;'F'
   470  00FFD4  46                 	db	70	;'F'
   471  00FFD5  20                 	db	32
   472  00FFD6  20                 	db	32
   473  00FFD7  20                 	db	32
   474  00FFD8  20                 	db	32
   475  00FFD9  00                 	db	0
   476  00FFDA                     STR_14:
   477  00FFDA  53                 	db	83	;'S'
   478  00FFDB  45                 	db	69	;'E'
   479  00FFDC  41                 	db	65	;'A'
   480  00FFDD  52                 	db	82	;'R'
   481  00FFDE  43                 	db	67	;'C'
   482  00FFDF  48                 	db	72	;'H'
   483  00FFE0  20                 	db	32
   484  00FFE1  00                 	db	0
   485  00FFE2                     STR_15:
   486  00FFE2  50                 	db	80	;'P'
   487  00FFE3  41                 	db	65	;'A'
   488  00FFE4  52                 	db	82	;'R'
   489  00FFE5  4B                 	db	75	;'K'
   490  00FFE6  49                 	db	73	;'I'
   491  00FFE7  4E                 	db	78	;'N'
   492  00FFE8  47                 	db	71	;'G'
   493  00FFE9  00                 	db	0
   494  00FFEA                     STR_12:
   495  00FFEA  50                 	db	80	;'P'
   496  00FFEB  20                 	db	32
   497  00FFEC  20                 	db	32
   498  00FFED  20                 	db	32
   499  00FFEE  00                 	db	0
   500  00FFEF                     STR_10:
   501  00FFEF  46                 	db	70	;'F'
   502  00FFF0  57                 	db	87	;'W'
   503  00FFF1  44                 	db	68	;'D'
   504  00FFF2  20                 	db	32
   505  00FFF3  00                 	db	0
   506  00FFF4                     STR_11:
   507  00FFF4  42                 	db	66	;'B'
   508  00FFF5  4B                 	db	75	;'K'
   509  00FFF6  57                 	db	87	;'W'
   510  00FFF7  44                 	db	68	;'D'
   511  00FFF8  00                 	db	0
   512  00FFF9                     STR_5:
   513  00FFF9  25                 	db	37
   514  00FFFA  2E                 	db	46
   515  00FFFB  32                 	db	50	;'2'
   516  00FFFC  66                 	db	102	;'f'
   517  00FFFD  00                 	db	0
   518  0000                     
   519                           ; #config settings
   520  00FFFE  00                 	db	0	; dummy byte at the end
   521  0000                     
   522                           	psect	cinit
   523  015AFE                     __pcinit:
   524                           	opt stack 0
   525  015AFE                     start_initialization:
   526                           	opt stack 0
   527  015AFE                     __initialization:
   528                           	opt stack 0
   529                           
   530                           ; Clear objects allocated to BANK1 (35 bytes)
   531  015AFE  EE01  F000         	lfsr	0,__pbssBANK1
   532  015B02  0E23               	movlw	35
   533  015B04                     clear_0:
   534  015B04  6AEE               	clrf	postinc0,c
   535  015B06  06E8               	decf	wreg,f,c
   536  015B08  E1FD               	bnz	clear_0
   537                           
   538                           ; Clear objects allocated to BANK0 (32 bytes)
   539  015B0A  EE00  F0CC         	lfsr	0,__pbssBANK0
   540  015B0E  0E20               	movlw	32
   541  015B10                     clear_1:
   542  015B10  6AEE               	clrf	postinc0,c
   543  015B12  06E8               	decf	wreg,f,c
   544  015B14  E1FD               	bnz	clear_1
   545                           
   546                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   547  015B16  6A4C               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   548  015B18  6A4B               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   549                           
   550                           ; Clear objects allocated to COMRAM (44 bytes)
   551  015B1A  EE00  F001         	lfsr	0,__pbssCOMRAM
   552  015B1E  0E2C               	movlw	44
   553  015B20                     clear_2:
   554  015B20  6AEE               	clrf	postinc0,c
   555  015B22  06E8               	decf	wreg,f,c
   556  015B24  E1FD               	bnz	clear_2
   557                           
   558                           ; Initialize objects allocated to BANK0 (1 bytes)
   559                           ; load TBLPTR registers with __pidataBANK0
   560  015B26  0E16               	movlw	low __pidataBANK0
   561  015B28  6EF6               	movwf	tblptrl,c
   562  015B2A  0E5E               	movlw	high __pidataBANK0
   563  015B2C  6EF7               	movwf	tblptrh,c
   564  015B2E  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   565  015B30  6EF8               	movwf	tblptru,c
   566  015B32  0009               	tblrd		*+	;fetch initializer
   567  015B34  CFF5 F0EC          	movff	tablat,__pdataBANK0
   568  015B38                     end_of_initialization:
   569                           	opt stack 0
   570  015B38                     __end_of__initialization:
   571                           	opt stack 0
   572  015B38  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   573  015B3A  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   574  015B3C  0100               	movlb	0
   575  015B3E  EF02  F091         	goto	_main	;jump to C main() function
   576                           tblptru	equ	0xFF8
   577                           tblptrh	equ	0xFF7
   578                           tblptrl	equ	0xFF6
   579                           tablat	equ	0xFF5
   580                           postinc0	equ	0xFEE
   581                           wreg	equ	0xFE8
   582                           
   583                           	psect	bitbssCOMRAM
   584  000258                     __pbitbssCOMRAM:
   585                           	opt stack 0
   586  000258                     _AbsFlag:
   587                           	opt stack 0
   588  000258                     	ds	1
   589  000259                     _F1_switch:
   590                           	opt stack 0
   591  000259                     	ds	1
   592  00025A                     _F2_switch:
   593                           	opt stack 0
   594  00025A                     	ds	1
   595  00025B                     _MotoreFlag:
   596                           	opt stack 0
   597  00025B                     	ds	1
   598  00025C                     _RTR_Flag:
   599                           	opt stack 0
   600  00025C                     	ds	1
   601  00025D                     _SterzoFlag:
   602                           	opt stack 0
   603  00025D                     	ds	1
   604  00025E                     _display_refresh:
   605                           	opt stack 0
   606  00025E                     	ds	1
   607  00025F                     _newMessageCan:
   608                           	opt stack 0
   609  00025F                     	ds	1
   610  000260                     _power_switch:
   611                           	opt stack 0
   612  000260                     	ds	1
   613  000261                     _wait_low_1:
   614                           	opt stack 0
   615  000261                     	ds	1
   616  000262                     _wait_low_2:
   617                           	opt stack 0
   618  000262                     	ds	1
   619  000263                     _wait_low_3:
   620                           	opt stack 0
   621  000263                     	ds	1
   622  000264                     _y:
   623                           	opt stack 0
   624  000264                     	ds	1
   625                           tblptru	equ	0xFF8
   626                           tblptrh	equ	0xFF7
   627                           tblptrl	equ	0xFF6
   628                           tablat	equ	0xFF5
   629                           postinc0	equ	0xFEE
   630                           wreg	equ	0xFE8
   631                           
   632                           	psect	bssCOMRAM
   633  000001                     __pbssCOMRAM:
   634                           	opt stack 0
   635  000001                     _data_speed_rx:
   636                           	opt stack 0
   637  000001                     	ds	7
   638  000008                     LCD_write_integer@F17272:
   639                           	opt stack 0
   640  000008                     	ds	6
   641  00000E                     _actual_speed_kmh:
   642                           	opt stack 0
   643  00000E                     	ds	4
   644  000012                     _id:
   645                           	opt stack 0
   646  000012                     	ds	4
   647  000016                     _pr_time_3:
   648                           	opt stack 0
   649  000016                     	ds	4
   650  00001A                     _pr_time_4:
   651                           	opt stack 0
   652  00001A                     	ds	4
   653  00001E                     _pr_time_5:
   654                           	opt stack 0
   655  00001E                     	ds	4
   656  000022                     _time_counter:
   657                           	opt stack 0
   658  000022                     	ds	4
   659  000026                     _left_speed:
   660                           	opt stack 0
   661  000026                     	ds	2
   662  000028                     _right_speed:
   663                           	opt stack 0
   664  000028                     	ds	2
   665  00002A                     _battery:
   666                           	opt stack 0
   667  00002A                     	ds	1
   668  00002B                     _set_steering:
   669                           	opt stack 0
   670  00002B                     	ds	1
   671  00002C                     _data:
   672                           	opt stack 0
   673  00002C                     	ds	1
   674                           tblptru	equ	0xFF8
   675                           tblptrh	equ	0xFF7
   676                           tblptrl	equ	0xFF6
   677                           tablat	equ	0xFF5
   678                           postinc0	equ	0xFEE
   679                           wreg	equ	0xFE8
   680                           
   681                           	psect	bssBANK0
   682  0000CC                     __pbssBANK0:
   683                           	opt stack 0
   684  0000CC                     _JoystickConstants:
   685                           	opt stack 0
   686  0000CC                     	ds	8
   687  0000D4                     _pr_time_1:
   688                           	opt stack 0
   689  0000D4                     	ds	4
   690  0000D8                     _pr_time_2:
   691                           	opt stack 0
   692  0000D8                     	ds	4
   693  0000DC                     _JoystickValues:
   694                           	opt stack 0
   695  0000DC                     	ds	2
   696  0000DE                     _actual_speed:
   697                           	opt stack 0
   698  0000DE                     	ds	2
   699  0000E0                     _clock_counter_reference:
   700                           	opt stack 0
   701  0000E0                     	ds	2
   702  0000E2                     _set_speed:
   703                           	opt stack 0
   704  0000E2                     	ds	2
   705  0000E4                     _dir:
   706                           	opt stack 0
   707  0000E4                     	ds	1
   708  0000E5                     _parking_state:
   709                           	opt stack 0
   710  0000E5                     	ds	1
   711  0000E6                     _switch_position:
   712                           	opt stack 0
   713  0000E6                     	ds	1
   714  0000E7                     _x:
   715                           	opt stack 0
   716  0000E7                     	ds	1
   717  0000E8                     _z:
   718                           	opt stack 0
   719  0000E8                     	ds	1
   720  0000E9                     _data_brake:
   721                           	opt stack 0
   722  0000E9                     	ds	1
   723  0000EA                     _data_speed:
   724                           	opt stack 0
   725  0000EA                     	ds	1
   726  0000EB                     _data_steering:
   727                           	opt stack 0
   728  0000EB                     	ds	1
   729                           tblptru	equ	0xFF8
   730                           tblptrh	equ	0xFF7
   731                           tblptrl	equ	0xFF6
   732                           tablat	equ	0xFF5
   733                           postinc0	equ	0xFEE
   734                           wreg	equ	0xFE8
   735                           
   736                           	psect	dataBANK0
   737  0000EC                     __pdataBANK0:
   738                           	opt stack 0
   739  0000EC                     _delay_quartz_frequency_value:
   740                           	opt stack 0
   741  0000EC                     	ds	1
   742                           tblptru	equ	0xFF8
   743                           tblptrh	equ	0xFF7
   744                           tblptrl	equ	0xFF6
   745                           tablat	equ	0xFF5
   746                           postinc0	equ	0xFEE
   747                           wreg	equ	0xFE8
   748                           
   749                           	psect	bssBANK1
   750  000100                     __pbssBANK1:
   751                           	opt stack 0
   752  000100                     _msg:
   753                           	opt stack 0
   754  000100                     	ds	15
   755  00010F                     _str:
   756                           	opt stack 0
   757  00010F                     	ds	12
   758  00011B                     _park_assist_state:
   759                           	opt stack 0
   760  00011B                     	ds	8
   761                           tblptru	equ	0xFF8
   762                           tblptrh	equ	0xFF7
   763                           tblptrl	equ	0xFF6
   764                           tablat	equ	0xFF5
   765                           postinc0	equ	0xFEE
   766                           wreg	equ	0xFE8
   767                           
   768                           	psect	cstackBANK1
   769  000123                     __pcstackBANK1:
   770                           	opt stack 0
   771  000123                     ??_sprintf:
   772                           
   773                           ; 0 bytes @ 0x0
   774  000123                     	ds	2
   775  000125                     _sprintf$4211:
   776                           	opt stack 0
   777                           
   778                           ; 4 bytes @ 0x2
   779  000125                     	ds	4
   780  000129                     sprintf@ap:
   781                           	opt stack 0
   782                           
   783                           ; 2 bytes @ 0x6
   784  000129                     	ds	2
   785  00012B                     sprintf@flag:
   786                           	opt stack 0
   787                           
   788                           ; 2 bytes @ 0x8
   789  00012B                     	ds	2
   790  00012D                     sprintf@val:
   791                           	opt stack 0
   792                           
   793                           ; 4 bytes @ 0xA
   794  00012D                     	ds	4
   795  000131                     sprintf@exp:
   796                           	opt stack 0
   797                           
   798                           ; 2 bytes @ 0xE
   799  000131                     	ds	2
   800  000133                     sprintf@tmpval:
   801                           	opt stack 0
   802                           
   803                           ; 4 bytes @ 0x10
   804  000133                     	ds	4
   805  000137                     sprintf@prec:
   806                           	opt stack 0
   807                           
   808                           ; 2 bytes @ 0x14
   809  000137                     	ds	2
   810  000139                     sprintf@fval:
   811                           	opt stack 0
   812                           
   813                           ; 4 bytes @ 0x16
   814  000139                     	ds	4
   815  00013D                     sprintf@c:
   816                           	opt stack 0
   817                           
   818                           ; 1 bytes @ 0x1A
   819  00013D                     	ds	1
   820  00013E                     ??_main:
   821                           
   822                           ; 0 bytes @ 0x1B
   823  00013E                     	ds	8
   824                           tblptru	equ	0xFF8
   825                           tblptrh	equ	0xFF7
   826                           tblptrl	equ	0xFF6
   827                           tablat	equ	0xFF5
   828                           postinc0	equ	0xFEE
   829                           wreg	equ	0xFE8
   830                           
   831                           	psect	cstackBANK0
   832  000060                     __pcstackBANK0:
   833                           	opt stack 0
   834  000060                     i2CANsendMessage@tamp:
   835                           	opt stack 0
   836                           
   837                           ; 4 bytes @ 0x0
   838  000060                     	ds	4
   839  000064                     ??_ISR_alta:
   840                           
   841                           ; 0 bytes @ 0x4
   842  000064                     	ds	14
   843  000072                     ??_Joystick_Polling:
   844  000072                     ??_CAN_interpreter:
   845  000072                     ??_isdigit:
   846  000072                     ?___wmul:
   847                           	opt stack 0
   848  000072                     ?___awmod:
   849                           	opt stack 0
   850  000072                     ?__tdiv_to_l_:
   851                           	opt stack 0
   852  000072                     ?__div_to_l_:
   853                           	opt stack 0
   854  000072                     ?___lldiv:
   855                           	opt stack 0
   856  000072                     ?___llmod:
   857                           	opt stack 0
   858  000072                     ?___xxtofl:
   859                           	opt stack 0
   860  000072                     CANOperationMode@mode:
   861                           	opt stack 0
   862  000072                     _CANisTxReady$3235:
   863                           	opt stack 0
   864  000072                     delay_set_quartz@frequency:
   865                           	opt stack 0
   866  000072                     ___wmul@multiplier:
   867                           	opt stack 0
   868  000072                     ___awmod@dividend:
   869                           	opt stack 0
   870  000072                     CANsendMessage@identifier:
   871                           	opt stack 0
   872  000072                     CANSetMask@mask:
   873                           	opt stack 0
   874  000072                     CANSetFilter@filter:
   875                           	opt stack 0
   876  000072                     __div_to_l_@f1:
   877                           	opt stack 0
   878  000072                     ___flge@ff1:
   879                           	opt stack 0
   880  000072                     __tdiv_to_l_@f1:
   881                           	opt stack 0
   882  000072                     ___lldiv@dividend:
   883                           	opt stack 0
   884  000072                     ___llmod@dividend:
   885                           	opt stack 0
   886  000072                     ___xxtofl@val:
   887                           	opt stack 0
   888                           
   889                           ; 4 bytes @ 0x12
   890  000072                     	ds	1
   891  000073                     Joystick_Polling@i:
   892                           	opt stack 0
   893  000073                     _isdigit$3793:
   894                           	opt stack 0
   895                           
   896                           ; 1 bytes @ 0x13
   897  000073                     	ds	1
   898  000074                     isdigit@c:
   899                           	opt stack 0
   900  000074                     ___wmul@multiplicand:
   901                           	opt stack 0
   902  000074                     ___awmod@divisor:
   903                           	opt stack 0
   904                           
   905                           ; 2 bytes @ 0x14
   906  000074                     	ds	2
   907  000076                     ??___xxtofl:
   908  000076                     CANSetMask@type:
   909                           	opt stack 0
   910  000076                     CANSetFilter@type:
   911                           	opt stack 0
   912  000076                     ___awmod@counter:
   913                           	opt stack 0
   914  000076                     CANsendMessage@data:
   915                           	opt stack 0
   916  000076                     ___wmul@product:
   917                           	opt stack 0
   918  000076                     __div_to_l_@f2:
   919                           	opt stack 0
   920  000076                     ___flge@ff2:
   921                           	opt stack 0
   922  000076                     __tdiv_to_l_@f2:
   923                           	opt stack 0
   924  000076                     ___lldiv@divisor:
   925                           	opt stack 0
   926  000076                     ___llmod@divisor:
   927                           	opt stack 0
   928                           
   929                           ; 4 bytes @ 0x16
   930  000076                     	ds	1
   931  000077                     ??_CANSetMask:
   932  000077                     ??_CANSetFilter:
   933  000077                     ___awmod@sign:
   934                           	opt stack 0
   935                           
   936                           ; 1 bytes @ 0x17
   937  000077                     	ds	1
   938  000078                     ?___awdiv:
   939                           	opt stack 0
   940  000078                     CANsendMessage@dataLength:
   941                           	opt stack 0
   942  000078                     delay_ms@value_ms:
   943                           	opt stack 0
   944  000078                     ___awdiv@dividend:
   945                           	opt stack 0
   946                           
   947                           ; 2 bytes @ 0x18
   948  000078                     	ds	1
   949  000079                     CANsendMessage@flags:
   950                           	opt stack 0
   951                           
   952                           ; 1 bytes @ 0x19
   953  000079                     	ds	1
   954  00007A                     ??__tdiv_to_l_:
   955  00007A                     ??_CANsendMessage:
   956  00007A                     ??___flge:
   957  00007A                     LCD_send_command@D2:
   958                           	opt stack 0
   959  00007A                     ___llmod@counter:
   960                           	opt stack 0
   961  00007A                     ___xxtofl@sign:
   962                           	opt stack 0
   963  00007A                     ___awdiv@divisor:
   964                           	opt stack 0
   965  00007A                     __div_to_l_@quot:
   966                           	opt stack 0
   967  00007A                     ___lldiv@quotient:
   968                           	opt stack 0
   969                           
   970                           ; 4 bytes @ 0x1A
   971  00007A                     	ds	1
   972  00007B                     CANSetMask@numBuffer:
   973                           	opt stack 0
   974  00007B                     CANSetFilter@numBuffer:
   975                           	opt stack 0
   976  00007B                     LCD_send_command@D1:
   977                           	opt stack 0
   978  00007B                     ___xxtofl@exp:
   979                           	opt stack 0
   980                           
   981                           ; 1 bytes @ 0x1B
   982  00007B                     	ds	1
   983  00007C                     LCD_send_command@D0:
   984                           	opt stack 0
   985  00007C                     ___awdiv@counter:
   986                           	opt stack 0
   987  00007C                     CANSetMask@tamp:
   988                           	opt stack 0
   989  00007C                     CANSetFilter@tamp:
   990                           	opt stack 0
   991  00007C                     ___xxtofl@arg:
   992                           	opt stack 0
   993                           
   994                           ; 4 bytes @ 0x1C
   995  00007C                     	ds	1
   996  00007D                     LCD_send_command@D3:
   997                           	opt stack 0
   998  00007D                     ___awdiv@sign:
   999                           	opt stack 0
  1000  00007D                     __tdiv_to_l_@quot:
  1001                           	opt stack 0
  1002                           
  1003                           ; 4 bytes @ 0x1D
  1004  00007D                     	ds	1
  1005  00007E                     LCD_shift_cursor@number_of_shift:
  1006                           	opt stack 0
  1007  00007E                     LCD_goto_line@line:
  1008                           	opt stack 0
  1009  00007E                     LCD_write_char@D3:
  1010                           	opt stack 0
  1011  00007E                     LCD_cursor@blinking:
  1012                           	opt stack 0
  1013  00007E                     __div_to_l_@cntr:
  1014                           	opt stack 0
  1015  00007E                     ___lldiv@counter:
  1016                           	opt stack 0
  1017  00007E                     ___awdiv@quotient:
  1018                           	opt stack 0
  1019  00007E                     CANsendMessage@tamp:
  1020                           	opt stack 0
  1021                           
  1022                           ; 4 bytes @ 0x1E
  1023  00007E                     	ds	1
  1024  00007F                     LCD_shift_cursor@shift:
  1025                           	opt stack 0
  1026  00007F                     LCD_write_char@D2:
  1027                           	opt stack 0
  1028  00007F                     LCD_cursor@active:
  1029                           	opt stack 0
  1030  00007F                     __div_to_l_@exp1:
  1031                           	opt stack 0
  1032                           
  1033                           ; 1 bytes @ 0x1F
  1034  00007F                     	ds	1
  1035  000080                     ?___fldiv:
  1036                           	opt stack 0
  1037  000080                     ?___flmul:
  1038                           	opt stack 0
  1039  000080                     CANInitialize@phaseSeg1:
  1040                           	opt stack 0
  1041  000080                     LCD_shift_cursor@i:
  1042                           	opt stack 0
  1043  000080                     LCD_write_char@D1:
  1044                           	opt stack 0
  1045  000080                     LCD_initialize@quartz_frequency:
  1046                           	opt stack 0
  1047  000080                     ___fldiv@b:
  1048                           	opt stack 0
  1049  000080                     ___flmul@b:
  1050                           	opt stack 0
  1051                           
  1052                           ; 4 bytes @ 0x20
  1053  000080                     	ds	1
  1054  000081                     CANInitialize@phaseSeg2:
  1055                           	opt stack 0
  1056  000081                     LCD_goto_xy@y:
  1057                           	opt stack 0
  1058  000081                     LCD_write_char@D0:
  1059                           	opt stack 0
  1060  000081                     __tdiv_to_l_@cntr:
  1061                           	opt stack 0
  1062                           
  1063                           ; 1 bytes @ 0x21
  1064  000081                     	ds	1
  1065  000082                     CANInitialize@SJW:
  1066                           	opt stack 0
  1067  000082                     LCD_goto_xy@x:
  1068                           	opt stack 0
  1069  000082                     LCD_write_char@value:
  1070                           	opt stack 0
  1071  000082                     __tdiv_to_l_@exp1:
  1072                           	opt stack 0
  1073                           
  1074                           ; 1 bytes @ 0x22
  1075  000082                     	ds	1
  1076  000083                     CANInitialize@BRP:
  1077                           	opt stack 0
  1078  000083                     LCD_write_message@buffer:
  1079                           	opt stack 0
  1080  000083                     LCD_write_string@buffer:
  1081                           	opt stack 0
  1082                           
  1083                           ; 2 bytes @ 0x23
  1084  000083                     	ds	1
  1085  000084                     CANInitialize@flags:
  1086                           	opt stack 0
  1087  000084                     ___fldiv@a:
  1088                           	opt stack 0
  1089  000084                     ___flmul@a:
  1090                           	opt stack 0
  1091                           
  1092                           ; 4 bytes @ 0x24
  1093  000084                     	ds	1
  1094  000085                     ??_CANInitialize:
  1095  000085                     
  1096                           ; 0 bytes @ 0x25
  1097  000085                     	ds	3
  1098  000088                     ??___fldiv:
  1099  000088                     ??___flmul:
  1100                           
  1101                           ; 0 bytes @ 0x28
  1102  000088                     	ds	1
  1103  000089                     CANInitialize@propSeg:
  1104                           	opt stack 0
  1105                           
  1106                           ; 1 bytes @ 0x29
  1107  000089                     	ds	1
  1108  00008A                     CANInitialize@FilterConfig1:
  1109                           	opt stack 0
  1110                           
  1111                           ; 1 bytes @ 0x2A
  1112  00008A                     	ds	1
  1113  00008B                     CANInitialize@FilterConfig2:
  1114                           	opt stack 0
  1115                           
  1116                           ; 1 bytes @ 0x2B
  1117  00008B                     	ds	1
  1118  00008C                     ___fldiv@sign:
  1119                           	opt stack 0
  1120  00008C                     ___flmul@sign:
  1121                           	opt stack 0
  1122                           
  1123                           ; 1 bytes @ 0x2C
  1124  00008C                     	ds	1
  1125  00008D                     ___flmul@aexp:
  1126                           	opt stack 0
  1127  00008D                     ___fldiv@rem:
  1128                           	opt stack 0
  1129                           
  1130                           ; 4 bytes @ 0x2D
  1131  00008D                     	ds	1
  1132  00008E                     ___flmul@grs:
  1133                           	opt stack 0
  1134                           
  1135                           ; 4 bytes @ 0x2E
  1136  00008E                     	ds	3
  1137  000091                     ___fldiv@new_exp:
  1138                           	opt stack 0
  1139                           
  1140                           ; 2 bytes @ 0x31
  1141  000091                     	ds	1
  1142  000092                     ___flmul@bexp:
  1143                           	opt stack 0
  1144                           
  1145                           ; 1 bytes @ 0x32
  1146  000092                     	ds	1
  1147  000093                     ___fldiv@grs:
  1148                           	opt stack 0
  1149  000093                     ___flmul@prod:
  1150                           	opt stack 0
  1151                           
  1152                           ; 4 bytes @ 0x33
  1153  000093                     	ds	4
  1154  000097                     ___fldiv@bexp:
  1155                           	opt stack 0
  1156  000097                     ___flmul@temp:
  1157                           	opt stack 0
  1158                           
  1159                           ; 2 bytes @ 0x37
  1160  000097                     	ds	1
  1161  000098                     ___fldiv@aexp:
  1162                           	opt stack 0
  1163                           
  1164                           ; 1 bytes @ 0x38
  1165  000098                     	ds	1
  1166  000099                     ?_fround:
  1167                           	opt stack 0
  1168  000099                     ?_scale:
  1169                           	opt stack 0
  1170  000099                     ?___flneg:
  1171                           	opt stack 0
  1172  000099                     ___flneg@f1:
  1173                           	opt stack 0
  1174                           
  1175                           ; 4 bytes @ 0x39
  1176  000099                     	ds	4
  1177  00009D                     _fround$4209:
  1178                           	opt stack 0
  1179  00009D                     _scale$4210:
  1180                           	opt stack 0
  1181                           
  1182                           ; 4 bytes @ 0x3D
  1183  00009D                     	ds	4
  1184  0000A1                     scale@scl:
  1185                           	opt stack 0
  1186  0000A1                     _fround$4208:
  1187                           	opt stack 0
  1188                           
  1189                           ; 4 bytes @ 0x41
  1190  0000A1                     	ds	4
  1191  0000A5                     fround@prec:
  1192                           	opt stack 0
  1193                           
  1194                           ; 1 bytes @ 0x45
  1195  0000A5                     	ds	1
  1196  0000A6                     ?___fladd:
  1197                           	opt stack 0
  1198  0000A6                     ___fladd@b:
  1199                           	opt stack 0
  1200                           
  1201                           ; 4 bytes @ 0x46
  1202  0000A6                     	ds	4
  1203  0000AA                     ___fladd@a:
  1204                           	opt stack 0
  1205                           
  1206                           ; 4 bytes @ 0x4A
  1207  0000AA                     	ds	4
  1208  0000AE                     ??___fladd:
  1209                           
  1210                           ; 0 bytes @ 0x4E
  1211  0000AE                     	ds	8
  1212  0000B6                     ___fladd@signs:
  1213                           	opt stack 0
  1214                           
  1215                           ; 1 bytes @ 0x56
  1216  0000B6                     	ds	1
  1217  0000B7                     ___fladd@aexp:
  1218                           	opt stack 0
  1219                           
  1220                           ; 1 bytes @ 0x57
  1221  0000B7                     	ds	1
  1222  0000B8                     ___fladd@bexp:
  1223                           	opt stack 0
  1224                           
  1225                           ; 1 bytes @ 0x58
  1226  0000B8                     	ds	1
  1227  0000B9                     ___fladd@grs:
  1228                           	opt stack 0
  1229                           
  1230                           ; 1 bytes @ 0x59
  1231  0000B9                     	ds	1
  1232  0000BA                     ?___flsub:
  1233                           	opt stack 0
  1234  0000BA                     ?___fltol:
  1235                           	opt stack 0
  1236  0000BA                     ___fltol@f1:
  1237                           	opt stack 0
  1238  0000BA                     ___flsub@b:
  1239                           	opt stack 0
  1240                           
  1241                           ; 4 bytes @ 0x5A
  1242  0000BA                     	ds	4
  1243  0000BE                     ??___fltol:
  1244  0000BE                     ___flsub@a:
  1245                           	opt stack 0
  1246                           
  1247                           ; 4 bytes @ 0x5E
  1248  0000BE                     	ds	4
  1249  0000C2                     ___fltol@sign1:
  1250                           	opt stack 0
  1251                           
  1252                           ; 1 bytes @ 0x62
  1253  0000C2                     	ds	1
  1254  0000C3                     ___fltol@exp1:
  1255                           	opt stack 0
  1256                           
  1257                           ; 1 bytes @ 0x63
  1258  0000C3                     	ds	1
  1259  0000C4                     ?_sprintf:
  1260                           	opt stack 0
  1261  0000C4                     sprintf@sp:
  1262                           	opt stack 0
  1263                           
  1264                           ; 2 bytes @ 0x64
  1265  0000C4                     	ds	2
  1266  0000C6                     sprintf@f:
  1267                           	opt stack 0
  1268                           
  1269                           ; 2 bytes @ 0x66
  1270  0000C6                     	ds	6
  1271  0000CC                     tblptru	equ	0xFF8
  1272                           tblptrh	equ	0xFF7
  1273                           tblptrl	equ	0xFF6
  1274                           tablat	equ	0xFF5
  1275                           postinc0	equ	0xFEE
  1276                           wreg	equ	0xFE8
  1277                           
  1278                           ; 0 bytes @ 0x6C
  1279                           
  1280                           	psect	cstackCOMRAM
  1281  00002D                     __pcstackCOMRAM:
  1282                           	opt stack 0
  1283  00002D                     ??_ISR_bassa:
  1284  00002D                     
  1285                           ; 1 bytes @ 0x0
  1286  00002D                     	ds	17
  1287  00003E                     _CANisRxReady$3237:
  1288                           	opt stack 0
  1289  00003E                     i2_CANisTxReady$3235:
  1290                           	opt stack 0
  1291  00003E                     CANreceiveMessage@msg:
  1292                           	opt stack 0
  1293  00003E                     i2CANsendMessage@identifier:
  1294                           	opt stack 0
  1295                           
  1296                           ; 4 bytes @ 0x11
  1297  00003E                     	ds	2
  1298  000040                     ??_CANreceiveMessage:
  1299                           
  1300                           ; 0 bytes @ 0x13
  1301  000040                     	ds	2
  1302  000042                     i2CANsendMessage@data:
  1303                           	opt stack 0
  1304                           
  1305                           ; 2 bytes @ 0x15
  1306  000042                     	ds	2
  1307  000044                     i2CANsendMessage@dataLength:
  1308                           	opt stack 0
  1309                           
  1310                           ; 1 bytes @ 0x17
  1311  000044                     	ds	1
  1312  000045                     i2CANsendMessage@flags:
  1313                           	opt stack 0
  1314                           
  1315                           ; 1 bytes @ 0x18
  1316  000045                     	ds	1
  1317  000046                     ??i2_CANsendMessage:
  1318                           
  1319                           ; 0 bytes @ 0x19
  1320  000046                     	ds	2
  1321  000048                     CANreceiveMessage@error:
  1322                           	opt stack 0
  1323                           
  1324                           ; 1 bytes @ 0x1B
  1325  000048                     	ds	1
  1326  000049                     CANreceiveMessage@tamp:
  1327                           	opt stack 0
  1328                           
  1329                           ; 1 bytes @ 0x1C
  1330  000049                     	ds	1
  1331  00004A                     ISR_alta@i:
  1332                           	opt stack 0
  1333                           
  1334                           ; 1 bytes @ 0x1D
  1335  00004A                     	ds	1
  1336                           tblptru	equ	0xFF8
  1337                           tblptrh	equ	0xFF7
  1338                           tblptrl	equ	0xFF6
  1339                           tablat	equ	0xFF5
  1340                           postinc0	equ	0xFEE
  1341                           wreg	equ	0xFE8
  1342                           
  1343 ;;
  1344 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1345 ;;
  1346 ;; *************** function _main *****************
  1347 ;; Defined at:
  1348 ;;		line 147 in file "RemoteCan.c"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;		None
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;		None
  1353 ;; Return value:  Size  Location     Type
  1354 ;;		None               void
  1355 ;; Registers used:
  1356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1357 ;; Tracked objects:
  1358 ;;		On entry : 0/0
  1359 ;;		On exit  : 0/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1364 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1365 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1366 ;;Total ram usage:        8 bytes
  1367 ;; Hardware stack levels required when called:   10
  1368 ;; This function calls:
  1369 ;;		_CAN_Send
  1370 ;;		_CAN_interpreter
  1371 ;;		_CANisTxReady
  1372 ;;		_CANsendMessage
  1373 ;;		_F1_Button_Polling
  1374 ;;		_F2_Button_Polling
  1375 ;;		_Joystick_Polling
  1376 ;;		_LCD_Handler
  1377 ;;		_LCD_goto_line
  1378 ;;		_LCD_initialize
  1379 ;;		_LCD_write_message
  1380 ;;		_PWR_Button_Polling
  1381 ;;		___fladd
  1382 ;;		___flmul
  1383 ;;		___flneg
  1384 ;;		___fltol
  1385 ;;		___xxtofl
  1386 ;;		_board_initialization
  1387 ;;		_delay_ms
  1388 ;; This function is called by:
  1389 ;;		Startup code after reset
  1390 ;; This function uses a non-reentrant model
  1391 ;;
  1392                           
  1393                           	psect	text0
  1394  012204                     __ptext0:
  1395                           	opt stack 0
  1396  012204                     _main:
  1397                           	opt stack 21
  1398                           
  1399                           ;RemoteCan.c: 148: board_initialization();
  1400                           
  1401                           ;incstack = 0
  1402  012204  ECD0  F0AB         	call	_board_initialization	;wreg free
  1403                           
  1404                           ;RemoteCan.c: 156: JoystickConstants[0] = 0.703;
  1405  012208  0ECF               	movlw	207
  1406  01220A  0100               	movlb	0	; () banked
  1407  01220C  6FCC               	movwf	_JoystickConstants& (0+255),b	;volatile
  1408  01220E  0EF7               	movlw	247
  1409  012210  6FCD               	movwf	(_JoystickConstants+1)& (0+255),b	;volatile
  1410  012212  0E33               	movlw	51
  1411  012214  6FCE               	movwf	(_JoystickConstants+2)& (0+255),b	;volatile
  1412  012216  0E3F               	movlw	63
  1413  012218  6FCF               	movwf	(_JoystickConstants+3)& (0+255),b	;volatile
  1414                           
  1415                           ; BSR set to: 0
  1416                           ;RemoteCan.c: 157: JoystickConstants[1] = 10;
  1417  01221A  0E00               	movlw	0
  1418  01221C  0100               	movlb	0	; () banked
  1419  01221E  6FD0               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  1420  012220  0E00               	movlw	0
  1421  012222  6FD1               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  1422  012224  0E20               	movlw	32
  1423  012226  6FD2               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  1424  012228  0E41               	movlw	65
  1425  01222A  6FD3               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  1426                           
  1427                           ; BSR set to: 0
  1428                           ;RemoteCan.c: 159: display_refresh = 1;
  1429  01222C  8C4B               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  1430  01222E                     l8884:
  1431                           
  1432                           ;RemoteCan.c: 163: PWR_Button_Polling();
  1433  01222E  ECB8  F0AE         	call	_PWR_Button_Polling	;wreg free
  1434                           
  1435                           ;RemoteCan.c: 164: F1_Button_Polling();
  1436  012232  ECE2  F0AE         	call	_F1_Button_Polling	;wreg free
  1437                           
  1438                           ;RemoteCan.c: 165: F2_Button_Polling();
  1439  012236  ECD4  F0AE         	call	_F2_Button_Polling	;wreg free
  1440                           
  1441                           ;RemoteCan.c: 168: if (power_switch == 0) {
  1442  01223A  B04C               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1443  01223C  D09B               	goto	l8926
  1444                           
  1445                           ;RemoteCan.c: 169: dir = 1;
  1446  01223E  0E01               	movlw	1
  1447  012240  0100               	movlb	0	; () banked
  1448  012242  6FE4               	movwf	_dir& (0+255),b	;volatile
  1449                           
  1450                           ;RemoteCan.c: 170: set_speed = 0;
  1451  012244  0E00               	movlw	0
  1452  012246  0100               	movlb	0	; () banked
  1453  012248  6FE3               	movwf	(_set_speed+1)& (0+255),b	;volatile
  1454  01224A  0E00               	movlw	0
  1455  01224C  6FE2               	movwf	_set_speed& (0+255),b	;volatile
  1456                           
  1457                           ;RemoteCan.c: 171: data_steering [0] = 90;
  1458  01224E  0E5A               	movlw	90
  1459  012250  0100               	movlb	0	; () banked
  1460  012252  6FEB               	movwf	_data_steering& (0+255),b
  1461                           
  1462                           ;RemoteCan.c: 172: data_brake [0] = 0;
  1463  012254  0E00               	movlw	0
  1464  012256  0100               	movlb	0	; () banked
  1465  012258  6FE9               	movwf	_data_brake& (0+255),b
  1466                           
  1467                           ;RemoteCan.c: 173: data_brake [1] = 1;
  1468  01225A  0E01               	movlw	1
  1469  01225C  0100               	movlb	0	; () banked
  1470  01225E  6FEA               	movwf	(_data_brake+1)& (0+255),b
  1471                           
  1472                           ; BSR set to: 0
  1473                           ;RemoteCan.c: 174: CAN_Send();
  1474  012260  EC1E  F0AB         	call	_CAN_Send	;wreg free
  1475                           
  1476                           ;RemoteCan.c: 175: LCD_initialize(16);
  1477  012264  0E10               	movlw	16
  1478  012266  EC08  F0A8         	call	_LCD_initialize
  1479                           
  1480                           ;RemoteCan.c: 176: LCD_goto_line(1);
  1481  01226A  0E01               	movlw	1
  1482  01226C  ECEB  F0A9         	call	_LCD_goto_line
  1483                           
  1484                           ;RemoteCan.c: 177: LCD_write_message("====================");
  1485  012270  0E92               	movlw	low STR_1
  1486  012272  0100               	movlb	0	; () banked
  1487  012274  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  1488  012276  0EFF               	movlw	high STR_1
  1489  012278  0100               	movlb	0	; () banked
  1490  01227A  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1491  01227C  EC12  F0AE         	call	_LCD_write_message	;wreg free
  1492                           
  1493                           ;RemoteCan.c: 178: LCD_goto_line(2);
  1494  012280  0E02               	movlw	2
  1495  012282  ECEB  F0A9         	call	_LCD_goto_line
  1496                           
  1497                           ;RemoteCan.c: 179: LCD_write_message("==> VEHICLE  OFF <==");
  1498  012286  0E68               	movlw	low STR_2
  1499  012288  0100               	movlb	0	; () banked
  1500  01228A  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  1501  01228C  0EFF               	movlw	high STR_2
  1502  01228E  0100               	movlb	0	; () banked
  1503  012290  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1504  012292  EC12  F0AE         	call	_LCD_write_message	;wreg free
  1505                           
  1506                           ;RemoteCan.c: 180: LCD_goto_line(3);
  1507  012296  0E03               	movlw	3
  1508  012298  ECEB  F0A9         	call	_LCD_goto_line
  1509                           
  1510                           ;RemoteCan.c: 181: LCD_write_message("  Press the button  ");
  1511  01229C  0E53               	movlw	low STR_3
  1512  01229E  0100               	movlb	0	; () banked
  1513  0122A0  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  1514  0122A2  0EFF               	movlw	high STR_3
  1515  0122A4  0100               	movlb	0	; () banked
  1516  0122A6  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1517  0122A8  EC12  F0AE         	call	_LCD_write_message	;wreg free
  1518                           
  1519                           ;RemoteCan.c: 182: LCD_goto_line(4);
  1520  0122AC  0E04               	movlw	4
  1521  0122AE  ECEB  F0A9         	call	_LCD_goto_line
  1522                           
  1523                           ;RemoteCan.c: 183: LCD_write_message("====================");
  1524  0122B2  0E92               	movlw	low STR_1
  1525  0122B4  0100               	movlb	0	; () banked
  1526  0122B6  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  1527  0122B8  0EFF               	movlw	high STR_1
  1528  0122BA  0100               	movlb	0	; () banked
  1529  0122BC  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1530  0122BE  EC12  F0AE         	call	_LCD_write_message	;wreg free
  1531                           
  1532                           ;RemoteCan.c: 184: while (power_switch == 0) {
  1533  0122C2  D054               	goto	l8924
  1534  0122C4                     l8914:
  1535                           
  1536                           ;RemoteCan.c: 185: if ((time_counter - pr_time_1) >= 30) {
  1537  0122C4  C0D4  F13E         	movff	_pr_time_1,??_main	;volatile
  1538  0122C8  C0D5  F13F         	movff	_pr_time_1+1,??_main+1	;volatile
  1539  0122CC  C0D6  F140         	movff	_pr_time_1+2,??_main+2	;volatile
  1540  0122D0  C0D7  F141         	movff	_pr_time_1+3,??_main+3	;volatile
  1541  0122D4  0101               	movlb	1	; () banked
  1542  0122D6  1F3E               	comf	??_main& (0+255),f,b
  1543  0122D8  1F3F               	comf	(??_main+1)& (0+255),f,b
  1544  0122DA  1F40               	comf	(??_main+2)& (0+255),f,b
  1545  0122DC  1F41               	comf	(??_main+3)& (0+255),f,b
  1546  0122DE  2B3E               	incf	??_main& (0+255),f,b
  1547  0122E0  0E00               	movlw	0
  1548  0122E2  233F               	addwfc	(??_main+1)& (0+255),f,b
  1549  0122E4  2340               	addwfc	(??_main+2)& (0+255),f,b
  1550  0122E6  2341               	addwfc	(??_main+3)& (0+255),f,b
  1551  0122E8  5022               	movf	_time_counter,w,c	;volatile
  1552  0122EA  0101               	movlb	1	; () banked
  1553  0122EC  253E               	addwf	??_main& (0+255),w,b
  1554  0122EE  0101               	movlb	1	; () banked
  1555  0122F0  6F42               	movwf	(??_main+4)& (0+255),b
  1556  0122F2  5023               	movf	_time_counter+1,w,c	;volatile
  1557  0122F4  0101               	movlb	1	; () banked
  1558  0122F6  213F               	addwfc	(??_main+1)& (0+255),w,b
  1559  0122F8  0101               	movlb	1	; () banked
  1560  0122FA  6F43               	movwf	(??_main+5)& (0+255),b
  1561  0122FC  5024               	movf	_time_counter+2,w,c	;volatile
  1562  0122FE  0101               	movlb	1	; () banked
  1563  012300  2140               	addwfc	(??_main+2)& (0+255),w,b
  1564  012302  0101               	movlb	1	; () banked
  1565  012304  6F44               	movwf	(??_main+6)& (0+255),b
  1566  012306  5025               	movf	_time_counter+3,w,c	;volatile
  1567  012308  0101               	movlb	1	; () banked
  1568  01230A  2141               	addwfc	(??_main+3)& (0+255),w,b
  1569  01230C  0101               	movlb	1	; () banked
  1570  01230E  6F45               	movwf	(??_main+7)& (0+255),b
  1571  012310  0101               	movlb	1	; () banked
  1572  012312  5145               	movf	(??_main+7)& (0+255),w,b
  1573  012314  0101               	movlb	1	; () banked
  1574  012316  1144               	iorwf	(??_main+6)& (0+255),w,b
  1575  012318  0101               	movlb	1	; () banked
  1576  01231A  1143               	iorwf	(??_main+5)& (0+255),w,b
  1577  01231C  E105               	bnz	u11860
  1578  01231E  0E1E               	movlw	30
  1579  012320  0101               	movlb	1	; () banked
  1580  012322  5D42               	subwf	(??_main+4)& (0+255),w,b
  1581  012324  A0D8               	btfss	status,0,c
  1582  012326  D019               	goto	l8920
  1583  012328                     u11860:
  1584                           
  1585                           ; BSR set to: 1
  1586                           ;RemoteCan.c: 186: pr_time_1 = time_counter;
  1587  012328  C022  F0D4         	movff	_time_counter,_pr_time_1	;volatile
  1588  01232C  C023  F0D5         	movff	_time_counter+1,_pr_time_1+1	;volatile
  1589  012330  C024  F0D6         	movff	_time_counter+2,_pr_time_1+2	;volatile
  1590  012334  C025  F0D7         	movff	_time_counter+3,_pr_time_1+3	;volatile
  1591                           
  1592                           ; BSR set to: 1
  1593                           ;RemoteCan.c: 187: PORTDbits.RD7 = ~PORTDbits.RD7;
  1594  012338  AE83               	btfss	3971,7,c	;volatile
  1595  01233A  D002               	goto	u11870
  1596  01233C  0E01               	movlw	1
  1597  01233E  D001               	goto	u11876
  1598  012340                     u11870:
  1599  012340  0E00               	movlw	0
  1600  012342                     u11876:
  1601  012342  0AFF               	xorlw	255
  1602  012344  0101               	movlb	1	; () banked
  1603  012346  6F3E               	movwf	??_main& (0+255),b
  1604  012348  0101               	movlb	1	; () banked
  1605  01234A  333E               	rrcf	??_main& (0+255),f,b
  1606  01234C  333E               	rrcf	??_main& (0+255),f,b
  1607  01234E  5083               	movf	3971,w,c	;volatile
  1608  012350  0101               	movlb	1	; () banked
  1609  012352  193E               	xorwf	??_main& (0+255),w,b
  1610  012354  0B7F               	andlw	-129
  1611  012356  193E               	xorwf	??_main& (0+255),w,b
  1612  012358  6E83               	movwf	3971,c	;volatile
  1613  01235A                     l8920:
  1614                           
  1615                           ; BSR set to: 1
  1616                           ;RemoteCan.c: 188: }
  1617                           ;RemoteCan.c: 189: PWR_Button_Polling();
  1618  01235A  ECB8  F0AE         	call	_PWR_Button_Polling	;wreg free
  1619                           
  1620                           ;RemoteCan.c: 190: delay_ms(10);
  1621  01235E  0E00               	movlw	0
  1622  012360  0100               	movlb	0	; () banked
  1623  012362  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1624  012364  0E0A               	movlw	10
  1625  012366  6F78               	movwf	delay_ms@value_ms& (0+255),b
  1626  012368  ECBE  F0AD         	call	_delay_ms	;wreg free
  1627  01236C                     l8924:
  1628  01236C  A04C               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1629  01236E  D7AA               	goto	l8914
  1630                           
  1631                           ;RemoteCan.c: 191: }
  1632                           ;RemoteCan.c: 192: PORTDbits.RD7 = 0;
  1633  012370  9E83               	bcf	3971,7,c	;volatile
  1634                           
  1635                           ;RemoteCan.c: 193: display_refresh = 1;
  1636  012372  8C4B               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  1637  012374                     l8926:
  1638                           
  1639                           ;RemoteCan.c: 194: }
  1640                           ;RemoteCan.c: 196: Joystick_Polling();
  1641  012374  EC0B  F0AD         	call	_Joystick_Polling	;wreg free
  1642                           
  1643                           ;RemoteCan.c: 199: if (PORTAbits.RA2 == 1) {
  1644  012378  A480               	btfss	3968,2,c	;volatile
  1645  01237A  D004               	goto	l775
  1646                           
  1647                           ;RemoteCan.c: 200: switch_position = 0;
  1648  01237C  0E00               	movlw	0
  1649  01237E  0100               	movlb	0	; () banked
  1650  012380  6FE6               	movwf	_switch_position& (0+255),b	;volatile
  1651                           
  1652                           ;RemoteCan.c: 201: } else {
  1653  012382  D00D               	goto	l8936
  1654  012384                     l775:
  1655                           
  1656                           ;RemoteCan.c: 202: if (PORTAbits.RA3 == 0) {
  1657  012384  B680               	btfsc	3968,3,c	;volatile
  1658  012386  D005               	goto	l8934
  1659                           
  1660                           ;RemoteCan.c: 203: switch_position = 1;
  1661  012388  0E01               	movlw	1
  1662  01238A  0100               	movlb	0	; () banked
  1663  01238C  6FE6               	movwf	_switch_position& (0+255),b	;volatile
  1664                           
  1665                           ;RemoteCan.c: 204: dir = 1;
  1666  01238E  0E01               	movlw	1
  1667  012390  D004               	goto	L1
  1668  012392                     l8934:
  1669                           
  1670                           ;RemoteCan.c: 206: switch_position = 2;
  1671  012392  0E02               	movlw	2
  1672  012394  0100               	movlb	0	; () banked
  1673  012396  6FE6               	movwf	_switch_position& (0+255),b	;volatile
  1674                           
  1675                           ;RemoteCan.c: 207: dir = 0;
  1676  012398  0E00               	movlw	0
  1677  01239A                     L1:
  1678  01239A  0100               	movlb	0	; () banked
  1679  01239C  6FE4               	movwf	_dir& (0+255),b	;volatile
  1680  01239E                     l8936:
  1681                           
  1682                           ; BSR set to: 0
  1683                           ;RemoteCan.c: 208: }
  1684                           ;RemoteCan.c: 209: }
  1685                           ;RemoteCan.c: 212: if (F1_switch == 1) {
  1686  01239E  A24B               	btfss	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
  1687  0123A0  D0B7               	goto	l8980
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;RemoteCan.c: 213: y = 0;
  1691  0123A2  984C               	bcf	_y/(0+8),_y& (0+7),c	;volatile
  1692                           
  1693                           ; BSR set to: 0
  1694                           ;RemoteCan.c: 214: if ((time_counter - pr_time_5) >= 30) {
  1695  0123A4  C01E  F13E         	movff	_pr_time_5,??_main	;volatile
  1696  0123A8  C01F  F13F         	movff	_pr_time_5+1,??_main+1	;volatile
  1697  0123AC  C020  F140         	movff	_pr_time_5+2,??_main+2	;volatile
  1698  0123B0  C021  F141         	movff	_pr_time_5+3,??_main+3	;volatile
  1699  0123B4  0101               	movlb	1	; () banked
  1700  0123B6  1F3E               	comf	??_main& (0+255),f,b
  1701  0123B8  1F3F               	comf	(??_main+1)& (0+255),f,b
  1702  0123BA  1F40               	comf	(??_main+2)& (0+255),f,b
  1703  0123BC  1F41               	comf	(??_main+3)& (0+255),f,b
  1704  0123BE  2B3E               	incf	??_main& (0+255),f,b
  1705  0123C0  0E00               	movlw	0
  1706  0123C2  233F               	addwfc	(??_main+1)& (0+255),f,b
  1707  0123C4  2340               	addwfc	(??_main+2)& (0+255),f,b
  1708  0123C6  2341               	addwfc	(??_main+3)& (0+255),f,b
  1709  0123C8  5022               	movf	_time_counter,w,c	;volatile
  1710  0123CA  0101               	movlb	1	; () banked
  1711  0123CC  253E               	addwf	??_main& (0+255),w,b
  1712  0123CE  0101               	movlb	1	; () banked
  1713  0123D0  6F42               	movwf	(??_main+4)& (0+255),b
  1714  0123D2  5023               	movf	_time_counter+1,w,c	;volatile
  1715  0123D4  0101               	movlb	1	; () banked
  1716  0123D6  213F               	addwfc	(??_main+1)& (0+255),w,b
  1717  0123D8  0101               	movlb	1	; () banked
  1718  0123DA  6F43               	movwf	(??_main+5)& (0+255),b
  1719  0123DC  5024               	movf	_time_counter+2,w,c	;volatile
  1720  0123DE  0101               	movlb	1	; () banked
  1721  0123E0  2140               	addwfc	(??_main+2)& (0+255),w,b
  1722  0123E2  0101               	movlb	1	; () banked
  1723  0123E4  6F44               	movwf	(??_main+6)& (0+255),b
  1724  0123E6  5025               	movf	_time_counter+3,w,c	;volatile
  1725  0123E8  0101               	movlb	1	; () banked
  1726  0123EA  2141               	addwfc	(??_main+3)& (0+255),w,b
  1727  0123EC  0101               	movlb	1	; () banked
  1728  0123EE  6F45               	movwf	(??_main+7)& (0+255),b
  1729  0123F0  0101               	movlb	1	; () banked
  1730  0123F2  5145               	movf	(??_main+7)& (0+255),w,b
  1731  0123F4  0101               	movlb	1	; () banked
  1732  0123F6  1144               	iorwf	(??_main+6)& (0+255),w,b
  1733  0123F8  0101               	movlb	1	; () banked
  1734  0123FA  1143               	iorwf	(??_main+5)& (0+255),w,b
  1735  0123FC  E105               	bnz	u11920
  1736  0123FE  0E1E               	movlw	30
  1737  012400  0101               	movlb	1	; () banked
  1738  012402  5D42               	subwf	(??_main+4)& (0+255),w,b
  1739  012404  A0D8               	btfss	status,0,c
  1740  012406  D023               	goto	l8950
  1741  012408                     u11920:
  1742                           
  1743                           ; BSR set to: 1
  1744                           ;RemoteCan.c: 215: pr_time_5 = time_counter;
  1745  012408  C022  F01E         	movff	_time_counter,_pr_time_5	;volatile
  1746  01240C  C023  F01F         	movff	_time_counter+1,_pr_time_5+1	;volatile
  1747  012410  C024  F020         	movff	_time_counter+2,_pr_time_5+2	;volatile
  1748  012414  C025  F021         	movff	_time_counter+3,_pr_time_5+3	;volatile
  1749                           
  1750                           ; BSR set to: 1
  1751                           ;RemoteCan.c: 216: PORTDbits.RD6 = ~PORTDbits.RD6;
  1752  012418  AC83               	btfss	3971,6,c	;volatile
  1753  01241A  D002               	goto	u11930
  1754  01241C  0E01               	movlw	1
  1755  01241E  D001               	goto	u11936
  1756  012420                     u11930:
  1757  012420  0E00               	movlw	0
  1758  012422                     u11936:
  1759  012422  0AFF               	xorlw	255
  1760  012424  0101               	movlb	1	; () banked
  1761  012426  6F3E               	movwf	??_main& (0+255),b
  1762  012428  0101               	movlb	1	; () banked
  1763  01242A  3B3E               	swapf	??_main& (0+255),f,b
  1764  01242C  473E               	rlncf	??_main& (0+255),f,b
  1765  01242E  473E               	rlncf	??_main& (0+255),f,b
  1766  012430  5083               	movf	3971,w,c	;volatile
  1767  012432  0101               	movlb	1	; () banked
  1768  012434  193E               	xorwf	??_main& (0+255),w,b
  1769  012436  0BBF               	andlw	-65
  1770  012438  193E               	xorwf	??_main& (0+255),w,b
  1771  01243A  6E83               	movwf	3971,c	;volatile
  1772                           
  1773                           ; BSR set to: 1
  1774                           ;RemoteCan.c: 217: if (F2_switch == 1) {
  1775  01243C  A44B               	btfss	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  1776  01243E  D006               	goto	l781
  1777                           
  1778                           ; BSR set to: 1
  1779                           ;RemoteCan.c: 218: PORTDbits.RD5 = LATDbits.LATD6;
  1780  012440  AC8C               	btfss	3980,6,c	;volatile
  1781  012442  D002               	bra	u11955
  1782  012444  8A83               	bsf	3971,5,c	;volatile
  1783  012446  D001               	bra	u11957
  1784  012448                     u11955:
  1785  012448  D001               	goto	l781
  1786  01244A                     u11957:
  1787                           
  1788                           ;RemoteCan.c: 219: } else {
  1789  01244A  D001               	goto	l8950
  1790  01244C                     l781:
  1791                           
  1792                           ; BSR set to: 1
  1793                           ;RemoteCan.c: 220: PORTDbits.RD5 = 0;
  1794  01244C  9A83               	bcf	3971,5,c	;volatile
  1795  01244E                     l8950:
  1796                           
  1797                           ;RemoteCan.c: 221: }
  1798                           ;RemoteCan.c: 222: }
  1799                           ;RemoteCan.c: 223: if ((x < 1)&&(F2_switch == 0)) {
  1800  01244E  0100               	movlb	0	; () banked
  1801  012450  51E7               	movf	_x& (0+255),w,b	;volatile
  1802  012452  B4D8               	btfsc	status,2,c
  1803                           
  1804                           ; BSR set to: 0
  1805  012454  B44B               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  1806  012456  D02D               	goto	l8964
  1807                           
  1808                           ; BSR set to: 0
  1809                           ;RemoteCan.c: 224: parking_state = 1;
  1810  012458  0E01               	movlw	1
  1811  01245A  0100               	movlb	0	; () banked
  1812  01245C  6FE5               	movwf	_parking_state& (0+255),b	;volatile
  1813                           
  1814                           ;RemoteCan.c: 225: JoystickConstants[1] = 1;
  1815  01245E  0E00               	movlw	0
  1816  012460  0100               	movlb	0	; () banked
  1817  012462  6FD0               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  1818  012464  0E00               	movlw	0
  1819  012466  6FD1               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  1820  012468  0E80               	movlw	128
  1821  01246A  6FD2               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  1822  01246C  0E3F               	movlw	63
  1823  01246E  6FD3               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  1824  012470                     l8956:
  1825  012470  EC86  F0AE         	call	_CANisTxReady	;wreg free
  1826  012474  0900               	iorlw	0
  1827  012476  B4D8               	btfsc	status,2,c
  1828  012478  D7FB               	goto	l8956
  1829                           
  1830                           ;RemoteCan.c: 227: park_assist_state[0] = 0b00000001;
  1831  01247A  0E01               	movlw	1
  1832  01247C  0101               	movlb	1	; () banked
  1833  01247E  6F1B               	movwf	_park_assist_state& (0+255),b
  1834                           
  1835                           ; BSR set to: 1
  1836                           ;RemoteCan.c: 228: CANsendMessage(0b00000001010, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1837  012480  0E0A               	movlw	10
  1838  012482  0100               	movlb	0	; () banked
  1839  012484  6F72               	movwf	CANsendMessage@identifier& (0+255),b
  1840  012486  0E00               	movlw	0
  1841  012488  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1842  01248A  0E00               	movlw	0
  1843  01248C  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1844  01248E  0E00               	movlw	0
  1845  012490  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1846  012492  0E1B               	movlw	low _park_assist_state
  1847  012494  0100               	movlb	0	; () banked
  1848  012496  6F76               	movwf	CANsendMessage@data& (0+255),b
  1849  012498  0E01               	movlw	high _park_assist_state
  1850  01249A  0100               	movlb	0	; () banked
  1851  01249C  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
  1852  01249E  0E08               	movlw	8
  1853  0124A0  0100               	movlb	0	; () banked
  1854  0124A2  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
  1855  0124A4  0EBC               	movlw	188
  1856  0124A6  0100               	movlb	0	; () banked
  1857  0124A8  6F79               	movwf	CANsendMessage@flags& (0+255),b
  1858  0124AA  ECCD  F089         	call	_CANsendMessage	;wreg free
  1859                           
  1860                           ;RemoteCan.c: 229: x++;
  1861  0124AE  0100               	movlb	0	; () banked
  1862  0124B0  2BE7               	incf	_x& (0+255),f,b	;volatile
  1863  0124B2                     l8964:
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;RemoteCan.c: 230: }
  1867                           ;RemoteCan.c: 231: if (F2_switch == 1) {
  1868  0124B2  A44B               	btfss	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  1869  0124B4  D029               	goto	l8978
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;RemoteCan.c: 232: if (z < 1) {
  1873  0124B6  0100               	movlb	0	; () banked
  1874  0124B8  51E8               	movf	_z& (0+255),w,b	;volatile
  1875  0124BA  A4D8               	btfss	status,2,c
  1876  0124BC  D062               	goto	l9004
  1877                           
  1878                           ; BSR set to: 0
  1879                           ;RemoteCan.c: 233: parking_state = 2;
  1880  0124BE  0E02               	movlw	2
  1881  0124C0  0100               	movlb	0	; () banked
  1882  0124C2  6FE5               	movwf	_parking_state& (0+255),b	;volatile
  1883  0124C4                     l8970:
  1884  0124C4  EC86  F0AE         	call	_CANisTxReady	;wreg free
  1885  0124C8  0900               	iorlw	0
  1886  0124CA  B4D8               	btfsc	status,2,c
  1887  0124CC  D7FB               	goto	l8970
  1888                           
  1889                           ;RemoteCan.c: 235: CANsendMessage(0b00000001100, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
  1890  0124CE  0E0C               	movlw	12
  1891  0124D0  0100               	movlb	0	; () banked
  1892  0124D2  6F72               	movwf	CANsendMessage@identifier& (0+255),b
  1893  0124D4  0E00               	movlw	0
  1894  0124D6  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1895  0124D8  0E00               	movlw	0
  1896  0124DA  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1897  0124DC  0E00               	movlw	0
  1898  0124DE  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1899  0124E0  0E2C               	movlw	low _data
  1900  0124E2  0100               	movlb	0	; () banked
  1901  0124E4  6F76               	movwf	CANsendMessage@data& (0+255),b
  1902  0124E6  0E00               	movlw	high _data
  1903  0124E8  0100               	movlb	0	; () banked
  1904  0124EA  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
  1905  0124EC  0E08               	movlw	8
  1906  0124EE  0100               	movlb	0	; () banked
  1907  0124F0  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
  1908  0124F2  0EBC               	movlw	188
  1909  0124F4  0100               	movlb	0	; () banked
  1910  0124F6  6F79               	movwf	CANsendMessage@flags& (0+255),b
  1911  0124F8  ECCD  F089         	call	_CANsendMessage	;wreg free
  1912                           
  1913                           ;RemoteCan.c: 236: x = 0;
  1914  0124FC  0E00               	movlw	0
  1915  0124FE  0100               	movlb	0	; () banked
  1916  012500  6FE7               	movwf	_x& (0+255),b	;volatile
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;RemoteCan.c: 237: z++;
  1920  012502  0100               	movlb	0	; () banked
  1921  012504  2BE8               	incf	_z& (0+255),f,b	;volatile
  1922                           
  1923                           ; BSR set to: 0
  1924                           ;RemoteCan.c: 238: }
  1925                           ;RemoteCan.c: 239: } else {
  1926  012506  D03D               	goto	l9004
  1927  012508                     l8978:
  1928                           
  1929                           ; BSR set to: 0
  1930                           ;RemoteCan.c: 240: z = 0;
  1931  012508  0E00               	movlw	0
  1932  01250A  0100               	movlb	0	; () banked
  1933  01250C  6FE8               	movwf	_z& (0+255),b	;volatile
  1934                           
  1935                           ; BSR set to: 0
  1936                           ;RemoteCan.c: 241: }
  1937                           ;RemoteCan.c: 242: } else {
  1938  01250E  D039               	goto	l9004
  1939  012510                     l8980:
  1940                           
  1941                           ; BSR set to: 0
  1942                           ;RemoteCan.c: 243: x = 0;
  1943  012510  0E00               	movlw	0
  1944  012512  0100               	movlb	0	; () banked
  1945  012514  6FE7               	movwf	_x& (0+255),b	;volatile
  1946                           
  1947                           ;RemoteCan.c: 244: z = 0;
  1948  012516  0E00               	movlw	0
  1949  012518  0100               	movlb	0	; () banked
  1950  01251A  6FE8               	movwf	_z& (0+255),b	;volatile
  1951                           
  1952                           ; BSR set to: 0
  1953                           ;RemoteCan.c: 245: F2_switch = 0;
  1954  01251C  944B               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  1955                           
  1956                           ; BSR set to: 0
  1957                           ;RemoteCan.c: 246: PORTDbits.RD5 = 0;
  1958  01251E  9A83               	bcf	3971,5,c	;volatile
  1959                           
  1960                           ; BSR set to: 0
  1961                           ;RemoteCan.c: 247: PORTDbits.RD6 = 0;
  1962  012520  9C83               	bcf	3971,6,c	;volatile
  1963                           
  1964                           ; BSR set to: 0
  1965                           ;RemoteCan.c: 248: if (y == 0) {
  1966  012522  B84C               	btfsc	_y/(0+8),_y& (0+7),c	;volatile
  1967  012524  D02C               	goto	l9000
  1968                           
  1969                           ; BSR set to: 0
  1970                           ;RemoteCan.c: 249: parking_state = 0;
  1971  012526  0E00               	movlw	0
  1972  012528  0100               	movlb	0	; () banked
  1973  01252A  6FE5               	movwf	_parking_state& (0+255),b	;volatile
  1974                           
  1975                           ;RemoteCan.c: 250: JoystickConstants[1] = 15;
  1976  01252C  0E00               	movlw	0
  1977  01252E  0100               	movlb	0	; () banked
  1978  012530  6FD0               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  1979  012532  0E00               	movlw	0
  1980  012534  6FD1               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  1981  012536  0E70               	movlw	112
  1982  012538  6FD2               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  1983  01253A  0E41               	movlw	65
  1984  01253C  6FD3               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  1985  01253E                     l8992:
  1986  01253E  EC86  F0AE         	call	_CANisTxReady	;wreg free
  1987  012542  0900               	iorlw	0
  1988  012544  B4D8               	btfsc	status,2,c
  1989  012546  D7FB               	goto	l8992
  1990                           
  1991                           ;RemoteCan.c: 252: park_assist_state[0] = 0b00000000;
  1992  012548  0E00               	movlw	0
  1993  01254A  0101               	movlb	1	; () banked
  1994  01254C  6F1B               	movwf	_park_assist_state& (0+255),b
  1995                           
  1996                           ; BSR set to: 1
  1997                           ;RemoteCan.c: 253: CANsendMessage(0b00000001010, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1998  01254E  0E0A               	movlw	10
  1999  012550  0100               	movlb	0	; () banked
  2000  012552  6F72               	movwf	CANsendMessage@identifier& (0+255),b
  2001  012554  0E00               	movlw	0
  2002  012556  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2003  012558  0E00               	movlw	0
  2004  01255A  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2005  01255C  0E00               	movlw	0
  2006  01255E  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2007  012560  0E1B               	movlw	low _park_assist_state
  2008  012562  0100               	movlb	0	; () banked
  2009  012564  6F76               	movwf	CANsendMessage@data& (0+255),b
  2010  012566  0E01               	movlw	high _park_assist_state
  2011  012568  0100               	movlb	0	; () banked
  2012  01256A  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
  2013  01256C  0E08               	movlw	8
  2014  01256E  0100               	movlb	0	; () banked
  2015  012570  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
  2016  012572  0EBC               	movlw	188
  2017  012574  0100               	movlb	0	; () banked
  2018  012576  6F79               	movwf	CANsendMessage@flags& (0+255),b
  2019  012578  ECCD  F089         	call	_CANsendMessage	;wreg free
  2020                           
  2021                           ;RemoteCan.c: 254: y = 1;
  2022  01257C  884C               	bsf	_y/(0+8),_y& (0+7),c	;volatile
  2023  01257E                     l9000:
  2024                           
  2025                           ;RemoteCan.c: 255: }
  2026                           ;RemoteCan.c: 256: PORTDbits.RD6 = 0;
  2027  01257E  9C83               	bcf	3971,6,c	;volatile
  2028                           
  2029                           ;RemoteCan.c: 257: PORTDbits.RD5 = 0;
  2030  012580  9A83               	bcf	3971,5,c	;volatile
  2031  012582                     l9004:
  2032                           
  2033                           ;RemoteCan.c: 258: }
  2034                           ;RemoteCan.c: 260: data_steering [0] = 180 - (JoystickValues[0])*(JoystickConstants[0]);
  2035  012582  0E00               	movlw	0
  2036  012584  0100               	movlb	0	; () banked
  2037  012586  6FAA               	movwf	___fladd@a& (0+255),b
  2038  012588  0E00               	movlw	0
  2039  01258A  6FAB               	movwf	(___fladd@a+1)& (0+255),b
  2040  01258C  0E34               	movlw	52
  2041  01258E  6FAC               	movwf	(___fladd@a+2)& (0+255),b
  2042  012590  0E43               	movlw	67
  2043  012592  6FAD               	movwf	(___fladd@a+3)& (0+255),b
  2044  012594  C0CC  F084         	movff	_JoystickConstants,___flmul@a	;volatile
  2045  012598  C0CD  F085         	movff	_JoystickConstants+1,___flmul@a+1	;volatile
  2046  01259C  C0CE  F086         	movff	_JoystickConstants+2,___flmul@a+2	;volatile
  2047  0125A0  C0CF  F087         	movff	_JoystickConstants+3,___flmul@a+3	;volatile
  2048  0125A4  0100               	movlb	0	; () banked
  2049  0125A6  51DC               	movf	_JoystickValues& (0+255),w,b	;volatile
  2050  0125A8  0100               	movlb	0	; () banked
  2051  0125AA  6F72               	movwf	___xxtofl@val& (0+255),b
  2052  0125AC  6B73               	clrf	(___xxtofl@val+1)& (0+255),b
  2053  0125AE  6B74               	clrf	(___xxtofl@val+2)& (0+255),b
  2054  0125B0  6B75               	clrf	(___xxtofl@val+3)& (0+255),b
  2055  0125B2  0E00               	movlw	0
  2056  0125B4  ECE3  F0A3         	call	___xxtofl
  2057  0125B8  C072  F080         	movff	?___xxtofl,___flmul@b
  2058  0125BC  C073  F081         	movff	?___xxtofl+1,___flmul@b+1
  2059  0125C0  C074  F082         	movff	?___xxtofl+2,___flmul@b+2
  2060  0125C4  C075  F083         	movff	?___xxtofl+3,___flmul@b+3
  2061  0125C8  EC79  F09B         	call	___flmul	;wreg free
  2062  0125CC  C080  F099         	movff	?___flmul,___flneg@f1
  2063  0125D0  C081  F09A         	movff	?___flmul+1,___flneg@f1+1
  2064  0125D4  C082  F09B         	movff	?___flmul+2,___flneg@f1+2
  2065  0125D8  C083  F09C         	movff	?___flmul+3,___flneg@f1+3
  2066  0125DC  ECDB  F0AD         	call	___flneg	;wreg free
  2067  0125E0  C099  F0A6         	movff	?___flneg,___fladd@b
  2068  0125E4  C09A  F0A7         	movff	?___flneg+1,___fladd@b+1
  2069  0125E8  C09B  F0A8         	movff	?___flneg+2,___fladd@b+2
  2070  0125EC  C09C  F0A9         	movff	?___flneg+3,___fladd@b+3
  2071  0125F0  EC25  F099         	call	___fladd	;wreg free
  2072  0125F4  C0A6  F0BA         	movff	?___fladd,___fltol@f1
  2073  0125F8  C0A7  F0BB         	movff	?___fladd+1,___fltol@f1+1
  2074  0125FC  C0A8  F0BC         	movff	?___fladd+2,___fltol@f1+2
  2075  012600  C0A9  F0BD         	movff	?___fladd+3,___fltol@f1+3
  2076  012604  EC65  F0A9         	call	___fltol	;wreg free
  2077  012608  0100               	movlb	0	; () banked
  2078  01260A  51BA               	movf	?___fltol& (0+255),w,b
  2079  01260C  0100               	movlb	0	; () banked
  2080  01260E  6FEB               	movwf	_data_steering& (0+255),b
  2081                           
  2082                           ; BSR set to: 0
  2083                           ;RemoteCan.c: 261: if (switch_position != 0) {
  2084  012610  0100               	movlb	0	; () banked
  2085  012612  51E6               	movf	_switch_position& (0+255),w,b	;volatile
  2086  012614  B4D8               	btfsc	status,2,c
  2087  012616  D088               	goto	l9018
  2088                           
  2089                           ; BSR set to: 0
  2090                           ;RemoteCan.c: 262: if (JoystickValues[1] > 132) {
  2091  012618  0E84               	movlw	132
  2092  01261A  0100               	movlb	0	; () banked
  2093  01261C  65DD               	cpfsgt	(_JoystickValues+1)& (0+255),b	;volatile
  2094  01261E  D042               	goto	l9014
  2095                           
  2096                           ; BSR set to: 0
  2097                           ;RemoteCan.c: 263: set_speed = (JoystickValues[1] - 130)*(JoystickConstants[1]);
  2098  012620  C0D0  F084         	movff	_JoystickConstants+4,___flmul@a	;volatile
  2099  012624  C0D1  F085         	movff	_JoystickConstants+5,___flmul@a+1	;volatile
  2100  012628  C0D2  F086         	movff	_JoystickConstants+6,___flmul@a+2	;volatile
  2101  01262C  C0D3  F087         	movff	_JoystickConstants+7,___flmul@a+3	;volatile
  2102  012630  0E7E               	movlw	126
  2103  012632  0101               	movlb	1	; () banked
  2104  012634  6F3E               	movwf	??_main& (0+255),b
  2105  012636  0EFF               	movlw	255
  2106  012638  0101               	movlb	1	; () banked
  2107  01263A  6F3F               	movwf	(??_main+1)& (0+255),b
  2108  01263C  0100               	movlb	0	; () banked
  2109  01263E  51DD               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  2110  012640  0101               	movlb	1	; () banked
  2111  012642  6F40               	movwf	(??_main+2)& (0+255),b
  2112  012644  6B41               	clrf	(??_main+3)& (0+255),b
  2113  012646  0101               	movlb	1	; () banked
  2114  012648  513E               	movf	??_main& (0+255),w,b
  2115  01264A  0101               	movlb	1	; () banked
  2116  01264C  2740               	addwf	(??_main+2)& (0+255),f,b
  2117  01264E  0101               	movlb	1	; () banked
  2118  012650  513F               	movf	(??_main+1)& (0+255),w,b
  2119  012652  0101               	movlb	1	; () banked
  2120  012654  2341               	addwfc	(??_main+3)& (0+255),f,b
  2121  012656  C140  F072         	movff	??_main+2,___xxtofl@val
  2122  01265A  C141  F073         	movff	??_main+3,___xxtofl@val+1
  2123  01265E  0100               	movlb	0	; () banked
  2124  012660  0E00               	movlw	0
  2125  012662  BF73               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2126  012664  0EFF               	movlw	-1
  2127  012666  6F74               	movwf	(___xxtofl@val+2)& (0+255),b
  2128  012668  6F75               	movwf	(___xxtofl@val+3)& (0+255),b
  2129  01266A  0E01               	movlw	1
  2130  01266C  ECE3  F0A3         	call	___xxtofl
  2131  012670  C072  F080         	movff	?___xxtofl,___flmul@b
  2132  012674  C073  F081         	movff	?___xxtofl+1,___flmul@b+1
  2133  012678  C074  F082         	movff	?___xxtofl+2,___flmul@b+2
  2134  01267C  C075  F083         	movff	?___xxtofl+3,___flmul@b+3
  2135  012680  EC79  F09B         	call	___flmul	;wreg free
  2136  012684  C080  F0BA         	movff	?___flmul,___fltol@f1
  2137  012688  C081  F0BB         	movff	?___flmul+1,___fltol@f1+1
  2138  01268C  C082  F0BC         	movff	?___flmul+2,___fltol@f1+2
  2139  012690  C083  F0BD         	movff	?___flmul+3,___fltol@f1+3
  2140  012694  EC65  F0A9         	call	___fltol	;wreg free
  2141  012698  C0BA  F0E2         	movff	?___fltol,_set_speed	;volatile
  2142  01269C  C0BB  F0E3         	movff	?___fltol+1,_set_speed+1	;volatile
  2143                           
  2144                           ;RemoteCan.c: 264: data_brake [0] = 0;
  2145  0126A0  0E00               	movlw	0
  2146  0126A2  D040               	goto	L2
  2147  0126A4                     l9014:
  2148                           
  2149                           ; BSR set to: 0
  2150                           ;RemoteCan.c: 266: set_speed = 0;
  2151  0126A4  0E00               	movlw	0
  2152  0126A6  0100               	movlb	0	; () banked
  2153  0126A8  6FE3               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2154  0126AA  0E00               	movlw	0
  2155  0126AC  6FE2               	movwf	_set_speed& (0+255),b	;volatile
  2156                           
  2157                           ; BSR set to: 0
  2158                           ;RemoteCan.c: 267: data_brake [0] = ((130 - JoystickValues[1]))*(1.9);
  2159  0126AE  0E33               	movlw	51
  2160  0126B0  0100               	movlb	0	; () banked
  2161  0126B2  6F84               	movwf	___flmul@a& (0+255),b
  2162  0126B4  0E33               	movlw	51
  2163  0126B6  6F85               	movwf	(___flmul@a+1)& (0+255),b
  2164  0126B8  0EF3               	movlw	243
  2165  0126BA  6F86               	movwf	(___flmul@a+2)& (0+255),b
  2166  0126BC  0E3F               	movlw	63
  2167  0126BE  6F87               	movwf	(___flmul@a+3)& (0+255),b
  2168  0126C0  0100               	movlb	0	; () banked
  2169  0126C2  51DD               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  2170  0126C4  0101               	movlb	1	; () banked
  2171  0126C6  6F3E               	movwf	??_main& (0+255),b
  2172  0126C8  6B3F               	clrf	(??_main+1)& (0+255),b
  2173  0126CA  0101               	movlb	1	; () banked
  2174  0126CC  1F3E               	comf	??_main& (0+255),f,b
  2175  0126CE  1F3F               	comf	(??_main+1)& (0+255),f,b
  2176  0126D0  4B3E               	infsnz	??_main& (0+255),f,b
  2177  0126D2  2B3F               	incf	(??_main+1)& (0+255),f,b
  2178  0126D4  0E82               	movlw	130
  2179  0126D6  0101               	movlb	1	; () banked
  2180  0126D8  273E               	addwf	??_main& (0+255),f,b
  2181  0126DA  0E00               	movlw	0
  2182  0126DC  233F               	addwfc	(??_main+1)& (0+255),f,b
  2183  0126DE  C13E  F072         	movff	??_main,___xxtofl@val
  2184  0126E2  C13F  F073         	movff	??_main+1,___xxtofl@val+1
  2185  0126E6  0100               	movlb	0	; () banked
  2186  0126E8  0E00               	movlw	0
  2187  0126EA  BF73               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2188  0126EC  0EFF               	movlw	-1
  2189  0126EE  6F74               	movwf	(___xxtofl@val+2)& (0+255),b
  2190  0126F0  6F75               	movwf	(___xxtofl@val+3)& (0+255),b
  2191  0126F2  0E01               	movlw	1
  2192  0126F4  ECE3  F0A3         	call	___xxtofl
  2193  0126F8  C072  F080         	movff	?___xxtofl,___flmul@b
  2194  0126FC  C073  F081         	movff	?___xxtofl+1,___flmul@b+1
  2195  012700  C074  F082         	movff	?___xxtofl+2,___flmul@b+2
  2196  012704  C075  F083         	movff	?___xxtofl+3,___flmul@b+3
  2197  012708  EC79  F09B         	call	___flmul	;wreg free
  2198  01270C  C080  F0BA         	movff	?___flmul,___fltol@f1
  2199  012710  C081  F0BB         	movff	?___flmul+1,___fltol@f1+1
  2200  012714  C082  F0BC         	movff	?___flmul+2,___fltol@f1+2
  2201  012718  C083  F0BD         	movff	?___flmul+3,___fltol@f1+3
  2202  01271C  EC65  F0A9         	call	___fltol	;wreg free
  2203  012720  0100               	movlb	0	; () banked
  2204  012722  51BA               	movf	?___fltol& (0+255),w,b
  2205  012724                     L2:
  2206  012724  0100               	movlb	0	; () banked
  2207  012726  6FE9               	movwf	_data_brake& (0+255),b
  2208  012728                     l9018:
  2209                           
  2210                           ; BSR set to: 0
  2211                           ;RemoteCan.c: 268: }
  2212                           ;RemoteCan.c: 269: }
  2213                           ;RemoteCan.c: 271: if (newMessageCan == 1) {
  2214  012728  AE4B               	btfss	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  2215  01272A  D003               	goto	l9024
  2216                           
  2217                           ; BSR set to: 0
  2218                           ;RemoteCan.c: 272: CAN_interpreter();
  2219  01272C  EC7B  F0AB         	call	_CAN_interpreter	;wreg free
  2220                           
  2221                           ;RemoteCan.c: 273: newMessageCan = 0;
  2222  012730  9E4B               	bcf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  2223  012732                     l9024:
  2224                           
  2225                           ;RemoteCan.c: 274: }
  2226                           ;RemoteCan.c: 276: if ((time_counter - pr_time_2) >= 2) {
  2227  012732  C0D8  F13E         	movff	_pr_time_2,??_main	;volatile
  2228  012736  C0D9  F13F         	movff	_pr_time_2+1,??_main+1	;volatile
  2229  01273A  C0DA  F140         	movff	_pr_time_2+2,??_main+2	;volatile
  2230  01273E  C0DB  F141         	movff	_pr_time_2+3,??_main+3	;volatile
  2231  012742  0101               	movlb	1	; () banked
  2232  012744  1F3E               	comf	??_main& (0+255),f,b
  2233  012746  1F3F               	comf	(??_main+1)& (0+255),f,b
  2234  012748  1F40               	comf	(??_main+2)& (0+255),f,b
  2235  01274A  1F41               	comf	(??_main+3)& (0+255),f,b
  2236  01274C  2B3E               	incf	??_main& (0+255),f,b
  2237  01274E  0E00               	movlw	0
  2238  012750  233F               	addwfc	(??_main+1)& (0+255),f,b
  2239  012752  2340               	addwfc	(??_main+2)& (0+255),f,b
  2240  012754  2341               	addwfc	(??_main+3)& (0+255),f,b
  2241  012756  5022               	movf	_time_counter,w,c	;volatile
  2242  012758  0101               	movlb	1	; () banked
  2243  01275A  253E               	addwf	??_main& (0+255),w,b
  2244  01275C  0101               	movlb	1	; () banked
  2245  01275E  6F42               	movwf	(??_main+4)& (0+255),b
  2246  012760  5023               	movf	_time_counter+1,w,c	;volatile
  2247  012762  0101               	movlb	1	; () banked
  2248  012764  213F               	addwfc	(??_main+1)& (0+255),w,b
  2249  012766  0101               	movlb	1	; () banked
  2250  012768  6F43               	movwf	(??_main+5)& (0+255),b
  2251  01276A  5024               	movf	_time_counter+2,w,c	;volatile
  2252  01276C  0101               	movlb	1	; () banked
  2253  01276E  2140               	addwfc	(??_main+2)& (0+255),w,b
  2254  012770  0101               	movlb	1	; () banked
  2255  012772  6F44               	movwf	(??_main+6)& (0+255),b
  2256  012774  5025               	movf	_time_counter+3,w,c	;volatile
  2257  012776  0101               	movlb	1	; () banked
  2258  012778  2141               	addwfc	(??_main+3)& (0+255),w,b
  2259  01277A  0101               	movlb	1	; () banked
  2260  01277C  6F45               	movwf	(??_main+7)& (0+255),b
  2261  01277E  0101               	movlb	1	; () banked
  2262  012780  5145               	movf	(??_main+7)& (0+255),w,b
  2263  012782  0101               	movlb	1	; () banked
  2264  012784  1144               	iorwf	(??_main+6)& (0+255),w,b
  2265  012786  0101               	movlb	1	; () banked
  2266  012788  1143               	iorwf	(??_main+5)& (0+255),w,b
  2267  01278A  E105               	bnz	u12070
  2268  01278C  0E02               	movlw	2
  2269  01278E  0101               	movlb	1	; () banked
  2270  012790  5D42               	subwf	(??_main+4)& (0+255),w,b
  2271  012792  A0D8               	btfss	status,0,c
  2272  012794  D00A               	goto	l9030
  2273  012796                     u12070:
  2274                           
  2275                           ; BSR set to: 1
  2276                           ;RemoteCan.c: 277: pr_time_2 = time_counter;
  2277  012796  C022  F0D8         	movff	_time_counter,_pr_time_2	;volatile
  2278  01279A  C023  F0D9         	movff	_time_counter+1,_pr_time_2+1	;volatile
  2279  01279E  C024  F0DA         	movff	_time_counter+2,_pr_time_2+2	;volatile
  2280  0127A2  C025  F0DB         	movff	_time_counter+3,_pr_time_2+3	;volatile
  2281                           
  2282                           ; BSR set to: 1
  2283                           ;RemoteCan.c: 278: CAN_Send();
  2284  0127A6  EC1E  F0AB         	call	_CAN_Send	;wreg free
  2285  0127AA                     l9030:
  2286                           
  2287                           ;RemoteCan.c: 279: }
  2288                           ;RemoteCan.c: 281: if ((time_counter - pr_time_3) >= (100 / 10)) {
  2289  0127AA  C016  F13E         	movff	_pr_time_3,??_main	;volatile
  2290  0127AE  C017  F13F         	movff	_pr_time_3+1,??_main+1	;volatile
  2291  0127B2  C018  F140         	movff	_pr_time_3+2,??_main+2	;volatile
  2292  0127B6  C019  F141         	movff	_pr_time_3+3,??_main+3	;volatile
  2293  0127BA  0101               	movlb	1	; () banked
  2294  0127BC  1F3E               	comf	??_main& (0+255),f,b
  2295  0127BE  1F3F               	comf	(??_main+1)& (0+255),f,b
  2296  0127C0  1F40               	comf	(??_main+2)& (0+255),f,b
  2297  0127C2  1F41               	comf	(??_main+3)& (0+255),f,b
  2298  0127C4  2B3E               	incf	??_main& (0+255),f,b
  2299  0127C6  0E00               	movlw	0
  2300  0127C8  233F               	addwfc	(??_main+1)& (0+255),f,b
  2301  0127CA  2340               	addwfc	(??_main+2)& (0+255),f,b
  2302  0127CC  2341               	addwfc	(??_main+3)& (0+255),f,b
  2303  0127CE  5022               	movf	_time_counter,w,c	;volatile
  2304  0127D0  0101               	movlb	1	; () banked
  2305  0127D2  253E               	addwf	??_main& (0+255),w,b
  2306  0127D4  0101               	movlb	1	; () banked
  2307  0127D6  6F42               	movwf	(??_main+4)& (0+255),b
  2308  0127D8  5023               	movf	_time_counter+1,w,c	;volatile
  2309  0127DA  0101               	movlb	1	; () banked
  2310  0127DC  213F               	addwfc	(??_main+1)& (0+255),w,b
  2311  0127DE  0101               	movlb	1	; () banked
  2312  0127E0  6F43               	movwf	(??_main+5)& (0+255),b
  2313  0127E2  5024               	movf	_time_counter+2,w,c	;volatile
  2314  0127E4  0101               	movlb	1	; () banked
  2315  0127E6  2140               	addwfc	(??_main+2)& (0+255),w,b
  2316  0127E8  0101               	movlb	1	; () banked
  2317  0127EA  6F44               	movwf	(??_main+6)& (0+255),b
  2318  0127EC  5025               	movf	_time_counter+3,w,c	;volatile
  2319  0127EE  0101               	movlb	1	; () banked
  2320  0127F0  2141               	addwfc	(??_main+3)& (0+255),w,b
  2321  0127F2  0101               	movlb	1	; () banked
  2322  0127F4  6F45               	movwf	(??_main+7)& (0+255),b
  2323  0127F6  0101               	movlb	1	; () banked
  2324  0127F8  5145               	movf	(??_main+7)& (0+255),w,b
  2325  0127FA  0101               	movlb	1	; () banked
  2326  0127FC  1144               	iorwf	(??_main+6)& (0+255),w,b
  2327  0127FE  0101               	movlb	1	; () banked
  2328  012800  1143               	iorwf	(??_main+5)& (0+255),w,b
  2329  012802  E105               	bnz	u12080
  2330  012804  0E0A               	movlw	10
  2331  012806  0101               	movlb	1	; () banked
  2332  012808  5D42               	subwf	(??_main+4)& (0+255),w,b
  2333  01280A  A0D8               	btfss	status,0,c
  2334  01280C  D510               	goto	l8884
  2335  01280E                     u12080:
  2336                           
  2337                           ; BSR set to: 1
  2338                           ;RemoteCan.c: 282: pr_time_3 = time_counter;
  2339  01280E  C022  F016         	movff	_time_counter,_pr_time_3	;volatile
  2340  012812  C023  F017         	movff	_time_counter+1,_pr_time_3+1	;volatile
  2341  012816  C024  F018         	movff	_time_counter+2,_pr_time_3+2	;volatile
  2342  01281A  C025  F019         	movff	_time_counter+3,_pr_time_3+3	;volatile
  2343                           
  2344                           ; BSR set to: 1
  2345                           ;RemoteCan.c: 283: LCD_Handler();
  2346  01281E  ECF6  F0A2         	call	_LCD_Handler	;wreg free
  2347  012822  D505               	goto	l8884
  2348  012824                     __end_of_main:
  2349                           	opt stack 0
  2350                           tblptru	equ	0xFF8
  2351                           tblptrh	equ	0xFF7
  2352                           tblptrl	equ	0xFF6
  2353                           tablat	equ	0xFF5
  2354                           postinc0	equ	0xFEE
  2355                           wreg	equ	0xFE8
  2356                           status	equ	0xFD8
  2357                           
  2358 ;; *************** function _board_initialization *****************
  2359 ;; Defined at:
  2360 ;;		line 426 in file "RemoteCan.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;		None
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;		None
  2365 ;; Return value:  Size  Location     Type
  2366 ;;		None               void
  2367 ;; Registers used:
  2368 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2378 ;;Total ram usage:        0 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; Hardware stack levels required when called:    9
  2381 ;; This function calls:
  2382 ;;		_CANInitialize
  2383 ;;		_LCD_clear
  2384 ;;		_LCD_goto_line
  2385 ;;		_LCD_initialize
  2386 ;; This function is called by:
  2387 ;;		_main
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           	psect	text1
  2392  0157A0                     __ptext1:
  2393                           	opt stack 0
  2394  0157A0                     _board_initialization:
  2395                           	opt stack 21
  2396                           
  2397                           ;RemoteCan.c: 428: LATA = 0x00;
  2398                           
  2399                           ;incstack = 0
  2400  0157A0  0E00               	movlw	0
  2401  0157A2  6E89               	movwf	3977,c	;volatile
  2402                           
  2403                           ;RemoteCan.c: 429: TRISA = 0b00011111;
  2404  0157A4  0E1F               	movlw	31
  2405  0157A6  6E92               	movwf	3986,c	;volatile
  2406                           
  2407                           ;RemoteCan.c: 430: LATB = 0x00;
  2408  0157A8  0E00               	movlw	0
  2409  0157AA  6E8A               	movwf	3978,c	;volatile
  2410                           
  2411                           ;RemoteCan.c: 431: TRISB = 0b11111011;
  2412  0157AC  0EFB               	movlw	251
  2413  0157AE  6E93               	movwf	3987,c	;volatile
  2414                           
  2415                           ;RemoteCan.c: 432: LATC = 0x00;
  2416  0157B0  0E00               	movlw	0
  2417  0157B2  6E8B               	movwf	3979,c	;volatile
  2418                           
  2419                           ;RemoteCan.c: 433: TRISC = 0b11110000;
  2420  0157B4  0EF0               	movlw	240
  2421  0157B6  6E94               	movwf	3988,c	;volatile
  2422                           
  2423                           ;RemoteCan.c: 434: LATD = 0x00;
  2424  0157B8  0E00               	movlw	0
  2425  0157BA  6E8C               	movwf	3980,c	;volatile
  2426                           
  2427                           ;RemoteCan.c: 435: TRISD = 0x00;
  2428  0157BC  0E00               	movlw	0
  2429  0157BE  6E95               	movwf	3989,c	;volatile
  2430                           
  2431                           ;RemoteCan.c: 436: LATE = 0x00;
  2432  0157C0  0E00               	movlw	0
  2433  0157C2  6E8D               	movwf	3981,c	;volatile
  2434                           
  2435                           ;RemoteCan.c: 437: TRISE = 0x00;
  2436  0157C4  0E00               	movlw	0
  2437  0157C6  6E96               	movwf	3990,c	;volatile
  2438                           
  2439                           ;RemoteCan.c: 439: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_
      +                          SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  2440  0157C8  0E06               	movlw	6
  2441  0157CA  0100               	movlb	0	; () banked
  2442  0157CC  6F80               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2443  0157CE  0E05               	movlw	5
  2444  0157D0  0100               	movlb	0	; () banked
  2445  0157D2  6F81               	movwf	CANInitialize@phaseSeg2& (0+255),b
  2446  0157D4  0E01               	movlw	1
  2447  0157D6  0100               	movlb	0	; () banked
  2448  0157D8  6F82               	movwf	CANInitialize@SJW& (0+255),b
  2449  0157DA  0E03               	movlw	3
  2450  0157DC  0100               	movlb	0	; () banked
  2451  0157DE  6F83               	movwf	CANInitialize@BRP& (0+255),b
  2452  0157E0  0E9D               	movlw	157
  2453  0157E2  0100               	movlb	0	; () banked
  2454  0157E4  6F84               	movwf	CANInitialize@flags& (0+255),b
  2455  0157E6  0E04               	movlw	4
  2456  0157E8  ECCA  F0A4         	call	_CANInitialize
  2457                           
  2458                           ;RemoteCan.c: 443: PIR2bits.TMR3IF = 0;
  2459  0157EC  92A1               	bcf	4001,1,c	;volatile
  2460                           
  2461                           ;RemoteCan.c: 444: PIR3bits.RXB1IF = 0;
  2462  0157EE  92A4               	bcf	4004,1,c	;volatile
  2463                           
  2464                           ;RemoteCan.c: 445: PIR3bits.RXB0IF = 0;
  2465  0157F0  90A4               	bcf	4004,0,c	;volatile
  2466                           
  2467                           ;RemoteCan.c: 448: RCONbits.IPEN = 1;
  2468  0157F2  8ED0               	bsf	4048,7,c	;volatile
  2469                           
  2470                           ;RemoteCan.c: 449: IPR3bits.RXB1IP = 1;
  2471  0157F4  82A5               	bsf	4005,1,c	;volatile
  2472                           
  2473                           ;RemoteCan.c: 450: IPR3bits.RXB0IP = 1;
  2474  0157F6  80A5               	bsf	4005,0,c	;volatile
  2475                           
  2476                           ;RemoteCan.c: 451: IPR2bits.TMR3IP = 0;
  2477  0157F8  92A2               	bcf	4002,1,c	;volatile
  2478                           
  2479                           ;RemoteCan.c: 454: ADCON1 = 0b00001101;
  2480  0157FA  0E0D               	movlw	13
  2481  0157FC  6EC1               	movwf	4033,c	;volatile
  2482                           
  2483                           ;RemoteCan.c: 455: ADCON0bits.CHS2 = 0;
  2484  0157FE  98C2               	bcf	4034,4,c	;volatile
  2485                           
  2486                           ;RemoteCan.c: 456: ADCON0bits.CHS1 = 0;
  2487  015800  96C2               	bcf	4034,3,c	;volatile
  2488                           
  2489                           ;RemoteCan.c: 457: ADCON0bits.CHS0 = 0;
  2490  015802  94C2               	bcf	4034,2,c	;volatile
  2491                           
  2492                           ;RemoteCan.c: 458: ADCON2bits.ACQT2 = 1;
  2493  015804  8AC0               	bsf	4032,5,c	;volatile
  2494                           
  2495                           ;RemoteCan.c: 459: ADCON2bits.ACQT1 = 1;
  2496  015806  88C0               	bsf	4032,4,c	;volatile
  2497                           
  2498                           ;RemoteCan.c: 460: ADCON2bits.ACQT0 = 0;
  2499  015808  96C0               	bcf	4032,3,c	;volatile
  2500                           
  2501                           ;RemoteCan.c: 461: ADCON2bits.ADCS2 = 1;
  2502  01580A  84C0               	bsf	4032,2,c	;volatile
  2503                           
  2504                           ;RemoteCan.c: 462: ADCON2bits.ADCS1 = 0;
  2505  01580C  92C0               	bcf	4032,1,c	;volatile
  2506                           
  2507                           ;RemoteCan.c: 463: ADCON2bits.ADCS0 = 1;
  2508  01580E  80C0               	bsf	4032,0,c	;volatile
  2509                           
  2510                           ;RemoteCan.c: 464: ADCON2bits.ADFM = 0;
  2511  015810  9EC0               	bcf	4032,7,c	;volatile
  2512                           
  2513                           ;RemoteCan.c: 465: ADCON0bits.ADON = 1;
  2514  015812  80C2               	bsf	4034,0,c	;volatile
  2515                           
  2516                           ;RemoteCan.c: 468: LCD_initialize(16);
  2517  015814  0E10               	movlw	16
  2518  015816  EC08  F0A8         	call	_LCD_initialize
  2519                           
  2520                           ;RemoteCan.c: 470: LCD_clear();
  2521  01581A  EC45  F0AE         	call	_LCD_clear	;wreg free
  2522                           
  2523                           ;RemoteCan.c: 471: LCD_goto_line(1);
  2524  01581E  0E01               	movlw	1
  2525  015820  ECEB  F0A9         	call	_LCD_goto_line
  2526                           
  2527                           ;RemoteCan.c: 475: PORTDbits.RD2 = 0;
  2528  015824  9483               	bcf	3971,2,c	;volatile
  2529                           
  2530                           ;RemoteCan.c: 476: PORTDbits.RD3 = 0;
  2531  015826  9683               	bcf	3971,3,c	;volatile
  2532                           
  2533                           ;RemoteCan.c: 479: TMR3H = 0x63;
  2534  015828  0E63               	movlw	99
  2535  01582A  6EB3               	movwf	4019,c	;volatile
  2536                           
  2537                           ;RemoteCan.c: 480: TMR3L = 0xC0;
  2538  01582C  0EC0               	movlw	192
  2539  01582E  6EB2               	movwf	4018,c	;volatile
  2540                           
  2541                           ;RemoteCan.c: 483: PIE3bits.RXB1IE = 1;
  2542  015830  82A3               	bsf	4003,1,c	;volatile
  2543                           
  2544                           ;RemoteCan.c: 484: PIE3bits.RXB0IE = 1;
  2545  015832  80A3               	bsf	4003,0,c	;volatile
  2546                           
  2547                           ;RemoteCan.c: 485: PIE2bits.TMR3IE = 1;
  2548  015834  82A0               	bsf	4000,1,c	;volatile
  2549                           
  2550                           ;RemoteCan.c: 488: T3CON = 0x01;
  2551  015836  0E01               	movlw	1
  2552  015838  6EB1               	movwf	4017,c	;volatile
  2553                           
  2554                           ;RemoteCan.c: 489: LCD_clear();
  2555  01583A  EC45  F0AE         	call	_LCD_clear	;wreg free
  2556                           
  2557                           ;RemoteCan.c: 490: INTCONbits.GIEH = 1;
  2558  01583E  8EF2               	bsf	intcon,7,c	;volatile
  2559                           
  2560                           ;RemoteCan.c: 491: INTCONbits.GIEL = 1;
  2561  015840  8CF2               	bsf	intcon,6,c	;volatile
  2562  015842  0012               	return		;funcret
  2563  015844                     __end_of_board_initialization:
  2564                           	opt stack 0
  2565                           tblptru	equ	0xFF8
  2566                           tblptrh	equ	0xFF7
  2567                           tblptrl	equ	0xFF6
  2568                           tablat	equ	0xFF5
  2569                           intcon	equ	0xFF2
  2570                           postinc0	equ	0xFEE
  2571                           wreg	equ	0xFE8
  2572                           status	equ	0xFD8
  2573                           
  2574 ;; *************** function _CANInitialize *****************
  2575 ;; Defined at:
  2576 ;;		line 218 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;  propSeg         1    wreg     unsigned char 
  2579 ;;  phaseSeg1       1   32[BANK0 ] unsigned char 
  2580 ;;  phaseSeg2       1   33[BANK0 ] unsigned char 
  2581 ;;  SJW             1   34[BANK0 ] unsigned char 
  2582 ;;  BRP             1   35[BANK0 ] unsigned char 
  2583 ;;  flags           1   36[BANK0 ] enum E16887
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;  propSeg         1   41[BANK0 ] unsigned char 
  2586 ;;  FilterConfig    1   43[BANK0 ] unsigned char 
  2587 ;;  FilterConfig    1   42[BANK0 ] unsigned char 
  2588 ;; Return value:  Size  Location     Type
  2589 ;;		None               void
  2590 ;; Registers used:
  2591 ;;		wreg, status,2, status,0, cstack
  2592 ;; Tracked objects:
  2593 ;;		On entry : 0/0
  2594 ;;		On exit  : 0/0
  2595 ;;		Unchanged: 0/0
  2596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2597 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2598 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2599 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2600 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2601 ;;Total ram usage:       12 bytes
  2602 ;; Hardware stack levels used:    1
  2603 ;; Hardware stack levels required when called:    4
  2604 ;; This function calls:
  2605 ;;		_CANOperationMode
  2606 ;;		_CANSetFilter
  2607 ;;		_CANSetMask
  2608 ;; This function is called by:
  2609 ;;		_board_initialization
  2610 ;; This function uses a non-reentrant model
  2611 ;;
  2612                           
  2613                           	psect	text2
  2614  014994                     __ptext2:
  2615                           	opt stack 0
  2616  014994                     _CANInitialize:
  2617                           	opt stack 25
  2618                           
  2619                           ;incstack = 0
  2620                           ;CANInitialize@propSeg stored from wreg
  2621  014994  0100               	movlb	0	; () banked
  2622  014996  6F89               	movwf	CANInitialize@propSeg& (0+255),b
  2623                           
  2624                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  2625                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  2626                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  2627  014998  0E80               	movlw	128
  2628  01499A  ECF0  F0AE         	call	_CANOperationMode
  2629                           
  2630                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  2631  01499E  0E00               	movlw	0
  2632  0149A0  6E70               	movwf	3952,c	;volatile
  2633                           
  2634                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  2635  0149A2  0E00               	movlw	0
  2636  0149A4  6E71               	movwf	3953,c	;volatile
  2637                           
  2638                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  2639  0149A6  0E00               	movlw	0
  2640  0149A8  6E72               	movwf	3954,c	;volatile
  2641                           
  2642                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  2643  0149AA  0100               	movlb	0	; () banked
  2644  0149AC  4182               	rrncf	CANInitialize@SJW& (0+255),w,b
  2645  0149AE  42E8               	rrncf	wreg,f,c
  2646  0149B0  0BC0               	andlw	192
  2647  0149B2  0100               	movlb	0	; () banked
  2648  0149B4  6F82               	movwf	CANInitialize@SJW& (0+255),b
  2649                           
  2650                           ; BSR set to: 0
  2651                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  2652  0149B6  0100               	movlb	0	; () banked
  2653  0149B8  5182               	movf	CANInitialize@SJW& (0+255),w,b
  2654  0149BA  1270               	iorwf	3952,f,c	;volatile
  2655                           
  2656                           ; BSR set to: 0
  2657                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  2658  0149BC  0100               	movlb	0	; () banked
  2659  0149BE  5183               	movf	CANInitialize@BRP& (0+255),w,b
  2660  0149C0  1270               	iorwf	3952,f,c	;volatile
  2661                           
  2662                           ; BSR set to: 0
  2663                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  2664  0149C2  0100               	movlb	0	; () banked
  2665  0149C4  5189               	movf	CANInitialize@propSeg& (0+255),w,b
  2666  0149C6  1271               	iorwf	3953,f,c	;volatile
  2667                           
  2668                           ; BSR set to: 0
  2669                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  2670  0149C8  0100               	movlb	0	; () banked
  2671  0149CA  3980               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  2672  0149CC  42E8               	rrncf	wreg,f,c
  2673  0149CE  0BF8               	andlw	248
  2674  0149D0  0100               	movlb	0	; () banked
  2675  0149D2  6F80               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2676                           
  2677                           ; BSR set to: 0
  2678                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  2679  0149D4  0100               	movlb	0	; () banked
  2680  0149D6  5180               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  2681  0149D8  1271               	iorwf	3953,f,c	;volatile
  2682                           
  2683                           ; BSR set to: 0
  2684                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  2685  0149DA  0100               	movlb	0	; () banked
  2686  0149DC  A584               	btfss	CANInitialize@flags& (0+255),2,b
  2687                           
  2688                           ; BSR set to: 0
  2689                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  2690  0149DE  8C71               	bsf	3953,6,c	;volatile
  2691                           
  2692                           ; BSR set to: 0
  2693                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  2694  0149E0  0100               	movlb	0	; () banked
  2695  0149E2  B184               	btfsc	CANInitialize@flags& (0+255),0,b
  2696                           
  2697                           ; BSR set to: 0
  2698                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  2699  0149E4  8E71               	bsf	3953,7,c	;volatile
  2700                           
  2701                           ; BSR set to: 0
  2702                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  2703                           
  2704                           ; BSR set to: 0
  2705  0149E6  0100               	movlb	0	; () banked
  2706  0149E8  5181               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  2707  0149EA  1272               	iorwf	3954,f,c	;volatile
  2708                           
  2709                           ; BSR set to: 0
  2710                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  2711  0149EC  0100               	movlb	0	; () banked
  2712  0149EE  B384               	btfsc	CANInitialize@flags& (0+255),1,b
  2713                           
  2714                           ; BSR set to: 0
  2715                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  2716  0149F0  8C72               	bsf	3954,6,c	;volatile
  2717                           
  2718                           ; BSR set to: 0
  2719                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  2720                           
  2721                           ; BSR set to: 0
  2722  0149F2  0100               	movlb	0	; () banked
  2723  0149F4  5184               	movf	CANInitialize@flags& (0+255),w,b
  2724  0149F6  0B60               	andlw	96
  2725  0149F8  6E60               	movwf	3936,c	;volatile
  2726                           
  2727                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  2728  0149FA  0100               	movlb	0	; () banked
  2729  0149FC  5184               	movf	CANInitialize@flags& (0+255),w,b
  2730  0149FE  0B10               	andlw	16
  2731  014A00  0AFF               	xorlw	255
  2732  014A02  B4D8               	btfsc	status,2,c
  2733                           
  2734                           ; BSR set to: 0
  2735                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  2736  014A04  8460               	bsf	3936,2,c	;volatile
  2737                           
  2738                           ; BSR set to: 0
  2739                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  2740  014A06  CF60 FF50          	movff	3936,3920	;volatile
  2741                           
  2742                           ; BSR set to: 0
  2743                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  2744  014A0A  0E00               	movlw	0
  2745  014A0C  0100               	movlb	0	; () banked
  2746  014A0E  6F72               	movwf	CANSetMask@mask& (0+255),b
  2747  014A10  0E00               	movlw	0
  2748  014A12  6F73               	movwf	(CANSetMask@mask+1)& (0+255),b
  2749  014A14  0E00               	movlw	0
  2750  014A16  6F74               	movwf	(CANSetMask@mask+2)& (0+255),b
  2751  014A18  0E00               	movlw	0
  2752  014A1A  6F75               	movwf	(CANSetMask@mask+3)& (0+255),b
  2753  014A1C  0EF7               	movlw	247
  2754  014A1E  0100               	movlb	0	; () banked
  2755  014A20  6F76               	movwf	CANSetMask@type& (0+255),b
  2756  014A22  0E01               	movlw	1
  2757  014A24  ECAC  F09F         	call	_CANSetMask
  2758                           
  2759                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  2760  014A28  0E00               	movlw	0
  2761  014A2A  0100               	movlb	0	; () banked
  2762  014A2C  6F72               	movwf	CANSetMask@mask& (0+255),b
  2763  014A2E  0E00               	movlw	0
  2764  014A30  6F73               	movwf	(CANSetMask@mask+1)& (0+255),b
  2765  014A32  0E00               	movlw	0
  2766  014A34  6F74               	movwf	(CANSetMask@mask+2)& (0+255),b
  2767  014A36  0E00               	movlw	0
  2768  014A38  6F75               	movwf	(CANSetMask@mask+3)& (0+255),b
  2769  014A3A  0EF7               	movlw	247
  2770  014A3C  0100               	movlb	0	; () banked
  2771  014A3E  6F76               	movwf	CANSetMask@type& (0+255),b
  2772  014A40  0E02               	movlw	2
  2773  014A42  ECAC  F09F         	call	_CANSetMask
  2774                           
  2775                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  2776  014A46  D00F               	goto	l5794
  2777  014A48                     l5788:
  2778                           
  2779                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  2780  014A48  0EF7               	movlw	247
  2781  014A4A  0100               	movlb	0	; () banked
  2782  014A4C  6F8A               	movwf	CANInitialize@FilterConfig1& (0+255),b
  2783  014A4E  D007               	goto	l5790
  2784  014A50                     l370:
  2785                           
  2786                           ; BSR set to: 0
  2787                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2788  014A50  0100               	movlb	0	; () banked
  2789  014A52  698A               	setf	CANInitialize@FilterConfig1& (0+255),b
  2790                           
  2791                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  2792  014A54  0100               	movlb	0	; () banked
  2793  014A56  698B               	setf	CANInitialize@FilterConfig2& (0+255),b
  2794                           
  2795                           ;inc\CANlib.h: 273: break;
  2796  014A58  D028               	goto	l5796
  2797  014A5A                     l371:
  2798                           
  2799                           ; BSR set to: 0
  2800                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2801  014A5A  0100               	movlb	0	; () banked
  2802  014A5C  698A               	setf	CANInitialize@FilterConfig1& (0+255),b
  2803  014A5E                     l5790:
  2804                           
  2805                           ; BSR set to: 0
  2806                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  2807  014A5E  0EF7               	movlw	247
  2808  014A60  0100               	movlb	0	; () banked
  2809  014A62  6F8B               	movwf	CANInitialize@FilterConfig2& (0+255),b
  2810                           
  2811                           ; BSR set to: 0
  2812                           ;inc\CANlib.h: 278: }
  2813                           
  2814                           ;inc\CANlib.h: 277: break;
  2815  014A64  D022               	goto	l5796
  2816  014A66                     l5794:
  2817  014A66  0E9F               	movlw	159
  2818  014A68  0100               	movlb	0	; () banked
  2819  014A6A  6F85               	movwf	??_CANInitialize& (0+255),b
  2820  014A6C  0EFF               	movlw	255
  2821  014A6E  0100               	movlb	0	; () banked
  2822  014A70  6F86               	movwf	(??_CANInitialize+1)& (0+255),b
  2823  014A72  0100               	movlb	0	; () banked
  2824  014A74  5184               	movf	CANInitialize@flags& (0+255),w,b
  2825  014A76  0B60               	andlw	96
  2826  014A78  0100               	movlb	0	; () banked
  2827  014A7A  6F87               	movwf	(??_CANInitialize+2)& (0+255),b
  2828  014A7C  6B88               	clrf	(??_CANInitialize+3)& (0+255),b
  2829  014A7E  0100               	movlb	0	; () banked
  2830  014A80  5185               	movf	??_CANInitialize& (0+255),w,b
  2831  014A82  0100               	movlb	0	; () banked
  2832  014A84  1387               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  2833  014A86  0100               	movlb	0	; () banked
  2834  014A88  5186               	movf	(??_CANInitialize+1)& (0+255),w,b
  2835  014A8A  0100               	movlb	0	; () banked
  2836  014A8C  1388               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  2837                           
  2838                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2839                           ; Switch size 1, requested type "space"
  2840                           ; Number of cases is 1, Range of values is 0 to 0
  2841                           ; switch strategies available:
  2842                           ; Name         Instructions Cycles
  2843                           ; simple_byte            4     3 (average)
  2844                           ;	Chosen strategy is simple_byte
  2845  014A8E  0100               	movlb	0	; () banked
  2846  014A90  5188               	movf	(??_CANInitialize+3)& (0+255),w,b
  2847  014A92  0A00               	xorlw	0	; case 0
  2848  014A94  A4D8               	btfss	status,2,c
  2849  014A96  D7E1               	goto	l371
  2850                           
  2851                           ; BSR set to: 0
  2852                           ; Switch size 1, requested type "space"
  2853                           ; Number of cases is 2, Range of values is 191 to 223
  2854                           ; switch strategies available:
  2855                           ; Name         Instructions Cycles
  2856                           ; simple_byte            7     4 (average)
  2857                           ;	Chosen strategy is simple_byte
  2858  014A98  0100               	movlb	0	; () banked
  2859  014A9A  5187               	movf	(??_CANInitialize+2)& (0+255),w,b
  2860  014A9C  0ABF               	xorlw	191	; case 191
  2861  014A9E  B4D8               	btfsc	status,2,c
  2862  014AA0  D7D7               	goto	l370
  2863  014AA2  0A60               	xorlw	96	; case 223
  2864  014AA4  B4D8               	btfsc	status,2,c
  2865  014AA6  D7D0               	goto	l5788
  2866  014AA8  D7D8               	goto	l371
  2867  014AAA                     l5796:
  2868                           
  2869                           ; BSR set to: 0
  2870                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  2871  014AAA  0E00               	movlw	0
  2872  014AAC  0100               	movlb	0	; () banked
  2873  014AAE  6F72               	movwf	CANSetFilter@filter& (0+255),b
  2874  014AB0  0E00               	movlw	0
  2875  014AB2  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2876  014AB4  0E00               	movlw	0
  2877  014AB6  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2878  014AB8  0E00               	movlw	0
  2879  014ABA  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2880  014ABC  C08A  F076         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2881  014AC0  0E00               	movlw	0
  2882  014AC2  EC00  F080         	call	_CANSetFilter
  2883                           
  2884                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  2885  014AC6  0E00               	movlw	0
  2886  014AC8  0100               	movlb	0	; () banked
  2887  014ACA  6F72               	movwf	CANSetFilter@filter& (0+255),b
  2888  014ACC  0E00               	movlw	0
  2889  014ACE  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2890  014AD0  0E00               	movlw	0
  2891  014AD2  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2892  014AD4  0E00               	movlw	0
  2893  014AD6  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2894  014AD8  C08A  F076         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2895  014ADC  0E01               	movlw	1
  2896  014ADE  EC00  F080         	call	_CANSetFilter
  2897                           
  2898                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  2899  014AE2  0E00               	movlw	0
  2900  014AE4  0100               	movlb	0	; () banked
  2901  014AE6  6F72               	movwf	CANSetFilter@filter& (0+255),b
  2902  014AE8  0E00               	movlw	0
  2903  014AEA  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2904  014AEC  0E00               	movlw	0
  2905  014AEE  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2906  014AF0  0E00               	movlw	0
  2907  014AF2  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2908  014AF4  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2909  014AF8  0E02               	movlw	2
  2910  014AFA  EC00  F080         	call	_CANSetFilter
  2911                           
  2912                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  2913  014AFE  0E00               	movlw	0
  2914  014B00  0100               	movlb	0	; () banked
  2915  014B02  6F72               	movwf	CANSetFilter@filter& (0+255),b
  2916  014B04  0E00               	movlw	0
  2917  014B06  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2918  014B08  0E00               	movlw	0
  2919  014B0A  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2920  014B0C  0E00               	movlw	0
  2921  014B0E  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2922  014B10  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2923  014B14  0E03               	movlw	3
  2924  014B16  EC00  F080         	call	_CANSetFilter
  2925                           
  2926                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  2927  014B1A  0E00               	movlw	0
  2928  014B1C  0100               	movlb	0	; () banked
  2929  014B1E  6F72               	movwf	CANSetFilter@filter& (0+255),b
  2930  014B20  0E00               	movlw	0
  2931  014B22  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2932  014B24  0E00               	movlw	0
  2933  014B26  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2934  014B28  0E00               	movlw	0
  2935  014B2A  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2936  014B2C  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2937  014B30  0E04               	movlw	4
  2938  014B32  EC00  F080         	call	_CANSetFilter
  2939                           
  2940                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  2941  014B36  0E00               	movlw	0
  2942  014B38  0100               	movlb	0	; () banked
  2943  014B3A  6F72               	movwf	CANSetFilter@filter& (0+255),b
  2944  014B3C  0E00               	movlw	0
  2945  014B3E  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2946  014B40  0E00               	movlw	0
  2947  014B42  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2948  014B44  0E00               	movlw	0
  2949  014B46  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2950  014B48  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2951  014B4C  0E05               	movlw	5
  2952  014B4E  EC00  F080         	call	_CANSetFilter
  2953                           
  2954                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  2955  014B52  0E00               	movlw	0
  2956  014B54  ECF0  F0AE         	call	_CANOperationMode
  2957  014B58  0012               	return		;funcret
  2958  014B5A                     __end_of_CANInitialize:
  2959                           	opt stack 0
  2960                           tblptru	equ	0xFF8
  2961                           tblptrh	equ	0xFF7
  2962                           tblptrl	equ	0xFF6
  2963                           tablat	equ	0xFF5
  2964                           intcon	equ	0xFF2
  2965                           postinc0	equ	0xFEE
  2966                           wreg	equ	0xFE8
  2967                           status	equ	0xFD8
  2968                           
  2969 ;; *************** function _CANSetMask *****************
  2970 ;; Defined at:
  2971 ;;		line 640 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;  numBuffer       1    wreg     enum E16921
  2974 ;;  mask            4   18[BANK0 ] unsigned long 
  2975 ;;  type            1   22[BANK0 ] enum E16887
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;  numBuffer       1   27[BANK0 ] enum E16921
  2978 ;;  tamp            4   28[BANK0 ] unsigned long 
  2979 ;; Return value:  Size  Location     Type
  2980 ;;		None               void
  2981 ;; Registers used:
  2982 ;;		wreg, status,2, status,0
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2988 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2989 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2990 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2991 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2992 ;;Total ram usage:       14 bytes
  2993 ;; Hardware stack levels used:    1
  2994 ;; Hardware stack levels required when called:    3
  2995 ;; This function calls:
  2996 ;;		Nothing
  2997 ;; This function is called by:
  2998 ;;		_CANInitialize
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002                           	psect	text3
  3003  013F58                     __ptext3:
  3004                           	opt stack 0
  3005  013F58                     _CANSetMask:
  3006                           	opt stack 25
  3007                           
  3008                           ;incstack = 0
  3009                           ;CANSetMask@numBuffer stored from wreg
  3010  013F58  0100               	movlb	0	; () banked
  3011  013F5A  6F7B               	movwf	CANSetMask@numBuffer& (0+255),b
  3012                           
  3013                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3014  013F5C  0100               	movlb	0	; () banked
  3015  013F5E  057B               	decf	CANSetMask@numBuffer& (0+255),w,b
  3016  013F60  A4D8               	btfss	status,2,c
  3017  013F62  D056               	goto	l4966
  3018                           
  3019                           ; BSR set to: 0
  3020  013F64  0100               	movlb	0	; () banked
  3021  013F66  2976               	incf	CANSetMask@type& (0+255),w,b
  3022  013F68  A4D8               	btfss	status,2,c
  3023  013F6A  D052               	goto	l4966
  3024                           
  3025                           ; BSR set to: 0
  3026                           ;inc\CANlib.h: 644: {
  3027                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3028  013F6C  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  3029  013F70  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3030  013F74  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3031  013F78  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3032  013F7C  0E04               	movlw	4
  3033  013F7E  D006               	goto	u5570
  3034  013F80                     u5575:
  3035  013F80  0100               	movlb	0	; () banked
  3036  013F82  90D8               	bcf	status,0,c
  3037  013F84  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3038  013F86  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3039  013F88  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3040  013F8A  3377               	rrcf	??_CANSetMask& (0+255),f,b
  3041  013F8C                     u5570:
  3042  013F8C  2EE8               	decfsz	wreg,f,c
  3043  013F8E  D7F8               	goto	u5575
  3044  013F90  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3045  013F94  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3046  013F98  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3047  013F9C  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3048                           
  3049                           ; BSR set to: 0
  3050                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3051  013FA0  0100               	movlb	0	; () banked
  3052  013FA2  517C               	movf	CANSetMask@tamp& (0+255),w,b
  3053  013FA4  0100               	movlb	0	; () banked
  3054  013FA6  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3055  013FA8  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3056  013FAA  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3057  013FAC  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3058                           
  3059                           ; BSR set to: 0
  3060                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3061  013FAE  C07C  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3062                           
  3063                           ; BSR set to: 0
  3064                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3065  013FB2  0E07               	movlw	7
  3066  013FB4  0100               	movlb	0	; () banked
  3067  013FB6  1572               	andwf	CANSetMask@mask& (0+255),w,b
  3068  013FB8  0100               	movlb	0	; () banked
  3069  013FBA  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3070  013FBC  0E00               	movlw	0
  3071  013FBE  0100               	movlb	0	; () banked
  3072  013FC0  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3073  013FC2  0100               	movlb	0	; () banked
  3074  013FC4  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3075  013FC6  0E00               	movlw	0
  3076  013FC8  0100               	movlb	0	; () banked
  3077  013FCA  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3078  013FCC  0100               	movlb	0	; () banked
  3079  013FCE  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3080  013FD0  0E00               	movlw	0
  3081  013FD2  0100               	movlb	0	; () banked
  3082  013FD4  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3083  013FD6  0100               	movlb	0	; () banked
  3084  013FD8  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3085                           
  3086                           ; BSR set to: 0
  3087                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3088  013FDA  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  3089  013FDE  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3090  013FE2  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3091  013FE6  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3092  013FEA  0E05               	movlw	5
  3093  013FEC                     u5585:
  3094  013FEC  90D8               	bcf	status,0,c
  3095  013FEE  0100               	movlb	0	; () banked
  3096  013FF0  3777               	rlcf	??_CANSetMask& (0+255),f,b
  3097  013FF2  3778               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3098  013FF4  3779               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3099  013FF6  377A               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3100  013FF8  2EE8               	decfsz	wreg,f,c
  3101  013FFA  D7F8               	goto	u5585
  3102  013FFC  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3103  014000  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3104  014004  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3105  014008  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3106                           
  3107                           ; BSR set to: 0
  3108                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3109  01400C  C07C  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3110  014010                     l4966:
  3111                           
  3112                           ; BSR set to: 0
  3113                           ;inc\CANlib.h: 652: }
  3114                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3115  014010  0E02               	movlw	2
  3116  014012  0100               	movlb	0	; () banked
  3117  014014  197B               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3118  014016  A4D8               	btfss	status,2,c
  3119  014018  D056               	goto	l4982
  3120                           
  3121                           ; BSR set to: 0
  3122  01401A  0100               	movlb	0	; () banked
  3123  01401C  2976               	incf	CANSetMask@type& (0+255),w,b
  3124  01401E  A4D8               	btfss	status,2,c
  3125  014020  D052               	goto	l4982
  3126                           
  3127                           ; BSR set to: 0
  3128                           ;inc\CANlib.h: 655: {
  3129                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  3130  014022  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  3131  014026  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3132  01402A  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3133  01402E  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3134  014032  0E04               	movlw	4
  3135  014034  D006               	goto	u5610
  3136  014036                     u5615:
  3137  014036  0100               	movlb	0	; () banked
  3138  014038  90D8               	bcf	status,0,c
  3139  01403A  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3140  01403C  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3141  01403E  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3142  014040  3377               	rrcf	??_CANSetMask& (0+255),f,b
  3143  014042                     u5610:
  3144  014042  2EE8               	decfsz	wreg,f,c
  3145  014044  D7F8               	goto	u5615
  3146  014046  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3147  01404A  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3148  01404E  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3149  014052  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3150                           
  3151                           ; BSR set to: 0
  3152                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  3153  014056  0100               	movlb	0	; () banked
  3154  014058  517C               	movf	CANSetMask@tamp& (0+255),w,b
  3155  01405A  0100               	movlb	0	; () banked
  3156  01405C  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3157  01405E  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3158  014060  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3159  014062  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3160                           
  3161                           ; BSR set to: 0
  3162                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  3163  014064  C07C  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3164                           
  3165                           ; BSR set to: 0
  3166                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  3167  014068  0E07               	movlw	7
  3168  01406A  0100               	movlb	0	; () banked
  3169  01406C  1572               	andwf	CANSetMask@mask& (0+255),w,b
  3170  01406E  0100               	movlb	0	; () banked
  3171  014070  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3172  014072  0E00               	movlw	0
  3173  014074  0100               	movlb	0	; () banked
  3174  014076  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3175  014078  0100               	movlb	0	; () banked
  3176  01407A  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3177  01407C  0E00               	movlw	0
  3178  01407E  0100               	movlb	0	; () banked
  3179  014080  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3180  014082  0100               	movlb	0	; () banked
  3181  014084  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3182  014086  0E00               	movlw	0
  3183  014088  0100               	movlb	0	; () banked
  3184  01408A  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3185  01408C  0100               	movlb	0	; () banked
  3186  01408E  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3187                           
  3188                           ; BSR set to: 0
  3189                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  3190  014090  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  3191  014094  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3192  014098  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3193  01409C  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3194  0140A0  0E05               	movlw	5
  3195  0140A2                     u5625:
  3196  0140A2  90D8               	bcf	status,0,c
  3197  0140A4  0100               	movlb	0	; () banked
  3198  0140A6  3777               	rlcf	??_CANSetMask& (0+255),f,b
  3199  0140A8  3778               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3200  0140AA  3779               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3201  0140AC  377A               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3202  0140AE  2EE8               	decfsz	wreg,f,c
  3203  0140B0  D7F8               	goto	u5625
  3204  0140B2  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3205  0140B6  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3206  0140BA  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3207  0140BE  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3208                           
  3209                           ; BSR set to: 0
  3210                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  3211  0140C2  C07C  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  3212  0140C6                     l4982:
  3213                           
  3214                           ; BSR set to: 0
  3215                           ;inc\CANlib.h: 663: }
  3216                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  3217  0140C6  0100               	movlb	0	; () banked
  3218  0140C8  057B               	decf	CANSetMask@numBuffer& (0+255),w,b
  3219  0140CA  A4D8               	btfss	status,2,c
  3220  0140CC  D087               	goto	l5014
  3221                           
  3222                           ; BSR set to: 0
  3223  0140CE  0EF7               	movlw	247
  3224  0140D0  0100               	movlb	0	; () banked
  3225  0140D2  1976               	xorwf	CANSetMask@type& (0+255),w,b
  3226  0140D4  A4D8               	btfss	status,2,c
  3227  0140D6  D082               	goto	l5014
  3228                           
  3229                           ; BSR set to: 0
  3230                           ;inc\CANlib.h: 666: {
  3231                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  3232  0140D8  0100               	movlb	0	; () banked
  3233  0140DA  5172               	movf	CANSetMask@mask& (0+255),w,b
  3234  0140DC  0100               	movlb	0	; () banked
  3235  0140DE  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3236  0140E0  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3237  0140E2  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3238  0140E4  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3239                           
  3240                           ; BSR set to: 0
  3241                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  3242  0140E6  C07C  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  3243                           
  3244                           ; BSR set to: 0
  3245                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  3246  0140EA  0E00               	movlw	0
  3247  0140EC  0100               	movlb	0	; () banked
  3248  0140EE  1572               	andwf	CANSetMask@mask& (0+255),w,b
  3249  0140F0  0100               	movlb	0	; () banked
  3250  0140F2  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3251  0140F4  0EFF               	movlw	255
  3252  0140F6  0100               	movlb	0	; () banked
  3253  0140F8  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3254  0140FA  0100               	movlb	0	; () banked
  3255  0140FC  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3256  0140FE  0E00               	movlw	0
  3257  014100  0100               	movlb	0	; () banked
  3258  014102  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3259  014104  0100               	movlb	0	; () banked
  3260  014106  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3261  014108  0E00               	movlw	0
  3262  01410A  0100               	movlb	0	; () banked
  3263  01410C  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3264  01410E  0100               	movlb	0	; () banked
  3265  014110  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3266                           
  3267                           ; BSR set to: 0
  3268                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  3269  014112  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  3270  014116  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3271  01411A  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3272  01411E  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3273  014122  C078  F077         	movff	??_CANSetMask+1,??_CANSetMask
  3274  014126  C079  F078         	movff	??_CANSetMask+2,??_CANSetMask+1
  3275  01412A  C07A  F079         	movff	??_CANSetMask+3,??_CANSetMask+2
  3276  01412E  0100               	movlb	0	; () banked
  3277  014130  6B7A               	clrf	(??_CANSetMask+3)& (0+255),b
  3278  014132  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3279  014136  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3280  01413A  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3281  01413E  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3282                           
  3283                           ; BSR set to: 0
  3284                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  3285  014142  C07C  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  3286                           
  3287                           ; BSR set to: 0
  3288                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  3289  014146  0100               	movlb	0	; () banked
  3290  014148  A174               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3291  01414A  D003               	goto	l444
  3292                           
  3293                           ; BSR set to: 0
  3294                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  3295  01414C  010F               	movlb	15	; () banked
  3296  01414E  8119               	bsf	25,0,b	;volatile
  3297  014150  D002               	goto	l445
  3298  014152                     l444:
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;inc\CANlib.h: 676: else
  3302                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  3303  014152  010F               	movlb	15	; () banked
  3304  014154  9119               	bcf	25,0,b	;volatile
  3305  014156                     l445:
  3306                           
  3307                           ; BSR set to: 15
  3308                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  3309  014156  0100               	movlb	0	; () banked
  3310  014158  A374               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3311  01415A  D003               	goto	l446
  3312                           
  3313                           ; BSR set to: 0
  3314                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  3315  01415C  010F               	movlb	15	; () banked
  3316  01415E  8319               	bsf	25,1,b	;volatile
  3317  014160  D002               	goto	l447
  3318  014162                     l446:
  3319                           
  3320                           ; BSR set to: 0
  3321                           ;inc\CANlib.h: 681: else
  3322                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  3323  014162  010F               	movlb	15	; () banked
  3324  014164  9319               	bcf	25,1,b	;volatile
  3325  014166                     l447:
  3326                           
  3327                           ; BSR set to: 15
  3328                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  3329  014166  0100               	movlb	0	; () banked
  3330  014168  A574               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3331  01416A  D003               	goto	l448
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  3335  01416C  010F               	movlb	15	; () banked
  3336  01416E  8B19               	bsf	25,5,b	;volatile
  3337  014170  D002               	goto	l449
  3338  014172                     l448:
  3339                           
  3340                           ; BSR set to: 0
  3341                           ;inc\CANlib.h: 686: else
  3342                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  3343  014172  010F               	movlb	15	; () banked
  3344  014174  9B19               	bcf	25,5,b	;volatile
  3345  014176                     l449:
  3346                           
  3347                           ; BSR set to: 15
  3348                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  3349  014176  0100               	movlb	0	; () banked
  3350  014178  A774               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3351  01417A  D003               	goto	l450
  3352                           
  3353                           ; BSR set to: 0
  3354                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  3355  01417C  010F               	movlb	15	; () banked
  3356  01417E  8D19               	bsf	25,6,b	;volatile
  3357  014180  D002               	goto	l451
  3358  014182                     l450:
  3359                           
  3360                           ; BSR set to: 0
  3361                           ;inc\CANlib.h: 691: else
  3362                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  3363  014182  010F               	movlb	15	; () banked
  3364  014184  9D19               	bcf	25,6,b	;volatile
  3365  014186                     l451:
  3366                           
  3367                           ; BSR set to: 15
  3368                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  3369  014186  0100               	movlb	0	; () banked
  3370  014188  A974               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3371  01418A  D003               	goto	l452
  3372                           
  3373                           ; BSR set to: 0
  3374                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  3375  01418C  010F               	movlb	15	; () banked
  3376  01418E  8F19               	bsf	25,7,b	;volatile
  3377  014190  D002               	goto	l5008
  3378  014192                     l452:
  3379                           
  3380                           ; BSR set to: 0
  3381                           ;inc\CANlib.h: 696: else
  3382                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  3383  014192  010F               	movlb	15	; () banked
  3384  014194  9F19               	bcf	25,7,b	;volatile
  3385  014196                     l5008:
  3386                           
  3387                           ; BSR set to: 15
  3388                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  3389  014196  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  3390  01419A  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3391  01419E  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3392  0141A2  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3393  0141A6  0E16               	movlw	22
  3394  0141A8  D006               	goto	u5700
  3395  0141AA                     u5705:
  3396  0141AA  0100               	movlb	0	; () banked
  3397  0141AC  90D8               	bcf	status,0,c
  3398  0141AE  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3399  0141B0  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3400  0141B2  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3401  0141B4  3377               	rrcf	??_CANSetMask& (0+255),f,b
  3402  0141B6                     u5700:
  3403  0141B6  2EE8               	decfsz	wreg,f,c
  3404  0141B8  D7F8               	goto	u5705
  3405  0141BA  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3406  0141BE  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3407  0141C2  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3408  0141C6  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3409                           
  3410                           ; BSR set to: 0
  3411                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  3412  0141CA  0100               	movlb	0	; () banked
  3413  0141CC  517C               	movf	CANSetMask@tamp& (0+255),w,b
  3414  0141CE  0100               	movlb	0	; () banked
  3415  0141D0  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3416  0141D2  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3417  0141D4  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3418  0141D6  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3419                           
  3420                           ; BSR set to: 0
  3421                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  3422  0141D8  C07C  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3423  0141DC                     l5014:
  3424                           
  3425                           ; BSR set to: 0
  3426                           ;inc\CANlib.h: 702: }
  3427                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  3428  0141DC  0E02               	movlw	2
  3429  0141DE  0100               	movlb	0	; () banked
  3430  0141E0  197B               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3431  0141E2  A4D8               	btfss	status,2,c
  3432  0141E4  0012               	return	
  3433                           
  3434                           ; BSR set to: 0
  3435  0141E6  0EF7               	movlw	247
  3436  0141E8  0100               	movlb	0	; () banked
  3437  0141EA  1976               	xorwf	CANSetMask@type& (0+255),w,b
  3438  0141EC  A4D8               	btfss	status,2,c
  3439  0141EE  0012               	return	
  3440                           
  3441                           ; BSR set to: 0
  3442                           ;inc\CANlib.h: 705: {
  3443                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  3444  0141F0  0100               	movlb	0	; () banked
  3445  0141F2  5172               	movf	CANSetMask@mask& (0+255),w,b
  3446  0141F4  0100               	movlb	0	; () banked
  3447  0141F6  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3448  0141F8  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3449  0141FA  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3450  0141FC  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  3454  0141FE  C07C  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  3455                           
  3456                           ; BSR set to: 0
  3457                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  3458  014202  0E00               	movlw	0
  3459  014204  0100               	movlb	0	; () banked
  3460  014206  1572               	andwf	CANSetMask@mask& (0+255),w,b
  3461  014208  0100               	movlb	0	; () banked
  3462  01420A  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3463  01420C  0EFF               	movlw	255
  3464  01420E  0100               	movlb	0	; () banked
  3465  014210  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3466  014212  0100               	movlb	0	; () banked
  3467  014214  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3468  014216  0E00               	movlw	0
  3469  014218  0100               	movlb	0	; () banked
  3470  01421A  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3471  01421C  0100               	movlb	0	; () banked
  3472  01421E  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3473  014220  0E00               	movlw	0
  3474  014222  0100               	movlb	0	; () banked
  3475  014224  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3476  014226  0100               	movlb	0	; () banked
  3477  014228  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  3481  01422A  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  3482  01422E  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3483  014232  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3484  014236  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3485  01423A  C078  F077         	movff	??_CANSetMask+1,??_CANSetMask
  3486  01423E  C079  F078         	movff	??_CANSetMask+2,??_CANSetMask+1
  3487  014242  C07A  F079         	movff	??_CANSetMask+3,??_CANSetMask+2
  3488  014246  0100               	movlb	0	; () banked
  3489  014248  6B7A               	clrf	(??_CANSetMask+3)& (0+255),b
  3490  01424A  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3491  01424E  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3492  014252  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3493  014256  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3494                           
  3495                           ; BSR set to: 0
  3496                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  3497  01425A  C07C  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  3498                           
  3499                           ; BSR set to: 0
  3500                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  3501  01425E  0100               	movlb	0	; () banked
  3502  014260  A174               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3503  014262  D003               	goto	l455
  3504                           
  3505                           ; BSR set to: 0
  3506                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  3507  014264  010F               	movlb	15	; () banked
  3508  014266  811D               	bsf	29,0,b	;volatile
  3509  014268  D002               	goto	l456
  3510  01426A                     l455:
  3511                           
  3512                           ; BSR set to: 0
  3513                           ;inc\CANlib.h: 715: else
  3514                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  3515  01426A  010F               	movlb	15	; () banked
  3516  01426C  911D               	bcf	29,0,b	;volatile
  3517  01426E                     l456:
  3518                           
  3519                           ; BSR set to: 15
  3520                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  3521  01426E  0100               	movlb	0	; () banked
  3522  014270  A374               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3523  014272  D003               	goto	l457
  3524                           
  3525                           ; BSR set to: 0
  3526                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  3527  014274  010F               	movlb	15	; () banked
  3528  014276  831D               	bsf	29,1,b	;volatile
  3529  014278  D002               	goto	l458
  3530  01427A                     l457:
  3531                           
  3532                           ; BSR set to: 0
  3533                           ;inc\CANlib.h: 720: else
  3534                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  3535  01427A  010F               	movlb	15	; () banked
  3536  01427C  931D               	bcf	29,1,b	;volatile
  3537  01427E                     l458:
  3538                           
  3539                           ; BSR set to: 15
  3540                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  3541  01427E  0100               	movlb	0	; () banked
  3542  014280  A574               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3543  014282  D003               	goto	l459
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  3547  014284  010F               	movlb	15	; () banked
  3548  014286  8B1D               	bsf	29,5,b	;volatile
  3549  014288  D002               	goto	l460
  3550  01428A                     l459:
  3551                           
  3552                           ; BSR set to: 0
  3553                           ;inc\CANlib.h: 725: else
  3554                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  3555  01428A  010F               	movlb	15	; () banked
  3556  01428C  9B1D               	bcf	29,5,b	;volatile
  3557  01428E                     l460:
  3558                           
  3559                           ; BSR set to: 15
  3560                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  3561  01428E  0100               	movlb	0	; () banked
  3562  014290  A774               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3563  014292  D003               	goto	l461
  3564                           
  3565                           ; BSR set to: 0
  3566                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  3567  014294  010F               	movlb	15	; () banked
  3568  014296  8D1D               	bsf	29,6,b	;volatile
  3569  014298  D002               	goto	l462
  3570  01429A                     l461:
  3571                           
  3572                           ; BSR set to: 0
  3573                           ;inc\CANlib.h: 730: else
  3574                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  3575  01429A  010F               	movlb	15	; () banked
  3576  01429C  9D1D               	bcf	29,6,b	;volatile
  3577  01429E                     l462:
  3578                           
  3579                           ; BSR set to: 15
  3580                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  3581  01429E  0100               	movlb	0	; () banked
  3582  0142A0  A974               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3583  0142A2  D003               	goto	l463
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  3587  0142A4  010F               	movlb	15	; () banked
  3588  0142A6  8F1D               	bsf	29,7,b	;volatile
  3589  0142A8  D002               	goto	l5040
  3590  0142AA                     l463:
  3591                           
  3592                           ; BSR set to: 0
  3593                           ;inc\CANlib.h: 735: else
  3594                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  3595  0142AA  010F               	movlb	15	; () banked
  3596  0142AC  9F1D               	bcf	29,7,b	;volatile
  3597  0142AE                     l5040:
  3598                           
  3599                           ; BSR set to: 15
  3600                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  3601  0142AE  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  3602  0142B2  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3603  0142B6  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3604  0142BA  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3605  0142BE  0E16               	movlw	22
  3606  0142C0  D006               	goto	u5780
  3607  0142C2                     u5785:
  3608  0142C2  0100               	movlb	0	; () banked
  3609  0142C4  90D8               	bcf	status,0,c
  3610  0142C6  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3611  0142C8  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3612  0142CA  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3613  0142CC  3377               	rrcf	??_CANSetMask& (0+255),f,b
  3614  0142CE                     u5780:
  3615  0142CE  2EE8               	decfsz	wreg,f,c
  3616  0142D0  D7F8               	goto	u5785
  3617  0142D2  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3618  0142D6  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3619  0142DA  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3620  0142DE  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3621                           
  3622                           ; BSR set to: 0
  3623                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  3624  0142E2  0100               	movlb	0	; () banked
  3625  0142E4  517C               	movf	CANSetMask@tamp& (0+255),w,b
  3626  0142E6  0100               	movlb	0	; () banked
  3627  0142E8  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3628  0142EA  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3629  0142EC  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3630  0142EE  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  3634  0142F0  C07C  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3635  0142F4  0012               	return	
  3636  0142F6                     __end_of_CANSetMask:
  3637                           	opt stack 0
  3638                           tblptru	equ	0xFF8
  3639                           tblptrh	equ	0xFF7
  3640                           tblptrl	equ	0xFF6
  3641                           tablat	equ	0xFF5
  3642                           intcon	equ	0xFF2
  3643                           postinc0	equ	0xFEE
  3644                           wreg	equ	0xFE8
  3645                           status	equ	0xFD8
  3646                           
  3647 ;; *************** function _CANSetFilter *****************
  3648 ;; Defined at:
  3649 ;;		line 748 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3650 ;; Parameters:    Size  Location     Type
  3651 ;;  numBuffer       1    wreg     enum E16924
  3652 ;;  filter          4   18[BANK0 ] unsigned long 
  3653 ;;  type            1   22[BANK0 ] enum E16887
  3654 ;; Auto vars:     Size  Location     Type
  3655 ;;  numBuffer       1   27[BANK0 ] enum E16924
  3656 ;;  tamp            4   28[BANK0 ] unsigned long 
  3657 ;; Return value:  Size  Location     Type
  3658 ;;		None               void
  3659 ;; Registers used:
  3660 ;;		wreg, status,2, status,0
  3661 ;; Tracked objects:
  3662 ;;		On entry : 0/0
  3663 ;;		On exit  : 0/0
  3664 ;;		Unchanged: 0/0
  3665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3666 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3667 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3668 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3669 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3670 ;;Total ram usage:       14 bytes
  3671 ;; Hardware stack levels used:    1
  3672 ;; Hardware stack levels required when called:    3
  3673 ;; This function calls:
  3674 ;;		Nothing
  3675 ;; This function is called by:
  3676 ;;		_CANInitialize
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680                           	psect	text4
  3681  010000                     __ptext4:
  3682                           	opt stack 0
  3683  010000                     _CANSetFilter:
  3684                           	opt stack 25
  3685                           
  3686                           ; BSR set to: 0
  3687                           ;incstack = 0
  3688                           ;CANSetFilter@numBuffer stored from wreg
  3689  010000  0100               	movlb	0	; () banked
  3690  010002  6F7B               	movwf	CANSetFilter@numBuffer& (0+255),b
  3691                           
  3692                           ;inc\CANlib.h: 750: unsigned long tamp;
  3693                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  3694  010004  0100               	movlb	0	; () banked
  3695  010006  517B               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3696  010008  0100               	movlb	0	; () banked
  3697  01000A  A4D8               	btfss	status,2,c
  3698  01000C  D058               	goto	l5064
  3699                           
  3700                           ; BSR set to: 0
  3701  01000E  0100               	movlb	0	; () banked
  3702  010010  2976               	incf	CANSetFilter@type& (0+255),w,b
  3703  010012  A4D8               	btfss	status,2,c
  3704  010014  D054               	goto	l5064
  3705                           
  3706                           ; BSR set to: 0
  3707                           ;inc\CANlib.h: 753: {
  3708                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  3709  010016  010F               	movlb	15	; () banked
  3710  010018  9701               	bcf	1,3,b	;volatile
  3711                           
  3712                           ; BSR set to: 15
  3713                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  3714  01001A  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  3715  01001E  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3716  010022  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3717  010026  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3718  01002A  0E04               	movlw	4
  3719  01002C  D006               	goto	u5810
  3720  01002E                     u5815:
  3721  01002E  0100               	movlb	0	; () banked
  3722  010030  90D8               	bcf	status,0,c
  3723  010032  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3724  010034  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3725  010036  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3726  010038  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  3727  01003A                     u5810:
  3728  01003A  2EE8               	decfsz	wreg,f,c
  3729  01003C  D7F8               	goto	u5815
  3730  01003E  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3731  010042  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3732  010046  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3733  01004A  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3734                           
  3735                           ; BSR set to: 0
  3736                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  3737  01004E  0100               	movlb	0	; () banked
  3738  010050  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  3739  010052  0100               	movlb	0	; () banked
  3740  010054  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  3741  010056  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3742  010058  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3743  01005A  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3744                           
  3745                           ; BSR set to: 0
  3746                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  3747  01005C  C07C  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3748                           
  3749                           ; BSR set to: 0
  3750                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  3751  010060  0E07               	movlw	7
  3752  010062  0100               	movlb	0	; () banked
  3753  010064  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  3754  010066  0100               	movlb	0	; () banked
  3755  010068  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  3756  01006A  0E00               	movlw	0
  3757  01006C  0100               	movlb	0	; () banked
  3758  01006E  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3759  010070  0100               	movlb	0	; () banked
  3760  010072  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3761  010074  0E00               	movlw	0
  3762  010076  0100               	movlb	0	; () banked
  3763  010078  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3764  01007A  0100               	movlb	0	; () banked
  3765  01007C  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3766  01007E  0E00               	movlw	0
  3767  010080  0100               	movlb	0	; () banked
  3768  010082  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3769  010084  0100               	movlb	0	; () banked
  3770  010086  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3771                           
  3772                           ; BSR set to: 0
  3773                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  3774  010088  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  3775  01008C  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3776  010090  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3777  010094  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3778  010098  0E05               	movlw	5
  3779  01009A                     u5825:
  3780  01009A  90D8               	bcf	status,0,c
  3781  01009C  0100               	movlb	0	; () banked
  3782  01009E  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  3783  0100A0  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3784  0100A2  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3785  0100A4  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3786  0100A6  2EE8               	decfsz	wreg,f,c
  3787  0100A8  D7F8               	goto	u5825
  3788  0100AA  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3789  0100AE  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3790  0100B2  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3791  0100B6  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3792                           
  3793                           ; BSR set to: 0
  3794                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  3795  0100BA  C07C  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  3796  0100BE                     l5064:
  3797                           
  3798                           ; BSR set to: 0
  3799                           ;inc\CANlib.h: 763: }
  3800                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  3801  0100BE  0100               	movlb	0	; () banked
  3802  0100C0  057B               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3803  0100C2  A4D8               	btfss	status,2,c
  3804  0100C4  D058               	goto	l5082
  3805                           
  3806                           ; BSR set to: 0
  3807  0100C6  0100               	movlb	0	; () banked
  3808  0100C8  2976               	incf	CANSetFilter@type& (0+255),w,b
  3809  0100CA  A4D8               	btfss	status,2,c
  3810  0100CC  D054               	goto	l5082
  3811                           
  3812                           ; BSR set to: 0
  3813                           ;inc\CANlib.h: 766: {
  3814                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  3815  0100CE  010F               	movlb	15	; () banked
  3816  0100D0  9705               	bcf	5,3,b	;volatile
  3817                           
  3818                           ; BSR set to: 15
  3819                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  3820  0100D2  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  3821  0100D6  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3822  0100DA  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3823  0100DE  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3824  0100E2  0E04               	movlw	4
  3825  0100E4  D006               	goto	u5850
  3826  0100E6                     u5855:
  3827  0100E6  0100               	movlb	0	; () banked
  3828  0100E8  90D8               	bcf	status,0,c
  3829  0100EA  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3830  0100EC  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3831  0100EE  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3832  0100F0  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  3833  0100F2                     u5850:
  3834  0100F2  2EE8               	decfsz	wreg,f,c
  3835  0100F4  D7F8               	goto	u5855
  3836  0100F6  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3837  0100FA  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3838  0100FE  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3839  010102  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  3843  010106  0100               	movlb	0	; () banked
  3844  010108  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  3845  01010A  0100               	movlb	0	; () banked
  3846  01010C  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  3847  01010E  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3848  010110  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3849  010112  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  3853  010114  C07C  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  3854                           
  3855                           ; BSR set to: 0
  3856                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  3857  010118  0E07               	movlw	7
  3858  01011A  0100               	movlb	0	; () banked
  3859  01011C  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  3860  01011E  0100               	movlb	0	; () banked
  3861  010120  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  3862  010122  0E00               	movlw	0
  3863  010124  0100               	movlb	0	; () banked
  3864  010126  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3865  010128  0100               	movlb	0	; () banked
  3866  01012A  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3867  01012C  0E00               	movlw	0
  3868  01012E  0100               	movlb	0	; () banked
  3869  010130  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3870  010132  0100               	movlb	0	; () banked
  3871  010134  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3872  010136  0E00               	movlw	0
  3873  010138  0100               	movlb	0	; () banked
  3874  01013A  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3875  01013C  0100               	movlb	0	; () banked
  3876  01013E  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3877                           
  3878                           ; BSR set to: 0
  3879                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  3880  010140  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  3881  010144  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3882  010148  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3883  01014C  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3884  010150  0E05               	movlw	5
  3885  010152                     u5865:
  3886  010152  90D8               	bcf	status,0,c
  3887  010154  0100               	movlb	0	; () banked
  3888  010156  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  3889  010158  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3890  01015A  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3891  01015C  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3892  01015E  2EE8               	decfsz	wreg,f,c
  3893  010160  D7F8               	goto	u5865
  3894  010162  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3895  010166  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3896  01016A  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3897  01016E  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3898                           
  3899                           ; BSR set to: 0
  3900                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  3901  010172  C07C  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  3902  010176                     l5082:
  3903                           
  3904                           ; BSR set to: 0
  3905                           ;inc\CANlib.h: 776: }
  3906                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  3907  010176  0E02               	movlw	2
  3908  010178  0100               	movlb	0	; () banked
  3909  01017A  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3910  01017C  A4D8               	btfss	status,2,c
  3911  01017E  D058               	goto	l5100
  3912                           
  3913                           ; BSR set to: 0
  3914  010180  0100               	movlb	0	; () banked
  3915  010182  2976               	incf	CANSetFilter@type& (0+255),w,b
  3916  010184  A4D8               	btfss	status,2,c
  3917  010186  D054               	goto	l5100
  3918                           
  3919                           ; BSR set to: 0
  3920                           ;inc\CANlib.h: 779: {
  3921                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  3922  010188  010F               	movlb	15	; () banked
  3923  01018A  9709               	bcf	9,3,b	;volatile
  3924                           
  3925                           ; BSR set to: 15
  3926                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  3927  01018C  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  3928  010190  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3929  010194  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3930  010198  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3931  01019C  0E04               	movlw	4
  3932  01019E  D006               	goto	u5890
  3933  0101A0                     u5895:
  3934  0101A0  0100               	movlb	0	; () banked
  3935  0101A2  90D8               	bcf	status,0,c
  3936  0101A4  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3937  0101A6  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3938  0101A8  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3939  0101AA  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  3940  0101AC                     u5890:
  3941  0101AC  2EE8               	decfsz	wreg,f,c
  3942  0101AE  D7F8               	goto	u5895
  3943  0101B0  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3944  0101B4  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3945  0101B8  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3946  0101BC  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3947                           
  3948                           ; BSR set to: 0
  3949                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  3950  0101C0  0100               	movlb	0	; () banked
  3951  0101C2  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  3952  0101C4  0100               	movlb	0	; () banked
  3953  0101C6  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  3954  0101C8  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3955  0101CA  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3956  0101CC  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3957                           
  3958                           ; BSR set to: 0
  3959                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  3960  0101CE  C07C  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  3961                           
  3962                           ; BSR set to: 0
  3963                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  3964  0101D2  0E07               	movlw	7
  3965  0101D4  0100               	movlb	0	; () banked
  3966  0101D6  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  3967  0101D8  0100               	movlb	0	; () banked
  3968  0101DA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  3969  0101DC  0E00               	movlw	0
  3970  0101DE  0100               	movlb	0	; () banked
  3971  0101E0  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3972  0101E2  0100               	movlb	0	; () banked
  3973  0101E4  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3974  0101E6  0E00               	movlw	0
  3975  0101E8  0100               	movlb	0	; () banked
  3976  0101EA  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3977  0101EC  0100               	movlb	0	; () banked
  3978  0101EE  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3979  0101F0  0E00               	movlw	0
  3980  0101F2  0100               	movlb	0	; () banked
  3981  0101F4  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3982  0101F6  0100               	movlb	0	; () banked
  3983  0101F8  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3984                           
  3985                           ; BSR set to: 0
  3986                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  3987  0101FA  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  3988  0101FE  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3989  010202  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3990  010206  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3991  01020A  0E05               	movlw	5
  3992  01020C                     u5905:
  3993  01020C  90D8               	bcf	status,0,c
  3994  01020E  0100               	movlb	0	; () banked
  3995  010210  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  3996  010212  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3997  010214  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3998  010216  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3999  010218  2EE8               	decfsz	wreg,f,c
  4000  01021A  D7F8               	goto	u5905
  4001  01021C  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4002  010220  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4003  010224  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4004  010228  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4005                           
  4006                           ; BSR set to: 0
  4007                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4008  01022C  C07C  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4009  010230                     l5100:
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;inc\CANlib.h: 789: }
  4013                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4014  010230  0E03               	movlw	3
  4015  010232  0100               	movlb	0	; () banked
  4016  010234  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4017  010236  A4D8               	btfss	status,2,c
  4018  010238  D058               	goto	l5118
  4019                           
  4020                           ; BSR set to: 0
  4021  01023A  0100               	movlb	0	; () banked
  4022  01023C  2976               	incf	CANSetFilter@type& (0+255),w,b
  4023  01023E  A4D8               	btfss	status,2,c
  4024  010240  D054               	goto	l5118
  4025                           
  4026                           ; BSR set to: 0
  4027                           ;inc\CANlib.h: 792: {
  4028                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4029  010242  010F               	movlb	15	; () banked
  4030  010244  970D               	bcf	13,3,b	;volatile
  4031                           
  4032                           ; BSR set to: 15
  4033                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4034  010246  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4035  01024A  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4036  01024E  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4037  010252  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4038  010256  0E04               	movlw	4
  4039  010258  D006               	goto	u5930
  4040  01025A                     u5935:
  4041  01025A  0100               	movlb	0	; () banked
  4042  01025C  90D8               	bcf	status,0,c
  4043  01025E  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4044  010260  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4045  010262  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4046  010264  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4047  010266                     u5930:
  4048  010266  2EE8               	decfsz	wreg,f,c
  4049  010268  D7F8               	goto	u5935
  4050  01026A  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4051  01026E  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4052  010272  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4053  010276  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4054                           
  4055                           ; BSR set to: 0
  4056                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4057  01027A  0100               	movlb	0	; () banked
  4058  01027C  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4059  01027E  0100               	movlb	0	; () banked
  4060  010280  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4061  010282  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4062  010284  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4063  010286  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4067  010288  C07C  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4068                           
  4069                           ; BSR set to: 0
  4070                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4071  01028C  0E07               	movlw	7
  4072  01028E  0100               	movlb	0	; () banked
  4073  010290  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4074  010292  0100               	movlb	0	; () banked
  4075  010294  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4076  010296  0E00               	movlw	0
  4077  010298  0100               	movlb	0	; () banked
  4078  01029A  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4079  01029C  0100               	movlb	0	; () banked
  4080  01029E  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4081  0102A0  0E00               	movlw	0
  4082  0102A2  0100               	movlb	0	; () banked
  4083  0102A4  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4084  0102A6  0100               	movlb	0	; () banked
  4085  0102A8  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4086  0102AA  0E00               	movlw	0
  4087  0102AC  0100               	movlb	0	; () banked
  4088  0102AE  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4089  0102B0  0100               	movlb	0	; () banked
  4090  0102B2  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4091                           
  4092                           ; BSR set to: 0
  4093                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  4094  0102B4  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4095  0102B8  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4096  0102BC  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4097  0102C0  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4098  0102C4  0E05               	movlw	5
  4099  0102C6                     u5945:
  4100  0102C6  90D8               	bcf	status,0,c
  4101  0102C8  0100               	movlb	0	; () banked
  4102  0102CA  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  4103  0102CC  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4104  0102CE  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4105  0102D0  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4106  0102D2  2EE8               	decfsz	wreg,f,c
  4107  0102D4  D7F8               	goto	u5945
  4108  0102D6  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4109  0102DA  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4110  0102DE  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4111  0102E2  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4112                           
  4113                           ; BSR set to: 0
  4114                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  4115  0102E6  C07C  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4116  0102EA                     l5118:
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;inc\CANlib.h: 802: }
  4120                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4121  0102EA  0E04               	movlw	4
  4122  0102EC  0100               	movlb	0	; () banked
  4123  0102EE  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4124  0102F0  A4D8               	btfss	status,2,c
  4125  0102F2  D058               	goto	l5136
  4126                           
  4127                           ; BSR set to: 0
  4128  0102F4  0100               	movlb	0	; () banked
  4129  0102F6  2976               	incf	CANSetFilter@type& (0+255),w,b
  4130  0102F8  A4D8               	btfss	status,2,c
  4131  0102FA  D054               	goto	l5136
  4132                           
  4133                           ; BSR set to: 0
  4134                           ;inc\CANlib.h: 805: {
  4135                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  4136  0102FC  010F               	movlb	15	; () banked
  4137  0102FE  9711               	bcf	17,3,b	;volatile
  4138                           
  4139                           ; BSR set to: 15
  4140                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  4141  010300  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4142  010304  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4143  010308  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4144  01030C  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4145  010310  0E04               	movlw	4
  4146  010312  D006               	goto	u5970
  4147  010314                     u5975:
  4148  010314  0100               	movlb	0	; () banked
  4149  010316  90D8               	bcf	status,0,c
  4150  010318  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4151  01031A  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4152  01031C  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4153  01031E  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4154  010320                     u5970:
  4155  010320  2EE8               	decfsz	wreg,f,c
  4156  010322  D7F8               	goto	u5975
  4157  010324  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4158  010328  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4159  01032C  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4160  010330  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  4164  010334  0100               	movlb	0	; () banked
  4165  010336  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4166  010338  0100               	movlb	0	; () banked
  4167  01033A  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4168  01033C  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4169  01033E  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4170  010340  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4171                           
  4172                           ; BSR set to: 0
  4173                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  4174  010342  C07C  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  4178  010346  0E07               	movlw	7
  4179  010348  0100               	movlb	0	; () banked
  4180  01034A  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4181  01034C  0100               	movlb	0	; () banked
  4182  01034E  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4183  010350  0E00               	movlw	0
  4184  010352  0100               	movlb	0	; () banked
  4185  010354  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4186  010356  0100               	movlb	0	; () banked
  4187  010358  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4188  01035A  0E00               	movlw	0
  4189  01035C  0100               	movlb	0	; () banked
  4190  01035E  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4191  010360  0100               	movlb	0	; () banked
  4192  010362  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4193  010364  0E00               	movlw	0
  4194  010366  0100               	movlb	0	; () banked
  4195  010368  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4196  01036A  0100               	movlb	0	; () banked
  4197  01036C  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4198                           
  4199                           ; BSR set to: 0
  4200                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  4201  01036E  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4202  010372  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4203  010376  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4204  01037A  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4205  01037E  0E05               	movlw	5
  4206  010380                     u5985:
  4207  010380  90D8               	bcf	status,0,c
  4208  010382  0100               	movlb	0	; () banked
  4209  010384  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  4210  010386  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4211  010388  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4212  01038A  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4213  01038C  2EE8               	decfsz	wreg,f,c
  4214  01038E  D7F8               	goto	u5985
  4215  010390  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4216  010394  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4217  010398  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4218  01039C  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4219                           
  4220                           ; BSR set to: 0
  4221                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  4222  0103A0  C07C  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  4223  0103A4                     l5136:
  4224                           
  4225                           ; BSR set to: 0
  4226                           ;inc\CANlib.h: 815: }
  4227                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  4228  0103A4  0E05               	movlw	5
  4229  0103A6  0100               	movlb	0	; () banked
  4230  0103A8  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4231  0103AA  A4D8               	btfss	status,2,c
  4232  0103AC  D058               	goto	l5154
  4233                           
  4234                           ; BSR set to: 0
  4235  0103AE  0100               	movlb	0	; () banked
  4236  0103B0  2976               	incf	CANSetFilter@type& (0+255),w,b
  4237  0103B2  A4D8               	btfss	status,2,c
  4238  0103B4  D054               	goto	l5154
  4239                           
  4240                           ; BSR set to: 0
  4241                           ;inc\CANlib.h: 818: {
  4242                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  4243  0103B6  010F               	movlb	15	; () banked
  4244  0103B8  9715               	bcf	21,3,b	;volatile
  4245                           
  4246                           ; BSR set to: 15
  4247                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  4248  0103BA  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4249  0103BE  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4250  0103C2  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4251  0103C6  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4252  0103CA  0E04               	movlw	4
  4253  0103CC  D006               	goto	u6010
  4254  0103CE                     u6015:
  4255  0103CE  0100               	movlb	0	; () banked
  4256  0103D0  90D8               	bcf	status,0,c
  4257  0103D2  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4258  0103D4  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4259  0103D6  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4260  0103D8  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4261  0103DA                     u6010:
  4262  0103DA  2EE8               	decfsz	wreg,f,c
  4263  0103DC  D7F8               	goto	u6015
  4264  0103DE  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4265  0103E2  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4266  0103E6  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4267  0103EA  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4268                           
  4269                           ; BSR set to: 0
  4270                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  4271  0103EE  0100               	movlb	0	; () banked
  4272  0103F0  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4273  0103F2  0100               	movlb	0	; () banked
  4274  0103F4  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4275  0103F6  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4276  0103F8  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4277  0103FA  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4278                           
  4279                           ; BSR set to: 0
  4280                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  4281  0103FC  C07C  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  4285  010400  0E07               	movlw	7
  4286  010402  0100               	movlb	0	; () banked
  4287  010404  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4288  010406  0100               	movlb	0	; () banked
  4289  010408  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4290  01040A  0E00               	movlw	0
  4291  01040C  0100               	movlb	0	; () banked
  4292  01040E  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4293  010410  0100               	movlb	0	; () banked
  4294  010412  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4295  010414  0E00               	movlw	0
  4296  010416  0100               	movlb	0	; () banked
  4297  010418  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4298  01041A  0100               	movlb	0	; () banked
  4299  01041C  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4300  01041E  0E00               	movlw	0
  4301  010420  0100               	movlb	0	; () banked
  4302  010422  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4303  010424  0100               	movlb	0	; () banked
  4304  010426  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4305                           
  4306                           ; BSR set to: 0
  4307                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  4308  010428  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4309  01042C  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4310  010430  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4311  010434  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4312  010438  0E05               	movlw	5
  4313  01043A                     u6025:
  4314  01043A  90D8               	bcf	status,0,c
  4315  01043C  0100               	movlb	0	; () banked
  4316  01043E  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  4317  010440  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4318  010442  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4319  010444  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4320  010446  2EE8               	decfsz	wreg,f,c
  4321  010448  D7F8               	goto	u6025
  4322  01044A  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4323  01044E  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4324  010452  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4325  010456  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4326                           
  4327                           ; BSR set to: 0
  4328                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  4329  01045A  C07C  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  4330  01045E                     l5154:
  4331                           
  4332                           ; BSR set to: 0
  4333                           ;inc\CANlib.h: 828: }
  4334                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  4335  01045E  0100               	movlb	0	; () banked
  4336  010460  517B               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4337  010462  0100               	movlb	0	; () banked
  4338  010464  A4D8               	btfss	status,2,c
  4339  010466  D089               	goto	l5188
  4340                           
  4341                           ; BSR set to: 0
  4342  010468  0EF7               	movlw	247
  4343  01046A  0100               	movlb	0	; () banked
  4344  01046C  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  4345  01046E  A4D8               	btfss	status,2,c
  4346  010470  D084               	goto	l5188
  4347                           
  4348                           ; BSR set to: 0
  4349                           ;inc\CANlib.h: 832: {
  4350                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  4351  010472  010F               	movlb	15	; () banked
  4352  010474  8701               	bsf	1,3,b	;volatile
  4353                           
  4354                           ; BSR set to: 15
  4355                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  4356  010476  0100               	movlb	0	; () banked
  4357  010478  5172               	movf	CANSetFilter@filter& (0+255),w,b
  4358  01047A  0100               	movlb	0	; () banked
  4359  01047C  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4360  01047E  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4361  010480  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4362  010482  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4363                           
  4364                           ; BSR set to: 0
  4365                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  4366  010484  C07C  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  4367                           
  4368                           ; BSR set to: 0
  4369                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  4370  010488  0E00               	movlw	0
  4371  01048A  0100               	movlb	0	; () banked
  4372  01048C  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4373  01048E  0100               	movlb	0	; () banked
  4374  010490  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4375  010492  0EFF               	movlw	255
  4376  010494  0100               	movlb	0	; () banked
  4377  010496  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4378  010498  0100               	movlb	0	; () banked
  4379  01049A  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4380  01049C  0E00               	movlw	0
  4381  01049E  0100               	movlb	0	; () banked
  4382  0104A0  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4383  0104A2  0100               	movlb	0	; () banked
  4384  0104A4  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4385  0104A6  0E00               	movlw	0
  4386  0104A8  0100               	movlb	0	; () banked
  4387  0104AA  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4388  0104AC  0100               	movlb	0	; () banked
  4389  0104AE  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4390                           
  4391                           ; BSR set to: 0
  4392                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  4393  0104B0  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4394  0104B4  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4395  0104B8  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4396  0104BC  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4397  0104C0  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  4398  0104C4  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4399  0104C8  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4400  0104CC  0100               	movlb	0	; () banked
  4401  0104CE  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  4402  0104D0  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4403  0104D4  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4404  0104D8  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4405  0104DC  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4406                           
  4407                           ; BSR set to: 0
  4408                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  4409  0104E0  C07C  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  4410                           
  4411                           ; BSR set to: 0
  4412                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  4413  0104E4  0100               	movlb	0	; () banked
  4414  0104E6  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4415  0104E8  D003               	goto	l475
  4416                           
  4417                           ; BSR set to: 0
  4418                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  4419  0104EA  010F               	movlb	15	; () banked
  4420  0104EC  8101               	bsf	1,0,b	;volatile
  4421  0104EE  D002               	goto	l476
  4422  0104F0                     l475:
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;inc\CANlib.h: 844: else
  4426                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  4427  0104F0  010F               	movlb	15	; () banked
  4428  0104F2  9101               	bcf	1,0,b	;volatile
  4429  0104F4                     l476:
  4430                           
  4431                           ; BSR set to: 15
  4432                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  4433  0104F4  0100               	movlb	0	; () banked
  4434  0104F6  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4435  0104F8  D003               	goto	l477
  4436                           
  4437                           ; BSR set to: 0
  4438                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  4439  0104FA  010F               	movlb	15	; () banked
  4440  0104FC  8301               	bsf	1,1,b	;volatile
  4441  0104FE  D002               	goto	l478
  4442  010500                     l477:
  4443                           
  4444                           ; BSR set to: 0
  4445                           ;inc\CANlib.h: 849: else
  4446                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  4447  010500  010F               	movlb	15	; () banked
  4448  010502  9301               	bcf	1,1,b	;volatile
  4449  010504                     l478:
  4450                           
  4451                           ; BSR set to: 15
  4452                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  4453  010504  0100               	movlb	0	; () banked
  4454  010506  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4455  010508  D003               	goto	l479
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  4459  01050A  010F               	movlb	15	; () banked
  4460  01050C  8B01               	bsf	1,5,b	;volatile
  4461  01050E  D002               	goto	l480
  4462  010510                     l479:
  4463                           
  4464                           ; BSR set to: 0
  4465                           ;inc\CANlib.h: 854: else
  4466                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  4467  010510  010F               	movlb	15	; () banked
  4468  010512  9B01               	bcf	1,5,b	;volatile
  4469  010514                     l480:
  4470                           
  4471                           ; BSR set to: 15
  4472                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  4473  010514  0100               	movlb	0	; () banked
  4474  010516  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4475  010518  D003               	goto	l481
  4476                           
  4477                           ; BSR set to: 0
  4478                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  4479  01051A  010F               	movlb	15	; () banked
  4480  01051C  8D01               	bsf	1,6,b	;volatile
  4481  01051E  D002               	goto	l482
  4482  010520                     l481:
  4483                           
  4484                           ; BSR set to: 0
  4485                           ;inc\CANlib.h: 859: else
  4486                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  4487  010520  010F               	movlb	15	; () banked
  4488  010522  9D01               	bcf	1,6,b	;volatile
  4489  010524                     l482:
  4490                           
  4491                           ; BSR set to: 15
  4492                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  4493  010524  0100               	movlb	0	; () banked
  4494  010526  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4495  010528  D003               	goto	l483
  4496                           
  4497                           ; BSR set to: 0
  4498                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  4499  01052A  010F               	movlb	15	; () banked
  4500  01052C  8F01               	bsf	1,7,b	;volatile
  4501  01052E  D002               	goto	l5182
  4502  010530                     l483:
  4503                           
  4504                           ; BSR set to: 0
  4505                           ;inc\CANlib.h: 864: else
  4506                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  4507  010530  010F               	movlb	15	; () banked
  4508  010532  9F01               	bcf	1,7,b	;volatile
  4509  010534                     l5182:
  4510                           
  4511                           ; BSR set to: 15
  4512                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  4513  010534  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4514  010538  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4515  01053C  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4516  010540  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4517  010544  0E16               	movlw	22
  4518  010546  D006               	goto	u6100
  4519  010548                     u6105:
  4520  010548  0100               	movlb	0	; () banked
  4521  01054A  90D8               	bcf	status,0,c
  4522  01054C  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4523  01054E  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4524  010550  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4525  010552  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4526  010554                     u6100:
  4527  010554  2EE8               	decfsz	wreg,f,c
  4528  010556  D7F8               	goto	u6105
  4529  010558  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4530  01055C  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4531  010560  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4532  010564  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4533                           
  4534                           ; BSR set to: 0
  4535                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  4536  010568  0100               	movlb	0	; () banked
  4537  01056A  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4538  01056C  0100               	movlb	0	; () banked
  4539  01056E  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4540  010570  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4541  010572  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4542  010574  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4543                           
  4544                           ; BSR set to: 0
  4545                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  4546  010576  C07C  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4547  01057A                     l5188:
  4548                           
  4549                           ; BSR set to: 0
  4550                           ;inc\CANlib.h: 870: }
  4551                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  4552  01057A  0100               	movlb	0	; () banked
  4553  01057C  057B               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4554  01057E  A4D8               	btfss	status,2,c
  4555  010580  D089               	goto	l5222
  4556                           
  4557                           ; BSR set to: 0
  4558  010582  0EF7               	movlw	247
  4559  010584  0100               	movlb	0	; () banked
  4560  010586  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  4561  010588  A4D8               	btfss	status,2,c
  4562  01058A  D084               	goto	l5222
  4563                           
  4564                           ; BSR set to: 0
  4565                           ;inc\CANlib.h: 873: {
  4566                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  4567  01058C  010F               	movlb	15	; () banked
  4568  01058E  8705               	bsf	5,3,b	;volatile
  4569                           
  4570                           ; BSR set to: 15
  4571                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  4572  010590  0100               	movlb	0	; () banked
  4573  010592  5172               	movf	CANSetFilter@filter& (0+255),w,b
  4574  010594  0100               	movlb	0	; () banked
  4575  010596  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4576  010598  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4577  01059A  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4578  01059C  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4579                           
  4580                           ; BSR set to: 0
  4581                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  4582  01059E  C07C  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  4583                           
  4584                           ; BSR set to: 0
  4585                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  4586  0105A2  0E00               	movlw	0
  4587  0105A4  0100               	movlb	0	; () banked
  4588  0105A6  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4589  0105A8  0100               	movlb	0	; () banked
  4590  0105AA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4591  0105AC  0EFF               	movlw	255
  4592  0105AE  0100               	movlb	0	; () banked
  4593  0105B0  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4594  0105B2  0100               	movlb	0	; () banked
  4595  0105B4  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4596  0105B6  0E00               	movlw	0
  4597  0105B8  0100               	movlb	0	; () banked
  4598  0105BA  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4599  0105BC  0100               	movlb	0	; () banked
  4600  0105BE  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4601  0105C0  0E00               	movlw	0
  4602  0105C2  0100               	movlb	0	; () banked
  4603  0105C4  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4604  0105C6  0100               	movlb	0	; () banked
  4605  0105C8  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4606                           
  4607                           ; BSR set to: 0
  4608                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  4609  0105CA  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4610  0105CE  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4611  0105D2  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4612  0105D6  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4613  0105DA  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  4614  0105DE  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4615  0105E2  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4616  0105E6  0100               	movlb	0	; () banked
  4617  0105E8  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  4618  0105EA  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4619  0105EE  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4620  0105F2  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4621  0105F6  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4622                           
  4623                           ; BSR set to: 0
  4624                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  4625  0105FA  C07C  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  4626                           
  4627                           ; BSR set to: 0
  4628                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  4629  0105FE  0100               	movlb	0	; () banked
  4630  010600  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4631  010602  D003               	goto	l486
  4632                           
  4633                           ; BSR set to: 0
  4634                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  4635  010604  010F               	movlb	15	; () banked
  4636  010606  8105               	bsf	5,0,b	;volatile
  4637  010608  D002               	goto	l487
  4638  01060A                     l486:
  4639                           
  4640                           ; BSR set to: 0
  4641                           ;inc\CANlib.h: 885: else
  4642                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  4643  01060A  010F               	movlb	15	; () banked
  4644  01060C  9105               	bcf	5,0,b	;volatile
  4645  01060E                     l487:
  4646                           
  4647                           ; BSR set to: 15
  4648                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  4649  01060E  0100               	movlb	0	; () banked
  4650  010610  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4651  010612  D003               	goto	l488
  4652                           
  4653                           ; BSR set to: 0
  4654                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  4655  010614  010F               	movlb	15	; () banked
  4656  010616  8305               	bsf	5,1,b	;volatile
  4657  010618  D002               	goto	l489
  4658  01061A                     l488:
  4659                           
  4660                           ; BSR set to: 0
  4661                           ;inc\CANlib.h: 890: else
  4662                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  4663  01061A  010F               	movlb	15	; () banked
  4664  01061C  9305               	bcf	5,1,b	;volatile
  4665  01061E                     l489:
  4666                           
  4667                           ; BSR set to: 15
  4668                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  4669  01061E  0100               	movlb	0	; () banked
  4670  010620  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4671  010622  D003               	goto	l490
  4672                           
  4673                           ; BSR set to: 0
  4674                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  4675  010624  010F               	movlb	15	; () banked
  4676  010626  8B05               	bsf	5,5,b	;volatile
  4677  010628  D002               	goto	l491
  4678  01062A                     l490:
  4679                           
  4680                           ; BSR set to: 0
  4681                           ;inc\CANlib.h: 895: else
  4682                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  4683  01062A  010F               	movlb	15	; () banked
  4684  01062C  9B05               	bcf	5,5,b	;volatile
  4685  01062E                     l491:
  4686                           
  4687                           ; BSR set to: 15
  4688                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  4689  01062E  0100               	movlb	0	; () banked
  4690  010630  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4691  010632  D003               	goto	l492
  4692                           
  4693                           ; BSR set to: 0
  4694                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  4695  010634  010F               	movlb	15	; () banked
  4696  010636  8D05               	bsf	5,6,b	;volatile
  4697  010638  D002               	goto	l493
  4698  01063A                     l492:
  4699                           
  4700                           ; BSR set to: 0
  4701                           ;inc\CANlib.h: 900: else
  4702                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  4703  01063A  010F               	movlb	15	; () banked
  4704  01063C  9D05               	bcf	5,6,b	;volatile
  4705  01063E                     l493:
  4706                           
  4707                           ; BSR set to: 15
  4708                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  4709  01063E  0100               	movlb	0	; () banked
  4710  010640  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4711  010642  D003               	goto	l494
  4712                           
  4713                           ; BSR set to: 0
  4714                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  4715  010644  010F               	movlb	15	; () banked
  4716  010646  8F05               	bsf	5,7,b	;volatile
  4717  010648  D002               	goto	l5216
  4718  01064A                     l494:
  4719                           
  4720                           ; BSR set to: 0
  4721                           ;inc\CANlib.h: 905: else
  4722                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  4723  01064A  010F               	movlb	15	; () banked
  4724  01064C  9F05               	bcf	5,7,b	;volatile
  4725  01064E                     l5216:
  4726                           
  4727                           ; BSR set to: 15
  4728                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  4729  01064E  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4730  010652  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4731  010656  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4732  01065A  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4733  01065E  0E16               	movlw	22
  4734  010660  D006               	goto	u6180
  4735  010662                     u6185:
  4736  010662  0100               	movlb	0	; () banked
  4737  010664  90D8               	bcf	status,0,c
  4738  010666  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4739  010668  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4740  01066A  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4741  01066C  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4742  01066E                     u6180:
  4743  01066E  2EE8               	decfsz	wreg,f,c
  4744  010670  D7F8               	goto	u6185
  4745  010672  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4746  010676  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4747  01067A  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4748  01067E  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4749                           
  4750                           ; BSR set to: 0
  4751                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  4752  010682  0100               	movlb	0	; () banked
  4753  010684  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4754  010686  0100               	movlb	0	; () banked
  4755  010688  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4756  01068A  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4757  01068C  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4758  01068E  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4759                           
  4760                           ; BSR set to: 0
  4761                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  4762  010690  C07C  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4763  010694                     l5222:
  4764                           
  4765                           ; BSR set to: 0
  4766                           ;inc\CANlib.h: 911: }
  4767                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  4768  010694  0E02               	movlw	2
  4769  010696  0100               	movlb	0	; () banked
  4770  010698  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4771  01069A  A4D8               	btfss	status,2,c
  4772  01069C  D089               	goto	l5256
  4773                           
  4774                           ; BSR set to: 0
  4775  01069E  0EF7               	movlw	247
  4776  0106A0  0100               	movlb	0	; () banked
  4777  0106A2  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  4778  0106A4  A4D8               	btfss	status,2,c
  4779  0106A6  D084               	goto	l5256
  4780                           
  4781                           ; BSR set to: 0
  4782                           ;inc\CANlib.h: 915: {
  4783                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  4784  0106A8  010F               	movlb	15	; () banked
  4785  0106AA  8709               	bsf	9,3,b	;volatile
  4786                           
  4787                           ; BSR set to: 15
  4788                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  4789  0106AC  0100               	movlb	0	; () banked
  4790  0106AE  5172               	movf	CANSetFilter@filter& (0+255),w,b
  4791  0106B0  0100               	movlb	0	; () banked
  4792  0106B2  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4793  0106B4  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4794  0106B6  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4795  0106B8  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4796                           
  4797                           ; BSR set to: 0
  4798                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  4799  0106BA  C07C  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  4800                           
  4801                           ; BSR set to: 0
  4802                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  4803  0106BE  0E00               	movlw	0
  4804  0106C0  0100               	movlb	0	; () banked
  4805  0106C2  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4806  0106C4  0100               	movlb	0	; () banked
  4807  0106C6  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4808  0106C8  0EFF               	movlw	255
  4809  0106CA  0100               	movlb	0	; () banked
  4810  0106CC  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4811  0106CE  0100               	movlb	0	; () banked
  4812  0106D0  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4813  0106D2  0E00               	movlw	0
  4814  0106D4  0100               	movlb	0	; () banked
  4815  0106D6  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4816  0106D8  0100               	movlb	0	; () banked
  4817  0106DA  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4818  0106DC  0E00               	movlw	0
  4819  0106DE  0100               	movlb	0	; () banked
  4820  0106E0  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4821  0106E2  0100               	movlb	0	; () banked
  4822  0106E4  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4823                           
  4824                           ; BSR set to: 0
  4825                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  4826  0106E6  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4827  0106EA  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4828  0106EE  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4829  0106F2  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4830  0106F6  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  4831  0106FA  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4832  0106FE  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4833  010702  0100               	movlb	0	; () banked
  4834  010704  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  4835  010706  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4836  01070A  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4837  01070E  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4838  010712  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4839                           
  4840                           ; BSR set to: 0
  4841                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  4842  010716  C07C  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  4843                           
  4844                           ; BSR set to: 0
  4845                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  4846  01071A  0100               	movlb	0	; () banked
  4847  01071C  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4848  01071E  D003               	goto	l497
  4849                           
  4850                           ; BSR set to: 0
  4851                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  4852  010720  010F               	movlb	15	; () banked
  4853  010722  8109               	bsf	9,0,b	;volatile
  4854  010724  D002               	goto	l498
  4855  010726                     l497:
  4856                           
  4857                           ; BSR set to: 0
  4858                           ;inc\CANlib.h: 927: else
  4859                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  4860  010726  010F               	movlb	15	; () banked
  4861  010728  9109               	bcf	9,0,b	;volatile
  4862  01072A                     l498:
  4863                           
  4864                           ; BSR set to: 15
  4865                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  4866  01072A  0100               	movlb	0	; () banked
  4867  01072C  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4868  01072E  D003               	goto	l499
  4869                           
  4870                           ; BSR set to: 0
  4871                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  4872  010730  010F               	movlb	15	; () banked
  4873  010732  8309               	bsf	9,1,b	;volatile
  4874  010734  D002               	goto	l500
  4875  010736                     l499:
  4876                           
  4877                           ; BSR set to: 0
  4878                           ;inc\CANlib.h: 932: else
  4879                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  4880  010736  010F               	movlb	15	; () banked
  4881  010738  9309               	bcf	9,1,b	;volatile
  4882  01073A                     l500:
  4883                           
  4884                           ; BSR set to: 15
  4885                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  4886  01073A  0100               	movlb	0	; () banked
  4887  01073C  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4888  01073E  D003               	goto	l501
  4889                           
  4890                           ; BSR set to: 0
  4891                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  4892  010740  010F               	movlb	15	; () banked
  4893  010742  8B09               	bsf	9,5,b	;volatile
  4894  010744  D002               	goto	l502
  4895  010746                     l501:
  4896                           
  4897                           ; BSR set to: 0
  4898                           ;inc\CANlib.h: 937: else
  4899                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  4900  010746  010F               	movlb	15	; () banked
  4901  010748  9B09               	bcf	9,5,b	;volatile
  4902  01074A                     l502:
  4903                           
  4904                           ; BSR set to: 15
  4905                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  4906  01074A  0100               	movlb	0	; () banked
  4907  01074C  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4908  01074E  D003               	goto	l503
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  4912  010750  010F               	movlb	15	; () banked
  4913  010752  8D09               	bsf	9,6,b	;volatile
  4914  010754  D002               	goto	l504
  4915  010756                     l503:
  4916                           
  4917                           ; BSR set to: 0
  4918                           ;inc\CANlib.h: 942: else
  4919                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  4920  010756  010F               	movlb	15	; () banked
  4921  010758  9D09               	bcf	9,6,b	;volatile
  4922  01075A                     l504:
  4923                           
  4924                           ; BSR set to: 15
  4925                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  4926  01075A  0100               	movlb	0	; () banked
  4927  01075C  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4928  01075E  D003               	goto	l505
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  4932  010760  010F               	movlb	15	; () banked
  4933  010762  8F09               	bsf	9,7,b	;volatile
  4934  010764  D002               	goto	l5250
  4935  010766                     l505:
  4936                           
  4937                           ; BSR set to: 0
  4938                           ;inc\CANlib.h: 947: else
  4939                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  4940  010766  010F               	movlb	15	; () banked
  4941  010768  9F09               	bcf	9,7,b	;volatile
  4942  01076A                     l5250:
  4943                           
  4944                           ; BSR set to: 15
  4945                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  4946  01076A  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4947  01076E  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4948  010772  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4949  010776  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4950  01077A  0E16               	movlw	22
  4951  01077C  D006               	goto	u6260
  4952  01077E                     u6265:
  4953  01077E  0100               	movlb	0	; () banked
  4954  010780  90D8               	bcf	status,0,c
  4955  010782  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4956  010784  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4957  010786  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4958  010788  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4959  01078A                     u6260:
  4960  01078A  2EE8               	decfsz	wreg,f,c
  4961  01078C  D7F8               	goto	u6265
  4962  01078E  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4963  010792  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4964  010796  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4965  01079A  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4966                           
  4967                           ; BSR set to: 0
  4968                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  4969  01079E  0100               	movlb	0	; () banked
  4970  0107A0  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4971  0107A2  0100               	movlb	0	; () banked
  4972  0107A4  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4973  0107A6  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4974  0107A8  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4975  0107AA  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4976                           
  4977                           ; BSR set to: 0
  4978                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  4979  0107AC  C07C  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4980  0107B0                     l5256:
  4981                           
  4982                           ; BSR set to: 0
  4983                           ;inc\CANlib.h: 953: }
  4984                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  4985  0107B0  0E03               	movlw	3
  4986  0107B2  0100               	movlb	0	; () banked
  4987  0107B4  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4988  0107B6  A4D8               	btfss	status,2,c
  4989  0107B8  D089               	goto	l5290
  4990                           
  4991                           ; BSR set to: 0
  4992  0107BA  0EF7               	movlw	247
  4993  0107BC  0100               	movlb	0	; () banked
  4994  0107BE  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  4995  0107C0  A4D8               	btfss	status,2,c
  4996  0107C2  D084               	goto	l5290
  4997                           
  4998                           ; BSR set to: 0
  4999                           ;inc\CANlib.h: 956: {
  5000                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5001  0107C4  010F               	movlb	15	; () banked
  5002  0107C6  870D               	bsf	13,3,b	;volatile
  5003                           
  5004                           ; BSR set to: 15
  5005                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5006  0107C8  0100               	movlb	0	; () banked
  5007  0107CA  5172               	movf	CANSetFilter@filter& (0+255),w,b
  5008  0107CC  0100               	movlb	0	; () banked
  5009  0107CE  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5010  0107D0  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5011  0107D2  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5012  0107D4  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5013                           
  5014                           ; BSR set to: 0
  5015                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5016  0107D6  C07C  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5017                           
  5018                           ; BSR set to: 0
  5019                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5020  0107DA  0E00               	movlw	0
  5021  0107DC  0100               	movlb	0	; () banked
  5022  0107DE  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5023  0107E0  0100               	movlb	0	; () banked
  5024  0107E2  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5025  0107E4  0EFF               	movlw	255
  5026  0107E6  0100               	movlb	0	; () banked
  5027  0107E8  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5028  0107EA  0100               	movlb	0	; () banked
  5029  0107EC  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5030  0107EE  0E00               	movlw	0
  5031  0107F0  0100               	movlb	0	; () banked
  5032  0107F2  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5033  0107F4  0100               	movlb	0	; () banked
  5034  0107F6  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5035  0107F8  0E00               	movlw	0
  5036  0107FA  0100               	movlb	0	; () banked
  5037  0107FC  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5038  0107FE  0100               	movlb	0	; () banked
  5039  010800  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5040                           
  5041                           ; BSR set to: 0
  5042                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5043  010802  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5044  010806  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5045  01080A  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5046  01080E  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5047  010812  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  5048  010816  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5049  01081A  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5050  01081E  0100               	movlb	0	; () banked
  5051  010820  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  5052  010822  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5053  010826  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5054  01082A  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5055  01082E  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5056                           
  5057                           ; BSR set to: 0
  5058                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5059  010832  C07C  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5060                           
  5061                           ; BSR set to: 0
  5062                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5063  010836  0100               	movlb	0	; () banked
  5064  010838  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5065  01083A  D003               	goto	l508
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5069  01083C  010F               	movlb	15	; () banked
  5070  01083E  810D               	bsf	13,0,b	;volatile
  5071  010840  D002               	goto	l509
  5072  010842                     l508:
  5073                           
  5074                           ; BSR set to: 0
  5075                           ;inc\CANlib.h: 968: else
  5076                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5077  010842  010F               	movlb	15	; () banked
  5078  010844  910D               	bcf	13,0,b	;volatile
  5079  010846                     l509:
  5080                           
  5081                           ; BSR set to: 15
  5082                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  5083  010846  0100               	movlb	0	; () banked
  5084  010848  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5085  01084A  D003               	goto	l510
  5086                           
  5087                           ; BSR set to: 0
  5088                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5089  01084C  010F               	movlb	15	; () banked
  5090  01084E  830D               	bsf	13,1,b	;volatile
  5091  010850  D002               	goto	l511
  5092  010852                     l510:
  5093                           
  5094                           ; BSR set to: 0
  5095                           ;inc\CANlib.h: 973: else
  5096                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5097  010852  010F               	movlb	15	; () banked
  5098  010854  930D               	bcf	13,1,b	;volatile
  5099  010856                     l511:
  5100                           
  5101                           ; BSR set to: 15
  5102                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  5103  010856  0100               	movlb	0	; () banked
  5104  010858  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5105  01085A  D003               	goto	l512
  5106                           
  5107                           ; BSR set to: 0
  5108                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  5109  01085C  010F               	movlb	15	; () banked
  5110  01085E  8B0D               	bsf	13,5,b	;volatile
  5111  010860  D002               	goto	l513
  5112  010862                     l512:
  5113                           
  5114                           ; BSR set to: 0
  5115                           ;inc\CANlib.h: 978: else
  5116                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  5117  010862  010F               	movlb	15	; () banked
  5118  010864  9B0D               	bcf	13,5,b	;volatile
  5119  010866                     l513:
  5120                           
  5121                           ; BSR set to: 15
  5122                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  5123  010866  0100               	movlb	0	; () banked
  5124  010868  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5125  01086A  D003               	goto	l514
  5126                           
  5127                           ; BSR set to: 0
  5128                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  5129  01086C  010F               	movlb	15	; () banked
  5130  01086E  8D0D               	bsf	13,6,b	;volatile
  5131  010870  D002               	goto	l515
  5132  010872                     l514:
  5133                           
  5134                           ; BSR set to: 0
  5135                           ;inc\CANlib.h: 983: else
  5136                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  5137  010872  010F               	movlb	15	; () banked
  5138  010874  9D0D               	bcf	13,6,b	;volatile
  5139  010876                     l515:
  5140                           
  5141                           ; BSR set to: 15
  5142                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  5143  010876  0100               	movlb	0	; () banked
  5144  010878  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5145  01087A  D003               	goto	l516
  5146                           
  5147                           ; BSR set to: 0
  5148                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  5149  01087C  010F               	movlb	15	; () banked
  5150  01087E  8F0D               	bsf	13,7,b	;volatile
  5151  010880  D002               	goto	l5284
  5152  010882                     l516:
  5153                           
  5154                           ; BSR set to: 0
  5155                           ;inc\CANlib.h: 988: else
  5156                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  5157  010882  010F               	movlb	15	; () banked
  5158  010884  9F0D               	bcf	13,7,b	;volatile
  5159  010886                     l5284:
  5160                           
  5161                           ; BSR set to: 15
  5162                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  5163  010886  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  5164  01088A  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5165  01088E  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5166  010892  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5167  010896  0E16               	movlw	22
  5168  010898  D006               	goto	u6340
  5169  01089A                     u6345:
  5170  01089A  0100               	movlb	0	; () banked
  5171  01089C  90D8               	bcf	status,0,c
  5172  01089E  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5173  0108A0  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5174  0108A2  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5175  0108A4  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5176  0108A6                     u6340:
  5177  0108A6  2EE8               	decfsz	wreg,f,c
  5178  0108A8  D7F8               	goto	u6345
  5179  0108AA  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5180  0108AE  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5181  0108B2  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5182  0108B6  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5183                           
  5184                           ; BSR set to: 0
  5185                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  5186  0108BA  0100               	movlb	0	; () banked
  5187  0108BC  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5188  0108BE  0100               	movlb	0	; () banked
  5189  0108C0  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5190  0108C2  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5191  0108C4  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5192  0108C6  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5193                           
  5194                           ; BSR set to: 0
  5195                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  5196  0108C8  C07C  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5197  0108CC                     l5290:
  5198                           
  5199                           ; BSR set to: 0
  5200                           ;inc\CANlib.h: 994: }
  5201                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  5202  0108CC  0E04               	movlw	4
  5203  0108CE  0100               	movlb	0	; () banked
  5204  0108D0  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5205  0108D2  A4D8               	btfss	status,2,c
  5206  0108D4  D089               	goto	l5324
  5207                           
  5208                           ; BSR set to: 0
  5209  0108D6  0EF7               	movlw	247
  5210  0108D8  0100               	movlb	0	; () banked
  5211  0108DA  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  5212  0108DC  A4D8               	btfss	status,2,c
  5213  0108DE  D084               	goto	l5324
  5214                           
  5215                           ; BSR set to: 0
  5216                           ;inc\CANlib.h: 997: {
  5217                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  5218  0108E0  010F               	movlb	15	; () banked
  5219  0108E2  8711               	bsf	17,3,b	;volatile
  5220                           
  5221                           ; BSR set to: 15
  5222                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  5223  0108E4  0100               	movlb	0	; () banked
  5224  0108E6  5172               	movf	CANSetFilter@filter& (0+255),w,b
  5225  0108E8  0100               	movlb	0	; () banked
  5226  0108EA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5227  0108EC  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5228  0108EE  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5229  0108F0  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5230                           
  5231                           ; BSR set to: 0
  5232                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  5233  0108F2  C07C  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  5234                           
  5235                           ; BSR set to: 0
  5236                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  5237  0108F6  0E00               	movlw	0
  5238  0108F8  0100               	movlb	0	; () banked
  5239  0108FA  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5240  0108FC  0100               	movlb	0	; () banked
  5241  0108FE  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5242  010900  0EFF               	movlw	255
  5243  010902  0100               	movlb	0	; () banked
  5244  010904  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5245  010906  0100               	movlb	0	; () banked
  5246  010908  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5247  01090A  0E00               	movlw	0
  5248  01090C  0100               	movlb	0	; () banked
  5249  01090E  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5250  010910  0100               	movlb	0	; () banked
  5251  010912  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5252  010914  0E00               	movlw	0
  5253  010916  0100               	movlb	0	; () banked
  5254  010918  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5255  01091A  0100               	movlb	0	; () banked
  5256  01091C  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5257                           
  5258                           ; BSR set to: 0
  5259                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  5260  01091E  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5261  010922  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5262  010926  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5263  01092A  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5264  01092E  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  5265  010932  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5266  010936  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5267  01093A  0100               	movlb	0	; () banked
  5268  01093C  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  5269  01093E  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5270  010942  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5271  010946  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5272  01094A  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  5276  01094E  C07C  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  5277                           
  5278                           ; BSR set to: 0
  5279                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  5280  010952  0100               	movlb	0	; () banked
  5281  010954  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5282  010956  D003               	goto	l519
  5283                           
  5284                           ; BSR set to: 0
  5285                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  5286  010958  010F               	movlb	15	; () banked
  5287  01095A  8111               	bsf	17,0,b	;volatile
  5288  01095C  D002               	goto	l520
  5289  01095E                     l519:
  5290                           
  5291                           ; BSR set to: 0
  5292                           ;inc\CANlib.h: 1009: else
  5293                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  5294  01095E  010F               	movlb	15	; () banked
  5295  010960  9111               	bcf	17,0,b	;volatile
  5296  010962                     l520:
  5297                           
  5298                           ; BSR set to: 15
  5299                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  5300  010962  0100               	movlb	0	; () banked
  5301  010964  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5302  010966  D003               	goto	l521
  5303                           
  5304                           ; BSR set to: 0
  5305                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  5306  010968  010F               	movlb	15	; () banked
  5307  01096A  8311               	bsf	17,1,b	;volatile
  5308  01096C  D002               	goto	l522
  5309  01096E                     l521:
  5310                           
  5311                           ; BSR set to: 0
  5312                           ;inc\CANlib.h: 1014: else
  5313                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  5314  01096E  010F               	movlb	15	; () banked
  5315  010970  9311               	bcf	17,1,b	;volatile
  5316  010972                     l522:
  5317                           
  5318                           ; BSR set to: 15
  5319                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  5320  010972  0100               	movlb	0	; () banked
  5321  010974  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5322  010976  D003               	goto	l523
  5323                           
  5324                           ; BSR set to: 0
  5325                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  5326  010978  010F               	movlb	15	; () banked
  5327  01097A  8B11               	bsf	17,5,b	;volatile
  5328  01097C  D002               	goto	l524
  5329  01097E                     l523:
  5330                           
  5331                           ; BSR set to: 0
  5332                           ;inc\CANlib.h: 1019: else
  5333                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  5334  01097E  010F               	movlb	15	; () banked
  5335  010980  9B11               	bcf	17,5,b	;volatile
  5336  010982                     l524:
  5337                           
  5338                           ; BSR set to: 15
  5339                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  5340  010982  0100               	movlb	0	; () banked
  5341  010984  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5342  010986  D003               	goto	l525
  5343                           
  5344                           ; BSR set to: 0
  5345                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  5346  010988  010F               	movlb	15	; () banked
  5347  01098A  8D11               	bsf	17,6,b	;volatile
  5348  01098C  D002               	goto	l526
  5349  01098E                     l525:
  5350                           
  5351                           ; BSR set to: 0
  5352                           ;inc\CANlib.h: 1024: else
  5353                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  5354  01098E  010F               	movlb	15	; () banked
  5355  010990  9D11               	bcf	17,6,b	;volatile
  5356  010992                     l526:
  5357                           
  5358                           ; BSR set to: 15
  5359                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  5360  010992  0100               	movlb	0	; () banked
  5361  010994  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5362  010996  D003               	goto	l527
  5363                           
  5364                           ; BSR set to: 0
  5365                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  5366  010998  010F               	movlb	15	; () banked
  5367  01099A  8F11               	bsf	17,7,b	;volatile
  5368  01099C  D002               	goto	l5318
  5369  01099E                     l527:
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;inc\CANlib.h: 1029: else
  5373                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  5374  01099E  010F               	movlb	15	; () banked
  5375  0109A0  9F11               	bcf	17,7,b	;volatile
  5376  0109A2                     l5318:
  5377                           
  5378                           ; BSR set to: 15
  5379                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  5380  0109A2  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  5381  0109A6  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5382  0109AA  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5383  0109AE  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5384  0109B2  0E16               	movlw	22
  5385  0109B4  D006               	goto	u6420
  5386  0109B6                     u6425:
  5387  0109B6  0100               	movlb	0	; () banked
  5388  0109B8  90D8               	bcf	status,0,c
  5389  0109BA  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5390  0109BC  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5391  0109BE  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5392  0109C0  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5393  0109C2                     u6420:
  5394  0109C2  2EE8               	decfsz	wreg,f,c
  5395  0109C4  D7F8               	goto	u6425
  5396  0109C6  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5397  0109CA  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5398  0109CE  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5399  0109D2  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5400                           
  5401                           ; BSR set to: 0
  5402                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  5403  0109D6  0100               	movlb	0	; () banked
  5404  0109D8  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5405  0109DA  0100               	movlb	0	; () banked
  5406  0109DC  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5407  0109DE  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5408  0109E0  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5409  0109E2  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5410                           
  5411                           ; BSR set to: 0
  5412                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  5413  0109E4  C07C  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5414  0109E8                     l5324:
  5415                           
  5416                           ; BSR set to: 0
  5417                           ;inc\CANlib.h: 1035: }
  5418                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  5419  0109E8  0E05               	movlw	5
  5420  0109EA  0100               	movlb	0	; () banked
  5421  0109EC  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5422  0109EE  A4D8               	btfss	status,2,c
  5423  0109F0  0012               	return	
  5424                           
  5425                           ; BSR set to: 0
  5426  0109F2  0EF7               	movlw	247
  5427  0109F4  0100               	movlb	0	; () banked
  5428  0109F6  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  5429  0109F8  A4D8               	btfss	status,2,c
  5430  0109FA  0012               	return	
  5431                           
  5432                           ; BSR set to: 0
  5433                           ;inc\CANlib.h: 1038: {
  5434                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  5435  0109FC  010F               	movlb	15	; () banked
  5436  0109FE  8715               	bsf	21,3,b	;volatile
  5437                           
  5438                           ; BSR set to: 15
  5439                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  5440  010A00  0100               	movlb	0	; () banked
  5441  010A02  5172               	movf	CANSetFilter@filter& (0+255),w,b
  5442  010A04  0100               	movlb	0	; () banked
  5443  010A06  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5444  010A08  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5445  010A0A  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5446  010A0C  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5447                           
  5448                           ; BSR set to: 0
  5449                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  5450  010A0E  C07C  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  5451                           
  5452                           ; BSR set to: 0
  5453                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  5454  010A12  0E00               	movlw	0
  5455  010A14  0100               	movlb	0	; () banked
  5456  010A16  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5457  010A18  0100               	movlb	0	; () banked
  5458  010A1A  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5459  010A1C  0EFF               	movlw	255
  5460  010A1E  0100               	movlb	0	; () banked
  5461  010A20  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5462  010A22  0100               	movlb	0	; () banked
  5463  010A24  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5464  010A26  0E00               	movlw	0
  5465  010A28  0100               	movlb	0	; () banked
  5466  010A2A  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5467  010A2C  0100               	movlb	0	; () banked
  5468  010A2E  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5469  010A30  0E00               	movlw	0
  5470  010A32  0100               	movlb	0	; () banked
  5471  010A34  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5472  010A36  0100               	movlb	0	; () banked
  5473  010A38  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5474                           
  5475                           ; BSR set to: 0
  5476                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  5477  010A3A  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5478  010A3E  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5479  010A42  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5480  010A46  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5481  010A4A  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  5482  010A4E  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5483  010A52  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5484  010A56  0100               	movlb	0	; () banked
  5485  010A58  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  5486  010A5A  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5487  010A5E  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5488  010A62  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5489  010A66  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5490                           
  5491                           ; BSR set to: 0
  5492                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  5493  010A6A  C07C  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  5494                           
  5495                           ; BSR set to: 0
  5496                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  5497  010A6E  0100               	movlb	0	; () banked
  5498  010A70  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5499  010A72  D003               	goto	l530
  5500                           
  5501                           ; BSR set to: 0
  5502                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  5503  010A74  010F               	movlb	15	; () banked
  5504  010A76  8115               	bsf	21,0,b	;volatile
  5505  010A78  D002               	goto	l531
  5506  010A7A                     l530:
  5507                           
  5508                           ; BSR set to: 0
  5509                           ;inc\CANlib.h: 1050: else
  5510                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  5511  010A7A  010F               	movlb	15	; () banked
  5512  010A7C  9115               	bcf	21,0,b	;volatile
  5513  010A7E                     l531:
  5514                           
  5515                           ; BSR set to: 15
  5516                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  5517  010A7E  0100               	movlb	0	; () banked
  5518  010A80  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5519  010A82  D003               	goto	l532
  5520                           
  5521                           ; BSR set to: 0
  5522                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  5523  010A84  010F               	movlb	15	; () banked
  5524  010A86  8315               	bsf	21,1,b	;volatile
  5525  010A88  D002               	goto	l533
  5526  010A8A                     l532:
  5527                           
  5528                           ; BSR set to: 0
  5529                           ;inc\CANlib.h: 1055: else
  5530                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  5531  010A8A  010F               	movlb	15	; () banked
  5532  010A8C  9315               	bcf	21,1,b	;volatile
  5533  010A8E                     l533:
  5534                           
  5535                           ; BSR set to: 15
  5536                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  5537  010A8E  0100               	movlb	0	; () banked
  5538  010A90  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5539  010A92  D003               	goto	l534
  5540                           
  5541                           ; BSR set to: 0
  5542                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  5543  010A94  010F               	movlb	15	; () banked
  5544  010A96  8B15               	bsf	21,5,b	;volatile
  5545  010A98  D002               	goto	l535
  5546  010A9A                     l534:
  5547                           
  5548                           ; BSR set to: 0
  5549                           ;inc\CANlib.h: 1060: else
  5550                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  5551  010A9A  010F               	movlb	15	; () banked
  5552  010A9C  9B15               	bcf	21,5,b	;volatile
  5553  010A9E                     l535:
  5554                           
  5555                           ; BSR set to: 15
  5556                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  5557  010A9E  0100               	movlb	0	; () banked
  5558  010AA0  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5559  010AA2  D003               	goto	l536
  5560                           
  5561                           ; BSR set to: 0
  5562                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  5563  010AA4  010F               	movlb	15	; () banked
  5564  010AA6  8D15               	bsf	21,6,b	;volatile
  5565  010AA8  D002               	goto	l537
  5566  010AAA                     l536:
  5567                           
  5568                           ; BSR set to: 0
  5569                           ;inc\CANlib.h: 1065: else
  5570                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  5571  010AAA  010F               	movlb	15	; () banked
  5572  010AAC  9D15               	bcf	21,6,b	;volatile
  5573  010AAE                     l537:
  5574                           
  5575                           ; BSR set to: 15
  5576                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  5577  010AAE  0100               	movlb	0	; () banked
  5578  010AB0  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5579  010AB2  D003               	goto	l538
  5580                           
  5581                           ; BSR set to: 0
  5582                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  5583  010AB4  010F               	movlb	15	; () banked
  5584  010AB6  8F15               	bsf	21,7,b	;volatile
  5585  010AB8  D002               	goto	l5352
  5586  010ABA                     l538:
  5587                           
  5588                           ; BSR set to: 0
  5589                           ;inc\CANlib.h: 1070: else
  5590                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  5591  010ABA  010F               	movlb	15	; () banked
  5592  010ABC  9F15               	bcf	21,7,b	;volatile
  5593  010ABE                     l5352:
  5594                           
  5595                           ; BSR set to: 15
  5596                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  5597  010ABE  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  5598  010AC2  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5599  010AC6  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5600  010ACA  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5601  010ACE  0E16               	movlw	22
  5602  010AD0  D006               	goto	u6500
  5603  010AD2                     u6505:
  5604  010AD2  0100               	movlb	0	; () banked
  5605  010AD4  90D8               	bcf	status,0,c
  5606  010AD6  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5607  010AD8  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5608  010ADA  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5609  010ADC  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5610  010ADE                     u6500:
  5611  010ADE  2EE8               	decfsz	wreg,f,c
  5612  010AE0  D7F8               	goto	u6505
  5613  010AE2  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5614  010AE6  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5615  010AEA  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5616  010AEE  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5617                           
  5618                           ; BSR set to: 0
  5619                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  5620  010AF2  0100               	movlb	0	; () banked
  5621  010AF4  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5622  010AF6  0100               	movlb	0	; () banked
  5623  010AF8  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5624  010AFA  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5625  010AFC  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5626  010AFE  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5627                           
  5628                           ; BSR set to: 0
  5629                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  5630  010B00  C07C  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5631  010B04  0012               	return	
  5632  010B06                     __end_of_CANSetFilter:
  5633                           	opt stack 0
  5634                           tblptru	equ	0xFF8
  5635                           tblptrh	equ	0xFF7
  5636                           tblptrl	equ	0xFF6
  5637                           tablat	equ	0xFF5
  5638                           intcon	equ	0xFF2
  5639                           postinc0	equ	0xFEE
  5640                           wreg	equ	0xFE8
  5641                           status	equ	0xFD8
  5642                           
  5643 ;; *************** function _CANOperationMode *****************
  5644 ;; Defined at:
  5645 ;;		line 206 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  5646 ;; Parameters:    Size  Location     Type
  5647 ;;  mode            1    wreg     enum E16881
  5648 ;; Auto vars:     Size  Location     Type
  5649 ;;  mode            1   18[BANK0 ] enum E16881
  5650 ;; Return value:  Size  Location     Type
  5651 ;;		None               void
  5652 ;; Registers used:
  5653 ;;		wreg, status,2, status,0
  5654 ;; Tracked objects:
  5655 ;;		On entry : 0/0
  5656 ;;		On exit  : 0/0
  5657 ;;		Unchanged: 0/0
  5658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5660 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5662 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5663 ;;Total ram usage:        1 bytes
  5664 ;; Hardware stack levels used:    1
  5665 ;; Hardware stack levels required when called:    3
  5666 ;; This function calls:
  5667 ;;		Nothing
  5668 ;; This function is called by:
  5669 ;;		_CANInitialize
  5670 ;; This function uses a non-reentrant model
  5671 ;;
  5672                           
  5673                           	psect	text5
  5674  015DE0                     __ptext5:
  5675                           	opt stack 0
  5676  015DE0                     _CANOperationMode:
  5677                           	opt stack 25
  5678                           
  5679                           ; BSR set to: 0
  5680                           ;incstack = 0
  5681                           ;CANOperationMode@mode stored from wreg
  5682  015DE0  0100               	movlb	0	; () banked
  5683  015DE2  6F72               	movwf	CANOperationMode@mode& (0+255),b
  5684                           
  5685                           ;inc\CANlib.h: 208: CANCON = mode;
  5686  015DE4  C072  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  5687  015DE8                     l4948:
  5688  015DE8  506E               	movf	3950,w,c	;volatile
  5689  015DEA  0BE0               	andlw	224
  5690  015DEC  0100               	movlb	0	; () banked
  5691  015DEE  1972               	xorwf	CANOperationMode@mode& (0+255),w,b
  5692  015DF0  B4D8               	btfsc	status,2,c
  5693  015DF2  0012               	return	
  5694  015DF4  D7F9               	goto	l4948
  5695  015DF6                     __end_of_CANOperationMode:
  5696                           	opt stack 0
  5697                           tblptru	equ	0xFF8
  5698                           tblptrh	equ	0xFF7
  5699                           tblptrl	equ	0xFF6
  5700                           tablat	equ	0xFF5
  5701                           intcon	equ	0xFF2
  5702                           postinc0	equ	0xFEE
  5703                           wreg	equ	0xFE8
  5704                           status	equ	0xFD8
  5705                           
  5706 ;; *************** function _PWR_Button_Polling *****************
  5707 ;; Defined at:
  5708 ;;		line 387 in file "RemoteCan.c"
  5709 ;; Parameters:    Size  Location     Type
  5710 ;;		None
  5711 ;; Auto vars:     Size  Location     Type
  5712 ;;		None
  5713 ;; Return value:  Size  Location     Type
  5714 ;;		None               void
  5715 ;; Registers used:
  5716 ;;		None
  5717 ;; Tracked objects:
  5718 ;;		On entry : 0/0
  5719 ;;		On exit  : 0/0
  5720 ;;		Unchanged: 0/0
  5721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5726 ;;Total ram usage:        0 bytes
  5727 ;; Hardware stack levels used:    1
  5728 ;; Hardware stack levels required when called:    3
  5729 ;; This function calls:
  5730 ;;		Nothing
  5731 ;; This function is called by:
  5732 ;;		_main
  5733 ;; This function uses a non-reentrant model
  5734 ;;
  5735                           
  5736                           	psect	text6
  5737  015D70                     __ptext6:
  5738                           	opt stack 0
  5739  015D70                     _PWR_Button_Polling:
  5740                           	opt stack 27
  5741                           
  5742                           ;RemoteCan.c: 388: if ((PORTBbits.RB5 == 0) || (wait_low_1 == 0)) {
  5743                           
  5744                           ; BSR set to: 0
  5745                           ;incstack = 0
  5746  015D70  AA81               	btfss	3969,5,c	;volatile
  5747  015D72  D002               	goto	l849
  5748  015D74  B24C               	btfsc	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  5749  015D76  0012               	return	
  5750  015D78                     l849:
  5751                           
  5752                           ;RemoteCan.c: 389: wait_low_1 = 0;
  5753  015D78  924C               	bcf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  5754                           
  5755                           ;RemoteCan.c: 390: if (PORTBbits.RB5 == 1) {
  5756  015D7A  AA81               	btfss	3969,5,c	;volatile
  5757  015D7C  0012               	return	
  5758                           
  5759                           ;RemoteCan.c: 391: power_switch = ~power_switch;
  5760  015D7E  B04C               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5761  015D80  D002               	goto	u8380
  5762  015D82  804C               	bsf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5763  015D84  D001               	goto	u8395
  5764  015D86                     u8380:
  5765  015D86  904C               	bcf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5766  015D88                     u8395:
  5767                           
  5768                           ;RemoteCan.c: 392: wait_low_1 = 1;
  5769  015D88  824C               	bsf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  5770  015D8A  0012               	return	
  5771  015D8C                     __end_of_PWR_Button_Polling:
  5772                           	opt stack 0
  5773                           tblptru	equ	0xFF8
  5774                           tblptrh	equ	0xFF7
  5775                           tblptrl	equ	0xFF6
  5776                           tablat	equ	0xFF5
  5777                           intcon	equ	0xFF2
  5778                           postinc0	equ	0xFEE
  5779                           wreg	equ	0xFE8
  5780                           status	equ	0xFD8
  5781                           
  5782 ;; *************** function _LCD_Handler *****************
  5783 ;; Defined at:
  5784 ;;		line 301 in file "RemoteCan.c"
  5785 ;; Parameters:    Size  Location     Type
  5786 ;;		None
  5787 ;; Auto vars:     Size  Location     Type
  5788 ;;		None
  5789 ;; Return value:  Size  Location     Type
  5790 ;;		None               void
  5791 ;; Registers used:
  5792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5793 ;; Tracked objects:
  5794 ;;		On entry : 0/0
  5795 ;;		On exit  : 0/0
  5796 ;;		Unchanged: 0/0
  5797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5802 ;;Total ram usage:        0 bytes
  5803 ;; Hardware stack levels used:    1
  5804 ;; Hardware stack levels required when called:    9
  5805 ;; This function calls:
  5806 ;;		_CANisTxReady
  5807 ;;		_CANsendMessage
  5808 ;;		_LCD_clear
  5809 ;;		_LCD_goto_line
  5810 ;;		_LCD_goto_xy
  5811 ;;		_LCD_initialize
  5812 ;;		_LCD_write_message
  5813 ;;		_LCD_write_string
  5814 ;;		___fldiv
  5815 ;;		___xxtofl
  5816 ;;		_sprintf
  5817 ;; This function is called by:
  5818 ;;		_main
  5819 ;; This function uses a non-reentrant model
  5820 ;;
  5821                           
  5822                           	psect	text7
  5823  0145EC                     __ptext7:
  5824                           	opt stack 0
  5825  0145EC                     _LCD_Handler:
  5826                           	opt stack 21
  5827  0145EC                     l8492:
  5828  0145EC  EC86  F0AE         	call	_CANisTxReady	;wreg free
  5829  0145F0  06E8               	decf	wreg,f,c
  5830  0145F2  A4D8               	btfss	status,2,c
  5831  0145F4  D7FB               	goto	l8492
  5832                           
  5833                           ;RemoteCan.c: 304: CANsendMessage(0b00000000110, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  5834  0145F6  0E06               	movlw	6
  5835  0145F8  0100               	movlb	0	; () banked
  5836  0145FA  6F72               	movwf	CANsendMessage@identifier& (0+255),b
  5837  0145FC  0E00               	movlw	0
  5838  0145FE  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  5839  014600  0E00               	movlw	0
  5840  014602  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  5841  014604  0E00               	movlw	0
  5842  014606  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  5843  014608  0EEA               	movlw	low _data_speed
  5844  01460A  0100               	movlb	0	; () banked
  5845  01460C  6F76               	movwf	CANsendMessage@data& (0+255),b
  5846  01460E  0E00               	movlw	high _data_speed
  5847  014610  0100               	movlb	0	; () banked
  5848  014612  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
  5849  014614  0E08               	movlw	8
  5850  014616  0100               	movlb	0	; () banked
  5851  014618  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
  5852  01461A  0EFC               	movlw	252
  5853  01461C  0100               	movlb	0	; () banked
  5854  01461E  6F79               	movwf	CANsendMessage@flags& (0+255),b
  5855  014620  ECCD  F089         	call	_CANsendMessage	;wreg free
  5856                           
  5857                           ;RemoteCan.c: 306: actual_speed_kmh = ((actual_speed) / 278.0);
  5858  014624  C0DE  F072         	movff	_actual_speed,___xxtofl@val
  5859  014628  C0DF  F073         	movff	_actual_speed+1,___xxtofl@val+1
  5860  01462C  0100               	movlb	0	; () banked
  5861  01462E  6B74               	clrf	(___xxtofl@val+2)& (0+255),b
  5862  014630  6B75               	clrf	(___xxtofl@val+3)& (0+255),b
  5863  014632  0E00               	movlw	0
  5864  014634  ECE3  F0A3         	call	___xxtofl
  5865  014638  C072  F080         	movff	?___xxtofl,___fldiv@b
  5866  01463C  C073  F081         	movff	?___xxtofl+1,___fldiv@b+1
  5867  014640  C074  F082         	movff	?___xxtofl+2,___fldiv@b+2
  5868  014644  C075  F083         	movff	?___xxtofl+3,___fldiv@b+3
  5869  014648  0E00               	movlw	0
  5870  01464A  0100               	movlb	0	; () banked
  5871  01464C  6F84               	movwf	___fldiv@a& (0+255),b
  5872  01464E  0E00               	movlw	0
  5873  014650  6F85               	movwf	(___fldiv@a+1)& (0+255),b
  5874  014652  0E8B               	movlw	139
  5875  014654  6F86               	movwf	(___fldiv@a+2)& (0+255),b
  5876  014656  0E43               	movlw	67
  5877  014658  6F87               	movwf	(___fldiv@a+3)& (0+255),b
  5878  01465A  ECCC  F09D         	call	___fldiv	;wreg free
  5879  01465E  C080  F00E         	movff	?___fldiv,_actual_speed_kmh
  5880  014662  C081  F00F         	movff	?___fldiv+1,_actual_speed_kmh+1
  5881  014666  C082  F010         	movff	?___fldiv+2,_actual_speed_kmh+2
  5882  01466A  C083  F011         	movff	?___fldiv+3,_actual_speed_kmh+3
  5883                           
  5884                           ;RemoteCan.c: 307: sprintf(str, "%.2f", actual_speed_kmh);
  5885  01466E  0E0F               	movlw	low _str
  5886  014670  0100               	movlb	0	; () banked
  5887  014672  6FC4               	movwf	sprintf@sp& (0+255),b
  5888  014674  0E01               	movlw	high _str
  5889  014676  0100               	movlb	0	; () banked
  5890  014678  6FC5               	movwf	(sprintf@sp+1)& (0+255),b
  5891  01467A  0EF9               	movlw	low STR_5
  5892  01467C  0100               	movlb	0	; () banked
  5893  01467E  6FC6               	movwf	sprintf@f& (0+255),b
  5894  014680  0EFF               	movlw	high STR_5
  5895  014682  0100               	movlb	0	; () banked
  5896  014684  6FC7               	movwf	(sprintf@f+1)& (0+255),b
  5897  014686  C00E  F0C8         	movff	_actual_speed_kmh,?_sprintf+4
  5898  01468A  C00F  F0C9         	movff	_actual_speed_kmh+1,?_sprintf+5
  5899  01468E  C010  F0CA         	movff	_actual_speed_kmh+2,?_sprintf+6
  5900  014692  C011  F0CB         	movff	_actual_speed_kmh+3,?_sprintf+7
  5901  014696  EC83  F085         	call	_sprintf	;wreg free
  5902                           
  5903                           ;RemoteCan.c: 308: str[11] = '\0';
  5904  01469A  0E00               	movlw	0
  5905  01469C  0101               	movlb	1	; () banked
  5906  01469E  6F1A               	movwf	(_str+11)& (0+255),b
  5907                           
  5908                           ; BSR set to: 1
  5909                           ;RemoteCan.c: 310: if (display_refresh == 1) {
  5910  0146A0  AC4B               	btfss	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  5911  0146A2  D032               	goto	l8518
  5912                           
  5913                           ; BSR set to: 1
  5914                           ;RemoteCan.c: 311: LCD_initialize(16);
  5915  0146A4  0E10               	movlw	16
  5916  0146A6  EC08  F0A8         	call	_LCD_initialize
  5917                           
  5918                           ;RemoteCan.c: 312: LCD_clear();
  5919  0146AA  EC45  F0AE         	call	_LCD_clear	;wreg free
  5920                           
  5921                           ;RemoteCan.c: 313: LCD_goto_line(1);
  5922  0146AE  0E01               	movlw	1
  5923  0146B0  ECEB  F0A9         	call	_LCD_goto_line
  5924                           
  5925                           ;RemoteCan.c: 314: LCD_write_message("=== VEHICLE DATA ===");
  5926  0146B4  0E7D               	movlw	low STR_6
  5927  0146B6  0100               	movlb	0	; () banked
  5928  0146B8  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  5929  0146BA  0EFF               	movlw	high STR_6
  5930  0146BC  0100               	movlb	0	; () banked
  5931  0146BE  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5932  0146C0  EC12  F0AE         	call	_LCD_write_message	;wreg free
  5933                           
  5934                           ;RemoteCan.c: 315: LCD_goto_line(2);
  5935  0146C4  0E02               	movlw	2
  5936  0146C6  ECEB  F0A9         	call	_LCD_goto_line
  5937                           
  5938                           ;RemoteCan.c: 316: LCD_write_message("Direction: ");
  5939  0146CA  0EC6               	movlw	low STR_7
  5940  0146CC  0100               	movlb	0	; () banked
  5941  0146CE  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  5942  0146D0  0EFF               	movlw	high STR_7
  5943  0146D2  0100               	movlb	0	; () banked
  5944  0146D4  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5945  0146D6  EC12  F0AE         	call	_LCD_write_message	;wreg free
  5946                           
  5947                           ;RemoteCan.c: 317: LCD_goto_line(3);
  5948  0146DA  0E03               	movlw	3
  5949  0146DC  ECEB  F0A9         	call	_LCD_goto_line
  5950                           
  5951                           ;RemoteCan.c: 318: LCD_write_message("Speed: 0.00 Km/h");
  5952  0146E0  0EA7               	movlw	low STR_8
  5953  0146E2  0100               	movlb	0	; () banked
  5954  0146E4  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  5955  0146E6  0EFF               	movlw	high STR_8
  5956  0146E8  0100               	movlb	0	; () banked
  5957  0146EA  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5958  0146EC  EC12  F0AE         	call	_LCD_write_message	;wreg free
  5959                           
  5960                           ;RemoteCan.c: 319: LCD_goto_line(4);
  5961  0146F0  0E04               	movlw	4
  5962  0146F2  ECEB  F0A9         	call	_LCD_goto_line
  5963                           
  5964                           ;RemoteCan.c: 320: LCD_write_message("Park assist: ");
  5965  0146F6  0EB8               	movlw	low STR_9
  5966  0146F8  0100               	movlb	0	; () banked
  5967  0146FA  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  5968  0146FC  0EFF               	movlw	high STR_9
  5969  0146FE  0100               	movlb	0	; () banked
  5970  014700  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5971  014702  EC12  F0AE         	call	_LCD_write_message	;wreg free
  5972                           
  5973                           ;RemoteCan.c: 321: display_refresh = 0;
  5974  014706  9C4B               	bcf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  5975  014708                     l8518:
  5976                           
  5977                           ;RemoteCan.c: 322: }
  5978                           ;RemoteCan.c: 325: LCD_goto_xy(12, 2);
  5979  014708  0E02               	movlw	2
  5980  01470A  0100               	movlb	0	; () banked
  5981  01470C  6F81               	movwf	LCD_goto_xy@y& (0+255),b
  5982  01470E  0E0C               	movlw	12
  5983  014710  ECC6  F0AE         	call	_LCD_goto_xy
  5984                           
  5985                           ;RemoteCan.c: 326: if (switch_position != 0) {
  5986  014714  0100               	movlb	0	; () banked
  5987  014716  51E6               	movf	_switch_position& (0+255),w,b	;volatile
  5988  014718  B4D8               	btfsc	status,2,c
  5989  01471A  D016               	goto	l8528
  5990                           
  5991                           ; BSR set to: 0
  5992                           ;RemoteCan.c: 327: if (dir == 1) {
  5993  01471C  0100               	movlb	0	; () banked
  5994  01471E  05E4               	decf	_dir& (0+255),w,b	;volatile
  5995  014720  A4D8               	btfss	status,2,c
  5996  014722  D009               	goto	l8526
  5997                           
  5998                           ; BSR set to: 0
  5999                           ;RemoteCan.c: 328: LCD_write_message("FWD ");
  6000  014724  0EEF               	movlw	low STR_10
  6001  014726  0100               	movlb	0	; () banked
  6002  014728  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  6003  01472A  0EFF               	movlw	high STR_10
  6004  01472C  0100               	movlb	0	; () banked
  6005  01472E  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6006  014730  EC12  F0AE         	call	_LCD_write_message	;wreg free
  6007                           
  6008                           ;RemoteCan.c: 329: } else {
  6009  014734  D011               	goto	l8530
  6010  014736                     l8526:
  6011                           
  6012                           ;RemoteCan.c: 330: LCD_write_message("BKWD");
  6013  014736  0EF4               	movlw	low STR_11
  6014  014738  0100               	movlb	0	; () banked
  6015  01473A  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  6016  01473C  0EFF               	movlw	high STR_11
  6017  01473E  0100               	movlb	0	; () banked
  6018  014740  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6019  014742  EC12  F0AE         	call	_LCD_write_message	;wreg free
  6020                           
  6021                           ;RemoteCan.c: 331: }
  6022                           ;RemoteCan.c: 332: } else {
  6023  014746  D008               	goto	l8530
  6024  014748                     l8528:
  6025                           
  6026                           ;RemoteCan.c: 333: LCD_write_message("P   ");
  6027  014748  0EEA               	movlw	low STR_12
  6028  01474A  0100               	movlb	0	; () banked
  6029  01474C  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  6030  01474E  0EFF               	movlw	high STR_12
  6031  014750  0100               	movlb	0	; () banked
  6032  014752  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6033  014754  EC12  F0AE         	call	_LCD_write_message	;wreg free
  6034  014758                     l8530:
  6035                           
  6036                           ;RemoteCan.c: 334: }
  6037                           ;RemoteCan.c: 337: LCD_goto_xy(8, 3);
  6038  014758  0E03               	movlw	3
  6039  01475A  0100               	movlb	0	; () banked
  6040  01475C  6F81               	movwf	LCD_goto_xy@y& (0+255),b
  6041  01475E  0E08               	movlw	8
  6042  014760  ECC6  F0AE         	call	_LCD_goto_xy
  6043                           
  6044                           ;RemoteCan.c: 338: LCD_write_string(str);
  6045  014764  0E0F               	movlw	low _str
  6046  014766  0100               	movlb	0	; () banked
  6047  014768  6F83               	movwf	LCD_write_string@buffer& (0+255),b
  6048  01476A  0E01               	movlw	high _str
  6049  01476C  0100               	movlb	0	; () banked
  6050  01476E  6F84               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  6051  014770  EC73  F0AE         	call	_LCD_write_string	;wreg free
  6052                           
  6053                           ;RemoteCan.c: 341: LCD_goto_xy(14, 4);
  6054  014774  0E04               	movlw	4
  6055  014776  0100               	movlb	0	; () banked
  6056  014778  6F81               	movwf	LCD_goto_xy@y& (0+255),b
  6057  01477A  0E0E               	movlw	14
  6058  01477C  ECC6  F0AE         	call	_LCD_goto_xy
  6059                           
  6060                           ;RemoteCan.c: 342: if (parking_state == 0) {
  6061  014780  0100               	movlb	0	; () banked
  6062  014782  51E5               	movf	_parking_state& (0+255),w,b	;volatile
  6063  014784  A4D8               	btfss	status,2,c
  6064  014786  D009               	goto	l8540
  6065                           
  6066                           ; BSR set to: 0
  6067                           ;RemoteCan.c: 343: LCD_write_message("OFF    ");
  6068  014788  0ED2               	movlw	low STR_13
  6069  01478A  0100               	movlb	0	; () banked
  6070  01478C  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  6071  01478E  0EFF               	movlw	high STR_13
  6072  014790  0100               	movlb	0	; () banked
  6073  014792  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6074  014794  EC12  F0AE         	call	_LCD_write_message	;wreg free
  6075                           
  6076                           ;RemoteCan.c: 344: } else {
  6077  014798  0012               	return	
  6078  01479A                     l8540:
  6079                           
  6080                           ;RemoteCan.c: 345: if (parking_state == 1) {
  6081  01479A  0100               	movlb	0	; () banked
  6082  01479C  05E5               	decf	_parking_state& (0+255),w,b	;volatile
  6083  01479E  A4D8               	btfss	status,2,c
  6084  0147A0  D009               	goto	l8544
  6085                           
  6086                           ; BSR set to: 0
  6087                           ;RemoteCan.c: 346: LCD_write_message("SEARCH ");
  6088  0147A2  0EDA               	movlw	low STR_14
  6089  0147A4  0100               	movlb	0	; () banked
  6090  0147A6  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  6091  0147A8  0EFF               	movlw	high STR_14
  6092  0147AA  0100               	movlb	0	; () banked
  6093  0147AC  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6094  0147AE  EC12  F0AE         	call	_LCD_write_message	;wreg free
  6095                           
  6096                           ;RemoteCan.c: 347: } else {
  6097  0147B2  0012               	return	
  6098  0147B4                     l8544:
  6099                           
  6100                           ;RemoteCan.c: 348: LCD_write_message("PARKING");
  6101  0147B4  0EE2               	movlw	low STR_15
  6102  0147B6  0100               	movlb	0	; () banked
  6103  0147B8  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  6104  0147BA  0EFF               	movlw	high STR_15
  6105  0147BC  0100               	movlb	0	; () banked
  6106  0147BE  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6107  0147C0  EC12  F0AE         	call	_LCD_write_message	;wreg free
  6108  0147C4  0012               	return	
  6109  0147C6                     __end_of_LCD_Handler:
  6110                           	opt stack 0
  6111                           tblptru	equ	0xFF8
  6112                           tblptrh	equ	0xFF7
  6113                           tblptrl	equ	0xFF6
  6114                           tablat	equ	0xFF5
  6115                           intcon	equ	0xFF2
  6116                           postinc0	equ	0xFEE
  6117                           wreg	equ	0xFE8
  6118                           status	equ	0xFD8
  6119                           
  6120 ;; *************** function _sprintf *****************
  6121 ;; Defined at:
  6122 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  6123 ;; Parameters:    Size  Location     Type
  6124 ;;  sp              2  100[BANK0 ] PTR unsigned char 
  6125 ;;		 -> str(12), 
  6126 ;;  f               2  102[BANK0 ] PTR const unsigned char 
  6127 ;;		 -> STR_5(5), 
  6128 ;; Auto vars:     Size  Location     Type
  6129 ;;  fval            4   22[BANK1 ] PTR const unsigned char 
  6130 ;;  tmpval          4   16[BANK1 ] struct .
  6131 ;;  val             4   10[BANK1 ] unsigned long 
  6132 ;;  cp              3    0        PTR const unsigned char 
  6133 ;;  prec            2   20[BANK1 ] int 
  6134 ;;  exp             2   14[BANK1 ] int 
  6135 ;;  flag            2    8[BANK1 ] unsigned short 
  6136 ;;  ap              2    6[BANK1 ] PTR void [1]
  6137 ;;		 -> ?_sprintf(2), 
  6138 ;;  len             2    0        unsigned int 
  6139 ;;  width           2    0        int 
  6140 ;;  c               1   26[BANK1 ] char 
  6141 ;;  d               1    0        unsigned char 
  6142 ;; Return value:  Size  Location     Type
  6143 ;;                  2  100[BANK0 ] int 
  6144 ;; Registers used:
  6145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6146 ;; Tracked objects:
  6147 ;;		On entry : 0/0
  6148 ;;		On exit  : 0/0
  6149 ;;		Unchanged: 0/0
  6150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6151 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6152 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0
  6153 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6154 ;;      Totals:         0       8      27       0       0       0       0       0       0       0       0       0       
      +0       0
  6155 ;;Total ram usage:       35 bytes
  6156 ;; Hardware stack levels used:    1
  6157 ;; Hardware stack levels required when called:    5
  6158 ;; This function calls:
  6159 ;;		___awdiv
  6160 ;;		___fladd
  6161 ;;		___flge
  6162 ;;		___flmul
  6163 ;;		___flneg
  6164 ;;		___flsub
  6165 ;;		___fltol
  6166 ;;		___lldiv
  6167 ;;		___llmod
  6168 ;;		___wmul
  6169 ;;		___xxtofl
  6170 ;;		__div_to_l_
  6171 ;;		__tdiv_to_l_
  6172 ;;		_fround
  6173 ;;		_isdigit
  6174 ;;		_scale
  6175 ;; This function is called by:
  6176 ;;		_LCD_Handler
  6177 ;; This function uses a non-reentrant model
  6178 ;;
  6179                           
  6180                           	psect	text8
  6181  010B06                     __ptext8:
  6182                           	opt stack 0
  6183  010B06                     _sprintf:
  6184                           	opt stack 24
  6185                           
  6186                           ;doprnt.c: 494: va_list ap;
  6187                           ;doprnt.c: 499: signed char c;
  6188                           ;doprnt.c: 501: int width;
  6189                           ;doprnt.c: 504: int prec;
  6190                           ;doprnt.c: 508: unsigned short flag;
  6191                           ;doprnt.c: 515: char d;
  6192                           ;doprnt.c: 516: double fval;
  6193                           ;doprnt.c: 517: int exp;
  6194                           ;doprnt.c: 523: union {
  6195                           ;doprnt.c: 524: unsigned long vd;
  6196                           ;doprnt.c: 525: double integ;
  6197                           ;doprnt.c: 526: } tmpval;
  6198                           ;doprnt.c: 528: unsigned long val;
  6199                           ;doprnt.c: 529: unsigned len;
  6200                           ;doprnt.c: 530: const char * cp;
  6201                           ;doprnt.c: 533: *ap = __va_start();
  6202                           
  6203                           ;incstack = 0
  6204  010B06  0EC8               	movlw	low (?_sprintf+4)
  6205  010B08  0101               	movlb	1	; () banked
  6206  010B0A  6F29               	movwf	sprintf@ap& (0+255),b
  6207  010B0C  0E00               	movlw	high (?_sprintf+4)
  6208  010B0E  0101               	movlb	1	; () banked
  6209  010B10  6F2A               	movwf	(sprintf@ap+1)& (0+255),b
  6210                           
  6211                           ;doprnt.c: 536: while(c = *f++) {
  6212  010B12  EFB5  F089         	goto	l8414
  6213  010B16                     l8216:
  6214                           
  6215                           ; BSR set to: 1
  6216                           ;doprnt.c: 538: if(c != '%')
  6217  010B16  0E25               	movlw	37
  6218  010B18  0101               	movlb	1	; () banked
  6219  010B1A  193D               	xorwf	sprintf@c& (0+255),w,b
  6220  010B1C  B4D8               	btfsc	status,2,c
  6221  010B1E  D008               	goto	l8222
  6222                           
  6223                           ; BSR set to: 1
  6224                           ;doprnt.c: 540: {
  6225                           ;doprnt.c: 541: ((*sp++ = (c)));
  6226  010B20  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  6227  010B24  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  6228  010B28  C13D  FFDF         	movff	sprintf@c,indf2
  6229  010B2C  EFB2  F089         	goto	l8412
  6230  010B30                     l8222:
  6231                           
  6232                           ;doprnt.c: 543: }
  6233                           ;doprnt.c: 548: flag = 0;
  6234  010B30  0E00               	movlw	0
  6235  010B32  0101               	movlb	1	; () banked
  6236  010B34  6F2C               	movwf	(sprintf@flag+1)& (0+255),b
  6237  010B36  0E00               	movlw	0
  6238  010B38  6F2B               	movwf	sprintf@flag& (0+255),b
  6239                           
  6240                           ; BSR set to: 1
  6241                           ;doprnt.c: 611: if(*f == '.') {
  6242  010B3A  C0C6  FFF6         	movff	sprintf@f,tblptrl
  6243  010B3E  C0C7  FFF7         	movff	sprintf@f+1,tblptrh
  6244  010B42                     	if	0	;tblptru may be non-zero
  6245  010B42                     	endif
  6246  010B42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6247  010B42  0E00               	movlw	low (__mediumconst shr (0+16))
  6248  010B44  6EF8               	movwf	tblptru,c
  6249  010B46                     	endif
  6250  010B46  0008               	tblrd		*
  6251  010B48  50F5               	movf	tablat,w,c
  6252  010B4A  0A2E               	xorlw	46
  6253  010B4C  A4D8               	btfss	status,2,c
  6254  010B4E  D03D               	goto	l8236
  6255                           
  6256                           ; BSR set to: 1
  6257                           ;doprnt.c: 612: flag |= 0x4000;
  6258  010B50  0101               	movlb	1	; () banked
  6259  010B52  8D2C               	bsf	(sprintf@flag+1)& (0+255),6,b
  6260                           
  6261                           ;doprnt.c: 613: f++;
  6262  010B54  0100               	movlb	0	; () banked
  6263  010B56  4BC6               	infsnz	sprintf@f& (0+255),f,b
  6264  010B58  2BC7               	incf	(sprintf@f+1)& (0+255),f,b
  6265                           
  6266                           ; BSR set to: 0
  6267                           ;doprnt.c: 620: {
  6268                           ;doprnt.c: 621: prec = 0;
  6269  010B5A  0E00               	movlw	0
  6270  010B5C  0101               	movlb	1	; () banked
  6271  010B5E  6F38               	movwf	(sprintf@prec+1)& (0+255),b
  6272  010B60  0E00               	movlw	0
  6273  010B62  6F37               	movwf	sprintf@prec& (0+255),b
  6274                           
  6275                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  6276  010B64  D025               	goto	l8234
  6277  010B66                     l8230:
  6278                           
  6279                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  6280  010B66  C137  F072         	movff	sprintf@prec,___wmul@multiplier
  6281  010B6A  C138  F073         	movff	sprintf@prec+1,___wmul@multiplier+1
  6282  010B6E  0E00               	movlw	0
  6283  010B70  0100               	movlb	0	; () banked
  6284  010B72  6F75               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6285  010B74  0E0A               	movlw	10
  6286  010B76  6F74               	movwf	___wmul@multiplicand& (0+255),b
  6287  010B78  ECF7  F0AD         	call	___wmul	;wreg free
  6288  010B7C  C0C6  FFF6         	movff	sprintf@f,tblptrl
  6289  010B80  C0C7  FFF7         	movff	sprintf@f+1,tblptrh
  6290  010B84                     	if	0	;tblptru may be non-zero
  6291  010B84                     	endif
  6292  010B84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6293  010B84  0E00               	movlw	low (__mediumconst shr (0+16))
  6294  010B86  6EF8               	movwf	tblptru,c
  6295  010B88                     	endif
  6296  010B88  0008               	tblrd		*
  6297  010B8A  50F5               	movf	tablat,w,c
  6298  010B8C  0100               	movlb	0	; () banked
  6299  010B8E  2772               	addwf	?___wmul& (0+255),f,b
  6300  010B90  0E00               	movlw	0
  6301  010B92  0100               	movlb	0	; () banked
  6302  010B94  2373               	addwfc	(?___wmul+1)& (0+255),f,b
  6303  010B96  0ED0               	movlw	208
  6304  010B98  0100               	movlb	0	; () banked
  6305  010B9A  2572               	addwf	?___wmul& (0+255),w,b
  6306  010B9C  0101               	movlb	1	; () banked
  6307  010B9E  6F37               	movwf	sprintf@prec& (0+255),b
  6308  010BA0  0EFF               	movlw	255
  6309  010BA2  0100               	movlb	0	; () banked
  6310  010BA4  2173               	addwfc	(?___wmul+1)& (0+255),w,b
  6311  010BA6  0101               	movlb	1	; () banked
  6312  010BA8  6F38               	movwf	(sprintf@prec+1)& (0+255),b
  6313                           
  6314                           ; BSR set to: 1
  6315  010BAA  0100               	movlb	0	; () banked
  6316  010BAC  4BC6               	infsnz	sprintf@f& (0+255),f,b
  6317  010BAE  2BC7               	incf	(sprintf@f+1)& (0+255),f,b
  6318  010BB0                     l8234:
  6319  010BB0  C0C6  FFF6         	movff	sprintf@f,tblptrl
  6320  010BB4  C0C7  FFF7         	movff	sprintf@f+1,tblptrh
  6321  010BB8                     	if	0	;tblptru may be non-zero
  6322  010BB8                     	endif
  6323  010BB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6324  010BB8  0E00               	movlw	low (__mediumconst shr (0+16))
  6325  010BBA  6EF8               	movwf	tblptru,c
  6326  010BBC                     	endif
  6327  010BBC  0008               	tblrd		*
  6328  010BBE  50F5               	movf	tablat,w,c
  6329  010BC0  EC5E  F0AE         	call	_isdigit
  6330  010BC4  A0D8               	btfss	status,0,c
  6331  010BC6  D00C               	goto	l8244
  6332  010BC8  D7CE               	goto	l8230
  6333  010BCA                     l8236:
  6334                           
  6335                           ;doprnt.c: 626: prec = 0;
  6336  010BCA  0E00               	movlw	0
  6337  010BCC  0101               	movlb	1	; () banked
  6338  010BCE  6F38               	movwf	(sprintf@prec+1)& (0+255),b
  6339  010BD0  0E00               	movlw	0
  6340  010BD2  6F37               	movwf	sprintf@prec& (0+255),b
  6341                           
  6342                           ; BSR set to: 1
  6343                           ;doprnt.c: 628: flag |= 0x1000;
  6344  010BD4  0101               	movlb	1	; () banked
  6345  010BD6  892C               	bsf	(sprintf@flag+1)& (0+255),4,b
  6346                           
  6347                           ; BSR set to: 1
  6348                           ;doprnt.c: 630: }
  6349                           ;doprnt.c: 635: switch(c = *f++) {
  6350  010BD8  D003               	goto	l8244
  6351  010BDA                     l8240:
  6352                           
  6353                           ; BSR set to: 1
  6354                           ;doprnt.c: 663: flag |= 0x400;
  6355  010BDA  0101               	movlb	1	; () banked
  6356  010BDC  852C               	bsf	(sprintf@flag+1)& (0+255),2,b
  6357                           
  6358                           ;doprnt.c: 664: break;
  6359  010BDE  D015               	goto	l8246
  6360  010BE0                     l8244:
  6361  010BE0  C0C6  FFF6         	movff	sprintf@f,tblptrl
  6362  010BE4  C0C7  FFF7         	movff	sprintf@f+1,tblptrh
  6363  010BE8  0100               	movlb	0	; () banked
  6364  010BEA  4BC6               	infsnz	sprintf@f& (0+255),f,b
  6365  010BEC  2BC7               	incf	(sprintf@f+1)& (0+255),f,b
  6366  010BEE                     	if	0	;tblptru may be non-zero
  6367  010BEE                     	endif
  6368  010BEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6369  010BEE  0E00               	movlw	low (__mediumconst shr (0+16))
  6370  010BF0  6EF8               	movwf	tblptru,c
  6371  010BF2                     	endif
  6372  010BF2  0008               	tblrd		*
  6373  010BF4  CFF5 F13D          	movff	tablat,sprintf@c
  6374  010BF8  0101               	movlb	1	; () banked
  6375  010BFA  513D               	movf	sprintf@c& (0+255),w,b
  6376                           
  6377                           ; Switch size 1, requested type "space"
  6378                           ; Number of cases is 2, Range of values is 0 to 102
  6379                           ; switch strategies available:
  6380                           ; Name         Instructions Cycles
  6381                           ; simple_byte            7     4 (average)
  6382                           ;	Chosen strategy is simple_byte
  6383  010BFC  0A00               	xorlw	0	; case 0
  6384  010BFE  B4D8               	btfsc	status,2,c
  6385  010C00  D3C5               	goto	l8416
  6386  010C02  0A66               	xorlw	102	; case 102
  6387  010C04  B4D8               	btfsc	status,2,c
  6388  010C06  D7E9               	goto	l8240
  6389  010C08  D3B0               	goto	l8414
  6390  010C0A                     l8246:
  6391                           
  6392                           ; BSR set to: 1
  6393                           ;doprnt.c: 825: if(flag & (0x700)) {
  6394  010C0A  0E07               	movlw	7
  6395  010C0C  0101               	movlb	1	; () banked
  6396  010C0E  152C               	andwf	(sprintf@flag+1)& (0+255),w,b
  6397  010C10  B4D8               	btfsc	status,2,c
  6398  010C12  D353               	goto	l8394
  6399                           
  6400                           ; BSR set to: 1
  6401                           ;doprnt.c: 827: if(flag & 0x1000)
  6402  010C14  0101               	movlb	1	; () banked
  6403  010C16  A92C               	btfss	(sprintf@flag+1)& (0+255),4,b
  6404  010C18  D005               	goto	l8252
  6405                           
  6406                           ; BSR set to: 1
  6407                           ;doprnt.c: 829: prec = 6;
  6408  010C1A  0E00               	movlw	0
  6409  010C1C  0101               	movlb	1	; () banked
  6410  010C1E  6F38               	movwf	(sprintf@prec+1)& (0+255),b
  6411  010C20  0E06               	movlw	6
  6412  010C22  6F37               	movwf	sprintf@prec& (0+255),b
  6413  010C24                     l8252:
  6414                           
  6415                           ; BSR set to: 1
  6416                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  6417  010C24  C129  FFD9         	movff	sprintf@ap,fsr2l
  6418  010C28  C12A  FFDA         	movff	sprintf@ap+1,fsr2h
  6419  010C2C  CFDE F139          	movff	postinc2,sprintf@fval
  6420  010C30  CFDE F13A          	movff	postinc2,sprintf@fval+1
  6421  010C34  CFDE F13B          	movff	postinc2,sprintf@fval+2
  6422  010C38  CFDE F13C          	movff	postinc2,sprintf@fval+3
  6423                           
  6424                           ; BSR set to: 1
  6425  010C3C  0E04               	movlw	4
  6426  010C3E  0101               	movlb	1	; () banked
  6427  010C40  2729               	addwf	sprintf@ap& (0+255),f,b
  6428  010C42  0E00               	movlw	0
  6429  010C44  232A               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6430                           
  6431                           ; BSR set to: 1
  6432                           ;doprnt.c: 831: if(fval < 0.0) {
  6433  010C46  0101               	movlb	1	; () banked
  6434  010C48  AF3C               	btfss	(sprintf@fval+3)& (0+255),7,b
  6435  010C4A  D015               	goto	l8262
  6436                           
  6437                           ; BSR set to: 1
  6438                           ;doprnt.c: 832: fval = -fval;
  6439  010C4C  C139  F099         	movff	sprintf@fval,___flneg@f1
  6440  010C50  C13A  F09A         	movff	sprintf@fval+1,___flneg@f1+1
  6441  010C54  C13B  F09B         	movff	sprintf@fval+2,___flneg@f1+2
  6442  010C58  C13C  F09C         	movff	sprintf@fval+3,___flneg@f1+3
  6443  010C5C  ECDB  F0AD         	call	___flneg	;wreg free
  6444  010C60  C099  F139         	movff	?___flneg,sprintf@fval
  6445  010C64  C09A  F13A         	movff	?___flneg+1,sprintf@fval+1
  6446  010C68  C09B  F13B         	movff	?___flneg+2,sprintf@fval+2
  6447  010C6C  C09C  F13C         	movff	?___flneg+3,sprintf@fval+3
  6448                           
  6449                           ;doprnt.c: 833: flag |= 0x03;
  6450  010C70  0E03               	movlw	3
  6451  010C72  0101               	movlb	1	; () banked
  6452  010C74  132B               	iorwf	sprintf@flag& (0+255),f,b
  6453  010C76                     l8262:
  6454                           
  6455                           ; BSR set to: 1
  6456                           ;doprnt.c: 834: }
  6457                           ;doprnt.c: 835: exp = 0;
  6458  010C76  0E00               	movlw	0
  6459  010C78  0101               	movlb	1	; () banked
  6460  010C7A  6F32               	movwf	(sprintf@exp+1)& (0+255),b
  6461  010C7C  0E00               	movlw	0
  6462  010C7E  6F31               	movwf	sprintf@exp& (0+255),b
  6463                           
  6464                           ; BSR set to: 1
  6465                           ;doprnt.c: 836: if( fval!=0) {
  6466  010C80  0101               	movlb	1	; () banked
  6467  010C82  5139               	movf	sprintf@fval& (0+255),w,b
  6468  010C84  0101               	movlb	1	; () banked
  6469  010C86  113A               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6470  010C88  0101               	movlb	1	; () banked
  6471  010C8A  113B               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6472  010C8C  0101               	movlb	1	; () banked
  6473  010C8E  113C               	iorwf	(sprintf@fval+3)& (0+255),w,b
  6474  010C90  B4D8               	btfsc	status,2,c
  6475  010C92  D08E               	goto	l8290
  6476                           
  6477                           ; BSR set to: 1
  6478                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  6479  010C94  0101               	movlb	1	; () banked
  6480  010C96  353B               	rlcf	(sprintf@fval+2)& (0+255),w,b
  6481  010C98  353C               	rlcf	(sprintf@fval+3)& (0+255),w,b
  6482  010C9A  0F82               	addlw	130
  6483  010C9C  0101               	movlb	1	; () banked
  6484  010C9E  6F31               	movwf	sprintf@exp& (0+255),b
  6485  010CA0  0101               	movlb	1	; () banked
  6486  010CA2  6B32               	clrf	(sprintf@exp+1)& (0+255),b
  6487  010CA4  0EFF               	movlw	255
  6488  010CA6  2332               	addwfc	(sprintf@exp+1)& (0+255),f,b
  6489                           
  6490                           ; BSR set to: 1
  6491                           ;doprnt.c: 838: exp--;
  6492  010CA8  0101               	movlb	1	; () banked
  6493  010CAA  0731               	decf	sprintf@exp& (0+255),f,b
  6494  010CAC  A0D8               	btfss	status,0,c
  6495  010CAE  0732               	decf	(sprintf@exp+1)& (0+255),f,b
  6496                           
  6497                           ; BSR set to: 1
  6498                           ;doprnt.c: 839: exp *= 3;
  6499  010CB0  C131  F072         	movff	sprintf@exp,___wmul@multiplier
  6500  010CB4  C132  F073         	movff	sprintf@exp+1,___wmul@multiplier+1
  6501  010CB8  0E00               	movlw	0
  6502  010CBA  0100               	movlb	0	; () banked
  6503  010CBC  6F75               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6504  010CBE  0E03               	movlw	3
  6505  010CC0  6F74               	movwf	___wmul@multiplicand& (0+255),b
  6506  010CC2  ECF7  F0AD         	call	___wmul	;wreg free
  6507  010CC6  C072  F131         	movff	?___wmul,sprintf@exp
  6508  010CCA  C073  F132         	movff	?___wmul+1,sprintf@exp+1
  6509                           
  6510                           ;doprnt.c: 840: exp /= 10;
  6511  010CCE  C131  F078         	movff	sprintf@exp,___awdiv@dividend
  6512  010CD2  C132  F079         	movff	sprintf@exp+1,___awdiv@dividend+1
  6513  010CD6  0E00               	movlw	0
  6514  010CD8  0100               	movlb	0	; () banked
  6515  010CDA  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  6516  010CDC  0E0A               	movlw	10
  6517  010CDE  6F7A               	movwf	___awdiv@divisor& (0+255),b
  6518  010CE0  EC61  F0AA         	call	___awdiv	;wreg free
  6519  010CE4  C078  F131         	movff	?___awdiv,sprintf@exp
  6520  010CE8  C079  F132         	movff	?___awdiv+1,sprintf@exp+1
  6521                           
  6522                           ;doprnt.c: 841: if(exp < 0)
  6523  010CEC  0101               	movlb	1	; () banked
  6524  010CEE  AF32               	btfss	(sprintf@exp+1)& (0+255),7,b
  6525  010CF0  D004               	goto	l8278
  6526                           
  6527                           ; BSR set to: 1
  6528                           ;doprnt.c: 842: exp--;
  6529  010CF2  0101               	movlb	1	; () banked
  6530  010CF4  0731               	decf	sprintf@exp& (0+255),f,b
  6531  010CF6  A0D8               	btfss	status,0,c
  6532  010CF8  0732               	decf	(sprintf@exp+1)& (0+255),f,b
  6533  010CFA                     l8278:
  6534                           
  6535                           ; BSR set to: 1
  6536                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  6537  010CFA  0101               	movlb	1	; () banked
  6538  010CFC  5131               	movf	sprintf@exp& (0+255),w,b
  6539  010CFE  0800               	sublw	0
  6540  010D00  EC12  F094         	call	_scale
  6541  010D04  C099  F133         	movff	?_scale,sprintf@tmpval
  6542  010D08  C09A  F134         	movff	?_scale+1,sprintf@tmpval+1
  6543  010D0C  C09B  F135         	movff	?_scale+2,sprintf@tmpval+2
  6544  010D10  C09C  F136         	movff	?_scale+3,sprintf@tmpval+3
  6545                           
  6546                           ;doprnt.c: 847: tmpval.integ *= fval;
  6547  010D14  C133  F080         	movff	sprintf@tmpval,___flmul@b
  6548  010D18  C134  F081         	movff	sprintf@tmpval+1,___flmul@b+1
  6549  010D1C  C135  F082         	movff	sprintf@tmpval+2,___flmul@b+2
  6550  010D20  C136  F083         	movff	sprintf@tmpval+3,___flmul@b+3
  6551  010D24  C139  F084         	movff	sprintf@fval,___flmul@a
  6552  010D28  C13A  F085         	movff	sprintf@fval+1,___flmul@a+1
  6553  010D2C  C13B  F086         	movff	sprintf@fval+2,___flmul@a+2
  6554  010D30  C13C  F087         	movff	sprintf@fval+3,___flmul@a+3
  6555  010D34  EC79  F09B         	call	___flmul	;wreg free
  6556  010D38  C080  F133         	movff	?___flmul,sprintf@tmpval
  6557  010D3C  C081  F134         	movff	?___flmul+1,sprintf@tmpval+1
  6558  010D40  C082  F135         	movff	?___flmul+2,sprintf@tmpval+2
  6559  010D44  C083  F136         	movff	?___flmul+3,sprintf@tmpval+3
  6560                           
  6561                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  6562  010D48  C133  F072         	movff	sprintf@tmpval,___flge@ff1
  6563  010D4C  C134  F073         	movff	sprintf@tmpval+1,___flge@ff1+1
  6564  010D50  C135  F074         	movff	sprintf@tmpval+2,___flge@ff1+2
  6565  010D54  C136  F075         	movff	sprintf@tmpval+3,___flge@ff1+3
  6566  010D58  0E00               	movlw	0
  6567  010D5A  0100               	movlb	0	; () banked
  6568  010D5C  6F76               	movwf	___flge@ff2& (0+255),b
  6569  010D5E  0E00               	movlw	0
  6570  010D60  6F77               	movwf	(___flge@ff2+1)& (0+255),b
  6571  010D62  0E80               	movlw	128
  6572  010D64  6F78               	movwf	(___flge@ff2+2)& (0+255),b
  6573  010D66  0E3F               	movlw	63
  6574  010D68  6F79               	movwf	(___flge@ff2+3)& (0+255),b
  6575  010D6A  EC7C  F0A6         	call	___flge	;wreg free
  6576  010D6E  0100               	movlb	0	; () banked
  6577  010D70  B0D8               	btfsc	status,0,c
  6578  010D72  D005               	goto	l8286
  6579                           
  6580                           ; BSR set to: 0
  6581                           ;doprnt.c: 849: exp--;
  6582  010D74  0101               	movlb	1	; () banked
  6583  010D76  0731               	decf	sprintf@exp& (0+255),f,b
  6584  010D78  A0D8               	btfss	status,0,c
  6585  010D7A  0732               	decf	(sprintf@exp+1)& (0+255),f,b
  6586  010D7C  D019               	goto	l8290
  6587  010D7E                     l8286:
  6588                           
  6589                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  6590  010D7E  C133  F072         	movff	sprintf@tmpval,___flge@ff1
  6591  010D82  C134  F073         	movff	sprintf@tmpval+1,___flge@ff1+1
  6592  010D86  C135  F074         	movff	sprintf@tmpval+2,___flge@ff1+2
  6593  010D8A  C136  F075         	movff	sprintf@tmpval+3,___flge@ff1+3
  6594  010D8E  0E00               	movlw	0
  6595  010D90  0100               	movlb	0	; () banked
  6596  010D92  6F76               	movwf	___flge@ff2& (0+255),b
  6597  010D94  0E00               	movlw	0
  6598  010D96  6F77               	movwf	(___flge@ff2+1)& (0+255),b
  6599  010D98  0E20               	movlw	32
  6600  010D9A  6F78               	movwf	(___flge@ff2+2)& (0+255),b
  6601  010D9C  0E41               	movlw	65
  6602  010D9E  6F79               	movwf	(___flge@ff2+3)& (0+255),b
  6603  010DA0  EC7C  F0A6         	call	___flge	;wreg free
  6604  010DA4  0100               	movlb	0	; () banked
  6605  010DA6  A0D8               	btfss	status,0,c
  6606  010DA8  D003               	goto	l8290
  6607                           
  6608                           ; BSR set to: 0
  6609                           ;doprnt.c: 851: exp++;
  6610  010DAA  0101               	movlb	1	; () banked
  6611  010DAC  4B31               	infsnz	sprintf@exp& (0+255),f,b
  6612  010DAE  2B32               	incf	(sprintf@exp+1)& (0+255),f,b
  6613  010DB0                     l8290:
  6614                           
  6615                           ;doprnt.c: 852: }
  6616                           ;doprnt.c: 1112: if(prec <= 12)
  6617  010DB0  0101               	movlb	1	; () banked
  6618  010DB2  BF38               	btfsc	(sprintf@prec+1)& (0+255),7,b
  6619  010DB4  D008               	goto	l8292
  6620  010DB6  0101               	movlb	1	; () banked
  6621  010DB8  5138               	movf	(sprintf@prec+1)& (0+255),w,b
  6622  010DBA  E123               	bnz	l8294
  6623  010DBC  0E0D               	movlw	13
  6624  010DBE  0101               	movlb	1	; () banked
  6625  010DC0  5D37               	subwf	sprintf@prec& (0+255),w,b
  6626  010DC2  B0D8               	btfsc	status,0,c
  6627  010DC4  D01E               	goto	l8294
  6628  010DC6                     l8292:
  6629                           
  6630                           ; BSR set to: 1
  6631                           ;doprnt.c: 1113: fval += fround(prec);
  6632  010DC6  C139  F0A6         	movff	sprintf@fval,___fladd@b
  6633  010DCA  C13A  F0A7         	movff	sprintf@fval+1,___fladd@b+1
  6634  010DCE  C13B  F0A8         	movff	sprintf@fval+2,___fladd@b+2
  6635  010DD2  C13C  F0A9         	movff	sprintf@fval+3,___fladd@b+3
  6636  010DD6  0101               	movlb	1	; () banked
  6637  010DD8  5137               	movf	sprintf@prec& (0+255),w,b
  6638  010DDA  EC7B  F0A1         	call	_fround
  6639  010DDE  C099  F0AA         	movff	?_fround,___fladd@a
  6640  010DE2  C09A  F0AB         	movff	?_fround+1,___fladd@a+1
  6641  010DE6  C09B  F0AC         	movff	?_fround+2,___fladd@a+2
  6642  010DEA  C09C  F0AD         	movff	?_fround+3,___fladd@a+3
  6643  010DEE  EC25  F099         	call	___fladd	;wreg free
  6644  010DF2  C0A6  F139         	movff	?___fladd,sprintf@fval
  6645  010DF6  C0A7  F13A         	movff	?___fladd+1,sprintf@fval+1
  6646  010DFA  C0A8  F13B         	movff	?___fladd+2,sprintf@fval+2
  6647  010DFE  C0A9  F13C         	movff	?___fladd+3,sprintf@fval+3
  6648  010E02                     l8294:
  6649                           
  6650                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  6651  010E02  0101               	movlb	1	; () banked
  6652  010E04  BF32               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6653  010E06  D008               	goto	l8296
  6654  010E08  0101               	movlb	1	; () banked
  6655  010E0A  5132               	movf	(sprintf@exp+1)& (0+255),w,b
  6656  010E0C  E12E               	bnz	l8302
  6657  010E0E  0E0A               	movlw	10
  6658  010E10  0101               	movlb	1	; () banked
  6659  010E12  5D31               	subwf	sprintf@exp& (0+255),w,b
  6660  010E14  B0D8               	btfsc	status,0,c
  6661  010E16  D029               	goto	l8302
  6662  010E18                     l8296:
  6663                           
  6664                           ; BSR set to: 1
  6665  010E18  0101               	movlb	1	; () banked
  6666  010E1A  5139               	movf	sprintf@fval& (0+255),w,b
  6667  010E1C  0101               	movlb	1	; () banked
  6668  010E1E  113A               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6669  010E20  0101               	movlb	1	; () banked
  6670  010E22  113B               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6671  010E24  0101               	movlb	1	; () banked
  6672  010E26  113C               	iorwf	(sprintf@fval+3)& (0+255),w,b
  6673  010E28  B4D8               	btfsc	status,2,c
  6674  010E2A  D06D               	goto	l8316
  6675                           
  6676                           ; BSR set to: 1
  6677  010E2C  C139  F0BA         	movff	sprintf@fval,___fltol@f1
  6678  010E30  C13A  F0BB         	movff	sprintf@fval+1,___fltol@f1+1
  6679  010E34  C13B  F0BC         	movff	sprintf@fval+2,___fltol@f1+2
  6680  010E38  C13C  F0BD         	movff	sprintf@fval+3,___fltol@f1+3
  6681  010E3C  EC65  F0A9         	call	___fltol	;wreg free
  6682  010E40  0100               	movlb	0	; () banked
  6683  010E42  51BA               	movf	?___fltol& (0+255),w,b
  6684  010E44  0100               	movlb	0	; () banked
  6685  010E46  11BB               	iorwf	(?___fltol+1)& (0+255),w,b
  6686  010E48  0100               	movlb	0	; () banked
  6687  010E4A  11BC               	iorwf	(?___fltol+2)& (0+255),w,b
  6688  010E4C  0100               	movlb	0	; () banked
  6689  010E4E  11BD               	iorwf	(?___fltol+3)& (0+255),w,b
  6690  010E50  A4D8               	btfss	status,2,c
  6691  010E52  D059               	goto	l8316
  6692                           
  6693                           ; BSR set to: 0
  6694  010E54  0101               	movlb	1	; () banked
  6695  010E56  BF32               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6696  010E58  D056               	goto	l8316
  6697  010E5A  0101               	movlb	1	; () banked
  6698  010E5C  5132               	movf	(sprintf@exp+1)& (0+255),w,b
  6699  010E5E  E105               	bnz	l8302
  6700  010E60  0E02               	movlw	2
  6701  010E62  0101               	movlb	1	; () banked
  6702  010E64  5D31               	subwf	sprintf@exp& (0+255),w,b
  6703  010E66  A0D8               	btfss	status,0,c
  6704  010E68  D04E               	goto	l8316
  6705  010E6A                     l8302:
  6706                           
  6707                           ; BSR set to: 1
  6708                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  6709  010E6A  C133  F072         	movff	sprintf@tmpval,___flge@ff1
  6710  010E6E  C134  F073         	movff	sprintf@tmpval+1,___flge@ff1+1
  6711  010E72  C135  F074         	movff	sprintf@tmpval+2,___flge@ff1+2
  6712  010E76  C136  F075         	movff	sprintf@tmpval+3,___flge@ff1+3
  6713  010E7A  0E5F               	movlw	95
  6714  010E7C  0100               	movlb	0	; () banked
  6715  010E7E  6F76               	movwf	___flge@ff2& (0+255),b
  6716  010E80  0E70               	movlw	112
  6717  010E82  6F77               	movwf	(___flge@ff2+1)& (0+255),b
  6718  010E84  0E89               	movlw	137
  6719  010E86  6F78               	movwf	(___flge@ff2+2)& (0+255),b
  6720  010E88  0E40               	movlw	64
  6721  010E8A  6F79               	movwf	(___flge@ff2+3)& (0+255),b
  6722  010E8C  EC7C  F0A6         	call	___flge	;wreg free
  6723  010E90  0100               	movlb	0	; () banked
  6724  010E92  B0D8               	btfsc	status,0,c
  6725  010E94  D003               	goto	l8306
  6726                           
  6727                           ; BSR set to: 0
  6728                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  6729  010E96  0101               	movlb	1	; () banked
  6730  010E98  0EF7               	movlw	247
  6731  010E9A  D002               	goto	L3
  6732  010E9C                     l8306:
  6733                           
  6734                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  6735  010E9C  0101               	movlb	1	; () banked
  6736  010E9E  0EF8               	movlw	248
  6737  010EA0                     L3:
  6738  010EA0  2731               	addwf	sprintf@exp& (0+255),f,b
  6739  010EA2  0EFF               	movlw	255
  6740  010EA4  2332               	addwfc	(sprintf@exp+1)& (0+255),f,b
  6741                           
  6742                           ; BSR set to: 1
  6743                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  6744                           
  6745                           ; BSR set to: 1
  6746  010EA6  0101               	movlb	1	; () banked
  6747  010EA8  5131               	movf	sprintf@exp& (0+255),w,b
  6748  010EAA  EC12  F094         	call	_scale
  6749  010EAE  C099  F133         	movff	?_scale,sprintf@tmpval
  6750  010EB2  C09A  F134         	movff	?_scale+1,sprintf@tmpval+1
  6751  010EB6  C09B  F135         	movff	?_scale+2,sprintf@tmpval+2
  6752  010EBA  C09C  F136         	movff	?_scale+3,sprintf@tmpval+3
  6753  010EBE  C139  F072         	movff	sprintf@fval,__div_to_l_@f1
  6754  010EC2  C13A  F073         	movff	sprintf@fval+1,__div_to_l_@f1+1
  6755  010EC6  C13B  F074         	movff	sprintf@fval+2,__div_to_l_@f1+2
  6756  010ECA  C13C  F075         	movff	sprintf@fval+3,__div_to_l_@f1+3
  6757  010ECE  C133  F076         	movff	sprintf@tmpval,__div_to_l_@f2
  6758  010ED2  C134  F077         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  6759  010ED6  C135  F078         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  6760  010EDA  C136  F079         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  6761  010EDE  EC44  F0A7         	call	__div_to_l_	;wreg free
  6762  010EE2  C072  F12D         	movff	?__div_to_l_,sprintf@val
  6763  010EE6  C073  F12E         	movff	?__div_to_l_+1,sprintf@val+1
  6764  010EEA  C074  F12F         	movff	?__div_to_l_+2,sprintf@val+2
  6765  010EEE  C075  F130         	movff	?__div_to_l_+3,sprintf@val+3
  6766                           
  6767                           ;doprnt.c: 1129: fval = 0.0;
  6768  010EF2  0E00               	movlw	0
  6769  010EF4  0101               	movlb	1	; () banked
  6770  010EF6  6F39               	movwf	sprintf@fval& (0+255),b
  6771  010EF8  0E00               	movlw	0
  6772  010EFA  6F3A               	movwf	(sprintf@fval+1)& (0+255),b
  6773  010EFC  0E00               	movlw	0
  6774  010EFE  6F3B               	movwf	(sprintf@fval+2)& (0+255),b
  6775  010F00  0E00               	movlw	0
  6776  010F02  6F3C               	movwf	(sprintf@fval+3)& (0+255),b
  6777                           
  6778                           ;doprnt.c: 1130: } else {
  6779  010F04  D03C               	goto	l8320
  6780  010F06                     l8316:
  6781                           
  6782                           ;doprnt.c: 1131: val = (unsigned long)fval;
  6783  010F06  C139  F0BA         	movff	sprintf@fval,___fltol@f1
  6784  010F0A  C13A  F0BB         	movff	sprintf@fval+1,___fltol@f1+1
  6785  010F0E  C13B  F0BC         	movff	sprintf@fval+2,___fltol@f1+2
  6786  010F12  C13C  F0BD         	movff	sprintf@fval+3,___fltol@f1+3
  6787  010F16  EC65  F0A9         	call	___fltol	;wreg free
  6788  010F1A  C0BA  F12D         	movff	?___fltol,sprintf@val
  6789  010F1E  C0BB  F12E         	movff	?___fltol+1,sprintf@val+1
  6790  010F22  C0BC  F12F         	movff	?___fltol+2,sprintf@val+2
  6791  010F26  C0BD  F130         	movff	?___fltol+3,sprintf@val+3
  6792                           
  6793                           ;doprnt.c: 1132: fval -= (double)val;
  6794  010F2A  C139  F0BA         	movff	sprintf@fval,___flsub@b
  6795  010F2E  C13A  F0BB         	movff	sprintf@fval+1,___flsub@b+1
  6796  010F32  C13B  F0BC         	movff	sprintf@fval+2,___flsub@b+2
  6797  010F36  C13C  F0BD         	movff	sprintf@fval+3,___flsub@b+3
  6798  010F3A  C12D  F072         	movff	sprintf@val,___xxtofl@val
  6799  010F3E  C12E  F073         	movff	sprintf@val+1,___xxtofl@val+1
  6800  010F42  C12F  F074         	movff	sprintf@val+2,___xxtofl@val+2
  6801  010F46  C130  F075         	movff	sprintf@val+3,___xxtofl@val+3
  6802  010F4A  0E00               	movlw	0
  6803  010F4C  ECE3  F0A3         	call	___xxtofl
  6804  010F50  C072  F0BE         	movff	?___xxtofl,___flsub@a
  6805  010F54  C073  F0BF         	movff	?___xxtofl+1,___flsub@a+1
  6806  010F58  C074  F0C0         	movff	?___xxtofl+2,___flsub@a+2
  6807  010F5C  C075  F0C1         	movff	?___xxtofl+3,___flsub@a+3
  6808  010F60  EC5B  F0AD         	call	___flsub	;wreg free
  6809  010F64  C0BA  F139         	movff	?___flsub,sprintf@fval
  6810  010F68  C0BB  F13A         	movff	?___flsub+1,sprintf@fval+1
  6811  010F6C  C0BC  F13B         	movff	?___flsub+2,sprintf@fval+2
  6812  010F70  C0BD  F13C         	movff	?___flsub+3,sprintf@fval+3
  6813                           
  6814                           ;doprnt.c: 1133: exp = 0;
  6815  010F74  0E00               	movlw	0
  6816  010F76  0101               	movlb	1	; () banked
  6817  010F78  6F32               	movwf	(sprintf@exp+1)& (0+255),b
  6818  010F7A  0E00               	movlw	0
  6819  010F7C  6F31               	movwf	sprintf@exp& (0+255),b
  6820  010F7E                     l8320:
  6821                           
  6822                           ; BSR set to: 1
  6823                           ;doprnt.c: 1134: }
  6824                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  6825  010F7E  0E01               	movlw	1
  6826  010F80  0101               	movlb	1	; () banked
  6827  010F82  6F3D               	movwf	sprintf@c& (0+255),b
  6828  010F84                     l8322:
  6829                           
  6830                           ; BSR set to: 1
  6831  010F84  0E0A               	movlw	10
  6832  010F86  0101               	movlb	1	; () banked
  6833  010F88  193D               	xorwf	sprintf@c& (0+255),w,b
  6834  010F8A  B4D8               	btfsc	status,2,c
  6835  010F8C  D021               	goto	l8334
  6836                           
  6837                           ; BSR set to: 1
  6838                           ;doprnt.c: 1137: if(val < dpowers[c])
  6839                           
  6840                           ; BSR set to: 1
  6841                           
  6842                           ; BSR set to: 1
  6843  010F8E  0101               	movlb	1	; () banked
  6844  010F90  513D               	movf	sprintf@c& (0+255),w,b
  6845  010F92  0D04               	mullw	4
  6846  010F94  0E2B               	movlw	low _dpowers
  6847  010F96  24F3               	addwf	prodl,w,c
  6848  010F98  6EF6               	movwf	tblptrl,c
  6849  010F9A  0EFF               	movlw	high _dpowers
  6850  010F9C  20F4               	addwfc	prodh,w,c
  6851  010F9E  6EF7               	movwf	tblptrh,c
  6852  010FA0                     	if	1	;There are 3 active tblptr bytes
  6853  010FA0  6AF8               	clrf	tblptru,c
  6854  010FA2  0E00               	movlw	low (__mediumconst shr (0+16))
  6855  010FA4  22F8               	addwfc	tblptru,f,c
  6856  010FA6                     	endif
  6857  010FA6  0009               	tblrd		*+
  6858  010FA8  50F5               	movf	tablat,w,c
  6859  010FAA  0101               	movlb	1	; () banked
  6860  010FAC  5D2D               	subwf	sprintf@val& (0+255),w,b
  6861  010FAE  0009               	tblrd		*+
  6862  010FB0  50F5               	movf	tablat,w,c
  6863  010FB2  0101               	movlb	1	; () banked
  6864  010FB4  592E               	subwfb	(sprintf@val+1)& (0+255),w,b
  6865  010FB6  0009               	tblrd		*+
  6866  010FB8  50F5               	movf	tablat,w,c
  6867  010FBA  0101               	movlb	1	; () banked
  6868  010FBC  592F               	subwfb	(sprintf@val+2)& (0+255),w,b
  6869  010FBE  0009               	tblrd		*+
  6870  010FC0  50F5               	movf	tablat,w,c
  6871  010FC2  0101               	movlb	1	; () banked
  6872  010FC4  5930               	subwfb	(sprintf@val+3)& (0+255),w,b
  6873  010FC6  A0D8               	btfss	status,0,c
  6874  010FC8  D003               	goto	l8334
  6875                           
  6876                           ; BSR set to: 1
  6877                           
  6878                           ; BSR set to: 1
  6879                           
  6880                           ; BSR set to: 1
  6881                           ;doprnt.c: 1138: break;
  6882  010FCA  0101               	movlb	1	; () banked
  6883  010FCC  2B3D               	incf	sprintf@c& (0+255),f,b
  6884  010FCE  D7DA               	goto	l8322
  6885  010FD0                     l8334:
  6886                           
  6887                           ; BSR set to: 1
  6888                           ;doprnt.c: 1175: {
  6889                           ;doprnt.c: 1188: if(flag & 0x03)
  6890  010FD0  0E03               	movlw	3
  6891  010FD2  0101               	movlb	1	; () banked
  6892  010FD4  152B               	andwf	sprintf@flag& (0+255),w,b
  6893  010FD6  0101               	movlb	1	; () banked
  6894  010FD8  6F23               	movwf	??_sprintf& (0+255),b
  6895  010FDA  0E00               	movlw	0
  6896  010FDC  0101               	movlb	1	; () banked
  6897  010FDE  152C               	andwf	(sprintf@flag+1)& (0+255),w,b
  6898  010FE0  0101               	movlb	1	; () banked
  6899  010FE2  6F24               	movwf	(??_sprintf+1)& (0+255),b
  6900  010FE4  0101               	movlb	1	; () banked
  6901  010FE6  5123               	movf	??_sprintf& (0+255),w,b
  6902  010FE8  0101               	movlb	1	; () banked
  6903  010FEA  1124               	iorwf	(??_sprintf+1)& (0+255),w,b
  6904  010FEC  B4D8               	btfsc	status,2,c
  6905  010FEE  D058               	goto	l8348
  6906                           
  6907                           ; BSR set to: 1
  6908                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  6909  010FF0  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  6910  010FF4  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  6911  010FF8  0E2D               	movlw	45
  6912  010FFA  D050               	goto	L4
  6913  010FFC                     l8338:
  6914                           
  6915                           ; BSR set to: 1
  6916  010FFC  0100               	movlb	0	; () banked
  6917  010FFE  4BC4               	infsnz	sprintf@sp& (0+255),f,b
  6918  011000  2BC5               	incf	(sprintf@sp+1)& (0+255),f,b
  6919                           
  6920                           ; BSR set to: 0
  6921                           ;doprnt.c: 1195: }
  6922                           ;doprnt.c: 1196: while(c--) {
  6923  011002  D04E               	goto	l8348
  6924  011004                     l8340:
  6925                           
  6926                           ;doprnt.c: 1200: {
  6927                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  6928  011004  C12D  F072         	movff	sprintf@val,___lldiv@dividend
  6929  011008  C12E  F073         	movff	sprintf@val+1,___lldiv@dividend+1
  6930  01100C  C12F  F074         	movff	sprintf@val+2,___lldiv@dividend+2
  6931  011010  C130  F075         	movff	sprintf@val+3,___lldiv@dividend+3
  6932  011014  0101               	movlb	1	; () banked
  6933  011016  513D               	movf	sprintf@c& (0+255),w,b
  6934  011018  0D04               	mullw	4
  6935  01101A  0E2B               	movlw	low _dpowers
  6936  01101C  24F3               	addwf	prodl,w,c
  6937  01101E  6EF6               	movwf	tblptrl,c
  6938  011020  0EFF               	movlw	high _dpowers
  6939  011022  20F4               	addwfc	prodh,w,c
  6940  011024  6EF7               	movwf	tblptrh,c
  6941  011026                     	if	1	;There are 3 active tblptr bytes
  6942  011026  6AF8               	clrf	tblptru,c
  6943  011028  0E00               	movlw	low (__mediumconst shr (0+16))
  6944  01102A  22F8               	addwfc	tblptru,f,c
  6945  01102C                     	endif
  6946  01102C  0009               	tblrd		*+
  6947  01102E  CFF5 F076          	movff	tablat,___lldiv@divisor
  6948  011032  0009               	tblrd		*+
  6949  011034  CFF5 F077          	movff	tablat,___lldiv@divisor+1
  6950  011038  0009               	tblrd		*+
  6951  01103A  CFF5 F078          	movff	tablat,___lldiv@divisor+2
  6952  01103E  000A               	tblrd		*-
  6953  011040  CFF5 F079          	movff	tablat,___lldiv@divisor+3
  6954  011044  ECC0  F0AA         	call	___lldiv	;wreg free
  6955  011048  C072  F133         	movff	?___lldiv,sprintf@tmpval
  6956  01104C  C073  F134         	movff	?___lldiv+1,sprintf@tmpval+1
  6957  011050  C074  F135         	movff	?___lldiv+2,sprintf@tmpval+2
  6958  011054  C075  F136         	movff	?___lldiv+3,sprintf@tmpval+3
  6959                           
  6960                           ;doprnt.c: 1202: tmpval.vd %= 10;
  6961  011058  C133  F072         	movff	sprintf@tmpval,___llmod@dividend
  6962  01105C  C134  F073         	movff	sprintf@tmpval+1,___llmod@dividend+1
  6963  011060  C135  F074         	movff	sprintf@tmpval+2,___llmod@dividend+2
  6964  011064  C136  F075         	movff	sprintf@tmpval+3,___llmod@dividend+3
  6965  011068  0E0A               	movlw	10
  6966  01106A  0100               	movlb	0	; () banked
  6967  01106C  6F76               	movwf	___llmod@divisor& (0+255),b
  6968  01106E  0E00               	movlw	0
  6969  011070  6F77               	movwf	(___llmod@divisor+1)& (0+255),b
  6970  011072  0E00               	movlw	0
  6971  011074  6F78               	movwf	(___llmod@divisor+2)& (0+255),b
  6972  011076  0E00               	movlw	0
  6973  011078  6F79               	movwf	(___llmod@divisor+3)& (0+255),b
  6974  01107A  EC73  F0AC         	call	___llmod	;wreg free
  6975  01107E  C072  F133         	movff	?___llmod,sprintf@tmpval
  6976  011082  C073  F134         	movff	?___llmod+1,sprintf@tmpval+1
  6977  011086  C074  F135         	movff	?___llmod+2,sprintf@tmpval+2
  6978  01108A  C075  F136         	movff	?___llmod+3,sprintf@tmpval+3
  6979                           
  6980                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  6981  01108E  0101               	movlb	1	; () banked
  6982  011090  5133               	movf	sprintf@tmpval& (0+255),w,b
  6983  011092  0F30               	addlw	48
  6984  011094  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  6985  011098  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  6986  01109C                     L4:
  6987  01109C  6EDF               	movwf	indf2,c
  6988  01109E  D7AE               	goto	l8338
  6989  0110A0                     l8348:
  6990  0110A0  0101               	movlb	1	; () banked
  6991  0110A2  073D               	decf	sprintf@c& (0+255),f,b
  6992  0110A4  0101               	movlb	1	; () banked
  6993  0110A6  293D               	incf	sprintf@c& (0+255),w,b
  6994  0110A8  B4D8               	btfsc	status,2,c
  6995  0110AA  D00E               	goto	l8356
  6996  0110AC  D7AB               	goto	l8340
  6997  0110AE                     l8350:
  6998                           
  6999                           ; BSR set to: 1
  7000                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  7001  0110AE  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  7002  0110B2  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  7003  0110B6  0E30               	movlw	48
  7004  0110B8  6EDF               	movwf	indf2,c
  7005                           
  7006                           ; BSR set to: 1
  7007  0110BA  0100               	movlb	0	; () banked
  7008  0110BC  4BC4               	infsnz	sprintf@sp& (0+255),f,b
  7009  0110BE  2BC5               	incf	(sprintf@sp+1)& (0+255),f,b
  7010                           
  7011                           ; BSR set to: 0
  7012                           ;doprnt.c: 1209: exp--;
  7013  0110C0  0101               	movlb	1	; () banked
  7014  0110C2  0731               	decf	sprintf@exp& (0+255),f,b
  7015  0110C4  A0D8               	btfss	status,0,c
  7016  0110C6  0732               	decf	(sprintf@exp+1)& (0+255),f,b
  7017  0110C8                     l8356:
  7018                           
  7019                           ; BSR set to: 1
  7020  0110C8  0101               	movlb	1	; () banked
  7021  0110CA  BF32               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7022  0110CC  D007               	goto	l8358
  7023  0110CE  0101               	movlb	1	; () banked
  7024  0110D0  5132               	movf	(sprintf@exp+1)& (0+255),w,b
  7025  0110D2  E1ED               	bnz	l8350
  7026  0110D4  0101               	movlb	1	; () banked
  7027  0110D6  0531               	decf	sprintf@exp& (0+255),w,b
  7028  0110D8  B0D8               	btfsc	status,0,c
  7029  0110DA  D7E9               	goto	l8350
  7030  0110DC                     l8358:
  7031                           
  7032                           ; BSR set to: 1
  7033                           ;doprnt.c: 1210: }
  7034                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  7035  0110DC  0101               	movlb	1	; () banked
  7036  0110DE  BF38               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7037  0110E0  D00C               	goto	l954
  7038  0110E2  0101               	movlb	1	; () banked
  7039  0110E4  5138               	movf	(sprintf@prec+1)& (0+255),w,b
  7040  0110E6  E105               	bnz	u11100
  7041  0110E8  0E09               	movlw	9
  7042  0110EA  0101               	movlb	1	; () banked
  7043  0110EC  5D37               	subwf	sprintf@prec& (0+255),w,b
  7044  0110EE  A0D8               	btfss	status,0,c
  7045  0110F0  D004               	goto	l954
  7046  0110F2                     u11100:
  7047                           
  7048                           ; BSR set to: 1
  7049                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  7050  0110F2  0E08               	movlw	8
  7051  0110F4  0101               	movlb	1	; () banked
  7052  0110F6  6F3D               	movwf	sprintf@c& (0+255),b
  7053  0110F8  D002               	goto	l8362
  7054  0110FA                     l954:
  7055                           
  7056                           ; BSR set to: 1
  7057                           ;doprnt.c: 1213: else
  7058                           ;doprnt.c: 1214: c = prec;
  7059  0110FA  C137  F13D         	movff	sprintf@prec,sprintf@c
  7060  0110FE                     l8362:
  7061                           
  7062                           ; BSR set to: 1
  7063                           ;doprnt.c: 1215: prec -= c;
  7064  0110FE  0101               	movlb	1	; () banked
  7065  011100  513D               	movf	sprintf@c& (0+255),w,b
  7066  011102  0101               	movlb	1	; () banked
  7067  011104  5F37               	subwf	sprintf@prec& (0+255),f,b
  7068  011106  0E00               	movlw	0
  7069  011108  0101               	movlb	1	; () banked
  7070  01110A  BF3D               	btfsc	sprintf@c& (0+255),7,b
  7071  01110C  0EFF               	movlw	255
  7072  01110E  0101               	movlb	1	; () banked
  7073  011110  5B38               	subwfb	(sprintf@prec+1)& (0+255),f,b
  7074                           
  7075                           ; BSR set to: 1
  7076                           ;doprnt.c: 1219: if(c)
  7077  011112  0101               	movlb	1	; () banked
  7078  011114  513D               	movf	sprintf@c& (0+255),w,b
  7079  011116  0101               	movlb	1	; () banked
  7080  011118  B4D8               	btfsc	status,2,c
  7081  01111A  D009               	goto	l8370
  7082                           
  7083                           ; BSR set to: 1
  7084                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  7085  01111C  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  7086  011120  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  7087  011124  0E2E               	movlw	46
  7088  011126  6EDF               	movwf	indf2,c
  7089                           
  7090                           ; BSR set to: 1
  7091  011128  0100               	movlb	0	; () banked
  7092  01112A  4BC4               	infsnz	sprintf@sp& (0+255),f,b
  7093  01112C  2BC5               	incf	(sprintf@sp+1)& (0+255),f,b
  7094  01112E                     l8370:
  7095                           
  7096                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7097  01112E  0101               	movlb	1	; () banked
  7098  011130  513D               	movf	sprintf@c& (0+255),w,b
  7099  011132  EC12  F094         	call	_scale
  7100  011136  C099  F125         	movff	?_scale,_sprintf$4211
  7101  01113A  C09A  F126         	movff	?_scale+1,_sprintf$4211+1
  7102  01113E  C09B  F127         	movff	?_scale+2,_sprintf$4211+2
  7103  011142  C09C  F128         	movff	?_scale+3,_sprintf$4211+3
  7104                           
  7105                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7106  011146  C139  F084         	movff	sprintf@fval,___flmul@a
  7107  01114A  C13A  F085         	movff	sprintf@fval+1,___flmul@a+1
  7108  01114E  C13B  F086         	movff	sprintf@fval+2,___flmul@a+2
  7109  011152  C13C  F087         	movff	sprintf@fval+3,___flmul@a+3
  7110  011156  C125  F080         	movff	_sprintf$4211,___flmul@b
  7111  01115A  C126  F081         	movff	_sprintf$4211+1,___flmul@b+1
  7112  01115E  C127  F082         	movff	_sprintf$4211+2,___flmul@b+2
  7113  011162  C128  F083         	movff	_sprintf$4211+3,___flmul@b+3
  7114  011166  EC79  F09B         	call	___flmul	;wreg free
  7115  01116A  C080  F0BA         	movff	?___flmul,___fltol@f1
  7116  01116E  C081  F0BB         	movff	?___flmul+1,___fltol@f1+1
  7117  011172  C082  F0BC         	movff	?___flmul+2,___fltol@f1+2
  7118  011176  C083  F0BD         	movff	?___flmul+3,___fltol@f1+3
  7119  01117A  EC65  F0A9         	call	___fltol	;wreg free
  7120  01117E  C0BA  F12D         	movff	?___fltol,sprintf@val
  7121  011182  C0BB  F12E         	movff	?___fltol+1,sprintf@val+1
  7122  011186  C0BC  F12F         	movff	?___fltol+2,sprintf@val+2
  7123  01118A  C0BD  F130         	movff	?___fltol+3,sprintf@val+3
  7124                           
  7125                           ;doprnt.c: 1228: while(c--) {
  7126  01118E  D07A               	goto	l8384
  7127  011190                     l8374:
  7128                           
  7129                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  7130  011190  C12D  F072         	movff	sprintf@val,___lldiv@dividend
  7131  011194  C12E  F073         	movff	sprintf@val+1,___lldiv@dividend+1
  7132  011198  C12F  F074         	movff	sprintf@val+2,___lldiv@dividend+2
  7133  01119C  C130  F075         	movff	sprintf@val+3,___lldiv@dividend+3
  7134  0111A0  0101               	movlb	1	; () banked
  7135  0111A2  513D               	movf	sprintf@c& (0+255),w,b
  7136  0111A4  0D04               	mullw	4
  7137  0111A6  0E2B               	movlw	low _dpowers
  7138  0111A8  24F3               	addwf	prodl,w,c
  7139  0111AA  6EF6               	movwf	tblptrl,c
  7140  0111AC  0EFF               	movlw	high _dpowers
  7141  0111AE  20F4               	addwfc	prodh,w,c
  7142  0111B0  6EF7               	movwf	tblptrh,c
  7143  0111B2                     	if	1	;There are 3 active tblptr bytes
  7144  0111B2  6AF8               	clrf	tblptru,c
  7145  0111B4  0E00               	movlw	low (__mediumconst shr (0+16))
  7146  0111B6  22F8               	addwfc	tblptru,f,c
  7147  0111B8                     	endif
  7148  0111B8  0009               	tblrd		*+
  7149  0111BA  CFF5 F076          	movff	tablat,___lldiv@divisor
  7150  0111BE  0009               	tblrd		*+
  7151  0111C0  CFF5 F077          	movff	tablat,___lldiv@divisor+1
  7152  0111C4  0009               	tblrd		*+
  7153  0111C6  CFF5 F078          	movff	tablat,___lldiv@divisor+2
  7154  0111CA  000A               	tblrd		*-
  7155  0111CC  CFF5 F079          	movff	tablat,___lldiv@divisor+3
  7156  0111D0  ECC0  F0AA         	call	___lldiv	;wreg free
  7157  0111D4  C072  F133         	movff	?___lldiv,sprintf@tmpval
  7158  0111D8  C073  F134         	movff	?___lldiv+1,sprintf@tmpval+1
  7159  0111DC  C074  F135         	movff	?___lldiv+2,sprintf@tmpval+2
  7160  0111E0  C075  F136         	movff	?___lldiv+3,sprintf@tmpval+3
  7161                           
  7162                           ;doprnt.c: 1230: tmpval.vd %= 10;
  7163  0111E4  C133  F072         	movff	sprintf@tmpval,___llmod@dividend
  7164  0111E8  C134  F073         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7165  0111EC  C135  F074         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7166  0111F0  C136  F075         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7167  0111F4  0E0A               	movlw	10
  7168  0111F6  0100               	movlb	0	; () banked
  7169  0111F8  6F76               	movwf	___llmod@divisor& (0+255),b
  7170  0111FA  0E00               	movlw	0
  7171  0111FC  6F77               	movwf	(___llmod@divisor+1)& (0+255),b
  7172  0111FE  0E00               	movlw	0
  7173  011200  6F78               	movwf	(___llmod@divisor+2)& (0+255),b
  7174  011202  0E00               	movlw	0
  7175  011204  6F79               	movwf	(___llmod@divisor+3)& (0+255),b
  7176  011206  EC73  F0AC         	call	___llmod	;wreg free
  7177  01120A  C072  F133         	movff	?___llmod,sprintf@tmpval
  7178  01120E  C073  F134         	movff	?___llmod+1,sprintf@tmpval+1
  7179  011212  C074  F135         	movff	?___llmod+2,sprintf@tmpval+2
  7180  011216  C075  F136         	movff	?___llmod+3,sprintf@tmpval+3
  7181                           
  7182                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  7183  01121A  0101               	movlb	1	; () banked
  7184  01121C  5133               	movf	sprintf@tmpval& (0+255),w,b
  7185  01121E  0F30               	addlw	48
  7186  011220  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  7187  011224  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  7188  011228  6EDF               	movwf	indf2,c
  7189                           
  7190                           ; BSR set to: 1
  7191  01122A  0100               	movlb	0	; () banked
  7192  01122C  4BC4               	infsnz	sprintf@sp& (0+255),f,b
  7193  01122E  2BC5               	incf	(sprintf@sp+1)& (0+255),f,b
  7194                           
  7195                           ; BSR set to: 0
  7196                           ;doprnt.c: 1232: val %= dpowers[c];
  7197  011230  C12D  F072         	movff	sprintf@val,___llmod@dividend
  7198  011234  C12E  F073         	movff	sprintf@val+1,___llmod@dividend+1
  7199  011238  C12F  F074         	movff	sprintf@val+2,___llmod@dividend+2
  7200  01123C  C130  F075         	movff	sprintf@val+3,___llmod@dividend+3
  7201  011240  0101               	movlb	1	; () banked
  7202  011242  513D               	movf	sprintf@c& (0+255),w,b
  7203  011244  0D04               	mullw	4
  7204  011246  0E2B               	movlw	low _dpowers
  7205  011248  24F3               	addwf	prodl,w,c
  7206  01124A  6EF6               	movwf	tblptrl,c
  7207  01124C  0EFF               	movlw	high _dpowers
  7208  01124E  20F4               	addwfc	prodh,w,c
  7209  011250  6EF7               	movwf	tblptrh,c
  7210  011252                     	if	1	;There are 3 active tblptr bytes
  7211  011252  6AF8               	clrf	tblptru,c
  7212  011254  0E00               	movlw	low (__mediumconst shr (0+16))
  7213  011256  22F8               	addwfc	tblptru,f,c
  7214  011258                     	endif
  7215  011258  0009               	tblrd		*+
  7216  01125A  CFF5 F076          	movff	tablat,___llmod@divisor
  7217  01125E  0009               	tblrd		*+
  7218  011260  CFF5 F077          	movff	tablat,___llmod@divisor+1
  7219  011264  0009               	tblrd		*+
  7220  011266  CFF5 F078          	movff	tablat,___llmod@divisor+2
  7221  01126A  000A               	tblrd		*-
  7222  01126C  CFF5 F079          	movff	tablat,___llmod@divisor+3
  7223  011270  EC73  F0AC         	call	___llmod	;wreg free
  7224  011274  C072  F12D         	movff	?___llmod,sprintf@val
  7225  011278  C073  F12E         	movff	?___llmod+1,sprintf@val+1
  7226  01127C  C074  F12F         	movff	?___llmod+2,sprintf@val+2
  7227  011280  C075  F130         	movff	?___llmod+3,sprintf@val+3
  7228  011284                     l8384:
  7229  011284  0101               	movlb	1	; () banked
  7230  011286  073D               	decf	sprintf@c& (0+255),f,b
  7231  011288  0101               	movlb	1	; () banked
  7232  01128A  293D               	incf	sprintf@c& (0+255),w,b
  7233  01128C  B4D8               	btfsc	status,2,c
  7234  01128E  D00E               	goto	l8392
  7235  011290  D77F               	goto	l8374
  7236  011292                     l8386:
  7237                           
  7238                           ; BSR set to: 1
  7239                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  7240  011292  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  7241  011296  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  7242  01129A  0E30               	movlw	48
  7243  01129C  6EDF               	movwf	indf2,c
  7244                           
  7245                           ; BSR set to: 1
  7246  01129E  0100               	movlb	0	; () banked
  7247  0112A0  4BC4               	infsnz	sprintf@sp& (0+255),f,b
  7248  0112A2  2BC5               	incf	(sprintf@sp+1)& (0+255),f,b
  7249                           
  7250                           ; BSR set to: 0
  7251                           ;doprnt.c: 1237: prec--;
  7252  0112A4  0101               	movlb	1	; () banked
  7253  0112A6  0737               	decf	sprintf@prec& (0+255),f,b
  7254  0112A8  A0D8               	btfss	status,0,c
  7255  0112AA  0738               	decf	(sprintf@prec+1)& (0+255),f,b
  7256  0112AC                     l8392:
  7257                           
  7258                           ; BSR set to: 1
  7259  0112AC  0101               	movlb	1	; () banked
  7260  0112AE  5137               	movf	sprintf@prec& (0+255),w,b
  7261  0112B0  0101               	movlb	1	; () banked
  7262  0112B2  1138               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7263  0112B4  B4D8               	btfsc	status,2,c
  7264  0112B6  D059               	goto	l8414
  7265  0112B8  D7EC               	goto	l8386
  7266  0112BA                     l8394:
  7267                           
  7268                           ; BSR set to: 1
  7269                           ;doprnt.c: 1246: }
  7270                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  7271  0112BA  0101               	movlb	1	; () banked
  7272  0112BC  5137               	movf	sprintf@prec& (0+255),w,b
  7273  0112BE  0101               	movlb	1	; () banked
  7274  0112C0  1138               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7275  0112C2  A4D8               	btfss	status,2,c
  7276  0112C4  D00D               	goto	l8400
  7277                           
  7278                           ; BSR set to: 1
  7279  0112C6  0101               	movlb	1	; () banked
  7280  0112C8  512D               	movf	sprintf@val& (0+255),w,b
  7281  0112CA  0101               	movlb	1	; () banked
  7282  0112CC  112E               	iorwf	(sprintf@val+1)& (0+255),w,b
  7283  0112CE  0101               	movlb	1	; () banked
  7284  0112D0  112F               	iorwf	(sprintf@val+2)& (0+255),w,b
  7285  0112D2  0101               	movlb	1	; () banked
  7286  0112D4  1130               	iorwf	(sprintf@val+3)& (0+255),w,b
  7287  0112D6  A4D8               	btfss	status,2,c
  7288  0112D8  D003               	goto	l8400
  7289                           
  7290                           ; BSR set to: 1
  7291                           ;doprnt.c: 1291: prec++;
  7292  0112DA  0101               	movlb	1	; () banked
  7293  0112DC  4B37               	infsnz	sprintf@prec& (0+255),f,b
  7294  0112DE  2B38               	incf	(sprintf@prec+1)& (0+255),f,b
  7295  0112E0                     l8400:
  7296                           
  7297                           ; BSR set to: 1
  7298                           ;doprnt.c: 1339: if(c < prec)
  7299  0112E0  0E80               	movlw	128
  7300  0112E2  0101               	movlb	1	; () banked
  7301  0112E4  BF3D               	btfsc	sprintf@c& (0+255),7,b
  7302  0112E6  0E7F               	movlw	127
  7303  0112E8  0101               	movlb	1	; () banked
  7304  0112EA  6F23               	movwf	??_sprintf& (0+255),b
  7305  0112EC  0101               	movlb	1	; () banked
  7306  0112EE  5137               	movf	sprintf@prec& (0+255),w,b
  7307  0112F0  0101               	movlb	1	; () banked
  7308  0112F2  5D3D               	subwf	sprintf@c& (0+255),w,b
  7309  0112F4  0101               	movlb	1	; () banked
  7310  0112F6  5138               	movf	(sprintf@prec+1)& (0+255),w,b
  7311  0112F8  0A80               	xorlw	128
  7312  0112FA  0101               	movlb	1	; () banked
  7313  0112FC  5923               	subwfb	??_sprintf& (0+255),w,b
  7314  0112FE  B0D8               	btfsc	status,0,c
  7315  011300  D003               	goto	l8404
  7316                           
  7317                           ; BSR set to: 1
  7318                           ;doprnt.c: 1340: c = prec;
  7319  011302  C137  F13D         	movff	sprintf@prec,sprintf@c
  7320  011306  D018               	goto	l8408
  7321  011308                     l8404:
  7322                           
  7323                           ; BSR set to: 1
  7324                           ;doprnt.c: 1341: else if(prec < c)
  7325  011308  0101               	movlb	1	; () banked
  7326  01130A  5138               	movf	(sprintf@prec+1)& (0+255),w,b
  7327  01130C  0A80               	xorlw	128
  7328  01130E  0101               	movlb	1	; () banked
  7329  011310  6F23               	movwf	??_sprintf& (0+255),b
  7330  011312  0101               	movlb	1	; () banked
  7331  011314  513D               	movf	sprintf@c& (0+255),w,b
  7332  011316  0101               	movlb	1	; () banked
  7333  011318  5D37               	subwf	sprintf@prec& (0+255),w,b
  7334  01131A  0E80               	movlw	128
  7335  01131C  0101               	movlb	1	; () banked
  7336  01131E  BF3D               	btfsc	sprintf@c& (0+255),7,b
  7337  011320  0E7F               	movlw	127
  7338  011322  0101               	movlb	1	; () banked
  7339  011324  5923               	subwfb	??_sprintf& (0+255),w,b
  7340  011326  B0D8               	btfsc	status,0,c
  7341  011328  D007               	goto	l8408
  7342                           
  7343                           ; BSR set to: 1
  7344                           ;doprnt.c: 1342: prec = c;
  7345  01132A  0101               	movlb	1	; () banked
  7346  01132C  513D               	movf	sprintf@c& (0+255),w,b
  7347  01132E  0101               	movlb	1	; () banked
  7348  011330  6F37               	movwf	sprintf@prec& (0+255),b
  7349  011332  6B38               	clrf	(sprintf@prec+1)& (0+255),b
  7350  011334  BF37               	btfsc	sprintf@prec& (0+255),7,b
  7351  011336  0738               	decf	(sprintf@prec+1)& (0+255),f,b
  7352  011338                     l8408:
  7353                           
  7354                           ; BSR set to: 1
  7355                           ;doprnt.c: 1422: {
  7356                           ;doprnt.c: 1438: if(flag & 0x03)
  7357  011338  0E03               	movlw	3
  7358  01133A  0101               	movlb	1	; () banked
  7359  01133C  152B               	andwf	sprintf@flag& (0+255),w,b
  7360  01133E  0101               	movlb	1	; () banked
  7361  011340  6F23               	movwf	??_sprintf& (0+255),b
  7362  011342  0E00               	movlw	0
  7363  011344  0101               	movlb	1	; () banked
  7364  011346  152C               	andwf	(sprintf@flag+1)& (0+255),w,b
  7365  011348  0101               	movlb	1	; () banked
  7366  01134A  6F24               	movwf	(??_sprintf+1)& (0+255),b
  7367  01134C  0101               	movlb	1	; () banked
  7368  01134E  5123               	movf	??_sprintf& (0+255),w,b
  7369  011350  0101               	movlb	1	; () banked
  7370  011352  1124               	iorwf	(??_sprintf+1)& (0+255),w,b
  7371  011354  B4D8               	btfsc	status,2,c
  7372  011356  D009               	goto	l8414
  7373                           
  7374                           ; BSR set to: 1
  7375                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  7376  011358  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  7377  01135C  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  7378  011360  0E2D               	movlw	45
  7379  011362  6EDF               	movwf	indf2,c
  7380  011364                     l8412:
  7381                           
  7382                           ; BSR set to: 1
  7383  011364  0100               	movlb	0	; () banked
  7384  011366  4BC4               	infsnz	sprintf@sp& (0+255),f,b
  7385  011368  2BC5               	incf	(sprintf@sp+1)& (0+255),f,b
  7386  01136A                     l8414:
  7387  01136A  C0C6  FFF6         	movff	sprintf@f,tblptrl
  7388  01136E  C0C7  FFF7         	movff	sprintf@f+1,tblptrh
  7389  011372  0100               	movlb	0	; () banked
  7390  011374  4BC6               	infsnz	sprintf@f& (0+255),f,b
  7391  011376  2BC7               	incf	(sprintf@f+1)& (0+255),f,b
  7392  011378                     	if	0	;tblptru may be non-zero
  7393  011378                     	endif
  7394  011378                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7395  011378  0E00               	movlw	low (__mediumconst shr (0+16))
  7396  01137A  6EF8               	movwf	tblptru,c
  7397  01137C                     	endif
  7398  01137C  0008               	tblrd		*
  7399  01137E  CFF5 F13D          	movff	tablat,sprintf@c
  7400  011382  0101               	movlb	1	; () banked
  7401  011384  513D               	movf	sprintf@c& (0+255),w,b
  7402  011386  A4D8               	btfss	status,2,c
  7403  011388  EF8B  F085         	goto	l8216
  7404  01138C                     l8416:
  7405                           
  7406                           ; BSR set to: 1
  7407                           ;doprnt.c: 1538: *sp = 0;
  7408  01138C  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  7409  011390  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  7410  011394  0E00               	movlw	0
  7411  011396  6EDF               	movwf	indf2,c
  7412  011398  0012               	return	
  7413  01139A                     __end_of_sprintf:
  7414                           	opt stack 0
  7415                           tblptru	equ	0xFF8
  7416                           tblptrh	equ	0xFF7
  7417                           tblptrl	equ	0xFF6
  7418                           tablat	equ	0xFF5
  7419                           prodh	equ	0xFF4
  7420                           prodl	equ	0xFF3
  7421                           intcon	equ	0xFF2
  7422                           postinc0	equ	0xFEE
  7423                           wreg	equ	0xFE8
  7424                           indf2	equ	0xFDF
  7425                           postinc2	equ	0xFDE
  7426                           fsr2h	equ	0xFDA
  7427                           fsr2l	equ	0xFD9
  7428                           status	equ	0xFD8
  7429                           
  7430 ;; *************** function _scale *****************
  7431 ;; Defined at:
  7432 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  7433 ;; Parameters:    Size  Location     Type
  7434 ;;  scl             1    wreg     char 
  7435 ;; Auto vars:     Size  Location     Type
  7436 ;;  scl             1   65[BANK0 ] char 
  7437 ;; Return value:  Size  Location     Type
  7438 ;;                  4   57[BANK0 ] char 
  7439 ;; Registers used:
  7440 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7441 ;; Tracked objects:
  7442 ;;		On entry : 0/0
  7443 ;;		On exit  : 0/0
  7444 ;;		Unchanged: 0/0
  7445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7446 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7447 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7449 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7450 ;;Total ram usage:        9 bytes
  7451 ;; Hardware stack levels used:    1
  7452 ;; Hardware stack levels required when called:    4
  7453 ;; This function calls:
  7454 ;;		___awdiv
  7455 ;;		___awmod
  7456 ;;		___flmul
  7457 ;; This function is called by:
  7458 ;;		_sprintf
  7459 ;; This function uses a non-reentrant model
  7460 ;;
  7461                           
  7462                           	psect	text9
  7463  012824                     __ptext9:
  7464                           	opt stack 0
  7465  012824                     _scale:
  7466                           	opt stack 24
  7467                           
  7468                           ; BSR set to: 1
  7469                           ;incstack = 0
  7470                           ;scale@scl stored from wreg
  7471  012824  0100               	movlb	0	; () banked
  7472  012826  6FA1               	movwf	scale@scl& (0+255),b
  7473                           
  7474                           ;doprnt.c: 428: if(scl < 0) {
  7475  012828  0100               	movlb	0	; () banked
  7476  01282A  AFA1               	btfss	scale@scl& (0+255),7,b
  7477  01282C  D145               	goto	l7848
  7478                           
  7479                           ; BSR set to: 0
  7480                           ;doprnt.c: 429: scl = -scl;
  7481  01282E  0100               	movlb	0	; () banked
  7482  012830  6DA1               	negf	scale@scl& (0+255),b
  7483                           
  7484                           ;doprnt.c: 430: if(scl>=110)
  7485  012832  0100               	movlb	0	; () banked
  7486  012834  51A1               	movf	scale@scl& (0+255),w,b
  7487  012836  0A80               	xorlw	128
  7488  012838  0F12               	addlw	-238
  7489  01283A  A0D8               	btfss	status,0,c
  7490  01283C  D0BB               	goto	l7838
  7491                           
  7492                           ; BSR set to: 0
  7493                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7494  01283E  0E00               	movlw	0
  7495  012840  0100               	movlb	0	; () banked
  7496  012842  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  7497  012844  0E0A               	movlw	10
  7498  012846  6F7A               	movwf	___awdiv@divisor& (0+255),b
  7499  012848  0E00               	movlw	0
  7500  01284A  0100               	movlb	0	; () banked
  7501  01284C  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  7502  01284E  0E64               	movlw	100
  7503  012850  6F74               	movwf	___awmod@divisor& (0+255),b
  7504  012852  0100               	movlb	0	; () banked
  7505  012854  51A1               	movf	scale@scl& (0+255),w,b
  7506  012856  0100               	movlb	0	; () banked
  7507  012858  6F72               	movwf	___awmod@dividend& (0+255),b
  7508  01285A  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  7509  01285C  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  7510  01285E  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  7511  012860  EC22  F0AC         	call	___awmod	;wreg free
  7512  012864  C072  F078         	movff	?___awmod,___awdiv@dividend
  7513  012868  C073  F079         	movff	?___awmod+1,___awdiv@dividend+1
  7514  01286C  EC61  F0AA         	call	___awdiv	;wreg free
  7515  012870  0100               	movlb	0	; () banked
  7516  012872  90D8               	bcf	status,0,c
  7517  012874  3778               	rlcf	?___awdiv& (0+255),f,b
  7518  012876  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7519  012878  0100               	movlb	0	; () banked
  7520  01287A  90D8               	bcf	status,0,c
  7521  01287C  3778               	rlcf	?___awdiv& (0+255),f,b
  7522  01287E  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7523  012880  0E24               	movlw	36
  7524  012882  0100               	movlb	0	; () banked
  7525  012884  2778               	addwf	?___awdiv& (0+255),f,b
  7526  012886  0E00               	movlw	0
  7527  012888  0100               	movlb	0	; () banked
  7528  01288A  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  7529  01288C  0EC3               	movlw	low __npowers_
  7530  01288E  0100               	movlb	0	; () banked
  7531  012890  2578               	addwf	?___awdiv& (0+255),w,b
  7532  012892  6EF6               	movwf	tblptrl,c
  7533  012894  0EFE               	movlw	high __npowers_
  7534  012896  0100               	movlb	0	; () banked
  7535  012898  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  7536  01289A  6EF7               	movwf	tblptrh,c
  7537  01289C                     	if	1	;There are 3 active tblptr bytes
  7538  01289C  6AF8               	clrf	tblptru,c
  7539  01289E  0E00               	movlw	low (__mediumconst shr (0+16))
  7540  0128A0  22F8               	addwfc	tblptru,f,c
  7541  0128A2                     	endif
  7542  0128A2  0009               	tblrd		*+
  7543  0128A4  CFF5 F084          	movff	tablat,___flmul@a
  7544  0128A8  0009               	tblrd		*+
  7545  0128AA  CFF5 F085          	movff	tablat,___flmul@a+1
  7546  0128AE  0009               	tblrd		*+
  7547  0128B0  CFF5 F086          	movff	tablat,___flmul@a+2
  7548  0128B4  000A               	tblrd		*-
  7549  0128B6  CFF5 F087          	movff	tablat,___flmul@a+3
  7550  0128BA  0E00               	movlw	0
  7551  0128BC  0100               	movlb	0	; () banked
  7552  0128BE  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  7553  0128C0  0E64               	movlw	100
  7554  0128C2  6F7A               	movwf	___awdiv@divisor& (0+255),b
  7555  0128C4  0100               	movlb	0	; () banked
  7556  0128C6  51A1               	movf	scale@scl& (0+255),w,b
  7557  0128C8  0100               	movlb	0	; () banked
  7558  0128CA  6F78               	movwf	___awdiv@dividend& (0+255),b
  7559  0128CC  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  7560  0128CE  BF78               	btfsc	___awdiv@dividend& (0+255),7,b
  7561  0128D0  0779               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7562  0128D2  EC61  F0AA         	call	___awdiv	;wreg free
  7563  0128D6  0100               	movlb	0	; () banked
  7564  0128D8  90D8               	bcf	status,0,c
  7565  0128DA  3778               	rlcf	?___awdiv& (0+255),f,b
  7566  0128DC  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7567  0128DE  0100               	movlb	0	; () banked
  7568  0128E0  90D8               	bcf	status,0,c
  7569  0128E2  3778               	rlcf	?___awdiv& (0+255),f,b
  7570  0128E4  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7571  0128E6  0E48               	movlw	72
  7572  0128E8  0100               	movlb	0	; () banked
  7573  0128EA  2778               	addwf	?___awdiv& (0+255),f,b
  7574  0128EC  0E00               	movlw	0
  7575  0128EE  0100               	movlb	0	; () banked
  7576  0128F0  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  7577  0128F2  0EC3               	movlw	low __npowers_
  7578  0128F4  0100               	movlb	0	; () banked
  7579  0128F6  2578               	addwf	?___awdiv& (0+255),w,b
  7580  0128F8  6EF6               	movwf	tblptrl,c
  7581  0128FA  0EFE               	movlw	high __npowers_
  7582  0128FC  0100               	movlb	0	; () banked
  7583  0128FE  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  7584  012900  6EF7               	movwf	tblptrh,c
  7585  012902                     	if	1	;There are 3 active tblptr bytes
  7586  012902  6AF8               	clrf	tblptru,c
  7587  012904  0E00               	movlw	low (__mediumconst shr (0+16))
  7588  012906  22F8               	addwfc	tblptru,f,c
  7589  012908                     	endif
  7590  012908  0009               	tblrd		*+
  7591  01290A  CFF5 F080          	movff	tablat,___flmul@b
  7592  01290E  0009               	tblrd		*+
  7593  012910  CFF5 F081          	movff	tablat,___flmul@b+1
  7594  012914  0009               	tblrd		*+
  7595  012916  CFF5 F082          	movff	tablat,___flmul@b+2
  7596  01291A  000A               	tblrd		*-
  7597  01291C  CFF5 F083          	movff	tablat,___flmul@b+3
  7598  012920  EC79  F09B         	call	___flmul	;wreg free
  7599  012924  C080  F09D         	movff	?___flmul,_scale$4210
  7600  012928  C081  F09E         	movff	?___flmul+1,_scale$4210+1
  7601  01292C  C082  F09F         	movff	?___flmul+2,_scale$4210+2
  7602  012930  C083  F0A0         	movff	?___flmul+3,_scale$4210+3
  7603                           
  7604                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7605  012934  C09D  F080         	movff	_scale$4210,___flmul@b
  7606  012938  C09E  F081         	movff	_scale$4210+1,___flmul@b+1
  7607  01293C  C09F  F082         	movff	_scale$4210+2,___flmul@b+2
  7608  012940  C0A0  F083         	movff	_scale$4210+3,___flmul@b+3
  7609  012944  0E00               	movlw	0
  7610  012946  0100               	movlb	0	; () banked
  7611  012948  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  7612  01294A  0E0A               	movlw	10
  7613  01294C  6F74               	movwf	___awmod@divisor& (0+255),b
  7614  01294E  0100               	movlb	0	; () banked
  7615  012950  51A1               	movf	scale@scl& (0+255),w,b
  7616  012952  0100               	movlb	0	; () banked
  7617  012954  6F72               	movwf	___awmod@dividend& (0+255),b
  7618  012956  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  7619  012958  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  7620  01295A  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  7621  01295C  EC22  F0AC         	call	___awmod	;wreg free
  7622  012960  0100               	movlb	0	; () banked
  7623  012962  90D8               	bcf	status,0,c
  7624  012964  3772               	rlcf	?___awmod& (0+255),f,b
  7625  012966  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  7626  012968  0100               	movlb	0	; () banked
  7627  01296A  90D8               	bcf	status,0,c
  7628  01296C  3772               	rlcf	?___awmod& (0+255),f,b
  7629  01296E  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  7630  012970  0EC3               	movlw	low __npowers_
  7631  012972  0100               	movlb	0	; () banked
  7632  012974  2572               	addwf	?___awmod& (0+255),w,b
  7633  012976  6EF6               	movwf	tblptrl,c
  7634  012978  0EFE               	movlw	high __npowers_
  7635  01297A  0100               	movlb	0	; () banked
  7636  01297C  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  7637  01297E  6EF7               	movwf	tblptrh,c
  7638  012980                     	if	1	;There are 3 active tblptr bytes
  7639  012980  6AF8               	clrf	tblptru,c
  7640  012982  0E00               	movlw	low (__mediumconst shr (0+16))
  7641  012984  22F8               	addwfc	tblptru,f,c
  7642  012986                     	endif
  7643  012986  0009               	tblrd		*+
  7644  012988  CFF5 F084          	movff	tablat,___flmul@a
  7645  01298C  0009               	tblrd		*+
  7646  01298E  CFF5 F085          	movff	tablat,___flmul@a+1
  7647  012992  0009               	tblrd		*+
  7648  012994  CFF5 F086          	movff	tablat,___flmul@a+2
  7649  012998  000A               	tblrd		*-
  7650  01299A  CFF5 F087          	movff	tablat,___flmul@a+3
  7651  01299E  EC79  F09B         	call	___flmul	;wreg free
  7652  0129A2  C080  F099         	movff	?___flmul,?_scale
  7653  0129A6  C081  F09A         	movff	?___flmul+1,?_scale+1
  7654  0129AA  C082  F09B         	movff	?___flmul+2,?_scale+2
  7655  0129AE  C083  F09C         	movff	?___flmul+3,?_scale+3
  7656  0129B2  0012               	return	
  7657  0129B4                     l7838:
  7658                           
  7659                           ;doprnt.c: 432: else if(scl > 10)
  7660  0129B4  0100               	movlb	0	; () banked
  7661  0129B6  51A1               	movf	scale@scl& (0+255),w,b
  7662  0129B8  0A80               	xorlw	128
  7663  0129BA  0F75               	addlw	-139
  7664  0129BC  A0D8               	btfss	status,0,c
  7665  0129BE  D063               	goto	l7844
  7666                           
  7667                           ; BSR set to: 0
  7668                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  7669  0129C0  0E00               	movlw	0
  7670  0129C2  0100               	movlb	0	; () banked
  7671  0129C4  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  7672  0129C6  0E0A               	movlw	10
  7673  0129C8  6F7A               	movwf	___awdiv@divisor& (0+255),b
  7674  0129CA  0100               	movlb	0	; () banked
  7675  0129CC  51A1               	movf	scale@scl& (0+255),w,b
  7676  0129CE  0100               	movlb	0	; () banked
  7677  0129D0  6F78               	movwf	___awdiv@dividend& (0+255),b
  7678  0129D2  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  7679  0129D4  BF78               	btfsc	___awdiv@dividend& (0+255),7,b
  7680  0129D6  0779               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7681  0129D8  EC61  F0AA         	call	___awdiv	;wreg free
  7682  0129DC  0100               	movlb	0	; () banked
  7683  0129DE  90D8               	bcf	status,0,c
  7684  0129E0  3778               	rlcf	?___awdiv& (0+255),f,b
  7685  0129E2  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7686  0129E4  0100               	movlb	0	; () banked
  7687  0129E6  90D8               	bcf	status,0,c
  7688  0129E8  3778               	rlcf	?___awdiv& (0+255),f,b
  7689  0129EA  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7690  0129EC  0E24               	movlw	36
  7691  0129EE  0100               	movlb	0	; () banked
  7692  0129F0  2778               	addwf	?___awdiv& (0+255),f,b
  7693  0129F2  0E00               	movlw	0
  7694  0129F4  0100               	movlb	0	; () banked
  7695  0129F6  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  7696  0129F8  0EC3               	movlw	low __npowers_
  7697  0129FA  0100               	movlb	0	; () banked
  7698  0129FC  2578               	addwf	?___awdiv& (0+255),w,b
  7699  0129FE  6EF6               	movwf	tblptrl,c
  7700  012A00  0EFE               	movlw	high __npowers_
  7701  012A02  0100               	movlb	0	; () banked
  7702  012A04  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  7703  012A06  6EF7               	movwf	tblptrh,c
  7704  012A08                     	if	1	;There are 3 active tblptr bytes
  7705  012A08  6AF8               	clrf	tblptru,c
  7706  012A0A  0E00               	movlw	low (__mediumconst shr (0+16))
  7707  012A0C  22F8               	addwfc	tblptru,f,c
  7708  012A0E                     	endif
  7709  012A0E  0009               	tblrd		*+
  7710  012A10  CFF5 F080          	movff	tablat,___flmul@b
  7711  012A14  0009               	tblrd		*+
  7712  012A16  CFF5 F081          	movff	tablat,___flmul@b+1
  7713  012A1A  0009               	tblrd		*+
  7714  012A1C  CFF5 F082          	movff	tablat,___flmul@b+2
  7715  012A20  000A               	tblrd		*-
  7716  012A22  CFF5 F083          	movff	tablat,___flmul@b+3
  7717  012A26  0E00               	movlw	0
  7718  012A28  0100               	movlb	0	; () banked
  7719  012A2A  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  7720  012A2C  0E0A               	movlw	10
  7721  012A2E  6F74               	movwf	___awmod@divisor& (0+255),b
  7722  012A30  0100               	movlb	0	; () banked
  7723  012A32  51A1               	movf	scale@scl& (0+255),w,b
  7724  012A34  0100               	movlb	0	; () banked
  7725  012A36  6F72               	movwf	___awmod@dividend& (0+255),b
  7726  012A38  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  7727  012A3A  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  7728  012A3C  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  7729  012A3E  EC22  F0AC         	call	___awmod	;wreg free
  7730  012A42  0100               	movlb	0	; () banked
  7731  012A44  90D8               	bcf	status,0,c
  7732  012A46  3772               	rlcf	?___awmod& (0+255),f,b
  7733  012A48  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  7734  012A4A  0100               	movlb	0	; () banked
  7735  012A4C  90D8               	bcf	status,0,c
  7736  012A4E  3772               	rlcf	?___awmod& (0+255),f,b
  7737  012A50  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  7738  012A52  0EC3               	movlw	low __npowers_
  7739  012A54  0100               	movlb	0	; () banked
  7740  012A56  2572               	addwf	?___awmod& (0+255),w,b
  7741  012A58  6EF6               	movwf	tblptrl,c
  7742  012A5A  0EFE               	movlw	high __npowers_
  7743  012A5C  0100               	movlb	0	; () banked
  7744  012A5E  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  7745  012A60  6EF7               	movwf	tblptrh,c
  7746  012A62                     	if	1	;There are 3 active tblptr bytes
  7747  012A62  6AF8               	clrf	tblptru,c
  7748  012A64  0E00               	movlw	low (__mediumconst shr (0+16))
  7749  012A66  22F8               	addwfc	tblptru,f,c
  7750  012A68                     	endif
  7751  012A68  0009               	tblrd		*+
  7752  012A6A  CFF5 F084          	movff	tablat,___flmul@a
  7753  012A6E  0009               	tblrd		*+
  7754  012A70  CFF5 F085          	movff	tablat,___flmul@a+1
  7755  012A74  0009               	tblrd		*+
  7756  012A76  CFF5 F086          	movff	tablat,___flmul@a+2
  7757  012A7A  000A               	tblrd		*-
  7758  012A7C  CFF5 F087          	movff	tablat,___flmul@a+3
  7759  012A80  EC79  F09B         	call	___flmul	;wreg free
  7760  012A84  D78E               	goto	L5
  7761  012A86                     l7844:
  7762                           
  7763                           ;doprnt.c: 434: return _npowers_[scl];
  7764  012A86  0100               	movlb	0	; () banked
  7765  012A88  51A1               	movf	scale@scl& (0+255),w,b
  7766  012A8A  0D04               	mullw	4
  7767  012A8C  0EC3               	movlw	low __npowers_
  7768  012A8E  24F3               	addwf	prodl,w,c
  7769  012A90  6EF6               	movwf	tblptrl,c
  7770  012A92  0EFE               	movlw	high __npowers_
  7771  012A94  20F4               	addwfc	prodh,w,c
  7772  012A96  6EF7               	movwf	tblptrh,c
  7773  012A98                     	if	1	;There are 3 active tblptr bytes
  7774  012A98  6AF8               	clrf	tblptru,c
  7775  012A9A  0E00               	movlw	low (__mediumconst shr (0+16))
  7776  012A9C  22F8               	addwfc	tblptru,f,c
  7777  012A9E                     	endif
  7778  012A9E  0009               	tblrd		*+
  7779  012AA0  CFF5 F099          	movff	tablat,?_scale
  7780  012AA4  0009               	tblrd		*+
  7781  012AA6  CFF5 F09A          	movff	tablat,?_scale+1
  7782  012AAA  0009               	tblrd		*+
  7783  012AAC  CFF5 F09B          	movff	tablat,?_scale+2
  7784  012AB0  000A               	tblrd		*-
  7785  012AB2  CFF5 F09C          	movff	tablat,?_scale+3
  7786                           
  7787                           ; BSR set to: 0
  7788  012AB6  0012               	return	
  7789  012AB8                     l7848:
  7790                           
  7791                           ; BSR set to: 0
  7792                           ;doprnt.c: 435: }
  7793                           ;doprnt.c: 436: if(scl>=110)
  7794  012AB8  0100               	movlb	0	; () banked
  7795  012ABA  51A1               	movf	scale@scl& (0+255),w,b
  7796  012ABC  0A80               	xorlw	128
  7797  012ABE  0F12               	addlw	-238
  7798  012AC0  A0D8               	btfss	status,0,c
  7799  012AC2  D0BB               	goto	l7856
  7800                           
  7801                           ; BSR set to: 0
  7802                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7803  012AC4  0E00               	movlw	0
  7804  012AC6  0100               	movlb	0	; () banked
  7805  012AC8  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  7806  012ACA  0E0A               	movlw	10
  7807  012ACC  6F7A               	movwf	___awdiv@divisor& (0+255),b
  7808  012ACE  0E00               	movlw	0
  7809  012AD0  0100               	movlb	0	; () banked
  7810  012AD2  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  7811  012AD4  0E64               	movlw	100
  7812  012AD6  6F74               	movwf	___awmod@divisor& (0+255),b
  7813  012AD8  0100               	movlb	0	; () banked
  7814  012ADA  51A1               	movf	scale@scl& (0+255),w,b
  7815  012ADC  0100               	movlb	0	; () banked
  7816  012ADE  6F72               	movwf	___awmod@dividend& (0+255),b
  7817  012AE0  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  7818  012AE2  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  7819  012AE4  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  7820  012AE6  EC22  F0AC         	call	___awmod	;wreg free
  7821  012AEA  C072  F078         	movff	?___awmod,___awdiv@dividend
  7822  012AEE  C073  F079         	movff	?___awmod+1,___awdiv@dividend+1
  7823  012AF2  EC61  F0AA         	call	___awdiv	;wreg free
  7824  012AF6  0100               	movlb	0	; () banked
  7825  012AF8  90D8               	bcf	status,0,c
  7826  012AFA  3778               	rlcf	?___awdiv& (0+255),f,b
  7827  012AFC  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7828  012AFE  0100               	movlb	0	; () banked
  7829  012B00  90D8               	bcf	status,0,c
  7830  012B02  3778               	rlcf	?___awdiv& (0+255),f,b
  7831  012B04  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7832  012B06  0E24               	movlw	36
  7833  012B08  0100               	movlb	0	; () banked
  7834  012B0A  2778               	addwf	?___awdiv& (0+255),f,b
  7835  012B0C  0E00               	movlw	0
  7836  012B0E  0100               	movlb	0	; () banked
  7837  012B10  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  7838  012B12  0EF7               	movlw	low __powers_
  7839  012B14  0100               	movlb	0	; () banked
  7840  012B16  2578               	addwf	?___awdiv& (0+255),w,b
  7841  012B18  6EF6               	movwf	tblptrl,c
  7842  012B1A  0EFE               	movlw	high __powers_
  7843  012B1C  0100               	movlb	0	; () banked
  7844  012B1E  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  7845  012B20  6EF7               	movwf	tblptrh,c
  7846  012B22                     	if	1	;There are 3 active tblptr bytes
  7847  012B22  6AF8               	clrf	tblptru,c
  7848  012B24  0E00               	movlw	low (__mediumconst shr (0+16))
  7849  012B26  22F8               	addwfc	tblptru,f,c
  7850  012B28                     	endif
  7851  012B28  0009               	tblrd		*+
  7852  012B2A  CFF5 F084          	movff	tablat,___flmul@a
  7853  012B2E  0009               	tblrd		*+
  7854  012B30  CFF5 F085          	movff	tablat,___flmul@a+1
  7855  012B34  0009               	tblrd		*+
  7856  012B36  CFF5 F086          	movff	tablat,___flmul@a+2
  7857  012B3A  000A               	tblrd		*-
  7858  012B3C  CFF5 F087          	movff	tablat,___flmul@a+3
  7859  012B40  0E00               	movlw	0
  7860  012B42  0100               	movlb	0	; () banked
  7861  012B44  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  7862  012B46  0E64               	movlw	100
  7863  012B48  6F7A               	movwf	___awdiv@divisor& (0+255),b
  7864  012B4A  0100               	movlb	0	; () banked
  7865  012B4C  51A1               	movf	scale@scl& (0+255),w,b
  7866  012B4E  0100               	movlb	0	; () banked
  7867  012B50  6F78               	movwf	___awdiv@dividend& (0+255),b
  7868  012B52  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  7869  012B54  BF78               	btfsc	___awdiv@dividend& (0+255),7,b
  7870  012B56  0779               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7871  012B58  EC61  F0AA         	call	___awdiv	;wreg free
  7872  012B5C  0100               	movlb	0	; () banked
  7873  012B5E  90D8               	bcf	status,0,c
  7874  012B60  3778               	rlcf	?___awdiv& (0+255),f,b
  7875  012B62  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7876  012B64  0100               	movlb	0	; () banked
  7877  012B66  90D8               	bcf	status,0,c
  7878  012B68  3778               	rlcf	?___awdiv& (0+255),f,b
  7879  012B6A  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7880  012B6C  0E48               	movlw	72
  7881  012B6E  0100               	movlb	0	; () banked
  7882  012B70  2778               	addwf	?___awdiv& (0+255),f,b
  7883  012B72  0E00               	movlw	0
  7884  012B74  0100               	movlb	0	; () banked
  7885  012B76  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  7886  012B78  0EF7               	movlw	low __powers_
  7887  012B7A  0100               	movlb	0	; () banked
  7888  012B7C  2578               	addwf	?___awdiv& (0+255),w,b
  7889  012B7E  6EF6               	movwf	tblptrl,c
  7890  012B80  0EFE               	movlw	high __powers_
  7891  012B82  0100               	movlb	0	; () banked
  7892  012B84  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  7893  012B86  6EF7               	movwf	tblptrh,c
  7894  012B88                     	if	1	;There are 3 active tblptr bytes
  7895  012B88  6AF8               	clrf	tblptru,c
  7896  012B8A  0E00               	movlw	low (__mediumconst shr (0+16))
  7897  012B8C  22F8               	addwfc	tblptru,f,c
  7898  012B8E                     	endif
  7899  012B8E  0009               	tblrd		*+
  7900  012B90  CFF5 F080          	movff	tablat,___flmul@b
  7901  012B94  0009               	tblrd		*+
  7902  012B96  CFF5 F081          	movff	tablat,___flmul@b+1
  7903  012B9A  0009               	tblrd		*+
  7904  012B9C  CFF5 F082          	movff	tablat,___flmul@b+2
  7905  012BA0  000A               	tblrd		*-
  7906  012BA2  CFF5 F083          	movff	tablat,___flmul@b+3
  7907  012BA6  EC79  F09B         	call	___flmul	;wreg free
  7908  012BAA  C080  F09D         	movff	?___flmul,_scale$4210
  7909  012BAE  C081  F09E         	movff	?___flmul+1,_scale$4210+1
  7910  012BB2  C082  F09F         	movff	?___flmul+2,_scale$4210+2
  7911  012BB6  C083  F0A0         	movff	?___flmul+3,_scale$4210+3
  7912                           
  7913                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7914  012BBA  C09D  F080         	movff	_scale$4210,___flmul@b
  7915  012BBE  C09E  F081         	movff	_scale$4210+1,___flmul@b+1
  7916  012BC2  C09F  F082         	movff	_scale$4210+2,___flmul@b+2
  7917  012BC6  C0A0  F083         	movff	_scale$4210+3,___flmul@b+3
  7918  012BCA  0E00               	movlw	0
  7919  012BCC  0100               	movlb	0	; () banked
  7920  012BCE  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  7921  012BD0  0E0A               	movlw	10
  7922  012BD2  6F74               	movwf	___awmod@divisor& (0+255),b
  7923  012BD4  0100               	movlb	0	; () banked
  7924  012BD6  51A1               	movf	scale@scl& (0+255),w,b
  7925  012BD8  0100               	movlb	0	; () banked
  7926  012BDA  6F72               	movwf	___awmod@dividend& (0+255),b
  7927  012BDC  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  7928  012BDE  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  7929  012BE0  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  7930  012BE2  EC22  F0AC         	call	___awmod	;wreg free
  7931  012BE6  0100               	movlb	0	; () banked
  7932  012BE8  90D8               	bcf	status,0,c
  7933  012BEA  3772               	rlcf	?___awmod& (0+255),f,b
  7934  012BEC  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  7935  012BEE  0100               	movlb	0	; () banked
  7936  012BF0  90D8               	bcf	status,0,c
  7937  012BF2  3772               	rlcf	?___awmod& (0+255),f,b
  7938  012BF4  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  7939  012BF6  0EF7               	movlw	low __powers_
  7940  012BF8  0100               	movlb	0	; () banked
  7941  012BFA  2572               	addwf	?___awmod& (0+255),w,b
  7942  012BFC  6EF6               	movwf	tblptrl,c
  7943  012BFE  0EFE               	movlw	high __powers_
  7944  012C00  0100               	movlb	0	; () banked
  7945  012C02  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  7946  012C04  6EF7               	movwf	tblptrh,c
  7947  012C06                     	if	1	;There are 3 active tblptr bytes
  7948  012C06  6AF8               	clrf	tblptru,c
  7949  012C08  0E00               	movlw	low (__mediumconst shr (0+16))
  7950  012C0A  22F8               	addwfc	tblptru,f,c
  7951  012C0C                     	endif
  7952  012C0C  0009               	tblrd		*+
  7953  012C0E  CFF5 F084          	movff	tablat,___flmul@a
  7954  012C12  0009               	tblrd		*+
  7955  012C14  CFF5 F085          	movff	tablat,___flmul@a+1
  7956  012C18  0009               	tblrd		*+
  7957  012C1A  CFF5 F086          	movff	tablat,___flmul@a+2
  7958  012C1E  000A               	tblrd		*-
  7959  012C20  CFF5 F087          	movff	tablat,___flmul@a+3
  7960  012C24  EC79  F09B         	call	___flmul	;wreg free
  7961  012C28  C080  F099         	movff	?___flmul,?_scale
  7962  012C2C  C081  F09A         	movff	?___flmul+1,?_scale+1
  7963  012C30  C082  F09B         	movff	?___flmul+2,?_scale+2
  7964  012C34  C083  F09C         	movff	?___flmul+3,?_scale+3
  7965  012C38  0012               	return	
  7966  012C3A                     l7856:
  7967                           
  7968                           ;doprnt.c: 438: else if(scl > 10)
  7969  012C3A  0100               	movlb	0	; () banked
  7970  012C3C  51A1               	movf	scale@scl& (0+255),w,b
  7971  012C3E  0A80               	xorlw	128
  7972  012C40  0F75               	addlw	-139
  7973  012C42  A0D8               	btfss	status,0,c
  7974  012C44  D063               	goto	l7862
  7975                           
  7976                           ; BSR set to: 0
  7977                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  7978  012C46  0E00               	movlw	0
  7979  012C48  0100               	movlb	0	; () banked
  7980  012C4A  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  7981  012C4C  0E0A               	movlw	10
  7982  012C4E  6F7A               	movwf	___awdiv@divisor& (0+255),b
  7983  012C50  0100               	movlb	0	; () banked
  7984  012C52  51A1               	movf	scale@scl& (0+255),w,b
  7985  012C54  0100               	movlb	0	; () banked
  7986  012C56  6F78               	movwf	___awdiv@dividend& (0+255),b
  7987  012C58  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  7988  012C5A  BF78               	btfsc	___awdiv@dividend& (0+255),7,b
  7989  012C5C  0779               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7990  012C5E  EC61  F0AA         	call	___awdiv	;wreg free
  7991  012C62  0100               	movlb	0	; () banked
  7992  012C64  90D8               	bcf	status,0,c
  7993  012C66  3778               	rlcf	?___awdiv& (0+255),f,b
  7994  012C68  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7995  012C6A  0100               	movlb	0	; () banked
  7996  012C6C  90D8               	bcf	status,0,c
  7997  012C6E  3778               	rlcf	?___awdiv& (0+255),f,b
  7998  012C70  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7999  012C72  0E24               	movlw	36
  8000  012C74  0100               	movlb	0	; () banked
  8001  012C76  2778               	addwf	?___awdiv& (0+255),f,b
  8002  012C78  0E00               	movlw	0
  8003  012C7A  0100               	movlb	0	; () banked
  8004  012C7C  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  8005  012C7E  0EF7               	movlw	low __powers_
  8006  012C80  0100               	movlb	0	; () banked
  8007  012C82  2578               	addwf	?___awdiv& (0+255),w,b
  8008  012C84  6EF6               	movwf	tblptrl,c
  8009  012C86  0EFE               	movlw	high __powers_
  8010  012C88  0100               	movlb	0	; () banked
  8011  012C8A  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  8012  012C8C  6EF7               	movwf	tblptrh,c
  8013  012C8E                     	if	1	;There are 3 active tblptr bytes
  8014  012C8E  6AF8               	clrf	tblptru,c
  8015  012C90  0E00               	movlw	low (__mediumconst shr (0+16))
  8016  012C92  22F8               	addwfc	tblptru,f,c
  8017  012C94                     	endif
  8018  012C94  0009               	tblrd		*+
  8019  012C96  CFF5 F080          	movff	tablat,___flmul@b
  8020  012C9A  0009               	tblrd		*+
  8021  012C9C  CFF5 F081          	movff	tablat,___flmul@b+1
  8022  012CA0  0009               	tblrd		*+
  8023  012CA2  CFF5 F082          	movff	tablat,___flmul@b+2
  8024  012CA6  000A               	tblrd		*-
  8025  012CA8  CFF5 F083          	movff	tablat,___flmul@b+3
  8026  012CAC  0E00               	movlw	0
  8027  012CAE  0100               	movlb	0	; () banked
  8028  012CB0  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  8029  012CB2  0E0A               	movlw	10
  8030  012CB4  6F74               	movwf	___awmod@divisor& (0+255),b
  8031  012CB6  0100               	movlb	0	; () banked
  8032  012CB8  51A1               	movf	scale@scl& (0+255),w,b
  8033  012CBA  0100               	movlb	0	; () banked
  8034  012CBC  6F72               	movwf	___awmod@dividend& (0+255),b
  8035  012CBE  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  8036  012CC0  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  8037  012CC2  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  8038  012CC4  EC22  F0AC         	call	___awmod	;wreg free
  8039  012CC8  0100               	movlb	0	; () banked
  8040  012CCA  90D8               	bcf	status,0,c
  8041  012CCC  3772               	rlcf	?___awmod& (0+255),f,b
  8042  012CCE  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  8043  012CD0  0100               	movlb	0	; () banked
  8044  012CD2  90D8               	bcf	status,0,c
  8045  012CD4  3772               	rlcf	?___awmod& (0+255),f,b
  8046  012CD6  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  8047  012CD8  0EF7               	movlw	low __powers_
  8048  012CDA  0100               	movlb	0	; () banked
  8049  012CDC  2572               	addwf	?___awmod& (0+255),w,b
  8050  012CDE  6EF6               	movwf	tblptrl,c
  8051  012CE0  0EFE               	movlw	high __powers_
  8052  012CE2  0100               	movlb	0	; () banked
  8053  012CE4  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  8054  012CE6  6EF7               	movwf	tblptrh,c
  8055  012CE8                     	if	1	;There are 3 active tblptr bytes
  8056  012CE8  6AF8               	clrf	tblptru,c
  8057  012CEA  0E00               	movlw	low (__mediumconst shr (0+16))
  8058  012CEC  22F8               	addwfc	tblptru,f,c
  8059  012CEE                     	endif
  8060  012CEE  0009               	tblrd		*+
  8061  012CF0  CFF5 F084          	movff	tablat,___flmul@a
  8062  012CF4  0009               	tblrd		*+
  8063  012CF6  CFF5 F085          	movff	tablat,___flmul@a+1
  8064  012CFA  0009               	tblrd		*+
  8065  012CFC  CFF5 F086          	movff	tablat,___flmul@a+2
  8066  012D00  000A               	tblrd		*-
  8067  012D02  CFF5 F087          	movff	tablat,___flmul@a+3
  8068  012D06  EC79  F09B         	call	___flmul	;wreg free
  8069  012D0A  D78E               	goto	L6
  8070  012D0C                     l7862:
  8071                           
  8072                           ;doprnt.c: 440: return _powers_[scl];
  8073  012D0C  0100               	movlb	0	; () banked
  8074  012D0E  51A1               	movf	scale@scl& (0+255),w,b
  8075  012D10  0D04               	mullw	4
  8076  012D12  0EF7               	movlw	low __powers_
  8077  012D14  24F3               	addwf	prodl,w,c
  8078  012D16  6EF6               	movwf	tblptrl,c
  8079  012D18  0EFE               	movlw	high __powers_
  8080  012D1A  20F4               	addwfc	prodh,w,c
  8081  012D1C  6EF7               	movwf	tblptrh,c
  8082  012D1E                     	if	1	;There are 3 active tblptr bytes
  8083  012D1E  6AF8               	clrf	tblptru,c
  8084  012D20  0E00               	movlw	low (__mediumconst shr (0+16))
  8085  012D22  22F8               	addwfc	tblptru,f,c
  8086  012D24                     	endif
  8087  012D24  0009               	tblrd		*+
  8088  012D26  CFF5 F099          	movff	tablat,?_scale
  8089  012D2A  0009               	tblrd		*+
  8090  012D2C  CFF5 F09A          	movff	tablat,?_scale+1
  8091  012D30  0009               	tblrd		*+
  8092  012D32  CFF5 F09B          	movff	tablat,?_scale+2
  8093  012D36  000A               	tblrd		*-
  8094  012D38  CFF5 F09C          	movff	tablat,?_scale+3
  8095  012D3C  0012               	return	
  8096  012D3E                     __end_of_scale:
  8097                           	opt stack 0
  8098                           tblptru	equ	0xFF8
  8099                           tblptrh	equ	0xFF7
  8100                           tblptrl	equ	0xFF6
  8101                           tablat	equ	0xFF5
  8102                           prodh	equ	0xFF4
  8103                           prodl	equ	0xFF3
  8104                           intcon	equ	0xFF2
  8105                           postinc0	equ	0xFEE
  8106                           wreg	equ	0xFE8
  8107                           indf2	equ	0xFDF
  8108                           postinc2	equ	0xFDE
  8109                           fsr2h	equ	0xFDA
  8110                           fsr2l	equ	0xFD9
  8111                           status	equ	0xFD8
  8112                           
  8113 ;; *************** function _isdigit *****************
  8114 ;; Defined at:
  8115 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  8116 ;; Parameters:    Size  Location     Type
  8117 ;;  c               1    wreg     unsigned char 
  8118 ;; Auto vars:     Size  Location     Type
  8119 ;;  c               1   20[BANK0 ] unsigned char 
  8120 ;; Return value:  Size  Location     Type
  8121 ;;		None               void
  8122 ;; Registers used:
  8123 ;;		wreg, status,2, status,0
  8124 ;; Tracked objects:
  8125 ;;		On entry : 0/0
  8126 ;;		On exit  : 0/0
  8127 ;;		Unchanged: 0/0
  8128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8130 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8131 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8132 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8133 ;;Total ram usage:        3 bytes
  8134 ;; Hardware stack levels used:    1
  8135 ;; Hardware stack levels required when called:    3
  8136 ;; This function calls:
  8137 ;;		Nothing
  8138 ;; This function is called by:
  8139 ;;		_sprintf
  8140 ;; This function uses a non-reentrant model
  8141 ;;
  8142                           
  8143                           	psect	text10
  8144  015CBC                     __ptext10:
  8145                           	opt stack 0
  8146  015CBC                     _isdigit:
  8147                           	opt stack 25
  8148                           
  8149                           ;incstack = 0
  8150                           ;isdigit@c stored from wreg
  8151  015CBC  0100               	movlb	0	; () banked
  8152  015CBE  6F74               	movwf	isdigit@c& (0+255),b
  8153  015CC0  0E00               	movlw	0
  8154  015CC2  0100               	movlb	0	; () banked
  8155  015CC4  6F73               	movwf	_isdigit$3793& (0+255),b
  8156                           
  8157                           ; BSR set to: 0
  8158  015CC6  0E3A               	movlw	58
  8159  015CC8  0100               	movlb	0	; () banked
  8160  015CCA  6174               	cpfslt	isdigit@c& (0+255),b
  8161  015CCC  D007               	goto	l7874
  8162                           
  8163                           ; BSR set to: 0
  8164  015CCE  0E2F               	movlw	47
  8165  015CD0  0100               	movlb	0	; () banked
  8166  015CD2  6574               	cpfsgt	isdigit@c& (0+255),b
  8167  015CD4  D003               	goto	l7874
  8168                           
  8169                           ; BSR set to: 0
  8170  015CD6  0E01               	movlw	1
  8171  015CD8  0100               	movlb	0	; () banked
  8172  015CDA  6F73               	movwf	_isdigit$3793& (0+255),b
  8173  015CDC                     l7874:
  8174                           
  8175                           ; BSR set to: 0
  8176  015CDC  C073  F072         	movff	_isdigit$3793,??_isdigit
  8177  015CE0  0100               	movlb	0	; () banked
  8178  015CE2  3172               	rrcf	??_isdigit& (0+255),w,b
  8179  015CE4  0012               	return	
  8180  015CE6                     __end_of_isdigit:
  8181                           	opt stack 0
  8182                           tblptru	equ	0xFF8
  8183                           tblptrh	equ	0xFF7
  8184                           tblptrl	equ	0xFF6
  8185                           tablat	equ	0xFF5
  8186                           prodh	equ	0xFF4
  8187                           prodl	equ	0xFF3
  8188                           intcon	equ	0xFF2
  8189                           postinc0	equ	0xFEE
  8190                           wreg	equ	0xFE8
  8191                           indf2	equ	0xFDF
  8192                           postinc2	equ	0xFDE
  8193                           fsr2h	equ	0xFDA
  8194                           fsr2l	equ	0xFD9
  8195                           status	equ	0xFD8
  8196                           
  8197 ;; *************** function _fround *****************
  8198 ;; Defined at:
  8199 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  8200 ;; Parameters:    Size  Location     Type
  8201 ;;  prec            1    wreg     unsigned char 
  8202 ;; Auto vars:     Size  Location     Type
  8203 ;;  prec            1   69[BANK0 ] unsigned char 
  8204 ;; Return value:  Size  Location     Type
  8205 ;;                  4   57[BANK0 ] unsigned char 
  8206 ;; Registers used:
  8207 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8208 ;; Tracked objects:
  8209 ;;		On entry : 0/0
  8210 ;;		On exit  : 0/0
  8211 ;;		Unchanged: 0/0
  8212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8213 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8214 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8216 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8217 ;;Total ram usage:       13 bytes
  8218 ;; Hardware stack levels used:    1
  8219 ;; Hardware stack levels required when called:    4
  8220 ;; This function calls:
  8221 ;;		___awdiv
  8222 ;;		___awmod
  8223 ;;		___flmul
  8224 ;; This function is called by:
  8225 ;;		_sprintf
  8226 ;; This function uses a non-reentrant model
  8227 ;;
  8228                           
  8229                           	psect	text11
  8230  0142F6                     __ptext11:
  8231                           	opt stack 0
  8232  0142F6                     _fround:
  8233                           	opt stack 24
  8234                           
  8235                           ; BSR set to: 0
  8236                           ;incstack = 0
  8237                           ;fround@prec stored from wreg
  8238  0142F6  0100               	movlb	0	; () banked
  8239  0142F8  6FA5               	movwf	fround@prec& (0+255),b
  8240                           
  8241                           ;doprnt.c: 413: if(prec>=110)
  8242  0142FA  0E6D               	movlw	109
  8243  0142FC  0100               	movlb	0	; () banked
  8244  0142FE  65A5               	cpfsgt	fround@prec& (0+255),b
  8245  014300  D0CD               	goto	l7816
  8246                           
  8247                           ; BSR set to: 0
  8248                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8249  014302  0E00               	movlw	0
  8250  014304  0100               	movlb	0	; () banked
  8251  014306  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  8252  014308  0E0A               	movlw	10
  8253  01430A  6F7A               	movwf	___awdiv@divisor& (0+255),b
  8254  01430C  0E00               	movlw	0
  8255  01430E  0100               	movlb	0	; () banked
  8256  014310  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  8257  014312  0E64               	movlw	100
  8258  014314  6F74               	movwf	___awmod@divisor& (0+255),b
  8259  014316  C0A5  F072         	movff	fround@prec,___awmod@dividend
  8260  01431A  0100               	movlb	0	; () banked
  8261  01431C  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  8262  01431E  EC22  F0AC         	call	___awmod	;wreg free
  8263  014322  C072  F078         	movff	?___awmod,___awdiv@dividend
  8264  014326  C073  F079         	movff	?___awmod+1,___awdiv@dividend+1
  8265  01432A  EC61  F0AA         	call	___awdiv	;wreg free
  8266  01432E  0100               	movlb	0	; () banked
  8267  014330  90D8               	bcf	status,0,c
  8268  014332  3778               	rlcf	?___awdiv& (0+255),f,b
  8269  014334  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8270  014336  0100               	movlb	0	; () banked
  8271  014338  90D8               	bcf	status,0,c
  8272  01433A  3778               	rlcf	?___awdiv& (0+255),f,b
  8273  01433C  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8274  01433E  0E24               	movlw	36
  8275  014340  0100               	movlb	0	; () banked
  8276  014342  2778               	addwf	?___awdiv& (0+255),f,b
  8277  014344  0E00               	movlw	0
  8278  014346  0100               	movlb	0	; () banked
  8279  014348  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  8280  01434A  0EC3               	movlw	low __npowers_
  8281  01434C  0100               	movlb	0	; () banked
  8282  01434E  2578               	addwf	?___awdiv& (0+255),w,b
  8283  014350  6EF6               	movwf	tblptrl,c
  8284  014352  0EFE               	movlw	high __npowers_
  8285  014354  0100               	movlb	0	; () banked
  8286  014356  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  8287  014358  6EF7               	movwf	tblptrh,c
  8288  01435A                     	if	1	;There are 3 active tblptr bytes
  8289  01435A  6AF8               	clrf	tblptru,c
  8290  01435C  0E00               	movlw	low (__mediumconst shr (0+16))
  8291  01435E  22F8               	addwfc	tblptru,f,c
  8292  014360                     	endif
  8293  014360  0009               	tblrd		*+
  8294  014362  CFF5 F084          	movff	tablat,___flmul@a
  8295  014366  0009               	tblrd		*+
  8296  014368  CFF5 F085          	movff	tablat,___flmul@a+1
  8297  01436C  0009               	tblrd		*+
  8298  01436E  CFF5 F086          	movff	tablat,___flmul@a+2
  8299  014372  000A               	tblrd		*-
  8300  014374  CFF5 F087          	movff	tablat,___flmul@a+3
  8301  014378  0E00               	movlw	0
  8302  01437A  0100               	movlb	0	; () banked
  8303  01437C  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  8304  01437E  0E64               	movlw	100
  8305  014380  6F7A               	movwf	___awdiv@divisor& (0+255),b
  8306  014382  C0A5  F078         	movff	fround@prec,___awdiv@dividend
  8307  014386  0100               	movlb	0	; () banked
  8308  014388  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  8309  01438A  EC61  F0AA         	call	___awdiv	;wreg free
  8310  01438E  0100               	movlb	0	; () banked
  8311  014390  90D8               	bcf	status,0,c
  8312  014392  3778               	rlcf	?___awdiv& (0+255),f,b
  8313  014394  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8314  014396  0100               	movlb	0	; () banked
  8315  014398  90D8               	bcf	status,0,c
  8316  01439A  3778               	rlcf	?___awdiv& (0+255),f,b
  8317  01439C  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8318  01439E  0E48               	movlw	72
  8319  0143A0  0100               	movlb	0	; () banked
  8320  0143A2  2778               	addwf	?___awdiv& (0+255),f,b
  8321  0143A4  0E00               	movlw	0
  8322  0143A6  0100               	movlb	0	; () banked
  8323  0143A8  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  8324  0143AA  0EC3               	movlw	low __npowers_
  8325  0143AC  0100               	movlb	0	; () banked
  8326  0143AE  2578               	addwf	?___awdiv& (0+255),w,b
  8327  0143B0  6EF6               	movwf	tblptrl,c
  8328  0143B2  0EFE               	movlw	high __npowers_
  8329  0143B4  0100               	movlb	0	; () banked
  8330  0143B6  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  8331  0143B8  6EF7               	movwf	tblptrh,c
  8332  0143BA                     	if	1	;There are 3 active tblptr bytes
  8333  0143BA  6AF8               	clrf	tblptru,c
  8334  0143BC  0E00               	movlw	low (__mediumconst shr (0+16))
  8335  0143BE  22F8               	addwfc	tblptru,f,c
  8336  0143C0                     	endif
  8337  0143C0  0009               	tblrd		*+
  8338  0143C2  CFF5 F080          	movff	tablat,___flmul@b
  8339  0143C6  0009               	tblrd		*+
  8340  0143C8  CFF5 F081          	movff	tablat,___flmul@b+1
  8341  0143CC  0009               	tblrd		*+
  8342  0143CE  CFF5 F082          	movff	tablat,___flmul@b+2
  8343  0143D2  000A               	tblrd		*-
  8344  0143D4  CFF5 F083          	movff	tablat,___flmul@b+3
  8345  0143D8  EC79  F09B         	call	___flmul	;wreg free
  8346  0143DC  C080  F0A1         	movff	?___flmul,_fround$4208
  8347  0143E0  C081  F0A2         	movff	?___flmul+1,_fround$4208+1
  8348  0143E4  C082  F0A3         	movff	?___flmul+2,_fround$4208+2
  8349  0143E8  C083  F0A4         	movff	?___flmul+3,_fround$4208+3
  8350                           
  8351                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8352  0143EC  0E00               	movlw	0
  8353  0143EE  0100               	movlb	0	; () banked
  8354  0143F0  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  8355  0143F2  0E0A               	movlw	10
  8356  0143F4  6F74               	movwf	___awmod@divisor& (0+255),b
  8357  0143F6  C0A5  F072         	movff	fround@prec,___awmod@dividend
  8358  0143FA  0100               	movlb	0	; () banked
  8359  0143FC  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  8360  0143FE  EC22  F0AC         	call	___awmod	;wreg free
  8361  014402  0100               	movlb	0	; () banked
  8362  014404  90D8               	bcf	status,0,c
  8363  014406  3772               	rlcf	?___awmod& (0+255),f,b
  8364  014408  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  8365  01440A  0100               	movlb	0	; () banked
  8366  01440C  90D8               	bcf	status,0,c
  8367  01440E  3772               	rlcf	?___awmod& (0+255),f,b
  8368  014410  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  8369  014412  0EC3               	movlw	low __npowers_
  8370  014414  0100               	movlb	0	; () banked
  8371  014416  2572               	addwf	?___awmod& (0+255),w,b
  8372  014418  6EF6               	movwf	tblptrl,c
  8373  01441A  0EFE               	movlw	high __npowers_
  8374  01441C  0100               	movlb	0	; () banked
  8375  01441E  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  8376  014420  6EF7               	movwf	tblptrh,c
  8377  014422                     	if	1	;There are 3 active tblptr bytes
  8378  014422  6AF8               	clrf	tblptru,c
  8379  014424  0E00               	movlw	low (__mediumconst shr (0+16))
  8380  014426  22F8               	addwfc	tblptru,f,c
  8381  014428                     	endif
  8382  014428  0009               	tblrd		*+
  8383  01442A  CFF5 F084          	movff	tablat,___flmul@a
  8384  01442E  0009               	tblrd		*+
  8385  014430  CFF5 F085          	movff	tablat,___flmul@a+1
  8386  014434  0009               	tblrd		*+
  8387  014436  CFF5 F086          	movff	tablat,___flmul@a+2
  8388  01443A  000A               	tblrd		*-
  8389  01443C  CFF5 F087          	movff	tablat,___flmul@a+3
  8390  014440  C0A1  F080         	movff	_fround$4208,___flmul@b
  8391  014444  C0A2  F081         	movff	_fround$4208+1,___flmul@b+1
  8392  014448  C0A3  F082         	movff	_fround$4208+2,___flmul@b+2
  8393  01444C  C0A4  F083         	movff	_fround$4208+3,___flmul@b+3
  8394  014450  EC79  F09B         	call	___flmul	;wreg free
  8395  014454  C080  F09D         	movff	?___flmul,_fround$4209
  8396  014458  C081  F09E         	movff	?___flmul+1,_fround$4209+1
  8397  01445C  C082  F09F         	movff	?___flmul+2,_fround$4209+2
  8398  014460  C083  F0A0         	movff	?___flmul+3,_fround$4209+3
  8399                           
  8400                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8401  014464  C09D  F080         	movff	_fround$4209,___flmul@b
  8402  014468  C09E  F081         	movff	_fround$4209+1,___flmul@b+1
  8403  01446C  C09F  F082         	movff	_fround$4209+2,___flmul@b+2
  8404  014470  C0A0  F083         	movff	_fround$4209+3,___flmul@b+3
  8405  014474  0E00               	movlw	0
  8406  014476  0100               	movlb	0	; () banked
  8407  014478  6F84               	movwf	___flmul@a& (0+255),b
  8408  01447A  0E00               	movlw	0
  8409  01447C  6F85               	movwf	(___flmul@a+1)& (0+255),b
  8410  01447E  0E00               	movlw	0
  8411  014480  6F86               	movwf	(___flmul@a+2)& (0+255),b
  8412  014482  0E3F               	movlw	63
  8413  014484  6F87               	movwf	(___flmul@a+3)& (0+255),b
  8414  014486  EC79  F09B         	call	___flmul	;wreg free
  8415  01448A  C080  F099         	movff	?___flmul,?_fround
  8416  01448E  C081  F09A         	movff	?___flmul+1,?_fround+1
  8417  014492  C082  F09B         	movff	?___flmul+2,?_fround+2
  8418  014496  C083  F09C         	movff	?___flmul+3,?_fround+3
  8419  01449A  0012               	return	
  8420  01449C                     l7816:
  8421                           
  8422                           ;doprnt.c: 415: else if(prec > 10)
  8423  01449C  0E0A               	movlw	10
  8424  01449E  0100               	movlb	0	; () banked
  8425  0144A0  65A5               	cpfsgt	fround@prec& (0+255),b
  8426  0144A2  D078               	goto	l7824
  8427                           
  8428                           ; BSR set to: 0
  8429                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8430  0144A4  0E00               	movlw	0
  8431  0144A6  0100               	movlb	0	; () banked
  8432  0144A8  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  8433  0144AA  0E0A               	movlw	10
  8434  0144AC  6F74               	movwf	___awmod@divisor& (0+255),b
  8435  0144AE  C0A5  F072         	movff	fround@prec,___awmod@dividend
  8436  0144B2  0100               	movlb	0	; () banked
  8437  0144B4  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  8438  0144B6  EC22  F0AC         	call	___awmod	;wreg free
  8439  0144BA  0100               	movlb	0	; () banked
  8440  0144BC  90D8               	bcf	status,0,c
  8441  0144BE  3772               	rlcf	?___awmod& (0+255),f,b
  8442  0144C0  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  8443  0144C2  0100               	movlb	0	; () banked
  8444  0144C4  90D8               	bcf	status,0,c
  8445  0144C6  3772               	rlcf	?___awmod& (0+255),f,b
  8446  0144C8  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  8447  0144CA  0EC3               	movlw	low __npowers_
  8448  0144CC  0100               	movlb	0	; () banked
  8449  0144CE  2572               	addwf	?___awmod& (0+255),w,b
  8450  0144D0  6EF6               	movwf	tblptrl,c
  8451  0144D2  0EFE               	movlw	high __npowers_
  8452  0144D4  0100               	movlb	0	; () banked
  8453  0144D6  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  8454  0144D8  6EF7               	movwf	tblptrh,c
  8455  0144DA                     	if	1	;There are 3 active tblptr bytes
  8456  0144DA  6AF8               	clrf	tblptru,c
  8457  0144DC  0E00               	movlw	low (__mediumconst shr (0+16))
  8458  0144DE  22F8               	addwfc	tblptru,f,c
  8459  0144E0                     	endif
  8460  0144E0  0009               	tblrd		*+
  8461  0144E2  CFF5 F084          	movff	tablat,___flmul@a
  8462  0144E6  0009               	tblrd		*+
  8463  0144E8  CFF5 F085          	movff	tablat,___flmul@a+1
  8464  0144EC  0009               	tblrd		*+
  8465  0144EE  CFF5 F086          	movff	tablat,___flmul@a+2
  8466  0144F2  000A               	tblrd		*-
  8467  0144F4  CFF5 F087          	movff	tablat,___flmul@a+3
  8468  0144F8  0E00               	movlw	0
  8469  0144FA  0100               	movlb	0	; () banked
  8470  0144FC  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  8471  0144FE  0E0A               	movlw	10
  8472  014500  6F7A               	movwf	___awdiv@divisor& (0+255),b
  8473  014502  C0A5  F078         	movff	fround@prec,___awdiv@dividend
  8474  014506  0100               	movlb	0	; () banked
  8475  014508  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  8476  01450A  EC61  F0AA         	call	___awdiv	;wreg free
  8477  01450E  0100               	movlb	0	; () banked
  8478  014510  90D8               	bcf	status,0,c
  8479  014512  3778               	rlcf	?___awdiv& (0+255),f,b
  8480  014514  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8481  014516  0100               	movlb	0	; () banked
  8482  014518  90D8               	bcf	status,0,c
  8483  01451A  3778               	rlcf	?___awdiv& (0+255),f,b
  8484  01451C  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8485  01451E  0E24               	movlw	36
  8486  014520  0100               	movlb	0	; () banked
  8487  014522  2778               	addwf	?___awdiv& (0+255),f,b
  8488  014524  0E00               	movlw	0
  8489  014526  0100               	movlb	0	; () banked
  8490  014528  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  8491  01452A  0EC3               	movlw	low __npowers_
  8492  01452C  0100               	movlb	0	; () banked
  8493  01452E  2578               	addwf	?___awdiv& (0+255),w,b
  8494  014530  6EF6               	movwf	tblptrl,c
  8495  014532  0EFE               	movlw	high __npowers_
  8496  014534  0100               	movlb	0	; () banked
  8497  014536  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  8498  014538  6EF7               	movwf	tblptrh,c
  8499  01453A                     	if	1	;There are 3 active tblptr bytes
  8500  01453A  6AF8               	clrf	tblptru,c
  8501  01453C  0E00               	movlw	low (__mediumconst shr (0+16))
  8502  01453E  22F8               	addwfc	tblptru,f,c
  8503  014540                     	endif
  8504  014540  0009               	tblrd		*+
  8505  014542  CFF5 F080          	movff	tablat,___flmul@b
  8506  014546  0009               	tblrd		*+
  8507  014548  CFF5 F081          	movff	tablat,___flmul@b+1
  8508  01454C  0009               	tblrd		*+
  8509  01454E  CFF5 F082          	movff	tablat,___flmul@b+2
  8510  014552  000A               	tblrd		*-
  8511  014554  CFF5 F083          	movff	tablat,___flmul@b+3
  8512  014558  EC79  F09B         	call	___flmul	;wreg free
  8513  01455C  C080  F0A1         	movff	?___flmul,_fround$4208
  8514  014560  C081  F0A2         	movff	?___flmul+1,_fround$4208+1
  8515  014564  C082  F0A3         	movff	?___flmul+2,_fround$4208+2
  8516  014568  C083  F0A4         	movff	?___flmul+3,_fround$4208+3
  8517                           
  8518                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8519  01456C  C0A1  F080         	movff	_fround$4208,___flmul@b
  8520  014570  C0A2  F081         	movff	_fround$4208+1,___flmul@b+1
  8521  014574  C0A3  F082         	movff	_fround$4208+2,___flmul@b+2
  8522  014578  C0A4  F083         	movff	_fround$4208+3,___flmul@b+3
  8523  01457C  0E00               	movlw	0
  8524  01457E  0100               	movlb	0	; () banked
  8525  014580  6F84               	movwf	___flmul@a& (0+255),b
  8526  014582  0E00               	movlw	0
  8527  014584  6F85               	movwf	(___flmul@a+1)& (0+255),b
  8528  014586  0E00               	movlw	0
  8529  014588  6F86               	movwf	(___flmul@a+2)& (0+255),b
  8530  01458A  0E3F               	movlw	63
  8531  01458C  6F87               	movwf	(___flmul@a+3)& (0+255),b
  8532  01458E  EC79  F09B         	call	___flmul	;wreg free
  8533  014592  D77B               	goto	L7
  8534  014594                     l7824:
  8535                           
  8536                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  8537  014594  0100               	movlb	0	; () banked
  8538  014596  51A5               	movf	fround@prec& (0+255),w,b
  8539  014598  0D04               	mullw	4
  8540  01459A  0EC3               	movlw	low __npowers_
  8541  01459C  24F3               	addwf	prodl,w,c
  8542  01459E  6EF6               	movwf	tblptrl,c
  8543  0145A0  0EFE               	movlw	high __npowers_
  8544  0145A2  20F4               	addwfc	prodh,w,c
  8545  0145A4  6EF7               	movwf	tblptrh,c
  8546  0145A6                     	if	1	;There are 3 active tblptr bytes
  8547  0145A6  6AF8               	clrf	tblptru,c
  8548  0145A8  0E00               	movlw	low (__mediumconst shr (0+16))
  8549  0145AA  22F8               	addwfc	tblptru,f,c
  8550  0145AC                     	endif
  8551  0145AC  0009               	tblrd		*+
  8552  0145AE  CFF5 F080          	movff	tablat,___flmul@b
  8553  0145B2  0009               	tblrd		*+
  8554  0145B4  CFF5 F081          	movff	tablat,___flmul@b+1
  8555  0145B8  0009               	tblrd		*+
  8556  0145BA  CFF5 F082          	movff	tablat,___flmul@b+2
  8557  0145BE  000A               	tblrd		*-
  8558  0145C0  CFF5 F083          	movff	tablat,___flmul@b+3
  8559  0145C4  0E00               	movlw	0
  8560  0145C6  0100               	movlb	0	; () banked
  8561  0145C8  6F84               	movwf	___flmul@a& (0+255),b
  8562  0145CA  0E00               	movlw	0
  8563  0145CC  6F85               	movwf	(___flmul@a+1)& (0+255),b
  8564  0145CE  0E00               	movlw	0
  8565  0145D0  6F86               	movwf	(___flmul@a+2)& (0+255),b
  8566  0145D2  0E3F               	movlw	63
  8567  0145D4  6F87               	movwf	(___flmul@a+3)& (0+255),b
  8568  0145D6  EC79  F09B         	call	___flmul	;wreg free
  8569  0145DA  C080  F099         	movff	?___flmul,?_fround
  8570  0145DE  C081  F09A         	movff	?___flmul+1,?_fround+1
  8571  0145E2  C082  F09B         	movff	?___flmul+2,?_fround+2
  8572  0145E6  C083  F09C         	movff	?___flmul+3,?_fround+3
  8573  0145EA  0012               	return	
  8574  0145EC                     __end_of_fround:
  8575                           	opt stack 0
  8576                           tblptru	equ	0xFF8
  8577                           tblptrh	equ	0xFF7
  8578                           tblptrl	equ	0xFF6
  8579                           tablat	equ	0xFF5
  8580                           prodh	equ	0xFF4
  8581                           prodl	equ	0xFF3
  8582                           intcon	equ	0xFF2
  8583                           postinc0	equ	0xFEE
  8584                           wreg	equ	0xFE8
  8585                           indf2	equ	0xFDF
  8586                           postinc2	equ	0xFDE
  8587                           fsr2h	equ	0xFDA
  8588                           fsr2l	equ	0xFD9
  8589                           status	equ	0xFD8
  8590                           
  8591 ;; *************** function ___flmul *****************
  8592 ;; Defined at:
  8593 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  8594 ;; Parameters:    Size  Location     Type
  8595 ;;  b               4   32[BANK0 ] unsigned char 
  8596 ;;  a               4   36[BANK0 ] unsigned char 
  8597 ;; Auto vars:     Size  Location     Type
  8598 ;;  prod            4   51[BANK0 ] struct .
  8599 ;;  grs             4   46[BANK0 ] unsigned long 
  8600 ;;  temp            2   55[BANK0 ] struct .
  8601 ;;  bexp            1   50[BANK0 ] unsigned char 
  8602 ;;  aexp            1   45[BANK0 ] unsigned char 
  8603 ;;  sign            1   44[BANK0 ] unsigned char 
  8604 ;; Return value:  Size  Location     Type
  8605 ;;                  4   32[BANK0 ] unsigned char 
  8606 ;; Registers used:
  8607 ;;		wreg, status,2, status,0, prodl, prodh
  8608 ;; Tracked objects:
  8609 ;;		On entry : 0/0
  8610 ;;		On exit  : 0/0
  8611 ;;		Unchanged: 0/0
  8612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8613 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8614 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8615 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8616 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8617 ;;Total ram usage:       25 bytes
  8618 ;; Hardware stack levels used:    1
  8619 ;; Hardware stack levels required when called:    3
  8620 ;; This function calls:
  8621 ;;		Nothing
  8622 ;; This function is called by:
  8623 ;;		_main
  8624 ;;		_fround
  8625 ;;		_scale
  8626 ;;		_sprintf
  8627 ;; This function uses a non-reentrant model
  8628 ;;
  8629                           
  8630                           	psect	text12
  8631  0136F2                     __ptext12:
  8632                           	opt stack 0
  8633  0136F2                     ___flmul:
  8634                           	opt stack 27
  8635                           
  8636                           ;incstack = 0
  8637  0136F2  0100               	movlb	0	; () banked
  8638  0136F4  5183               	movf	(___flmul@b+3)& (0+255),w,b
  8639  0136F6  0B80               	andlw	128
  8640  0136F8  0100               	movlb	0	; () banked
  8641  0136FA  6F8C               	movwf	___flmul@sign& (0+255),b
  8642  0136FC  0100               	movlb	0	; () banked
  8643  0136FE  5183               	movf	(___flmul@b+3)& (0+255),w,b
  8644  013700  2583               	addwf	(___flmul@b+3)& (0+255),w,b
  8645  013702  0100               	movlb	0	; () banked
  8646  013704  6F92               	movwf	___flmul@bexp& (0+255),b
  8647                           
  8648                           ; BSR set to: 0
  8649  013706  0100               	movlb	0	; () banked
  8650  013708  AF82               	btfss	(___flmul@b+2)& (0+255),7,b
  8651  01370A  D002               	goto	l7560
  8652                           
  8653                           ; BSR set to: 0
  8654  01370C  0100               	movlb	0	; () banked
  8655  01370E  8192               	bsf	___flmul@bexp& (0+255),0,b
  8656  013710                     l7560:
  8657                           
  8658                           ; BSR set to: 0
  8659  013710  0100               	movlb	0	; () banked
  8660  013712  5192               	movf	___flmul@bexp& (0+255),w,b
  8661  013714  0100               	movlb	0	; () banked
  8662  013716  B4D8               	btfsc	status,2,c
  8663  013718  D010               	goto	l7568
  8664                           
  8665                           ; BSR set to: 0
  8666  01371A  0100               	movlb	0	; () banked
  8667  01371C  2992               	incf	___flmul@bexp& (0+255),w,b
  8668  01371E  A4D8               	btfss	status,2,c
  8669  013720  D009               	goto	l7566
  8670                           
  8671                           ; BSR set to: 0
  8672  013722  0E00               	movlw	0
  8673  013724  0100               	movlb	0	; () banked
  8674  013726  6F80               	movwf	___flmul@b& (0+255),b
  8675  013728  0E00               	movlw	0
  8676  01372A  6F81               	movwf	(___flmul@b+1)& (0+255),b
  8677  01372C  0E00               	movlw	0
  8678  01372E  6F82               	movwf	(___flmul@b+2)& (0+255),b
  8679  013730  0E00               	movlw	0
  8680  013732  6F83               	movwf	(___flmul@b+3)& (0+255),b
  8681  013734                     l7566:
  8682                           
  8683                           ; BSR set to: 0
  8684  013734  0100               	movlb	0	; () banked
  8685  013736  8F82               	bsf	(___flmul@b+2)& (0+255),7,b
  8686  013738  D009               	goto	l7570
  8687  01373A                     l7568:
  8688                           
  8689                           ; BSR set to: 0
  8690  01373A  0E00               	movlw	0
  8691  01373C  0100               	movlb	0	; () banked
  8692  01373E  6F80               	movwf	___flmul@b& (0+255),b
  8693  013740  0E00               	movlw	0
  8694  013742  6F81               	movwf	(___flmul@b+1)& (0+255),b
  8695  013744  0E00               	movlw	0
  8696  013746  6F82               	movwf	(___flmul@b+2)& (0+255),b
  8697  013748  0E00               	movlw	0
  8698  01374A  6F83               	movwf	(___flmul@b+3)& (0+255),b
  8699  01374C                     l7570:
  8700                           
  8701                           ; BSR set to: 0
  8702  01374C  0100               	movlb	0	; () banked
  8703  01374E  5187               	movf	(___flmul@a+3)& (0+255),w,b
  8704  013750  0B80               	andlw	128
  8705  013752  0100               	movlb	0	; () banked
  8706  013754  1B8C               	xorwf	___flmul@sign& (0+255),f,b
  8707                           
  8708                           ; BSR set to: 0
  8709  013756  0100               	movlb	0	; () banked
  8710  013758  5187               	movf	(___flmul@a+3)& (0+255),w,b
  8711  01375A  2587               	addwf	(___flmul@a+3)& (0+255),w,b
  8712  01375C  0100               	movlb	0	; () banked
  8713  01375E  6F8D               	movwf	___flmul@aexp& (0+255),b
  8714                           
  8715                           ; BSR set to: 0
  8716  013760  0100               	movlb	0	; () banked
  8717  013762  AF86               	btfss	(___flmul@a+2)& (0+255),7,b
  8718  013764  D002               	goto	l7578
  8719                           
  8720                           ; BSR set to: 0
  8721  013766  0100               	movlb	0	; () banked
  8722  013768  818D               	bsf	___flmul@aexp& (0+255),0,b
  8723  01376A                     l7578:
  8724                           
  8725                           ; BSR set to: 0
  8726  01376A  0100               	movlb	0	; () banked
  8727  01376C  518D               	movf	___flmul@aexp& (0+255),w,b
  8728  01376E  0100               	movlb	0	; () banked
  8729  013770  B4D8               	btfsc	status,2,c
  8730  013772  D010               	goto	l7586
  8731                           
  8732                           ; BSR set to: 0
  8733  013774  0100               	movlb	0	; () banked
  8734  013776  298D               	incf	___flmul@aexp& (0+255),w,b
  8735  013778  A4D8               	btfss	status,2,c
  8736  01377A  D009               	goto	l7584
  8737                           
  8738                           ; BSR set to: 0
  8739  01377C  0E00               	movlw	0
  8740  01377E  0100               	movlb	0	; () banked
  8741  013780  6F84               	movwf	___flmul@a& (0+255),b
  8742  013782  0E00               	movlw	0
  8743  013784  6F85               	movwf	(___flmul@a+1)& (0+255),b
  8744  013786  0E00               	movlw	0
  8745  013788  6F86               	movwf	(___flmul@a+2)& (0+255),b
  8746  01378A  0E00               	movlw	0
  8747  01378C  6F87               	movwf	(___flmul@a+3)& (0+255),b
  8748  01378E                     l7584:
  8749                           
  8750                           ; BSR set to: 0
  8751  01378E  0100               	movlb	0	; () banked
  8752  013790  8F86               	bsf	(___flmul@a+2)& (0+255),7,b
  8753  013792  D009               	goto	l1552
  8754  013794                     l7586:
  8755                           
  8756                           ; BSR set to: 0
  8757  013794  0E00               	movlw	0
  8758  013796  0100               	movlb	0	; () banked
  8759  013798  6F84               	movwf	___flmul@a& (0+255),b
  8760  01379A  0E00               	movlw	0
  8761  01379C  6F85               	movwf	(___flmul@a+1)& (0+255),b
  8762  01379E  0E00               	movlw	0
  8763  0137A0  6F86               	movwf	(___flmul@a+2)& (0+255),b
  8764  0137A2  0E00               	movlw	0
  8765  0137A4  6F87               	movwf	(___flmul@a+3)& (0+255),b
  8766  0137A6                     l1552:
  8767                           
  8768                           ; BSR set to: 0
  8769  0137A6  0100               	movlb	0	; () banked
  8770  0137A8  518D               	movf	___flmul@aexp& (0+255),w,b
  8771  0137AA  0100               	movlb	0	; () banked
  8772  0137AC  B4D8               	btfsc	status,2,c
  8773  0137AE  D005               	goto	l7590
  8774                           
  8775                           ; BSR set to: 0
  8776  0137B0  0100               	movlb	0	; () banked
  8777  0137B2  5192               	movf	___flmul@bexp& (0+255),w,b
  8778  0137B4  0100               	movlb	0	; () banked
  8779  0137B6  A4D8               	btfss	status,2,c
  8780  0137B8  D00A               	goto	l7594
  8781  0137BA                     l7590:
  8782                           
  8783                           ; BSR set to: 0
  8784  0137BA  0E00               	movlw	0
  8785  0137BC  0100               	movlb	0	; () banked
  8786  0137BE  6F80               	movwf	?___flmul& (0+255),b
  8787  0137C0  0E00               	movlw	0
  8788  0137C2  6F81               	movwf	(?___flmul+1)& (0+255),b
  8789  0137C4  0E00               	movlw	0
  8790  0137C6  6F82               	movwf	(?___flmul+2)& (0+255),b
  8791  0137C8  0E00               	movlw	0
  8792  0137CA  6F83               	movwf	(?___flmul+3)& (0+255),b
  8793                           
  8794                           ; BSR set to: 0
  8795  0137CC  0012               	return	
  8796  0137CE                     l7594:
  8797                           
  8798                           ; BSR set to: 0
  8799  0137CE  0100               	movlb	0	; () banked
  8800  0137D0  5186               	movf	(___flmul@a+2)& (0+255),w,b
  8801  0137D2  0100               	movlb	0	; () banked
  8802  0137D4  0380               	mulwf	___flmul@b& (0+255),b
  8803  0137D6  CFF3 F097          	movff	prodl,___flmul@temp
  8804  0137DA  CFF4 F098          	movff	prodh,___flmul@temp+1
  8805                           
  8806                           ; BSR set to: 0
  8807  0137DE  0100               	movlb	0	; () banked
  8808  0137E0  5197               	movf	___flmul@temp& (0+255),w,b
  8809  0137E2  0100               	movlb	0	; () banked
  8810  0137E4  6F8E               	movwf	___flmul@grs& (0+255),b
  8811  0137E6  6B8F               	clrf	(___flmul@grs+1)& (0+255),b
  8812  0137E8  6B90               	clrf	(___flmul@grs+2)& (0+255),b
  8813  0137EA  6B91               	clrf	(___flmul@grs+3)& (0+255),b
  8814                           
  8815                           ; BSR set to: 0
  8816  0137EC  0100               	movlb	0	; () banked
  8817  0137EE  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  8818  0137F0  0100               	movlb	0	; () banked
  8819  0137F2  6F93               	movwf	___flmul@prod& (0+255),b
  8820  0137F4  6B94               	clrf	(___flmul@prod+1)& (0+255),b
  8821  0137F6  6B95               	clrf	(___flmul@prod+2)& (0+255),b
  8822  0137F8  6B96               	clrf	(___flmul@prod+3)& (0+255),b
  8823  0137FA  0100               	movlb	0	; () banked
  8824  0137FC  5185               	movf	(___flmul@a+1)& (0+255),w,b
  8825  0137FE  0100               	movlb	0	; () banked
  8826  013800  0381               	mulwf	(___flmul@b+1)& (0+255),b
  8827  013802  CFF3 F097          	movff	prodl,___flmul@temp
  8828  013806  CFF4 F098          	movff	prodh,___flmul@temp+1
  8829                           
  8830                           ; BSR set to: 0
  8831  01380A  0100               	movlb	0	; () banked
  8832  01380C  5197               	movf	___flmul@temp& (0+255),w,b
  8833  01380E  0100               	movlb	0	; () banked
  8834  013810  278E               	addwf	___flmul@grs& (0+255),f,b
  8835  013812  0E00               	movlw	0
  8836  013814  238F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8837  013816  2390               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8838  013818  2391               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8839                           
  8840                           ; BSR set to: 0
  8841  01381A  0100               	movlb	0	; () banked
  8842  01381C  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  8843  01381E  0100               	movlb	0	; () banked
  8844  013820  2793               	addwf	___flmul@prod& (0+255),f,b
  8845  013822  0E00               	movlw	0
  8846  013824  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8847  013826  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8848  013828  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8849  01382A  0100               	movlb	0	; () banked
  8850  01382C  5184               	movf	___flmul@a& (0+255),w,b
  8851  01382E  0100               	movlb	0	; () banked
  8852  013830  0382               	mulwf	(___flmul@b+2)& (0+255),b
  8853  013832  CFF3 F097          	movff	prodl,___flmul@temp
  8854  013836  CFF4 F098          	movff	prodh,___flmul@temp+1
  8855                           
  8856                           ; BSR set to: 0
  8857  01383A  0100               	movlb	0	; () banked
  8858  01383C  5197               	movf	___flmul@temp& (0+255),w,b
  8859  01383E  0100               	movlb	0	; () banked
  8860  013840  278E               	addwf	___flmul@grs& (0+255),f,b
  8861  013842  0E00               	movlw	0
  8862  013844  238F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8863  013846  2390               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8864  013848  2391               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8865                           
  8866                           ; BSR set to: 0
  8867  01384A  0100               	movlb	0	; () banked
  8868  01384C  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  8869  01384E  0100               	movlb	0	; () banked
  8870  013850  2793               	addwf	___flmul@prod& (0+255),f,b
  8871  013852  0E00               	movlw	0
  8872  013854  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8873  013856  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8874  013858  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8875                           
  8876                           ; BSR set to: 0
  8877  01385A  C090  F091         	movff	___flmul@grs+2,___flmul@grs+3
  8878  01385E  C08F  F090         	movff	___flmul@grs+1,___flmul@grs+2
  8879  013862  C08E  F08F         	movff	___flmul@grs,___flmul@grs+1
  8880  013866  0100               	movlb	0	; () banked
  8881  013868  6B8E               	clrf	___flmul@grs& (0+255),b
  8882                           
  8883                           ; BSR set to: 0
  8884  01386A  0100               	movlb	0	; () banked
  8885  01386C  5184               	movf	___flmul@a& (0+255),w,b
  8886  01386E  0100               	movlb	0	; () banked
  8887  013870  0381               	mulwf	(___flmul@b+1)& (0+255),b
  8888  013872  CFF3 F097          	movff	prodl,___flmul@temp
  8889  013876  CFF4 F098          	movff	prodh,___flmul@temp+1
  8890                           
  8891                           ; BSR set to: 0
  8892  01387A  0100               	movlb	0	; () banked
  8893  01387C  5197               	movf	___flmul@temp& (0+255),w,b
  8894  01387E  0100               	movlb	0	; () banked
  8895  013880  278E               	addwf	___flmul@grs& (0+255),f,b
  8896  013882  0100               	movlb	0	; () banked
  8897  013884  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  8898  013886  0100               	movlb	0	; () banked
  8899  013888  238F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8900  01388A  0E00               	movlw	0
  8901  01388C  0100               	movlb	0	; () banked
  8902  01388E  2390               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8903  013890  0E00               	movlw	0
  8904  013892  0100               	movlb	0	; () banked
  8905  013894  2391               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8906                           
  8907                           ; BSR set to: 0
  8908  013896  0100               	movlb	0	; () banked
  8909  013898  5185               	movf	(___flmul@a+1)& (0+255),w,b
  8910  01389A  0100               	movlb	0	; () banked
  8911  01389C  0380               	mulwf	___flmul@b& (0+255),b
  8912  01389E  CFF3 F097          	movff	prodl,___flmul@temp
  8913  0138A2  CFF4 F098          	movff	prodh,___flmul@temp+1
  8914                           
  8915                           ; BSR set to: 0
  8916  0138A6  0100               	movlb	0	; () banked
  8917  0138A8  5197               	movf	___flmul@temp& (0+255),w,b
  8918  0138AA  0100               	movlb	0	; () banked
  8919  0138AC  278E               	addwf	___flmul@grs& (0+255),f,b
  8920  0138AE  0100               	movlb	0	; () banked
  8921  0138B0  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  8922  0138B2  0100               	movlb	0	; () banked
  8923  0138B4  238F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8924  0138B6  0E00               	movlw	0
  8925  0138B8  0100               	movlb	0	; () banked
  8926  0138BA  2390               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8927  0138BC  0E00               	movlw	0
  8928  0138BE  0100               	movlb	0	; () banked
  8929  0138C0  2391               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8930                           
  8931                           ; BSR set to: 0
  8932  0138C2  C090  F091         	movff	___flmul@grs+2,___flmul@grs+3
  8933  0138C6  C08F  F090         	movff	___flmul@grs+1,___flmul@grs+2
  8934  0138CA  C08E  F08F         	movff	___flmul@grs,___flmul@grs+1
  8935  0138CE  0100               	movlb	0	; () banked
  8936  0138D0  6B8E               	clrf	___flmul@grs& (0+255),b
  8937  0138D2  0100               	movlb	0	; () banked
  8938  0138D4  5184               	movf	___flmul@a& (0+255),w,b
  8939  0138D6  0100               	movlb	0	; () banked
  8940  0138D8  0380               	mulwf	___flmul@b& (0+255),b
  8941  0138DA  CFF3 F097          	movff	prodl,___flmul@temp
  8942  0138DE  CFF4 F098          	movff	prodh,___flmul@temp+1
  8943                           
  8944                           ; BSR set to: 0
  8945  0138E2  0100               	movlb	0	; () banked
  8946  0138E4  5197               	movf	___flmul@temp& (0+255),w,b
  8947  0138E6  0100               	movlb	0	; () banked
  8948  0138E8  278E               	addwf	___flmul@grs& (0+255),f,b
  8949  0138EA  0100               	movlb	0	; () banked
  8950  0138EC  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  8951  0138EE  0100               	movlb	0	; () banked
  8952  0138F0  238F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8953  0138F2  0E00               	movlw	0
  8954  0138F4  0100               	movlb	0	; () banked
  8955  0138F6  2390               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8956  0138F8  0E00               	movlw	0
  8957  0138FA  0100               	movlb	0	; () banked
  8958  0138FC  2391               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8959                           
  8960                           ; BSR set to: 0
  8961  0138FE  0100               	movlb	0	; () banked
  8962  013900  5186               	movf	(___flmul@a+2)& (0+255),w,b
  8963  013902  0100               	movlb	0	; () banked
  8964  013904  0381               	mulwf	(___flmul@b+1)& (0+255),b
  8965  013906  CFF3 F097          	movff	prodl,___flmul@temp
  8966  01390A  CFF4 F098          	movff	prodh,___flmul@temp+1
  8967  01390E  0100               	movlb	0	; () banked
  8968  013910  5197               	movf	___flmul@temp& (0+255),w,b
  8969  013912  0100               	movlb	0	; () banked
  8970  013914  2793               	addwf	___flmul@prod& (0+255),f,b
  8971  013916  0100               	movlb	0	; () banked
  8972  013918  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  8973  01391A  0100               	movlb	0	; () banked
  8974  01391C  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8975  01391E  0E00               	movlw	0
  8976  013920  0100               	movlb	0	; () banked
  8977  013922  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8978  013924  0E00               	movlw	0
  8979  013926  0100               	movlb	0	; () banked
  8980  013928  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8981                           
  8982                           ; BSR set to: 0
  8983  01392A  0100               	movlb	0	; () banked
  8984  01392C  5185               	movf	(___flmul@a+1)& (0+255),w,b
  8985  01392E  0100               	movlb	0	; () banked
  8986  013930  0382               	mulwf	(___flmul@b+2)& (0+255),b
  8987  013932  CFF3 F097          	movff	prodl,___flmul@temp
  8988  013936  CFF4 F098          	movff	prodh,___flmul@temp+1
  8989                           
  8990                           ; BSR set to: 0
  8991  01393A  0100               	movlb	0	; () banked
  8992  01393C  5197               	movf	___flmul@temp& (0+255),w,b
  8993  01393E  0100               	movlb	0	; () banked
  8994  013940  2793               	addwf	___flmul@prod& (0+255),f,b
  8995  013942  0100               	movlb	0	; () banked
  8996  013944  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  8997  013946  0100               	movlb	0	; () banked
  8998  013948  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8999  01394A  0E00               	movlw	0
  9000  01394C  0100               	movlb	0	; () banked
  9001  01394E  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9002  013950  0E00               	movlw	0
  9003  013952  0100               	movlb	0	; () banked
  9004  013954  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9005  013956  0100               	movlb	0	; () banked
  9006  013958  5186               	movf	(___flmul@a+2)& (0+255),w,b
  9007  01395A  0100               	movlb	0	; () banked
  9008  01395C  0382               	mulwf	(___flmul@b+2)& (0+255),b
  9009  01395E  CFF3 F097          	movff	prodl,___flmul@temp
  9010  013962  CFF4 F098          	movff	prodh,___flmul@temp+1
  9011                           
  9012                           ; BSR set to: 0
  9013  013966  0100               	movlb	0	; () banked
  9014  013968  5197               	movf	___flmul@temp& (0+255),w,b
  9015  01396A  0100               	movlb	0	; () banked
  9016  01396C  6F88               	movwf	??___flmul& (0+255),b
  9017  01396E  0100               	movlb	0	; () banked
  9018  013970  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  9019  013972  0100               	movlb	0	; () banked
  9020  013974  6F89               	movwf	(??___flmul+1)& (0+255),b
  9021  013976  0100               	movlb	0	; () banked
  9022  013978  6B8A               	clrf	(??___flmul+2)& (0+255),b
  9023  01397A  0100               	movlb	0	; () banked
  9024  01397C  6B8B               	clrf	(??___flmul+3)& (0+255),b
  9025  01397E  C08A  F08B         	movff	??___flmul+2,??___flmul+3
  9026  013982  C089  F08A         	movff	??___flmul+1,??___flmul+2
  9027  013986  C088  F089         	movff	??___flmul,??___flmul+1
  9028  01398A  0100               	movlb	0	; () banked
  9029  01398C  6B88               	clrf	??___flmul& (0+255),b
  9030  01398E  0100               	movlb	0	; () banked
  9031  013990  5188               	movf	??___flmul& (0+255),w,b
  9032  013992  0100               	movlb	0	; () banked
  9033  013994  2793               	addwf	___flmul@prod& (0+255),f,b
  9034  013996  0100               	movlb	0	; () banked
  9035  013998  5189               	movf	(??___flmul+1)& (0+255),w,b
  9036  01399A  0100               	movlb	0	; () banked
  9037  01399C  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9038  01399E  0100               	movlb	0	; () banked
  9039  0139A0  518A               	movf	(??___flmul+2)& (0+255),w,b
  9040  0139A2  0100               	movlb	0	; () banked
  9041  0139A4  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9042  0139A6  0100               	movlb	0	; () banked
  9043  0139A8  518B               	movf	(??___flmul+3)& (0+255),w,b
  9044  0139AA  0100               	movlb	0	; () banked
  9045  0139AC  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9046                           
  9047                           ; BSR set to: 0
  9048  0139AE  C08E  F088         	movff	___flmul@grs,??___flmul
  9049  0139B2  C08F  F089         	movff	___flmul@grs+1,??___flmul+1
  9050  0139B6  C090  F08A         	movff	___flmul@grs+2,??___flmul+2
  9051  0139BA  C091  F08B         	movff	___flmul@grs+3,??___flmul+3
  9052  0139BE  0E19               	movlw	25
  9053  0139C0  D006               	goto	u10080
  9054  0139C2                     u10085:
  9055  0139C2  0100               	movlb	0	; () banked
  9056  0139C4  90D8               	bcf	status,0,c
  9057  0139C6  338B               	rrcf	(??___flmul+3)& (0+255),f,b
  9058  0139C8  338A               	rrcf	(??___flmul+2)& (0+255),f,b
  9059  0139CA  3389               	rrcf	(??___flmul+1)& (0+255),f,b
  9060  0139CC  3388               	rrcf	??___flmul& (0+255),f,b
  9061  0139CE                     u10080:
  9062  0139CE  2EE8               	decfsz	wreg,f,c
  9063  0139D0  D7F8               	goto	u10085
  9064  0139D2  0100               	movlb	0	; () banked
  9065  0139D4  5188               	movf	??___flmul& (0+255),w,b
  9066  0139D6  0100               	movlb	0	; () banked
  9067  0139D8  2793               	addwf	___flmul@prod& (0+255),f,b
  9068  0139DA  0100               	movlb	0	; () banked
  9069  0139DC  5189               	movf	(??___flmul+1)& (0+255),w,b
  9070  0139DE  0100               	movlb	0	; () banked
  9071  0139E0  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9072  0139E2  0100               	movlb	0	; () banked
  9073  0139E4  518A               	movf	(??___flmul+2)& (0+255),w,b
  9074  0139E6  0100               	movlb	0	; () banked
  9075  0139E8  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9076  0139EA  0100               	movlb	0	; () banked
  9077  0139EC  518B               	movf	(??___flmul+3)& (0+255),w,b
  9078  0139EE  0100               	movlb	0	; () banked
  9079  0139F0  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9080                           
  9081                           ; BSR set to: 0
  9082  0139F2  C090  F091         	movff	___flmul@grs+2,___flmul@grs+3
  9083  0139F6  C08F  F090         	movff	___flmul@grs+1,___flmul@grs+2
  9084  0139FA  C08E  F08F         	movff	___flmul@grs,___flmul@grs+1
  9085  0139FE  0100               	movlb	0	; () banked
  9086  013A00  6B8E               	clrf	___flmul@grs& (0+255),b
  9087                           
  9088                           ; BSR set to: 0
  9089  013A02  0100               	movlb	0	; () banked
  9090  013A04  518D               	movf	___flmul@aexp& (0+255),w,b
  9091  013A06  C092  F088         	movff	___flmul@bexp,??___flmul
  9092  013A0A  0100               	movlb	0	; () banked
  9093  013A0C  6B89               	clrf	(??___flmul+1)& (0+255),b
  9094  013A0E  0100               	movlb	0	; () banked
  9095  013A10  2788               	addwf	??___flmul& (0+255),f,b
  9096  013A12  0E00               	movlw	0
  9097  013A14  2389               	addwfc	(??___flmul+1)& (0+255),f,b
  9098  013A16  0E82               	movlw	130
  9099  013A18  0100               	movlb	0	; () banked
  9100  013A1A  2588               	addwf	??___flmul& (0+255),w,b
  9101  013A1C  0100               	movlb	0	; () banked
  9102  013A1E  6F97               	movwf	___flmul@temp& (0+255),b
  9103  013A20  0EFF               	movlw	255
  9104  013A22  0100               	movlb	0	; () banked
  9105  013A24  2189               	addwfc	(??___flmul+1)& (0+255),w,b
  9106  013A26  0100               	movlb	0	; () banked
  9107  013A28  6F98               	movwf	(___flmul@temp+1)& (0+255),b
  9108  013A2A  D015               	goto	l7642
  9109  013A2C                     l7636:
  9110                           
  9111                           ; BSR set to: 0
  9112  013A2C  0100               	movlb	0	; () banked
  9113  013A2E  90D8               	bcf	status,0,c
  9114  013A30  3793               	rlcf	___flmul@prod& (0+255),f,b
  9115  013A32  3794               	rlcf	(___flmul@prod+1)& (0+255),f,b
  9116  013A34  3795               	rlcf	(___flmul@prod+2)& (0+255),f,b
  9117  013A36  3796               	rlcf	(___flmul@prod+3)& (0+255),f,b
  9118                           
  9119                           ; BSR set to: 0
  9120  013A38  0100               	movlb	0	; () banked
  9121  013A3A  AF91               	btfss	(___flmul@grs+3)& (0+255),7,b
  9122  013A3C  D002               	goto	l1559
  9123                           
  9124                           ; BSR set to: 0
  9125  013A3E  0100               	movlb	0	; () banked
  9126  013A40  8193               	bsf	___flmul@prod& (0+255),0,b
  9127  013A42                     l1559:
  9128                           
  9129                           ; BSR set to: 0
  9130  013A42  0100               	movlb	0	; () banked
  9131  013A44  90D8               	bcf	status,0,c
  9132  013A46  378E               	rlcf	___flmul@grs& (0+255),f,b
  9133  013A48  378F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  9134  013A4A  3790               	rlcf	(___flmul@grs+2)& (0+255),f,b
  9135  013A4C  3791               	rlcf	(___flmul@grs+3)& (0+255),f,b
  9136  013A4E  0100               	movlb	0	; () banked
  9137  013A50  0797               	decf	___flmul@temp& (0+255),f,b
  9138  013A52  A0D8               	btfss	status,0,c
  9139  013A54  0798               	decf	(___flmul@temp+1)& (0+255),f,b
  9140  013A56                     l7642:
  9141                           
  9142                           ; BSR set to: 0
  9143  013A56  0100               	movlb	0	; () banked
  9144  013A58  AF95               	btfss	(___flmul@prod+2)& (0+255),7,b
  9145  013A5A  D7E8               	goto	l7636
  9146                           
  9147                           ; BSR set to: 0
  9148                           
  9149                           ; BSR set to: 0
  9150  013A5C  0E00               	movlw	0
  9151  013A5E  0100               	movlb	0	; () banked
  9152  013A60  6F8D               	movwf	___flmul@aexp& (0+255),b
  9153                           
  9154                           ; BSR set to: 0
  9155  013A62  0100               	movlb	0	; () banked
  9156  013A64  AF91               	btfss	(___flmul@grs+3)& (0+255),7,b
  9157  013A66  D024               	goto	l1561
  9158                           
  9159                           ; BSR set to: 0
  9160  013A68  0EFF               	movlw	255
  9161  013A6A  0100               	movlb	0	; () banked
  9162  013A6C  158E               	andwf	___flmul@grs& (0+255),w,b
  9163  013A6E  0100               	movlb	0	; () banked
  9164  013A70  6F88               	movwf	??___flmul& (0+255),b
  9165  013A72  0EFF               	movlw	255
  9166  013A74  0100               	movlb	0	; () banked
  9167  013A76  158F               	andwf	(___flmul@grs+1)& (0+255),w,b
  9168  013A78  0100               	movlb	0	; () banked
  9169  013A7A  6F89               	movwf	(??___flmul+1)& (0+255),b
  9170  013A7C  0EFF               	movlw	255
  9171  013A7E  0100               	movlb	0	; () banked
  9172  013A80  1590               	andwf	(___flmul@grs+2)& (0+255),w,b
  9173  013A82  0100               	movlb	0	; () banked
  9174  013A84  6F8A               	movwf	(??___flmul+2)& (0+255),b
  9175  013A86  0E7F               	movlw	127
  9176  013A88  0100               	movlb	0	; () banked
  9177  013A8A  1591               	andwf	(___flmul@grs+3)& (0+255),w,b
  9178  013A8C  0100               	movlb	0	; () banked
  9179  013A8E  6F8B               	movwf	(??___flmul+3)& (0+255),b
  9180  013A90  0100               	movlb	0	; () banked
  9181  013A92  5188               	movf	??___flmul& (0+255),w,b
  9182  013A94  0100               	movlb	0	; () banked
  9183  013A96  1189               	iorwf	(??___flmul+1)& (0+255),w,b
  9184  013A98  0100               	movlb	0	; () banked
  9185  013A9A  118A               	iorwf	(??___flmul+2)& (0+255),w,b
  9186  013A9C  0100               	movlb	0	; () banked
  9187  013A9E  118B               	iorwf	(??___flmul+3)& (0+255),w,b
  9188  013AA0  A4D8               	btfss	status,2,c
  9189  013AA2  D003               	goto	l7652
  9190                           
  9191                           ; BSR set to: 0
  9192                           
  9193                           ; BSR set to: 0
  9194  013AA4  0100               	movlb	0	; () banked
  9195  013AA6  A193               	btfss	___flmul@prod& (0+255),0,b
  9196  013AA8  D003               	goto	l1561
  9197  013AAA                     l7652:
  9198                           
  9199                           ; BSR set to: 0
  9200  013AAA  0E01               	movlw	1
  9201  013AAC  0100               	movlb	0	; () banked
  9202  013AAE  6F8D               	movwf	___flmul@aexp& (0+255),b
  9203  013AB0                     l1561:
  9204                           
  9205                           ; BSR set to: 0
  9206  013AB0  0100               	movlb	0	; () banked
  9207  013AB2  518D               	movf	___flmul@aexp& (0+255),w,b
  9208  013AB4  0100               	movlb	0	; () banked
  9209  013AB6  B4D8               	btfsc	status,2,c
  9210  013AB8  D023               	goto	l7662
  9211                           
  9212                           ; BSR set to: 0
  9213  013ABA  0E01               	movlw	1
  9214  013ABC  0100               	movlb	0	; () banked
  9215  013ABE  2793               	addwf	___flmul@prod& (0+255),f,b
  9216  013AC0  0E00               	movlw	0
  9217  013AC2  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9218  013AC4  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9219  013AC6  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9220                           
  9221                           ; BSR set to: 0
  9222  013AC8  0100               	movlb	0	; () banked
  9223  013ACA  A196               	btfss	(___flmul@prod+3)& (0+255),0,b
  9224  013ACC  D019               	goto	l7662
  9225                           
  9226                           ; BSR set to: 0
  9227  013ACE  C093  F088         	movff	___flmul@prod,??___flmul
  9228  013AD2  C094  F089         	movff	___flmul@prod+1,??___flmul+1
  9229  013AD6  C095  F08A         	movff	___flmul@prod+2,??___flmul+2
  9230  013ADA  C096  F08B         	movff	___flmul@prod+3,??___flmul+3
  9231  013ADE  0100               	movlb	0	; () banked
  9232  013AE0  358B               	rlcf	(??___flmul+3)& (0+255),w,b
  9233  013AE2  338B               	rrcf	(??___flmul+3)& (0+255),f,b
  9234  013AE4  338A               	rrcf	(??___flmul+2)& (0+255),f,b
  9235  013AE6  3389               	rrcf	(??___flmul+1)& (0+255),f,b
  9236  013AE8  3388               	rrcf	??___flmul& (0+255),f,b
  9237  013AEA  C088  F093         	movff	??___flmul,___flmul@prod
  9238  013AEE  C089  F094         	movff	??___flmul+1,___flmul@prod+1
  9239  013AF2  C08A  F095         	movff	??___flmul+2,___flmul@prod+2
  9240  013AF6  C08B  F096         	movff	??___flmul+3,___flmul@prod+3
  9241                           
  9242                           ; BSR set to: 0
  9243  013AFA  0100               	movlb	0	; () banked
  9244  013AFC  4B97               	infsnz	___flmul@temp& (0+255),f,b
  9245  013AFE  2B98               	incf	(___flmul@temp+1)& (0+255),f,b
  9246  013B00                     l7662:
  9247                           
  9248                           ; BSR set to: 0
  9249  013B00  0100               	movlb	0	; () banked
  9250  013B02  BF98               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9251  013B04  D010               	goto	l7666
  9252  013B06  0100               	movlb	0	; () banked
  9253  013B08  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  9254  013B0A  E104               	bnz	u10160
  9255  013B0C  0100               	movlb	0	; () banked
  9256  013B0E  2997               	incf	___flmul@temp& (0+255),w,b
  9257  013B10  A0D8               	btfss	status,0,c
  9258  013B12  D009               	goto	l7666
  9259  013B14                     u10160:
  9260                           
  9261                           ; BSR set to: 0
  9262  013B14  0E00               	movlw	0
  9263  013B16  0100               	movlb	0	; () banked
  9264  013B18  6F93               	movwf	___flmul@prod& (0+255),b
  9265  013B1A  0E00               	movlw	0
  9266  013B1C  6F94               	movwf	(___flmul@prod+1)& (0+255),b
  9267  013B1E  0E80               	movlw	128
  9268  013B20  6F95               	movwf	(___flmul@prod+2)& (0+255),b
  9269  013B22  0E7F               	movlw	127
  9270  013B24  D02B               	goto	L8
  9271  013B26                     l7666:
  9272                           
  9273                           ; BSR set to: 0
  9274  013B26  0100               	movlb	0	; () banked
  9275  013B28  BF98               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9276  013B2A  D007               	goto	l7668
  9277  013B2C  0100               	movlb	0	; () banked
  9278  013B2E  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  9279  013B30  E111               	bnz	l1569
  9280  013B32  0100               	movlb	0	; () banked
  9281  013B34  0597               	decf	___flmul@temp& (0+255),w,b
  9282  013B36  B0D8               	btfsc	status,0,c
  9283  013B38  D00D               	goto	l1569
  9284  013B3A                     l7668:
  9285                           
  9286                           ; BSR set to: 0
  9287  013B3A  0E00               	movlw	0
  9288  013B3C  0100               	movlb	0	; () banked
  9289  013B3E  6F93               	movwf	___flmul@prod& (0+255),b
  9290  013B40  0E00               	movlw	0
  9291  013B42  6F94               	movwf	(___flmul@prod+1)& (0+255),b
  9292  013B44  0E00               	movlw	0
  9293  013B46  6F95               	movwf	(___flmul@prod+2)& (0+255),b
  9294  013B48  0E00               	movlw	0
  9295  013B4A  6F96               	movwf	(___flmul@prod+3)& (0+255),b
  9296  013B4C  0E00               	movlw	0
  9297  013B4E  0100               	movlb	0	; () banked
  9298  013B50  6F8C               	movwf	___flmul@sign& (0+255),b
  9299  013B52  D015               	goto	l7678
  9300  013B54                     l1569:
  9301                           
  9302                           ; BSR set to: 0
  9303  013B54  C097  F092         	movff	___flmul@temp,___flmul@bexp
  9304                           
  9305                           ; BSR set to: 0
  9306  013B58  0EFF               	movlw	255
  9307  013B5A  0100               	movlb	0	; () banked
  9308  013B5C  1793               	andwf	___flmul@prod& (0+255),f,b
  9309  013B5E  0EFF               	movlw	255
  9310  013B60  1794               	andwf	(___flmul@prod+1)& (0+255),f,b
  9311  013B62  0E7F               	movlw	127
  9312  013B64  1795               	andwf	(___flmul@prod+2)& (0+255),f,b
  9313  013B66  0E00               	movlw	0
  9314  013B68  1796               	andwf	(___flmul@prod+3)& (0+255),f,b
  9315                           
  9316                           ; BSR set to: 0
  9317  013B6A  0100               	movlb	0	; () banked
  9318  013B6C  A192               	btfss	___flmul@bexp& (0+255),0,b
  9319  013B6E  D002               	goto	l7676
  9320                           
  9321                           ; BSR set to: 0
  9322  013B70  0100               	movlb	0	; () banked
  9323  013B72  8F95               	bsf	(___flmul@prod+2)& (0+255),7,b
  9324  013B74                     l7676:
  9325                           
  9326                           ; BSR set to: 0
  9327  013B74  0100               	movlb	0	; () banked
  9328  013B76  90D8               	bcf	status,0,c
  9329  013B78  3192               	rrcf	___flmul@bexp& (0+255),w,b
  9330  013B7A  0100               	movlb	0	; () banked
  9331  013B7C                     L8:
  9332  013B7C  6F96               	movwf	(___flmul@prod+3)& (0+255),b
  9333  013B7E                     l7678:
  9334                           
  9335                           ; BSR set to: 0
  9336  013B7E  0100               	movlb	0	; () banked
  9337  013B80  518C               	movf	___flmul@sign& (0+255),w,b
  9338  013B82  0100               	movlb	0	; () banked
  9339  013B84  1396               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9340                           
  9341                           ; BSR set to: 0
  9342  013B86  C093  F080         	movff	___flmul@prod,?___flmul
  9343  013B8A  C094  F081         	movff	___flmul@prod+1,?___flmul+1
  9344  013B8E  C095  F082         	movff	___flmul@prod+2,?___flmul+2
  9345  013B92  C096  F083         	movff	___flmul@prod+3,?___flmul+3
  9346  013B96  0012               	return	
  9347  013B98                     __end_of___flmul:
  9348                           	opt stack 0
  9349                           tblptru	equ	0xFF8
  9350                           tblptrh	equ	0xFF7
  9351                           tblptrl	equ	0xFF6
  9352                           tablat	equ	0xFF5
  9353                           prodh	equ	0xFF4
  9354                           prodl	equ	0xFF3
  9355                           intcon	equ	0xFF2
  9356                           postinc0	equ	0xFEE
  9357                           wreg	equ	0xFE8
  9358                           indf2	equ	0xFDF
  9359                           postinc2	equ	0xFDE
  9360                           fsr2h	equ	0xFDA
  9361                           fsr2l	equ	0xFD9
  9362                           status	equ	0xFD8
  9363                           
  9364 ;; *************** function ___awmod *****************
  9365 ;; Defined at:
  9366 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  9367 ;; Parameters:    Size  Location     Type
  9368 ;;  dividend        2   18[BANK0 ] int 
  9369 ;;  divisor         2   20[BANK0 ] int 
  9370 ;; Auto vars:     Size  Location     Type
  9371 ;;  sign            1   23[BANK0 ] unsigned char 
  9372 ;;  counter         1   22[BANK0 ] unsigned char 
  9373 ;; Return value:  Size  Location     Type
  9374 ;;                  2   18[BANK0 ] int 
  9375 ;; Registers used:
  9376 ;;		wreg, status,2, status,0
  9377 ;; Tracked objects:
  9378 ;;		On entry : 0/0
  9379 ;;		On exit  : 0/0
  9380 ;;		Unchanged: 0/0
  9381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9382 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9383 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9385 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9386 ;;Total ram usage:        6 bytes
  9387 ;; Hardware stack levels used:    1
  9388 ;; Hardware stack levels required when called:    3
  9389 ;; This function calls:
  9390 ;;		Nothing
  9391 ;; This function is called by:
  9392 ;;		_fround
  9393 ;;		_scale
  9394 ;; This function uses a non-reentrant model
  9395 ;;
  9396                           
  9397                           	psect	text13
  9398  015844                     __ptext13:
  9399                           	opt stack 0
  9400  015844                     ___awmod:
  9401                           	opt stack 24
  9402                           
  9403                           ; BSR set to: 0
  9404                           ;incstack = 0
  9405  015844  0E00               	movlw	0
  9406  015846  0100               	movlb	0	; () banked
  9407  015848  6F77               	movwf	___awmod@sign& (0+255),b
  9408                           
  9409                           ; BSR set to: 0
  9410  01584A  0100               	movlb	0	; () banked
  9411  01584C  AF73               	btfss	(___awmod@dividend+1)& (0+255),7,b
  9412  01584E  D008               	goto	l7736
  9413                           
  9414                           ; BSR set to: 0
  9415  015850  0100               	movlb	0	; () banked
  9416  015852  6D72               	negf	___awmod@dividend& (0+255),b
  9417  015854  1F73               	comf	(___awmod@dividend+1)& (0+255),f,b
  9418  015856  B0D8               	btfsc	status,0,c
  9419  015858  2B73               	incf	(___awmod@dividend+1)& (0+255),f,b
  9420                           
  9421                           ; BSR set to: 0
  9422  01585A  0E01               	movlw	1
  9423  01585C  0100               	movlb	0	; () banked
  9424  01585E  6F77               	movwf	___awmod@sign& (0+255),b
  9425  015860                     l7736:
  9426                           
  9427                           ; BSR set to: 0
  9428  015860  0100               	movlb	0	; () banked
  9429  015862  AF75               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9430  015864  D005               	goto	l7740
  9431                           
  9432                           ; BSR set to: 0
  9433  015866  0100               	movlb	0	; () banked
  9434  015868  6D74               	negf	___awmod@divisor& (0+255),b
  9435  01586A  1F75               	comf	(___awmod@divisor+1)& (0+255),f,b
  9436  01586C  B0D8               	btfsc	status,0,c
  9437  01586E  2B75               	incf	(___awmod@divisor+1)& (0+255),f,b
  9438  015870                     l7740:
  9439                           
  9440                           ; BSR set to: 0
  9441  015870  0100               	movlb	0	; () banked
  9442  015872  5174               	movf	___awmod@divisor& (0+255),w,b
  9443  015874  0100               	movlb	0	; () banked
  9444  015876  1175               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  9445  015878  B4D8               	btfsc	status,2,c
  9446  01587A  D026               	goto	l7756
  9447                           
  9448                           ; BSR set to: 0
  9449  01587C  0E01               	movlw	1
  9450  01587E  0100               	movlb	0	; () banked
  9451  015880  6F76               	movwf	___awmod@counter& (0+255),b
  9452  015882  D006               	goto	l7746
  9453  015884                     l7744:
  9454                           
  9455                           ; BSR set to: 0
  9456  015884  0100               	movlb	0	; () banked
  9457  015886  90D8               	bcf	status,0,c
  9458  015888  3774               	rlcf	___awmod@divisor& (0+255),f,b
  9459  01588A  3775               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  9460  01588C  0100               	movlb	0	; () banked
  9461  01588E  2B76               	incf	___awmod@counter& (0+255),f,b
  9462  015890                     l7746:
  9463                           
  9464                           ; BSR set to: 0
  9465  015890  0100               	movlb	0	; () banked
  9466  015892  AF75               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9467  015894  D7F7               	goto	l7744
  9468  015896                     l7748:
  9469                           
  9470                           ; BSR set to: 0
  9471  015896  0100               	movlb	0	; () banked
  9472  015898  5174               	movf	___awmod@divisor& (0+255),w,b
  9473  01589A  0100               	movlb	0	; () banked
  9474  01589C  5D72               	subwf	___awmod@dividend& (0+255),w,b
  9475  01589E  0100               	movlb	0	; () banked
  9476  0158A0  5175               	movf	(___awmod@divisor+1)& (0+255),w,b
  9477  0158A2  0100               	movlb	0	; () banked
  9478  0158A4  5973               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  9479  0158A6  A0D8               	btfss	status,0,c
  9480  0158A8  D008               	goto	l7752
  9481                           
  9482                           ; BSR set to: 0
  9483  0158AA  0100               	movlb	0	; () banked
  9484  0158AC  5174               	movf	___awmod@divisor& (0+255),w,b
  9485  0158AE  0100               	movlb	0	; () banked
  9486  0158B0  5F72               	subwf	___awmod@dividend& (0+255),f,b
  9487  0158B2  0100               	movlb	0	; () banked
  9488  0158B4  5175               	movf	(___awmod@divisor+1)& (0+255),w,b
  9489  0158B6  0100               	movlb	0	; () banked
  9490  0158B8  5B73               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  9491  0158BA                     l7752:
  9492                           
  9493                           ; BSR set to: 0
  9494  0158BA  0100               	movlb	0	; () banked
  9495  0158BC  90D8               	bcf	status,0,c
  9496  0158BE  3375               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  9497  0158C0  3374               	rrcf	___awmod@divisor& (0+255),f,b
  9498                           
  9499                           ; BSR set to: 0
  9500  0158C2  0100               	movlb	0	; () banked
  9501  0158C4  2F76               	decfsz	___awmod@counter& (0+255),f,b
  9502  0158C6  D7E7               	goto	l7748
  9503  0158C8                     l7756:
  9504                           
  9505                           ; BSR set to: 0
  9506  0158C8  0100               	movlb	0	; () banked
  9507  0158CA  5177               	movf	___awmod@sign& (0+255),w,b
  9508  0158CC  0100               	movlb	0	; () banked
  9509  0158CE  B4D8               	btfsc	status,2,c
  9510  0158D0  D005               	goto	l7760
  9511                           
  9512                           ; BSR set to: 0
  9513  0158D2  0100               	movlb	0	; () banked
  9514  0158D4  6D72               	negf	___awmod@dividend& (0+255),b
  9515  0158D6  1F73               	comf	(___awmod@dividend+1)& (0+255),f,b
  9516  0158D8  B0D8               	btfsc	status,0,c
  9517  0158DA  2B73               	incf	(___awmod@dividend+1)& (0+255),f,b
  9518  0158DC                     l7760:
  9519                           
  9520                           ; BSR set to: 0
  9521  0158DC  C072  F072         	movff	___awmod@dividend,?___awmod
  9522  0158E0  C073  F073         	movff	___awmod@dividend+1,?___awmod+1
  9523  0158E4  0012               	return	
  9524  0158E6                     __end_of___awmod:
  9525                           	opt stack 0
  9526                           tblptru	equ	0xFF8
  9527                           tblptrh	equ	0xFF7
  9528                           tblptrl	equ	0xFF6
  9529                           tablat	equ	0xFF5
  9530                           prodh	equ	0xFF4
  9531                           prodl	equ	0xFF3
  9532                           intcon	equ	0xFF2
  9533                           postinc0	equ	0xFEE
  9534                           wreg	equ	0xFE8
  9535                           indf2	equ	0xFDF
  9536                           postinc2	equ	0xFDE
  9537                           fsr2h	equ	0xFDA
  9538                           fsr2l	equ	0xFD9
  9539                           status	equ	0xFD8
  9540                           
  9541 ;; *************** function ___awdiv *****************
  9542 ;; Defined at:
  9543 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  9544 ;; Parameters:    Size  Location     Type
  9545 ;;  dividend        2   24[BANK0 ] int 
  9546 ;;  divisor         2   26[BANK0 ] int 
  9547 ;; Auto vars:     Size  Location     Type
  9548 ;;  quotient        2   30[BANK0 ] int 
  9549 ;;  sign            1   29[BANK0 ] unsigned char 
  9550 ;;  counter         1   28[BANK0 ] unsigned char 
  9551 ;; Return value:  Size  Location     Type
  9552 ;;                  2   24[BANK0 ] int 
  9553 ;; Registers used:
  9554 ;;		wreg, status,2, status,0
  9555 ;; Tracked objects:
  9556 ;;		On entry : 0/0
  9557 ;;		On exit  : 0/0
  9558 ;;		Unchanged: 0/0
  9559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9560 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9561 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9563 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9564 ;;Total ram usage:        8 bytes
  9565 ;; Hardware stack levels used:    1
  9566 ;; Hardware stack levels required when called:    3
  9567 ;; This function calls:
  9568 ;;		Nothing
  9569 ;; This function is called by:
  9570 ;;		_fround
  9571 ;;		_scale
  9572 ;;		_sprintf
  9573 ;; This function uses a non-reentrant model
  9574 ;;
  9575                           
  9576                           	psect	text14
  9577  0154C2                     __ptext14:
  9578                           	opt stack 0
  9579  0154C2                     ___awdiv:
  9580                           	opt stack 24
  9581                           
  9582                           ; BSR set to: 0
  9583                           ;incstack = 0
  9584  0154C2  0E00               	movlw	0
  9585  0154C4  0100               	movlb	0	; () banked
  9586  0154C6  6F7D               	movwf	___awdiv@sign& (0+255),b
  9587                           
  9588                           ; BSR set to: 0
  9589  0154C8  0100               	movlb	0	; () banked
  9590  0154CA  AF7B               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9591  0154CC  D008               	goto	l7692
  9592                           
  9593                           ; BSR set to: 0
  9594  0154CE  0100               	movlb	0	; () banked
  9595  0154D0  6D7A               	negf	___awdiv@divisor& (0+255),b
  9596  0154D2  1F7B               	comf	(___awdiv@divisor+1)& (0+255),f,b
  9597  0154D4  B0D8               	btfsc	status,0,c
  9598  0154D6  2B7B               	incf	(___awdiv@divisor+1)& (0+255),f,b
  9599                           
  9600                           ; BSR set to: 0
  9601  0154D8  0E01               	movlw	1
  9602  0154DA  0100               	movlb	0	; () banked
  9603  0154DC  6F7D               	movwf	___awdiv@sign& (0+255),b
  9604  0154DE                     l7692:
  9605                           
  9606                           ; BSR set to: 0
  9607  0154DE  0100               	movlb	0	; () banked
  9608  0154E0  AF79               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  9609  0154E2  D008               	goto	l7698
  9610                           
  9611                           ; BSR set to: 0
  9612  0154E4  0100               	movlb	0	; () banked
  9613  0154E6  6D78               	negf	___awdiv@dividend& (0+255),b
  9614  0154E8  1F79               	comf	(___awdiv@dividend+1)& (0+255),f,b
  9615  0154EA  B0D8               	btfsc	status,0,c
  9616  0154EC  2B79               	incf	(___awdiv@dividend+1)& (0+255),f,b
  9617                           
  9618                           ; BSR set to: 0
  9619  0154EE  0E01               	movlw	1
  9620  0154F0  0100               	movlb	0	; () banked
  9621  0154F2  1B7D               	xorwf	___awdiv@sign& (0+255),f,b
  9622  0154F4                     l7698:
  9623                           
  9624                           ; BSR set to: 0
  9625  0154F4  0E00               	movlw	0
  9626  0154F6  0100               	movlb	0	; () banked
  9627  0154F8  6F7F               	movwf	(___awdiv@quotient+1)& (0+255),b
  9628  0154FA  0E00               	movlw	0
  9629  0154FC  6F7E               	movwf	___awdiv@quotient& (0+255),b
  9630                           
  9631                           ; BSR set to: 0
  9632  0154FE  0100               	movlb	0	; () banked
  9633  015500  517A               	movf	___awdiv@divisor& (0+255),w,b
  9634  015502  0100               	movlb	0	; () banked
  9635  015504  117B               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  9636  015506  B4D8               	btfsc	status,2,c
  9637  015508  D02C               	goto	l7720
  9638                           
  9639                           ; BSR set to: 0
  9640  01550A  0E01               	movlw	1
  9641  01550C  0100               	movlb	0	; () banked
  9642  01550E  6F7C               	movwf	___awdiv@counter& (0+255),b
  9643  015510  D006               	goto	l7706
  9644  015512                     l7704:
  9645                           
  9646                           ; BSR set to: 0
  9647  015512  0100               	movlb	0	; () banked
  9648  015514  90D8               	bcf	status,0,c
  9649  015516  377A               	rlcf	___awdiv@divisor& (0+255),f,b
  9650  015518  377B               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  9651  01551A  0100               	movlb	0	; () banked
  9652  01551C  2B7C               	incf	___awdiv@counter& (0+255),f,b
  9653  01551E                     l7706:
  9654                           
  9655                           ; BSR set to: 0
  9656  01551E  0100               	movlb	0	; () banked
  9657  015520  AF7B               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9658  015522  D7F7               	goto	l7704
  9659  015524                     l7708:
  9660                           
  9661                           ; BSR set to: 0
  9662  015524  0100               	movlb	0	; () banked
  9663  015526  90D8               	bcf	status,0,c
  9664  015528  377E               	rlcf	___awdiv@quotient& (0+255),f,b
  9665  01552A  377F               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  9666                           
  9667                           ; BSR set to: 0
  9668  01552C  0100               	movlb	0	; () banked
  9669  01552E  517A               	movf	___awdiv@divisor& (0+255),w,b
  9670  015530  0100               	movlb	0	; () banked
  9671  015532  5D78               	subwf	___awdiv@dividend& (0+255),w,b
  9672  015534  0100               	movlb	0	; () banked
  9673  015536  517B               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9674  015538  0100               	movlb	0	; () banked
  9675  01553A  5979               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  9676  01553C  A0D8               	btfss	status,0,c
  9677  01553E  D00A               	goto	l7716
  9678                           
  9679                           ; BSR set to: 0
  9680  015540  0100               	movlb	0	; () banked
  9681  015542  517A               	movf	___awdiv@divisor& (0+255),w,b
  9682  015544  0100               	movlb	0	; () banked
  9683  015546  5F78               	subwf	___awdiv@dividend& (0+255),f,b
  9684  015548  0100               	movlb	0	; () banked
  9685  01554A  517B               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9686  01554C  0100               	movlb	0	; () banked
  9687  01554E  5B79               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  9688                           
  9689                           ; BSR set to: 0
  9690  015550  0100               	movlb	0	; () banked
  9691  015552  817E               	bsf	___awdiv@quotient& (0+255),0,b
  9692  015554                     l7716:
  9693                           
  9694                           ; BSR set to: 0
  9695  015554  0100               	movlb	0	; () banked
  9696  015556  90D8               	bcf	status,0,c
  9697  015558  337B               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  9698  01555A  337A               	rrcf	___awdiv@divisor& (0+255),f,b
  9699                           
  9700                           ; BSR set to: 0
  9701  01555C  0100               	movlb	0	; () banked
  9702  01555E  2F7C               	decfsz	___awdiv@counter& (0+255),f,b
  9703  015560  D7E1               	goto	l7708
  9704  015562                     l7720:
  9705                           
  9706                           ; BSR set to: 0
  9707  015562  0100               	movlb	0	; () banked
  9708  015564  517D               	movf	___awdiv@sign& (0+255),w,b
  9709  015566  0100               	movlb	0	; () banked
  9710  015568  B4D8               	btfsc	status,2,c
  9711  01556A  D005               	goto	l7724
  9712                           
  9713                           ; BSR set to: 0
  9714  01556C  0100               	movlb	0	; () banked
  9715  01556E  6D7E               	negf	___awdiv@quotient& (0+255),b
  9716  015570  1F7F               	comf	(___awdiv@quotient+1)& (0+255),f,b
  9717  015572  B0D8               	btfsc	status,0,c
  9718  015574  2B7F               	incf	(___awdiv@quotient+1)& (0+255),f,b
  9719  015576                     l7724:
  9720                           
  9721                           ; BSR set to: 0
  9722  015576  C07E  F078         	movff	___awdiv@quotient,?___awdiv
  9723  01557A  C07F  F079         	movff	___awdiv@quotient+1,?___awdiv+1
  9724  01557E  0012               	return	
  9725  015580                     __end_of___awdiv:
  9726                           	opt stack 0
  9727                           tblptru	equ	0xFF8
  9728                           tblptrh	equ	0xFF7
  9729                           tblptrl	equ	0xFF6
  9730                           tablat	equ	0xFF5
  9731                           prodh	equ	0xFF4
  9732                           prodl	equ	0xFF3
  9733                           intcon	equ	0xFF2
  9734                           postinc0	equ	0xFEE
  9735                           wreg	equ	0xFE8
  9736                           indf2	equ	0xFDF
  9737                           postinc2	equ	0xFDE
  9738                           fsr2h	equ	0xFDA
  9739                           fsr2l	equ	0xFD9
  9740                           status	equ	0xFD8
  9741                           
  9742 ;; *************** function __tdiv_to_l_ *****************
  9743 ;; Defined at:
  9744 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
  9745 ;; Parameters:    Size  Location     Type
  9746 ;;  f1              4   18[BANK0 ] float 
  9747 ;;  f2              4   22[BANK0 ] float 
  9748 ;; Auto vars:     Size  Location     Type
  9749 ;;  quot            4   29[BANK0 ] unsigned long 
  9750 ;;  exp1            1   34[BANK0 ] unsigned char 
  9751 ;;  cntr            1   33[BANK0 ] unsigned char 
  9752 ;; Return value:  Size  Location     Type
  9753 ;;                  4   18[BANK0 ] unsigned long 
  9754 ;; Registers used:
  9755 ;;		wreg, status,2, status,0
  9756 ;; Tracked objects:
  9757 ;;		On entry : 0/0
  9758 ;;		On exit  : 0/0
  9759 ;;		Unchanged: 0/0
  9760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9761 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9762 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9763 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9764 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9765 ;;Total ram usage:       17 bytes
  9766 ;; Hardware stack levels used:    1
  9767 ;; Hardware stack levels required when called:    3
  9768 ;; This function calls:
  9769 ;;		Nothing
  9770 ;; This function is called by:
  9771 ;;		_sprintf
  9772 ;; This function uses a non-reentrant model
  9773 ;;
  9774                           
  9775                           	psect	text15
  9776  014B5A                     __ptext15:
  9777                           	opt stack 0
  9778  014B5A                     __tdiv_to_l_:
  9779                           	opt stack 25
  9780                           
  9781                           ; BSR set to: 0
  9782                           ;incstack = 0
  9783  014B5A  C074  F07A         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  9784  014B5E  0100               	movlb	0	; () banked
  9785  014B60  6B7B               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9786  014B62  6B7C               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9787  014B64  0100               	movlb	0	; () banked
  9788  014B66  3573               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  9789  014B68  0100               	movlb	0	; () banked
  9790  014B6A  377A               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9791  014B6C  E301               	bnc	u10411
  9792  014B6E  817B               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9793  014B70                     u10411:
  9794  014B70  0100               	movlb	0	; () banked
  9795  014B72  517A               	movf	??__tdiv_to_l_& (0+255),w,b
  9796  014B74  0100               	movlb	0	; () banked
  9797  014B76  6F82               	movwf	__tdiv_to_l_@exp1& (0+255),b
  9798  014B78  0100               	movlb	0	; () banked
  9799  014B7A  5182               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9800  014B7C  A4D8               	btfss	status,2,c
  9801  014B7E  D00A               	goto	l7884
  9802                           
  9803                           ; BSR set to: 0
  9804  014B80  0E00               	movlw	0
  9805  014B82  0100               	movlb	0	; () banked
  9806  014B84  6F72               	movwf	?__tdiv_to_l_& (0+255),b
  9807  014B86  0E00               	movlw	0
  9808  014B88  6F73               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9809  014B8A  0E00               	movlw	0
  9810  014B8C  6F74               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9811  014B8E  0E00               	movlw	0
  9812  014B90  6F75               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9813                           
  9814                           ; BSR set to: 0
  9815  014B92  0012               	return	
  9816  014B94                     l7884:
  9817                           
  9818                           ; BSR set to: 0
  9819  014B94  C078  F07A         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  9820  014B98  0100               	movlb	0	; () banked
  9821  014B9A  6B7B               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9822  014B9C  6B7C               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9823  014B9E  0100               	movlb	0	; () banked
  9824  014BA0  3577               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9825  014BA2  0100               	movlb	0	; () banked
  9826  014BA4  377A               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9827  014BA6  E301               	bnc	u10431
  9828  014BA8  817B               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9829  014BAA                     u10431:
  9830  014BAA  0100               	movlb	0	; () banked
  9831  014BAC  517A               	movf	??__tdiv_to_l_& (0+255),w,b
  9832  014BAE  0100               	movlb	0	; () banked
  9833  014BB0  6F81               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9834  014BB2  0100               	movlb	0	; () banked
  9835  014BB4  5181               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9836  014BB6  A4D8               	btfss	status,2,c
  9837  014BB8  D00A               	goto	l7890
  9838                           
  9839                           ; BSR set to: 0
  9840  014BBA  0E00               	movlw	0
  9841  014BBC  0100               	movlb	0	; () banked
  9842  014BBE  6F72               	movwf	?__tdiv_to_l_& (0+255),b
  9843  014BC0  0E00               	movlw	0
  9844  014BC2  6F73               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9845  014BC4  0E00               	movlw	0
  9846  014BC6  6F74               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9847  014BC8  0E00               	movlw	0
  9848  014BCA  6F75               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9849                           
  9850                           ; BSR set to: 0
  9851  014BCC  0012               	return	
  9852  014BCE                     l7890:
  9853                           
  9854                           ; BSR set to: 0
  9855  014BCE  0100               	movlb	0	; () banked
  9856  014BD0  8F73               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  9857                           
  9858                           ; BSR set to: 0
  9859  014BD2  0EFF               	movlw	255
  9860  014BD4  0100               	movlb	0	; () banked
  9861  014BD6  1772               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  9862  014BD8  0EFF               	movlw	255
  9863  014BDA  0100               	movlb	0	; () banked
  9864  014BDC  1773               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9865  014BDE  0E00               	movlw	0
  9866  014BE0  0100               	movlb	0	; () banked
  9867  014BE2  1774               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9868  014BE4  0100               	movlb	0	; () banked
  9869  014BE6  8F77               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  9870                           
  9871                           ; BSR set to: 0
  9872  014BE8  0EFF               	movlw	255
  9873  014BEA  0100               	movlb	0	; () banked
  9874  014BEC  1776               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  9875  014BEE  0EFF               	movlw	255
  9876  014BF0  0100               	movlb	0	; () banked
  9877  014BF2  1777               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  9878  014BF4  0E00               	movlw	0
  9879  014BF6  0100               	movlb	0	; () banked
  9880  014BF8  1778               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  9881                           
  9882                           ; BSR set to: 0
  9883  014BFA  0E00               	movlw	0
  9884  014BFC  0100               	movlb	0	; () banked
  9885  014BFE  6F7D               	movwf	__tdiv_to_l_@quot& (0+255),b
  9886  014C00  0E00               	movlw	0
  9887  014C02  6F7E               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  9888  014C04  0E00               	movlw	0
  9889  014C06  6F7F               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  9890  014C08  0E00               	movlw	0
  9891  014C0A  6F80               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  9892                           
  9893                           ; BSR set to: 0
  9894  014C0C  0E7F               	movlw	127
  9895  014C0E  0100               	movlb	0	; () banked
  9896  014C10  5F82               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  9897                           
  9898                           ; BSR set to: 0
  9899  014C12  0100               	movlb	0	; () banked
  9900  014C14  5181               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9901  014C16  0F98               	addlw	152
  9902  014C18  0100               	movlb	0	; () banked
  9903  014C1A  5F82               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  9904                           
  9905                           ; BSR set to: 0
  9906  014C1C  0E18               	movlw	24
  9907  014C1E  0100               	movlb	0	; () banked
  9908  014C20  6F81               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9909  014C22                     l1276:
  9910                           
  9911                           ; BSR set to: 0
  9912  014C22  0100               	movlb	0	; () banked
  9913  014C24  90D8               	bcf	status,0,c
  9914  014C26  377D               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  9915  014C28  377E               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9916  014C2A  377F               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9917  014C2C  3780               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9918                           
  9919                           ; BSR set to: 0
  9920  014C2E  0100               	movlb	0	; () banked
  9921  014C30  5176               	movf	__tdiv_to_l_@f2& (0+255),w,b
  9922  014C32  0100               	movlb	0	; () banked
  9923  014C34  5D72               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  9924  014C36  0100               	movlb	0	; () banked
  9925  014C38  5177               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9926  014C3A  0100               	movlb	0	; () banked
  9927  014C3C  5973               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  9928  014C3E  0100               	movlb	0	; () banked
  9929  014C40  5178               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  9930  014C42  0100               	movlb	0	; () banked
  9931  014C44  5974               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  9932  014C46  A0D8               	btfss	status,0,c
  9933  014C48  D00E               	goto	l1277
  9934                           
  9935                           ; BSR set to: 0
  9936  014C4A  0100               	movlb	0	; () banked
  9937  014C4C  5176               	movf	__tdiv_to_l_@f2& (0+255),w,b
  9938  014C4E  0100               	movlb	0	; () banked
  9939  014C50  5F72               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  9940  014C52  0100               	movlb	0	; () banked
  9941  014C54  5177               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9942  014C56  0100               	movlb	0	; () banked
  9943  014C58  5B73               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9944  014C5A  0100               	movlb	0	; () banked
  9945  014C5C  5178               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  9946  014C5E  0100               	movlb	0	; () banked
  9947  014C60  5B74               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9948                           
  9949                           ; BSR set to: 0
  9950  014C62  0100               	movlb	0	; () banked
  9951  014C64  817D               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  9952  014C66                     l1277:
  9953                           
  9954                           ; BSR set to: 0
  9955  014C66  0100               	movlb	0	; () banked
  9956  014C68  90D8               	bcf	status,0,c
  9957  014C6A  3772               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  9958  014C6C  3773               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9959  014C6E  3774               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9960                           
  9961                           ; BSR set to: 0
  9962  014C70  0100               	movlb	0	; () banked
  9963  014C72  2F81               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  9964  014C74  D7D6               	goto	l1276
  9965                           
  9966                           ; BSR set to: 0
  9967                           
  9968                           ; BSR set to: 0
  9969  014C76  0100               	movlb	0	; () banked
  9970  014C78  AF82               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  9971  014C7A  D01A               	goto	l7924
  9972                           
  9973                           ; BSR set to: 0
  9974  014C7C  0100               	movlb	0	; () banked
  9975  014C7E  5182               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9976  014C80  0A80               	xorlw	128
  9977  014C82  0F97               	addlw	151
  9978  014C84  B0D8               	btfsc	status,0,c
  9979  014C86  D00A               	goto	l7920
  9980                           
  9981                           ; BSR set to: 0
  9982  014C88  0E00               	movlw	0
  9983  014C8A  0100               	movlb	0	; () banked
  9984  014C8C  6F72               	movwf	?__tdiv_to_l_& (0+255),b
  9985  014C8E  0E00               	movlw	0
  9986  014C90  6F73               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9987  014C92  0E00               	movlw	0
  9988  014C94  6F74               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9989  014C96  0E00               	movlw	0
  9990  014C98  6F75               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9991                           
  9992                           ; BSR set to: 0
  9993  014C9A  0012               	return	
  9994  014C9C                     l7920:
  9995                           
  9996                           ; BSR set to: 0
  9997  014C9C  0100               	movlb	0	; () banked
  9998  014C9E  90D8               	bcf	status,0,c
  9999  014CA0  3380               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10000  014CA2  337F               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10001  014CA4  337E               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10002  014CA6  337D               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 10003                           
 10004                           ; BSR set to: 0
 10005  014CA8  0100               	movlb	0	; () banked
 10006  014CAA  3F82               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 10007  014CAC  D7F7               	goto	l7920
 10008                           
 10009                           ; BSR set to: 0
 10010  014CAE  D01B               	goto	l1283
 10011  014CB0                     l7924:
 10012                           
 10013                           ; BSR set to: 0
 10014  014CB0  0E17               	movlw	23
 10015  014CB2  0100               	movlb	0	; () banked
 10016  014CB4  6582               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 10017  014CB6  D012               	goto	l7932
 10018                           
 10019                           ; BSR set to: 0
 10020  014CB8  0E00               	movlw	0
 10021  014CBA  0100               	movlb	0	; () banked
 10022  014CBC  6F72               	movwf	?__tdiv_to_l_& (0+255),b
 10023  014CBE  0E00               	movlw	0
 10024  014CC0  6F73               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10025  014CC2  0E00               	movlw	0
 10026  014CC4  6F74               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10027  014CC6  0E00               	movlw	0
 10028  014CC8  6F75               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10029                           
 10030                           ; BSR set to: 0
 10031  014CCA  0012               	return	
 10032  014CCC                     l7930:
 10033                           
 10034                           ; BSR set to: 0
 10035  014CCC  0100               	movlb	0	; () banked
 10036  014CCE  90D8               	bcf	status,0,c
 10037  014CD0  377D               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10038  014CD2  377E               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10039  014CD4  377F               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10040  014CD6  3780               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10041  014CD8  0100               	movlb	0	; () banked
 10042  014CDA  0782               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 10043  014CDC                     l7932:
 10044                           
 10045                           ; BSR set to: 0
 10046  014CDC  0100               	movlb	0	; () banked
 10047  014CDE  5182               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10048  014CE0  0100               	movlb	0	; () banked
 10049  014CE2  A4D8               	btfss	status,2,c
 10050  014CE4  D7F3               	goto	l7930
 10051  014CE6                     l1283:
 10052                           
 10053                           ; BSR set to: 0
 10054  014CE6  C07D  F072         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 10055  014CEA  C07E  F073         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 10056  014CEE  C07F  F074         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 10057  014CF2  C080  F075         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 10058                           
 10059                           ; BSR set to: 0
 10060  014CF6  0012               	return		;funcret
 10061  014CF8                     __end_of__tdiv_to_l_:
 10062                           	opt stack 0
 10063                           tblptru	equ	0xFF8
 10064                           tblptrh	equ	0xFF7
 10065                           tblptrl	equ	0xFF6
 10066                           tablat	equ	0xFF5
 10067                           prodh	equ	0xFF4
 10068                           prodl	equ	0xFF3
 10069                           intcon	equ	0xFF2
 10070                           postinc0	equ	0xFEE
 10071                           wreg	equ	0xFE8
 10072                           indf2	equ	0xFDF
 10073                           postinc2	equ	0xFDE
 10074                           fsr2h	equ	0xFDA
 10075                           fsr2l	equ	0xFD9
 10076                           status	equ	0xFD8
 10077                           
 10078 ;; *************** function __div_to_l_ *****************
 10079 ;; Defined at:
 10080 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
 10081 ;; Parameters:    Size  Location     Type
 10082 ;;  f1              4   18[BANK0 ] unsigned long 
 10083 ;;  f2              4   22[BANK0 ] unsigned long 
 10084 ;; Auto vars:     Size  Location     Type
 10085 ;;  quot            4   26[BANK0 ] unsigned long 
 10086 ;;  exp1            1   31[BANK0 ] unsigned char 
 10087 ;;  cntr            1   30[BANK0 ] unsigned char 
 10088 ;; Return value:  Size  Location     Type
 10089 ;;                  4   18[BANK0 ] unsigned long 
 10090 ;; Registers used:
 10091 ;;		wreg, status,2, status,0
 10092 ;; Tracked objects:
 10093 ;;		On entry : 0/0
 10094 ;;		On exit  : 0/0
 10095 ;;		Unchanged: 0/0
 10096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10097 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10098 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10100 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10101 ;;Total ram usage:       14 bytes
 10102 ;; Hardware stack levels used:    1
 10103 ;; Hardware stack levels required when called:    3
 10104 ;; This function calls:
 10105 ;;		Nothing
 10106 ;; This function is called by:
 10107 ;;		_sprintf
 10108 ;; This function uses a non-reentrant model
 10109 ;;
 10110                           
 10111                           	psect	text16
 10112  014E88                     __ptext16:
 10113                           	opt stack 0
 10114  014E88                     __div_to_l_:
 10115                           	opt stack 25
 10116                           
 10117                           ; BSR set to: 0
 10118                           ;incstack = 0
 10119  014E88  0100               	movlb	0	; () banked
 10120  014E8A  3574               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 10121  014E8C  3575               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 10122  014E8E  0100               	movlb	0	; () banked
 10123  014E90  6F7F               	movwf	__div_to_l_@exp1& (0+255),b
 10124  014E92  0100               	movlb	0	; () banked
 10125  014E94  517F               	movf	__div_to_l_@exp1& (0+255),w,b
 10126  014E96  A4D8               	btfss	status,2,c
 10127  014E98  D00A               	goto	l7940
 10128                           
 10129                           ; BSR set to: 0
 10130  014E9A  0E00               	movlw	0
 10131  014E9C  0100               	movlb	0	; () banked
 10132  014E9E  6F72               	movwf	?__div_to_l_& (0+255),b
 10133  014EA0  0E00               	movlw	0
 10134  014EA2  6F73               	movwf	(?__div_to_l_+1)& (0+255),b
 10135  014EA4  0E00               	movlw	0
 10136  014EA6  6F74               	movwf	(?__div_to_l_+2)& (0+255),b
 10137  014EA8  0E00               	movlw	0
 10138  014EAA  6F75               	movwf	(?__div_to_l_+3)& (0+255),b
 10139                           
 10140                           ; BSR set to: 0
 10141  014EAC  0012               	return	
 10142  014EAE                     l7940:
 10143                           
 10144                           ; BSR set to: 0
 10145  014EAE  0100               	movlb	0	; () banked
 10146  014EB0  3578               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 10147  014EB2  3579               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 10148  014EB4  0100               	movlb	0	; () banked
 10149  014EB6  6F7E               	movwf	__div_to_l_@cntr& (0+255),b
 10150  014EB8  0100               	movlb	0	; () banked
 10151  014EBA  517E               	movf	__div_to_l_@cntr& (0+255),w,b
 10152  014EBC  A4D8               	btfss	status,2,c
 10153  014EBE  D00A               	goto	l7946
 10154                           
 10155                           ; BSR set to: 0
 10156  014EC0  0E00               	movlw	0
 10157  014EC2  0100               	movlb	0	; () banked
 10158  014EC4  6F72               	movwf	?__div_to_l_& (0+255),b
 10159  014EC6  0E00               	movlw	0
 10160  014EC8  6F73               	movwf	(?__div_to_l_+1)& (0+255),b
 10161  014ECA  0E00               	movlw	0
 10162  014ECC  6F74               	movwf	(?__div_to_l_+2)& (0+255),b
 10163  014ECE  0E00               	movlw	0
 10164  014ED0  6F75               	movwf	(?__div_to_l_+3)& (0+255),b
 10165                           
 10166                           ; BSR set to: 0
 10167  014ED2  0012               	return	
 10168  014ED4                     l7946:
 10169                           
 10170                           ; BSR set to: 0
 10171  014ED4  0100               	movlb	0	; () banked
 10172  014ED6  8F74               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 10173                           
 10174                           ; BSR set to: 0
 10175  014ED8  0EFF               	movlw	255
 10176  014EDA  0100               	movlb	0	; () banked
 10177  014EDC  1772               	andwf	__div_to_l_@f1& (0+255),f,b
 10178  014EDE  0EFF               	movlw	255
 10179  014EE0  1773               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 10180  014EE2  0EFF               	movlw	255
 10181  014EE4  1774               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 10182  014EE6  0E00               	movlw	0
 10183  014EE8  1775               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 10184                           
 10185                           ; BSR set to: 0
 10186  014EEA  0100               	movlb	0	; () banked
 10187  014EEC  8F78               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 10188  014EEE  0EFF               	movlw	255
 10189  014EF0  0100               	movlb	0	; () banked
 10190  014EF2  1776               	andwf	__div_to_l_@f2& (0+255),f,b
 10191  014EF4  0EFF               	movlw	255
 10192  014EF6  1777               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 10193  014EF8  0EFF               	movlw	255
 10194  014EFA  1778               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 10195  014EFC  0E00               	movlw	0
 10196  014EFE  1779               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 10197                           
 10198                           ; BSR set to: 0
 10199  014F00  0E00               	movlw	0
 10200  014F02  0100               	movlb	0	; () banked
 10201  014F04  6F7A               	movwf	__div_to_l_@quot& (0+255),b
 10202  014F06  0E00               	movlw	0
 10203  014F08  6F7B               	movwf	(__div_to_l_@quot+1)& (0+255),b
 10204  014F0A  0E00               	movlw	0
 10205  014F0C  6F7C               	movwf	(__div_to_l_@quot+2)& (0+255),b
 10206  014F0E  0E00               	movlw	0
 10207  014F10  6F7D               	movwf	(__div_to_l_@quot+3)& (0+255),b
 10208                           
 10209                           ; BSR set to: 0
 10210  014F12  0E7F               	movlw	127
 10211  014F14  0100               	movlb	0	; () banked
 10212  014F16  5F7F               	subwf	__div_to_l_@exp1& (0+255),f,b
 10213                           
 10214                           ; BSR set to: 0
 10215  014F18  0100               	movlb	0	; () banked
 10216  014F1A  517E               	movf	__div_to_l_@cntr& (0+255),w,b
 10217  014F1C  0FA0               	addlw	160
 10218  014F1E  0100               	movlb	0	; () banked
 10219  014F20  5F7F               	subwf	__div_to_l_@exp1& (0+255),f,b
 10220                           
 10221                           ; BSR set to: 0
 10222  014F22  0E20               	movlw	32
 10223  014F24  0100               	movlb	0	; () banked
 10224  014F26  6F7E               	movwf	__div_to_l_@cntr& (0+255),b
 10225  014F28                     l7960:
 10226                           
 10227                           ; BSR set to: 0
 10228  014F28  0100               	movlb	0	; () banked
 10229  014F2A  90D8               	bcf	status,0,c
 10230  014F2C  377A               	rlcf	__div_to_l_@quot& (0+255),f,b
 10231  014F2E  377B               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 10232  014F30  377C               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 10233  014F32  377D               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 10234                           
 10235                           ; BSR set to: 0
 10236  014F34  0100               	movlb	0	; () banked
 10237  014F36  5176               	movf	__div_to_l_@f2& (0+255),w,b
 10238  014F38  0100               	movlb	0	; () banked
 10239  014F3A  5D72               	subwf	__div_to_l_@f1& (0+255),w,b
 10240  014F3C  0100               	movlb	0	; () banked
 10241  014F3E  5177               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10242  014F40  0100               	movlb	0	; () banked
 10243  014F42  5973               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 10244  014F44  0100               	movlb	0	; () banked
 10245  014F46  5178               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10246  014F48  0100               	movlb	0	; () banked
 10247  014F4A  5974               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 10248  014F4C  0100               	movlb	0	; () banked
 10249  014F4E  5179               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10250  014F50  0100               	movlb	0	; () banked
 10251  014F52  5975               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 10252  014F54  A0D8               	btfss	status,0,c
 10253  014F56  D012               	goto	l7968
 10254                           
 10255                           ; BSR set to: 0
 10256  014F58  0100               	movlb	0	; () banked
 10257  014F5A  5176               	movf	__div_to_l_@f2& (0+255),w,b
 10258  014F5C  0100               	movlb	0	; () banked
 10259  014F5E  5F72               	subwf	__div_to_l_@f1& (0+255),f,b
 10260  014F60  0100               	movlb	0	; () banked
 10261  014F62  5177               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10262  014F64  0100               	movlb	0	; () banked
 10263  014F66  5B73               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 10264  014F68  0100               	movlb	0	; () banked
 10265  014F6A  5178               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10266  014F6C  0100               	movlb	0	; () banked
 10267  014F6E  5B74               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 10268  014F70  0100               	movlb	0	; () banked
 10269  014F72  5179               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10270  014F74  0100               	movlb	0	; () banked
 10271  014F76  5B75               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 10272                           
 10273                           ; BSR set to: 0
 10274  014F78  0100               	movlb	0	; () banked
 10275  014F7A  817A               	bsf	__div_to_l_@quot& (0+255),0,b
 10276  014F7C                     l7968:
 10277                           
 10278                           ; BSR set to: 0
 10279  014F7C  0100               	movlb	0	; () banked
 10280  014F7E  90D8               	bcf	status,0,c
 10281  014F80  3772               	rlcf	__div_to_l_@f1& (0+255),f,b
 10282  014F82  3773               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 10283  014F84  3774               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 10284  014F86  3775               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 10285                           
 10286                           ; BSR set to: 0
 10287  014F88  0100               	movlb	0	; () banked
 10288  014F8A  2F7E               	decfsz	__div_to_l_@cntr& (0+255),f,b
 10289  014F8C  D7CD               	goto	l7960
 10290                           
 10291                           ; BSR set to: 0
 10292                           
 10293                           ; BSR set to: 0
 10294  014F8E  0100               	movlb	0	; () banked
 10295  014F90  AF7F               	btfss	__div_to_l_@exp1& (0+255),7,b
 10296  014F92  D01A               	goto	l7984
 10297                           
 10298                           ; BSR set to: 0
 10299  014F94  0100               	movlb	0	; () banked
 10300  014F96  517F               	movf	__div_to_l_@exp1& (0+255),w,b
 10301  014F98  0A80               	xorlw	128
 10302  014F9A  0F9F               	addlw	159
 10303  014F9C  B0D8               	btfsc	status,0,c
 10304  014F9E  D00A               	goto	l7980
 10305                           
 10306                           ; BSR set to: 0
 10307  014FA0  0E00               	movlw	0
 10308  014FA2  0100               	movlb	0	; () banked
 10309  014FA4  6F72               	movwf	?__div_to_l_& (0+255),b
 10310  014FA6  0E00               	movlw	0
 10311  014FA8  6F73               	movwf	(?__div_to_l_+1)& (0+255),b
 10312  014FAA  0E00               	movlw	0
 10313  014FAC  6F74               	movwf	(?__div_to_l_+2)& (0+255),b
 10314  014FAE  0E00               	movlw	0
 10315  014FB0  6F75               	movwf	(?__div_to_l_+3)& (0+255),b
 10316                           
 10317                           ; BSR set to: 0
 10318  014FB2  0012               	return	
 10319  014FB4                     l7980:
 10320                           
 10321                           ; BSR set to: 0
 10322  014FB4  0100               	movlb	0	; () banked
 10323  014FB6  90D8               	bcf	status,0,c
 10324  014FB8  337D               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 10325  014FBA  337C               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 10326  014FBC  337B               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 10327  014FBE  337A               	rrcf	__div_to_l_@quot& (0+255),f,b
 10328                           
 10329                           ; BSR set to: 0
 10330  014FC0  0100               	movlb	0	; () banked
 10331  014FC2  3F7F               	incfsz	__div_to_l_@exp1& (0+255),f,b
 10332  014FC4  D7F7               	goto	l7980
 10333                           
 10334                           ; BSR set to: 0
 10335  014FC6  D01B               	goto	l1179
 10336  014FC8                     l7984:
 10337                           
 10338                           ; BSR set to: 0
 10339  014FC8  0E1F               	movlw	31
 10340  014FCA  0100               	movlb	0	; () banked
 10341  014FCC  657F               	cpfsgt	__div_to_l_@exp1& (0+255),b
 10342  014FCE  D012               	goto	l7992
 10343                           
 10344                           ; BSR set to: 0
 10345  014FD0  0E00               	movlw	0
 10346  014FD2  0100               	movlb	0	; () banked
 10347  014FD4  6F72               	movwf	?__div_to_l_& (0+255),b
 10348  014FD6  0E00               	movlw	0
 10349  014FD8  6F73               	movwf	(?__div_to_l_+1)& (0+255),b
 10350  014FDA  0E00               	movlw	0
 10351  014FDC  6F74               	movwf	(?__div_to_l_+2)& (0+255),b
 10352  014FDE  0E00               	movlw	0
 10353  014FE0  6F75               	movwf	(?__div_to_l_+3)& (0+255),b
 10354                           
 10355                           ; BSR set to: 0
 10356  014FE2  0012               	return	
 10357  014FE4                     l7990:
 10358                           
 10359                           ; BSR set to: 0
 10360  014FE4  0100               	movlb	0	; () banked
 10361  014FE6  90D8               	bcf	status,0,c
 10362  014FE8  377A               	rlcf	__div_to_l_@quot& (0+255),f,b
 10363  014FEA  377B               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 10364  014FEC  377C               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 10365  014FEE  377D               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 10366  014FF0  0100               	movlb	0	; () banked
 10367  014FF2  077F               	decf	__div_to_l_@exp1& (0+255),f,b
 10368  014FF4                     l7992:
 10369                           
 10370                           ; BSR set to: 0
 10371  014FF4  0100               	movlb	0	; () banked
 10372  014FF6  517F               	movf	__div_to_l_@exp1& (0+255),w,b
 10373  014FF8  0100               	movlb	0	; () banked
 10374  014FFA  A4D8               	btfss	status,2,c
 10375  014FFC  D7F3               	goto	l7990
 10376  014FFE                     l1179:
 10377                           
 10378                           ; BSR set to: 0
 10379  014FFE  C07A  F072         	movff	__div_to_l_@quot,?__div_to_l_
 10380  015002  C07B  F073         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 10381  015006  C07C  F074         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 10382  01500A  C07D  F075         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 10383                           
 10384                           ; BSR set to: 0
 10385  01500E  0012               	return		;funcret
 10386  015010                     __end_of__div_to_l_:
 10387                           	opt stack 0
 10388                           tblptru	equ	0xFF8
 10389                           tblptrh	equ	0xFF7
 10390                           tblptrl	equ	0xFF6
 10391                           tablat	equ	0xFF5
 10392                           prodh	equ	0xFF4
 10393                           prodl	equ	0xFF3
 10394                           intcon	equ	0xFF2
 10395                           postinc0	equ	0xFEE
 10396                           wreg	equ	0xFE8
 10397                           indf2	equ	0xFDF
 10398                           postinc2	equ	0xFDE
 10399                           fsr2h	equ	0xFDA
 10400                           fsr2l	equ	0xFD9
 10401                           status	equ	0xFD8
 10402                           
 10403 ;; *************** function ___xxtofl *****************
 10404 ;; Defined at:
 10405 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
 10406 ;; Parameters:    Size  Location     Type
 10407 ;;  sign            1    wreg     unsigned char 
 10408 ;;  val             4   18[BANK0 ] long 
 10409 ;; Auto vars:     Size  Location     Type
 10410 ;;  sign            1   26[BANK0 ] unsigned char 
 10411 ;;  arg             4   28[BANK0 ] unsigned long 
 10412 ;;  exp             1   27[BANK0 ] unsigned char 
 10413 ;; Return value:  Size  Location     Type
 10414 ;;                  4   18[BANK0 ] unsigned char 
 10415 ;; Registers used:
 10416 ;;		wreg, status,2, status,0
 10417 ;; Tracked objects:
 10418 ;;		On entry : 0/0
 10419 ;;		On exit  : 0/0
 10420 ;;		Unchanged: 0/0
 10421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10422 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10423 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10424 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10425 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10426 ;;Total ram usage:       14 bytes
 10427 ;; Hardware stack levels used:    1
 10428 ;; Hardware stack levels required when called:    3
 10429 ;; This function calls:
 10430 ;;		Nothing
 10431 ;; This function is called by:
 10432 ;;		_main
 10433 ;;		_LCD_Handler
 10434 ;;		_sprintf
 10435 ;; This function uses a non-reentrant model
 10436 ;;
 10437                           
 10438                           	psect	text17
 10439  0147C6                     __ptext17:
 10440                           	opt stack 0
 10441  0147C6                     ___xxtofl:
 10442                           	opt stack 27
 10443                           
 10444                           ; BSR set to: 0
 10445                           ;incstack = 0
 10446                           ;___xxtofl@sign stored from wreg
 10447  0147C6  0100               	movlb	0	; () banked
 10448  0147C8  6F7A               	movwf	___xxtofl@sign& (0+255),b
 10449  0147CA  0100               	movlb	0	; () banked
 10450  0147CC  517A               	movf	___xxtofl@sign& (0+255),w,b
 10451  0147CE  0100               	movlb	0	; () banked
 10452  0147D0  B4D8               	btfsc	status,2,c
 10453  0147D2  D01E               	goto	l1574
 10454                           
 10455                           ; BSR set to: 0
 10456  0147D4  0100               	movlb	0	; () banked
 10457  0147D6  AF75               	btfss	(___xxtofl@val+3)& (0+255),7,b
 10458  0147D8  D01B               	goto	l1574
 10459                           
 10460                           ; BSR set to: 0
 10461  0147DA  C072  F076         	movff	___xxtofl@val,??___xxtofl
 10462  0147DE  C073  F077         	movff	___xxtofl@val+1,??___xxtofl+1
 10463  0147E2  C074  F078         	movff	___xxtofl@val+2,??___xxtofl+2
 10464  0147E6  C075  F079         	movff	___xxtofl@val+3,??___xxtofl+3
 10465  0147EA  0100               	movlb	0	; () banked
 10466  0147EC  1F76               	comf	??___xxtofl& (0+255),f,b
 10467  0147EE  1F77               	comf	(??___xxtofl+1)& (0+255),f,b
 10468  0147F0  1F78               	comf	(??___xxtofl+2)& (0+255),f,b
 10469  0147F2  1F79               	comf	(??___xxtofl+3)& (0+255),f,b
 10470  0147F4  2B76               	incf	??___xxtofl& (0+255),f,b
 10471  0147F6  0E00               	movlw	0
 10472  0147F8  2377               	addwfc	(??___xxtofl+1)& (0+255),f,b
 10473  0147FA  2378               	addwfc	(??___xxtofl+2)& (0+255),f,b
 10474  0147FC  2379               	addwfc	(??___xxtofl+3)& (0+255),f,b
 10475  0147FE  C076  F07C         	movff	??___xxtofl,___xxtofl@arg
 10476  014802  C077  F07D         	movff	??___xxtofl+1,___xxtofl@arg+1
 10477  014806  C078  F07E         	movff	??___xxtofl+2,___xxtofl@arg+2
 10478  01480A  C079  F07F         	movff	??___xxtofl+3,___xxtofl@arg+3
 10479  01480E  D008               	goto	l8118
 10480  014810                     l1574:
 10481                           
 10482                           ; BSR set to: 0
 10483  014810  C072  F07C         	movff	___xxtofl@val,___xxtofl@arg
 10484  014814  C073  F07D         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10485  014818  C074  F07E         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10486  01481C  C075  F07F         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10487  014820                     l8118:
 10488                           
 10489                           ; BSR set to: 0
 10490  014820  0100               	movlb	0	; () banked
 10491  014822  5172               	movf	___xxtofl@val& (0+255),w,b
 10492  014824  0100               	movlb	0	; () banked
 10493  014826  1173               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 10494  014828  0100               	movlb	0	; () banked
 10495  01482A  1174               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 10496  01482C  0100               	movlb	0	; () banked
 10497  01482E  1175               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 10498  014830  A4D8               	btfss	status,2,c
 10499  014832  D00A               	goto	l8124
 10500                           
 10501                           ; BSR set to: 0
 10502  014834  0E00               	movlw	0
 10503  014836  0100               	movlb	0	; () banked
 10504  014838  6F72               	movwf	?___xxtofl& (0+255),b
 10505  01483A  0E00               	movlw	0
 10506  01483C  6F73               	movwf	(?___xxtofl+1)& (0+255),b
 10507  01483E  0E00               	movlw	0
 10508  014840  6F74               	movwf	(?___xxtofl+2)& (0+255),b
 10509  014842  0E00               	movlw	0
 10510  014844  6F75               	movwf	(?___xxtofl+3)& (0+255),b
 10511                           
 10512                           ; BSR set to: 0
 10513  014846  0012               	return	
 10514  014848                     l8124:
 10515                           
 10516                           ; BSR set to: 0
 10517  014848  0E96               	movlw	150
 10518  01484A  0100               	movlb	0	; () banked
 10519  01484C  6F7B               	movwf	___xxtofl@exp& (0+255),b
 10520  01484E  D008               	goto	l8128
 10521  014850                     l8126:
 10522                           
 10523                           ; BSR set to: 0
 10524  014850  0100               	movlb	0	; () banked
 10525  014852  2B7B               	incf	___xxtofl@exp& (0+255),f,b
 10526  014854  0100               	movlb	0	; () banked
 10527  014856  90D8               	bcf	status,0,c
 10528  014858  337F               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10529  01485A  337E               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10530  01485C  337D               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10531  01485E  337C               	rrcf	___xxtofl@arg& (0+255),f,b
 10532  014860                     l8128:
 10533                           
 10534                           ; BSR set to: 0
 10535  014860  0E00               	movlw	0
 10536  014862  0100               	movlb	0	; () banked
 10537  014864  157C               	andwf	___xxtofl@arg& (0+255),w,b
 10538  014866  0100               	movlb	0	; () banked
 10539  014868  6F76               	movwf	??___xxtofl& (0+255),b
 10540  01486A  0E00               	movlw	0
 10541  01486C  0100               	movlb	0	; () banked
 10542  01486E  157D               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10543  014870  0100               	movlb	0	; () banked
 10544  014872  6F77               	movwf	(??___xxtofl+1)& (0+255),b
 10545  014874  0E00               	movlw	0
 10546  014876  0100               	movlb	0	; () banked
 10547  014878  157E               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10548  01487A  0100               	movlb	0	; () banked
 10549  01487C  6F78               	movwf	(??___xxtofl+2)& (0+255),b
 10550  01487E  0EFE               	movlw	254
 10551  014880  0100               	movlb	0	; () banked
 10552  014882  157F               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10553  014884  0100               	movlb	0	; () banked
 10554  014886  6F79               	movwf	(??___xxtofl+3)& (0+255),b
 10555  014888  0100               	movlb	0	; () banked
 10556  01488A  5176               	movf	??___xxtofl& (0+255),w,b
 10557  01488C  0100               	movlb	0	; () banked
 10558  01488E  1177               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10559  014890  0100               	movlb	0	; () banked
 10560  014892  1178               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10561  014894  0100               	movlb	0	; () banked
 10562  014896  1179               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10563  014898  B4D8               	btfsc	status,2,c
 10564  01489A  D010               	goto	l1581
 10565  01489C  D7D9               	goto	l8126
 10566  01489E                     l8130:
 10567                           
 10568                           ; BSR set to: 0
 10569  01489E  0100               	movlb	0	; () banked
 10570  0148A0  2B7B               	incf	___xxtofl@exp& (0+255),f,b
 10571                           
 10572                           ; BSR set to: 0
 10573  0148A2  0E01               	movlw	1
 10574  0148A4  0100               	movlb	0	; () banked
 10575  0148A6  277C               	addwf	___xxtofl@arg& (0+255),f,b
 10576  0148A8  0E00               	movlw	0
 10577  0148AA  237D               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 10578  0148AC  237E               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 10579  0148AE  237F               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 10580                           
 10581                           ; BSR set to: 0
 10582  0148B0  0100               	movlb	0	; () banked
 10583  0148B2  90D8               	bcf	status,0,c
 10584  0148B4  337F               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10585  0148B6  337E               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10586  0148B8  337D               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10587  0148BA  337C               	rrcf	___xxtofl@arg& (0+255),f,b
 10588  0148BC                     l1581:
 10589                           
 10590                           ; BSR set to: 0
 10591  0148BC  0E00               	movlw	0
 10592  0148BE  0100               	movlb	0	; () banked
 10593  0148C0  157C               	andwf	___xxtofl@arg& (0+255),w,b
 10594  0148C2  0100               	movlb	0	; () banked
 10595  0148C4  6F76               	movwf	??___xxtofl& (0+255),b
 10596  0148C6  0E00               	movlw	0
 10597  0148C8  0100               	movlb	0	; () banked
 10598  0148CA  157D               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10599  0148CC  0100               	movlb	0	; () banked
 10600  0148CE  6F77               	movwf	(??___xxtofl+1)& (0+255),b
 10601  0148D0  0E00               	movlw	0
 10602  0148D2  0100               	movlb	0	; () banked
 10603  0148D4  157E               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10604  0148D6  0100               	movlb	0	; () banked
 10605  0148D8  6F78               	movwf	(??___xxtofl+2)& (0+255),b
 10606  0148DA  0EFF               	movlw	255
 10607  0148DC  0100               	movlb	0	; () banked
 10608  0148DE  157F               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10609  0148E0  0100               	movlb	0	; () banked
 10610  0148E2  6F79               	movwf	(??___xxtofl+3)& (0+255),b
 10611  0148E4  0100               	movlb	0	; () banked
 10612  0148E6  5176               	movf	??___xxtofl& (0+255),w,b
 10613  0148E8  0100               	movlb	0	; () banked
 10614  0148EA  1177               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10615  0148EC  0100               	movlb	0	; () banked
 10616  0148EE  1178               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10617  0148F0  0100               	movlb	0	; () banked
 10618  0148F2  1179               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10619  0148F4  B4D8               	btfsc	status,2,c
 10620  0148F6  D009               	goto	l8138
 10621  0148F8  D7D2               	goto	l8130
 10622  0148FA                     l8136:
 10623                           
 10624                           ; BSR set to: 0
 10625  0148FA  0100               	movlb	0	; () banked
 10626  0148FC  077B               	decf	___xxtofl@exp& (0+255),f,b
 10627  0148FE  0100               	movlb	0	; () banked
 10628  014900  90D8               	bcf	status,0,c
 10629  014902  377C               	rlcf	___xxtofl@arg& (0+255),f,b
 10630  014904  377D               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 10631  014906  377E               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 10632  014908  377F               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 10633  01490A                     l8138:
 10634                           
 10635                           ; BSR set to: 0
 10636  01490A  0100               	movlb	0	; () banked
 10637  01490C  BF7E               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 10638  01490E  D004               	goto	l1588
 10639                           
 10640                           ; BSR set to: 0
 10641  014910  0E02               	movlw	2
 10642  014912  0100               	movlb	0	; () banked
 10643  014914  617B               	cpfslt	___xxtofl@exp& (0+255),b
 10644  014916  D7F1               	goto	l8136
 10645  014918                     l1588:
 10646                           
 10647                           ; BSR set to: 0
 10648  014918  0100               	movlb	0	; () banked
 10649  01491A  B17B               	btfsc	___xxtofl@exp& (0+255),0,b
 10650  01491C  D009               	goto	l1589
 10651                           
 10652                           ; BSR set to: 0
 10653  01491E  0EFF               	movlw	255
 10654  014920  0100               	movlb	0	; () banked
 10655  014922  177C               	andwf	___xxtofl@arg& (0+255),f,b
 10656  014924  0EFF               	movlw	255
 10657  014926  177D               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 10658  014928  0E7F               	movlw	127
 10659  01492A  177E               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 10660  01492C  0EFF               	movlw	255
 10661  01492E  177F               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 10662  014930                     l1589:
 10663                           
 10664                           ; BSR set to: 0
 10665  014930  0100               	movlb	0	; () banked
 10666  014932  90D8               	bcf	status,0,c
 10667  014934  337B               	rrcf	___xxtofl@exp& (0+255),f,b
 10668  014936  C07B  F076         	movff	___xxtofl@exp,??___xxtofl
 10669  01493A  0100               	movlb	0	; () banked
 10670  01493C  6B77               	clrf	(??___xxtofl+1)& (0+255),b
 10671  01493E  6B78               	clrf	(??___xxtofl+2)& (0+255),b
 10672  014940  6B79               	clrf	(??___xxtofl+3)& (0+255),b
 10673  014942  C076  F079         	movff	??___xxtofl,??___xxtofl+3
 10674  014946  0100               	movlb	0	; () banked
 10675  014948  6B78               	clrf	(??___xxtofl+2)& (0+255),b
 10676  01494A  6B77               	clrf	(??___xxtofl+1)& (0+255),b
 10677  01494C  6B76               	clrf	??___xxtofl& (0+255),b
 10678  01494E  0100               	movlb	0	; () banked
 10679  014950  5176               	movf	??___xxtofl& (0+255),w,b
 10680  014952  0100               	movlb	0	; () banked
 10681  014954  137C               	iorwf	___xxtofl@arg& (0+255),f,b
 10682  014956  0100               	movlb	0	; () banked
 10683  014958  5177               	movf	(??___xxtofl+1)& (0+255),w,b
 10684  01495A  0100               	movlb	0	; () banked
 10685  01495C  137D               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 10686  01495E  0100               	movlb	0	; () banked
 10687  014960  5178               	movf	(??___xxtofl+2)& (0+255),w,b
 10688  014962  0100               	movlb	0	; () banked
 10689  014964  137E               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 10690  014966  0100               	movlb	0	; () banked
 10691  014968  5179               	movf	(??___xxtofl+3)& (0+255),w,b
 10692  01496A  0100               	movlb	0	; () banked
 10693  01496C  137F               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 10694                           
 10695                           ; BSR set to: 0
 10696  01496E  0100               	movlb	0	; () banked
 10697  014970  517A               	movf	___xxtofl@sign& (0+255),w,b
 10698  014972  0100               	movlb	0	; () banked
 10699  014974  B4D8               	btfsc	status,2,c
 10700  014976  D005               	goto	l8150
 10701                           
 10702                           ; BSR set to: 0
 10703  014978  0100               	movlb	0	; () banked
 10704  01497A  AF75               	btfss	(___xxtofl@val+3)& (0+255),7,b
 10705  01497C  D002               	goto	l8150
 10706                           
 10707                           ; BSR set to: 0
 10708  01497E  0100               	movlb	0	; () banked
 10709  014980  8F7F               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 10710  014982                     l8150:
 10711                           
 10712                           ; BSR set to: 0
 10713  014982  C07C  F072         	movff	___xxtofl@arg,?___xxtofl
 10714  014986  C07D  F073         	movff	___xxtofl@arg+1,?___xxtofl+1
 10715  01498A  C07E  F074         	movff	___xxtofl@arg+2,?___xxtofl+2
 10716  01498E  C07F  F075         	movff	___xxtofl@arg+3,?___xxtofl+3
 10717  014992  0012               	return	
 10718  014994                     __end_of___xxtofl:
 10719                           	opt stack 0
 10720                           tblptru	equ	0xFF8
 10721                           tblptrh	equ	0xFF7
 10722                           tblptrl	equ	0xFF6
 10723                           tablat	equ	0xFF5
 10724                           prodh	equ	0xFF4
 10725                           prodl	equ	0xFF3
 10726                           intcon	equ	0xFF2
 10727                           postinc0	equ	0xFEE
 10728                           wreg	equ	0xFE8
 10729                           indf2	equ	0xFDF
 10730                           postinc2	equ	0xFDE
 10731                           fsr2h	equ	0xFDA
 10732                           fsr2l	equ	0xFD9
 10733                           status	equ	0xFD8
 10734                           
 10735 ;; *************** function ___llmod *****************
 10736 ;; Defined at:
 10737 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 10738 ;; Parameters:    Size  Location     Type
 10739 ;;  dividend        4   18[BANK0 ] unsigned long 
 10740 ;;  divisor         4   22[BANK0 ] unsigned long 
 10741 ;; Auto vars:     Size  Location     Type
 10742 ;;  counter         1   26[BANK0 ] unsigned char 
 10743 ;; Return value:  Size  Location     Type
 10744 ;;                  4   18[BANK0 ] unsigned long 
 10745 ;; Registers used:
 10746 ;;		wreg, status,2, status,0
 10747 ;; Tracked objects:
 10748 ;;		On entry : 0/0
 10749 ;;		On exit  : 0/0
 10750 ;;		Unchanged: 0/0
 10751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10752 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10753 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10755 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10756 ;;Total ram usage:        9 bytes
 10757 ;; Hardware stack levels used:    1
 10758 ;; Hardware stack levels required when called:    3
 10759 ;; This function calls:
 10760 ;;		Nothing
 10761 ;; This function is called by:
 10762 ;;		_sprintf
 10763 ;; This function uses a non-reentrant model
 10764 ;;
 10765                           
 10766                           	psect	text18
 10767  0158E6                     __ptext18:
 10768                           	opt stack 0
 10769  0158E6                     ___llmod:
 10770                           	opt stack 25
 10771                           
 10772                           ; BSR set to: 0
 10773                           ;incstack = 0
 10774  0158E6  0100               	movlb	0	; () banked
 10775  0158E8  5176               	movf	___llmod@divisor& (0+255),w,b
 10776  0158EA  0100               	movlb	0	; () banked
 10777  0158EC  1177               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 10778  0158EE  0100               	movlb	0	; () banked
 10779  0158F0  1178               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 10780  0158F2  0100               	movlb	0	; () banked
 10781  0158F4  1179               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 10782  0158F6  B4D8               	btfsc	status,2,c
 10783  0158F8  D03A               	goto	l1382
 10784                           
 10785                           ; BSR set to: 0
 10786  0158FA  0E01               	movlw	1
 10787  0158FC  0100               	movlb	0	; () banked
 10788  0158FE  6F7A               	movwf	___llmod@counter& (0+255),b
 10789  015900  D008               	goto	l8102
 10790  015902                     l8100:
 10791                           
 10792                           ; BSR set to: 0
 10793  015902  0100               	movlb	0	; () banked
 10794  015904  90D8               	bcf	status,0,c
 10795  015906  3776               	rlcf	___llmod@divisor& (0+255),f,b
 10796  015908  3777               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 10797  01590A  3778               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 10798  01590C  3779               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 10799  01590E  0100               	movlb	0	; () banked
 10800  015910  2B7A               	incf	___llmod@counter& (0+255),f,b
 10801  015912                     l8102:
 10802                           
 10803                           ; BSR set to: 0
 10804  015912  0100               	movlb	0	; () banked
 10805  015914  AF79               	btfss	(___llmod@divisor+3)& (0+255),7,b
 10806  015916  D7F5               	goto	l8100
 10807  015918                     l8104:
 10808                           
 10809                           ; BSR set to: 0
 10810  015918  0100               	movlb	0	; () banked
 10811  01591A  5176               	movf	___llmod@divisor& (0+255),w,b
 10812  01591C  0100               	movlb	0	; () banked
 10813  01591E  5D72               	subwf	___llmod@dividend& (0+255),w,b
 10814  015920  0100               	movlb	0	; () banked
 10815  015922  5177               	movf	(___llmod@divisor+1)& (0+255),w,b
 10816  015924  0100               	movlb	0	; () banked
 10817  015926  5973               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 10818  015928  0100               	movlb	0	; () banked
 10819  01592A  5178               	movf	(___llmod@divisor+2)& (0+255),w,b
 10820  01592C  0100               	movlb	0	; () banked
 10821  01592E  5974               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 10822  015930  0100               	movlb	0	; () banked
 10823  015932  5179               	movf	(___llmod@divisor+3)& (0+255),w,b
 10824  015934  0100               	movlb	0	; () banked
 10825  015936  5975               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 10826  015938  A0D8               	btfss	status,0,c
 10827  01593A  D010               	goto	l8108
 10828                           
 10829                           ; BSR set to: 0
 10830  01593C  0100               	movlb	0	; () banked
 10831  01593E  5176               	movf	___llmod@divisor& (0+255),w,b
 10832  015940  0100               	movlb	0	; () banked
 10833  015942  5F72               	subwf	___llmod@dividend& (0+255),f,b
 10834  015944  0100               	movlb	0	; () banked
 10835  015946  5177               	movf	(___llmod@divisor+1)& (0+255),w,b
 10836  015948  0100               	movlb	0	; () banked
 10837  01594A  5B73               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 10838  01594C  0100               	movlb	0	; () banked
 10839  01594E  5178               	movf	(___llmod@divisor+2)& (0+255),w,b
 10840  015950  0100               	movlb	0	; () banked
 10841  015952  5B74               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 10842  015954  0100               	movlb	0	; () banked
 10843  015956  5179               	movf	(___llmod@divisor+3)& (0+255),w,b
 10844  015958  0100               	movlb	0	; () banked
 10845  01595A  5B75               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 10846  01595C                     l8108:
 10847                           
 10848                           ; BSR set to: 0
 10849  01595C  0100               	movlb	0	; () banked
 10850  01595E  90D8               	bcf	status,0,c
 10851  015960  3379               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 10852  015962  3378               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 10853  015964  3377               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 10854  015966  3376               	rrcf	___llmod@divisor& (0+255),f,b
 10855                           
 10856                           ; BSR set to: 0
 10857  015968  0100               	movlb	0	; () banked
 10858  01596A  2F7A               	decfsz	___llmod@counter& (0+255),f,b
 10859  01596C  D7D5               	goto	l8104
 10860  01596E                     l1382:
 10861                           
 10862                           ; BSR set to: 0
 10863  01596E  C072  F072         	movff	___llmod@dividend,?___llmod
 10864  015972  C073  F073         	movff	___llmod@dividend+1,?___llmod+1
 10865  015976  C074  F074         	movff	___llmod@dividend+2,?___llmod+2
 10866  01597A  C075  F075         	movff	___llmod@dividend+3,?___llmod+3
 10867                           
 10868                           ; BSR set to: 0
 10869  01597E  0012               	return		;funcret
 10870  015980                     __end_of___llmod:
 10871                           	opt stack 0
 10872                           tblptru	equ	0xFF8
 10873                           tblptrh	equ	0xFF7
 10874                           tblptrl	equ	0xFF6
 10875                           tablat	equ	0xFF5
 10876                           prodh	equ	0xFF4
 10877                           prodl	equ	0xFF3
 10878                           intcon	equ	0xFF2
 10879                           postinc0	equ	0xFEE
 10880                           wreg	equ	0xFE8
 10881                           indf2	equ	0xFDF
 10882                           postinc2	equ	0xFDE
 10883                           fsr2h	equ	0xFDA
 10884                           fsr2l	equ	0xFD9
 10885                           status	equ	0xFD8
 10886                           
 10887 ;; *************** function ___lldiv *****************
 10888 ;; Defined at:
 10889 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 10890 ;; Parameters:    Size  Location     Type
 10891 ;;  dividend        4   18[BANK0 ] unsigned long 
 10892 ;;  divisor         4   22[BANK0 ] unsigned long 
 10893 ;; Auto vars:     Size  Location     Type
 10894 ;;  quotient        4   26[BANK0 ] unsigned long 
 10895 ;;  counter         1   30[BANK0 ] unsigned char 
 10896 ;; Return value:  Size  Location     Type
 10897 ;;                  4   18[BANK0 ] unsigned long 
 10898 ;; Registers used:
 10899 ;;		wreg, status,2, status,0
 10900 ;; Tracked objects:
 10901 ;;		On entry : 0/0
 10902 ;;		On exit  : 0/0
 10903 ;;		Unchanged: 0/0
 10904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10905 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10906 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10908 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10909 ;;Total ram usage:       13 bytes
 10910 ;; Hardware stack levels used:    1
 10911 ;; Hardware stack levels required when called:    3
 10912 ;; This function calls:
 10913 ;;		Nothing
 10914 ;; This function is called by:
 10915 ;;		_sprintf
 10916 ;; This function uses a non-reentrant model
 10917 ;;
 10918                           
 10919                           	psect	text19
 10920  015580                     __ptext19:
 10921                           	opt stack 0
 10922  015580                     ___lldiv:
 10923                           	opt stack 25
 10924                           
 10925                           ; BSR set to: 0
 10926                           ;incstack = 0
 10927  015580  0E00               	movlw	0
 10928  015582  0100               	movlb	0	; () banked
 10929  015584  6F7A               	movwf	___lldiv@quotient& (0+255),b
 10930  015586  0E00               	movlw	0
 10931  015588  6F7B               	movwf	(___lldiv@quotient+1)& (0+255),b
 10932  01558A  0E00               	movlw	0
 10933  01558C  6F7C               	movwf	(___lldiv@quotient+2)& (0+255),b
 10934  01558E  0E00               	movlw	0
 10935  015590  6F7D               	movwf	(___lldiv@quotient+3)& (0+255),b
 10936                           
 10937                           ; BSR set to: 0
 10938  015592  0100               	movlb	0	; () banked
 10939  015594  5176               	movf	___lldiv@divisor& (0+255),w,b
 10940  015596  0100               	movlb	0	; () banked
 10941  015598  1177               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 10942  01559A  0100               	movlb	0	; () banked
 10943  01559C  1178               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 10944  01559E  0100               	movlb	0	; () banked
 10945  0155A0  1179               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 10946  0155A2  B4D8               	btfsc	status,2,c
 10947  0155A4  D042               	goto	l1372
 10948                           
 10949                           ; BSR set to: 0
 10950  0155A6  0E01               	movlw	1
 10951  0155A8  0100               	movlb	0	; () banked
 10952  0155AA  6F7E               	movwf	___lldiv@counter& (0+255),b
 10953  0155AC  D008               	goto	l8082
 10954  0155AE                     l8080:
 10955                           
 10956                           ; BSR set to: 0
 10957  0155AE  0100               	movlb	0	; () banked
 10958  0155B0  90D8               	bcf	status,0,c
 10959  0155B2  3776               	rlcf	___lldiv@divisor& (0+255),f,b
 10960  0155B4  3777               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 10961  0155B6  3778               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 10962  0155B8  3779               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 10963  0155BA  0100               	movlb	0	; () banked
 10964  0155BC  2B7E               	incf	___lldiv@counter& (0+255),f,b
 10965  0155BE                     l8082:
 10966                           
 10967                           ; BSR set to: 0
 10968  0155BE  0100               	movlb	0	; () banked
 10969  0155C0  AF79               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 10970  0155C2  D7F5               	goto	l8080
 10971  0155C4                     l8084:
 10972                           
 10973                           ; BSR set to: 0
 10974  0155C4  0100               	movlb	0	; () banked
 10975  0155C6  90D8               	bcf	status,0,c
 10976  0155C8  377A               	rlcf	___lldiv@quotient& (0+255),f,b
 10977  0155CA  377B               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 10978  0155CC  377C               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 10979  0155CE  377D               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 10980                           
 10981                           ; BSR set to: 0
 10982  0155D0  0100               	movlb	0	; () banked
 10983  0155D2  5176               	movf	___lldiv@divisor& (0+255),w,b
 10984  0155D4  0100               	movlb	0	; () banked
 10985  0155D6  5D72               	subwf	___lldiv@dividend& (0+255),w,b
 10986  0155D8  0100               	movlb	0	; () banked
 10987  0155DA  5177               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10988  0155DC  0100               	movlb	0	; () banked
 10989  0155DE  5973               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 10990  0155E0  0100               	movlb	0	; () banked
 10991  0155E2  5178               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10992  0155E4  0100               	movlb	0	; () banked
 10993  0155E6  5974               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 10994  0155E8  0100               	movlb	0	; () banked
 10995  0155EA  5179               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10996  0155EC  0100               	movlb	0	; () banked
 10997  0155EE  5975               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 10998  0155F0  A0D8               	btfss	status,0,c
 10999  0155F2  D012               	goto	l8092
 11000                           
 11001                           ; BSR set to: 0
 11002  0155F4  0100               	movlb	0	; () banked
 11003  0155F6  5176               	movf	___lldiv@divisor& (0+255),w,b
 11004  0155F8  0100               	movlb	0	; () banked
 11005  0155FA  5F72               	subwf	___lldiv@dividend& (0+255),f,b
 11006  0155FC  0100               	movlb	0	; () banked
 11007  0155FE  5177               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11008  015600  0100               	movlb	0	; () banked
 11009  015602  5B73               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 11010  015604  0100               	movlb	0	; () banked
 11011  015606  5178               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11012  015608  0100               	movlb	0	; () banked
 11013  01560A  5B74               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 11014  01560C  0100               	movlb	0	; () banked
 11015  01560E  5179               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11016  015610  0100               	movlb	0	; () banked
 11017  015612  5B75               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 11018                           
 11019                           ; BSR set to: 0
 11020  015614  0100               	movlb	0	; () banked
 11021  015616  817A               	bsf	___lldiv@quotient& (0+255),0,b
 11022  015618                     l8092:
 11023                           
 11024                           ; BSR set to: 0
 11025  015618  0100               	movlb	0	; () banked
 11026  01561A  90D8               	bcf	status,0,c
 11027  01561C  3379               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 11028  01561E  3378               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 11029  015620  3377               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 11030  015622  3376               	rrcf	___lldiv@divisor& (0+255),f,b
 11031                           
 11032                           ; BSR set to: 0
 11033  015624  0100               	movlb	0	; () banked
 11034  015626  2F7E               	decfsz	___lldiv@counter& (0+255),f,b
 11035  015628  D7CD               	goto	l8084
 11036  01562A                     l1372:
 11037                           
 11038                           ; BSR set to: 0
 11039  01562A  C07A  F072         	movff	___lldiv@quotient,?___lldiv
 11040  01562E  C07B  F073         	movff	___lldiv@quotient+1,?___lldiv+1
 11041  015632  C07C  F074         	movff	___lldiv@quotient+2,?___lldiv+2
 11042  015636  C07D  F075         	movff	___lldiv@quotient+3,?___lldiv+3
 11043                           
 11044                           ; BSR set to: 0
 11045  01563A  0012               	return		;funcret
 11046  01563C                     __end_of___lldiv:
 11047                           	opt stack 0
 11048                           tblptru	equ	0xFF8
 11049                           tblptrh	equ	0xFF7
 11050                           tblptrl	equ	0xFF6
 11051                           tablat	equ	0xFF5
 11052                           prodh	equ	0xFF4
 11053                           prodl	equ	0xFF3
 11054                           intcon	equ	0xFF2
 11055                           postinc0	equ	0xFEE
 11056                           wreg	equ	0xFE8
 11057                           indf2	equ	0xFDF
 11058                           postinc2	equ	0xFDE
 11059                           fsr2h	equ	0xFDA
 11060                           fsr2l	equ	0xFD9
 11061                           status	equ	0xFD8
 11062                           
 11063 ;; *************** function ___fltol *****************
 11064 ;; Defined at:
 11065 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
 11066 ;; Parameters:    Size  Location     Type
 11067 ;;  f1              4   90[BANK0 ] unsigned long 
 11068 ;; Auto vars:     Size  Location     Type
 11069 ;;  exp1            1   99[BANK0 ] unsigned char 
 11070 ;;  sign1           1   98[BANK0 ] unsigned char 
 11071 ;; Return value:  Size  Location     Type
 11072 ;;                  4   90[BANK0 ] long 
 11073 ;; Registers used:
 11074 ;;		wreg, status,2, status,0
 11075 ;; Tracked objects:
 11076 ;;		On entry : 0/0
 11077 ;;		On exit  : 0/0
 11078 ;;		Unchanged: 0/0
 11079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11080 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11081 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11082 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11083 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11084 ;;Total ram usage:       10 bytes
 11085 ;; Hardware stack levels used:    1
 11086 ;; Hardware stack levels required when called:    3
 11087 ;; This function calls:
 11088 ;;		Nothing
 11089 ;; This function is called by:
 11090 ;;		_main
 11091 ;;		_sprintf
 11092 ;; This function uses a non-reentrant model
 11093 ;;
 11094                           
 11095                           	psect	text20
 11096  0152CA                     __ptext20:
 11097                           	opt stack 0
 11098  0152CA                     ___fltol:
 11099                           	opt stack 27
 11100                           
 11101                           ; BSR set to: 0
 11102                           ;incstack = 0
 11103  0152CA  0100               	movlb	0	; () banked
 11104  0152CC  35BC               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11105  0152CE  35BD               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11106  0152D0  0100               	movlb	0	; () banked
 11107  0152D2  6FC3               	movwf	___fltol@exp1& (0+255),b
 11108  0152D4  0100               	movlb	0	; () banked
 11109  0152D6  51C3               	movf	___fltol@exp1& (0+255),w,b
 11110  0152D8  A4D8               	btfss	status,2,c
 11111  0152DA  D00A               	goto	l8036
 11112                           
 11113                           ; BSR set to: 0
 11114  0152DC  0E00               	movlw	0
 11115  0152DE  0100               	movlb	0	; () banked
 11116  0152E0  6FBA               	movwf	?___fltol& (0+255),b
 11117  0152E2  0E00               	movlw	0
 11118  0152E4  6FBB               	movwf	(?___fltol+1)& (0+255),b
 11119  0152E6  0E00               	movlw	0
 11120  0152E8  6FBC               	movwf	(?___fltol+2)& (0+255),b
 11121  0152EA  0E00               	movlw	0
 11122  0152EC  6FBD               	movwf	(?___fltol+3)& (0+255),b
 11123                           
 11124                           ; BSR set to: 0
 11125  0152EE  0012               	return	
 11126  0152F0                     l8036:
 11127                           
 11128                           ; BSR set to: 0
 11129  0152F0  C0BA  F0BE         	movff	___fltol@f1,??___fltol
 11130  0152F4  C0BB  F0BF         	movff	___fltol@f1+1,??___fltol+1
 11131  0152F8  C0BC  F0C0         	movff	___fltol@f1+2,??___fltol+2
 11132  0152FC  C0BD  F0C1         	movff	___fltol@f1+3,??___fltol+3
 11133  015300  0E20               	movlw	32
 11134  015302  D006               	goto	u10640
 11135  015304                     u10645:
 11136  015304  0100               	movlb	0	; () banked
 11137  015306  90D8               	bcf	status,0,c
 11138  015308  33C1               	rrcf	(??___fltol+3)& (0+255),f,b
 11139  01530A  33C0               	rrcf	(??___fltol+2)& (0+255),f,b
 11140  01530C  33BF               	rrcf	(??___fltol+1)& (0+255),f,b
 11141  01530E  33BE               	rrcf	??___fltol& (0+255),f,b
 11142  015310                     u10640:
 11143  015310  2EE8               	decfsz	wreg,f,c
 11144  015312  D7F8               	goto	u10645
 11145  015314  0100               	movlb	0	; () banked
 11146  015316  51BE               	movf	??___fltol& (0+255),w,b
 11147  015318  0100               	movlb	0	; () banked
 11148  01531A  6FC2               	movwf	___fltol@sign1& (0+255),b
 11149                           
 11150                           ; BSR set to: 0
 11151  01531C  0100               	movlb	0	; () banked
 11152  01531E  8FBC               	bsf	(___fltol@f1+2)& (0+255),7,b
 11153                           
 11154                           ; BSR set to: 0
 11155  015320  0EFF               	movlw	255
 11156  015322  0100               	movlb	0	; () banked
 11157  015324  17BA               	andwf	___fltol@f1& (0+255),f,b
 11158  015326  0EFF               	movlw	255
 11159  015328  17BB               	andwf	(___fltol@f1+1)& (0+255),f,b
 11160  01532A  0EFF               	movlw	255
 11161  01532C  17BC               	andwf	(___fltol@f1+2)& (0+255),f,b
 11162  01532E  0E00               	movlw	0
 11163  015330  17BD               	andwf	(___fltol@f1+3)& (0+255),f,b
 11164                           
 11165                           ; BSR set to: 0
 11166  015332  0E96               	movlw	150
 11167  015334  0100               	movlb	0	; () banked
 11168  015336  5FC3               	subwf	___fltol@exp1& (0+255),f,b
 11169                           
 11170                           ; BSR set to: 0
 11171  015338  0100               	movlb	0	; () banked
 11172  01533A  AFC3               	btfss	___fltol@exp1& (0+255),7,b
 11173  01533C  D01A               	goto	l8056
 11174                           
 11175                           ; BSR set to: 0
 11176  01533E  0100               	movlb	0	; () banked
 11177  015340  51C3               	movf	___fltol@exp1& (0+255),w,b
 11178  015342  0A80               	xorlw	128
 11179  015344  0F97               	addlw	151
 11180  015346  B0D8               	btfsc	status,0,c
 11181  015348  D00A               	goto	l8052
 11182                           
 11183                           ; BSR set to: 0
 11184  01534A  0E00               	movlw	0
 11185  01534C  0100               	movlb	0	; () banked
 11186  01534E  6FBA               	movwf	?___fltol& (0+255),b
 11187  015350  0E00               	movlw	0
 11188  015352  6FBB               	movwf	(?___fltol+1)& (0+255),b
 11189  015354  0E00               	movlw	0
 11190  015356  6FBC               	movwf	(?___fltol+2)& (0+255),b
 11191  015358  0E00               	movlw	0
 11192  01535A  6FBD               	movwf	(?___fltol+3)& (0+255),b
 11193                           
 11194                           ; BSR set to: 0
 11195  01535C  0012               	return	
 11196  01535E                     l8052:
 11197                           
 11198                           ; BSR set to: 0
 11199  01535E  0100               	movlb	0	; () banked
 11200  015360  90D8               	bcf	status,0,c
 11201  015362  33BD               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11202  015364  33BC               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11203  015366  33BB               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11204  015368  33BA               	rrcf	___fltol@f1& (0+255),f,b
 11205                           
 11206                           ; BSR set to: 0
 11207  01536A  0100               	movlb	0	; () banked
 11208  01536C  3FC3               	incfsz	___fltol@exp1& (0+255),f,b
 11209  01536E  D7F7               	goto	l8052
 11210                           
 11211                           ; BSR set to: 0
 11212  015370  D01B               	goto	l8066
 11213  015372                     l8056:
 11214                           
 11215                           ; BSR set to: 0
 11216  015372  0E1F               	movlw	31
 11217  015374  0100               	movlb	0	; () banked
 11218  015376  65C3               	cpfsgt	___fltol@exp1& (0+255),b
 11219  015378  D012               	goto	l8064
 11220                           
 11221                           ; BSR set to: 0
 11222  01537A  0E00               	movlw	0
 11223  01537C  0100               	movlb	0	; () banked
 11224  01537E  6FBA               	movwf	?___fltol& (0+255),b
 11225  015380  0E00               	movlw	0
 11226  015382  6FBB               	movwf	(?___fltol+1)& (0+255),b
 11227  015384  0E00               	movlw	0
 11228  015386  6FBC               	movwf	(?___fltol+2)& (0+255),b
 11229  015388  0E00               	movlw	0
 11230  01538A  6FBD               	movwf	(?___fltol+3)& (0+255),b
 11231                           
 11232                           ; BSR set to: 0
 11233  01538C  0012               	return	
 11234  01538E                     l8062:
 11235                           
 11236                           ; BSR set to: 0
 11237  01538E  0100               	movlb	0	; () banked
 11238  015390  90D8               	bcf	status,0,c
 11239  015392  37BA               	rlcf	___fltol@f1& (0+255),f,b
 11240  015394  37BB               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11241  015396  37BC               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11242  015398  37BD               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11243  01539A  0100               	movlb	0	; () banked
 11244  01539C  07C3               	decf	___fltol@exp1& (0+255),f,b
 11245  01539E                     l8064:
 11246                           
 11247                           ; BSR set to: 0
 11248  01539E  0100               	movlb	0	; () banked
 11249  0153A0  51C3               	movf	___fltol@exp1& (0+255),w,b
 11250  0153A2  0100               	movlb	0	; () banked
 11251  0153A4  A4D8               	btfss	status,2,c
 11252  0153A6  D7F3               	goto	l8062
 11253  0153A8                     l8066:
 11254                           
 11255                           ; BSR set to: 0
 11256  0153A8  0100               	movlb	0	; () banked
 11257  0153AA  51C2               	movf	___fltol@sign1& (0+255),w,b
 11258  0153AC  0100               	movlb	0	; () banked
 11259  0153AE  B4D8               	btfsc	status,2,c
 11260  0153B0  D009               	goto	l8070
 11261                           
 11262                           ; BSR set to: 0
 11263  0153B2  0100               	movlb	0	; () banked
 11264  0153B4  1FBD               	comf	(___fltol@f1+3)& (0+255),f,b
 11265  0153B6  1FBC               	comf	(___fltol@f1+2)& (0+255),f,b
 11266  0153B8  1FBB               	comf	(___fltol@f1+1)& (0+255),f,b
 11267  0153BA  6DBA               	negf	___fltol@f1& (0+255),b
 11268  0153BC  0E00               	movlw	0
 11269  0153BE  23BB               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11270  0153C0  23BC               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11271  0153C2  23BD               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11272  0153C4                     l8070:
 11273                           
 11274                           ; BSR set to: 0
 11275  0153C4  C0BA  F0BA         	movff	___fltol@f1,?___fltol
 11276  0153C8  C0BB  F0BB         	movff	___fltol@f1+1,?___fltol+1
 11277  0153CC  C0BC  F0BC         	movff	___fltol@f1+2,?___fltol+2
 11278  0153D0  C0BD  F0BD         	movff	___fltol@f1+3,?___fltol+3
 11279  0153D4  0012               	return	
 11280  0153D6                     __end_of___fltol:
 11281                           	opt stack 0
 11282                           tblptru	equ	0xFF8
 11283                           tblptrh	equ	0xFF7
 11284                           tblptrl	equ	0xFF6
 11285                           tablat	equ	0xFF5
 11286                           prodh	equ	0xFF4
 11287                           prodl	equ	0xFF3
 11288                           intcon	equ	0xFF2
 11289                           postinc0	equ	0xFEE
 11290                           wreg	equ	0xFE8
 11291                           indf2	equ	0xFDF
 11292                           postinc2	equ	0xFDE
 11293                           fsr2h	equ	0xFDA
 11294                           fsr2l	equ	0xFD9
 11295                           status	equ	0xFD8
 11296                           
 11297 ;; *************** function ___flsub *****************
 11298 ;; Defined at:
 11299 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 11300 ;; Parameters:    Size  Location     Type
 11301 ;;  b               4   90[BANK0 ] long 
 11302 ;;  a               4   94[BANK0 ] long 
 11303 ;; Auto vars:     Size  Location     Type
 11304 ;;		None
 11305 ;; Return value:  Size  Location     Type
 11306 ;;                  4   90[BANK0 ] long 
 11307 ;; Registers used:
 11308 ;;		wreg, status,2, status,0, cstack
 11309 ;; Tracked objects:
 11310 ;;		On entry : 0/0
 11311 ;;		On exit  : 0/0
 11312 ;;		Unchanged: 0/0
 11313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11314 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11317 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11318 ;;Total ram usage:        8 bytes
 11319 ;; Hardware stack levels used:    1
 11320 ;; Hardware stack levels required when called:    4
 11321 ;; This function calls:
 11322 ;;		___fladd
 11323 ;; This function is called by:
 11324 ;;		_sprintf
 11325 ;; This function uses a non-reentrant model
 11326 ;;
 11327                           
 11328                           	psect	text21
 11329  015AB6                     __ptext21:
 11330                           	opt stack 0
 11331  015AB6                     ___flsub:
 11332                           	opt stack 24
 11333                           
 11334                           ; BSR set to: 0
 11335                           ;incstack = 0
 11336  015AB6  0E00               	movlw	0
 11337  015AB8  0100               	movlb	0	; () banked
 11338  015ABA  1BBE               	xorwf	___flsub@a& (0+255),f,b
 11339  015ABC  0E00               	movlw	0
 11340  015ABE  1BBF               	xorwf	(___flsub@a+1)& (0+255),f,b
 11341  015AC0  0E00               	movlw	0
 11342  015AC2  1BC0               	xorwf	(___flsub@a+2)& (0+255),f,b
 11343  015AC4  0E80               	movlw	128
 11344  015AC6  1BC1               	xorwf	(___flsub@a+3)& (0+255),f,b
 11345                           
 11346                           ; BSR set to: 0
 11347  015AC8  C0BA  F0A6         	movff	___flsub@b,___fladd@b
 11348  015ACC  C0BB  F0A7         	movff	___flsub@b+1,___fladd@b+1
 11349  015AD0  C0BC  F0A8         	movff	___flsub@b+2,___fladd@b+2
 11350  015AD4  C0BD  F0A9         	movff	___flsub@b+3,___fladd@b+3
 11351  015AD8  C0BE  F0AA         	movff	___flsub@a,___fladd@a
 11352  015ADC  C0BF  F0AB         	movff	___flsub@a+1,___fladd@a+1
 11353  015AE0  C0C0  F0AC         	movff	___flsub@a+2,___fladd@a+2
 11354  015AE4  C0C1  F0AD         	movff	___flsub@a+3,___fladd@a+3
 11355  015AE8  EC25  F099         	call	___fladd	;wreg free
 11356  015AEC  C0A6  F0BA         	movff	?___fladd,?___flsub
 11357  015AF0  C0A7  F0BB         	movff	?___fladd+1,?___flsub+1
 11358  015AF4  C0A8  F0BC         	movff	?___fladd+2,?___flsub+2
 11359  015AF8  C0A9  F0BD         	movff	?___fladd+3,?___flsub+3
 11360  015AFC  0012               	return	
 11361  015AFE                     __end_of___flsub:
 11362                           	opt stack 0
 11363                           tblptru	equ	0xFF8
 11364                           tblptrh	equ	0xFF7
 11365                           tblptrl	equ	0xFF6
 11366                           tablat	equ	0xFF5
 11367                           prodh	equ	0xFF4
 11368                           prodl	equ	0xFF3
 11369                           intcon	equ	0xFF2
 11370                           postinc0	equ	0xFEE
 11371                           wreg	equ	0xFE8
 11372                           indf2	equ	0xFDF
 11373                           postinc2	equ	0xFDE
 11374                           fsr2h	equ	0xFDA
 11375                           fsr2l	equ	0xFD9
 11376                           status	equ	0xFD8
 11377                           
 11378 ;; *************** function ___fladd *****************
 11379 ;; Defined at:
 11380 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 11381 ;; Parameters:    Size  Location     Type
 11382 ;;  b               4   70[BANK0 ] long 
 11383 ;;  a               4   74[BANK0 ] long 
 11384 ;; Auto vars:     Size  Location     Type
 11385 ;;  grs             1   89[BANK0 ] unsigned char 
 11386 ;;  bexp            1   88[BANK0 ] unsigned char 
 11387 ;;  aexp            1   87[BANK0 ] unsigned char 
 11388 ;;  signs           1   86[BANK0 ] unsigned char 
 11389 ;; Return value:  Size  Location     Type
 11390 ;;                  4   70[BANK0 ] unsigned char 
 11391 ;; Registers used:
 11392 ;;		wreg, status,2, status,0
 11393 ;; Tracked objects:
 11394 ;;		On entry : 0/0
 11395 ;;		On exit  : 0/0
 11396 ;;		Unchanged: 0/0
 11397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11398 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11399 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11400 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11401 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11402 ;;Total ram usage:       20 bytes
 11403 ;; Hardware stack levels used:    1
 11404 ;; Hardware stack levels required when called:    3
 11405 ;; This function calls:
 11406 ;;		Nothing
 11407 ;; This function is called by:
 11408 ;;		_main
 11409 ;;		_sprintf
 11410 ;;		___flsub
 11411 ;; This function uses a non-reentrant model
 11412 ;;
 11413                           
 11414                           	psect	text22
 11415  01324A                     __ptext22:
 11416                           	opt stack 0
 11417  01324A                     ___fladd:
 11418                           	opt stack 27
 11419                           
 11420                           ;incstack = 0
 11421  01324A  0100               	movlb	0	; () banked
 11422  01324C  51A9               	movf	(___fladd@b+3)& (0+255),w,b
 11423  01324E  0B80               	andlw	128
 11424  013250  0100               	movlb	0	; () banked
 11425  013252  6FB6               	movwf	___fladd@signs& (0+255),b
 11426  013254  0100               	movlb	0	; () banked
 11427  013256  51A9               	movf	(___fladd@b+3)& (0+255),w,b
 11428  013258  25A9               	addwf	(___fladd@b+3)& (0+255),w,b
 11429  01325A  0100               	movlb	0	; () banked
 11430  01325C  6FB8               	movwf	___fladd@bexp& (0+255),b
 11431                           
 11432                           ; BSR set to: 0
 11433  01325E  0100               	movlb	0	; () banked
 11434  013260  AFA8               	btfss	(___fladd@b+2)& (0+255),7,b
 11435  013262  D002               	goto	l7358
 11436                           
 11437                           ; BSR set to: 0
 11438  013264  0100               	movlb	0	; () banked
 11439  013266  81B8               	bsf	___fladd@bexp& (0+255),0,b
 11440  013268                     l7358:
 11441                           
 11442                           ; BSR set to: 0
 11443  013268  0100               	movlb	0	; () banked
 11444  01326A  51B8               	movf	___fladd@bexp& (0+255),w,b
 11445  01326C  0100               	movlb	0	; () banked
 11446  01326E  B4D8               	btfsc	status,2,c
 11447  013270  D012               	goto	l7368
 11448                           
 11449                           ; BSR set to: 0
 11450  013272  0100               	movlb	0	; () banked
 11451  013274  29B8               	incf	___fladd@bexp& (0+255),w,b
 11452  013276  A4D8               	btfss	status,2,c
 11453  013278  D009               	goto	l7364
 11454                           
 11455                           ; BSR set to: 0
 11456  01327A  0E00               	movlw	0
 11457  01327C  0100               	movlb	0	; () banked
 11458  01327E  6FA6               	movwf	___fladd@b& (0+255),b
 11459  013280  0E00               	movlw	0
 11460  013282  6FA7               	movwf	(___fladd@b+1)& (0+255),b
 11461  013284  0E00               	movlw	0
 11462  013286  6FA8               	movwf	(___fladd@b+2)& (0+255),b
 11463  013288  0E00               	movlw	0
 11464  01328A  6FA9               	movwf	(___fladd@b+3)& (0+255),b
 11465  01328C                     l7364:
 11466                           
 11467                           ; BSR set to: 0
 11468  01328C  0100               	movlb	0	; () banked
 11469  01328E  8FA8               	bsf	(___fladd@b+2)& (0+255),7,b
 11470                           
 11471                           ; BSR set to: 0
 11472  013290  0E00               	movlw	0
 11473  013292  0100               	movlb	0	; () banked
 11474  013294  D008               	goto	L9
 11475  013296                     l7368:
 11476                           
 11477                           ; BSR set to: 0
 11478  013296  0E00               	movlw	0
 11479  013298  0100               	movlb	0	; () banked
 11480  01329A  6FA6               	movwf	___fladd@b& (0+255),b
 11481  01329C  0E00               	movlw	0
 11482  01329E  6FA7               	movwf	(___fladd@b+1)& (0+255),b
 11483  0132A0  0E00               	movlw	0
 11484  0132A2  6FA8               	movwf	(___fladd@b+2)& (0+255),b
 11485  0132A4  0E00               	movlw	0
 11486  0132A6                     L9:
 11487  0132A6  6FA9               	movwf	(___fladd@b+3)& (0+255),b
 11488                           
 11489                           ; BSR set to: 0
 11490                           
 11491                           ; BSR set to: 0
 11492  0132A8  0100               	movlb	0	; () banked
 11493  0132AA  51AD               	movf	(___fladd@a+3)& (0+255),w,b
 11494  0132AC  0B80               	andlw	128
 11495  0132AE  0100               	movlb	0	; () banked
 11496  0132B0  6FB7               	movwf	___fladd@aexp& (0+255),b
 11497                           
 11498                           ; BSR set to: 0
 11499  0132B2  0100               	movlb	0	; () banked
 11500  0132B4  51B6               	movf	___fladd@signs& (0+255),w,b
 11501  0132B6  0100               	movlb	0	; () banked
 11502  0132B8  19B7               	xorwf	___fladd@aexp& (0+255),w,b
 11503  0132BA  B4D8               	btfsc	status,2,c
 11504  0132BC  D002               	goto	l7376
 11505                           
 11506                           ; BSR set to: 0
 11507  0132BE  0100               	movlb	0	; () banked
 11508  0132C0  8DB6               	bsf	___fladd@signs& (0+255),6,b
 11509  0132C2                     l7376:
 11510                           
 11511                           ; BSR set to: 0
 11512  0132C2  0100               	movlb	0	; () banked
 11513  0132C4  51AD               	movf	(___fladd@a+3)& (0+255),w,b
 11514  0132C6  25AD               	addwf	(___fladd@a+3)& (0+255),w,b
 11515  0132C8  0100               	movlb	0	; () banked
 11516  0132CA  6FB7               	movwf	___fladd@aexp& (0+255),b
 11517                           
 11518                           ; BSR set to: 0
 11519  0132CC  0100               	movlb	0	; () banked
 11520  0132CE  AFAC               	btfss	(___fladd@a+2)& (0+255),7,b
 11521  0132D0  D002               	goto	l7382
 11522                           
 11523                           ; BSR set to: 0
 11524  0132D2  0100               	movlb	0	; () banked
 11525  0132D4  81B7               	bsf	___fladd@aexp& (0+255),0,b
 11526  0132D6                     l7382:
 11527                           
 11528                           ; BSR set to: 0
 11529  0132D6  0100               	movlb	0	; () banked
 11530  0132D8  51B7               	movf	___fladd@aexp& (0+255),w,b
 11531  0132DA  0100               	movlb	0	; () banked
 11532  0132DC  B4D8               	btfsc	status,2,c
 11533  0132DE  D012               	goto	l7392
 11534                           
 11535                           ; BSR set to: 0
 11536  0132E0  0100               	movlb	0	; () banked
 11537  0132E2  29B7               	incf	___fladd@aexp& (0+255),w,b
 11538  0132E4  A4D8               	btfss	status,2,c
 11539  0132E6  D009               	goto	l7388
 11540                           
 11541                           ; BSR set to: 0
 11542  0132E8  0E00               	movlw	0
 11543  0132EA  0100               	movlb	0	; () banked
 11544  0132EC  6FAA               	movwf	___fladd@a& (0+255),b
 11545  0132EE  0E00               	movlw	0
 11546  0132F0  6FAB               	movwf	(___fladd@a+1)& (0+255),b
 11547  0132F2  0E00               	movlw	0
 11548  0132F4  6FAC               	movwf	(___fladd@a+2)& (0+255),b
 11549  0132F6  0E00               	movlw	0
 11550  0132F8  6FAD               	movwf	(___fladd@a+3)& (0+255),b
 11551  0132FA                     l7388:
 11552                           
 11553                           ; BSR set to: 0
 11554  0132FA  0100               	movlb	0	; () banked
 11555  0132FC  8FAC               	bsf	(___fladd@a+2)& (0+255),7,b
 11556                           
 11557                           ; BSR set to: 0
 11558  0132FE  0E00               	movlw	0
 11559  013300  0100               	movlb	0	; () banked
 11560  013302  D008               	goto	L10
 11561  013304                     l7392:
 11562                           
 11563                           ; BSR set to: 0
 11564  013304  0E00               	movlw	0
 11565  013306  0100               	movlb	0	; () banked
 11566  013308  6FAA               	movwf	___fladd@a& (0+255),b
 11567  01330A  0E00               	movlw	0
 11568  01330C  6FAB               	movwf	(___fladd@a+1)& (0+255),b
 11569  01330E  0E00               	movlw	0
 11570  013310  6FAC               	movwf	(___fladd@a+2)& (0+255),b
 11571  013312  0E00               	movlw	0
 11572  013314                     L10:
 11573  013314  6FAD               	movwf	(___fladd@a+3)& (0+255),b
 11574                           
 11575                           ; BSR set to: 0
 11576                           
 11577                           ; BSR set to: 0
 11578  013316  0100               	movlb	0	; () banked
 11579  013318  51B8               	movf	___fladd@bexp& (0+255),w,b
 11580  01331A  0100               	movlb	0	; () banked
 11581  01331C  5DB7               	subwf	___fladd@aexp& (0+255),w,b
 11582  01331E  B0D8               	btfsc	status,0,c
 11583  013320  D024               	goto	l7430
 11584                           
 11585                           ; BSR set to: 0
 11586  013322  0100               	movlb	0	; () banked
 11587  013324  ADB6               	btfss	___fladd@signs& (0+255),6,b
 11588  013326  D003               	goto	l7400
 11589                           
 11590                           ; BSR set to: 0
 11591  013328  0E80               	movlw	128
 11592  01332A  0100               	movlb	0	; () banked
 11593  01332C  1BB6               	xorwf	___fladd@signs& (0+255),f,b
 11594  01332E                     l7400:
 11595                           
 11596                           ; BSR set to: 0
 11597  01332E  C0B8  F0B9         	movff	___fladd@bexp,___fladd@grs
 11598                           
 11599                           ; BSR set to: 0
 11600  013332  C0B7  F0B8         	movff	___fladd@aexp,___fladd@bexp
 11601                           
 11602                           ; BSR set to: 0
 11603  013336  C0B9  F0B7         	movff	___fladd@grs,___fladd@aexp
 11604                           
 11605                           ; BSR set to: 0
 11606  01333A  C0A6  F0B9         	movff	___fladd@b,___fladd@grs
 11607                           
 11608                           ; BSR set to: 0
 11609  01333E  C0AA  F0A6         	movff	___fladd@a,___fladd@b
 11610                           
 11611                           ; BSR set to: 0
 11612  013342  C0B9  F0AA         	movff	___fladd@grs,___fladd@a
 11613                           
 11614                           ; BSR set to: 0
 11615  013346  C0A7  F0B9         	movff	___fladd@b+1,___fladd@grs
 11616                           
 11617                           ; BSR set to: 0
 11618  01334A  C0AB  F0A7         	movff	___fladd@a+1,___fladd@b+1
 11619                           
 11620                           ; BSR set to: 0
 11621  01334E  C0B9  F0AB         	movff	___fladd@grs,___fladd@a+1
 11622                           
 11623                           ; BSR set to: 0
 11624  013352  C0A8  F0B9         	movff	___fladd@b+2,___fladd@grs
 11625                           
 11626                           ; BSR set to: 0
 11627  013356  C0AC  F0A8         	movff	___fladd@a+2,___fladd@b+2
 11628                           
 11629                           ; BSR set to: 0
 11630  01335A  C0B9  F0AC         	movff	___fladd@grs,___fladd@a+2
 11631                           
 11632                           ; BSR set to: 0
 11633  01335E  C0A9  F0B9         	movff	___fladd@b+3,___fladd@grs
 11634                           
 11635                           ; BSR set to: 0
 11636  013362  C0AD  F0A9         	movff	___fladd@a+3,___fladd@b+3
 11637                           
 11638                           ; BSR set to: 0
 11639  013366  C0B9  F0AD         	movff	___fladd@grs,___fladd@a+3
 11640  01336A                     l7430:
 11641                           
 11642                           ; BSR set to: 0
 11643  01336A  0E00               	movlw	0
 11644  01336C  0100               	movlb	0	; () banked
 11645  01336E  6FB9               	movwf	___fladd@grs& (0+255),b
 11646                           
 11647                           ; BSR set to: 0
 11648  013370  0100               	movlb	0	; () banked
 11649  013372  51B8               	movf	___fladd@bexp& (0+255),w,b
 11650  013374  0100               	movlb	0	; () banked
 11651  013376  6FAE               	movwf	??___fladd& (0+255),b
 11652  013378  6BAF               	clrf	(??___fladd+1)& (0+255),b
 11653  01337A  0100               	movlb	0	; () banked
 11654  01337C  1FAE               	comf	??___fladd& (0+255),f,b
 11655  01337E  1FAF               	comf	(??___fladd+1)& (0+255),f,b
 11656  013380  4BAE               	infsnz	??___fladd& (0+255),f,b
 11657  013382  2BAF               	incf	(??___fladd+1)& (0+255),f,b
 11658  013384  0100               	movlb	0	; () banked
 11659  013386  51B7               	movf	___fladd@aexp& (0+255),w,b
 11660  013388  0100               	movlb	0	; () banked
 11661  01338A  6FB0               	movwf	(??___fladd+2)& (0+255),b
 11662  01338C  6BB1               	clrf	(??___fladd+3)& (0+255),b
 11663  01338E  0100               	movlb	0	; () banked
 11664  013390  51AE               	movf	??___fladd& (0+255),w,b
 11665  013392  0100               	movlb	0	; () banked
 11666  013394  27B0               	addwf	(??___fladd+2)& (0+255),f,b
 11667  013396  0100               	movlb	0	; () banked
 11668  013398  51AF               	movf	(??___fladd+1)& (0+255),w,b
 11669  01339A  0100               	movlb	0	; () banked
 11670  01339C  23B1               	addwfc	(??___fladd+3)& (0+255),f,b
 11671  01339E  0100               	movlb	0	; () banked
 11672  0133A0  BFB1               	btfsc	(??___fladd+3)& (0+255),7,b
 11673  0133A2  D03D               	goto	l1467
 11674  0133A4  0100               	movlb	0	; () banked
 11675  0133A6  51B1               	movf	(??___fladd+3)& (0+255),w,b
 11676  0133A8  E105               	bnz	u9700
 11677  0133AA  0E1A               	movlw	26
 11678  0133AC  0100               	movlb	0	; () banked
 11679  0133AE  5DB0               	subwf	(??___fladd+2)& (0+255),w,b
 11680  0133B0  A0D8               	btfss	status,0,c
 11681  0133B2  D035               	goto	l1467
 11682  0133B4                     u9700:
 11683                           
 11684                           ; BSR set to: 0
 11685  0133B4  0100               	movlb	0	; () banked
 11686  0133B6  51A6               	movf	___fladd@b& (0+255),w,b
 11687  0133B8  0100               	movlb	0	; () banked
 11688  0133BA  11A7               	iorwf	(___fladd@b+1)& (0+255),w,b
 11689  0133BC  0100               	movlb	0	; () banked
 11690  0133BE  11A8               	iorwf	(___fladd@b+2)& (0+255),w,b
 11691  0133C0  0100               	movlb	0	; () banked
 11692  0133C2  11A9               	iorwf	(___fladd@b+3)& (0+255),w,b
 11693  0133C4  B4D8               	btfsc	status,2,c
 11694  0133C6  D002               	goto	u9710
 11695  0133C8  0E01               	movlw	1
 11696  0133CA  D001               	goto	u9720
 11697  0133CC                     u9710:
 11698  0133CC  0E00               	movlw	0
 11699  0133CE                     u9720:
 11700  0133CE  0100               	movlb	0	; () banked
 11701  0133D0  6FB9               	movwf	___fladd@grs& (0+255),b
 11702                           
 11703                           ; BSR set to: 0
 11704  0133D2  0E00               	movlw	0
 11705  0133D4  0100               	movlb	0	; () banked
 11706  0133D6  6FA6               	movwf	___fladd@b& (0+255),b
 11707  0133D8  0E00               	movlw	0
 11708  0133DA  6FA7               	movwf	(___fladd@b+1)& (0+255),b
 11709  0133DC  0E00               	movlw	0
 11710  0133DE  6FA8               	movwf	(___fladd@b+2)& (0+255),b
 11711  0133E0  0E00               	movlw	0
 11712  0133E2  6FA9               	movwf	(___fladd@b+3)& (0+255),b
 11713                           
 11714                           ; BSR set to: 0
 11715  0133E4  C0B7  F0B8         	movff	___fladd@aexp,___fladd@bexp
 11716  0133E8  D020               	goto	l1466
 11717  0133EA                     l1468:
 11718                           
 11719                           ; BSR set to: 0
 11720  0133EA  0100               	movlb	0	; () banked
 11721  0133EC  A1B9               	btfss	___fladd@grs& (0+255),0,b
 11722  0133EE  D007               	goto	l7442
 11723                           
 11724                           ; BSR set to: 0
 11725  0133F0  0100               	movlb	0	; () banked
 11726  0133F2  90D8               	bcf	status,0,c
 11727  0133F4  31B9               	rrcf	___fladd@grs& (0+255),w,b
 11728  0133F6  0901               	iorlw	1
 11729  0133F8  0100               	movlb	0	; () banked
 11730  0133FA  6FB9               	movwf	___fladd@grs& (0+255),b
 11731  0133FC  D003               	goto	l7444
 11732  0133FE                     l7442:
 11733                           
 11734                           ; BSR set to: 0
 11735  0133FE  0100               	movlb	0	; () banked
 11736  013400  90D8               	bcf	status,0,c
 11737  013402  33B9               	rrcf	___fladd@grs& (0+255),f,b
 11738  013404                     l7444:
 11739                           
 11740                           ; BSR set to: 0
 11741  013404  0100               	movlb	0	; () banked
 11742  013406  A1A6               	btfss	___fladd@b& (0+255),0,b
 11743  013408  D002               	goto	l7448
 11744                           
 11745                           ; BSR set to: 0
 11746  01340A  0100               	movlb	0	; () banked
 11747  01340C  8FB9               	bsf	___fladd@grs& (0+255),7,b
 11748  01340E                     l7448:
 11749                           
 11750                           ; BSR set to: 0
 11751  01340E  0100               	movlb	0	; () banked
 11752  013410  35A9               	rlcf	(___fladd@b+3)& (0+255),w,b
 11753  013412  33A9               	rrcf	(___fladd@b+3)& (0+255),f,b
 11754  013414  33A8               	rrcf	(___fladd@b+2)& (0+255),f,b
 11755  013416  33A7               	rrcf	(___fladd@b+1)& (0+255),f,b
 11756  013418  33A6               	rrcf	___fladd@b& (0+255),f,b
 11757                           
 11758                           ; BSR set to: 0
 11759  01341A  0100               	movlb	0	; () banked
 11760  01341C  2BB8               	incf	___fladd@bexp& (0+255),f,b
 11761  01341E                     l1467:
 11762                           
 11763                           ; BSR set to: 0
 11764  01341E  0100               	movlb	0	; () banked
 11765  013420  51B7               	movf	___fladd@aexp& (0+255),w,b
 11766  013422  0100               	movlb	0	; () banked
 11767  013424  5DB8               	subwf	___fladd@bexp& (0+255),w,b
 11768  013426  A0D8               	btfss	status,0,c
 11769  013428  D7E0               	goto	l1468
 11770  01342A                     l1466:
 11771                           
 11772                           ; BSR set to: 0
 11773  01342A  0100               	movlb	0	; () banked
 11774  01342C  BDB6               	btfsc	___fladd@signs& (0+255),6,b
 11775  01342E  D03F               	goto	l7476
 11776                           
 11777                           ; BSR set to: 0
 11778  013430  0100               	movlb	0	; () banked
 11779  013432  51B8               	movf	___fladd@bexp& (0+255),w,b
 11780  013434  0100               	movlb	0	; () banked
 11781  013436  A4D8               	btfss	status,2,c
 11782  013438  D00A               	goto	l7458
 11783                           
 11784                           ; BSR set to: 0
 11785  01343A  0E00               	movlw	0
 11786  01343C  0100               	movlb	0	; () banked
 11787  01343E  6FA6               	movwf	?___fladd& (0+255),b
 11788  013440  0E00               	movlw	0
 11789  013442  6FA7               	movwf	(?___fladd+1)& (0+255),b
 11790  013444  0E00               	movlw	0
 11791  013446  6FA8               	movwf	(?___fladd+2)& (0+255),b
 11792  013448  0E00               	movlw	0
 11793  01344A  6FA9               	movwf	(?___fladd+3)& (0+255),b
 11794                           
 11795                           ; BSR set to: 0
 11796  01344C  0012               	return	
 11797  01344E                     l7458:
 11798                           
 11799                           ; BSR set to: 0
 11800  01344E  0100               	movlb	0	; () banked
 11801  013450  51AA               	movf	___fladd@a& (0+255),w,b
 11802  013452  0100               	movlb	0	; () banked
 11803  013454  27A6               	addwf	___fladd@b& (0+255),f,b
 11804  013456  0100               	movlb	0	; () banked
 11805  013458  51AB               	movf	(___fladd@a+1)& (0+255),w,b
 11806  01345A  0100               	movlb	0	; () banked
 11807  01345C  23A7               	addwfc	(___fladd@b+1)& (0+255),f,b
 11808  01345E  0100               	movlb	0	; () banked
 11809  013460  51AC               	movf	(___fladd@a+2)& (0+255),w,b
 11810  013462  0100               	movlb	0	; () banked
 11811  013464  23A8               	addwfc	(___fladd@b+2)& (0+255),f,b
 11812  013466  0100               	movlb	0	; () banked
 11813  013468  51AD               	movf	(___fladd@a+3)& (0+255),w,b
 11814  01346A  0100               	movlb	0	; () banked
 11815  01346C  23A9               	addwfc	(___fladd@b+3)& (0+255),f,b
 11816                           
 11817                           ; BSR set to: 0
 11818  01346E  0100               	movlb	0	; () banked
 11819  013470  A1A9               	btfss	(___fladd@b+3)& (0+255),0,b
 11820  013472  D0CC               	goto	l7512
 11821                           
 11822                           ; BSR set to: 0
 11823  013474  0100               	movlb	0	; () banked
 11824  013476  A1B9               	btfss	___fladd@grs& (0+255),0,b
 11825  013478  D009               	goto	l7466
 11826                           
 11827                           ; BSR set to: 0
 11828  01347A  0100               	movlb	0	; () banked
 11829  01347C  90D8               	bcf	status,0,c
 11830  01347E  33B9               	rrcf	___fladd@grs& (0+255),f,b
 11831  013480  0100               	movlb	0	; () banked
 11832  013482  51B9               	movf	___fladd@grs& (0+255),w,b
 11833  013484  0901               	iorlw	1
 11834  013486  0100               	movlb	0	; () banked
 11835  013488  6FB9               	movwf	___fladd@grs& (0+255),b
 11836  01348A  D003               	goto	l7468
 11837  01348C                     l7466:
 11838                           
 11839                           ; BSR set to: 0
 11840  01348C  0100               	movlb	0	; () banked
 11841  01348E  90D8               	bcf	status,0,c
 11842  013490  33B9               	rrcf	___fladd@grs& (0+255),f,b
 11843  013492                     l7468:
 11844                           
 11845                           ; BSR set to: 0
 11846  013492  0100               	movlb	0	; () banked
 11847  013494  A1A6               	btfss	___fladd@b& (0+255),0,b
 11848  013496  D002               	goto	l7472
 11849                           
 11850                           ; BSR set to: 0
 11851  013498  0100               	movlb	0	; () banked
 11852  01349A  8FB9               	bsf	___fladd@grs& (0+255),7,b
 11853  01349C                     l7472:
 11854                           
 11855                           ; BSR set to: 0
 11856  01349C  0100               	movlb	0	; () banked
 11857  01349E  35A9               	rlcf	(___fladd@b+3)& (0+255),w,b
 11858  0134A0  33A9               	rrcf	(___fladd@b+3)& (0+255),f,b
 11859  0134A2  33A8               	rrcf	(___fladd@b+2)& (0+255),f,b
 11860  0134A4  33A7               	rrcf	(___fladd@b+1)& (0+255),f,b
 11861  0134A6  33A6               	rrcf	___fladd@b& (0+255),f,b
 11862                           
 11863                           ; BSR set to: 0
 11864  0134A8  0100               	movlb	0	; () banked
 11865  0134AA  2BB8               	incf	___fladd@bexp& (0+255),f,b
 11866                           
 11867                           ; BSR set to: 0
 11868  0134AC  D0AF               	goto	l7512
 11869  0134AE                     l7476:
 11870                           
 11871                           ; BSR set to: 0
 11872  0134AE  0100               	movlb	0	; () banked
 11873  0134B0  51AA               	movf	___fladd@a& (0+255),w,b
 11874  0134B2  0100               	movlb	0	; () banked
 11875  0134B4  5DA6               	subwf	___fladd@b& (0+255),w,b
 11876  0134B6  0100               	movlb	0	; () banked
 11877  0134B8  51AB               	movf	(___fladd@a+1)& (0+255),w,b
 11878  0134BA  0100               	movlb	0	; () banked
 11879  0134BC  59A7               	subwfb	(___fladd@b+1)& (0+255),w,b
 11880  0134BE  0100               	movlb	0	; () banked
 11881  0134C0  51AC               	movf	(___fladd@a+2)& (0+255),w,b
 11882  0134C2  0100               	movlb	0	; () banked
 11883  0134C4  59A8               	subwfb	(___fladd@b+2)& (0+255),w,b
 11884  0134C6  0100               	movlb	0	; () banked
 11885  0134C8  51A9               	movf	(___fladd@b+3)& (0+255),w,b
 11886  0134CA  0A80               	xorlw	128
 11887  0134CC  0100               	movlb	0	; () banked
 11888  0134CE  6FAE               	movwf	??___fladd& (0+255),b
 11889  0134D0  0100               	movlb	0	; () banked
 11890  0134D2  51AD               	movf	(___fladd@a+3)& (0+255),w,b
 11891  0134D4  0A80               	xorlw	128
 11892  0134D6  0100               	movlb	0	; () banked
 11893  0134D8  59AE               	subwfb	??___fladd& (0+255),w,b
 11894  0134DA  B0D8               	btfsc	status,0,c
 11895  0134DC  D050               	goto	l7486
 11896                           
 11897                           ; BSR set to: 0
 11898  0134DE  C0A6  F0AE         	movff	___fladd@b,??___fladd
 11899  0134E2  C0A7  F0AF         	movff	___fladd@b+1,??___fladd+1
 11900  0134E6  C0A8  F0B0         	movff	___fladd@b+2,??___fladd+2
 11901  0134EA  C0A9  F0B1         	movff	___fladd@b+3,??___fladd+3
 11902  0134EE  0100               	movlb	0	; () banked
 11903  0134F0  1FAE               	comf	??___fladd& (0+255),f,b
 11904  0134F2  1FAF               	comf	(??___fladd+1)& (0+255),f,b
 11905  0134F4  1FB0               	comf	(??___fladd+2)& (0+255),f,b
 11906  0134F6  1FB1               	comf	(??___fladd+3)& (0+255),f,b
 11907  0134F8  2BAE               	incf	??___fladd& (0+255),f,b
 11908  0134FA  0E00               	movlw	0
 11909  0134FC  23AF               	addwfc	(??___fladd+1)& (0+255),f,b
 11910  0134FE  23B0               	addwfc	(??___fladd+2)& (0+255),f,b
 11911  013500  23B1               	addwfc	(??___fladd+3)& (0+255),f,b
 11912  013502  0100               	movlb	0	; () banked
 11913  013504  51AA               	movf	___fladd@a& (0+255),w,b
 11914  013506  0100               	movlb	0	; () banked
 11915  013508  25AE               	addwf	??___fladd& (0+255),w,b
 11916  01350A  0100               	movlb	0	; () banked
 11917  01350C  6FB2               	movwf	(??___fladd+4)& (0+255),b
 11918  01350E  0100               	movlb	0	; () banked
 11919  013510  51AB               	movf	(___fladd@a+1)& (0+255),w,b
 11920  013512  0100               	movlb	0	; () banked
 11921  013514  21AF               	addwfc	(??___fladd+1)& (0+255),w,b
 11922  013516  0100               	movlb	0	; () banked
 11923  013518  6FB3               	movwf	(??___fladd+5)& (0+255),b
 11924  01351A  0100               	movlb	0	; () banked
 11925  01351C  51AC               	movf	(___fladd@a+2)& (0+255),w,b
 11926  01351E  0100               	movlb	0	; () banked
 11927  013520  21B0               	addwfc	(??___fladd+2)& (0+255),w,b
 11928  013522  0100               	movlb	0	; () banked
 11929  013524  6FB4               	movwf	(??___fladd+6)& (0+255),b
 11930  013526  0100               	movlb	0	; () banked
 11931  013528  51AD               	movf	(___fladd@a+3)& (0+255),w,b
 11932  01352A  0100               	movlb	0	; () banked
 11933  01352C  21B1               	addwfc	(??___fladd+3)& (0+255),w,b
 11934  01352E  0100               	movlb	0	; () banked
 11935  013530  6FB5               	movwf	(??___fladd+7)& (0+255),b
 11936  013532  0EFF               	movlw	255
 11937  013534  0100               	movlb	0	; () banked
 11938  013536  25B2               	addwf	(??___fladd+4)& (0+255),w,b
 11939  013538  0100               	movlb	0	; () banked
 11940  01353A  6FA6               	movwf	___fladd@b& (0+255),b
 11941  01353C  0EFF               	movlw	255
 11942  01353E  0100               	movlb	0	; () banked
 11943  013540  21B3               	addwfc	(??___fladd+5)& (0+255),w,b
 11944  013542  0100               	movlb	0	; () banked
 11945  013544  6FA7               	movwf	(___fladd@b+1)& (0+255),b
 11946  013546  0EFF               	movlw	255
 11947  013548  0100               	movlb	0	; () banked
 11948  01354A  21B4               	addwfc	(??___fladd+6)& (0+255),w,b
 11949  01354C  0100               	movlb	0	; () banked
 11950  01354E  6FA8               	movwf	(___fladd@b+2)& (0+255),b
 11951  013550  0EFF               	movlw	255
 11952  013552  0100               	movlb	0	; () banked
 11953  013554  21B5               	addwfc	(??___fladd+7)& (0+255),w,b
 11954  013556  0100               	movlb	0	; () banked
 11955  013558  6FA9               	movwf	(___fladd@b+3)& (0+255),b
 11956  01355A  0E80               	movlw	128
 11957  01355C  0100               	movlb	0	; () banked
 11958  01355E  1BB6               	xorwf	___fladd@signs& (0+255),f,b
 11959                           
 11960                           ; BSR set to: 0
 11961  013560  0100               	movlb	0	; () banked
 11962  013562  6DB9               	negf	___fladd@grs& (0+255),b
 11963                           
 11964                           ; BSR set to: 0
 11965  013564  0100               	movlb	0	; () banked
 11966  013566  51B9               	movf	___fladd@grs& (0+255),w,b
 11967  013568  0100               	movlb	0	; () banked
 11968  01356A  A4D8               	btfss	status,2,c
 11969  01356C  D018               	goto	l1483
 11970                           
 11971                           ; BSR set to: 0
 11972  01356E  0E01               	movlw	1
 11973  013570  0100               	movlb	0	; () banked
 11974  013572  27A6               	addwf	___fladd@b& (0+255),f,b
 11975  013574  0E00               	movlw	0
 11976  013576  23A7               	addwfc	(___fladd@b+1)& (0+255),f,b
 11977  013578  23A8               	addwfc	(___fladd@b+2)& (0+255),f,b
 11978  01357A  23A9               	addwfc	(___fladd@b+3)& (0+255),f,b
 11979                           
 11980                           ; BSR set to: 0
 11981  01357C  D010               	goto	l1483
 11982  01357E                     l7486:
 11983                           
 11984                           ; BSR set to: 0
 11985  01357E  0100               	movlb	0	; () banked
 11986  013580  51AA               	movf	___fladd@a& (0+255),w,b
 11987  013582  0100               	movlb	0	; () banked
 11988  013584  5FA6               	subwf	___fladd@b& (0+255),f,b
 11989  013586  0100               	movlb	0	; () banked
 11990  013588  51AB               	movf	(___fladd@a+1)& (0+255),w,b
 11991  01358A  0100               	movlb	0	; () banked
 11992  01358C  5BA7               	subwfb	(___fladd@b+1)& (0+255),f,b
 11993  01358E  0100               	movlb	0	; () banked
 11994  013590  51AC               	movf	(___fladd@a+2)& (0+255),w,b
 11995  013592  0100               	movlb	0	; () banked
 11996  013594  5BA8               	subwfb	(___fladd@b+2)& (0+255),f,b
 11997  013596  0100               	movlb	0	; () banked
 11998  013598  51AD               	movf	(___fladd@a+3)& (0+255),w,b
 11999  01359A  0100               	movlb	0	; () banked
 12000  01359C  5BA9               	subwfb	(___fladd@b+3)& (0+255),f,b
 12001  01359E                     l1483:
 12002                           
 12003                           ; BSR set to: 0
 12004  01359E  0100               	movlb	0	; () banked
 12005  0135A0  51A6               	movf	___fladd@b& (0+255),w,b
 12006  0135A2  0100               	movlb	0	; () banked
 12007  0135A4  11A7               	iorwf	(___fladd@b+1)& (0+255),w,b
 12008  0135A6  0100               	movlb	0	; () banked
 12009  0135A8  11A8               	iorwf	(___fladd@b+2)& (0+255),w,b
 12010  0135AA  0100               	movlb	0	; () banked
 12011  0135AC  11A9               	iorwf	(___fladd@b+3)& (0+255),w,b
 12012  0135AE  A4D8               	btfss	status,2,c
 12013  0135B0  D02A               	goto	l7510
 12014                           
 12015                           ; BSR set to: 0
 12016  0135B2  0100               	movlb	0	; () banked
 12017  0135B4  51B9               	movf	___fladd@grs& (0+255),w,b
 12018  0135B6  0100               	movlb	0	; () banked
 12019  0135B8  A4D8               	btfss	status,2,c
 12020  0135BA  D025               	goto	l7510
 12021                           
 12022                           ; BSR set to: 0
 12023  0135BC  0E00               	movlw	0
 12024  0135BE  0100               	movlb	0	; () banked
 12025  0135C0  6FA6               	movwf	?___fladd& (0+255),b
 12026  0135C2  0E00               	movlw	0
 12027  0135C4  6FA7               	movwf	(?___fladd+1)& (0+255),b
 12028  0135C6  0E00               	movlw	0
 12029  0135C8  6FA8               	movwf	(?___fladd+2)& (0+255),b
 12030  0135CA  0E00               	movlw	0
 12031  0135CC  6FA9               	movwf	(?___fladd+3)& (0+255),b
 12032                           
 12033                           ; BSR set to: 0
 12034  0135CE  0012               	return	
 12035  0135D0                     l7494:
 12036                           
 12037                           ; BSR set to: 0
 12038  0135D0  0100               	movlb	0	; () banked
 12039  0135D2  90D8               	bcf	status,0,c
 12040  0135D4  37A6               	rlcf	___fladd@b& (0+255),f,b
 12041  0135D6  37A7               	rlcf	(___fladd@b+1)& (0+255),f,b
 12042  0135D8  37A8               	rlcf	(___fladd@b+2)& (0+255),f,b
 12043  0135DA  37A9               	rlcf	(___fladd@b+3)& (0+255),f,b
 12044                           
 12045                           ; BSR set to: 0
 12046  0135DC  0100               	movlb	0	; () banked
 12047  0135DE  AFB9               	btfss	___fladd@grs& (0+255),7,b
 12048  0135E0  D002               	goto	l7500
 12049                           
 12050                           ; BSR set to: 0
 12051  0135E2  0100               	movlb	0	; () banked
 12052  0135E4  81A6               	bsf	___fladd@b& (0+255),0,b
 12053  0135E6                     l7500:
 12054                           
 12055                           ; BSR set to: 0
 12056  0135E6  0100               	movlb	0	; () banked
 12057  0135E8  A1B9               	btfss	___fladd@grs& (0+255),0,b
 12058  0135EA  D003               	goto	l7504
 12059                           
 12060                           ; BSR set to: 0
 12061  0135EC  80D8               	bsf	status,0,c
 12062  0135EE  0100               	movlb	0	; () banked
 12063  0135F0  D002               	goto	L11
 12064  0135F2                     l7504:
 12065                           
 12066                           ; BSR set to: 0
 12067  0135F2  0100               	movlb	0	; () banked
 12068  0135F4  90D8               	bcf	status,0,c
 12069  0135F6                     L11:
 12070  0135F6  37B9               	rlcf	___fladd@grs& (0+255),f,b
 12071                           
 12072                           ; BSR set to: 0
 12073                           
 12074                           ; BSR set to: 0
 12075  0135F8  0100               	movlb	0	; () banked
 12076  0135FA  51B8               	movf	___fladd@bexp& (0+255),w,b
 12077  0135FC  0100               	movlb	0	; () banked
 12078  0135FE  B4D8               	btfsc	status,2,c
 12079  013600  D002               	goto	l7510
 12080                           
 12081                           ; BSR set to: 0
 12082  013602  0100               	movlb	0	; () banked
 12083  013604  07B8               	decf	___fladd@bexp& (0+255),f,b
 12084  013606                     l7510:
 12085                           
 12086                           ; BSR set to: 0
 12087  013606  0100               	movlb	0	; () banked
 12088  013608  AFA8               	btfss	(___fladd@b+2)& (0+255),7,b
 12089  01360A  D7E2               	goto	l7494
 12090  01360C                     l7512:
 12091                           
 12092                           ; BSR set to: 0
 12093  01360C  0E00               	movlw	0
 12094  01360E  0100               	movlb	0	; () banked
 12095  013610  6FB7               	movwf	___fladd@aexp& (0+255),b
 12096                           
 12097                           ; BSR set to: 0
 12098  013612  0100               	movlb	0	; () banked
 12099  013614  AFB9               	btfss	___fladd@grs& (0+255),7,b
 12100  013616  D00D               	goto	l1492
 12101                           
 12102                           ; BSR set to: 0
 12103  013618  C0B9  F0AE         	movff	___fladd@grs,??___fladd
 12104  01361C  0E7F               	movlw	127
 12105  01361E  0100               	movlb	0	; () banked
 12106  013620  17AE               	andwf	??___fladd& (0+255),f,b
 12107  013622  A4D8               	btfss	status,2,c
 12108  013624  D003               	goto	l7520
 12109                           
 12110                           ; BSR set to: 0
 12111                           
 12112                           ; BSR set to: 0
 12113  013626  0100               	movlb	0	; () banked
 12114  013628  A1A6               	btfss	___fladd@b& (0+255),0,b
 12115  01362A  D003               	goto	l1492
 12116  01362C                     l7520:
 12117                           
 12118                           ; BSR set to: 0
 12119  01362C  0E01               	movlw	1
 12120  01362E  0100               	movlb	0	; () banked
 12121  013630  6FB7               	movwf	___fladd@aexp& (0+255),b
 12122  013632                     l1492:
 12123                           
 12124                           ; BSR set to: 0
 12125  013632  0100               	movlb	0	; () banked
 12126  013634  51B7               	movf	___fladd@aexp& (0+255),w,b
 12127  013636  0100               	movlb	0	; () banked
 12128  013638  B4D8               	btfsc	status,2,c
 12129  01363A  D026               	goto	l7530
 12130                           
 12131                           ; BSR set to: 0
 12132  01363C  0E01               	movlw	1
 12133  01363E  0100               	movlb	0	; () banked
 12134  013640  27A6               	addwf	___fladd@b& (0+255),f,b
 12135  013642  0E00               	movlw	0
 12136  013644  23A7               	addwfc	(___fladd@b+1)& (0+255),f,b
 12137  013646  23A8               	addwfc	(___fladd@b+2)& (0+255),f,b
 12138  013648  23A9               	addwfc	(___fladd@b+3)& (0+255),f,b
 12139                           
 12140                           ; BSR set to: 0
 12141  01364A  0100               	movlb	0	; () banked
 12142  01364C  A1A9               	btfss	(___fladd@b+3)& (0+255),0,b
 12143  01364E  D01C               	goto	l7530
 12144                           
 12145                           ; BSR set to: 0
 12146  013650  C0A6  F0AE         	movff	___fladd@b,??___fladd
 12147  013654  C0A7  F0AF         	movff	___fladd@b+1,??___fladd+1
 12148  013658  C0A8  F0B0         	movff	___fladd@b+2,??___fladd+2
 12149  01365C  C0A9  F0B1         	movff	___fladd@b+3,??___fladd+3
 12150  013660  0100               	movlb	0	; () banked
 12151  013662  35B1               	rlcf	(??___fladd+3)& (0+255),w,b
 12152  013664  33B1               	rrcf	(??___fladd+3)& (0+255),f,b
 12153  013666  33B0               	rrcf	(??___fladd+2)& (0+255),f,b
 12154  013668  33AF               	rrcf	(??___fladd+1)& (0+255),f,b
 12155  01366A  33AE               	rrcf	??___fladd& (0+255),f,b
 12156  01366C  C0AE  F0A6         	movff	??___fladd,___fladd@b
 12157  013670  C0AF  F0A7         	movff	??___fladd+1,___fladd@b+1
 12158  013674  C0B0  F0A8         	movff	??___fladd+2,___fladd@b+2
 12159  013678  C0B1  F0A9         	movff	??___fladd+3,___fladd@b+3
 12160  01367C  0100               	movlb	0	; () banked
 12161  01367E  29B8               	incf	___fladd@bexp& (0+255),w,b
 12162  013680  B4D8               	btfsc	status,2,c
 12163  013682  D002               	goto	l7530
 12164                           
 12165                           ; BSR set to: 0
 12166  013684  0100               	movlb	0	; () banked
 12167  013686  2BB8               	incf	___fladd@bexp& (0+255),f,b
 12168  013688                     l7530:
 12169                           
 12170                           ; BSR set to: 0
 12171  013688  0100               	movlb	0	; () banked
 12172  01368A  29B8               	incf	___fladd@bexp& (0+255),w,b
 12173  01368C  B4D8               	btfsc	status,2,c
 12174  01368E  D005               	goto	l7534
 12175                           
 12176                           ; BSR set to: 0
 12177  013690  0100               	movlb	0	; () banked
 12178  013692  51B8               	movf	___fladd@bexp& (0+255),w,b
 12179  013694  0100               	movlb	0	; () banked
 12180  013696  A4D8               	btfss	status,2,c
 12181  013698  D011               	goto	l7538
 12182  01369A                     l7534:
 12183                           
 12184                           ; BSR set to: 0
 12185  01369A  0E00               	movlw	0
 12186  01369C  0100               	movlb	0	; () banked
 12187  01369E  6FA6               	movwf	___fladd@b& (0+255),b
 12188  0136A0  0E00               	movlw	0
 12189  0136A2  6FA7               	movwf	(___fladd@b+1)& (0+255),b
 12190  0136A4  0E00               	movlw	0
 12191  0136A6  6FA8               	movwf	(___fladd@b+2)& (0+255),b
 12192  0136A8  0E00               	movlw	0
 12193  0136AA  6FA9               	movwf	(___fladd@b+3)& (0+255),b
 12194  0136AC  0100               	movlb	0	; () banked
 12195  0136AE  51B8               	movf	___fladd@bexp& (0+255),w,b
 12196  0136B0  0100               	movlb	0	; () banked
 12197  0136B2  A4D8               	btfss	status,2,c
 12198  0136B4  D003               	goto	l7538
 12199                           
 12200                           ; BSR set to: 0
 12201  0136B6  0E00               	movlw	0
 12202  0136B8  0100               	movlb	0	; () banked
 12203  0136BA  6FB6               	movwf	___fladd@signs& (0+255),b
 12204  0136BC                     l7538:
 12205                           
 12206                           ; BSR set to: 0
 12207  0136BC  0100               	movlb	0	; () banked
 12208  0136BE  A1B8               	btfss	___fladd@bexp& (0+255),0,b
 12209  0136C0  D003               	goto	l7542
 12210                           
 12211                           ; BSR set to: 0
 12212  0136C2  0100               	movlb	0	; () banked
 12213  0136C4  8FA8               	bsf	(___fladd@b+2)& (0+255),7,b
 12214  0136C6  D002               	goto	l7544
 12215  0136C8                     l7542:
 12216                           
 12217                           ; BSR set to: 0
 12218  0136C8  0100               	movlb	0	; () banked
 12219  0136CA  9FA8               	bcf	(___fladd@b+2)& (0+255),7,b
 12220  0136CC                     l7544:
 12221                           
 12222                           ; BSR set to: 0
 12223  0136CC  0100               	movlb	0	; () banked
 12224  0136CE  90D8               	bcf	status,0,c
 12225  0136D0  31B8               	rrcf	___fladd@bexp& (0+255),w,b
 12226  0136D2  0100               	movlb	0	; () banked
 12227  0136D4  6FA9               	movwf	(___fladd@b+3)& (0+255),b
 12228                           
 12229                           ; BSR set to: 0
 12230  0136D6  0100               	movlb	0	; () banked
 12231  0136D8  AFB6               	btfss	___fladd@signs& (0+255),7,b
 12232  0136DA  D002               	goto	l7550
 12233                           
 12234                           ; BSR set to: 0
 12235  0136DC  0100               	movlb	0	; () banked
 12236  0136DE  8FA9               	bsf	(___fladd@b+3)& (0+255),7,b
 12237  0136E0                     l7550:
 12238                           
 12239                           ; BSR set to: 0
 12240  0136E0  C0A6  F0A6         	movff	___fladd@b,?___fladd
 12241  0136E4  C0A7  F0A7         	movff	___fladd@b+1,?___fladd+1
 12242  0136E8  C0A8  F0A8         	movff	___fladd@b+2,?___fladd+2
 12243  0136EC  C0A9  F0A9         	movff	___fladd@b+3,?___fladd+3
 12244  0136F0  0012               	return	
 12245  0136F2                     __end_of___fladd:
 12246                           	opt stack 0
 12247                           tblptru	equ	0xFF8
 12248                           tblptrh	equ	0xFF7
 12249                           tblptrl	equ	0xFF6
 12250                           tablat	equ	0xFF5
 12251                           prodh	equ	0xFF4
 12252                           prodl	equ	0xFF3
 12253                           intcon	equ	0xFF2
 12254                           postinc0	equ	0xFEE
 12255                           wreg	equ	0xFE8
 12256                           indf2	equ	0xFDF
 12257                           postinc2	equ	0xFDE
 12258                           fsr2h	equ	0xFDA
 12259                           fsr2l	equ	0xFD9
 12260                           status	equ	0xFD8
 12261                           
 12262 ;; *************** function ___flneg *****************
 12263 ;; Defined at:
 12264 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
 12265 ;; Parameters:    Size  Location     Type
 12266 ;;  f1              4   57[BANK0 ] unsigned char 
 12267 ;; Auto vars:     Size  Location     Type
 12268 ;;		None
 12269 ;; Return value:  Size  Location     Type
 12270 ;;                  4   57[BANK0 ] unsigned char 
 12271 ;; Registers used:
 12272 ;;		wreg, status,2, status,0
 12273 ;; Tracked objects:
 12274 ;;		On entry : 0/0
 12275 ;;		On exit  : 0/0
 12276 ;;		Unchanged: 0/0
 12277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12278 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12281 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12282 ;;Total ram usage:        4 bytes
 12283 ;; Hardware stack levels used:    1
 12284 ;; Hardware stack levels required when called:    3
 12285 ;; This function calls:
 12286 ;;		Nothing
 12287 ;; This function is called by:
 12288 ;;		_main
 12289 ;;		_sprintf
 12290 ;; This function uses a non-reentrant model
 12291 ;;
 12292                           
 12293                           	psect	text23
 12294  015BB6                     __ptext23:
 12295                           	opt stack 0
 12296  015BB6                     ___flneg:
 12297                           	opt stack 27
 12298                           
 12299                           ; BSR set to: 0
 12300                           ;incstack = 0
 12301  015BB6  0100               	movlb	0	; () banked
 12302  015BB8  5199               	movf	___flneg@f1& (0+255),w,b
 12303  015BBA  0100               	movlb	0	; () banked
 12304  015BBC  119A               	iorwf	(___flneg@f1+1)& (0+255),w,b
 12305  015BBE  0100               	movlb	0	; () banked
 12306  015BC0  119B               	iorwf	(___flneg@f1+2)& (0+255),w,b
 12307  015BC2  0100               	movlb	0	; () banked
 12308  015BC4  119C               	iorwf	(___flneg@f1+3)& (0+255),w,b
 12309  015BC6  B4D8               	btfsc	status,2,c
 12310  015BC8  D009               	goto	l8026
 12311                           
 12312                           ; BSR set to: 0
 12313  015BCA  0E00               	movlw	0
 12314  015BCC  0100               	movlb	0	; () banked
 12315  015BCE  1B99               	xorwf	___flneg@f1& (0+255),f,b
 12316  015BD0  0E00               	movlw	0
 12317  015BD2  1B9A               	xorwf	(___flneg@f1+1)& (0+255),f,b
 12318  015BD4  0E00               	movlw	0
 12319  015BD6  1B9B               	xorwf	(___flneg@f1+2)& (0+255),f,b
 12320  015BD8  0E80               	movlw	128
 12321  015BDA  1B9C               	xorwf	(___flneg@f1+3)& (0+255),f,b
 12322  015BDC                     l8026:
 12323                           
 12324                           ; BSR set to: 0
 12325  015BDC  C099  F099         	movff	___flneg@f1,?___flneg
 12326  015BE0  C09A  F09A         	movff	___flneg@f1+1,?___flneg+1
 12327  015BE4  C09B  F09B         	movff	___flneg@f1+2,?___flneg+2
 12328  015BE8  C09C  F09C         	movff	___flneg@f1+3,?___flneg+3
 12329  015BEC  0012               	return	
 12330  015BEE                     __end_of___flneg:
 12331                           	opt stack 0
 12332                           tblptru	equ	0xFF8
 12333                           tblptrh	equ	0xFF7
 12334                           tblptrl	equ	0xFF6
 12335                           tablat	equ	0xFF5
 12336                           prodh	equ	0xFF4
 12337                           prodl	equ	0xFF3
 12338                           intcon	equ	0xFF2
 12339                           postinc0	equ	0xFEE
 12340                           wreg	equ	0xFE8
 12341                           indf2	equ	0xFDF
 12342                           postinc2	equ	0xFDE
 12343                           fsr2h	equ	0xFDA
 12344                           fsr2l	equ	0xFD9
 12345                           status	equ	0xFD8
 12346                           
 12347 ;; *************** function ___flge *****************
 12348 ;; Defined at:
 12349 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
 12350 ;; Parameters:    Size  Location     Type
 12351 ;;  ff1             4   18[BANK0 ] unsigned char 
 12352 ;;  ff2             4   22[BANK0 ] unsigned char 
 12353 ;; Auto vars:     Size  Location     Type
 12354 ;;		None
 12355 ;; Return value:  Size  Location     Type
 12356 ;;		None               void
 12357 ;; Registers used:
 12358 ;;		wreg, status,2, status,0
 12359 ;; Tracked objects:
 12360 ;;		On entry : 0/0
 12361 ;;		On exit  : 0/0
 12362 ;;		Unchanged: 0/0
 12363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12364 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12366 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12367 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12368 ;;Total ram usage:       12 bytes
 12369 ;; Hardware stack levels used:    1
 12370 ;; Hardware stack levels required when called:    3
 12371 ;; This function calls:
 12372 ;;		Nothing
 12373 ;; This function is called by:
 12374 ;;		_sprintf
 12375 ;; This function uses a non-reentrant model
 12376 ;;
 12377                           
 12378                           	psect	text24
 12379  014CF8                     __ptext24:
 12380                           	opt stack 0
 12381  014CF8                     ___flge:
 12382                           	opt stack 25
 12383                           
 12384                           ; BSR set to: 0
 12385                           ;incstack = 0
 12386  014CF8  0E00               	movlw	0
 12387  014CFA  0100               	movlb	0	; () banked
 12388  014CFC  1572               	andwf	___flge@ff1& (0+255),w,b
 12389  014CFE  0100               	movlb	0	; () banked
 12390  014D00  6F7A               	movwf	??___flge& (0+255),b
 12391  014D02  0E00               	movlw	0
 12392  014D04  0100               	movlb	0	; () banked
 12393  014D06  1573               	andwf	(___flge@ff1+1)& (0+255),w,b
 12394  014D08  0100               	movlb	0	; () banked
 12395  014D0A  6F7B               	movwf	(??___flge+1)& (0+255),b
 12396  014D0C  0E80               	movlw	128
 12397  014D0E  0100               	movlb	0	; () banked
 12398  014D10  1574               	andwf	(___flge@ff1+2)& (0+255),w,b
 12399  014D12  0100               	movlb	0	; () banked
 12400  014D14  6F7C               	movwf	(??___flge+2)& (0+255),b
 12401  014D16  0E7F               	movlw	127
 12402  014D18  0100               	movlb	0	; () banked
 12403  014D1A  1575               	andwf	(___flge@ff1+3)& (0+255),w,b
 12404  014D1C  0100               	movlb	0	; () banked
 12405  014D1E  6F7D               	movwf	(??___flge+3)& (0+255),b
 12406  014D20  0100               	movlb	0	; () banked
 12407  014D22  517A               	movf	??___flge& (0+255),w,b
 12408  014D24  0100               	movlb	0	; () banked
 12409  014D26  117B               	iorwf	(??___flge+1)& (0+255),w,b
 12410  014D28  0100               	movlb	0	; () banked
 12411  014D2A  117C               	iorwf	(??___flge+2)& (0+255),w,b
 12412  014D2C  0100               	movlb	0	; () banked
 12413  014D2E  117D               	iorwf	(??___flge+3)& (0+255),w,b
 12414  014D30  A4D8               	btfss	status,2,c
 12415  014D32  D009               	goto	l8004
 12416                           
 12417                           ; BSR set to: 0
 12418  014D34  0E00               	movlw	0
 12419  014D36  0100               	movlb	0	; () banked
 12420  014D38  6F72               	movwf	___flge@ff1& (0+255),b
 12421  014D3A  0E00               	movlw	0
 12422  014D3C  6F73               	movwf	(___flge@ff1+1)& (0+255),b
 12423  014D3E  0E00               	movlw	0
 12424  014D40  6F74               	movwf	(___flge@ff1+2)& (0+255),b
 12425  014D42  0E00               	movlw	0
 12426  014D44  6F75               	movwf	(___flge@ff1+3)& (0+255),b
 12427  014D46                     l8004:
 12428                           
 12429                           ; BSR set to: 0
 12430  014D46  0E00               	movlw	0
 12431  014D48  0100               	movlb	0	; () banked
 12432  014D4A  1576               	andwf	___flge@ff2& (0+255),w,b
 12433  014D4C  0100               	movlb	0	; () banked
 12434  014D4E  6F7A               	movwf	??___flge& (0+255),b
 12435  014D50  0E00               	movlw	0
 12436  014D52  0100               	movlb	0	; () banked
 12437  014D54  1577               	andwf	(___flge@ff2+1)& (0+255),w,b
 12438  014D56  0100               	movlb	0	; () banked
 12439  014D58  6F7B               	movwf	(??___flge+1)& (0+255),b
 12440  014D5A  0E80               	movlw	128
 12441  014D5C  0100               	movlb	0	; () banked
 12442  014D5E  1578               	andwf	(___flge@ff2+2)& (0+255),w,b
 12443  014D60  0100               	movlb	0	; () banked
 12444  014D62  6F7C               	movwf	(??___flge+2)& (0+255),b
 12445  014D64  0E7F               	movlw	127
 12446  014D66  0100               	movlb	0	; () banked
 12447  014D68  1579               	andwf	(___flge@ff2+3)& (0+255),w,b
 12448  014D6A  0100               	movlb	0	; () banked
 12449  014D6C  6F7D               	movwf	(??___flge+3)& (0+255),b
 12450  014D6E  0100               	movlb	0	; () banked
 12451  014D70  517A               	movf	??___flge& (0+255),w,b
 12452  014D72  0100               	movlb	0	; () banked
 12453  014D74  117B               	iorwf	(??___flge+1)& (0+255),w,b
 12454  014D76  0100               	movlb	0	; () banked
 12455  014D78  117C               	iorwf	(??___flge+2)& (0+255),w,b
 12456  014D7A  0100               	movlb	0	; () banked
 12457  014D7C  117D               	iorwf	(??___flge+3)& (0+255),w,b
 12458  014D7E  A4D8               	btfss	status,2,c
 12459  014D80  D009               	goto	l8008
 12460                           
 12461                           ; BSR set to: 0
 12462  014D82  0E00               	movlw	0
 12463  014D84  0100               	movlb	0	; () banked
 12464  014D86  6F76               	movwf	___flge@ff2& (0+255),b
 12465  014D88  0E00               	movlw	0
 12466  014D8A  6F77               	movwf	(___flge@ff2+1)& (0+255),b
 12467  014D8C  0E00               	movlw	0
 12468  014D8E  6F78               	movwf	(___flge@ff2+2)& (0+255),b
 12469  014D90  0E00               	movlw	0
 12470  014D92  6F79               	movwf	(___flge@ff2+3)& (0+255),b
 12471  014D94                     l8008:
 12472                           
 12473                           ; BSR set to: 0
 12474  014D94  0100               	movlb	0	; () banked
 12475  014D96  AF75               	btfss	(___flge@ff1+3)& (0+255),7,b
 12476  014D98  D026               	goto	l8012
 12477                           
 12478                           ; BSR set to: 0
 12479  014D9A  C072  F07A         	movff	___flge@ff1,??___flge
 12480  014D9E  C073  F07B         	movff	___flge@ff1+1,??___flge+1
 12481  014DA2  C074  F07C         	movff	___flge@ff1+2,??___flge+2
 12482  014DA6  C075  F07D         	movff	___flge@ff1+3,??___flge+3
 12483  014DAA  0100               	movlb	0	; () banked
 12484  014DAC  1F7A               	comf	??___flge& (0+255),f,b
 12485  014DAE  1F7B               	comf	(??___flge+1)& (0+255),f,b
 12486  014DB0  1F7C               	comf	(??___flge+2)& (0+255),f,b
 12487  014DB2  1F7D               	comf	(??___flge+3)& (0+255),f,b
 12488  014DB4  2B7A               	incf	??___flge& (0+255),f,b
 12489  014DB6  0E00               	movlw	0
 12490  014DB8  237B               	addwfc	(??___flge+1)& (0+255),f,b
 12491  014DBA  237C               	addwfc	(??___flge+2)& (0+255),f,b
 12492  014DBC  237D               	addwfc	(??___flge+3)& (0+255),f,b
 12493  014DBE  0E00               	movlw	0
 12494  014DC0  0100               	movlb	0	; () banked
 12495  014DC2  257A               	addwf	??___flge& (0+255),w,b
 12496  014DC4  0100               	movlb	0	; () banked
 12497  014DC6  6F72               	movwf	___flge@ff1& (0+255),b
 12498  014DC8  0E00               	movlw	0
 12499  014DCA  0100               	movlb	0	; () banked
 12500  014DCC  217B               	addwfc	(??___flge+1)& (0+255),w,b
 12501  014DCE  0100               	movlb	0	; () banked
 12502  014DD0  6F73               	movwf	(___flge@ff1+1)& (0+255),b
 12503  014DD2  0E00               	movlw	0
 12504  014DD4  0100               	movlb	0	; () banked
 12505  014DD6  217C               	addwfc	(??___flge+2)& (0+255),w,b
 12506  014DD8  0100               	movlb	0	; () banked
 12507  014DDA  6F74               	movwf	(___flge@ff1+2)& (0+255),b
 12508  014DDC  0E80               	movlw	128
 12509  014DDE  0100               	movlb	0	; () banked
 12510  014DE0  217D               	addwfc	(??___flge+3)& (0+255),w,b
 12511  014DE2  0100               	movlb	0	; () banked
 12512  014DE4  6F75               	movwf	(___flge@ff1+3)& (0+255),b
 12513  014DE6                     l8012:
 12514                           
 12515                           ; BSR set to: 0
 12516  014DE6  0100               	movlb	0	; () banked
 12517  014DE8  AF79               	btfss	(___flge@ff2+3)& (0+255),7,b
 12518  014DEA  D026               	goto	l1189
 12519                           
 12520                           ; BSR set to: 0
 12521  014DEC  C076  F07A         	movff	___flge@ff2,??___flge
 12522  014DF0  C077  F07B         	movff	___flge@ff2+1,??___flge+1
 12523  014DF4  C078  F07C         	movff	___flge@ff2+2,??___flge+2
 12524  014DF8  C079  F07D         	movff	___flge@ff2+3,??___flge+3
 12525  014DFC  0100               	movlb	0	; () banked
 12526  014DFE  1F7A               	comf	??___flge& (0+255),f,b
 12527  014E00  1F7B               	comf	(??___flge+1)& (0+255),f,b
 12528  014E02  1F7C               	comf	(??___flge+2)& (0+255),f,b
 12529  014E04  1F7D               	comf	(??___flge+3)& (0+255),f,b
 12530  014E06  2B7A               	incf	??___flge& (0+255),f,b
 12531  014E08  0E00               	movlw	0
 12532  014E0A  237B               	addwfc	(??___flge+1)& (0+255),f,b
 12533  014E0C  237C               	addwfc	(??___flge+2)& (0+255),f,b
 12534  014E0E  237D               	addwfc	(??___flge+3)& (0+255),f,b
 12535  014E10  0E00               	movlw	0
 12536  014E12  0100               	movlb	0	; () banked
 12537  014E14  257A               	addwf	??___flge& (0+255),w,b
 12538  014E16  0100               	movlb	0	; () banked
 12539  014E18  6F76               	movwf	___flge@ff2& (0+255),b
 12540  014E1A  0E00               	movlw	0
 12541  014E1C  0100               	movlb	0	; () banked
 12542  014E1E  217B               	addwfc	(??___flge+1)& (0+255),w,b
 12543  014E20  0100               	movlb	0	; () banked
 12544  014E22  6F77               	movwf	(___flge@ff2+1)& (0+255),b
 12545  014E24  0E00               	movlw	0
 12546  014E26  0100               	movlb	0	; () banked
 12547  014E28  217C               	addwfc	(??___flge+2)& (0+255),w,b
 12548  014E2A  0100               	movlb	0	; () banked
 12549  014E2C  6F78               	movwf	(___flge@ff2+2)& (0+255),b
 12550  014E2E  0E80               	movlw	128
 12551  014E30  0100               	movlb	0	; () banked
 12552  014E32  217D               	addwfc	(??___flge+3)& (0+255),w,b
 12553  014E34  0100               	movlb	0	; () banked
 12554  014E36  6F79               	movwf	(___flge@ff2+3)& (0+255),b
 12555  014E38                     l1189:
 12556                           
 12557                           ; BSR set to: 0
 12558  014E38  0E00               	movlw	0
 12559  014E3A  0100               	movlb	0	; () banked
 12560  014E3C  1B72               	xorwf	___flge@ff1& (0+255),f,b
 12561  014E3E  0E00               	movlw	0
 12562  014E40  1B73               	xorwf	(___flge@ff1+1)& (0+255),f,b
 12563  014E42  0E00               	movlw	0
 12564  014E44  1B74               	xorwf	(___flge@ff1+2)& (0+255),f,b
 12565  014E46  0E80               	movlw	128
 12566  014E48  1B75               	xorwf	(___flge@ff1+3)& (0+255),f,b
 12567  014E4A  0E00               	movlw	0
 12568  014E4C  0100               	movlb	0	; () banked
 12569  014E4E  1B76               	xorwf	___flge@ff2& (0+255),f,b
 12570  014E50  0E00               	movlw	0
 12571  014E52  1B77               	xorwf	(___flge@ff2+1)& (0+255),f,b
 12572  014E54  0E00               	movlw	0
 12573  014E56  1B78               	xorwf	(___flge@ff2+2)& (0+255),f,b
 12574  014E58  0E80               	movlw	128
 12575  014E5A  1B79               	xorwf	(___flge@ff2+3)& (0+255),f,b
 12576  014E5C  0100               	movlb	0	; () banked
 12577  014E5E  5176               	movf	___flge@ff2& (0+255),w,b
 12578  014E60  0100               	movlb	0	; () banked
 12579  014E62  5D72               	subwf	___flge@ff1& (0+255),w,b
 12580  014E64  0100               	movlb	0	; () banked
 12581  014E66  5177               	movf	(___flge@ff2+1)& (0+255),w,b
 12582  014E68  0100               	movlb	0	; () banked
 12583  014E6A  5973               	subwfb	(___flge@ff1+1)& (0+255),w,b
 12584  014E6C  0100               	movlb	0	; () banked
 12585  014E6E  5178               	movf	(___flge@ff2+2)& (0+255),w,b
 12586  014E70  0100               	movlb	0	; () banked
 12587  014E72  5974               	subwfb	(___flge@ff1+2)& (0+255),w,b
 12588  014E74  0100               	movlb	0	; () banked
 12589  014E76  5179               	movf	(___flge@ff2+3)& (0+255),w,b
 12590  014E78  0100               	movlb	0	; () banked
 12591  014E7A  5975               	subwfb	(___flge@ff1+3)& (0+255),w,b
 12592  014E7C  B0D8               	btfsc	status,0,c
 12593  014E7E  D002               	goto	l8018
 12594                           
 12595                           ; BSR set to: 0
 12596  014E80  90D8               	bcf	status,0,c
 12597  014E82  0012               	return	
 12598  014E84                     l8018:
 12599                           
 12600                           ; BSR set to: 0
 12601  014E84  80D8               	bsf	status,0,c
 12602                           
 12603                           ; BSR set to: 0
 12604  014E86  0012               	return	
 12605  014E88                     __end_of___flge:
 12606                           	opt stack 0
 12607                           tblptru	equ	0xFF8
 12608                           tblptrh	equ	0xFF7
 12609                           tblptrl	equ	0xFF6
 12610                           tablat	equ	0xFF5
 12611                           prodh	equ	0xFF4
 12612                           prodl	equ	0xFF3
 12613                           intcon	equ	0xFF2
 12614                           postinc0	equ	0xFEE
 12615                           wreg	equ	0xFE8
 12616                           indf2	equ	0xFDF
 12617                           postinc2	equ	0xFDE
 12618                           fsr2h	equ	0xFDA
 12619                           fsr2l	equ	0xFD9
 12620                           status	equ	0xFD8
 12621                           
 12622 ;; *************** function ___fldiv *****************
 12623 ;; Defined at:
 12624 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
 12625 ;; Parameters:    Size  Location     Type
 12626 ;;  b               4   32[BANK0 ] unsigned char 
 12627 ;;  a               4   36[BANK0 ] unsigned char 
 12628 ;; Auto vars:     Size  Location     Type
 12629 ;;  grs             4   51[BANK0 ] unsigned long 
 12630 ;;  rem             4   45[BANK0 ] unsigned long 
 12631 ;;  new_exp         2   49[BANK0 ] int 
 12632 ;;  aexp            1   56[BANK0 ] unsigned char 
 12633 ;;  bexp            1   55[BANK0 ] unsigned char 
 12634 ;;  sign            1   44[BANK0 ] unsigned char 
 12635 ;; Return value:  Size  Location     Type
 12636 ;;                  4   32[BANK0 ] unsigned char 
 12637 ;; Registers used:
 12638 ;;		wreg, status,2, status,0
 12639 ;; Tracked objects:
 12640 ;;		On entry : 0/0
 12641 ;;		On exit  : 0/0
 12642 ;;		Unchanged: 0/0
 12643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12644 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12645 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12646 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12647 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12648 ;;Total ram usage:       25 bytes
 12649 ;; Hardware stack levels used:    1
 12650 ;; Hardware stack levels required when called:    3
 12651 ;; This function calls:
 12652 ;;		Nothing
 12653 ;; This function is called by:
 12654 ;;		_LCD_Handler
 12655 ;; This function uses a non-reentrant model
 12656 ;;
 12657                           
 12658                           	psect	text25
 12659  013B98                     __ptext25:
 12660                           	opt stack 0
 12661  013B98                     ___fldiv:
 12662                           	opt stack 26
 12663                           
 12664                           ; BSR set to: 0
 12665                           ;incstack = 0
 12666  013B98  0100               	movlb	0	; () banked
 12667  013B9A  5183               	movf	(___fldiv@b+3)& (0+255),w,b
 12668  013B9C  0B80               	andlw	128
 12669  013B9E  0100               	movlb	0	; () banked
 12670  013BA0  6F8C               	movwf	___fldiv@sign& (0+255),b
 12671  013BA2  0100               	movlb	0	; () banked
 12672  013BA4  5183               	movf	(___fldiv@b+3)& (0+255),w,b
 12673  013BA6  2583               	addwf	(___fldiv@b+3)& (0+255),w,b
 12674  013BA8  0100               	movlb	0	; () banked
 12675  013BAA  6F97               	movwf	___fldiv@bexp& (0+255),b
 12676                           
 12677                           ; BSR set to: 0
 12678  013BAC  0100               	movlb	0	; () banked
 12679  013BAE  AF82               	btfss	(___fldiv@b+2)& (0+255),7,b
 12680  013BB0  D002               	goto	l6316
 12681                           
 12682                           ; BSR set to: 0
 12683  013BB2  0100               	movlb	0	; () banked
 12684  013BB4  8197               	bsf	___fldiv@bexp& (0+255),0,b
 12685  013BB6                     l6316:
 12686                           
 12687                           ; BSR set to: 0
 12688  013BB6  0100               	movlb	0	; () banked
 12689  013BB8  5197               	movf	___fldiv@bexp& (0+255),w,b
 12690  013BBA  0100               	movlb	0	; () banked
 12691  013BBC  B4D8               	btfsc	status,2,c
 12692  013BBE  D012               	goto	l6326
 12693                           
 12694                           ; BSR set to: 0
 12695  013BC0  0100               	movlb	0	; () banked
 12696  013BC2  2997               	incf	___fldiv@bexp& (0+255),w,b
 12697  013BC4  A4D8               	btfss	status,2,c
 12698  013BC6  D009               	goto	l6322
 12699                           
 12700                           ; BSR set to: 0
 12701  013BC8  0E00               	movlw	0
 12702  013BCA  0100               	movlb	0	; () banked
 12703  013BCC  6F80               	movwf	___fldiv@b& (0+255),b
 12704  013BCE  0E00               	movlw	0
 12705  013BD0  6F81               	movwf	(___fldiv@b+1)& (0+255),b
 12706  013BD2  0E00               	movlw	0
 12707  013BD4  6F82               	movwf	(___fldiv@b+2)& (0+255),b
 12708  013BD6  0E00               	movlw	0
 12709  013BD8  6F83               	movwf	(___fldiv@b+3)& (0+255),b
 12710  013BDA                     l6322:
 12711                           
 12712                           ; BSR set to: 0
 12713  013BDA  0100               	movlb	0	; () banked
 12714  013BDC  8F82               	bsf	(___fldiv@b+2)& (0+255),7,b
 12715                           
 12716                           ; BSR set to: 0
 12717  013BDE  0E00               	movlw	0
 12718  013BE0  0100               	movlb	0	; () banked
 12719  013BE2  D008               	goto	L12
 12720  013BE4                     l6326:
 12721                           
 12722                           ; BSR set to: 0
 12723  013BE4  0E00               	movlw	0
 12724  013BE6  0100               	movlb	0	; () banked
 12725  013BE8  6F80               	movwf	___fldiv@b& (0+255),b
 12726  013BEA  0E00               	movlw	0
 12727  013BEC  6F81               	movwf	(___fldiv@b+1)& (0+255),b
 12728  013BEE  0E00               	movlw	0
 12729  013BF0  6F82               	movwf	(___fldiv@b+2)& (0+255),b
 12730  013BF2  0E00               	movlw	0
 12731  013BF4                     L12:
 12732  013BF4  6F83               	movwf	(___fldiv@b+3)& (0+255),b
 12733                           
 12734                           ; BSR set to: 0
 12735                           
 12736                           ; BSR set to: 0
 12737  013BF6  0100               	movlb	0	; () banked
 12738  013BF8  5187               	movf	(___fldiv@a+3)& (0+255),w,b
 12739  013BFA  0B80               	andlw	128
 12740  013BFC  0100               	movlb	0	; () banked
 12741  013BFE  1B8C               	xorwf	___fldiv@sign& (0+255),f,b
 12742                           
 12743                           ; BSR set to: 0
 12744  013C00  0100               	movlb	0	; () banked
 12745  013C02  5187               	movf	(___fldiv@a+3)& (0+255),w,b
 12746  013C04  2587               	addwf	(___fldiv@a+3)& (0+255),w,b
 12747  013C06  0100               	movlb	0	; () banked
 12748  013C08  6F98               	movwf	___fldiv@aexp& (0+255),b
 12749                           
 12750                           ; BSR set to: 0
 12751  013C0A  0100               	movlb	0	; () banked
 12752  013C0C  AF86               	btfss	(___fldiv@a+2)& (0+255),7,b
 12753  013C0E  D002               	goto	l6336
 12754                           
 12755                           ; BSR set to: 0
 12756  013C10  0100               	movlb	0	; () banked
 12757  013C12  8198               	bsf	___fldiv@aexp& (0+255),0,b
 12758  013C14                     l6336:
 12759                           
 12760                           ; BSR set to: 0
 12761  013C14  0100               	movlb	0	; () banked
 12762  013C16  5198               	movf	___fldiv@aexp& (0+255),w,b
 12763  013C18  0100               	movlb	0	; () banked
 12764  013C1A  B4D8               	btfsc	status,2,c
 12765  013C1C  D012               	goto	l6346
 12766                           
 12767                           ; BSR set to: 0
 12768  013C1E  0100               	movlb	0	; () banked
 12769  013C20  2998               	incf	___fldiv@aexp& (0+255),w,b
 12770  013C22  A4D8               	btfss	status,2,c
 12771  013C24  D009               	goto	l6342
 12772                           
 12773                           ; BSR set to: 0
 12774  013C26  0E00               	movlw	0
 12775  013C28  0100               	movlb	0	; () banked
 12776  013C2A  6F84               	movwf	___fldiv@a& (0+255),b
 12777  013C2C  0E00               	movlw	0
 12778  013C2E  6F85               	movwf	(___fldiv@a+1)& (0+255),b
 12779  013C30  0E00               	movlw	0
 12780  013C32  6F86               	movwf	(___fldiv@a+2)& (0+255),b
 12781  013C34  0E00               	movlw	0
 12782  013C36  6F87               	movwf	(___fldiv@a+3)& (0+255),b
 12783  013C38                     l6342:
 12784                           
 12785                           ; BSR set to: 0
 12786  013C38  0100               	movlb	0	; () banked
 12787  013C3A  8F86               	bsf	(___fldiv@a+2)& (0+255),7,b
 12788                           
 12789                           ; BSR set to: 0
 12790  013C3C  0E00               	movlw	0
 12791  013C3E  0100               	movlb	0	; () banked
 12792  013C40  D008               	goto	L13
 12793  013C42                     l6346:
 12794                           
 12795                           ; BSR set to: 0
 12796  013C42  0E00               	movlw	0
 12797  013C44  0100               	movlb	0	; () banked
 12798  013C46  6F84               	movwf	___fldiv@a& (0+255),b
 12799  013C48  0E00               	movlw	0
 12800  013C4A  6F85               	movwf	(___fldiv@a+1)& (0+255),b
 12801  013C4C  0E00               	movlw	0
 12802  013C4E  6F86               	movwf	(___fldiv@a+2)& (0+255),b
 12803  013C50  0E00               	movlw	0
 12804  013C52                     L13:
 12805  013C52  6F87               	movwf	(___fldiv@a+3)& (0+255),b
 12806                           
 12807                           ; BSR set to: 0
 12808                           
 12809                           ; BSR set to: 0
 12810  013C54  0100               	movlb	0	; () banked
 12811  013C56  5184               	movf	___fldiv@a& (0+255),w,b
 12812  013C58  0100               	movlb	0	; () banked
 12813  013C5A  1185               	iorwf	(___fldiv@a+1)& (0+255),w,b
 12814  013C5C  0100               	movlb	0	; () banked
 12815  013C5E  1186               	iorwf	(___fldiv@a+2)& (0+255),w,b
 12816  013C60  0100               	movlb	0	; () banked
 12817  013C62  1187               	iorwf	(___fldiv@a+3)& (0+255),w,b
 12818  013C64  A4D8               	btfss	status,2,c
 12819  013C66  D017               	goto	l6358
 12820                           
 12821                           ; BSR set to: 0
 12822  013C68  0E00               	movlw	0
 12823  013C6A  0100               	movlb	0	; () banked
 12824  013C6C  6F80               	movwf	___fldiv@b& (0+255),b
 12825  013C6E  0E00               	movlw	0
 12826  013C70  6F81               	movwf	(___fldiv@b+1)& (0+255),b
 12827  013C72  0E00               	movlw	0
 12828  013C74  6F82               	movwf	(___fldiv@b+2)& (0+255),b
 12829  013C76  0E00               	movlw	0
 12830  013C78  6F83               	movwf	(___fldiv@b+3)& (0+255),b
 12831                           
 12832                           ; BSR set to: 0
 12833  013C7A  0100               	movlb	0	; () banked
 12834  013C7C  0E80               	movlw	128
 12835  013C7E  1382               	iorwf	(___fldiv@b+2)& (0+255),f,b
 12836  013C80  0E7F               	movlw	127
 12837  013C82  1383               	iorwf	(___fldiv@b+3)& (0+255),f,b
 12838                           
 12839                           ; BSR set to: 0
 12840  013C84  C080  F080         	movff	___fldiv@b,?___fldiv
 12841  013C88  C081  F081         	movff	___fldiv@b+1,?___fldiv+1
 12842  013C8C  C082  F082         	movff	___fldiv@b+2,?___fldiv+2
 12843  013C90  C083  F083         	movff	___fldiv@b+3,?___fldiv+3
 12844                           
 12845                           ; BSR set to: 0
 12846  013C94  0012               	return	
 12847  013C96                     l6358:
 12848                           
 12849                           ; BSR set to: 0
 12850  013C96  0100               	movlb	0	; () banked
 12851  013C98  5197               	movf	___fldiv@bexp& (0+255),w,b
 12852  013C9A  0100               	movlb	0	; () banked
 12853  013C9C  A4D8               	btfss	status,2,c
 12854  013C9E  D012               	goto	l6366
 12855                           
 12856                           ; BSR set to: 0
 12857  013CA0  0E00               	movlw	0
 12858  013CA2  0100               	movlb	0	; () banked
 12859  013CA4  6F80               	movwf	___fldiv@b& (0+255),b
 12860  013CA6  0E00               	movlw	0
 12861  013CA8  6F81               	movwf	(___fldiv@b+1)& (0+255),b
 12862  013CAA  0E00               	movlw	0
 12863  013CAC  6F82               	movwf	(___fldiv@b+2)& (0+255),b
 12864  013CAE  0E00               	movlw	0
 12865  013CB0  6F83               	movwf	(___fldiv@b+3)& (0+255),b
 12866                           
 12867                           ; BSR set to: 0
 12868  013CB2  C080  F080         	movff	___fldiv@b,?___fldiv
 12869  013CB6  C081  F081         	movff	___fldiv@b+1,?___fldiv+1
 12870  013CBA  C082  F082         	movff	___fldiv@b+2,?___fldiv+2
 12871  013CBE  C083  F083         	movff	___fldiv@b+3,?___fldiv+3
 12872                           
 12873                           ; BSR set to: 0
 12874  013CC2  0012               	return	
 12875  013CC4                     l6366:
 12876                           
 12877                           ; BSR set to: 0
 12878  013CC4  0100               	movlb	0	; () banked
 12879  013CC6  5198               	movf	___fldiv@aexp& (0+255),w,b
 12880  013CC8  0100               	movlb	0	; () banked
 12881  013CCA  6F88               	movwf	??___fldiv& (0+255),b
 12882  013CCC  6B89               	clrf	(??___fldiv+1)& (0+255),b
 12883  013CCE  0100               	movlb	0	; () banked
 12884  013CD0  1F88               	comf	??___fldiv& (0+255),f,b
 12885  013CD2  1F89               	comf	(??___fldiv+1)& (0+255),f,b
 12886  013CD4  4B88               	infsnz	??___fldiv& (0+255),f,b
 12887  013CD6  2B89               	incf	(??___fldiv+1)& (0+255),f,b
 12888  013CD8  0100               	movlb	0	; () banked
 12889  013CDA  5197               	movf	___fldiv@bexp& (0+255),w,b
 12890  013CDC  0100               	movlb	0	; () banked
 12891  013CDE  6F8A               	movwf	(??___fldiv+2)& (0+255),b
 12892  013CE0  6B8B               	clrf	(??___fldiv+3)& (0+255),b
 12893  013CE2  0100               	movlb	0	; () banked
 12894  013CE4  5188               	movf	??___fldiv& (0+255),w,b
 12895  013CE6  0100               	movlb	0	; () banked
 12896  013CE8  278A               	addwf	(??___fldiv+2)& (0+255),f,b
 12897  013CEA  0100               	movlb	0	; () banked
 12898  013CEC  5189               	movf	(??___fldiv+1)& (0+255),w,b
 12899  013CEE  0100               	movlb	0	; () banked
 12900  013CF0  238B               	addwfc	(??___fldiv+3)& (0+255),f,b
 12901  013CF2  0E7F               	movlw	127
 12902  013CF4  0100               	movlb	0	; () banked
 12903  013CF6  258A               	addwf	(??___fldiv+2)& (0+255),w,b
 12904  013CF8  0100               	movlb	0	; () banked
 12905  013CFA  6F91               	movwf	___fldiv@new_exp& (0+255),b
 12906  013CFC  0E00               	movlw	0
 12907  013CFE  0100               	movlb	0	; () banked
 12908  013D00  218B               	addwfc	(??___fldiv+3)& (0+255),w,b
 12909  013D02  0100               	movlb	0	; () banked
 12910  013D04  6F92               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12911                           
 12912                           ; BSR set to: 0
 12913  013D06  C080  F08D         	movff	___fldiv@b,___fldiv@rem
 12914  013D0A  C081  F08E         	movff	___fldiv@b+1,___fldiv@rem+1
 12915  013D0E  C082  F08F         	movff	___fldiv@b+2,___fldiv@rem+2
 12916  013D12  C083  F090         	movff	___fldiv@b+3,___fldiv@rem+3
 12917                           
 12918                           ; BSR set to: 0
 12919  013D16  0E00               	movlw	0
 12920  013D18  0100               	movlb	0	; () banked
 12921  013D1A  6F80               	movwf	___fldiv@b& (0+255),b
 12922  013D1C  0E00               	movlw	0
 12923  013D1E  6F81               	movwf	(___fldiv@b+1)& (0+255),b
 12924  013D20  0E00               	movlw	0
 12925  013D22  6F82               	movwf	(___fldiv@b+2)& (0+255),b
 12926  013D24  0E00               	movlw	0
 12927  013D26  6F83               	movwf	(___fldiv@b+3)& (0+255),b
 12928                           
 12929                           ; BSR set to: 0
 12930  013D28  0E00               	movlw	0
 12931  013D2A  0100               	movlb	0	; () banked
 12932  013D2C  6F93               	movwf	___fldiv@grs& (0+255),b
 12933  013D2E  0E00               	movlw	0
 12934  013D30  6F94               	movwf	(___fldiv@grs+1)& (0+255),b
 12935  013D32  0E00               	movlw	0
 12936  013D34  6F95               	movwf	(___fldiv@grs+2)& (0+255),b
 12937  013D36  0E00               	movlw	0
 12938  013D38  6F96               	movwf	(___fldiv@grs+3)& (0+255),b
 12939                           
 12940                           ; BSR set to: 0
 12941  013D3A  0E00               	movlw	0
 12942  013D3C  0100               	movlb	0	; () banked
 12943  013D3E  6F98               	movwf	___fldiv@aexp& (0+255),b
 12944  013D40  D042               	goto	l1522
 12945  013D42                     l6376:
 12946                           
 12947                           ; BSR set to: 0
 12948  013D42  0100               	movlb	0	; () banked
 12949  013D44  5198               	movf	___fldiv@aexp& (0+255),w,b
 12950  013D46  0100               	movlb	0	; () banked
 12951  013D48  B4D8               	btfsc	status,2,c
 12952  013D4A  D017               	goto	l6384
 12953                           
 12954                           ; BSR set to: 0
 12955  013D4C  0100               	movlb	0	; () banked
 12956  013D4E  90D8               	bcf	status,0,c
 12957  013D50  378D               	rlcf	___fldiv@rem& (0+255),f,b
 12958  013D52  378E               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 12959  013D54  378F               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 12960  013D56  3790               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 12961  013D58  0100               	movlb	0	; () banked
 12962  013D5A  90D8               	bcf	status,0,c
 12963  013D5C  3780               	rlcf	___fldiv@b& (0+255),f,b
 12964  013D5E  3781               	rlcf	(___fldiv@b+1)& (0+255),f,b
 12965  013D60  3782               	rlcf	(___fldiv@b+2)& (0+255),f,b
 12966  013D62  3783               	rlcf	(___fldiv@b+3)& (0+255),f,b
 12967                           
 12968                           ; BSR set to: 0
 12969  013D64  0100               	movlb	0	; () banked
 12970  013D66  AF96               	btfss	(___fldiv@grs+3)& (0+255),7,b
 12971  013D68  D002               	goto	l1525
 12972                           
 12973                           ; BSR set to: 0
 12974  013D6A  0100               	movlb	0	; () banked
 12975  013D6C  8180               	bsf	___fldiv@b& (0+255),0,b
 12976  013D6E                     l1525:
 12977                           
 12978                           ; BSR set to: 0
 12979  013D6E  0100               	movlb	0	; () banked
 12980  013D70  90D8               	bcf	status,0,c
 12981  013D72  3793               	rlcf	___fldiv@grs& (0+255),f,b
 12982  013D74  3794               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 12983  013D76  3795               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 12984  013D78  3796               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 12985  013D7A                     l6384:
 12986                           
 12987                           ; BSR set to: 0
 12988  013D7A  0100               	movlb	0	; () banked
 12989  013D7C  5184               	movf	___fldiv@a& (0+255),w,b
 12990  013D7E  0100               	movlb	0	; () banked
 12991  013D80  5D8D               	subwf	___fldiv@rem& (0+255),w,b
 12992  013D82  0100               	movlb	0	; () banked
 12993  013D84  5185               	movf	(___fldiv@a+1)& (0+255),w,b
 12994  013D86  0100               	movlb	0	; () banked
 12995  013D88  598E               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 12996  013D8A  0100               	movlb	0	; () banked
 12997  013D8C  5186               	movf	(___fldiv@a+2)& (0+255),w,b
 12998  013D8E  0100               	movlb	0	; () banked
 12999  013D90  598F               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 13000  013D92  0100               	movlb	0	; () banked
 13001  013D94  5187               	movf	(___fldiv@a+3)& (0+255),w,b
 13002  013D96  0100               	movlb	0	; () banked
 13003  013D98  5990               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 13004  013D9A  A0D8               	btfss	status,0,c
 13005  013D9C  D012               	goto	l6390
 13006                           
 13007                           ; BSR set to: 0
 13008  013D9E  0100               	movlb	0	; () banked
 13009  013DA0  8D96               	bsf	(___fldiv@grs+3)& (0+255),6,b
 13010                           
 13011                           ; BSR set to: 0
 13012  013DA2  0100               	movlb	0	; () banked
 13013  013DA4  5184               	movf	___fldiv@a& (0+255),w,b
 13014  013DA6  0100               	movlb	0	; () banked
 13015  013DA8  5F8D               	subwf	___fldiv@rem& (0+255),f,b
 13016  013DAA  0100               	movlb	0	; () banked
 13017  013DAC  5185               	movf	(___fldiv@a+1)& (0+255),w,b
 13018  013DAE  0100               	movlb	0	; () banked
 13019  013DB0  5B8E               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 13020  013DB2  0100               	movlb	0	; () banked
 13021  013DB4  5186               	movf	(___fldiv@a+2)& (0+255),w,b
 13022  013DB6  0100               	movlb	0	; () banked
 13023  013DB8  5B8F               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 13024  013DBA  0100               	movlb	0	; () banked
 13025  013DBC  5187               	movf	(___fldiv@a+3)& (0+255),w,b
 13026  013DBE  0100               	movlb	0	; () banked
 13027  013DC0  5B90               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 13028  013DC2                     l6390:
 13029                           
 13030                           ; BSR set to: 0
 13031  013DC2  0100               	movlb	0	; () banked
 13032  013DC4  2B98               	incf	___fldiv@aexp& (0+255),f,b
 13033  013DC6                     l1522:
 13034                           
 13035                           ; BSR set to: 0
 13036  013DC6  0E19               	movlw	25
 13037  013DC8  0100               	movlb	0	; () banked
 13038  013DCA  6598               	cpfsgt	___fldiv@aexp& (0+255),b
 13039  013DCC  D7BA               	goto	l6376
 13040                           
 13041                           ; BSR set to: 0
 13042                           
 13043                           ; BSR set to: 0
 13044  013DCE  0100               	movlb	0	; () banked
 13045  013DD0  518D               	movf	___fldiv@rem& (0+255),w,b
 13046  013DD2  0100               	movlb	0	; () banked
 13047  013DD4  118E               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 13048  013DD6  0100               	movlb	0	; () banked
 13049  013DD8  118F               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 13050  013DDA  0100               	movlb	0	; () banked
 13051  013DDC  1190               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 13052  013DDE  B4D8               	btfsc	status,2,c
 13053  013DE0  D018               	goto	l6402
 13054                           
 13055                           ; BSR set to: 0
 13056  013DE2  0100               	movlb	0	; () banked
 13057  013DE4  8193               	bsf	___fldiv@grs& (0+255),0,b
 13058                           
 13059                           ; BSR set to: 0
 13060  013DE6  D015               	goto	l6402
 13061  013DE8                     l6396:
 13062                           
 13063                           ; BSR set to: 0
 13064  013DE8  0100               	movlb	0	; () banked
 13065  013DEA  90D8               	bcf	status,0,c
 13066  013DEC  3780               	rlcf	___fldiv@b& (0+255),f,b
 13067  013DEE  3781               	rlcf	(___fldiv@b+1)& (0+255),f,b
 13068  013DF0  3782               	rlcf	(___fldiv@b+2)& (0+255),f,b
 13069  013DF2  3783               	rlcf	(___fldiv@b+3)& (0+255),f,b
 13070                           
 13071                           ; BSR set to: 0
 13072  013DF4  0100               	movlb	0	; () banked
 13073  013DF6  AF96               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13074  013DF8  D002               	goto	l1531
 13075                           
 13076                           ; BSR set to: 0
 13077  013DFA  0100               	movlb	0	; () banked
 13078  013DFC  8180               	bsf	___fldiv@b& (0+255),0,b
 13079  013DFE                     l1531:
 13080                           
 13081                           ; BSR set to: 0
 13082  013DFE  0100               	movlb	0	; () banked
 13083  013E00  90D8               	bcf	status,0,c
 13084  013E02  3793               	rlcf	___fldiv@grs& (0+255),f,b
 13085  013E04  3794               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13086  013E06  3795               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13087  013E08  3796               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13088  013E0A  0100               	movlb	0	; () banked
 13089  013E0C  0791               	decf	___fldiv@new_exp& (0+255),f,b
 13090  013E0E  A0D8               	btfss	status,0,c
 13091  013E10  0792               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 13092  013E12                     l6402:
 13093                           
 13094                           ; BSR set to: 0
 13095  013E12  0100               	movlb	0	; () banked
 13096  013E14  AF82               	btfss	(___fldiv@b+2)& (0+255),7,b
 13097  013E16  D7E8               	goto	l6396
 13098                           
 13099                           ; BSR set to: 0
 13100                           
 13101                           ; BSR set to: 0
 13102  013E18  0E00               	movlw	0
 13103  013E1A  0100               	movlb	0	; () banked
 13104  013E1C  6F98               	movwf	___fldiv@aexp& (0+255),b
 13105                           
 13106                           ; BSR set to: 0
 13107  013E1E  0100               	movlb	0	; () banked
 13108  013E20  AF96               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13109  013E22  D024               	goto	l1533
 13110                           
 13111                           ; BSR set to: 0
 13112  013E24  0EFF               	movlw	255
 13113  013E26  0100               	movlb	0	; () banked
 13114  013E28  1593               	andwf	___fldiv@grs& (0+255),w,b
 13115  013E2A  0100               	movlb	0	; () banked
 13116  013E2C  6F88               	movwf	??___fldiv& (0+255),b
 13117  013E2E  0EFF               	movlw	255
 13118  013E30  0100               	movlb	0	; () banked
 13119  013E32  1594               	andwf	(___fldiv@grs+1)& (0+255),w,b
 13120  013E34  0100               	movlb	0	; () banked
 13121  013E36  6F89               	movwf	(??___fldiv+1)& (0+255),b
 13122  013E38  0EFF               	movlw	255
 13123  013E3A  0100               	movlb	0	; () banked
 13124  013E3C  1595               	andwf	(___fldiv@grs+2)& (0+255),w,b
 13125  013E3E  0100               	movlb	0	; () banked
 13126  013E40  6F8A               	movwf	(??___fldiv+2)& (0+255),b
 13127  013E42  0E7F               	movlw	127
 13128  013E44  0100               	movlb	0	; () banked
 13129  013E46  1596               	andwf	(___fldiv@grs+3)& (0+255),w,b
 13130  013E48  0100               	movlb	0	; () banked
 13131  013E4A  6F8B               	movwf	(??___fldiv+3)& (0+255),b
 13132  013E4C  0100               	movlb	0	; () banked
 13133  013E4E  5188               	movf	??___fldiv& (0+255),w,b
 13134  013E50  0100               	movlb	0	; () banked
 13135  013E52  1189               	iorwf	(??___fldiv+1)& (0+255),w,b
 13136  013E54  0100               	movlb	0	; () banked
 13137  013E56  118A               	iorwf	(??___fldiv+2)& (0+255),w,b
 13138  013E58  0100               	movlb	0	; () banked
 13139  013E5A  118B               	iorwf	(??___fldiv+3)& (0+255),w,b
 13140  013E5C  A4D8               	btfss	status,2,c
 13141  013E5E  D003               	goto	l6412
 13142                           
 13143                           ; BSR set to: 0
 13144                           
 13145                           ; BSR set to: 0
 13146  013E60  0100               	movlb	0	; () banked
 13147  013E62  A180               	btfss	___fldiv@b& (0+255),0,b
 13148  013E64  D003               	goto	l1533
 13149  013E66                     l6412:
 13150                           
 13151                           ; BSR set to: 0
 13152  013E66  0E01               	movlw	1
 13153  013E68  0100               	movlb	0	; () banked
 13154  013E6A  6F98               	movwf	___fldiv@aexp& (0+255),b
 13155  013E6C                     l1533:
 13156                           
 13157                           ; BSR set to: 0
 13158  013E6C  0100               	movlb	0	; () banked
 13159  013E6E  5198               	movf	___fldiv@aexp& (0+255),w,b
 13160  013E70  0100               	movlb	0	; () banked
 13161  013E72  B4D8               	btfsc	status,2,c
 13162  013E74  D023               	goto	l6422
 13163                           
 13164                           ; BSR set to: 0
 13165  013E76  0E01               	movlw	1
 13166  013E78  0100               	movlb	0	; () banked
 13167  013E7A  2780               	addwf	___fldiv@b& (0+255),f,b
 13168  013E7C  0E00               	movlw	0
 13169  013E7E  2381               	addwfc	(___fldiv@b+1)& (0+255),f,b
 13170  013E80  2382               	addwfc	(___fldiv@b+2)& (0+255),f,b
 13171  013E82  2383               	addwfc	(___fldiv@b+3)& (0+255),f,b
 13172                           
 13173                           ; BSR set to: 0
 13174  013E84  0100               	movlb	0	; () banked
 13175  013E86  A183               	btfss	(___fldiv@b+3)& (0+255),0,b
 13176  013E88  D019               	goto	l6422
 13177                           
 13178                           ; BSR set to: 0
 13179  013E8A  C080  F088         	movff	___fldiv@b,??___fldiv
 13180  013E8E  C081  F089         	movff	___fldiv@b+1,??___fldiv+1
 13181  013E92  C082  F08A         	movff	___fldiv@b+2,??___fldiv+2
 13182  013E96  C083  F08B         	movff	___fldiv@b+3,??___fldiv+3
 13183  013E9A  0100               	movlb	0	; () banked
 13184  013E9C  358B               	rlcf	(??___fldiv+3)& (0+255),w,b
 13185  013E9E  338B               	rrcf	(??___fldiv+3)& (0+255),f,b
 13186  013EA0  338A               	rrcf	(??___fldiv+2)& (0+255),f,b
 13187  013EA2  3389               	rrcf	(??___fldiv+1)& (0+255),f,b
 13188  013EA4  3388               	rrcf	??___fldiv& (0+255),f,b
 13189  013EA6  C088  F080         	movff	??___fldiv,___fldiv@b
 13190  013EAA  C089  F081         	movff	??___fldiv+1,___fldiv@b+1
 13191  013EAE  C08A  F082         	movff	??___fldiv+2,___fldiv@b+2
 13192  013EB2  C08B  F083         	movff	??___fldiv+3,___fldiv@b+3
 13193                           
 13194                           ; BSR set to: 0
 13195  013EB6  0100               	movlb	0	; () banked
 13196  013EB8  4B91               	infsnz	___fldiv@new_exp& (0+255),f,b
 13197  013EBA  2B92               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 13198  013EBC                     l6422:
 13199                           
 13200                           ; BSR set to: 0
 13201  013EBC  0100               	movlb	0	; () banked
 13202  013EBE  BF92               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13203  013EC0  D014               	goto	l6426
 13204  013EC2  0100               	movlb	0	; () banked
 13205  013EC4  5192               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13206  013EC6  E104               	bnz	u8060
 13207  013EC8  0100               	movlb	0	; () banked
 13208  013ECA  2991               	incf	___fldiv@new_exp& (0+255),w,b
 13209  013ECC  A0D8               	btfss	status,0,c
 13210  013ECE  D00D               	goto	l6426
 13211  013ED0                     u8060:
 13212                           
 13213                           ; BSR set to: 0
 13214  013ED0  0E00               	movlw	0
 13215  013ED2  0100               	movlb	0	; () banked
 13216  013ED4  6F92               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13217  013ED6  6991               	setf	___fldiv@new_exp& (0+255),b
 13218  013ED8  0E00               	movlw	0
 13219  013EDA  0100               	movlb	0	; () banked
 13220  013EDC  6F80               	movwf	___fldiv@b& (0+255),b
 13221  013EDE  0E00               	movlw	0
 13222  013EE0  6F81               	movwf	(___fldiv@b+1)& (0+255),b
 13223  013EE2  0E00               	movlw	0
 13224  013EE4  6F82               	movwf	(___fldiv@b+2)& (0+255),b
 13225  013EE6  0E00               	movlw	0
 13226  013EE8  6F83               	movwf	(___fldiv@b+3)& (0+255),b
 13227  013EEA                     l6426:
 13228                           
 13229                           ; BSR set to: 0
 13230  013EEA  0100               	movlb	0	; () banked
 13231  013EEC  BF92               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13232  013EEE  D007               	goto	l6428
 13233  013EF0  0100               	movlb	0	; () banked
 13234  013EF2  5192               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13235  013EF4  E115               	bnz	l6430
 13236  013EF6  0100               	movlb	0	; () banked
 13237  013EF8  0591               	decf	___fldiv@new_exp& (0+255),w,b
 13238  013EFA  B0D8               	btfsc	status,0,c
 13239  013EFC  D011               	goto	l6430
 13240  013EFE                     l6428:
 13241                           
 13242                           ; BSR set to: 0
 13243  013EFE  0E00               	movlw	0
 13244  013F00  0100               	movlb	0	; () banked
 13245  013F02  6F92               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13246  013F04  0E00               	movlw	0
 13247  013F06  6F91               	movwf	___fldiv@new_exp& (0+255),b
 13248  013F08  0E00               	movlw	0
 13249  013F0A  0100               	movlb	0	; () banked
 13250  013F0C  6F80               	movwf	___fldiv@b& (0+255),b
 13251  013F0E  0E00               	movlw	0
 13252  013F10  6F81               	movwf	(___fldiv@b+1)& (0+255),b
 13253  013F12  0E00               	movlw	0
 13254  013F14  6F82               	movwf	(___fldiv@b+2)& (0+255),b
 13255  013F16  0E00               	movlw	0
 13256  013F18  6F83               	movwf	(___fldiv@b+3)& (0+255),b
 13257  013F1A  0E00               	movlw	0
 13258  013F1C  0100               	movlb	0	; () banked
 13259  013F1E  6F8C               	movwf	___fldiv@sign& (0+255),b
 13260  013F20                     l6430:
 13261                           
 13262                           ; BSR set to: 0
 13263  013F20  C091  F097         	movff	___fldiv@new_exp,___fldiv@bexp
 13264                           
 13265                           ; BSR set to: 0
 13266  013F24  0100               	movlb	0	; () banked
 13267  013F26  A197               	btfss	___fldiv@bexp& (0+255),0,b
 13268  013F28  D003               	goto	l6436
 13269                           
 13270                           ; BSR set to: 0
 13271  013F2A  0100               	movlb	0	; () banked
 13272  013F2C  8F82               	bsf	(___fldiv@b+2)& (0+255),7,b
 13273  013F2E  D002               	goto	l6438
 13274  013F30                     l6436:
 13275                           
 13276                           ; BSR set to: 0
 13277  013F30  0100               	movlb	0	; () banked
 13278  013F32  9F82               	bcf	(___fldiv@b+2)& (0+255),7,b
 13279  013F34                     l6438:
 13280                           
 13281                           ; BSR set to: 0
 13282  013F34  0100               	movlb	0	; () banked
 13283  013F36  90D8               	bcf	status,0,c
 13284  013F38  3197               	rrcf	___fldiv@bexp& (0+255),w,b
 13285  013F3A  0100               	movlb	0	; () banked
 13286  013F3C  6F83               	movwf	(___fldiv@b+3)& (0+255),b
 13287                           
 13288                           ; BSR set to: 0
 13289  013F3E  0100               	movlb	0	; () banked
 13290  013F40  518C               	movf	___fldiv@sign& (0+255),w,b
 13291  013F42  0100               	movlb	0	; () banked
 13292  013F44  1383               	iorwf	(___fldiv@b+3)& (0+255),f,b
 13293                           
 13294                           ; BSR set to: 0
 13295  013F46  C080  F080         	movff	___fldiv@b,?___fldiv
 13296  013F4A  C081  F081         	movff	___fldiv@b+1,?___fldiv+1
 13297  013F4E  C082  F082         	movff	___fldiv@b+2,?___fldiv+2
 13298  013F52  C083  F083         	movff	___fldiv@b+3,?___fldiv+3
 13299  013F56  0012               	return	
 13300  013F58                     __end_of___fldiv:
 13301                           	opt stack 0
 13302                           tblptru	equ	0xFF8
 13303                           tblptrh	equ	0xFF7
 13304                           tblptrl	equ	0xFF6
 13305                           tablat	equ	0xFF5
 13306                           prodh	equ	0xFF4
 13307                           prodl	equ	0xFF3
 13308                           intcon	equ	0xFF2
 13309                           postinc0	equ	0xFEE
 13310                           wreg	equ	0xFE8
 13311                           indf2	equ	0xFDF
 13312                           postinc2	equ	0xFDE
 13313                           fsr2h	equ	0xFDA
 13314                           fsr2l	equ	0xFD9
 13315                           status	equ	0xFD8
 13316                           
 13317 ;; *************** function _LCD_write_string *****************
 13318 ;; Defined at:
 13319 ;;		line 194 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 13320 ;; Parameters:    Size  Location     Type
 13321 ;;  buffer          2   35[BANK0 ] PTR unsigned char 
 13322 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
 13323 ;; Auto vars:     Size  Location     Type
 13324 ;;		None
 13325 ;; Return value:  Size  Location     Type
 13326 ;;		None               void
 13327 ;; Registers used:
 13328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13329 ;; Tracked objects:
 13330 ;;		On entry : 0/0
 13331 ;;		On exit  : 0/0
 13332 ;;		Unchanged: 0/0
 13333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13334 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13337 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13338 ;;Total ram usage:        2 bytes
 13339 ;; Hardware stack levels used:    1
 13340 ;; Hardware stack levels required when called:    8
 13341 ;; This function calls:
 13342 ;;		_LCD_write_char
 13343 ;; This function is called by:
 13344 ;;		_LCD_Handler
 13345 ;;		_LCD_write_integer
 13346 ;; This function uses a non-reentrant model
 13347 ;;
 13348                           
 13349                           	psect	text26
 13350  015CE6                     __ptext26:
 13351                           	opt stack 0
 13352  015CE6                     _LCD_write_string:
 13353                           	opt stack 21
 13354                           
 13355                           ;src\LCD_44780.c: 197: while(*buffer){
 13356                           
 13357                           ; BSR set to: 0
 13358                           ;incstack = 0
 13359  015CE6  D00A               	goto	l8170
 13360  015CE8                     l8166:
 13361                           
 13362                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 13363  015CE8  C083  FFD9         	movff	LCD_write_string@buffer,fsr2l
 13364  015CEC  C084  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 13365  015CF0  50DF               	movf	indf2,w,c
 13366  015CF2  ECC0  F0AC         	call	_LCD_write_char
 13367                           
 13368                           ;src\LCD_44780.c: 202: buffer++;
 13369  015CF6  0100               	movlb	0	; () banked
 13370  015CF8  4B83               	infsnz	LCD_write_string@buffer& (0+255),f,b
 13371  015CFA  2B84               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 13372  015CFC                     l8170:
 13373  015CFC  C083  FFD9         	movff	LCD_write_string@buffer,fsr2l
 13374  015D00  C084  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 13375  015D04  50DF               	movf	indf2,w,c
 13376  015D06  B4D8               	btfsc	status,2,c
 13377  015D08  0012               	return	
 13378  015D0A  D7EE               	goto	l8166
 13379  015D0C                     __end_of_LCD_write_string:
 13380                           	opt stack 0
 13381                           tblptru	equ	0xFF8
 13382                           tblptrh	equ	0xFF7
 13383                           tblptrl	equ	0xFF6
 13384                           tablat	equ	0xFF5
 13385                           prodh	equ	0xFF4
 13386                           prodl	equ	0xFF3
 13387                           intcon	equ	0xFF2
 13388                           postinc0	equ	0xFEE
 13389                           wreg	equ	0xFE8
 13390                           indf2	equ	0xFDF
 13391                           postinc2	equ	0xFDE
 13392                           fsr2h	equ	0xFDA
 13393                           fsr2l	equ	0xFD9
 13394                           status	equ	0xFD8
 13395                           
 13396 ;; *************** function _LCD_write_message *****************
 13397 ;; Defined at:
 13398 ;;		line 178 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 13399 ;; Parameters:    Size  Location     Type
 13400 ;;  buffer          2   35[BANK0 ] PTR const unsigned char 
 13401 ;;		 -> STR_15(8), STR_14(8), STR_13(8), STR_12(5), 
 13402 ;;		 -> STR_11(5), STR_10(5), STR_9(14), STR_8(17), 
 13403 ;;		 -> STR_7(12), STR_6(21), STR_4(21), STR_3(21), 
 13404 ;;		 -> STR_2(21), STR_1(21), 
 13405 ;; Auto vars:     Size  Location     Type
 13406 ;;		None
 13407 ;; Return value:  Size  Location     Type
 13408 ;;		None               void
 13409 ;; Registers used:
 13410 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13411 ;; Tracked objects:
 13412 ;;		On entry : 0/0
 13413 ;;		On exit  : 0/0
 13414 ;;		Unchanged: 0/0
 13415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13416 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13419 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13420 ;;Total ram usage:        2 bytes
 13421 ;; Hardware stack levels used:    1
 13422 ;; Hardware stack levels required when called:    8
 13423 ;; This function calls:
 13424 ;;		_LCD_write_char
 13425 ;; This function is called by:
 13426 ;;		_main
 13427 ;;		_LCD_Handler
 13428 ;; This function uses a non-reentrant model
 13429 ;;
 13430                           
 13431                           	psect	text27
 13432  015C24                     __ptext27:
 13433                           	opt stack 0
 13434  015C24                     _LCD_write_message:
 13435                           	opt stack 22
 13436                           
 13437                           ;src\LCD_44780.c: 181: while(*buffer) {
 13438                           
 13439                           ;incstack = 0
 13440  015C24  D00D               	goto	l8162
 13441  015C26                     l8158:
 13442                           
 13443                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
 13444  015C26  C083  FFF6         	movff	LCD_write_message@buffer,tblptrl
 13445  015C2A  C084  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 13446  015C2E                     	if	0	;tblptru may be non-zero
 13447  015C2E                     	endif
 13448  015C2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13449  015C2E  0E00               	movlw	low (__mediumconst shr (0+16))
 13450  015C30  6EF8               	movwf	tblptru,c
 13451  015C32                     	endif
 13452  015C32  0008               	tblrd		*
 13453  015C34  50F5               	movf	tablat,w,c
 13454  015C36  ECC0  F0AC         	call	_LCD_write_char
 13455                           
 13456                           ;src\LCD_44780.c: 186: buffer++;
 13457  015C3A  0100               	movlb	0	; () banked
 13458  015C3C  4B83               	infsnz	LCD_write_message@buffer& (0+255),f,b
 13459  015C3E  2B84               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
 13460  015C40                     l8162:
 13461  015C40  C083  FFF6         	movff	LCD_write_message@buffer,tblptrl
 13462  015C44  C084  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 13463  015C48                     	if	0	;tblptru may be non-zero
 13464  015C48                     	endif
 13465  015C48                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13466  015C48  0E00               	movlw	low (__mediumconst shr (0+16))
 13467  015C4A  6EF8               	movwf	tblptru,c
 13468  015C4C                     	endif
 13469  015C4C  0008               	tblrd		*
 13470  015C4E  50F5               	movf	tablat,w,c
 13471  015C50  0900               	iorlw	0
 13472  015C52  B4D8               	btfsc	status,2,c
 13473  015C54  0012               	return	
 13474  015C56  D7E7               	goto	l8158
 13475  015C58                     __end_of_LCD_write_message:
 13476                           	opt stack 0
 13477                           tblptru	equ	0xFF8
 13478                           tblptrh	equ	0xFF7
 13479                           tblptrl	equ	0xFF6
 13480                           tablat	equ	0xFF5
 13481                           prodh	equ	0xFF4
 13482                           prodl	equ	0xFF3
 13483                           intcon	equ	0xFF2
 13484                           postinc0	equ	0xFEE
 13485                           wreg	equ	0xFE8
 13486                           indf2	equ	0xFDF
 13487                           postinc2	equ	0xFDE
 13488                           fsr2h	equ	0xFDA
 13489                           fsr2l	equ	0xFD9
 13490                           status	equ	0xFD8
 13491                           
 13492 ;; *************** function _LCD_write_char *****************
 13493 ;; Defined at:
 13494 ;;		line 145 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 13495 ;; Parameters:    Size  Location     Type
 13496 ;;  value           1    wreg     unsigned char 
 13497 ;; Auto vars:     Size  Location     Type
 13498 ;;  value           1   34[BANK0 ] unsigned char 
 13499 ;;  D0              1   33[BANK0 ] unsigned char 
 13500 ;;  D1              1   32[BANK0 ] unsigned char 
 13501 ;;  D2              1   31[BANK0 ] unsigned char 
 13502 ;;  D3              1   30[BANK0 ] unsigned char 
 13503 ;; Return value:  Size  Location     Type
 13504 ;;		None               void
 13505 ;; Registers used:
 13506 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13507 ;; Tracked objects:
 13508 ;;		On entry : 0/0
 13509 ;;		On exit  : 0/0
 13510 ;;		Unchanged: 0/0
 13511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13513 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13515 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13516 ;;Total ram usage:        5 bytes
 13517 ;; Hardware stack levels used:    1
 13518 ;; Hardware stack levels required when called:    7
 13519 ;; This function calls:
 13520 ;;		_LCD_send_command
 13521 ;; This function is called by:
 13522 ;;		_LCD_write_message
 13523 ;;		_LCD_write_string
 13524 ;; This function uses a non-reentrant model
 13525 ;;
 13526                           
 13527                           	psect	text28
 13528  015980                     __ptext28:
 13529                           	opt stack 0
 13530  015980                     _LCD_write_char:
 13531                           	opt stack 22
 13532                           
 13533                           ;incstack = 0
 13534                           ;LCD_write_char@value stored from wreg
 13535  015980  0100               	movlb	0	; () banked
 13536  015982  6F82               	movwf	LCD_write_char@value& (0+255),b
 13537                           
 13538                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 13539                           ;src\LCD_44780.c: 149: LATEbits.LATE2 = 1;
 13540  015984  848D               	bsf	3981,2,c	;volatile
 13541                           
 13542                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 13543  015986  0100               	movlb	0	; () banked
 13544  015988  4582               	rlncf	LCD_write_char@value& (0+255),w,b
 13545  01598A  0B01               	andlw	1
 13546  01598C  0100               	movlb	0	; () banked
 13547  01598E  6F7E               	movwf	LCD_write_char@D3& (0+255),b
 13548                           
 13549                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 13550  015990  0100               	movlb	0	; () banked
 13551  015992  4582               	rlncf	LCD_write_char@value& (0+255),w,b
 13552  015994  46E8               	rlncf	wreg,f,c
 13553  015996  0B03               	andlw	3
 13554  015998  0B01               	andlw	1
 13555  01599A  0100               	movlb	0	; () banked
 13556  01599C  6F7F               	movwf	LCD_write_char@D2& (0+255),b
 13557                           
 13558                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 13559  01599E  0100               	movlb	0	; () banked
 13560  0159A0  3982               	swapf	LCD_write_char@value& (0+255),w,b
 13561  0159A2  42E8               	rrncf	wreg,f,c
 13562  0159A4  0B07               	andlw	7
 13563  0159A6  0B01               	andlw	1
 13564  0159A8  0100               	movlb	0	; () banked
 13565  0159AA  6F80               	movwf	LCD_write_char@D1& (0+255),b
 13566                           
 13567                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 13568  0159AC  0100               	movlb	0	; () banked
 13569  0159AE  3982               	swapf	LCD_write_char@value& (0+255),w,b
 13570  0159B0  0B0F               	andlw	15
 13571  0159B2  0B01               	andlw	1
 13572  0159B4  0100               	movlb	0	; () banked
 13573  0159B6  6F81               	movwf	LCD_write_char@D0& (0+255),b
 13574                           
 13575                           ; BSR set to: 0
 13576                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 13577  0159B8  C07F  F07A         	movff	LCD_write_char@D2,LCD_send_command@D2
 13578  0159BC  C080  F07B         	movff	LCD_write_char@D1,LCD_send_command@D1
 13579  0159C0  C081  F07C         	movff	LCD_write_char@D0,LCD_send_command@D0
 13580  0159C4  0100               	movlb	0	; () banked
 13581  0159C6  517E               	movf	LCD_write_char@D3& (0+255),w,b
 13582  0159C8  ECA1  F0AD         	call	_LCD_send_command
 13583                           
 13584                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 13585  0159CC  0100               	movlb	0	; () banked
 13586  0159CE  3982               	swapf	LCD_write_char@value& (0+255),w,b
 13587  0159D0  46E8               	rlncf	wreg,f,c
 13588  0159D2  0B1F               	andlw	31
 13589  0159D4  0B01               	andlw	1
 13590  0159D6  0100               	movlb	0	; () banked
 13591  0159D8  6F7E               	movwf	LCD_write_char@D3& (0+255),b
 13592                           
 13593                           ; BSR set to: 0
 13594                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 13595  0159DA  0100               	movlb	0	; () banked
 13596  0159DC  4182               	rrncf	LCD_write_char@value& (0+255),w,b
 13597  0159DE  42E8               	rrncf	wreg,f,c
 13598  0159E0  0B3F               	andlw	63
 13599  0159E2  0B01               	andlw	1
 13600  0159E4  0100               	movlb	0	; () banked
 13601  0159E6  6F7F               	movwf	LCD_write_char@D2& (0+255),b
 13602                           
 13603                           ; BSR set to: 0
 13604                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 13605  0159E8  0100               	movlb	0	; () banked
 13606  0159EA  90D8               	bcf	status,0,c
 13607  0159EC  3182               	rrcf	LCD_write_char@value& (0+255),w,b
 13608  0159EE  0B01               	andlw	1
 13609  0159F0  0100               	movlb	0	; () banked
 13610  0159F2  6F80               	movwf	LCD_write_char@D1& (0+255),b
 13611                           
 13612                           ; BSR set to: 0
 13613                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 13614  0159F4  0100               	movlb	0	; () banked
 13615  0159F6  5182               	movf	LCD_write_char@value& (0+255),w,b
 13616  0159F8  0B01               	andlw	1
 13617  0159FA  0100               	movlb	0	; () banked
 13618  0159FC  6F81               	movwf	LCD_write_char@D0& (0+255),b
 13619                           
 13620                           ; BSR set to: 0
 13621                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 13622  0159FE  C07F  F07A         	movff	LCD_write_char@D2,LCD_send_command@D2
 13623  015A02  C080  F07B         	movff	LCD_write_char@D1,LCD_send_command@D1
 13624  015A06  C081  F07C         	movff	LCD_write_char@D0,LCD_send_command@D0
 13625  015A0A  0100               	movlb	0	; () banked
 13626  015A0C  517E               	movf	LCD_write_char@D3& (0+255),w,b
 13627  015A0E  ECA1  F0AD         	call	_LCD_send_command
 13628                           
 13629                           ;src\LCD_44780.c: 167: LATEbits.LATE2 = 0;
 13630  015A12  948D               	bcf	3981,2,c	;volatile
 13631  015A14  0012               	return		;funcret
 13632  015A16                     __end_of_LCD_write_char:
 13633                           	opt stack 0
 13634                           tblptru	equ	0xFF8
 13635                           tblptrh	equ	0xFF7
 13636                           tblptrl	equ	0xFF6
 13637                           tablat	equ	0xFF5
 13638                           prodh	equ	0xFF4
 13639                           prodl	equ	0xFF3
 13640                           intcon	equ	0xFF2
 13641                           postinc0	equ	0xFEE
 13642                           wreg	equ	0xFE8
 13643                           indf2	equ	0xFDF
 13644                           postinc2	equ	0xFDE
 13645                           fsr2h	equ	0xFDA
 13646                           fsr2l	equ	0xFD9
 13647                           status	equ	0xFD8
 13648                           
 13649 ;; *************** function _LCD_initialize *****************
 13650 ;; Defined at:
 13651 ;;		line 283 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 13652 ;; Parameters:    Size  Location     Type
 13653 ;;  quartz_frequ    1    wreg     unsigned char 
 13654 ;; Auto vars:     Size  Location     Type
 13655 ;;  quartz_frequ    1   32[BANK0 ] unsigned char 
 13656 ;; Return value:  Size  Location     Type
 13657 ;;		None               void
 13658 ;; Registers used:
 13659 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13660 ;; Tracked objects:
 13661 ;;		On entry : 0/0
 13662 ;;		On exit  : 0/0
 13663 ;;		Unchanged: 0/0
 13664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13666 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13668 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13669 ;;Total ram usage:        1 bytes
 13670 ;; Hardware stack levels used:    1
 13671 ;; Hardware stack levels required when called:    8
 13672 ;; This function calls:
 13673 ;;		_LCD_clear
 13674 ;;		_LCD_cursor
 13675 ;;		_LCD_send_command
 13676 ;;		_delay_ms
 13677 ;;		_delay_set_quartz
 13678 ;; This function is called by:
 13679 ;;		_main
 13680 ;;		_LCD_Handler
 13681 ;;		_board_initialization
 13682 ;; This function uses a non-reentrant model
 13683 ;;
 13684                           
 13685                           	psect	text29
 13686  015010                     __ptext29:
 13687                           	opt stack 0
 13688  015010                     _LCD_initialize:
 13689                           	opt stack 21
 13690                           
 13691                           ;incstack = 0
 13692                           ;LCD_initialize@quartz_frequency stored from wreg
 13693  015010  0100               	movlb	0	; () banked
 13694  015012  6F80               	movwf	LCD_initialize@quartz_frequency& (0+255),b
 13695                           
 13696                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
 13697  015014  0100               	movlb	0	; () banked
 13698  015016  5180               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
 13699  015018  EC06  F0AF         	call	_delay_set_quartz
 13700                           
 13701                           ;src\LCD_44780.c: 287: LATEbits.LATE2 = 0x00;
 13702  01501C  948D               	bcf	3981,2,c	;volatile
 13703                           
 13704                           ;src\LCD_44780.c: 288: LATCbits.LATC1 = 0x00;
 13705  01501E  928B               	bcf	3979,1,c	;volatile
 13706                           
 13707                           ;src\LCD_44780.c: 289: LATCbits.LATC0 = 0x00;
 13708  015020  908B               	bcf	3979,0,c	;volatile
 13709                           
 13710                           ;src\LCD_44780.c: 291: delay_ms (100);
 13711  015022  0E00               	movlw	0
 13712  015024  0100               	movlb	0	; () banked
 13713  015026  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
 13714  015028  0E64               	movlw	100
 13715  01502A  6F78               	movwf	delay_ms@value_ms& (0+255),b
 13716  01502C  ECBE  F0AD         	call	_delay_ms	;wreg free
 13717                           
 13718                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
 13719  015030  0E00               	movlw	0
 13720  015032  0100               	movlb	0	; () banked
 13721  015034  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13722  015036  0E01               	movlw	1
 13723  015038  0100               	movlb	0	; () banked
 13724  01503A  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13725  01503C  0E01               	movlw	1
 13726  01503E  0100               	movlb	0	; () banked
 13727  015040  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13728  015042  0E00               	movlw	0
 13729  015044  ECA1  F0AD         	call	_LCD_send_command
 13730                           
 13731                           ;src\LCD_44780.c: 293: delay_ms (100);
 13732  015048  0E00               	movlw	0
 13733  01504A  0100               	movlb	0	; () banked
 13734  01504C  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
 13735  01504E  0E64               	movlw	100
 13736  015050  6F78               	movwf	delay_ms@value_ms& (0+255),b
 13737  015052  ECBE  F0AD         	call	_delay_ms	;wreg free
 13738                           
 13739                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
 13740  015056  0E00               	movlw	0
 13741  015058  0100               	movlb	0	; () banked
 13742  01505A  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13743  01505C  0E01               	movlw	1
 13744  01505E  0100               	movlb	0	; () banked
 13745  015060  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13746  015062  0E01               	movlw	1
 13747  015064  0100               	movlb	0	; () banked
 13748  015066  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13749  015068  0E00               	movlw	0
 13750  01506A  ECA1  F0AD         	call	_LCD_send_command
 13751                           
 13752                           ;src\LCD_44780.c: 295: delay_ms (10);
 13753  01506E  0E00               	movlw	0
 13754  015070  0100               	movlb	0	; () banked
 13755  015072  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
 13756  015074  0E0A               	movlw	10
 13757  015076  6F78               	movwf	delay_ms@value_ms& (0+255),b
 13758  015078  ECBE  F0AD         	call	_delay_ms	;wreg free
 13759                           
 13760                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
 13761  01507C  0E00               	movlw	0
 13762  01507E  0100               	movlb	0	; () banked
 13763  015080  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13764  015082  0E01               	movlw	1
 13765  015084  0100               	movlb	0	; () banked
 13766  015086  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13767  015088  0E01               	movlw	1
 13768  01508A  0100               	movlb	0	; () banked
 13769  01508C  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13770  01508E  0E00               	movlw	0
 13771  015090  ECA1  F0AD         	call	_LCD_send_command
 13772                           
 13773                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
 13774  015094  0E00               	movlw	0
 13775  015096  0100               	movlb	0	; () banked
 13776  015098  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13777  01509A  0E01               	movlw	1
 13778  01509C  0100               	movlb	0	; () banked
 13779  01509E  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13780  0150A0  0E00               	movlw	0
 13781  0150A2  0100               	movlb	0	; () banked
 13782  0150A4  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13783  0150A6  0E00               	movlw	0
 13784  0150A8  ECA1  F0AD         	call	_LCD_send_command
 13785                           
 13786                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
 13787  0150AC  0E00               	movlw	0
 13788  0150AE  0100               	movlb	0	; () banked
 13789  0150B0  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13790  0150B2  0E01               	movlw	1
 13791  0150B4  0100               	movlb	0	; () banked
 13792  0150B6  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13793  0150B8  0E00               	movlw	0
 13794  0150BA  0100               	movlb	0	; () banked
 13795  0150BC  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13796  0150BE  0E00               	movlw	0
 13797  0150C0  ECA1  F0AD         	call	_LCD_send_command
 13798                           
 13799                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
 13800  0150C4  0E00               	movlw	0
 13801  0150C6  0100               	movlb	0	; () banked
 13802  0150C8  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13803  0150CA  0E00               	movlw	0
 13804  0150CC  0100               	movlb	0	; () banked
 13805  0150CE  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13806  0150D0  0E00               	movlw	0
 13807  0150D2  0100               	movlb	0	; () banked
 13808  0150D4  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13809  0150D6  0E01               	movlw	1
 13810  0150D8  ECA1  F0AD         	call	_LCD_send_command
 13811                           
 13812                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
 13813  0150DC  0E00               	movlw	0
 13814  0150DE  0100               	movlb	0	; () banked
 13815  0150E0  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13816  0150E2  0E00               	movlw	0
 13817  0150E4  0100               	movlb	0	; () banked
 13818  0150E6  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13819  0150E8  0E00               	movlw	0
 13820  0150EA  0100               	movlb	0	; () banked
 13821  0150EC  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13822  0150EE  0E00               	movlw	0
 13823  0150F0  ECA1  F0AD         	call	_LCD_send_command
 13824                           
 13825                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
 13826  0150F4  0E00               	movlw	0
 13827  0150F6  0100               	movlb	0	; () banked
 13828  0150F8  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13829  0150FA  0E00               	movlw	0
 13830  0150FC  0100               	movlb	0	; () banked
 13831  0150FE  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13832  015100  0E00               	movlw	0
 13833  015102  0100               	movlb	0	; () banked
 13834  015104  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13835  015106  0E01               	movlw	1
 13836  015108  ECA1  F0AD         	call	_LCD_send_command
 13837                           
 13838                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
 13839  01510C  0E00               	movlw	0
 13840  01510E  0100               	movlb	0	; () banked
 13841  015110  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13842  015112  0E00               	movlw	0
 13843  015114  0100               	movlb	0	; () banked
 13844  015116  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13845  015118  0E00               	movlw	0
 13846  01511A  0100               	movlb	0	; () banked
 13847  01511C  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13848  01511E  0E00               	movlw	0
 13849  015120  ECA1  F0AD         	call	_LCD_send_command
 13850                           
 13851                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
 13852  015124  0E00               	movlw	0
 13853  015126  0100               	movlb	0	; () banked
 13854  015128  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13855  01512A  0E00               	movlw	0
 13856  01512C  0100               	movlb	0	; () banked
 13857  01512E  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13858  015130  0E01               	movlw	1
 13859  015132  0100               	movlb	0	; () banked
 13860  015134  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13861  015136  0E00               	movlw	0
 13862  015138  ECA1  F0AD         	call	_LCD_send_command
 13863                           
 13864                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
 13865  01513C  0E00               	movlw	0
 13866  01513E  0100               	movlb	0	; () banked
 13867  015140  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13868  015142  0E00               	movlw	0
 13869  015144  0100               	movlb	0	; () banked
 13870  015146  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13871  015148  0E00               	movlw	0
 13872  01514A  0100               	movlb	0	; () banked
 13873  01514C  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13874  01514E  0E00               	movlw	0
 13875  015150  ECA1  F0AD         	call	_LCD_send_command
 13876                           
 13877                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
 13878  015154  0E01               	movlw	1
 13879  015156  0100               	movlb	0	; () banked
 13880  015158  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13881  01515A  0E01               	movlw	1
 13882  01515C  0100               	movlb	0	; () banked
 13883  01515E  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13884  015160  0E00               	movlw	0
 13885  015162  0100               	movlb	0	; () banked
 13886  015164  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13887  015166  0E00               	movlw	0
 13888  015168  ECA1  F0AD         	call	_LCD_send_command
 13889                           
 13890                           ;src\LCD_44780.c: 312: LCD_clear ();
 13891  01516C  EC45  F0AE         	call	_LCD_clear	;wreg free
 13892                           
 13893                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
 13894  015170  0E00               	movlw	0
 13895  015172  0100               	movlb	0	; () banked
 13896  015174  6F7E               	movwf	LCD_cursor@blinking& (0+255),b
 13897  015176  0E00               	movlw	0
 13898  015178  EC2C  F0AE         	call	_LCD_cursor
 13899  01517C  0012               	return		;funcret
 13900  01517E                     __end_of_LCD_initialize:
 13901                           	opt stack 0
 13902                           tblptru	equ	0xFF8
 13903                           tblptrh	equ	0xFF7
 13904                           tblptrl	equ	0xFF6
 13905                           tablat	equ	0xFF5
 13906                           prodh	equ	0xFF4
 13907                           prodl	equ	0xFF3
 13908                           intcon	equ	0xFF2
 13909                           postinc0	equ	0xFEE
 13910                           wreg	equ	0xFE8
 13911                           indf2	equ	0xFDF
 13912                           postinc2	equ	0xFDE
 13913                           fsr2h	equ	0xFDA
 13914                           fsr2l	equ	0xFD9
 13915                           status	equ	0xFD8
 13916                           
 13917 ;; *************** function _delay_set_quartz *****************
 13918 ;; Defined at:
 13919 ;;		line 115 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 13920 ;; Parameters:    Size  Location     Type
 13921 ;;  frequency       1    wreg     unsigned char 
 13922 ;; Auto vars:     Size  Location     Type
 13923 ;;  frequency       1   18[BANK0 ] unsigned char 
 13924 ;; Return value:  Size  Location     Type
 13925 ;;		None               void
 13926 ;; Registers used:
 13927 ;;		wreg
 13928 ;; Tracked objects:
 13929 ;;		On entry : 0/0
 13930 ;;		On exit  : 0/0
 13931 ;;		Unchanged: 0/0
 13932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13934 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13936 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13937 ;;Total ram usage:        1 bytes
 13938 ;; Hardware stack levels used:    1
 13939 ;; Hardware stack levels required when called:    3
 13940 ;; This function calls:
 13941 ;;		Nothing
 13942 ;; This function is called by:
 13943 ;;		_LCD_initialize
 13944 ;; This function uses a non-reentrant model
 13945 ;;
 13946                           
 13947                           	psect	text30
 13948  015E0C                     __ptext30:
 13949                           	opt stack 0
 13950  015E0C                     _delay_set_quartz:
 13951                           	opt stack 25
 13952                           
 13953                           ;incstack = 0
 13954                           ;delay_set_quartz@frequency stored from wreg
 13955  015E0C  0100               	movlb	0	; () banked
 13956  015E0E  6F72               	movwf	delay_set_quartz@frequency& (0+255),b
 13957                           
 13958                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
 13959  015E10  C072  F0EC         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
 13960  015E14  0012               	return		;funcret
 13961  015E16                     __end_of_delay_set_quartz:
 13962                           	opt stack 0
 13963                           tblptru	equ	0xFF8
 13964                           tblptrh	equ	0xFF7
 13965                           tblptrl	equ	0xFF6
 13966                           tablat	equ	0xFF5
 13967                           prodh	equ	0xFF4
 13968                           prodl	equ	0xFF3
 13969                           intcon	equ	0xFF2
 13970                           postinc0	equ	0xFEE
 13971                           wreg	equ	0xFE8
 13972                           indf2	equ	0xFDF
 13973                           postinc2	equ	0xFDE
 13974                           fsr2h	equ	0xFDA
 13975                           fsr2l	equ	0xFD9
 13976                           status	equ	0xFD8
 13977                           
 13978 ;; *************** function _LCD_cursor *****************
 13979 ;; Defined at:
 13980 ;;		line 266 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 13981 ;; Parameters:    Size  Location     Type
 13982 ;;  active          1    wreg     unsigned char 
 13983 ;;  blinking        1   30[BANK0 ] unsigned char 
 13984 ;; Auto vars:     Size  Location     Type
 13985 ;;  active          1   31[BANK0 ] unsigned char 
 13986 ;; Return value:  Size  Location     Type
 13987 ;;		None               void
 13988 ;; Registers used:
 13989 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13990 ;; Tracked objects:
 13991 ;;		On entry : 0/0
 13992 ;;		On exit  : 0/0
 13993 ;;		Unchanged: 0/0
 13994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13995 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13996 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13998 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13999 ;;Total ram usage:        2 bytes
 14000 ;; Hardware stack levels used:    1
 14001 ;; Hardware stack levels required when called:    7
 14002 ;; This function calls:
 14003 ;;		_LCD_send_command
 14004 ;; This function is called by:
 14005 ;;		_LCD_initialize
 14006 ;; This function uses a non-reentrant model
 14007 ;;
 14008                           
 14009                           	psect	text31
 14010  015C58                     __ptext31:
 14011                           	opt stack 0
 14012  015C58                     _LCD_cursor:
 14013                           	opt stack 21
 14014                           
 14015                           ;incstack = 0
 14016                           ;LCD_cursor@active stored from wreg
 14017  015C58  0100               	movlb	0	; () banked
 14018  015C5A  6F7F               	movwf	LCD_cursor@active& (0+255),b
 14019                           
 14020                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
 14021  015C5C  0E00               	movlw	0
 14022  015C5E  0100               	movlb	0	; () banked
 14023  015C60  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14024  015C62  0E00               	movlw	0
 14025  015C64  0100               	movlb	0	; () banked
 14026  015C66  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14027  015C68  0E00               	movlw	0
 14028  015C6A  0100               	movlb	0	; () banked
 14029  015C6C  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14030  015C6E  0E00               	movlw	0
 14031  015C70  ECA1  F0AD         	call	_LCD_send_command
 14032                           
 14033                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
 14034  015C74  0E01               	movlw	1
 14035  015C76  0100               	movlb	0	; () banked
 14036  015C78  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14037  015C7A  C07F  F07B         	movff	LCD_cursor@active,LCD_send_command@D1
 14038  015C7E  C07E  F07C         	movff	LCD_cursor@blinking,LCD_send_command@D0
 14039  015C82  0E01               	movlw	1
 14040  015C84  ECA1  F0AD         	call	_LCD_send_command
 14041  015C88  0012               	return		;funcret
 14042  015C8A                     __end_of_LCD_cursor:
 14043                           	opt stack 0
 14044                           tblptru	equ	0xFF8
 14045                           tblptrh	equ	0xFF7
 14046                           tblptrl	equ	0xFF6
 14047                           tablat	equ	0xFF5
 14048                           prodh	equ	0xFF4
 14049                           prodl	equ	0xFF3
 14050                           intcon	equ	0xFF2
 14051                           postinc0	equ	0xFEE
 14052                           wreg	equ	0xFE8
 14053                           indf2	equ	0xFDF
 14054                           postinc2	equ	0xFDE
 14055                           fsr2h	equ	0xFDA
 14056                           fsr2l	equ	0xFD9
 14057                           status	equ	0xFD8
 14058                           
 14059 ;; *************** function _LCD_clear *****************
 14060 ;; Defined at:
 14061 ;;		line 257 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14062 ;; Parameters:    Size  Location     Type
 14063 ;;		None
 14064 ;; Auto vars:     Size  Location     Type
 14065 ;;		None
 14066 ;; Return value:  Size  Location     Type
 14067 ;;		None               void
 14068 ;; Registers used:
 14069 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14070 ;; Tracked objects:
 14071 ;;		On entry : 0/0
 14072 ;;		On exit  : 0/0
 14073 ;;		Unchanged: 0/0
 14074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14079 ;;Total ram usage:        0 bytes
 14080 ;; Hardware stack levels used:    1
 14081 ;; Hardware stack levels required when called:    7
 14082 ;; This function calls:
 14083 ;;		_LCD_send_command
 14084 ;; This function is called by:
 14085 ;;		_LCD_initialize
 14086 ;;		_LCD_Handler
 14087 ;;		_board_initialization
 14088 ;; This function uses a non-reentrant model
 14089 ;;
 14090                           
 14091                           	psect	text32
 14092  015C8A                     __ptext32:
 14093                           	opt stack 0
 14094  015C8A                     _LCD_clear:
 14095                           	opt stack 21
 14096                           
 14097                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 14098                           
 14099                           ;incstack = 0
 14100  015C8A  0E00               	movlw	0
 14101  015C8C  0100               	movlb	0	; () banked
 14102  015C8E  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14103  015C90  0E00               	movlw	0
 14104  015C92  0100               	movlb	0	; () banked
 14105  015C94  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14106  015C96  0E00               	movlw	0
 14107  015C98  0100               	movlb	0	; () banked
 14108  015C9A  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14109  015C9C  0E00               	movlw	0
 14110  015C9E  ECA1  F0AD         	call	_LCD_send_command
 14111                           
 14112                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 14113  015CA2  0E00               	movlw	0
 14114  015CA4  0100               	movlb	0	; () banked
 14115  015CA6  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14116  015CA8  0E00               	movlw	0
 14117  015CAA  0100               	movlb	0	; () banked
 14118  015CAC  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14119  015CAE  0E01               	movlw	1
 14120  015CB0  0100               	movlb	0	; () banked
 14121  015CB2  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14122  015CB4  0E00               	movlw	0
 14123  015CB6  ECA1  F0AD         	call	_LCD_send_command
 14124  015CBA  0012               	return		;funcret
 14125  015CBC                     __end_of_LCD_clear:
 14126                           	opt stack 0
 14127                           tblptru	equ	0xFF8
 14128                           tblptrh	equ	0xFF7
 14129                           tblptrl	equ	0xFF6
 14130                           tablat	equ	0xFF5
 14131                           prodh	equ	0xFF4
 14132                           prodl	equ	0xFF3
 14133                           intcon	equ	0xFF2
 14134                           postinc0	equ	0xFEE
 14135                           wreg	equ	0xFE8
 14136                           indf2	equ	0xFDF
 14137                           postinc2	equ	0xFDE
 14138                           fsr2h	equ	0xFDA
 14139                           fsr2l	equ	0xFD9
 14140                           status	equ	0xFD8
 14141                           
 14142 ;; *************** function _LCD_goto_xy *****************
 14143 ;; Defined at:
 14144 ;;		line 136 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14145 ;; Parameters:    Size  Location     Type
 14146 ;;  x               1    wreg     unsigned char 
 14147 ;;  y               1   33[BANK0 ] unsigned char 
 14148 ;; Auto vars:     Size  Location     Type
 14149 ;;  x               1   34[BANK0 ] unsigned char 
 14150 ;; Return value:  Size  Location     Type
 14151 ;;		None               void
 14152 ;; Registers used:
 14153 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14154 ;; Tracked objects:
 14155 ;;		On entry : 0/0
 14156 ;;		On exit  : 0/0
 14157 ;;		Unchanged: 0/0
 14158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14159 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14160 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14162 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14163 ;;Total ram usage:        2 bytes
 14164 ;; Hardware stack levels used:    1
 14165 ;; Hardware stack levels required when called:    8
 14166 ;; This function calls:
 14167 ;;		_LCD_goto_line
 14168 ;;		_LCD_shift_cursor
 14169 ;; This function is called by:
 14170 ;;		_LCD_Handler
 14171 ;; This function uses a non-reentrant model
 14172 ;;
 14173                           
 14174                           	psect	text33
 14175  015D8C                     __ptext33:
 14176                           	opt stack 0
 14177  015D8C                     _LCD_goto_xy:
 14178                           	opt stack 21
 14179                           
 14180                           ;incstack = 0
 14181                           ;LCD_goto_xy@x stored from wreg
 14182  015D8C  0100               	movlb	0	; () banked
 14183  015D8E  6F82               	movwf	LCD_goto_xy@x& (0+255),b
 14184                           
 14185                           ;src\LCD_44780.c: 138: LCD_goto_line (y);
 14186  015D90  0100               	movlb	0	; () banked
 14187  015D92  5181               	movf	LCD_goto_xy@y& (0+255),w,b
 14188  015D94  ECEB  F0A9         	call	_LCD_goto_line
 14189                           
 14190                           ;src\LCD_44780.c: 139: LCD_shift_cursor (1, x-1);
 14191  015D98  0100               	movlb	0	; () banked
 14192  015D9A  0582               	decf	LCD_goto_xy@x& (0+255),w,b
 14193  015D9C  0100               	movlb	0	; () banked
 14194  015D9E  6F7E               	movwf	LCD_shift_cursor@number_of_shift& (0+255),b
 14195  015DA0  0E01               	movlw	1
 14196  015DA2  EC35  F0AD         	call	_LCD_shift_cursor
 14197  015DA6  0012               	return		;funcret
 14198  015DA8                     __end_of_LCD_goto_xy:
 14199                           	opt stack 0
 14200                           tblptru	equ	0xFF8
 14201                           tblptrh	equ	0xFF7
 14202                           tblptrl	equ	0xFF6
 14203                           tablat	equ	0xFF5
 14204                           prodh	equ	0xFF4
 14205                           prodl	equ	0xFF3
 14206                           intcon	equ	0xFF2
 14207                           postinc0	equ	0xFEE
 14208                           wreg	equ	0xFE8
 14209                           indf2	equ	0xFDF
 14210                           postinc2	equ	0xFDE
 14211                           fsr2h	equ	0xFDA
 14212                           fsr2l	equ	0xFD9
 14213                           status	equ	0xFD8
 14214                           
 14215 ;; *************** function _LCD_shift_cursor *****************
 14216 ;; Defined at:
 14217 ;;		line 98 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14218 ;; Parameters:    Size  Location     Type
 14219 ;;  shift           1    wreg     unsigned char 
 14220 ;;  number_of_sh    1   30[BANK0 ] unsigned char 
 14221 ;; Auto vars:     Size  Location     Type
 14222 ;;  shift           1   31[BANK0 ] unsigned char 
 14223 ;;  i               1   32[BANK0 ] unsigned char 
 14224 ;; Return value:  Size  Location     Type
 14225 ;;		None               void
 14226 ;; Registers used:
 14227 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14228 ;; Tracked objects:
 14229 ;;		On entry : 0/0
 14230 ;;		On exit  : 0/0
 14231 ;;		Unchanged: 0/0
 14232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14233 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14234 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14236 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14237 ;;Total ram usage:        3 bytes
 14238 ;; Hardware stack levels used:    1
 14239 ;; Hardware stack levels required when called:    7
 14240 ;; This function calls:
 14241 ;;		_LCD_send_command
 14242 ;; This function is called by:
 14243 ;;		_LCD_goto_xy
 14244 ;; This function uses a non-reentrant model
 14245 ;;
 14246                           
 14247                           	psect	text34
 14248  015A6A                     __ptext34:
 14249                           	opt stack 0
 14250  015A6A                     _LCD_shift_cursor:
 14251                           	opt stack 21
 14252                           
 14253                           ;incstack = 0
 14254                           ;LCD_shift_cursor@shift stored from wreg
 14255  015A6A  0100               	movlb	0	; () banked
 14256  015A6C  6F7F               	movwf	LCD_shift_cursor@shift& (0+255),b
 14257                           
 14258                           ;src\LCD_44780.c: 100: unsigned char i;
 14259                           ;src\LCD_44780.c: 102: for (i=0; i < number_of_shift; i++) {
 14260  015A6E  0E00               	movlw	0
 14261  015A70  0100               	movlb	0	; () banked
 14262  015A72  6F80               	movwf	LCD_shift_cursor@i& (0+255),b
 14263  015A74  D019               	goto	l7770
 14264  015A76                     l7766:
 14265                           
 14266                           ; BSR set to: 0
 14267                           ;src\LCD_44780.c: 103: LCD_send_command (0,0,0,1);
 14268  015A76  0E00               	movlw	0
 14269  015A78  0100               	movlb	0	; () banked
 14270  015A7A  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14271  015A7C  0E00               	movlw	0
 14272  015A7E  0100               	movlb	0	; () banked
 14273  015A80  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14274  015A82  0E01               	movlw	1
 14275  015A84  0100               	movlb	0	; () banked
 14276  015A86  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14277  015A88  0E00               	movlw	0
 14278  015A8A  ECA1  F0AD         	call	_LCD_send_command
 14279                           
 14280                           ;src\LCD_44780.c: 104: LCD_send_command (0,shift,0,0);
 14281  015A8E  C07F  F07A         	movff	LCD_shift_cursor@shift,LCD_send_command@D2
 14282  015A92  0E00               	movlw	0
 14283  015A94  0100               	movlb	0	; () banked
 14284  015A96  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14285  015A98  0E00               	movlw	0
 14286  015A9A  0100               	movlb	0	; () banked
 14287  015A9C  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14288  015A9E  0E00               	movlw	0
 14289  015AA0  ECA1  F0AD         	call	_LCD_send_command
 14290  015AA4  0100               	movlb	0	; () banked
 14291  015AA6  2B80               	incf	LCD_shift_cursor@i& (0+255),f,b
 14292  015AA8                     l7770:
 14293                           
 14294                           ; BSR set to: 0
 14295  015AA8  0100               	movlb	0	; () banked
 14296  015AAA  517E               	movf	LCD_shift_cursor@number_of_shift& (0+255),w,b
 14297  015AAC  0100               	movlb	0	; () banked
 14298  015AAE  5D80               	subwf	LCD_shift_cursor@i& (0+255),w,b
 14299  015AB0  B0D8               	btfsc	status,0,c
 14300  015AB2  0012               	return	
 14301  015AB4  D7E0               	goto	l7766
 14302  015AB6                     __end_of_LCD_shift_cursor:
 14303                           	opt stack 0
 14304                           tblptru	equ	0xFF8
 14305                           tblptrh	equ	0xFF7
 14306                           tblptrl	equ	0xFF6
 14307                           tablat	equ	0xFF5
 14308                           prodh	equ	0xFF4
 14309                           prodl	equ	0xFF3
 14310                           intcon	equ	0xFF2
 14311                           postinc0	equ	0xFEE
 14312                           wreg	equ	0xFE8
 14313                           indf2	equ	0xFDF
 14314                           postinc2	equ	0xFDE
 14315                           fsr2h	equ	0xFDA
 14316                           fsr2l	equ	0xFD9
 14317                           status	equ	0xFD8
 14318                           
 14319 ;; *************** function _LCD_goto_line *****************
 14320 ;; Defined at:
 14321 ;;		line 111 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14322 ;; Parameters:    Size  Location     Type
 14323 ;;  line            1    wreg     unsigned char 
 14324 ;; Auto vars:     Size  Location     Type
 14325 ;;  line            1   30[BANK0 ] unsigned char 
 14326 ;; Return value:  Size  Location     Type
 14327 ;;		None               void
 14328 ;; Registers used:
 14329 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14330 ;; Tracked objects:
 14331 ;;		On entry : 0/0
 14332 ;;		On exit  : 0/0
 14333 ;;		Unchanged: 0/0
 14334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14336 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14338 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14339 ;;Total ram usage:        1 bytes
 14340 ;; Hardware stack levels used:    1
 14341 ;; Hardware stack levels required when called:    7
 14342 ;; This function calls:
 14343 ;;		_LCD_send_command
 14344 ;; This function is called by:
 14345 ;;		_LCD_goto_xy
 14346 ;;		_main
 14347 ;;		_LCD_Handler
 14348 ;;		_board_initialization
 14349 ;; This function uses a non-reentrant model
 14350 ;;
 14351                           
 14352                           	psect	text35
 14353  0153D6                     __ptext35:
 14354                           	opt stack 0
 14355  0153D6                     _LCD_goto_line:
 14356                           	opt stack 22
 14357                           
 14358                           ; BSR set to: 0
 14359                           ;incstack = 0
 14360                           ;LCD_goto_line@line stored from wreg
 14361  0153D6  0100               	movlb	0	; () banked
 14362  0153D8  6F7E               	movwf	LCD_goto_line@line& (0+255),b
 14363                           
 14364                           ;src\LCD_44780.c: 113: switch(line) {
 14365  0153DA  D064               	goto	l7782
 14366  0153DC                     l7774:
 14367  0153DC  0E00               	movlw	0
 14368  0153DE  0100               	movlb	0	; () banked
 14369  0153E0  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14370  0153E2  0E00               	movlw	0
 14371  0153E4  0100               	movlb	0	; () banked
 14372  0153E6  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14373  0153E8  0E00               	movlw	0
 14374  0153EA  0100               	movlb	0	; () banked
 14375  0153EC  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14376  0153EE  0E01               	movlw	1
 14377  0153F0  ECA1  F0AD         	call	_LCD_send_command
 14378                           
 14379                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 14380  0153F4  0E00               	movlw	0
 14381  0153F6  0100               	movlb	0	; () banked
 14382  0153F8  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14383  0153FA  0E00               	movlw	0
 14384  0153FC  0100               	movlb	0	; () banked
 14385  0153FE  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14386  015400  0E00               	movlw	0
 14387  015402  0100               	movlb	0	; () banked
 14388  015404  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14389  015406  0E00               	movlw	0
 14390  015408  ECA1  F0AD         	call	_LCD_send_command
 14391                           
 14392                           ;src\LCD_44780.c: 117: break;
 14393  01540C  0012               	return	
 14394  01540E                     l7776:
 14395  01540E  0E01               	movlw	1
 14396  015410  0100               	movlb	0	; () banked
 14397  015412  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14398  015414  0E00               	movlw	0
 14399  015416  0100               	movlb	0	; () banked
 14400  015418  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14401  01541A  0E00               	movlw	0
 14402  01541C  0100               	movlb	0	; () banked
 14403  01541E  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14404  015420  0E01               	movlw	1
 14405  015422  ECA1  F0AD         	call	_LCD_send_command
 14406                           
 14407                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 14408  015426  0E00               	movlw	0
 14409  015428  0100               	movlb	0	; () banked
 14410  01542A  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14411  01542C  0E00               	movlw	0
 14412  01542E  0100               	movlb	0	; () banked
 14413  015430  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14414  015432  0E00               	movlw	0
 14415  015434  0100               	movlb	0	; () banked
 14416  015436  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14417  015438  0E00               	movlw	0
 14418  01543A  ECA1  F0AD         	call	_LCD_send_command
 14419                           
 14420                           ;src\LCD_44780.c: 121: break;
 14421  01543E  0012               	return	
 14422  015440                     l7778:
 14423  015440  0E00               	movlw	0
 14424  015442  0100               	movlb	0	; () banked
 14425  015444  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14426  015446  0E00               	movlw	0
 14427  015448  0100               	movlb	0	; () banked
 14428  01544A  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14429  01544C  0E01               	movlw	1
 14430  01544E  0100               	movlb	0	; () banked
 14431  015450  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14432  015452  0E01               	movlw	1
 14433  015454  ECA1  F0AD         	call	_LCD_send_command
 14434                           
 14435                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 14436  015458  0E01               	movlw	1
 14437  01545A  0100               	movlb	0	; () banked
 14438  01545C  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14439  01545E  0E00               	movlw	0
 14440  015460  0100               	movlb	0	; () banked
 14441  015462  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14442  015464  0E00               	movlw	0
 14443  015466  0100               	movlb	0	; () banked
 14444  015468  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14445  01546A  0E00               	movlw	0
 14446  01546C  ECA1  F0AD         	call	_LCD_send_command
 14447                           
 14448                           ;src\LCD_44780.c: 125: break;
 14449  015470  0012               	return	
 14450  015472                     l7780:
 14451  015472  0E01               	movlw	1
 14452  015474  0100               	movlb	0	; () banked
 14453  015476  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14454  015478  0E00               	movlw	0
 14455  01547A  0100               	movlb	0	; () banked
 14456  01547C  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14457  01547E  0E01               	movlw	1
 14458  015480  0100               	movlb	0	; () banked
 14459  015482  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14460  015484  0E01               	movlw	1
 14461  015486  ECA1  F0AD         	call	_LCD_send_command
 14462                           
 14463                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 14464  01548A  0E01               	movlw	1
 14465  01548C  0100               	movlb	0	; () banked
 14466  01548E  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14467  015490  0E00               	movlw	0
 14468  015492  0100               	movlb	0	; () banked
 14469  015494  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14470  015496  0E00               	movlw	0
 14471  015498  0100               	movlb	0	; () banked
 14472  01549A  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14473  01549C  0E00               	movlw	0
 14474  01549E  ECA1  F0AD         	call	_LCD_send_command
 14475                           
 14476                           ;src\LCD_44780.c: 129: }
 14477  0154A2  0012               	return	
 14478  0154A4                     l7782:
 14479  0154A4  0100               	movlb	0	; () banked
 14480  0154A6  517E               	movf	LCD_goto_line@line& (0+255),w,b
 14481                           
 14482                           ; Switch size 1, requested type "space"
 14483                           ; Number of cases is 4, Range of values is 1 to 4
 14484                           ; switch strategies available:
 14485                           ; Name         Instructions Cycles
 14486                           ; simple_byte           13     7 (average)
 14487                           ;	Chosen strategy is simple_byte
 14488  0154A8  0A01               	xorlw	1	; case 1
 14489  0154AA  B4D8               	btfsc	status,2,c
 14490  0154AC  D797               	goto	l7774
 14491  0154AE  0A03               	xorlw	3	; case 2
 14492  0154B0  B4D8               	btfsc	status,2,c
 14493  0154B2  D7AD               	goto	l7776
 14494  0154B4  0A01               	xorlw	1	; case 3
 14495  0154B6  B4D8               	btfsc	status,2,c
 14496  0154B8  D7C3               	goto	l7778
 14497  0154BA  0A07               	xorlw	7	; case 4
 14498  0154BC  A4D8               	btfss	status,2,c
 14499  0154BE  0012               	return	
 14500  0154C0  D7D8               	goto	l7780
 14501  0154C2                     __end_of_LCD_goto_line:
 14502                           	opt stack 0
 14503                           tblptru	equ	0xFF8
 14504                           tblptrh	equ	0xFF7
 14505                           tblptrl	equ	0xFF6
 14506                           tablat	equ	0xFF5
 14507                           prodh	equ	0xFF4
 14508                           prodl	equ	0xFF3
 14509                           intcon	equ	0xFF2
 14510                           postinc0	equ	0xFEE
 14511                           wreg	equ	0xFE8
 14512                           indf2	equ	0xFDF
 14513                           postinc2	equ	0xFDE
 14514                           fsr2h	equ	0xFDA
 14515                           fsr2l	equ	0xFD9
 14516                           status	equ	0xFD8
 14517                           
 14518 ;; *************** function _LCD_send_command *****************
 14519 ;; Defined at:
 14520 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14521 ;; Parameters:    Size  Location     Type
 14522 ;;  D3              1    wreg     unsigned char 
 14523 ;;  D2              1   26[BANK0 ] unsigned char 
 14524 ;;  D1              1   27[BANK0 ] unsigned char 
 14525 ;;  D0              1   28[BANK0 ] unsigned char 
 14526 ;; Auto vars:     Size  Location     Type
 14527 ;;  D3              1   29[BANK0 ] unsigned char 
 14528 ;; Return value:  Size  Location     Type
 14529 ;;		None               void
 14530 ;; Registers used:
 14531 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14532 ;; Tracked objects:
 14533 ;;		On entry : 0/0
 14534 ;;		On exit  : 0/0
 14535 ;;		Unchanged: 0/0
 14536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14537 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14538 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14540 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14541 ;;Total ram usage:        4 bytes
 14542 ;; Hardware stack levels used:    1
 14543 ;; Hardware stack levels required when called:    6
 14544 ;; This function calls:
 14545 ;;		_LCD_enable_pulse
 14546 ;; This function is called by:
 14547 ;;		_LCD_shift_cursor
 14548 ;;		_LCD_goto_line
 14549 ;;		_LCD_write_char
 14550 ;;		_LCD_clear
 14551 ;;		_LCD_cursor
 14552 ;;		_LCD_initialize
 14553 ;;		_LCD_home
 14554 ;;		_LCD_shift
 14555 ;; This function uses a non-reentrant model
 14556 ;;
 14557                           
 14558                           	psect	text36
 14559  015B42                     __ptext36:
 14560                           	opt stack 0
 14561  015B42                     _LCD_send_command:
 14562                           	opt stack 22
 14563                           
 14564                           ;incstack = 0
 14565                           ;LCD_send_command@D3 stored from wreg
 14566  015B42  0100               	movlb	0	; () banked
 14567  015B44  6F7D               	movwf	LCD_send_command@D3& (0+255),b
 14568                           
 14569                           ;src\LCD_44780.c: 63: LATCbits.LATC2 = D0;
 14570  015B46  0100               	movlb	0	; () banked
 14571  015B48  B17C               	btfsc	LCD_send_command@D0& (0+255),0,b
 14572  015B4A  D002               	bra	u9575
 14573  015B4C  948B               	bcf	3979,2,c	;volatile
 14574  015B4E  D001               	bra	u9576
 14575  015B50                     u9575:
 14576  015B50  848B               	bsf	3979,2,c	;volatile
 14577  015B52                     u9576:
 14578                           
 14579                           ;src\LCD_44780.c: 64: LATCbits.LATC3 = D1;
 14580  015B52  0100               	movlb	0	; () banked
 14581  015B54  B17B               	btfsc	LCD_send_command@D1& (0+255),0,b
 14582  015B56  D002               	bra	u9585
 14583  015B58  968B               	bcf	3979,3,c	;volatile
 14584  015B5A  D001               	bra	u9586
 14585  015B5C                     u9585:
 14586  015B5C  868B               	bsf	3979,3,c	;volatile
 14587  015B5E                     u9586:
 14588                           
 14589                           ;src\LCD_44780.c: 65: LATDbits.LATD0 = D2;
 14590  015B5E  0100               	movlb	0	; () banked
 14591  015B60  B17A               	btfsc	LCD_send_command@D2& (0+255),0,b
 14592  015B62  D002               	bra	u9595
 14593  015B64  908C               	bcf	3980,0,c	;volatile
 14594  015B66  D001               	bra	u9596
 14595  015B68                     u9595:
 14596  015B68  808C               	bsf	3980,0,c	;volatile
 14597  015B6A                     u9596:
 14598                           
 14599                           ;src\LCD_44780.c: 66: LATDbits.LATD1 = D3;
 14600  015B6A  0100               	movlb	0	; () banked
 14601  015B6C  B17D               	btfsc	LCD_send_command@D3& (0+255),0,b
 14602  015B6E  D002               	bra	u9605
 14603  015B70  928C               	bcf	3980,1,c	;volatile
 14604  015B72  D001               	bra	u9606
 14605  015B74                     u9605:
 14606  015B74  828C               	bsf	3980,1,c	;volatile
 14607  015B76                     u9606:
 14608                           
 14609                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 14610  015B76  EC98  F0AE         	call	_LCD_enable_pulse	;wreg free
 14611  015B7A  0012               	return		;funcret
 14612  015B7C                     __end_of_LCD_send_command:
 14613                           	opt stack 0
 14614                           tblptru	equ	0xFF8
 14615                           tblptrh	equ	0xFF7
 14616                           tblptrl	equ	0xFF6
 14617                           tablat	equ	0xFF5
 14618                           prodh	equ	0xFF4
 14619                           prodl	equ	0xFF3
 14620                           intcon	equ	0xFF2
 14621                           postinc0	equ	0xFEE
 14622                           wreg	equ	0xFE8
 14623                           indf2	equ	0xFDF
 14624                           postinc2	equ	0xFDE
 14625                           fsr2h	equ	0xFDA
 14626                           fsr2l	equ	0xFD9
 14627                           status	equ	0xFD8
 14628                           
 14629 ;; *************** function _LCD_enable_pulse *****************
 14630 ;; Defined at:
 14631 ;;		line 49 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14632 ;; Parameters:    Size  Location     Type
 14633 ;;		None
 14634 ;; Auto vars:     Size  Location     Type
 14635 ;;		None
 14636 ;; Return value:  Size  Location     Type
 14637 ;;		None               void
 14638 ;; Registers used:
 14639 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14640 ;; Tracked objects:
 14641 ;;		On entry : 0/0
 14642 ;;		On exit  : 0/0
 14643 ;;		Unchanged: 0/0
 14644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14649 ;;Total ram usage:        0 bytes
 14650 ;; Hardware stack levels used:    1
 14651 ;; Hardware stack levels required when called:    5
 14652 ;; This function calls:
 14653 ;;		_delay_ms
 14654 ;; This function is called by:
 14655 ;;		_LCD_send_command
 14656 ;; This function uses a non-reentrant model
 14657 ;;
 14658                           
 14659                           	psect	text37
 14660  015D30                     __ptext37:
 14661                           	opt stack 0
 14662  015D30                     _LCD_enable_pulse:
 14663                           	opt stack 22
 14664                           
 14665                           ;src\LCD_44780.c: 51: LATCbits.LATC1 = 1;
 14666                           
 14667                           ;incstack = 0
 14668  015D30  828B               	bsf	3979,1,c	;volatile
 14669                           
 14670                           ;src\LCD_44780.c: 52: delay_ms (1);
 14671  015D32  0E00               	movlw	0
 14672  015D34  0100               	movlb	0	; () banked
 14673  015D36  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
 14674  015D38  0E01               	movlw	1
 14675  015D3A  6F78               	movwf	delay_ms@value_ms& (0+255),b
 14676  015D3C  ECBE  F0AD         	call	_delay_ms	;wreg free
 14677                           
 14678                           ;src\LCD_44780.c: 53: LATCbits.LATC1 = 0;
 14679  015D40  928B               	bcf	3979,1,c	;volatile
 14680                           
 14681                           ;src\LCD_44780.c: 54: delay_ms (1);
 14682  015D42  0E00               	movlw	0
 14683  015D44  0100               	movlb	0	; () banked
 14684  015D46  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
 14685  015D48  0E01               	movlw	1
 14686  015D4A  6F78               	movwf	delay_ms@value_ms& (0+255),b
 14687  015D4C  ECBE  F0AD         	call	_delay_ms	;wreg free
 14688  015D50  0012               	return		;funcret
 14689  015D52                     __end_of_LCD_enable_pulse:
 14690                           	opt stack 0
 14691                           tblptru	equ	0xFF8
 14692                           tblptrh	equ	0xFF7
 14693                           tblptrl	equ	0xFF6
 14694                           tablat	equ	0xFF5
 14695                           prodh	equ	0xFF4
 14696                           prodl	equ	0xFF3
 14697                           intcon	equ	0xFF2
 14698                           postinc0	equ	0xFEE
 14699                           wreg	equ	0xFE8
 14700                           indf2	equ	0xFDF
 14701                           postinc2	equ	0xFDE
 14702                           fsr2h	equ	0xFDA
 14703                           fsr2l	equ	0xFD9
 14704                           status	equ	0xFD8
 14705                           
 14706 ;; *************** function _delay_ms *****************
 14707 ;; Defined at:
 14708 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 14709 ;; Parameters:    Size  Location     Type
 14710 ;;  value_ms        2   24[BANK0 ] unsigned int 
 14711 ;; Auto vars:     Size  Location     Type
 14712 ;;		None
 14713 ;; Return value:  Size  Location     Type
 14714 ;;		None               void
 14715 ;; Registers used:
 14716 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14717 ;; Tracked objects:
 14718 ;;		On entry : 0/0
 14719 ;;		On exit  : 0/0
 14720 ;;		Unchanged: 0/0
 14721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14722 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14725 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14726 ;;Total ram usage:        2 bytes
 14727 ;; Hardware stack levels used:    1
 14728 ;; Hardware stack levels required when called:    4
 14729 ;; This function calls:
 14730 ;;		___wmul
 14731 ;; This function is called by:
 14732 ;;		_LCD_enable_pulse
 14733 ;;		_LCD_initialize
 14734 ;;		_main
 14735 ;;		_delay_s
 14736 ;; This function uses a non-reentrant model
 14737 ;;
 14738                           
 14739                           	psect	text38
 14740  015B7C                     __ptext38:
 14741                           	opt stack 0
 14742  015B7C                     _delay_ms:
 14743                           	opt stack 26
 14744                           
 14745                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 14746                           
 14747                           ;incstack = 0
 14748  015B7C  C0EC  F072         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 14749  015B80  0100               	movlb	0	; () banked
 14750  015B82  6B73               	clrf	(___wmul@multiplier+1)& (0+255),b
 14751  015B84  C078  F074         	movff	delay_ms@value_ms,___wmul@multiplicand
 14752  015B88  C079  F075         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 14753  015B8C  ECF7  F0AD         	call	___wmul	;wreg free
 14754  015B90  C072  F0E0         	movff	?___wmul,_clock_counter_reference	;volatile
 14755  015B94  C073  F0E1         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 14756                           
 14757                           ;src\delay.c: 75: while (clock_counter_reference) {
 14758  015B98  D007               	goto	l581
 14759  015B9A                     l7336:
 14760                           
 14761                           ;src\delay.c: 85: _delay(240);
 14762  015B9A  0E50               	movlw	80
 14763  015B9C                     u12097:
 14764  015B9C  2EE8               	decfsz	wreg,f,c
 14765  015B9E  D7FE               	goto	u12097
 14766                           
 14767                           ;src\delay.c: 88: clock_counter_reference--;
 14768  015BA0  0100               	movlb	0	; () banked
 14769  015BA2  07E0               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 14770  015BA4  A0D8               	btfss	status,0,c
 14771  015BA6  07E1               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 14772  015BA8                     l581:
 14773  015BA8  0100               	movlb	0	; () banked
 14774  015BAA  51E0               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 14775  015BAC  0100               	movlb	0	; () banked
 14776  015BAE  11E1               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 14777  015BB0  B4D8               	btfsc	status,2,c
 14778  015BB2  0012               	return	
 14779  015BB4  D7F2               	goto	l7336
 14780  015BB6                     __end_of_delay_ms:
 14781                           	opt stack 0
 14782                           tblptru	equ	0xFF8
 14783                           tblptrh	equ	0xFF7
 14784                           tblptrl	equ	0xFF6
 14785                           tablat	equ	0xFF5
 14786                           prodh	equ	0xFF4
 14787                           prodl	equ	0xFF3
 14788                           intcon	equ	0xFF2
 14789                           postinc0	equ	0xFEE
 14790                           wreg	equ	0xFE8
 14791                           indf2	equ	0xFDF
 14792                           postinc2	equ	0xFDE
 14793                           fsr2h	equ	0xFDA
 14794                           fsr2l	equ	0xFD9
 14795                           status	equ	0xFD8
 14796                           
 14797 ;; *************** function ___wmul *****************
 14798 ;; Defined at:
 14799 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 14800 ;; Parameters:    Size  Location     Type
 14801 ;;  multiplier      2   18[BANK0 ] unsigned int 
 14802 ;;  multiplicand    2   20[BANK0 ] unsigned int 
 14803 ;; Auto vars:     Size  Location     Type
 14804 ;;  product         2   22[BANK0 ] unsigned int 
 14805 ;; Return value:  Size  Location     Type
 14806 ;;                  2   18[BANK0 ] unsigned int 
 14807 ;; Registers used:
 14808 ;;		wreg, status,2, status,0, prodl, prodh
 14809 ;; Tracked objects:
 14810 ;;		On entry : 0/0
 14811 ;;		On exit  : 0/0
 14812 ;;		Unchanged: 0/0
 14813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14814 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14815 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14817 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14818 ;;Total ram usage:        6 bytes
 14819 ;; Hardware stack levels used:    1
 14820 ;; Hardware stack levels required when called:    3
 14821 ;; This function calls:
 14822 ;;		Nothing
 14823 ;; This function is called by:
 14824 ;;		_delay_ms
 14825 ;;		_sprintf
 14826 ;; This function uses a non-reentrant model
 14827 ;;
 14828                           
 14829                           	psect	text39
 14830  015BEE                     __ptext39:
 14831                           	opt stack 0
 14832  015BEE                     ___wmul:
 14833                           	opt stack 26
 14834                           
 14835                           ; BSR set to: 0
 14836                           ;incstack = 0
 14837  015BEE  0100               	movlb	0	; () banked
 14838  015BF0  5172               	movf	___wmul@multiplier& (0+255),w,b
 14839  015BF2  0100               	movlb	0	; () banked
 14840  015BF4  0374               	mulwf	___wmul@multiplicand& (0+255),b
 14841  015BF6  CFF3 F076          	movff	prodl,___wmul@product
 14842  015BFA  CFF4 F077          	movff	prodh,___wmul@product+1
 14843  015BFE  0100               	movlb	0	; () banked
 14844  015C00  5172               	movf	___wmul@multiplier& (0+255),w,b
 14845  015C02  0100               	movlb	0	; () banked
 14846  015C04  0375               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 14847  015C06  50F3               	movf	prodl,w,c
 14848  015C08  0100               	movlb	0	; () banked
 14849  015C0A  2777               	addwf	(___wmul@product+1)& (0+255),f,b
 14850  015C0C  0100               	movlb	0	; () banked
 14851  015C0E  5173               	movf	(___wmul@multiplier+1)& (0+255),w,b
 14852  015C10  0100               	movlb	0	; () banked
 14853  015C12  0374               	mulwf	___wmul@multiplicand& (0+255),b
 14854  015C14  50F3               	movf	prodl,w,c
 14855  015C16  0100               	movlb	0	; () banked
 14856  015C18  2777               	addwf	(___wmul@product+1)& (0+255),f,b
 14857                           
 14858                           ; BSR set to: 0
 14859  015C1A  C076  F072         	movff	___wmul@product,?___wmul
 14860  015C1E  C077  F073         	movff	___wmul@product+1,?___wmul+1
 14861  015C22  0012               	return	
 14862  015C24                     __end_of___wmul:
 14863                           	opt stack 0
 14864                           tblptru	equ	0xFF8
 14865                           tblptrh	equ	0xFF7
 14866                           tblptrl	equ	0xFF6
 14867                           tablat	equ	0xFF5
 14868                           prodh	equ	0xFF4
 14869                           prodl	equ	0xFF3
 14870                           intcon	equ	0xFF2
 14871                           postinc0	equ	0xFEE
 14872                           wreg	equ	0xFE8
 14873                           indf2	equ	0xFDF
 14874                           postinc2	equ	0xFDE
 14875                           fsr2h	equ	0xFDA
 14876                           fsr2l	equ	0xFD9
 14877                           status	equ	0xFD8
 14878                           
 14879 ;; *************** function _Joystick_Polling *****************
 14880 ;; Defined at:
 14881 ;;		line 417 in file "RemoteCan.c"
 14882 ;; Parameters:    Size  Location     Type
 14883 ;;		None
 14884 ;; Auto vars:     Size  Location     Type
 14885 ;;  i               1   19[BANK0 ] unsigned char 
 14886 ;; Return value:  Size  Location     Type
 14887 ;;		None               void
 14888 ;; Registers used:
 14889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14890 ;; Tracked objects:
 14891 ;;		On entry : 0/0
 14892 ;;		On exit  : 0/0
 14893 ;;		Unchanged: 0/0
 14894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14896 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14897 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14898 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14899 ;;Total ram usage:        2 bytes
 14900 ;; Hardware stack levels used:    1
 14901 ;; Hardware stack levels required when called:    3
 14902 ;; This function calls:
 14903 ;;		Nothing
 14904 ;; This function is called by:
 14905 ;;		_main
 14906 ;; This function uses a non-reentrant model
 14907 ;;
 14908                           
 14909                           	psect	text40
 14910  015A16                     __ptext40:
 14911                           	opt stack 0
 14912  015A16                     _Joystick_Polling:
 14913                           	opt stack 27
 14914                           
 14915                           ;RemoteCan.c: 418: for (unsigned char i = 0; i < 2; i++) {
 14916                           
 14917                           ; BSR set to: 0
 14918                           ;incstack = 0
 14919  015A16  0E00               	movlw	0
 14920  015A18  0100               	movlb	0	; () banked
 14921  015A1A  6F73               	movwf	Joystick_Polling@i& (0+255),b
 14922  015A1C                     l6702:
 14923                           
 14924                           ; BSR set to: 0
 14925  015A1C  0E01               	movlw	1
 14926  015A1E  0100               	movlb	0	; () banked
 14927  015A20  6573               	cpfsgt	Joystick_Polling@i& (0+255),b
 14928  015A22  D001               	goto	l868
 14929  015A24  0012               	return	
 14930  015A26                     l868:
 14931                           
 14932                           ; BSR set to: 0
 14933                           ;RemoteCan.c: 419: ADCON0bits.GO = 1;
 14934  015A26  82C2               	bsf	4034,1,c	;volatile
 14935  015A28                     l870:
 14936  015A28  B2C2               	btfsc	4034,1,c	;volatile
 14937  015A2A  D7FE               	goto	l870
 14938                           
 14939                           ;RemoteCan.c: 421: JoystickValues[i] = ADRESH;
 14940  015A2C  0100               	movlb	0	; () banked
 14941  015A2E  5173               	movf	Joystick_Polling@i& (0+255),w,b
 14942  015A30  0D01               	mullw	1
 14943  015A32  0EDC               	movlw	low _JoystickValues
 14944  015A34  24F3               	addwf	prodl,w,c
 14945  015A36  6ED9               	movwf	fsr2l,c
 14946  015A38  0E00               	movlw	high _JoystickValues
 14947  015A3A  20F4               	addwfc	prodh,w,c
 14948  015A3C  6EDA               	movwf	fsr2h,c
 14949  015A3E  CFC4 FFDF          	movff	4036,indf2	;volatile
 14950                           
 14951                           ; BSR set to: 0
 14952                           ;RemoteCan.c: 422: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 14953  015A42  A4C2               	btfss	4034,2,c	;volatile
 14954  015A44  D002               	goto	u8550
 14955  015A46  0E01               	movlw	1
 14956  015A48  D001               	goto	u8556
 14957  015A4A                     u8550:
 14958  015A4A  0E00               	movlw	0
 14959  015A4C                     u8556:
 14960  015A4C  0AFF               	xorlw	255
 14961  015A4E  0100               	movlb	0	; () banked
 14962  015A50  6F72               	movwf	??_Joystick_Polling& (0+255),b
 14963  015A52  0100               	movlb	0	; () banked
 14964  015A54  4772               	rlncf	??_Joystick_Polling& (0+255),f,b
 14965  015A56  4772               	rlncf	??_Joystick_Polling& (0+255),f,b
 14966  015A58  50C2               	movf	4034,w,c	;volatile
 14967  015A5A  0100               	movlb	0	; () banked
 14968  015A5C  1972               	xorwf	??_Joystick_Polling& (0+255),w,b
 14969  015A5E  0BFB               	andlw	-5
 14970  015A60  1972               	xorwf	??_Joystick_Polling& (0+255),w,b
 14971  015A62  6EC2               	movwf	4034,c	;volatile
 14972                           
 14973                           ; BSR set to: 0
 14974  015A64  0100               	movlb	0	; () banked
 14975  015A66  2B73               	incf	Joystick_Polling@i& (0+255),f,b
 14976  015A68  D7D9               	goto	l6702
 14977  015A6A                     __end_of_Joystick_Polling:
 14978                           	opt stack 0
 14979                           tblptru	equ	0xFF8
 14980                           tblptrh	equ	0xFF7
 14981                           tblptrl	equ	0xFF6
 14982                           tablat	equ	0xFF5
 14983                           prodh	equ	0xFF4
 14984                           prodl	equ	0xFF3
 14985                           intcon	equ	0xFF2
 14986                           postinc0	equ	0xFEE
 14987                           wreg	equ	0xFE8
 14988                           indf2	equ	0xFDF
 14989                           postinc2	equ	0xFDE
 14990                           fsr2h	equ	0xFDA
 14991                           fsr2l	equ	0xFD9
 14992                           status	equ	0xFD8
 14993                           
 14994 ;; *************** function _F2_Button_Polling *****************
 14995 ;; Defined at:
 14996 ;;		line 407 in file "RemoteCan.c"
 14997 ;; Parameters:    Size  Location     Type
 14998 ;;		None
 14999 ;; Auto vars:     Size  Location     Type
 15000 ;;		None
 15001 ;; Return value:  Size  Location     Type
 15002 ;;		None               void
 15003 ;; Registers used:
 15004 ;;		None
 15005 ;; Tracked objects:
 15006 ;;		On entry : 0/0
 15007 ;;		On exit  : 0/0
 15008 ;;		Unchanged: 0/0
 15009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15014 ;;Total ram usage:        0 bytes
 15015 ;; Hardware stack levels used:    1
 15016 ;; Hardware stack levels required when called:    3
 15017 ;; This function calls:
 15018 ;;		Nothing
 15019 ;; This function is called by:
 15020 ;;		_main
 15021 ;; This function uses a non-reentrant model
 15022 ;;
 15023                           
 15024                           	psect	text41
 15025  015DA8                     __ptext41:
 15026                           	opt stack 0
 15027  015DA8                     _F2_Button_Polling:
 15028                           	opt stack 27
 15029                           
 15030                           ;RemoteCan.c: 408: if ((PORTBbits.RB1 == 0) || (wait_low_3 == 0)) {
 15031                           
 15032                           ; BSR set to: 0
 15033                           ;incstack = 0
 15034  015DA8  A281               	btfss	3969,1,c	;volatile
 15035  015DAA  D002               	goto	l863
 15036  015DAC  B64C               	btfsc	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 15037  015DAE  0012               	return	
 15038  015DB0                     l863:
 15039                           
 15040                           ;RemoteCan.c: 409: wait_low_3 = 0;
 15041  015DB0  964C               	bcf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 15042                           
 15043                           ;RemoteCan.c: 410: if (PORTBbits.RB1 == 1) {
 15044  015DB2  A281               	btfss	3969,1,c	;volatile
 15045  015DB4  0012               	return	
 15046                           
 15047                           ;RemoteCan.c: 411: F2_switch = ~F2_switch;
 15048  015DB6  B44B               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 15049  015DB8  D002               	goto	u8480
 15050  015DBA  844B               	bsf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 15051  015DBC  D001               	goto	u8495
 15052  015DBE                     u8480:
 15053  015DBE  944B               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 15054  015DC0                     u8495:
 15055                           
 15056                           ;RemoteCan.c: 412: wait_low_3 = 1;
 15057  015DC0  864C               	bsf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 15058  015DC2  0012               	return	
 15059  015DC4                     __end_of_F2_Button_Polling:
 15060                           	opt stack 0
 15061                           tblptru	equ	0xFF8
 15062                           tblptrh	equ	0xFF7
 15063                           tblptrl	equ	0xFF6
 15064                           tablat	equ	0xFF5
 15065                           prodh	equ	0xFF4
 15066                           prodl	equ	0xFF3
 15067                           intcon	equ	0xFF2
 15068                           postinc0	equ	0xFEE
 15069                           wreg	equ	0xFE8
 15070                           indf2	equ	0xFDF
 15071                           postinc2	equ	0xFDE
 15072                           fsr2h	equ	0xFDA
 15073                           fsr2l	equ	0xFD9
 15074                           status	equ	0xFD8
 15075                           
 15076 ;; *************** function _F1_Button_Polling *****************
 15077 ;; Defined at:
 15078 ;;		line 397 in file "RemoteCan.c"
 15079 ;; Parameters:    Size  Location     Type
 15080 ;;		None
 15081 ;; Auto vars:     Size  Location     Type
 15082 ;;		None
 15083 ;; Return value:  Size  Location     Type
 15084 ;;		None               void
 15085 ;; Registers used:
 15086 ;;		None
 15087 ;; Tracked objects:
 15088 ;;		On entry : 0/0
 15089 ;;		On exit  : 0/0
 15090 ;;		Unchanged: 0/0
 15091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15096 ;;Total ram usage:        0 bytes
 15097 ;; Hardware stack levels used:    1
 15098 ;; Hardware stack levels required when called:    3
 15099 ;; This function calls:
 15100 ;;		Nothing
 15101 ;; This function is called by:
 15102 ;;		_main
 15103 ;; This function uses a non-reentrant model
 15104 ;;
 15105                           
 15106                           	psect	text42
 15107  015DC4                     __ptext42:
 15108                           	opt stack 0
 15109  015DC4                     _F1_Button_Polling:
 15110                           	opt stack 27
 15111                           
 15112                           ;RemoteCan.c: 398: if ((PORTBbits.RB4 == 0) || (wait_low_2 == 0)) {
 15113                           
 15114                           ;incstack = 0
 15115  015DC4  A881               	btfss	3969,4,c	;volatile
 15116  015DC6  D002               	goto	l856
 15117  015DC8  B44C               	btfsc	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 15118  015DCA  0012               	return	
 15119  015DCC                     l856:
 15120                           
 15121                           ;RemoteCan.c: 399: wait_low_2 = 0;
 15122  015DCC  944C               	bcf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 15123                           
 15124                           ;RemoteCan.c: 400: if (PORTBbits.RB4 == 1) {
 15125  015DCE  A881               	btfss	3969,4,c	;volatile
 15126  015DD0  0012               	return	
 15127                           
 15128                           ;RemoteCan.c: 401: F1_switch = ~F1_switch;
 15129  015DD2  B24B               	btfsc	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 15130  015DD4  D002               	goto	u8430
 15131  015DD6  824B               	bsf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 15132  015DD8  D001               	goto	u8445
 15133  015DDA                     u8430:
 15134  015DDA  924B               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 15135  015DDC                     u8445:
 15136                           
 15137                           ;RemoteCan.c: 402: wait_low_2 = 1;
 15138  015DDC  844C               	bsf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 15139  015DDE  0012               	return	
 15140  015DE0                     __end_of_F1_Button_Polling:
 15141                           	opt stack 0
 15142                           tblptru	equ	0xFF8
 15143                           tblptrh	equ	0xFF7
 15144                           tblptrl	equ	0xFF6
 15145                           tablat	equ	0xFF5
 15146                           prodh	equ	0xFF4
 15147                           prodl	equ	0xFF3
 15148                           intcon	equ	0xFF2
 15149                           postinc0	equ	0xFEE
 15150                           wreg	equ	0xFE8
 15151                           indf2	equ	0xFDF
 15152                           postinc2	equ	0xFDE
 15153                           fsr2h	equ	0xFDA
 15154                           fsr2l	equ	0xFD9
 15155                           status	equ	0xFD8
 15156                           
 15157 ;; *************** function _CAN_interpreter *****************
 15158 ;; Defined at:
 15159 ;;		line 353 in file "RemoteCan.c"
 15160 ;; Parameters:    Size  Location     Type
 15161 ;;		None
 15162 ;; Auto vars:     Size  Location     Type
 15163 ;;		None
 15164 ;; Return value:  Size  Location     Type
 15165 ;;		None               void
 15166 ;; Registers used:
 15167 ;;		wreg, status,2, status,0
 15168 ;; Tracked objects:
 15169 ;;		On entry : 0/0
 15170 ;;		On exit  : 0/0
 15171 ;;		Unchanged: 0/0
 15172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15175 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15176 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15177 ;;Total ram usage:        4 bytes
 15178 ;; Hardware stack levels used:    1
 15179 ;; Hardware stack levels required when called:    3
 15180 ;; This function calls:
 15181 ;;		Nothing
 15182 ;; This function is called by:
 15183 ;;		_main
 15184 ;; This function uses a non-reentrant model
 15185 ;;
 15186                           
 15187                           	psect	text43
 15188  0156F6                     __ptext43:
 15189                           	opt stack 0
 15190  0156F6                     _CAN_interpreter:
 15191                           	opt stack 27
 15192                           
 15193                           ;RemoteCan.c: 354: if (id == 0b00000000010) {
 15194                           
 15195                           ;incstack = 0
 15196  0156F6  0E02               	movlw	2
 15197  0156F8  1812               	xorwf	_id,w,c	;volatile
 15198  0156FA  1013               	iorwf	_id+1,w,c	;volatile
 15199  0156FC  1014               	iorwf	_id+2,w,c	;volatile
 15200  0156FE  1015               	iorwf	_id+3,w,c	;volatile
 15201  015700  A4D8               	btfss	status,2,c
 15202  015702  D015               	goto	l6730
 15203                           
 15204                           ;RemoteCan.c: 355: if (RTR_Flag == 1) {
 15205  015704  A84B               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 15206  015706  D00C               	goto	l6720
 15207                           
 15208                           ;RemoteCan.c: 356: pr_time_4 = time_counter;
 15209  015708  C022  F01A         	movff	_time_counter,_pr_time_4	;volatile
 15210  01570C  C023  F01B         	movff	_time_counter+1,_pr_time_4+1	;volatile
 15211  015710  C024  F01C         	movff	_time_counter+2,_pr_time_4+2	;volatile
 15212  015714  C025  F01D         	movff	_time_counter+3,_pr_time_4+3	;volatile
 15213                           
 15214                           ;RemoteCan.c: 357: MotoreFlag = 1;
 15215  015718  864B               	bsf	_MotoreFlag/(0+8),_MotoreFlag& (0+7),c	;volatile
 15216                           
 15217                           ;RemoteCan.c: 358: AbsFlag = 0;
 15218  01571A  904B               	bcf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 15219                           
 15220                           ;RemoteCan.c: 359: SterzoFlag = 0;
 15221  01571C  9A4B               	bcf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 15222                           
 15223                           ;RemoteCan.c: 360: } else {
 15224  01571E  D007               	goto	l6730
 15225  015720                     l6720:
 15226                           
 15227                           ;RemoteCan.c: 361: if (data[0] == 0x01) {
 15228  015720  042C               	decf	_data,w,c
 15229  015722  B4D8               	btfsc	status,2,c
 15230                           
 15231                           ;RemoteCan.c: 362: AbsFlag = 1;
 15232  015724  804B               	bsf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 15233                           
 15234                           ;RemoteCan.c: 363: }
 15235                           ;RemoteCan.c: 364: if (data[0] == 0x02) {
 15236  015726  0E02               	movlw	2
 15237  015728  182C               	xorwf	_data,w,c
 15238  01572A  B4D8               	btfsc	status,2,c
 15239                           
 15240                           ;RemoteCan.c: 365: SterzoFlag = 1;
 15241  01572C  8A4B               	bsf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 15242  01572E                     l6730:
 15243                           
 15244                           ;RemoteCan.c: 372: }
 15245                           ;RemoteCan.c: 374: if ((id == 0b00000000110)&&(RTR_Flag == 0)) {
 15246  01572E  0E06               	movlw	6
 15247  015730  1812               	xorwf	_id,w,c	;volatile
 15248  015732  1013               	iorwf	_id+1,w,c	;volatile
 15249  015734  1014               	iorwf	_id+2,w,c	;volatile
 15250  015736  1015               	iorwf	_id+3,w,c	;volatile
 15251  015738  B4D8               	btfsc	status,2,c
 15252  01573A  B84B               	btfsc	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 15253  01573C  D027               	goto	l6742
 15254                           
 15255                           ;RemoteCan.c: 375: left_speed = data_speed_rx[1];
 15256  01573E  C002  F026         	movff	_data_speed_rx+1,_left_speed
 15257  015742  6A27               	clrf	_left_speed+1,c
 15258                           
 15259                           ;RemoteCan.c: 376: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 15260  015744  5026               	movf	_left_speed,w,c
 15261  015746  0100               	movlb	0	; () banked
 15262  015748  6F72               	movwf	??_CAN_interpreter& (0+255),b
 15263  01574A  5001               	movf	_data_speed_rx,w,c
 15264  01574C  6E26               	movwf	_left_speed,c
 15265  01574E  C072  F027         	movff	??_CAN_interpreter,_left_speed+1
 15266                           
 15267                           ; BSR set to: 0
 15268                           ;RemoteCan.c: 377: right_speed = data_speed_rx[3];
 15269  015752  C004  F028         	movff	_data_speed_rx+3,_right_speed
 15270  015756  6A29               	clrf	_right_speed+1,c
 15271                           
 15272                           ;RemoteCan.c: 378: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 15273  015758  5028               	movf	_right_speed,w,c
 15274  01575A  0100               	movlb	0	; () banked
 15275  01575C  6F72               	movwf	??_CAN_interpreter& (0+255),b
 15276  01575E  5003               	movf	_data_speed_rx+2,w,c
 15277  015760  6E28               	movwf	_right_speed,c
 15278  015762  C072  F029         	movff	??_CAN_interpreter,_right_speed+1
 15279                           
 15280                           ; BSR set to: 0
 15281                           ;RemoteCan.c: 379: actual_speed = (right_speed + left_speed) / 2;
 15282  015766  5026               	movf	_left_speed,w,c
 15283  015768  2428               	addwf	_right_speed,w,c
 15284  01576A  0100               	movlb	0	; () banked
 15285  01576C  6F72               	movwf	??_CAN_interpreter& (0+255),b
 15286  01576E  5027               	movf	_left_speed+1,w,c
 15287  015770  2029               	addwfc	_right_speed+1,w,c
 15288  015772  0100               	movlb	0	; () banked
 15289  015774  6F73               	movwf	(??_CAN_interpreter+1)& (0+255),b
 15290  015776  90D8               	bcf	status,0,c
 15291  015778  0100               	movlb	0	; () banked
 15292  01577A  3173               	rrcf	(??_CAN_interpreter+1)& (0+255),w,b
 15293  01577C  0100               	movlb	0	; () banked
 15294  01577E  6F74               	movwf	(??_CAN_interpreter+2)& (0+255),b
 15295  015780  0100               	movlb	0	; () banked
 15296  015782  3172               	rrcf	??_CAN_interpreter& (0+255),w,b
 15297  015784  0100               	movlb	0	; () banked
 15298  015786  6FDE               	movwf	_actual_speed& (0+255),b
 15299  015788  C074  F0DF         	movff	??_CAN_interpreter+2,_actual_speed+1
 15300  01578C                     l6742:
 15301                           
 15302                           ;RemoteCan.c: 380: }
 15303                           ;RemoteCan.c: 382: if (id == 0b00000001001) {
 15304  01578C  0E09               	movlw	9
 15305  01578E  1812               	xorwf	_id,w,c	;volatile
 15306  015790  1013               	iorwf	_id+1,w,c	;volatile
 15307  015792  1014               	iorwf	_id+2,w,c	;volatile
 15308  015794  1015               	iorwf	_id+3,w,c	;volatile
 15309  015796  A4D8               	btfss	status,2,c
 15310  015798  0012               	return	
 15311                           
 15312                           ;RemoteCan.c: 383: battery = data[0];
 15313  01579A  C02C  F02A         	movff	_data,_battery	;volatile
 15314  01579E  0012               	return	
 15315  0157A0                     __end_of_CAN_interpreter:
 15316                           	opt stack 0
 15317                           tblptru	equ	0xFF8
 15318                           tblptrh	equ	0xFF7
 15319                           tblptrl	equ	0xFF6
 15320                           tablat	equ	0xFF5
 15321                           prodh	equ	0xFF4
 15322                           prodl	equ	0xFF3
 15323                           intcon	equ	0xFF2
 15324                           postinc0	equ	0xFEE
 15325                           wreg	equ	0xFE8
 15326                           indf2	equ	0xFDF
 15327                           postinc2	equ	0xFDE
 15328                           fsr2h	equ	0xFDA
 15329                           fsr2l	equ	0xFD9
 15330                           status	equ	0xFD8
 15331                           
 15332 ;; *************** function _CAN_Send *****************
 15333 ;; Defined at:
 15334 ;;		line 288 in file "RemoteCan.c"
 15335 ;; Parameters:    Size  Location     Type
 15336 ;;		None
 15337 ;; Auto vars:     Size  Location     Type
 15338 ;;		None
 15339 ;; Return value:  Size  Location     Type
 15340 ;;		None               void
 15341 ;; Registers used:
 15342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15343 ;; Tracked objects:
 15344 ;;		On entry : 0/0
 15345 ;;		On exit  : 0/0
 15346 ;;		Unchanged: 0/0
 15347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15352 ;;Total ram usage:        0 bytes
 15353 ;; Hardware stack levels used:    1
 15354 ;; Hardware stack levels required when called:    4
 15355 ;; This function calls:
 15356 ;;		_CANisTxReady
 15357 ;;		_CANsendMessage
 15358 ;; This function is called by:
 15359 ;;		_main
 15360 ;; This function uses a non-reentrant model
 15361 ;;
 15362                           
 15363                           	psect	text44
 15364  01563C                     __ptext44:
 15365                           	opt stack 0
 15366  01563C                     _CAN_Send:
 15367                           	opt stack 26
 15368  01563C                     l6682:
 15369  01563C  EC86  F0AE         	call	_CANisTxReady	;wreg free
 15370  015640  06E8               	decf	wreg,f,c
 15371  015642  A4D8               	btfss	status,2,c
 15372  015644  D7FB               	goto	l6682
 15373                           
 15374                           ;RemoteCan.c: 290: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 15375  015646  0E05               	movlw	5
 15376  015648  0100               	movlb	0	; () banked
 15377  01564A  6F72               	movwf	CANsendMessage@identifier& (0+255),b
 15378  01564C  0E00               	movlw	0
 15379  01564E  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 15380  015650  0E00               	movlw	0
 15381  015652  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 15382  015654  0E00               	movlw	0
 15383  015656  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 15384  015658  0EEB               	movlw	low _data_steering
 15385  01565A  0100               	movlb	0	; () banked
 15386  01565C  6F76               	movwf	CANsendMessage@data& (0+255),b
 15387  01565E  0E00               	movlw	high _data_steering
 15388  015660  0100               	movlb	0	; () banked
 15389  015662  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
 15390  015664  0E08               	movlw	8
 15391  015666  0100               	movlb	0	; () banked
 15392  015668  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
 15393  01566A  0EBC               	movlw	188
 15394  01566C  0100               	movlb	0	; () banked
 15395  01566E  6F79               	movwf	CANsendMessage@flags& (0+255),b
 15396  015670  ECCD  F089         	call	_CANsendMessage	;wreg free
 15397                           
 15398                           ;RemoteCan.c: 291: data_speed[0] = set_speed;
 15399  015674  C0E2  F0EA         	movff	_set_speed,_data_speed	;volatile
 15400                           
 15401                           ;RemoteCan.c: 292: data_speed[1] = (set_speed >> 8);
 15402  015678  0100               	movlb	0	; () banked
 15403  01567A  51E3               	movf	(_set_speed+1)& (0+255),w,b	;volatile
 15404  01567C  0100               	movlb	0	; () banked
 15405  01567E  6FEB               	movwf	(_data_speed+1)& (0+255),b
 15406                           
 15407                           ; BSR set to: 0
 15408                           ;RemoteCan.c: 293: data_speed[2] = dir;
 15409  015680  C0E4  F0EC         	movff	_dir,_data_speed+2	;volatile
 15410  015684                     l6692:
 15411  015684  EC86  F0AE         	call	_CANisTxReady	;wreg free
 15412  015688  06E8               	decf	wreg,f,c
 15413  01568A  A4D8               	btfss	status,2,c
 15414  01568C  D7FB               	goto	l6692
 15415                           
 15416                           ;RemoteCan.c: 295: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 15417  01568E  0E03               	movlw	3
 15418  015690  0100               	movlb	0	; () banked
 15419  015692  6F72               	movwf	CANsendMessage@identifier& (0+255),b
 15420  015694  0E00               	movlw	0
 15421  015696  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 15422  015698  0E00               	movlw	0
 15423  01569A  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 15424  01569C  0E00               	movlw	0
 15425  01569E  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 15426  0156A0  0EEA               	movlw	low _data_speed
 15427  0156A2  0100               	movlb	0	; () banked
 15428  0156A4  6F76               	movwf	CANsendMessage@data& (0+255),b
 15429  0156A6  0E00               	movlw	high _data_speed
 15430  0156A8  0100               	movlb	0	; () banked
 15431  0156AA  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
 15432  0156AC  0E08               	movlw	8
 15433  0156AE  0100               	movlb	0	; () banked
 15434  0156B0  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
 15435  0156B2  0EBC               	movlw	188
 15436  0156B4  0100               	movlb	0	; () banked
 15437  0156B6  6F79               	movwf	CANsendMessage@flags& (0+255),b
 15438  0156B8  ECCD  F089         	call	_CANsendMessage	;wreg free
 15439  0156BC                     l6696:
 15440  0156BC  EC86  F0AE         	call	_CANisTxReady	;wreg free
 15441  0156C0  06E8               	decf	wreg,f,c
 15442  0156C2  A4D8               	btfss	status,2,c
 15443  0156C4  D7FB               	goto	l6696
 15444                           
 15445                           ;RemoteCan.c: 297: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_1);
 15446  0156C6  0E04               	movlw	4
 15447  0156C8  0100               	movlb	0	; () banked
 15448  0156CA  6F72               	movwf	CANsendMessage@identifier& (0+255),b
 15449  0156CC  0E00               	movlw	0
 15450  0156CE  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 15451  0156D0  0E00               	movlw	0
 15452  0156D2  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 15453  0156D4  0E00               	movlw	0
 15454  0156D6  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 15455  0156D8  0EE9               	movlw	low _data_brake
 15456  0156DA  0100               	movlb	0	; () banked
 15457  0156DC  6F76               	movwf	CANsendMessage@data& (0+255),b
 15458  0156DE  0E00               	movlw	high _data_brake
 15459  0156E0  0100               	movlb	0	; () banked
 15460  0156E2  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
 15461  0156E4  0E08               	movlw	8
 15462  0156E6  0100               	movlb	0	; () banked
 15463  0156E8  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
 15464  0156EA  0EBD               	movlw	189
 15465  0156EC  0100               	movlb	0	; () banked
 15466  0156EE  6F79               	movwf	CANsendMessage@flags& (0+255),b
 15467  0156F0  ECCD  F089         	call	_CANsendMessage	;wreg free
 15468  0156F4  0012               	return		;funcret
 15469  0156F6                     __end_of_CAN_Send:
 15470                           	opt stack 0
 15471                           tblptru	equ	0xFF8
 15472                           tblptrh	equ	0xFF7
 15473                           tblptrl	equ	0xFF6
 15474                           tablat	equ	0xFF5
 15475                           prodh	equ	0xFF4
 15476                           prodl	equ	0xFF3
 15477                           intcon	equ	0xFF2
 15478                           postinc0	equ	0xFEE
 15479                           wreg	equ	0xFE8
 15480                           indf2	equ	0xFDF
 15481                           postinc2	equ	0xFDE
 15482                           fsr2h	equ	0xFDA
 15483                           fsr2l	equ	0xFD9
 15484                           status	equ	0xFD8
 15485                           
 15486 ;; *************** function _CANsendMessage *****************
 15487 ;; Defined at:
 15488 ;;		line 294 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 15489 ;; Parameters:    Size  Location     Type
 15490 ;;  identifier      4   18[BANK0 ] unsigned long 
 15491 ;;  data            2   22[BANK0 ] PTR unsigned char 
 15492 ;;		 -> data_speed(1), park_assist_state(8), data_brake(1), data_steering(1), 
 15493 ;;		 -> data(1), 
 15494 ;;  dataLength      1   24[BANK0 ] unsigned char 
 15495 ;;  flags           1   25[BANK0 ] enum E16909
 15496 ;; Auto vars:     Size  Location     Type
 15497 ;;  tamp            4   30[BANK0 ] unsigned long 
 15498 ;; Return value:  Size  Location     Type
 15499 ;;		None               void
 15500 ;; Registers used:
 15501 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15502 ;; Tracked objects:
 15503 ;;		On entry : 0/0
 15504 ;;		On exit  : 0/0
 15505 ;;		Unchanged: 0/0
 15506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15507 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15508 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15509 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15510 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15511 ;;Total ram usage:       16 bytes
 15512 ;; Hardware stack levels used:    1
 15513 ;; Hardware stack levels required when called:    3
 15514 ;; This function calls:
 15515 ;;		Nothing
 15516 ;; This function is called by:
 15517 ;;		_main
 15518 ;;		_CAN_Send
 15519 ;;		_LCD_Handler
 15520 ;; This function uses a non-reentrant model
 15521 ;;
 15522                           
 15523                           	psect	text45
 15524  01139A                     __ptext45:
 15525                           	opt stack 0
 15526  01139A                     _CANsendMessage:
 15527                           	opt stack 26
 15528                           
 15529                           ;inc\CANlib.h: 296: unsigned long tamp;
 15530                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 15531                           
 15532                           ;incstack = 0
 15533  01139A  010F               	movlb	15	; () banked
 15534  01139C  B740               	btfsc	64,3,b	;volatile
 15535  01139E  D13F               	goto	l375
 15536                           
 15537                           ; BSR set to: 15
 15538                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 15539  0113A0  C078  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
 15540                           
 15541                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 15542  0113A4  0100               	movlb	0	; () banked
 15543  0113A6  AD79               	btfss	CANsendMessage@flags& (0+255),6,b
 15544  0113A8  D003               	goto	l376
 15545                           
 15546                           ; BSR set to: 0
 15547                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 15548  0113AA  010F               	movlb	15	; () banked
 15549  0113AC  8D45               	bsf	69,6,b	;volatile
 15550  0113AE  D002               	goto	l377
 15551  0113B0                     l376:
 15552                           
 15553                           ; BSR set to: 0
 15554                           ;inc\CANlib.h: 302: else
 15555                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 15556  0113B0  010F               	movlb	15	; () banked
 15557  0113B2  9D45               	bcf	69,6,b	;volatile
 15558  0113B4                     l377:
 15559                           
 15560                           ; BSR set to: 15
 15561                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 15562  0113B4  0100               	movlb	0	; () banked
 15563  0113B6  A779               	btfss	CANsendMessage@flags& (0+255),3,b
 15564  0113B8  D079               	goto	l378
 15565                           
 15566                           ; BSR set to: 0
 15567                           ;inc\CANlib.h: 306: {
 15568                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 15569  0113BA  0100               	movlb	0	; () banked
 15570  0113BC  5172               	movf	CANsendMessage@identifier& (0+255),w,b
 15571  0113BE  0100               	movlb	0	; () banked
 15572  0113C0  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 15573  0113C2  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15574  0113C4  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15575  0113C6  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15576                           
 15577                           ; BSR set to: 0
 15578                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 15579  0113C8  C07E  FF44         	movff	CANsendMessage@tamp,3908	;volatile
 15580                           
 15581                           ; BSR set to: 0
 15582                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 15583  0113CC  0E00               	movlw	0
 15584  0113CE  0100               	movlb	0	; () banked
 15585  0113D0  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 15586  0113D2  0100               	movlb	0	; () banked
 15587  0113D4  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 15588  0113D6  0EFF               	movlw	255
 15589  0113D8  0100               	movlb	0	; () banked
 15590  0113DA  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 15591  0113DC  0100               	movlb	0	; () banked
 15592  0113DE  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 15593  0113E0  0E00               	movlw	0
 15594  0113E2  0100               	movlb	0	; () banked
 15595  0113E4  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 15596  0113E6  0100               	movlb	0	; () banked
 15597  0113E8  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 15598  0113EA  0E00               	movlw	0
 15599  0113EC  0100               	movlb	0	; () banked
 15600  0113EE  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 15601  0113F0  0100               	movlb	0	; () banked
 15602  0113F2  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 15603                           
 15604                           ; BSR set to: 0
 15605                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 15606  0113F4  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 15607  0113F8  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 15608  0113FC  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 15609  011400  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 15610  011404  C07B  F07A         	movff	??_CANsendMessage+1,??_CANsendMessage
 15611  011408  C07C  F07B         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 15612  01140C  C07D  F07C         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 15613  011410  0100               	movlb	0	; () banked
 15614  011412  6B7D               	clrf	(??_CANsendMessage+3)& (0+255),b
 15615  011414  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 15616  011418  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15617  01141C  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15618  011420  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15619                           
 15620                           ; BSR set to: 0
 15621                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 15622  011424  C07E  FF43         	movff	CANsendMessage@tamp,3907	;volatile
 15623                           
 15624                           ; BSR set to: 0
 15625                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 15626  011428  0E00               	movlw	0
 15627  01142A  010F               	movlb	15	; () banked
 15628  01142C  6F42               	movwf	66,b	;volatile
 15629                           
 15630                           ; BSR set to: 15
 15631                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 15632  01142E  010F               	movlb	15	; () banked
 15633  011430  8742               	bsf	66,3,b	;volatile
 15634                           
 15635                           ; BSR set to: 15
 15636                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 15637  011432  0100               	movlb	0	; () banked
 15638  011434  A174               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 15639  011436  D002               	goto	l379
 15640                           
 15641                           ; BSR set to: 0
 15642                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 15643  011438  010F               	movlb	15	; () banked
 15644  01143A  8142               	bsf	66,0,b	;volatile
 15645  01143C                     l379:
 15646                           
 15647                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 15648  01143C  0100               	movlb	0	; () banked
 15649  01143E  A374               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 15650  011440  D002               	goto	l380
 15651                           
 15652                           ; BSR set to: 0
 15653                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 15654  011442  010F               	movlb	15	; () banked
 15655  011444  8342               	bsf	66,1,b	;volatile
 15656  011446                     l380:
 15657                           
 15658                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 15659  011446  0100               	movlb	0	; () banked
 15660  011448  A574               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 15661  01144A  D002               	goto	l381
 15662                           
 15663                           ; BSR set to: 0
 15664                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 15665  01144C  010F               	movlb	15	; () banked
 15666  01144E  8B42               	bsf	66,5,b	;volatile
 15667  011450                     l381:
 15668                           
 15669                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 15670  011450  0100               	movlb	0	; () banked
 15671  011452  A774               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 15672  011454  D002               	goto	l382
 15673                           
 15674                           ; BSR set to: 0
 15675                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 15676  011456  010F               	movlb	15	; () banked
 15677  011458  8D42               	bsf	66,6,b	;volatile
 15678  01145A                     l382:
 15679                           
 15680                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 15681  01145A  0100               	movlb	0	; () banked
 15682  01145C  A974               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 15683  01145E  D002               	goto	l5834
 15684                           
 15685                           ; BSR set to: 0
 15686                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 15687  011460  010F               	movlb	15	; () banked
 15688  011462  8F42               	bsf	66,7,b	;volatile
 15689  011464                     l5834:
 15690                           
 15691                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 15692  011464  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 15693  011468  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 15694  01146C  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 15695  011470  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 15696  011474  0E16               	movlw	22
 15697  011476  D006               	goto	u7180
 15698  011478                     u7185:
 15699  011478  0100               	movlb	0	; () banked
 15700  01147A  90D8               	bcf	status,0,c
 15701  01147C  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 15702  01147E  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 15703  011480  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 15704  011482  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 15705  011484                     u7180:
 15706  011484  2EE8               	decfsz	wreg,f,c
 15707  011486  D7F8               	goto	u7185
 15708  011488  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 15709  01148C  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15710  011490  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15711  011494  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15712                           
 15713                           ; BSR set to: 0
 15714                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 15715  011498  0100               	movlb	0	; () banked
 15716  01149A  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 15717  01149C  0100               	movlb	0	; () banked
 15718  01149E  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 15719  0114A0  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15720  0114A2  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15721  0114A4  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15722                           
 15723                           ; BSR set to: 0
 15724                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 15725  0114A6  C07E  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 15726                           
 15727                           ;inc\CANlib.h: 332: }
 15728  0114AA  D059               	goto	l5854
 15729  0114AC                     l378:
 15730                           
 15731                           ; BSR set to: 0
 15732                           ;inc\CANlib.h: 334: else
 15733                           ;inc\CANlib.h: 336: {
 15734                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 15735  0114AC  010F               	movlb	15	; () banked
 15736  0114AE  9742               	bcf	66,3,b	;volatile
 15737                           
 15738                           ; BSR set to: 15
 15739                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 15740  0114B0  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 15741  0114B4  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 15742  0114B8  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 15743  0114BC  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 15744  0114C0  0E04               	movlw	4
 15745  0114C2  D006               	goto	u7190
 15746  0114C4                     u7195:
 15747  0114C4  0100               	movlb	0	; () banked
 15748  0114C6  90D8               	bcf	status,0,c
 15749  0114C8  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 15750  0114CA  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 15751  0114CC  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 15752  0114CE  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 15753  0114D0                     u7190:
 15754  0114D0  2EE8               	decfsz	wreg,f,c
 15755  0114D2  D7F8               	goto	u7195
 15756  0114D4  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 15757  0114D8  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15758  0114DC  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15759  0114E0  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15760                           
 15761                           ; BSR set to: 0
 15762                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 15763  0114E4  0100               	movlb	0	; () banked
 15764  0114E6  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 15765  0114E8  0100               	movlb	0	; () banked
 15766  0114EA  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 15767  0114EC  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15768  0114EE  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15769  0114F0  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15770                           
 15771                           ; BSR set to: 0
 15772                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 15773  0114F2  C07E  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 15774                           
 15775                           ; BSR set to: 0
 15776                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 15777  0114F6  0E07               	movlw	7
 15778  0114F8  0100               	movlb	0	; () banked
 15779  0114FA  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 15780  0114FC  0100               	movlb	0	; () banked
 15781  0114FE  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 15782  011500  0E00               	movlw	0
 15783  011502  0100               	movlb	0	; () banked
 15784  011504  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 15785  011506  0100               	movlb	0	; () banked
 15786  011508  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 15787  01150A  0E00               	movlw	0
 15788  01150C  0100               	movlb	0	; () banked
 15789  01150E  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 15790  011510  0100               	movlb	0	; () banked
 15791  011512  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 15792  011514  0E00               	movlw	0
 15793  011516  0100               	movlb	0	; () banked
 15794  011518  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 15795  01151A  0100               	movlb	0	; () banked
 15796  01151C  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 15797                           
 15798                           ; BSR set to: 0
 15799                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 15800  01151E  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 15801  011522  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 15802  011526  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 15803  01152A  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 15804  01152E  0E05               	movlw	5
 15805  011530                     u7205:
 15806  011530  90D8               	bcf	status,0,c
 15807  011532  0100               	movlb	0	; () banked
 15808  011534  377A               	rlcf	??_CANsendMessage& (0+255),f,b
 15809  011536  377B               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 15810  011538  377C               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 15811  01153A  377D               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 15812  01153C  2EE8               	decfsz	wreg,f,c
 15813  01153E  D7F8               	goto	u7205
 15814  011540  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 15815  011544  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15816  011548  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15817  01154C  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15818                           
 15819                           ; BSR set to: 0
 15820                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 15821  011550  010F               	movlb	15	; () banked
 15822  011552  5142               	movf	66,w,b	;volatile
 15823  011554  0B1F               	andlw	31
 15824  011556  010F               	movlb	15	; () banked
 15825  011558  6F42               	movwf	66,b	;volatile
 15826                           
 15827                           ; BSR set to: 15
 15828                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 15829  01155A  C07E  FF42         	movff	CANsendMessage@tamp,3906	;volatile
 15830  01155E                     l5854:
 15831                           
 15832                           ;inc\CANlib.h: 347: }
 15833                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 15834  01155E  0100               	movlb	0	; () banked
 15835  011560  A179               	btfss	CANsendMessage@flags& (0+255),0,b
 15836  011562  D003               	goto	l385
 15837                           
 15838                           ; BSR set to: 0
 15839                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 15840  011564  010F               	movlb	15	; () banked
 15841  011566  8140               	bsf	64,0,b	;volatile
 15842  011568  D002               	goto	l386
 15843  01156A                     l385:
 15844                           
 15845                           ; BSR set to: 0
 15846                           ;inc\CANlib.h: 351: else
 15847                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 15848  01156A  010F               	movlb	15	; () banked
 15849  01156C  9140               	bcf	64,0,b	;volatile
 15850  01156E                     l386:
 15851                           
 15852                           ; BSR set to: 15
 15853                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 15854  01156E  0100               	movlb	0	; () banked
 15855  011570  A379               	btfss	CANsendMessage@flags& (0+255),1,b
 15856  011572  D003               	goto	l387
 15857                           
 15858                           ; BSR set to: 0
 15859                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 15860  011574  010F               	movlb	15	; () banked
 15861  011576  8340               	bsf	64,1,b	;volatile
 15862  011578  D002               	goto	l5860
 15863  01157A                     l387:
 15864                           
 15865                           ; BSR set to: 0
 15866                           ;inc\CANlib.h: 355: else
 15867                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 15868  01157A  010F               	movlb	15	; () banked
 15869  01157C  9340               	bcf	64,1,b	;volatile
 15870  01157E                     l5860:
 15871                           
 15872                           ; BSR set to: 15
 15873                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 15874  01157E  C076  FFD9         	movff	CANsendMessage@data,fsr2l
 15875  011582  C077  FFDA         	movff	CANsendMessage@data+1,fsr2h
 15876  011586  50DF               	movf	indf2,w,c
 15877  011588  010F               	movlb	15	; () banked
 15878  01158A  6F46               	movwf	70,b	;volatile
 15879                           
 15880                           ; BSR set to: 15
 15881                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 15882  01158C  0100               	movlb	0	; () banked
 15883  01158E  EE20 F001          	lfsr	2,1
 15884  011592  5176               	movf	CANsendMessage@data& (0+255),w,b
 15885  011594  26D9               	addwf	fsr2l,f,c
 15886  011596  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15887  011598  22DA               	addwfc	fsr2h,f,c
 15888  01159A  50DF               	movf	indf2,w,c
 15889  01159C  010F               	movlb	15	; () banked
 15890  01159E  6F47               	movwf	71,b	;volatile
 15891                           
 15892                           ; BSR set to: 15
 15893                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 15894  0115A0  0100               	movlb	0	; () banked
 15895  0115A2  EE20 F002          	lfsr	2,2
 15896  0115A6  5176               	movf	CANsendMessage@data& (0+255),w,b
 15897  0115A8  26D9               	addwf	fsr2l,f,c
 15898  0115AA  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15899  0115AC  22DA               	addwfc	fsr2h,f,c
 15900  0115AE  50DF               	movf	indf2,w,c
 15901  0115B0  010F               	movlb	15	; () banked
 15902  0115B2  6F48               	movwf	72,b	;volatile
 15903                           
 15904                           ; BSR set to: 15
 15905                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 15906  0115B4  0100               	movlb	0	; () banked
 15907  0115B6  EE20 F003          	lfsr	2,3
 15908  0115BA  5176               	movf	CANsendMessage@data& (0+255),w,b
 15909  0115BC  26D9               	addwf	fsr2l,f,c
 15910  0115BE  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15911  0115C0  22DA               	addwfc	fsr2h,f,c
 15912  0115C2  50DF               	movf	indf2,w,c
 15913  0115C4  010F               	movlb	15	; () banked
 15914  0115C6  6F49               	movwf	73,b	;volatile
 15915                           
 15916                           ; BSR set to: 15
 15917                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 15918  0115C8  0100               	movlb	0	; () banked
 15919  0115CA  EE20 F004          	lfsr	2,4
 15920  0115CE  5176               	movf	CANsendMessage@data& (0+255),w,b
 15921  0115D0  26D9               	addwf	fsr2l,f,c
 15922  0115D2  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15923  0115D4  22DA               	addwfc	fsr2h,f,c
 15924  0115D6  50DF               	movf	indf2,w,c
 15925  0115D8  010F               	movlb	15	; () banked
 15926  0115DA  6F4A               	movwf	74,b	;volatile
 15927                           
 15928                           ; BSR set to: 15
 15929                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 15930  0115DC  0100               	movlb	0	; () banked
 15931  0115DE  EE20 F005          	lfsr	2,5
 15932  0115E2  5176               	movf	CANsendMessage@data& (0+255),w,b
 15933  0115E4  26D9               	addwf	fsr2l,f,c
 15934  0115E6  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15935  0115E8  22DA               	addwfc	fsr2h,f,c
 15936  0115EA  50DF               	movf	indf2,w,c
 15937  0115EC  010F               	movlb	15	; () banked
 15938  0115EE  6F4B               	movwf	75,b	;volatile
 15939                           
 15940                           ; BSR set to: 15
 15941                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 15942  0115F0  0100               	movlb	0	; () banked
 15943  0115F2  EE20 F006          	lfsr	2,6
 15944  0115F6  5176               	movf	CANsendMessage@data& (0+255),w,b
 15945  0115F8  26D9               	addwf	fsr2l,f,c
 15946  0115FA  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15947  0115FC  22DA               	addwfc	fsr2h,f,c
 15948  0115FE  50DF               	movf	indf2,w,c
 15949  011600  010F               	movlb	15	; () banked
 15950  011602  6F4C               	movwf	76,b	;volatile
 15951                           
 15952                           ; BSR set to: 15
 15953                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 15954  011604  0100               	movlb	0	; () banked
 15955  011606  EE20 F007          	lfsr	2,7
 15956  01160A  5176               	movf	CANsendMessage@data& (0+255),w,b
 15957  01160C  26D9               	addwf	fsr2l,f,c
 15958  01160E  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15959  011610  22DA               	addwfc	fsr2h,f,c
 15960  011612  50DF               	movf	indf2,w,c
 15961  011614  010F               	movlb	15	; () banked
 15962  011616  6F4D               	movwf	77,b	;volatile
 15963                           
 15964                           ; BSR set to: 15
 15965                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 15966  011618  010F               	movlb	15	; () banked
 15967  01161A  8740               	bsf	64,3,b	;volatile
 15968                           
 15969                           ; BSR set to: 15
 15970                           ;inc\CANlib.h: 368: return;
 15971  01161C  0012               	return	
 15972  01161E                     l375:
 15973                           
 15974                           ; BSR set to: 15
 15975                           ;inc\CANlib.h: 369: }
 15976                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 15977  01161E  010F               	movlb	15	; () banked
 15978  011620  B730               	btfsc	48,3,b	;volatile
 15979  011622  D13F               	goto	l390
 15980                           
 15981                           ; BSR set to: 15
 15982                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 15983  011624  C078  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
 15984                           
 15985                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 15986  011628  0100               	movlb	0	; () banked
 15987  01162A  AD79               	btfss	CANsendMessage@flags& (0+255),6,b
 15988  01162C  D003               	goto	l391
 15989                           
 15990                           ; BSR set to: 0
 15991                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 15992  01162E  010F               	movlb	15	; () banked
 15993  011630  8D35               	bsf	53,6,b	;volatile
 15994  011632  D002               	goto	l392
 15995  011634                     l391:
 15996                           
 15997                           ; BSR set to: 0
 15998                           ;inc\CANlib.h: 378: else
 15999                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 16000  011634  010F               	movlb	15	; () banked
 16001  011636  9D35               	bcf	53,6,b	;volatile
 16002  011638                     l392:
 16003                           
 16004                           ; BSR set to: 15
 16005                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 16006  011638  0100               	movlb	0	; () banked
 16007  01163A  A779               	btfss	CANsendMessage@flags& (0+255),3,b
 16008  01163C  D079               	goto	l393
 16009                           
 16010                           ; BSR set to: 0
 16011                           ;inc\CANlib.h: 382: {
 16012                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 16013  01163E  0100               	movlb	0	; () banked
 16014  011640  5172               	movf	CANsendMessage@identifier& (0+255),w,b
 16015  011642  0100               	movlb	0	; () banked
 16016  011644  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 16017  011646  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16018  011648  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16019  01164A  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16020                           
 16021                           ; BSR set to: 0
 16022                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 16023  01164C  C07E  FF34         	movff	CANsendMessage@tamp,3892	;volatile
 16024                           
 16025                           ; BSR set to: 0
 16026                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 16027  011650  0E00               	movlw	0
 16028  011652  0100               	movlb	0	; () banked
 16029  011654  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 16030  011656  0100               	movlb	0	; () banked
 16031  011658  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 16032  01165A  0EFF               	movlw	255
 16033  01165C  0100               	movlb	0	; () banked
 16034  01165E  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16035  011660  0100               	movlb	0	; () banked
 16036  011662  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16037  011664  0E00               	movlw	0
 16038  011666  0100               	movlb	0	; () banked
 16039  011668  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16040  01166A  0100               	movlb	0	; () banked
 16041  01166C  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16042  01166E  0E00               	movlw	0
 16043  011670  0100               	movlb	0	; () banked
 16044  011672  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16045  011674  0100               	movlb	0	; () banked
 16046  011676  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16047                           
 16048                           ; BSR set to: 0
 16049                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 16050  011678  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 16051  01167C  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 16052  011680  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 16053  011684  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 16054  011688  C07B  F07A         	movff	??_CANsendMessage+1,??_CANsendMessage
 16055  01168C  C07C  F07B         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 16056  011690  C07D  F07C         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 16057  011694  0100               	movlb	0	; () banked
 16058  011696  6B7D               	clrf	(??_CANsendMessage+3)& (0+255),b
 16059  011698  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 16060  01169C  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16061  0116A0  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16062  0116A4  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16063                           
 16064                           ; BSR set to: 0
 16065                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 16066  0116A8  C07E  FF33         	movff	CANsendMessage@tamp,3891	;volatile
 16067                           
 16068                           ; BSR set to: 0
 16069                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 16070  0116AC  0E00               	movlw	0
 16071  0116AE  010F               	movlb	15	; () banked
 16072  0116B0  6F32               	movwf	50,b	;volatile
 16073                           
 16074                           ; BSR set to: 15
 16075                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 16076  0116B2  010F               	movlb	15	; () banked
 16077  0116B4  8732               	bsf	50,3,b	;volatile
 16078                           
 16079                           ; BSR set to: 15
 16080                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 16081  0116B6  0100               	movlb	0	; () banked
 16082  0116B8  A174               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 16083  0116BA  D002               	goto	l394
 16084                           
 16085                           ; BSR set to: 0
 16086                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 16087  0116BC  010F               	movlb	15	; () banked
 16088  0116BE  8132               	bsf	50,0,b	;volatile
 16089  0116C0                     l394:
 16090                           
 16091                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 16092  0116C0  0100               	movlb	0	; () banked
 16093  0116C2  A374               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 16094  0116C4  D002               	goto	l395
 16095                           
 16096                           ; BSR set to: 0
 16097                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 16098  0116C6  010F               	movlb	15	; () banked
 16099  0116C8  8332               	bsf	50,1,b	;volatile
 16100  0116CA                     l395:
 16101                           
 16102                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 16103  0116CA  0100               	movlb	0	; () banked
 16104  0116CC  A574               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 16105  0116CE  D002               	goto	l396
 16106                           
 16107                           ; BSR set to: 0
 16108                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 16109  0116D0  010F               	movlb	15	; () banked
 16110  0116D2  8B32               	bsf	50,5,b	;volatile
 16111  0116D4                     l396:
 16112                           
 16113                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 16114  0116D4  0100               	movlb	0	; () banked
 16115  0116D6  A774               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 16116  0116D8  D002               	goto	l397
 16117                           
 16118                           ; BSR set to: 0
 16119                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 16120  0116DA  010F               	movlb	15	; () banked
 16121  0116DC  8D32               	bsf	50,6,b	;volatile
 16122  0116DE                     l397:
 16123                           
 16124                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 16125  0116DE  0100               	movlb	0	; () banked
 16126  0116E0  A974               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 16127  0116E2  D002               	goto	l5910
 16128                           
 16129                           ; BSR set to: 0
 16130                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 16131  0116E4  010F               	movlb	15	; () banked
 16132  0116E6  8F32               	bsf	50,7,b	;volatile
 16133  0116E8                     l5910:
 16134                           
 16135                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 16136  0116E8  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 16137  0116EC  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 16138  0116F0  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 16139  0116F4  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 16140  0116F8  0E16               	movlw	22
 16141  0116FA  D006               	goto	u7310
 16142  0116FC                     u7315:
 16143  0116FC  0100               	movlb	0	; () banked
 16144  0116FE  90D8               	bcf	status,0,c
 16145  011700  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 16146  011702  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 16147  011704  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 16148  011706  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 16149  011708                     u7310:
 16150  011708  2EE8               	decfsz	wreg,f,c
 16151  01170A  D7F8               	goto	u7315
 16152  01170C  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 16153  011710  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16154  011714  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16155  011718  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16156                           
 16157                           ; BSR set to: 0
 16158                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 16159  01171C  0100               	movlb	0	; () banked
 16160  01171E  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 16161  011720  0100               	movlb	0	; () banked
 16162  011722  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 16163  011724  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16164  011726  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16165  011728  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16166                           
 16167                           ; BSR set to: 0
 16168                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 16169  01172A  C07E  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 16170                           
 16171                           ;inc\CANlib.h: 407: }
 16172  01172E  D059               	goto	l5930
 16173  011730                     l393:
 16174                           
 16175                           ; BSR set to: 0
 16176                           ;inc\CANlib.h: 409: else
 16177                           ;inc\CANlib.h: 411: {
 16178                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 16179  011730  010F               	movlb	15	; () banked
 16180  011732  9732               	bcf	50,3,b	;volatile
 16181                           
 16182                           ; BSR set to: 15
 16183                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 16184  011734  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 16185  011738  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 16186  01173C  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 16187  011740  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 16188  011744  0E04               	movlw	4
 16189  011746  D006               	goto	u7320
 16190  011748                     u7325:
 16191  011748  0100               	movlb	0	; () banked
 16192  01174A  90D8               	bcf	status,0,c
 16193  01174C  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 16194  01174E  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 16195  011750  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 16196  011752  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 16197  011754                     u7320:
 16198  011754  2EE8               	decfsz	wreg,f,c
 16199  011756  D7F8               	goto	u7325
 16200  011758  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 16201  01175C  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16202  011760  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16203  011764  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16204                           
 16205                           ; BSR set to: 0
 16206                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 16207  011768  0100               	movlb	0	; () banked
 16208  01176A  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 16209  01176C  0100               	movlb	0	; () banked
 16210  01176E  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 16211  011770  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16212  011772  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16213  011774  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16214                           
 16215                           ; BSR set to: 0
 16216                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 16217  011776  C07E  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 16218                           
 16219                           ; BSR set to: 0
 16220                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 16221  01177A  0E07               	movlw	7
 16222  01177C  0100               	movlb	0	; () banked
 16223  01177E  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 16224  011780  0100               	movlb	0	; () banked
 16225  011782  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 16226  011784  0E00               	movlw	0
 16227  011786  0100               	movlb	0	; () banked
 16228  011788  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16229  01178A  0100               	movlb	0	; () banked
 16230  01178C  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16231  01178E  0E00               	movlw	0
 16232  011790  0100               	movlb	0	; () banked
 16233  011792  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16234  011794  0100               	movlb	0	; () banked
 16235  011796  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16236  011798  0E00               	movlw	0
 16237  01179A  0100               	movlb	0	; () banked
 16238  01179C  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16239  01179E  0100               	movlb	0	; () banked
 16240  0117A0  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16241                           
 16242                           ; BSR set to: 0
 16243                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 16244  0117A2  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 16245  0117A6  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 16246  0117AA  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 16247  0117AE  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 16248  0117B2  0E05               	movlw	5
 16249  0117B4                     u7335:
 16250  0117B4  90D8               	bcf	status,0,c
 16251  0117B6  0100               	movlb	0	; () banked
 16252  0117B8  377A               	rlcf	??_CANsendMessage& (0+255),f,b
 16253  0117BA  377B               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 16254  0117BC  377C               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 16255  0117BE  377D               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 16256  0117C0  2EE8               	decfsz	wreg,f,c
 16257  0117C2  D7F8               	goto	u7335
 16258  0117C4  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 16259  0117C8  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16260  0117CC  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16261  0117D0  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16262                           
 16263                           ; BSR set to: 0
 16264                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 16265  0117D4  010F               	movlb	15	; () banked
 16266  0117D6  5132               	movf	50,w,b	;volatile
 16267  0117D8  0B1F               	andlw	31
 16268  0117DA  010F               	movlb	15	; () banked
 16269  0117DC  6F32               	movwf	50,b	;volatile
 16270                           
 16271                           ; BSR set to: 15
 16272                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 16273  0117DE  C07E  FF32         	movff	CANsendMessage@tamp,3890	;volatile
 16274  0117E2                     l5930:
 16275                           
 16276                           ;inc\CANlib.h: 422: }
 16277                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 16278  0117E2  0100               	movlb	0	; () banked
 16279  0117E4  A179               	btfss	CANsendMessage@flags& (0+255),0,b
 16280  0117E6  D003               	goto	l400
 16281                           
 16282                           ; BSR set to: 0
 16283                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 16284  0117E8  010F               	movlb	15	; () banked
 16285  0117EA  8130               	bsf	48,0,b	;volatile
 16286  0117EC  D002               	goto	l401
 16287  0117EE                     l400:
 16288                           
 16289                           ; BSR set to: 0
 16290                           ;inc\CANlib.h: 426: else
 16291                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 16292  0117EE  010F               	movlb	15	; () banked
 16293  0117F0  9130               	bcf	48,0,b	;volatile
 16294  0117F2                     l401:
 16295                           
 16296                           ; BSR set to: 15
 16297                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 16298  0117F2  0100               	movlb	0	; () banked
 16299  0117F4  A379               	btfss	CANsendMessage@flags& (0+255),1,b
 16300  0117F6  D003               	goto	l402
 16301                           
 16302                           ; BSR set to: 0
 16303                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 16304  0117F8  010F               	movlb	15	; () banked
 16305  0117FA  8330               	bsf	48,1,b	;volatile
 16306  0117FC  D002               	goto	l5936
 16307  0117FE                     l402:
 16308                           
 16309                           ; BSR set to: 0
 16310                           ;inc\CANlib.h: 430: else
 16311                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 16312  0117FE  010F               	movlb	15	; () banked
 16313  011800  9330               	bcf	48,1,b	;volatile
 16314  011802                     l5936:
 16315                           
 16316                           ; BSR set to: 15
 16317                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 16318  011802  C076  FFD9         	movff	CANsendMessage@data,fsr2l
 16319  011806  C077  FFDA         	movff	CANsendMessage@data+1,fsr2h
 16320  01180A  50DF               	movf	indf2,w,c
 16321  01180C  010F               	movlb	15	; () banked
 16322  01180E  6F36               	movwf	54,b	;volatile
 16323                           
 16324                           ; BSR set to: 15
 16325                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 16326  011810  0100               	movlb	0	; () banked
 16327  011812  EE20 F001          	lfsr	2,1
 16328  011816  5176               	movf	CANsendMessage@data& (0+255),w,b
 16329  011818  26D9               	addwf	fsr2l,f,c
 16330  01181A  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16331  01181C  22DA               	addwfc	fsr2h,f,c
 16332  01181E  50DF               	movf	indf2,w,c
 16333  011820  010F               	movlb	15	; () banked
 16334  011822  6F37               	movwf	55,b	;volatile
 16335                           
 16336                           ; BSR set to: 15
 16337                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 16338  011824  0100               	movlb	0	; () banked
 16339  011826  EE20 F002          	lfsr	2,2
 16340  01182A  5176               	movf	CANsendMessage@data& (0+255),w,b
 16341  01182C  26D9               	addwf	fsr2l,f,c
 16342  01182E  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16343  011830  22DA               	addwfc	fsr2h,f,c
 16344  011832  50DF               	movf	indf2,w,c
 16345  011834  010F               	movlb	15	; () banked
 16346  011836  6F38               	movwf	56,b	;volatile
 16347                           
 16348                           ; BSR set to: 15
 16349                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 16350  011838  0100               	movlb	0	; () banked
 16351  01183A  EE20 F003          	lfsr	2,3
 16352  01183E  5176               	movf	CANsendMessage@data& (0+255),w,b
 16353  011840  26D9               	addwf	fsr2l,f,c
 16354  011842  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16355  011844  22DA               	addwfc	fsr2h,f,c
 16356  011846  50DF               	movf	indf2,w,c
 16357  011848  010F               	movlb	15	; () banked
 16358  01184A  6F39               	movwf	57,b	;volatile
 16359                           
 16360                           ; BSR set to: 15
 16361                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 16362  01184C  0100               	movlb	0	; () banked
 16363  01184E  EE20 F004          	lfsr	2,4
 16364  011852  5176               	movf	CANsendMessage@data& (0+255),w,b
 16365  011854  26D9               	addwf	fsr2l,f,c
 16366  011856  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16367  011858  22DA               	addwfc	fsr2h,f,c
 16368  01185A  50DF               	movf	indf2,w,c
 16369  01185C  010F               	movlb	15	; () banked
 16370  01185E  6F3A               	movwf	58,b	;volatile
 16371                           
 16372                           ; BSR set to: 15
 16373                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 16374  011860  0100               	movlb	0	; () banked
 16375  011862  EE20 F005          	lfsr	2,5
 16376  011866  5176               	movf	CANsendMessage@data& (0+255),w,b
 16377  011868  26D9               	addwf	fsr2l,f,c
 16378  01186A  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16379  01186C  22DA               	addwfc	fsr2h,f,c
 16380  01186E  50DF               	movf	indf2,w,c
 16381  011870  010F               	movlb	15	; () banked
 16382  011872  6F3B               	movwf	59,b	;volatile
 16383                           
 16384                           ; BSR set to: 15
 16385                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 16386  011874  0100               	movlb	0	; () banked
 16387  011876  EE20 F006          	lfsr	2,6
 16388  01187A  5176               	movf	CANsendMessage@data& (0+255),w,b
 16389  01187C  26D9               	addwf	fsr2l,f,c
 16390  01187E  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16391  011880  22DA               	addwfc	fsr2h,f,c
 16392  011882  50DF               	movf	indf2,w,c
 16393  011884  010F               	movlb	15	; () banked
 16394  011886  6F3C               	movwf	60,b	;volatile
 16395                           
 16396                           ; BSR set to: 15
 16397                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 16398  011888  0100               	movlb	0	; () banked
 16399  01188A  EE20 F007          	lfsr	2,7
 16400  01188E  5176               	movf	CANsendMessage@data& (0+255),w,b
 16401  011890  26D9               	addwf	fsr2l,f,c
 16402  011892  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16403  011894  22DA               	addwfc	fsr2h,f,c
 16404  011896  50DF               	movf	indf2,w,c
 16405  011898  010F               	movlb	15	; () banked
 16406  01189A  6F3D               	movwf	61,b	;volatile
 16407                           
 16408                           ; BSR set to: 15
 16409                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 16410  01189C  010F               	movlb	15	; () banked
 16411  01189E  8730               	bsf	48,3,b	;volatile
 16412                           
 16413                           ; BSR set to: 15
 16414                           ;inc\CANlib.h: 444: return;
 16415  0118A0  0012               	return	
 16416  0118A2                     l390:
 16417                           
 16418                           ; BSR set to: 15
 16419                           ;inc\CANlib.h: 445: }
 16420                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 16421  0118A2  010F               	movlb	15	; () banked
 16422  0118A4  B720               	btfsc	32,3,b	;volatile
 16423  0118A6  0012               	return	
 16424                           
 16425                           ; BSR set to: 15
 16426                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 16427  0118A8  C078  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
 16428                           
 16429                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 16430  0118AC  0100               	movlb	0	; () banked
 16431  0118AE  AD79               	btfss	CANsendMessage@flags& (0+255),6,b
 16432  0118B0  D003               	goto	l405
 16433                           
 16434                           ; BSR set to: 0
 16435                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 16436  0118B2  010F               	movlb	15	; () banked
 16437  0118B4  8D25               	bsf	37,6,b	;volatile
 16438  0118B6  D002               	goto	l406
 16439  0118B8                     l405:
 16440                           
 16441                           ; BSR set to: 0
 16442                           ;inc\CANlib.h: 454: else
 16443                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 16444  0118B8  010F               	movlb	15	; () banked
 16445  0118BA  9D25               	bcf	37,6,b	;volatile
 16446  0118BC                     l406:
 16447                           
 16448                           ; BSR set to: 15
 16449                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 16450  0118BC  0100               	movlb	0	; () banked
 16451  0118BE  A779               	btfss	CANsendMessage@flags& (0+255),3,b
 16452  0118C0  D079               	goto	l407
 16453                           
 16454                           ; BSR set to: 0
 16455                           ;inc\CANlib.h: 458: {
 16456                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 16457  0118C2  0100               	movlb	0	; () banked
 16458  0118C4  5172               	movf	CANsendMessage@identifier& (0+255),w,b
 16459  0118C6  0100               	movlb	0	; () banked
 16460  0118C8  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 16461  0118CA  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16462  0118CC  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16463  0118CE  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16464                           
 16465                           ; BSR set to: 0
 16466                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 16467  0118D0  C07E  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 16468                           
 16469                           ; BSR set to: 0
 16470                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 16471  0118D4  0E00               	movlw	0
 16472  0118D6  0100               	movlb	0	; () banked
 16473  0118D8  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 16474  0118DA  0100               	movlb	0	; () banked
 16475  0118DC  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 16476  0118DE  0EFF               	movlw	255
 16477  0118E0  0100               	movlb	0	; () banked
 16478  0118E2  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16479  0118E4  0100               	movlb	0	; () banked
 16480  0118E6  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16481  0118E8  0E00               	movlw	0
 16482  0118EA  0100               	movlb	0	; () banked
 16483  0118EC  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16484  0118EE  0100               	movlb	0	; () banked
 16485  0118F0  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16486  0118F2  0E00               	movlw	0
 16487  0118F4  0100               	movlb	0	; () banked
 16488  0118F6  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16489  0118F8  0100               	movlb	0	; () banked
 16490  0118FA  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16491                           
 16492                           ; BSR set to: 0
 16493                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 16494  0118FC  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 16495  011900  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 16496  011904  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 16497  011908  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 16498  01190C  C07B  F07A         	movff	??_CANsendMessage+1,??_CANsendMessage
 16499  011910  C07C  F07B         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 16500  011914  C07D  F07C         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 16501  011918  0100               	movlb	0	; () banked
 16502  01191A  6B7D               	clrf	(??_CANsendMessage+3)& (0+255),b
 16503  01191C  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 16504  011920  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16505  011924  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16506  011928  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16507                           
 16508                           ; BSR set to: 0
 16509                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 16510  01192C  C07E  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 16511                           
 16512                           ; BSR set to: 0
 16513                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 16514  011930  0E00               	movlw	0
 16515  011932  010F               	movlb	15	; () banked
 16516  011934  6F22               	movwf	34,b	;volatile
 16517                           
 16518                           ; BSR set to: 15
 16519                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 16520  011936  010F               	movlb	15	; () banked
 16521  011938  8722               	bsf	34,3,b	;volatile
 16522                           
 16523                           ; BSR set to: 15
 16524                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 16525  01193A  0100               	movlb	0	; () banked
 16526  01193C  A174               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 16527  01193E  D002               	goto	l408
 16528                           
 16529                           ; BSR set to: 0
 16530                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 16531  011940  010F               	movlb	15	; () banked
 16532  011942  8122               	bsf	34,0,b	;volatile
 16533  011944                     l408:
 16534                           
 16535                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 16536  011944  0100               	movlb	0	; () banked
 16537  011946  A374               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 16538  011948  D002               	goto	l409
 16539                           
 16540                           ; BSR set to: 0
 16541                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 16542  01194A  010F               	movlb	15	; () banked
 16543  01194C  8322               	bsf	34,1,b	;volatile
 16544  01194E                     l409:
 16545                           
 16546                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 16547  01194E  0100               	movlb	0	; () banked
 16548  011950  A574               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 16549  011952  D002               	goto	l410
 16550                           
 16551                           ; BSR set to: 0
 16552                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 16553  011954  010F               	movlb	15	; () banked
 16554  011956  8B22               	bsf	34,5,b	;volatile
 16555  011958                     l410:
 16556                           
 16557                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 16558  011958  0100               	movlb	0	; () banked
 16559  01195A  A774               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 16560  01195C  D002               	goto	l411
 16561                           
 16562                           ; BSR set to: 0
 16563                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 16564  01195E  010F               	movlb	15	; () banked
 16565  011960  8D22               	bsf	34,6,b	;volatile
 16566  011962                     l411:
 16567                           
 16568                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 16569  011962  0100               	movlb	0	; () banked
 16570  011964  A974               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 16571  011966  D002               	goto	l5986
 16572                           
 16573                           ; BSR set to: 0
 16574                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 16575  011968  010F               	movlb	15	; () banked
 16576  01196A  8F22               	bsf	34,7,b	;volatile
 16577  01196C                     l5986:
 16578                           
 16579                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 16580  01196C  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 16581  011970  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 16582  011974  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 16583  011978  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 16584  01197C  0E16               	movlw	22
 16585  01197E  D006               	goto	u7440
 16586  011980                     u7445:
 16587  011980  0100               	movlb	0	; () banked
 16588  011982  90D8               	bcf	status,0,c
 16589  011984  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 16590  011986  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 16591  011988  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 16592  01198A  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 16593  01198C                     u7440:
 16594  01198C  2EE8               	decfsz	wreg,f,c
 16595  01198E  D7F8               	goto	u7445
 16596  011990  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 16597  011994  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16598  011998  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16599  01199C  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16600                           
 16601                           ; BSR set to: 0
 16602                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 16603  0119A0  0100               	movlb	0	; () banked
 16604  0119A2  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 16605  0119A4  0100               	movlb	0	; () banked
 16606  0119A6  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 16607  0119A8  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16608  0119AA  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16609  0119AC  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16610                           
 16611                           ; BSR set to: 0
 16612                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 16613  0119AE  C07E  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 16614                           
 16615                           ;inc\CANlib.h: 483: }
 16616  0119B2  D059               	goto	l6006
 16617  0119B4                     l407:
 16618                           
 16619                           ; BSR set to: 0
 16620                           ;inc\CANlib.h: 485: else
 16621                           ;inc\CANlib.h: 487: {
 16622                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 16623  0119B4  010F               	movlb	15	; () banked
 16624  0119B6  9722               	bcf	34,3,b	;volatile
 16625                           
 16626                           ; BSR set to: 15
 16627                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 16628  0119B8  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 16629  0119BC  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 16630  0119C0  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 16631  0119C4  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 16632  0119C8  0E04               	movlw	4
 16633  0119CA  D006               	goto	u7450
 16634  0119CC                     u7455:
 16635  0119CC  0100               	movlb	0	; () banked
 16636  0119CE  90D8               	bcf	status,0,c
 16637  0119D0  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 16638  0119D2  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 16639  0119D4  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 16640  0119D6  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 16641  0119D8                     u7450:
 16642  0119D8  2EE8               	decfsz	wreg,f,c
 16643  0119DA  D7F8               	goto	u7455
 16644  0119DC  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 16645  0119E0  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16646  0119E4  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16647  0119E8  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16648                           
 16649                           ; BSR set to: 0
 16650                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 16651  0119EC  0100               	movlb	0	; () banked
 16652  0119EE  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 16653  0119F0  0100               	movlb	0	; () banked
 16654  0119F2  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 16655  0119F4  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16656  0119F6  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16657  0119F8  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16658                           
 16659                           ; BSR set to: 0
 16660                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 16661  0119FA  C07E  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 16662                           
 16663                           ; BSR set to: 0
 16664                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 16665  0119FE  0E07               	movlw	7
 16666  011A00  0100               	movlb	0	; () banked
 16667  011A02  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 16668  011A04  0100               	movlb	0	; () banked
 16669  011A06  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 16670  011A08  0E00               	movlw	0
 16671  011A0A  0100               	movlb	0	; () banked
 16672  011A0C  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16673  011A0E  0100               	movlb	0	; () banked
 16674  011A10  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16675  011A12  0E00               	movlw	0
 16676  011A14  0100               	movlb	0	; () banked
 16677  011A16  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16678  011A18  0100               	movlb	0	; () banked
 16679  011A1A  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16680  011A1C  0E00               	movlw	0
 16681  011A1E  0100               	movlb	0	; () banked
 16682  011A20  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16683  011A22  0100               	movlb	0	; () banked
 16684  011A24  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16685                           
 16686                           ; BSR set to: 0
 16687                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 16688  011A26  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 16689  011A2A  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 16690  011A2E  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 16691  011A32  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 16692  011A36  0E05               	movlw	5
 16693  011A38                     u7465:
 16694  011A38  90D8               	bcf	status,0,c
 16695  011A3A  0100               	movlb	0	; () banked
 16696  011A3C  377A               	rlcf	??_CANsendMessage& (0+255),f,b
 16697  011A3E  377B               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 16698  011A40  377C               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 16699  011A42  377D               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 16700  011A44  2EE8               	decfsz	wreg,f,c
 16701  011A46  D7F8               	goto	u7465
 16702  011A48  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 16703  011A4C  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16704  011A50  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16705  011A54  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16706                           
 16707                           ; BSR set to: 0
 16708                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 16709  011A58  010F               	movlb	15	; () banked
 16710  011A5A  5122               	movf	34,w,b	;volatile
 16711  011A5C  0B1F               	andlw	31
 16712  011A5E  010F               	movlb	15	; () banked
 16713  011A60  6F22               	movwf	34,b	;volatile
 16714                           
 16715                           ; BSR set to: 15
 16716                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 16717  011A62  C07E  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 16718  011A66                     l6006:
 16719                           
 16720                           ;inc\CANlib.h: 498: }
 16721                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 16722  011A66  0100               	movlb	0	; () banked
 16723  011A68  A179               	btfss	CANsendMessage@flags& (0+255),0,b
 16724  011A6A  D003               	goto	l414
 16725                           
 16726                           ; BSR set to: 0
 16727                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 16728  011A6C  010F               	movlb	15	; () banked
 16729  011A6E  8120               	bsf	32,0,b	;volatile
 16730  011A70  D002               	goto	l415
 16731  011A72                     l414:
 16732                           
 16733                           ; BSR set to: 0
 16734                           ;inc\CANlib.h: 502: else
 16735                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 16736  011A72  010F               	movlb	15	; () banked
 16737  011A74  9120               	bcf	32,0,b	;volatile
 16738  011A76                     l415:
 16739                           
 16740                           ; BSR set to: 15
 16741                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 16742  011A76  0100               	movlb	0	; () banked
 16743  011A78  A379               	btfss	CANsendMessage@flags& (0+255),1,b
 16744  011A7A  D003               	goto	l416
 16745                           
 16746                           ; BSR set to: 0
 16747                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 16748  011A7C  010F               	movlb	15	; () banked
 16749  011A7E  8320               	bsf	32,1,b	;volatile
 16750  011A80  D002               	goto	l6012
 16751  011A82                     l416:
 16752                           
 16753                           ; BSR set to: 0
 16754                           ;inc\CANlib.h: 506: else
 16755                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 16756  011A82  010F               	movlb	15	; () banked
 16757  011A84  9320               	bcf	32,1,b	;volatile
 16758  011A86                     l6012:
 16759                           
 16760                           ; BSR set to: 15
 16761                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 16762  011A86  C076  FFD9         	movff	CANsendMessage@data,fsr2l
 16763  011A8A  C077  FFDA         	movff	CANsendMessage@data+1,fsr2h
 16764  011A8E  50DF               	movf	indf2,w,c
 16765  011A90  010F               	movlb	15	; () banked
 16766  011A92  6F26               	movwf	38,b	;volatile
 16767                           
 16768                           ; BSR set to: 15
 16769                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 16770  011A94  0100               	movlb	0	; () banked
 16771  011A96  EE20 F001          	lfsr	2,1
 16772  011A9A  5176               	movf	CANsendMessage@data& (0+255),w,b
 16773  011A9C  26D9               	addwf	fsr2l,f,c
 16774  011A9E  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16775  011AA0  22DA               	addwfc	fsr2h,f,c
 16776  011AA2  50DF               	movf	indf2,w,c
 16777  011AA4  010F               	movlb	15	; () banked
 16778  011AA6  6F27               	movwf	39,b	;volatile
 16779                           
 16780                           ; BSR set to: 15
 16781                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 16782  011AA8  0100               	movlb	0	; () banked
 16783  011AAA  EE20 F002          	lfsr	2,2
 16784  011AAE  5176               	movf	CANsendMessage@data& (0+255),w,b
 16785  011AB0  26D9               	addwf	fsr2l,f,c
 16786  011AB2  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16787  011AB4  22DA               	addwfc	fsr2h,f,c
 16788  011AB6  50DF               	movf	indf2,w,c
 16789  011AB8  010F               	movlb	15	; () banked
 16790  011ABA  6F28               	movwf	40,b	;volatile
 16791                           
 16792                           ; BSR set to: 15
 16793                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 16794  011ABC  0100               	movlb	0	; () banked
 16795  011ABE  EE20 F003          	lfsr	2,3
 16796  011AC2  5176               	movf	CANsendMessage@data& (0+255),w,b
 16797  011AC4  26D9               	addwf	fsr2l,f,c
 16798  011AC6  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16799  011AC8  22DA               	addwfc	fsr2h,f,c
 16800  011ACA  50DF               	movf	indf2,w,c
 16801  011ACC  010F               	movlb	15	; () banked
 16802  011ACE  6F29               	movwf	41,b	;volatile
 16803                           
 16804                           ; BSR set to: 15
 16805                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 16806  011AD0  0100               	movlb	0	; () banked
 16807  011AD2  EE20 F004          	lfsr	2,4
 16808  011AD6  5176               	movf	CANsendMessage@data& (0+255),w,b
 16809  011AD8  26D9               	addwf	fsr2l,f,c
 16810  011ADA  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16811  011ADC  22DA               	addwfc	fsr2h,f,c
 16812  011ADE  50DF               	movf	indf2,w,c
 16813  011AE0  010F               	movlb	15	; () banked
 16814  011AE2  6F2A               	movwf	42,b	;volatile
 16815                           
 16816                           ; BSR set to: 15
 16817                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 16818  011AE4  0100               	movlb	0	; () banked
 16819  011AE6  EE20 F005          	lfsr	2,5
 16820  011AEA  5176               	movf	CANsendMessage@data& (0+255),w,b
 16821  011AEC  26D9               	addwf	fsr2l,f,c
 16822  011AEE  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16823  011AF0  22DA               	addwfc	fsr2h,f,c
 16824  011AF2  50DF               	movf	indf2,w,c
 16825  011AF4  010F               	movlb	15	; () banked
 16826  011AF6  6F2B               	movwf	43,b	;volatile
 16827                           
 16828                           ; BSR set to: 15
 16829                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 16830  011AF8  0100               	movlb	0	; () banked
 16831  011AFA  EE20 F006          	lfsr	2,6
 16832  011AFE  5176               	movf	CANsendMessage@data& (0+255),w,b
 16833  011B00  26D9               	addwf	fsr2l,f,c
 16834  011B02  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16835  011B04  22DA               	addwfc	fsr2h,f,c
 16836  011B06  50DF               	movf	indf2,w,c
 16837  011B08  010F               	movlb	15	; () banked
 16838  011B0A  6F2C               	movwf	44,b	;volatile
 16839                           
 16840                           ; BSR set to: 15
 16841                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 16842  011B0C  0100               	movlb	0	; () banked
 16843  011B0E  EE20 F007          	lfsr	2,7
 16844  011B12  5176               	movf	CANsendMessage@data& (0+255),w,b
 16845  011B14  26D9               	addwf	fsr2l,f,c
 16846  011B16  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16847  011B18  22DA               	addwfc	fsr2h,f,c
 16848  011B1A  50DF               	movf	indf2,w,c
 16849  011B1C  010F               	movlb	15	; () banked
 16850  011B1E  6F2D               	movwf	45,b	;volatile
 16851                           
 16852                           ; BSR set to: 15
 16853                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 16854  011B20  010F               	movlb	15	; () banked
 16855  011B22  8720               	bsf	32,3,b	;volatile
 16856                           
 16857                           ; BSR set to: 15
 16858                           ;inc\CANlib.h: 520: return;
 16859  011B24  0012               	return	
 16860  011B26                     __end_of_CANsendMessage:
 16861                           	opt stack 0
 16862                           tblptru	equ	0xFF8
 16863                           tblptrh	equ	0xFF7
 16864                           tblptrl	equ	0xFF6
 16865                           tablat	equ	0xFF5
 16866                           prodh	equ	0xFF4
 16867                           prodl	equ	0xFF3
 16868                           intcon	equ	0xFF2
 16869                           postinc0	equ	0xFEE
 16870                           wreg	equ	0xFE8
 16871                           indf2	equ	0xFDF
 16872                           postinc2	equ	0xFDE
 16873                           fsr2h	equ	0xFDA
 16874                           fsr2l	equ	0xFD9
 16875                           status	equ	0xFD8
 16876                           
 16877 ;; *************** function _CANisTxReady *****************
 16878 ;; Defined at:
 16879 ;;		line 1154 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 16880 ;; Parameters:    Size  Location     Type
 16881 ;;		None
 16882 ;; Auto vars:     Size  Location     Type
 16883 ;;		None
 16884 ;; Return value:  Size  Location     Type
 16885 ;;                  1    wreg      unsigned char 
 16886 ;; Registers used:
 16887 ;;		wreg, status,2
 16888 ;; Tracked objects:
 16889 ;;		On entry : 0/0
 16890 ;;		On exit  : 0/0
 16891 ;;		Unchanged: 0/0
 16892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16894 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16896 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16897 ;;Total ram usage:        1 bytes
 16898 ;; Hardware stack levels used:    1
 16899 ;; Hardware stack levels required when called:    3
 16900 ;; This function calls:
 16901 ;;		Nothing
 16902 ;; This function is called by:
 16903 ;;		_main
 16904 ;;		_CAN_Send
 16905 ;;		_LCD_Handler
 16906 ;; This function uses a non-reentrant model
 16907 ;;
 16908                           
 16909                           	psect	text46
 16910  015D0C                     __ptext46:
 16911                           	opt stack 0
 16912  015D0C                     _CANisTxReady:
 16913                           	opt stack 26
 16914                           
 16915                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 16916                           
 16917                           ; BSR set to: 15
 16918                           ;incstack = 0
 16919  015D0C  0E01               	movlw	1
 16920  015D0E  0100               	movlb	0	; () banked
 16921  015D10  6F72               	movwf	_CANisTxReady$3235& (0+255),b
 16922                           
 16923                           ; BSR set to: 0
 16924  015D12  010F               	movlb	15	; () banked
 16925  015D14  A740               	btfss	64,3,b	;volatile
 16926  015D16  D009               	goto	l568
 16927                           
 16928                           ; BSR set to: 15
 16929  015D18  010F               	movlb	15	; () banked
 16930  015D1A  A730               	btfss	48,3,b	;volatile
 16931  015D1C  D006               	goto	l568
 16932                           
 16933                           ; BSR set to: 15
 16934  015D1E  010F               	movlb	15	; () banked
 16935  015D20  A720               	btfss	32,3,b	;volatile
 16936  015D22  D003               	goto	l568
 16937                           
 16938                           ; BSR set to: 15
 16939  015D24  0E00               	movlw	0
 16940  015D26  0100               	movlb	0	; () banked
 16941  015D28  6F72               	movwf	_CANisTxReady$3235& (0+255),b
 16942  015D2A                     l568:
 16943  015D2A  0100               	movlb	0	; () banked
 16944  015D2C  5172               	movf	_CANisTxReady$3235& (0+255),w,b
 16945  015D2E  0012               	return	
 16946  015D30                     __end_of_CANisTxReady:
 16947                           	opt stack 0
 16948                           tblptru	equ	0xFF8
 16949                           tblptrh	equ	0xFF7
 16950                           tblptrl	equ	0xFF6
 16951                           tablat	equ	0xFF5
 16952                           prodh	equ	0xFF4
 16953                           prodl	equ	0xFF3
 16954                           intcon	equ	0xFF2
 16955                           postinc0	equ	0xFEE
 16956                           wreg	equ	0xFE8
 16957                           indf2	equ	0xFDF
 16958                           postinc2	equ	0xFDE
 16959                           fsr2h	equ	0xFDA
 16960                           fsr2l	equ	0xFD9
 16961                           status	equ	0xFD8
 16962                           
 16963 ;; *************** function _ISR_bassa *****************
 16964 ;; Defined at:
 16965 ;;		line 138 in file "RemoteCan.c"
 16966 ;; Parameters:    Size  Location     Type
 16967 ;;		None
 16968 ;; Auto vars:     Size  Location     Type
 16969 ;;		None
 16970 ;; Return value:  Size  Location     Type
 16971 ;;		None               void
 16972 ;; Registers used:
 16973 ;;		wreg, status,2, status,0
 16974 ;; Tracked objects:
 16975 ;;		On entry : 0/0
 16976 ;;		On exit  : 0/0
 16977 ;;		Unchanged: 0/0
 16978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16981 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16982 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16983 ;;Total ram usage:       17 bytes
 16984 ;; Hardware stack levels used:    1
 16985 ;; Hardware stack levels required when called:    2
 16986 ;; This function calls:
 16987 ;;		Nothing
 16988 ;; This function is called by:
 16989 ;;		Interrupt level 1
 16990 ;; This function uses a non-reentrant model
 16991 ;;
 16992                           
 16993                           	psect	intcodelo
 16994  000018                     __pintcodelo:
 16995                           	opt stack 0
 16996  000018                     _ISR_bassa:
 16997                           	opt stack 21
 16998                           
 16999                           ; BSR set to: 0
 17000                           ;incstack = 0
 17001  000018  804D               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 17002  00001A  CFD8 F02D          	movff	status,??_ISR_bassa
 17003  00001E  CFE8 F02E          	movff	wreg,??_ISR_bassa+1
 17004  000022  CFE0 F02F          	movff	bsr,??_ISR_bassa+2
 17005  000026  CFFA F030          	movff	pclath,??_ISR_bassa+3
 17006  00002A  CFFB F031          	movff	pclatu,??_ISR_bassa+4
 17007  00002E  CFE9 F032          	movff	fsr0l,??_ISR_bassa+5
 17008  000032  CFEA F033          	movff	fsr0h,??_ISR_bassa+6
 17009  000036  CFE1 F034          	movff	fsr1l,??_ISR_bassa+7
 17010  00003A  CFE2 F035          	movff	fsr1h,??_ISR_bassa+8
 17011  00003E  CFD9 F036          	movff	fsr2l,??_ISR_bassa+9
 17012  000042  CFDA F037          	movff	fsr2h,??_ISR_bassa+10
 17013  000046  CFF3 F038          	movff	prodl,??_ISR_bassa+11
 17014  00004A  CFF4 F039          	movff	prodh,??_ISR_bassa+12
 17015  00004E  CFF6 F03A          	movff	tblptrl,??_ISR_bassa+13
 17016  000052  CFF7 F03B          	movff	tblptrh,??_ISR_bassa+14
 17017  000056  CFF8 F03C          	movff	tblptru,??_ISR_bassa+15
 17018  00005A  CFF5 F03D          	movff	tablat,??_ISR_bassa+16
 17019                           
 17020                           ;RemoteCan.c: 139: if (PIR2bits.TMR3IF == 1) {
 17021  00005E  A2A1               	btfss	4001,1,c	;volatile
 17022  000060  D00B               	goto	i1l766
 17023                           
 17024                           ;RemoteCan.c: 140: time_counter++;
 17025  000062  0E01               	movlw	1
 17026  000064  2622               	addwf	_time_counter,f,c	;volatile
 17027  000066  0E00               	movlw	0
 17028  000068  2223               	addwfc	_time_counter+1,f,c	;volatile
 17029  00006A  2224               	addwfc	_time_counter+2,f,c	;volatile
 17030  00006C  2225               	addwfc	_time_counter+3,f,c	;volatile
 17031                           
 17032                           ;RemoteCan.c: 141: TMR3H = 0x63;
 17033  00006E  0E63               	movlw	99
 17034  000070  6EB3               	movwf	4019,c	;volatile
 17035                           
 17036                           ;RemoteCan.c: 142: TMR3L = 0xC0;
 17037  000072  0EC0               	movlw	192
 17038  000074  6EB2               	movwf	4018,c	;volatile
 17039                           
 17040                           ;RemoteCan.c: 143: PIR2bits.TMR3IF = 0;
 17041  000076  92A1               	bcf	4001,1,c	;volatile
 17042  000078                     i1l766:
 17043  000078  C03D  FFF5         	movff	??_ISR_bassa+16,tablat
 17044  00007C  C03C  FFF8         	movff	??_ISR_bassa+15,tblptru
 17045  000080  C03B  FFF7         	movff	??_ISR_bassa+14,tblptrh
 17046  000084  C03A  FFF6         	movff	??_ISR_bassa+13,tblptrl
 17047  000088  C039  FFF4         	movff	??_ISR_bassa+12,prodh
 17048  00008C  C038  FFF3         	movff	??_ISR_bassa+11,prodl
 17049  000090  C037  FFDA         	movff	??_ISR_bassa+10,fsr2h
 17050  000094  C036  FFD9         	movff	??_ISR_bassa+9,fsr2l
 17051  000098  C035  FFE2         	movff	??_ISR_bassa+8,fsr1h
 17052  00009C  C034  FFE1         	movff	??_ISR_bassa+7,fsr1l
 17053  0000A0  C033  FFEA         	movff	??_ISR_bassa+6,fsr0h
 17054  0000A4  C032  FFE9         	movff	??_ISR_bassa+5,fsr0l
 17055  0000A8  C031  FFFB         	movff	??_ISR_bassa+4,pclatu
 17056  0000AC  C030  FFFA         	movff	??_ISR_bassa+3,pclath
 17057  0000B0  C02F  FFE0         	movff	??_ISR_bassa+2,bsr
 17058  0000B4  C02E  FFE8         	movff	??_ISR_bassa+1,wreg
 17059  0000B8  C02D  FFD8         	movff	??_ISR_bassa,status
 17060  0000BC  904D               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 17061  0000BE  0010               	retfie	
 17062  0000C0                     __end_of_ISR_bassa:
 17063                           	opt stack 0
 17064                           pclatu	equ	0xFFB
 17065                           pclath	equ	0xFFA
 17066                           tblptru	equ	0xFF8
 17067                           tblptrh	equ	0xFF7
 17068                           tblptrl	equ	0xFF6
 17069                           tablat	equ	0xFF5
 17070                           prodh	equ	0xFF4
 17071                           prodl	equ	0xFF3
 17072                           intcon	equ	0xFF2
 17073                           postinc0	equ	0xFEE
 17074                           fsr0h	equ	0xFEA
 17075                           fsr0l	equ	0xFE9
 17076                           wreg	equ	0xFE8
 17077                           fsr1h	equ	0xFE2
 17078                           fsr1l	equ	0xFE1
 17079                           bsr	equ	0xFE0
 17080                           indf2	equ	0xFDF
 17081                           postinc2	equ	0xFDE
 17082                           fsr2h	equ	0xFDA
 17083                           fsr2l	equ	0xFD9
 17084                           status	equ	0xFD8
 17085                           
 17086 ;; *************** function _ISR_alta *****************
 17087 ;; Defined at:
 17088 ;;		line 103 in file "RemoteCan.c"
 17089 ;; Parameters:    Size  Location     Type
 17090 ;;		None
 17091 ;; Auto vars:     Size  Location     Type
 17092 ;;  i               1   29[COMRAM] unsigned char 
 17093 ;; Return value:  Size  Location     Type
 17094 ;;		None               void
 17095 ;; Registers used:
 17096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17097 ;; Tracked objects:
 17098 ;;		On entry : 0/0
 17099 ;;		On exit  : 0/0
 17100 ;;		Unchanged: 0/0
 17101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17103 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17104 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17105 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17106 ;;Total ram usage:       15 bytes
 17107 ;; Hardware stack levels used:    1
 17108 ;; Hardware stack levels required when called:    1
 17109 ;; This function calls:
 17110 ;;		_CANisRxReady
 17111 ;;		_CANreceiveMessage
 17112 ;;		i2_CANisTxReady
 17113 ;;		i2_CANsendMessage
 17114 ;; This function is called by:
 17115 ;;		Interrupt level 2
 17116 ;; This function uses a non-reentrant model
 17117 ;;
 17118                           
 17119                           	psect	intcode
 17120  000008                     __pintcode:
 17121                           	opt stack 0
 17122  000008                     _ISR_alta:
 17123                           	opt stack 21
 17124                           
 17125                           ;incstack = 0
 17126  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 17127  00000A  CFFA F064          	movff	pclath,??_ISR_alta
 17128  00000E  CFFB F065          	movff	pclatu,??_ISR_alta+1
 17129  000012  EFBF  F0A8         	goto	int_func
 17130                           pclatu	equ	0xFFB
 17131                           pclath	equ	0xFFA
 17132                           tblptru	equ	0xFF8
 17133                           tblptrh	equ	0xFF7
 17134                           tblptrl	equ	0xFF6
 17135                           tablat	equ	0xFF5
 17136                           prodh	equ	0xFF4
 17137                           prodl	equ	0xFF3
 17138                           intcon	equ	0xFF2
 17139                           postinc0	equ	0xFEE
 17140                           fsr0h	equ	0xFEA
 17141                           fsr0l	equ	0xFE9
 17142                           wreg	equ	0xFE8
 17143                           fsr1h	equ	0xFE2
 17144                           fsr1l	equ	0xFE1
 17145                           bsr	equ	0xFE0
 17146                           indf2	equ	0xFDF
 17147                           postinc2	equ	0xFDE
 17148                           fsr2h	equ	0xFDA
 17149                           fsr2l	equ	0xFD9
 17150                           status	equ	0xFD8
 17151                           
 17152                           	psect	intcode_body
 17153  01517E                     __pintcode_body:
 17154                           	opt stack 21
 17155  01517E                     int_func:
 17156                           	opt stack 21
 17157  01517E  CFE9 F066          	movff	fsr0l,??_ISR_alta+2
 17158  015182  CFEA F067          	movff	fsr0h,??_ISR_alta+3
 17159  015186  CFE1 F068          	movff	fsr1l,??_ISR_alta+4
 17160  01518A  CFE2 F069          	movff	fsr1h,??_ISR_alta+5
 17161  01518E  CFD9 F06A          	movff	fsr2l,??_ISR_alta+6
 17162  015192  CFDA F06B          	movff	fsr2h,??_ISR_alta+7
 17163  015196  CFF3 F06C          	movff	prodl,??_ISR_alta+8
 17164  01519A  CFF4 F06D          	movff	prodh,??_ISR_alta+9
 17165  01519E  CFF6 F06E          	movff	tblptrl,??_ISR_alta+10
 17166  0151A2  CFF7 F06F          	movff	tblptrh,??_ISR_alta+11
 17167  0151A6  CFF8 F070          	movff	tblptru,??_ISR_alta+12
 17168  0151AA  CFF5 F071          	movff	tablat,??_ISR_alta+13
 17169                           
 17170                           ;RemoteCan.c: 104: if ((PIR3bits.RXB1IF == 1) || (PIR3bits.RXB0IF == 1)) {
 17171  0151AE  A2A4               	btfss	4004,1,c	;volatile
 17172  0151B0  B0A4               	btfsc	4004,0,c	;volatile
 17173  0151B2  D001               	goto	i2l8830
 17174  0151B4  D06C               	goto	i2l762
 17175  0151B6                     i2l8830:
 17176                           
 17177                           ;RemoteCan.c: 105: if (CANisRxReady()) {
 17178  0151B6  ECFB  F0AE         	call	_CANisRxReady	;wreg free
 17179  0151BA  0900               	iorlw	0
 17180  0151BC  B4D8               	btfsc	status,2,c
 17181  0151BE  D063               	goto	i2l8868
 17182                           
 17183                           ;RemoteCan.c: 106: CANreceiveMessage(&msg);
 17184  0151C0  0E00               	movlw	low _msg
 17185  0151C2  6E3E               	movwf	CANreceiveMessage@msg,c
 17186  0151C4  0E01               	movlw	high _msg
 17187  0151C6  6E3F               	movwf	CANreceiveMessage@msg+1,c
 17188  0151C8  EC9F  F096         	call	_CANreceiveMessage	;wreg free
 17189                           
 17190                           ;RemoteCan.c: 107: RTR_Flag = msg.RTR;
 17191  0151CC  0101               	movlb	1	; () banked
 17192  0151CE  A10E               	btfss	(_msg+14)& (0+255),0,b
 17193  0151D0  D002               	goto	i2u1177_40
 17194  0151D2  884B               	bsf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 17195  0151D4  D001               	goto	i2l8836
 17196  0151D6                     i2u1177_40:
 17197  0151D6  984B               	bcf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 17198  0151D8                     i2l8836:
 17199                           
 17200                           ;RemoteCan.c: 108: id = msg.identifier;
 17201  0151D8  C100  F012         	movff	_msg,_id	;volatile
 17202  0151DC  C101  F013         	movff	_msg+1,_id+1	;volatile
 17203  0151E0  C102  F014         	movff	_msg+2,_id+2	;volatile
 17204  0151E4  C103  F015         	movff	_msg+3,_id+3	;volatile
 17205                           
 17206                           ;RemoteCan.c: 109: newMessageCan = 1;
 17207  0151E8  8E4B               	bsf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
 17208                           
 17209                           ;RemoteCan.c: 110: if (id == 0b00000000110) {
 17210  0151EA  0E06               	movlw	6
 17211  0151EC  1812               	xorwf	_id,w,c	;volatile
 17212  0151EE  1013               	iorwf	_id+1,w,c	;volatile
 17213  0151F0  1014               	iorwf	_id+2,w,c	;volatile
 17214  0151F2  1015               	iorwf	_id+3,w,c	;volatile
 17215  0151F4  A4D8               	btfss	status,2,c
 17216  0151F6  D01A               	goto	i2l8854
 17217                           
 17218                           ;RemoteCan.c: 111: for (unsigned char i = 0; i < 8; i++) {
 17219  0151F8  0E00               	movlw	0
 17220  0151FA  6E4A               	movwf	ISR_alta@i,c
 17221  0151FC                     i2l8844:
 17222  0151FC  0E07               	movlw	7
 17223  0151FE  644A               	cpfsgt	ISR_alta@i,c
 17224  015200  D001               	goto	i2l8848
 17225  015202  D014               	goto	i2l8854
 17226  015204                     i2l8848:
 17227                           
 17228                           ;RemoteCan.c: 112: data_speed_rx[i] = msg.data[i];
 17229  015204  504A               	movf	ISR_alta@i,w,c
 17230  015206  0D01               	mullw	1
 17231  015208  0E04               	movlw	low (_msg+4)
 17232  01520A  24F3               	addwf	prodl,w,c
 17233  01520C  6ED9               	movwf	fsr2l,c
 17234  01520E  0E01               	movlw	high (_msg+4)
 17235  015210  20F4               	addwfc	prodh,w,c
 17236  015212  6EDA               	movwf	fsr2h,c
 17237  015214  504A               	movf	ISR_alta@i,w,c
 17238  015216  0D01               	mullw	1
 17239  015218  0E01               	movlw	low _data_speed_rx
 17240  01521A  24F3               	addwf	prodl,w,c
 17241  01521C  6EE1               	movwf	fsr1l,c
 17242  01521E  0E00               	movlw	high _data_speed_rx
 17243  015220  20F4               	addwfc	prodh,w,c
 17244  015222  6EE2               	movwf	fsr1h,c
 17245  015224  CFDF FFE7          	movff	indf2,indf1
 17246  015228  2A4A               	incf	ISR_alta@i,f,c
 17247  01522A  D7E8               	goto	i2l8844
 17248  01522C                     i2l8854:
 17249                           
 17250                           ;RemoteCan.c: 113: }
 17251                           ;RemoteCan.c: 114: }
 17252                           ;RemoteCan.c: 115: if (id == 0b00000000010) {
 17253  01522C  0E02               	movlw	2
 17254  01522E  1812               	xorwf	_id,w,c	;volatile
 17255  015230  1013               	iorwf	_id+1,w,c	;volatile
 17256  015232  1014               	iorwf	_id+2,w,c	;volatile
 17257  015234  1015               	iorwf	_id+3,w,c	;volatile
 17258  015236  B4D8               	btfsc	status,2,c
 17259                           
 17260                           ;RemoteCan.c: 116: if (RTR_Flag == 1) {
 17261  015238  A84B               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 17262  01523A  D025               	goto	i2l8868
 17263                           
 17264                           ;RemoteCan.c: 117: pr_time_4 = time_counter;
 17265  01523C  C022  F01A         	movff	_time_counter,_pr_time_4	;volatile
 17266  015240  C023  F01B         	movff	_time_counter+1,_pr_time_4+1	;volatile
 17267  015244  C024  F01C         	movff	_time_counter+2,_pr_time_4+2	;volatile
 17268  015248  C025  F01D         	movff	_time_counter+3,_pr_time_4+3	;volatile
 17269                           
 17270                           ;RemoteCan.c: 118: data[0] = 0x03;
 17271  01524C  0E03               	movlw	3
 17272  01524E  6E2C               	movwf	_data,c
 17273                           
 17274                           ;RemoteCan.c: 119: _delay((unsigned long)((10)*(16000000/4000000.0)));
 17275  015250  0E0D               	movlw	13
 17276  015252                     i2u1210_47:
 17277  015252  2EE8               	decfsz	wreg,f,c
 17278  015254  D7FE               	goto	i2u1210_47
 17279  015256  F000               	nop	
 17280  015258                     i2l8864:
 17281  015258  ECA9  F0AE         	call	i2_CANisTxReady	;wreg free
 17282  01525C  06E8               	decf	wreg,f,c
 17283  01525E  A4D8               	btfss	status,2,c
 17284  015260  D7FB               	goto	i2l8864
 17285                           
 17286                           ;RemoteCan.c: 121: CANsendMessage(0b00000000010, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
 17287  015262  0E02               	movlw	2
 17288  015264  6E3E               	movwf	i2CANsendMessage@identifier,c
 17289  015266  0E00               	movlw	0
 17290  015268  6E3F               	movwf	i2CANsendMessage@identifier+1,c
 17291  01526A  0E00               	movlw	0
 17292  01526C  6E40               	movwf	i2CANsendMessage@identifier+2,c
 17293  01526E  0E00               	movlw	0
 17294  015270  6E41               	movwf	i2CANsendMessage@identifier+3,c
 17295  015272  0E2C               	movlw	low _data
 17296  015274  6E42               	movwf	i2CANsendMessage@data,c
 17297  015276  0E00               	movlw	high _data
 17298  015278  6E43               	movwf	i2CANsendMessage@data+1,c
 17299  01527A  0E08               	movlw	8
 17300  01527C  6E44               	movwf	i2CANsendMessage@dataLength,c
 17301  01527E  0EBC               	movlw	188
 17302  015280  6E45               	movwf	i2CANsendMessage@flags,c
 17303  015282  EC93  F08D         	call	i2_CANsendMessage	;wreg free
 17304  015286                     i2l8868:
 17305                           
 17306                           ;RemoteCan.c: 127: }
 17307                           ;RemoteCan.c: 129: }
 17308                           ;RemoteCan.c: 130: }
 17309                           ;RemoteCan.c: 131: LATDbits.LATD2 = 1;
 17310  015286  848C               	bsf	3980,2,c	;volatile
 17311                           
 17312                           ;RemoteCan.c: 132: LATDbits.LATD3 = 1;
 17313  015288  868C               	bsf	3980,3,c	;volatile
 17314                           
 17315                           ;RemoteCan.c: 133: PIR3bits.RXB1IF = 0;
 17316  01528A  92A4               	bcf	4004,1,c	;volatile
 17317                           
 17318                           ;RemoteCan.c: 134: PIR3bits.RXB0IF = 0;
 17319  01528C  90A4               	bcf	4004,0,c	;volatile
 17320  01528E                     i2l762:
 17321  01528E  C071  FFF5         	movff	??_ISR_alta+13,tablat
 17322  015292  C070  FFF8         	movff	??_ISR_alta+12,tblptru
 17323  015296  C06F  FFF7         	movff	??_ISR_alta+11,tblptrh
 17324  01529A  C06E  FFF6         	movff	??_ISR_alta+10,tblptrl
 17325  01529E  C06D  FFF4         	movff	??_ISR_alta+9,prodh
 17326  0152A2  C06C  FFF3         	movff	??_ISR_alta+8,prodl
 17327  0152A6  C06B  FFDA         	movff	??_ISR_alta+7,fsr2h
 17328  0152AA  C06A  FFD9         	movff	??_ISR_alta+6,fsr2l
 17329  0152AE  C069  FFE2         	movff	??_ISR_alta+5,fsr1h
 17330  0152B2  C068  FFE1         	movff	??_ISR_alta+4,fsr1l
 17331  0152B6  C067  FFEA         	movff	??_ISR_alta+3,fsr0h
 17332  0152BA  C066  FFE9         	movff	??_ISR_alta+2,fsr0l
 17333  0152BE  C065  FFFB         	movff	??_ISR_alta+1,pclatu
 17334  0152C2  C064  FFFA         	movff	??_ISR_alta,pclath
 17335  0152C6  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 17336  0152C8  0011               	retfie		f
 17337  0152CA                     __end_of_ISR_alta:
 17338                           	opt stack 0
 17339                           pclatu	equ	0xFFB
 17340                           pclath	equ	0xFFA
 17341                           tblptru	equ	0xFF8
 17342                           tblptrh	equ	0xFF7
 17343                           tblptrl	equ	0xFF6
 17344                           tablat	equ	0xFF5
 17345                           prodh	equ	0xFF4
 17346                           prodl	equ	0xFF3
 17347                           intcon	equ	0xFF2
 17348                           postinc0	equ	0xFEE
 17349                           fsr0h	equ	0xFEA
 17350                           fsr0l	equ	0xFE9
 17351                           wreg	equ	0xFE8
 17352                           indf1	equ	0xFE7
 17353                           fsr1h	equ	0xFE2
 17354                           fsr1l	equ	0xFE1
 17355                           bsr	equ	0xFE0
 17356                           indf2	equ	0xFDF
 17357                           postinc2	equ	0xFDE
 17358                           fsr2h	equ	0xFDA
 17359                           fsr2l	equ	0xFD9
 17360                           status	equ	0xFD8
 17361                           
 17362 ;; *************** function i2_CANsendMessage *****************
 17363 ;; Defined at:
 17364 ;;		line 294 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 17365 ;; Parameters:    Size  Location     Type
 17366 ;;  identifier      4   17[COMRAM] unsigned long 
 17367 ;;  data            2   21[COMRAM] PTR unsigned char 
 17368 ;;		 -> data_speed(1), park_assist_state(8), data_brake(1), data_steering(1), 
 17369 ;;		 -> data(1), 
 17370 ;;  dataLength      1   23[COMRAM] unsigned char 
 17371 ;;  flags           1   24[COMRAM] enum E16909
 17372 ;; Auto vars:     Size  Location     Type
 17373 ;;  CANsendMessa    4    0[BANK0 ] unsigned long 
 17374 ;; Return value:  Size  Location     Type
 17375 ;;		None               void
 17376 ;; Registers used:
 17377 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17378 ;; Tracked objects:
 17379 ;;		On entry : 0/0
 17380 ;;		On exit  : 0/0
 17381 ;;		Unchanged: 0/0
 17382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17383 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17384 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17385 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17386 ;;      Totals:        12       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17387 ;;Total ram usage:       16 bytes
 17388 ;; Hardware stack levels used:    1
 17389 ;; This function calls:
 17390 ;;		Nothing
 17391 ;; This function is called by:
 17392 ;;		_ISR_alta
 17393 ;; This function uses a non-reentrant model
 17394 ;;
 17395                           
 17396                           	psect	text49
 17397  011B26                     __ptext49:
 17398                           	opt stack 0
 17399  011B26                     i2_CANsendMessage:
 17400                           	opt stack 21
 17401                           
 17402                           ;inc\CANlib.h: 296: unsigned long tamp;
 17403                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 17404                           
 17405                           ;incstack = 0
 17406  011B26  010F               	movlb	15	; () banked
 17407  011B28  B740               	btfsc	64,3,b	;volatile
 17408  011B2A  D122               	goto	i2l375
 17409                           
 17410                           ; BSR set to: 15
 17411                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 17412  011B2C  C044  FF45         	movff	i2CANsendMessage@dataLength,3909	;volatile
 17413                           
 17414                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 17415  011B30  AC45               	btfss	i2CANsendMessage@flags,6,c
 17416  011B32  D003               	goto	i2l376
 17417                           
 17418                           ; BSR set to: 15
 17419                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 17420  011B34  010F               	movlb	15	; () banked
 17421  011B36  8D45               	bsf	69,6,b	;volatile
 17422  011B38  D002               	goto	i2l377
 17423  011B3A                     i2l376:
 17424                           
 17425                           ; BSR set to: 15
 17426                           ;inc\CANlib.h: 302: else
 17427                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 17428  011B3A  010F               	movlb	15	; () banked
 17429  011B3C  9D45               	bcf	69,6,b	;volatile
 17430  011B3E                     i2l377:
 17431                           
 17432                           ; BSR set to: 15
 17433                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 17434  011B3E  A645               	btfss	i2CANsendMessage@flags,3,c
 17435  011B40  D06D               	goto	i2l378
 17436                           
 17437                           ; BSR set to: 15
 17438                           ;inc\CANlib.h: 306: {
 17439                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 17440  011B42  503E               	movf	i2CANsendMessage@identifier,w,c
 17441  011B44  0100               	movlb	0	; () banked
 17442  011B46  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 17443  011B48  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 17444  011B4A  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 17445  011B4C  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 17446                           
 17447                           ; BSR set to: 0
 17448                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 17449  011B4E  C060  FF44         	movff	i2CANsendMessage@tamp,3908	;volatile
 17450                           
 17451                           ; BSR set to: 0
 17452                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 17453  011B52  0E00               	movlw	0
 17454  011B54  143E               	andwf	i2CANsendMessage@identifier,w,c
 17455  011B56  0100               	movlb	0	; () banked
 17456  011B58  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 17457  011B5A  0EFF               	movlw	255
 17458  011B5C  143F               	andwf	i2CANsendMessage@identifier+1,w,c
 17459  011B5E  0100               	movlb	0	; () banked
 17460  011B60  6F61               	movwf	(i2CANsendMessage@tamp+1)& (0+255),b
 17461  011B62  0E00               	movlw	0
 17462  011B64  1440               	andwf	i2CANsendMessage@identifier+2,w,c
 17463  011B66  0100               	movlb	0	; () banked
 17464  011B68  6F62               	movwf	(i2CANsendMessage@tamp+2)& (0+255),b
 17465  011B6A  0E00               	movlw	0
 17466  011B6C  1441               	andwf	i2CANsendMessage@identifier+3,w,c
 17467  011B6E  0100               	movlb	0	; () banked
 17468  011B70  6F63               	movwf	(i2CANsendMessage@tamp+3)& (0+255),b
 17469                           
 17470                           ; BSR set to: 0
 17471                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 17472  011B72  C060  F046         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 17473  011B76  C061  F047         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 17474  011B7A  C062  F048         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 17475  011B7E  C063  F049         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 17476  011B82  C047  F046         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 17477  011B86  C048  F047         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 17478  011B8A  C049  F048         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 17479  011B8E  6A49               	clrf	??i2_CANsendMessage+3,c
 17480  011B90  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17481  011B94  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17482  011B98  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17483  011B9C  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17484                           
 17485                           ; BSR set to: 0
 17486                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 17487  011BA0  C060  FF43         	movff	i2CANsendMessage@tamp,3907	;volatile
 17488                           
 17489                           ; BSR set to: 0
 17490                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 17491  011BA4  0E00               	movlw	0
 17492  011BA6  010F               	movlb	15	; () banked
 17493  011BA8  6F42               	movwf	66,b	;volatile
 17494                           
 17495                           ; BSR set to: 15
 17496                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 17497  011BAA  010F               	movlb	15	; () banked
 17498  011BAC  8742               	bsf	66,3,b	;volatile
 17499                           
 17500                           ; BSR set to: 15
 17501                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 17502  011BAE  A040               	btfss	i2CANsendMessage@identifier+2,0,c
 17503  011BB0  D002               	goto	i2l379
 17504                           
 17505                           ; BSR set to: 15
 17506                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 17507  011BB2  010F               	movlb	15	; () banked
 17508  011BB4  8142               	bsf	66,0,b	;volatile
 17509  011BB6                     i2l379:
 17510                           
 17511                           ; BSR set to: 15
 17512                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 17513  011BB6  A240               	btfss	i2CANsendMessage@identifier+2,1,c
 17514  011BB8  D002               	goto	i2l380
 17515                           
 17516                           ; BSR set to: 15
 17517                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 17518  011BBA  010F               	movlb	15	; () banked
 17519  011BBC  8342               	bsf	66,1,b	;volatile
 17520  011BBE                     i2l380:
 17521                           
 17522                           ; BSR set to: 15
 17523                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 17524  011BBE  A440               	btfss	i2CANsendMessage@identifier+2,2,c
 17525  011BC0  D002               	goto	i2l381
 17526                           
 17527                           ; BSR set to: 15
 17528                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 17529  011BC2  010F               	movlb	15	; () banked
 17530  011BC4  8B42               	bsf	66,5,b	;volatile
 17531  011BC6                     i2l381:
 17532                           
 17533                           ; BSR set to: 15
 17534                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 17535  011BC6  A640               	btfss	i2CANsendMessage@identifier+2,3,c
 17536  011BC8  D002               	goto	i2l382
 17537                           
 17538                           ; BSR set to: 15
 17539                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 17540  011BCA  010F               	movlb	15	; () banked
 17541  011BCC  8D42               	bsf	66,6,b	;volatile
 17542  011BCE                     i2l382:
 17543                           
 17544                           ; BSR set to: 15
 17545                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 17546  011BCE  A840               	btfss	i2CANsendMessage@identifier+2,4,c
 17547  011BD0  D002               	goto	i2l8578
 17548                           
 17549                           ; BSR set to: 15
 17550                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 17551  011BD2  010F               	movlb	15	; () banked
 17552  011BD4  8F42               	bsf	66,7,b	;volatile
 17553  011BD6                     i2l8578:
 17554                           
 17555                           ; BSR set to: 15
 17556                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 17557  011BD6  C03E  F046         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 17558  011BDA  C03F  F047         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 17559  011BDE  C040  F048         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 17560  011BE2  C041  F049         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 17561  011BE6  0E16               	movlw	22
 17562  011BE8  D005               	goto	i2u1134_40
 17563  011BEA                     i2u1134_45:
 17564  011BEA  90D8               	bcf	status,0,c
 17565  011BEC  3249               	rrcf	??i2_CANsendMessage+3,f,c
 17566  011BEE  3248               	rrcf	??i2_CANsendMessage+2,f,c
 17567  011BF0  3247               	rrcf	??i2_CANsendMessage+1,f,c
 17568  011BF2  3246               	rrcf	??i2_CANsendMessage,f,c
 17569  011BF4                     i2u1134_40:
 17570  011BF4  2EE8               	decfsz	wreg,f,c
 17571  011BF6  D7F9               	goto	i2u1134_45
 17572  011BF8  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17573  011BFC  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17574  011C00  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17575  011C04  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17576                           
 17577                           ; BSR set to: 15
 17578                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 17579  011C08  0100               	movlb	0	; () banked
 17580  011C0A  5160               	movf	i2CANsendMessage@tamp& (0+255),w,b
 17581  011C0C  0100               	movlb	0	; () banked
 17582  011C0E  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 17583  011C10  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 17584  011C12  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 17585  011C14  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 17586                           
 17587                           ; BSR set to: 0
 17588                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 17589  011C16  C060  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 17590                           
 17591                           ;inc\CANlib.h: 332: }
 17592  011C1A  D053               	goto	i2l8598
 17593  011C1C                     i2l378:
 17594                           
 17595                           ; BSR set to: 15
 17596                           ;inc\CANlib.h: 334: else
 17597                           ;inc\CANlib.h: 336: {
 17598                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 17599  011C1C  010F               	movlb	15	; () banked
 17600  011C1E  9742               	bcf	66,3,b	;volatile
 17601                           
 17602                           ; BSR set to: 15
 17603                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 17604  011C20  C03E  F046         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 17605  011C24  C03F  F047         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 17606  011C28  C040  F048         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 17607  011C2C  C041  F049         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 17608  011C30  0E04               	movlw	4
 17609  011C32  D005               	goto	i2u1135_40
 17610  011C34                     i2u1135_45:
 17611  011C34  90D8               	bcf	status,0,c
 17612  011C36  3249               	rrcf	??i2_CANsendMessage+3,f,c
 17613  011C38  3248               	rrcf	??i2_CANsendMessage+2,f,c
 17614  011C3A  3247               	rrcf	??i2_CANsendMessage+1,f,c
 17615  011C3C  3246               	rrcf	??i2_CANsendMessage,f,c
 17616  011C3E                     i2u1135_40:
 17617  011C3E  2EE8               	decfsz	wreg,f,c
 17618  011C40  D7F9               	goto	i2u1135_45
 17619  011C42  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17620  011C46  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17621  011C4A  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17622  011C4E  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17623                           
 17624                           ; BSR set to: 15
 17625                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 17626  011C52  0100               	movlb	0	; () banked
 17627  011C54  5160               	movf	i2CANsendMessage@tamp& (0+255),w,b
 17628  011C56  0100               	movlb	0	; () banked
 17629  011C58  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 17630  011C5A  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 17631  011C5C  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 17632  011C5E  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 17633                           
 17634                           ; BSR set to: 0
 17635                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 17636  011C60  C060  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 17637                           
 17638                           ; BSR set to: 0
 17639                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 17640  011C64  0E07               	movlw	7
 17641  011C66  143E               	andwf	i2CANsendMessage@identifier,w,c
 17642  011C68  0100               	movlb	0	; () banked
 17643  011C6A  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 17644  011C6C  0E00               	movlw	0
 17645  011C6E  143F               	andwf	i2CANsendMessage@identifier+1,w,c
 17646  011C70  0100               	movlb	0	; () banked
 17647  011C72  6F61               	movwf	(i2CANsendMessage@tamp+1)& (0+255),b
 17648  011C74  0E00               	movlw	0
 17649  011C76  1440               	andwf	i2CANsendMessage@identifier+2,w,c
 17650  011C78  0100               	movlb	0	; () banked
 17651  011C7A  6F62               	movwf	(i2CANsendMessage@tamp+2)& (0+255),b
 17652  011C7C  0E00               	movlw	0
 17653  011C7E  1441               	andwf	i2CANsendMessage@identifier+3,w,c
 17654  011C80  0100               	movlb	0	; () banked
 17655  011C82  6F63               	movwf	(i2CANsendMessage@tamp+3)& (0+255),b
 17656                           
 17657                           ; BSR set to: 0
 17658                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 17659  011C84  C060  F046         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 17660  011C88  C061  F047         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 17661  011C8C  C062  F048         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 17662  011C90  C063  F049         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 17663  011C94  0E05               	movlw	5
 17664  011C96                     i2u1136_45:
 17665  011C96  90D8               	bcf	status,0,c
 17666  011C98  3646               	rlcf	??i2_CANsendMessage,f,c
 17667  011C9A  3647               	rlcf	??i2_CANsendMessage+1,f,c
 17668  011C9C  3648               	rlcf	??i2_CANsendMessage+2,f,c
 17669  011C9E  3649               	rlcf	??i2_CANsendMessage+3,f,c
 17670  011CA0  2EE8               	decfsz	wreg,f,c
 17671  011CA2  D7F9               	goto	i2u1136_45
 17672  011CA4  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17673  011CA8  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17674  011CAC  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17675  011CB0  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17676                           
 17677                           ; BSR set to: 0
 17678                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 17679  011CB4  010F               	movlb	15	; () banked
 17680  011CB6  5142               	movf	66,w,b	;volatile
 17681  011CB8  0B1F               	andlw	31
 17682  011CBA  010F               	movlb	15	; () banked
 17683  011CBC  6F42               	movwf	66,b	;volatile
 17684                           
 17685                           ; BSR set to: 15
 17686                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 17687  011CBE  C060  FF42         	movff	i2CANsendMessage@tamp,3906	;volatile
 17688  011CC2                     i2l8598:
 17689                           
 17690                           ;inc\CANlib.h: 347: }
 17691                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 17692  011CC2  A045               	btfss	i2CANsendMessage@flags,0,c
 17693  011CC4  D003               	goto	i2l385
 17694                           
 17695                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 17696  011CC6  010F               	movlb	15	; () banked
 17697  011CC8  8140               	bsf	64,0,b	;volatile
 17698  011CCA  D002               	goto	i2l386
 17699  011CCC                     i2l385:
 17700                           
 17701                           ;inc\CANlib.h: 351: else
 17702                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 17703  011CCC  010F               	movlb	15	; () banked
 17704  011CCE  9140               	bcf	64,0,b	;volatile
 17705  011CD0                     i2l386:
 17706                           
 17707                           ; BSR set to: 15
 17708                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 17709  011CD0  A245               	btfss	i2CANsendMessage@flags,1,c
 17710  011CD2  D003               	goto	i2l387
 17711                           
 17712                           ; BSR set to: 15
 17713                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 17714  011CD4  010F               	movlb	15	; () banked
 17715  011CD6  8340               	bsf	64,1,b	;volatile
 17716  011CD8  D002               	goto	i2l8604
 17717  011CDA                     i2l387:
 17718                           
 17719                           ; BSR set to: 15
 17720                           ;inc\CANlib.h: 355: else
 17721                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 17722  011CDA  010F               	movlb	15	; () banked
 17723  011CDC  9340               	bcf	64,1,b	;volatile
 17724  011CDE                     i2l8604:
 17725                           
 17726                           ; BSR set to: 15
 17727                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 17728  011CDE  C042  FFD9         	movff	i2CANsendMessage@data,fsr2l
 17729  011CE2  C043  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 17730  011CE6  50DF               	movf	indf2,w,c
 17731  011CE8  010F               	movlb	15	; () banked
 17732  011CEA  6F46               	movwf	70,b	;volatile
 17733                           
 17734                           ; BSR set to: 15
 17735                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 17736  011CEC  EE20 F001          	lfsr	2,1
 17737  011CF0  5042               	movf	i2CANsendMessage@data,w,c
 17738  011CF2  26D9               	addwf	fsr2l,f,c
 17739  011CF4  5043               	movf	i2CANsendMessage@data+1,w,c
 17740  011CF6  22DA               	addwfc	fsr2h,f,c
 17741  011CF8  50DF               	movf	indf2,w,c
 17742  011CFA  010F               	movlb	15	; () banked
 17743  011CFC  6F47               	movwf	71,b	;volatile
 17744                           
 17745                           ; BSR set to: 15
 17746                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 17747  011CFE  EE20 F002          	lfsr	2,2
 17748  011D02  5042               	movf	i2CANsendMessage@data,w,c
 17749  011D04  26D9               	addwf	fsr2l,f,c
 17750  011D06  5043               	movf	i2CANsendMessage@data+1,w,c
 17751  011D08  22DA               	addwfc	fsr2h,f,c
 17752  011D0A  50DF               	movf	indf2,w,c
 17753  011D0C  010F               	movlb	15	; () banked
 17754  011D0E  6F48               	movwf	72,b	;volatile
 17755                           
 17756                           ; BSR set to: 15
 17757                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 17758  011D10  EE20 F003          	lfsr	2,3
 17759  011D14  5042               	movf	i2CANsendMessage@data,w,c
 17760  011D16  26D9               	addwf	fsr2l,f,c
 17761  011D18  5043               	movf	i2CANsendMessage@data+1,w,c
 17762  011D1A  22DA               	addwfc	fsr2h,f,c
 17763  011D1C  50DF               	movf	indf2,w,c
 17764  011D1E  010F               	movlb	15	; () banked
 17765  011D20  6F49               	movwf	73,b	;volatile
 17766                           
 17767                           ; BSR set to: 15
 17768                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 17769  011D22  EE20 F004          	lfsr	2,4
 17770  011D26  5042               	movf	i2CANsendMessage@data,w,c
 17771  011D28  26D9               	addwf	fsr2l,f,c
 17772  011D2A  5043               	movf	i2CANsendMessage@data+1,w,c
 17773  011D2C  22DA               	addwfc	fsr2h,f,c
 17774  011D2E  50DF               	movf	indf2,w,c
 17775  011D30  010F               	movlb	15	; () banked
 17776  011D32  6F4A               	movwf	74,b	;volatile
 17777                           
 17778                           ; BSR set to: 15
 17779                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 17780  011D34  EE20 F005          	lfsr	2,5
 17781  011D38  5042               	movf	i2CANsendMessage@data,w,c
 17782  011D3A  26D9               	addwf	fsr2l,f,c
 17783  011D3C  5043               	movf	i2CANsendMessage@data+1,w,c
 17784  011D3E  22DA               	addwfc	fsr2h,f,c
 17785  011D40  50DF               	movf	indf2,w,c
 17786  011D42  010F               	movlb	15	; () banked
 17787  011D44  6F4B               	movwf	75,b	;volatile
 17788                           
 17789                           ; BSR set to: 15
 17790                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 17791  011D46  EE20 F006          	lfsr	2,6
 17792  011D4A  5042               	movf	i2CANsendMessage@data,w,c
 17793  011D4C  26D9               	addwf	fsr2l,f,c
 17794  011D4E  5043               	movf	i2CANsendMessage@data+1,w,c
 17795  011D50  22DA               	addwfc	fsr2h,f,c
 17796  011D52  50DF               	movf	indf2,w,c
 17797  011D54  010F               	movlb	15	; () banked
 17798  011D56  6F4C               	movwf	76,b	;volatile
 17799                           
 17800                           ; BSR set to: 15
 17801                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 17802  011D58  EE20 F007          	lfsr	2,7
 17803  011D5C  5042               	movf	i2CANsendMessage@data,w,c
 17804  011D5E  26D9               	addwf	fsr2l,f,c
 17805  011D60  5043               	movf	i2CANsendMessage@data+1,w,c
 17806  011D62  22DA               	addwfc	fsr2h,f,c
 17807  011D64  50DF               	movf	indf2,w,c
 17808  011D66  010F               	movlb	15	; () banked
 17809  011D68  6F4D               	movwf	77,b	;volatile
 17810                           
 17811                           ; BSR set to: 15
 17812                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 17813  011D6A  010F               	movlb	15	; () banked
 17814  011D6C  8740               	bsf	64,3,b	;volatile
 17815                           
 17816                           ; BSR set to: 15
 17817                           ;inc\CANlib.h: 368: return;
 17818  011D6E  0012               	return	
 17819  011D70                     i2l375:
 17820                           
 17821                           ; BSR set to: 15
 17822                           ;inc\CANlib.h: 369: }
 17823                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 17824  011D70  010F               	movlb	15	; () banked
 17825  011D72  B730               	btfsc	48,3,b	;volatile
 17826  011D74  D122               	goto	i2l390
 17827                           
 17828                           ; BSR set to: 15
 17829                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 17830  011D76  C044  FF35         	movff	i2CANsendMessage@dataLength,3893	;volatile
 17831                           
 17832                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 17833  011D7A  AC45               	btfss	i2CANsendMessage@flags,6,c
 17834  011D7C  D003               	goto	i2l391
 17835                           
 17836                           ; BSR set to: 15
 17837                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 17838  011D7E  010F               	movlb	15	; () banked
 17839  011D80  8D35               	bsf	53,6,b	;volatile
 17840  011D82  D002               	goto	i2l392
 17841  011D84                     i2l391:
 17842                           
 17843                           ; BSR set to: 15
 17844                           ;inc\CANlib.h: 378: else
 17845                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 17846  011D84  010F               	movlb	15	; () banked
 17847  011D86  9D35               	bcf	53,6,b	;volatile
 17848  011D88                     i2l392:
 17849                           
 17850                           ; BSR set to: 15
 17851                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 17852  011D88  A645               	btfss	i2CANsendMessage@flags,3,c
 17853  011D8A  D06D               	goto	i2l393
 17854                           
 17855                           ; BSR set to: 15
 17856                           ;inc\CANlib.h: 382: {
 17857                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 17858  011D8C  503E               	movf	i2CANsendMessage@identifier,w,c
 17859  011D8E  0100               	movlb	0	; () banked
 17860  011D90  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 17861  011D92  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 17862  011D94  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 17863  011D96  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 17864                           
 17865                           ; BSR set to: 0
 17866                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 17867  011D98  C060  FF34         	movff	i2CANsendMessage@tamp,3892	;volatile
 17868                           
 17869                           ; BSR set to: 0
 17870                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 17871  011D9C  0E00               	movlw	0
 17872  011D9E  143E               	andwf	i2CANsendMessage@identifier,w,c
 17873  011DA0  0100               	movlb	0	; () banked
 17874  011DA2  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 17875  011DA4  0EFF               	movlw	255
 17876  011DA6  143F               	andwf	i2CANsendMessage@identifier+1,w,c
 17877  011DA8  0100               	movlb	0	; () banked
 17878  011DAA  6F61               	movwf	(i2CANsendMessage@tamp+1)& (0+255),b
 17879  011DAC  0E00               	movlw	0
 17880  011DAE  1440               	andwf	i2CANsendMessage@identifier+2,w,c
 17881  011DB0  0100               	movlb	0	; () banked
 17882  011DB2  6F62               	movwf	(i2CANsendMessage@tamp+2)& (0+255),b
 17883  011DB4  0E00               	movlw	0
 17884  011DB6  1441               	andwf	i2CANsendMessage@identifier+3,w,c
 17885  011DB8  0100               	movlb	0	; () banked
 17886  011DBA  6F63               	movwf	(i2CANsendMessage@tamp+3)& (0+255),b
 17887                           
 17888                           ; BSR set to: 0
 17889                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 17890  011DBC  C060  F046         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 17891  011DC0  C061  F047         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 17892  011DC4  C062  F048         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 17893  011DC8  C063  F049         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 17894  011DCC  C047  F046         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 17895  011DD0  C048  F047         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 17896  011DD4  C049  F048         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 17897  011DD8  6A49               	clrf	??i2_CANsendMessage+3,c
 17898  011DDA  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17899  011DDE  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17900  011DE2  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17901  011DE6  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17902                           
 17903                           ; BSR set to: 0
 17904                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 17905  011DEA  C060  FF33         	movff	i2CANsendMessage@tamp,3891	;volatile
 17906                           
 17907                           ; BSR set to: 0
 17908                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 17909  011DEE  0E00               	movlw	0
 17910  011DF0  010F               	movlb	15	; () banked
 17911  011DF2  6F32               	movwf	50,b	;volatile
 17912                           
 17913                           ; BSR set to: 15
 17914                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 17915  011DF4  010F               	movlb	15	; () banked
 17916  011DF6  8732               	bsf	50,3,b	;volatile
 17917                           
 17918                           ; BSR set to: 15
 17919                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 17920  011DF8  A040               	btfss	i2CANsendMessage@identifier+2,0,c
 17921  011DFA  D002               	goto	i2l394
 17922                           
 17923                           ; BSR set to: 15
 17924                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 17925  011DFC  010F               	movlb	15	; () banked
 17926  011DFE  8132               	bsf	50,0,b	;volatile
 17927  011E00                     i2l394:
 17928                           
 17929                           ; BSR set to: 15
 17930                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 17931  011E00  A240               	btfss	i2CANsendMessage@identifier+2,1,c
 17932  011E02  D002               	goto	i2l395
 17933                           
 17934                           ; BSR set to: 15
 17935                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 17936  011E04  010F               	movlb	15	; () banked
 17937  011E06  8332               	bsf	50,1,b	;volatile
 17938  011E08                     i2l395:
 17939                           
 17940                           ; BSR set to: 15
 17941                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 17942  011E08  A440               	btfss	i2CANsendMessage@identifier+2,2,c
 17943  011E0A  D002               	goto	i2l396
 17944                           
 17945                           ; BSR set to: 15
 17946                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 17947  011E0C  010F               	movlb	15	; () banked
 17948  011E0E  8B32               	bsf	50,5,b	;volatile
 17949  011E10                     i2l396:
 17950                           
 17951                           ; BSR set to: 15
 17952                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 17953  011E10  A640               	btfss	i2CANsendMessage@identifier+2,3,c
 17954  011E12  D002               	goto	i2l397
 17955                           
 17956                           ; BSR set to: 15
 17957                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 17958  011E14  010F               	movlb	15	; () banked
 17959  011E16  8D32               	bsf	50,6,b	;volatile
 17960  011E18                     i2l397:
 17961                           
 17962                           ; BSR set to: 15
 17963                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 17964  011E18  A840               	btfss	i2CANsendMessage@identifier+2,4,c
 17965  011E1A  D002               	goto	i2l8654
 17966                           
 17967                           ; BSR set to: 15
 17968                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 17969  011E1C  010F               	movlb	15	; () banked
 17970  011E1E  8F32               	bsf	50,7,b	;volatile
 17971  011E20                     i2l8654:
 17972                           
 17973                           ; BSR set to: 15
 17974                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 17975  011E20  C03E  F046         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 17976  011E24  C03F  F047         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 17977  011E28  C040  F048         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 17978  011E2C  C041  F049         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 17979  011E30  0E16               	movlw	22
 17980  011E32  D005               	goto	i2u1147_40
 17981  011E34                     i2u1147_45:
 17982  011E34  90D8               	bcf	status,0,c
 17983  011E36  3249               	rrcf	??i2_CANsendMessage+3,f,c
 17984  011E38  3248               	rrcf	??i2_CANsendMessage+2,f,c
 17985  011E3A  3247               	rrcf	??i2_CANsendMessage+1,f,c
 17986  011E3C  3246               	rrcf	??i2_CANsendMessage,f,c
 17987  011E3E                     i2u1147_40:
 17988  011E3E  2EE8               	decfsz	wreg,f,c
 17989  011E40  D7F9               	goto	i2u1147_45
 17990  011E42  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17991  011E46  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17992  011E4A  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17993  011E4E  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17994                           
 17995                           ; BSR set to: 15
 17996                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 17997  011E52  0100               	movlb	0	; () banked
 17998  011E54  5160               	movf	i2CANsendMessage@tamp& (0+255),w,b
 17999  011E56  0100               	movlb	0	; () banked
 18000  011E58  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 18001  011E5A  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 18002  011E5C  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 18003  011E5E  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 18004                           
 18005                           ; BSR set to: 0
 18006                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 18007  011E60  C060  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 18008                           
 18009                           ;inc\CANlib.h: 407: }
 18010  011E64  D053               	goto	i2l8674
 18011  011E66                     i2l393:
 18012                           
 18013                           ; BSR set to: 15
 18014                           ;inc\CANlib.h: 409: else
 18015                           ;inc\CANlib.h: 411: {
 18016                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 18017  011E66  010F               	movlb	15	; () banked
 18018  011E68  9732               	bcf	50,3,b	;volatile
 18019                           
 18020                           ; BSR set to: 15
 18021                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 18022  011E6A  C03E  F046         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 18023  011E6E  C03F  F047         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 18024  011E72  C040  F048         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 18025  011E76  C041  F049         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 18026  011E7A  0E04               	movlw	4
 18027  011E7C  D005               	goto	i2u1148_40
 18028  011E7E                     i2u1148_45:
 18029  011E7E  90D8               	bcf	status,0,c
 18030  011E80  3249               	rrcf	??i2_CANsendMessage+3,f,c
 18031  011E82  3248               	rrcf	??i2_CANsendMessage+2,f,c
 18032  011E84  3247               	rrcf	??i2_CANsendMessage+1,f,c
 18033  011E86  3246               	rrcf	??i2_CANsendMessage,f,c
 18034  011E88                     i2u1148_40:
 18035  011E88  2EE8               	decfsz	wreg,f,c
 18036  011E8A  D7F9               	goto	i2u1148_45
 18037  011E8C  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18038  011E90  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18039  011E94  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18040  011E98  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18041                           
 18042                           ; BSR set to: 15
 18043                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 18044  011E9C  0100               	movlb	0	; () banked
 18045  011E9E  5160               	movf	i2CANsendMessage@tamp& (0+255),w,b
 18046  011EA0  0100               	movlb	0	; () banked
 18047  011EA2  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 18048  011EA4  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 18049  011EA6  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 18050  011EA8  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 18051                           
 18052                           ; BSR set to: 0
 18053                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 18054  011EAA  C060  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 18055                           
 18056                           ; BSR set to: 0
 18057                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 18058  011EAE  0E07               	movlw	7
 18059  011EB0  143E               	andwf	i2CANsendMessage@identifier,w,c
 18060  011EB2  0100               	movlb	0	; () banked
 18061  011EB4  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 18062  011EB6  0E00               	movlw	0
 18063  011EB8  143F               	andwf	i2CANsendMessage@identifier+1,w,c
 18064  011EBA  0100               	movlb	0	; () banked
 18065  011EBC  6F61               	movwf	(i2CANsendMessage@tamp+1)& (0+255),b
 18066  011EBE  0E00               	movlw	0
 18067  011EC0  1440               	andwf	i2CANsendMessage@identifier+2,w,c
 18068  011EC2  0100               	movlb	0	; () banked
 18069  011EC4  6F62               	movwf	(i2CANsendMessage@tamp+2)& (0+255),b
 18070  011EC6  0E00               	movlw	0
 18071  011EC8  1441               	andwf	i2CANsendMessage@identifier+3,w,c
 18072  011ECA  0100               	movlb	0	; () banked
 18073  011ECC  6F63               	movwf	(i2CANsendMessage@tamp+3)& (0+255),b
 18074                           
 18075                           ; BSR set to: 0
 18076                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 18077  011ECE  C060  F046         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 18078  011ED2  C061  F047         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 18079  011ED6  C062  F048         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 18080  011EDA  C063  F049         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 18081  011EDE  0E05               	movlw	5
 18082  011EE0                     i2u1149_45:
 18083  011EE0  90D8               	bcf	status,0,c
 18084  011EE2  3646               	rlcf	??i2_CANsendMessage,f,c
 18085  011EE4  3647               	rlcf	??i2_CANsendMessage+1,f,c
 18086  011EE6  3648               	rlcf	??i2_CANsendMessage+2,f,c
 18087  011EE8  3649               	rlcf	??i2_CANsendMessage+3,f,c
 18088  011EEA  2EE8               	decfsz	wreg,f,c
 18089  011EEC  D7F9               	goto	i2u1149_45
 18090  011EEE  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18091  011EF2  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18092  011EF6  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18093  011EFA  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18094                           
 18095                           ; BSR set to: 0
 18096                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 18097  011EFE  010F               	movlb	15	; () banked
 18098  011F00  5132               	movf	50,w,b	;volatile
 18099  011F02  0B1F               	andlw	31
 18100  011F04  010F               	movlb	15	; () banked
 18101  011F06  6F32               	movwf	50,b	;volatile
 18102                           
 18103                           ; BSR set to: 15
 18104                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 18105  011F08  C060  FF32         	movff	i2CANsendMessage@tamp,3890	;volatile
 18106  011F0C                     i2l8674:
 18107                           
 18108                           ;inc\CANlib.h: 422: }
 18109                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 18110  011F0C  A045               	btfss	i2CANsendMessage@flags,0,c
 18111  011F0E  D003               	goto	i2l400
 18112                           
 18113                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 18114  011F10  010F               	movlb	15	; () banked
 18115  011F12  8130               	bsf	48,0,b	;volatile
 18116  011F14  D002               	goto	i2l401
 18117  011F16                     i2l400:
 18118                           
 18119                           ;inc\CANlib.h: 426: else
 18120                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 18121  011F16  010F               	movlb	15	; () banked
 18122  011F18  9130               	bcf	48,0,b	;volatile
 18123  011F1A                     i2l401:
 18124                           
 18125                           ; BSR set to: 15
 18126                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 18127  011F1A  A245               	btfss	i2CANsendMessage@flags,1,c
 18128  011F1C  D003               	goto	i2l402
 18129                           
 18130                           ; BSR set to: 15
 18131                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 18132  011F1E  010F               	movlb	15	; () banked
 18133  011F20  8330               	bsf	48,1,b	;volatile
 18134  011F22  D002               	goto	i2l8680
 18135  011F24                     i2l402:
 18136                           
 18137                           ; BSR set to: 15
 18138                           ;inc\CANlib.h: 430: else
 18139                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 18140  011F24  010F               	movlb	15	; () banked
 18141  011F26  9330               	bcf	48,1,b	;volatile
 18142  011F28                     i2l8680:
 18143                           
 18144                           ; BSR set to: 15
 18145                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 18146  011F28  C042  FFD9         	movff	i2CANsendMessage@data,fsr2l
 18147  011F2C  C043  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 18148  011F30  50DF               	movf	indf2,w,c
 18149  011F32  010F               	movlb	15	; () banked
 18150  011F34  6F36               	movwf	54,b	;volatile
 18151                           
 18152                           ; BSR set to: 15
 18153                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 18154  011F36  EE20 F001          	lfsr	2,1
 18155  011F3A  5042               	movf	i2CANsendMessage@data,w,c
 18156  011F3C  26D9               	addwf	fsr2l,f,c
 18157  011F3E  5043               	movf	i2CANsendMessage@data+1,w,c
 18158  011F40  22DA               	addwfc	fsr2h,f,c
 18159  011F42  50DF               	movf	indf2,w,c
 18160  011F44  010F               	movlb	15	; () banked
 18161  011F46  6F37               	movwf	55,b	;volatile
 18162                           
 18163                           ; BSR set to: 15
 18164                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 18165  011F48  EE20 F002          	lfsr	2,2
 18166  011F4C  5042               	movf	i2CANsendMessage@data,w,c
 18167  011F4E  26D9               	addwf	fsr2l,f,c
 18168  011F50  5043               	movf	i2CANsendMessage@data+1,w,c
 18169  011F52  22DA               	addwfc	fsr2h,f,c
 18170  011F54  50DF               	movf	indf2,w,c
 18171  011F56  010F               	movlb	15	; () banked
 18172  011F58  6F38               	movwf	56,b	;volatile
 18173                           
 18174                           ; BSR set to: 15
 18175                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 18176  011F5A  EE20 F003          	lfsr	2,3
 18177  011F5E  5042               	movf	i2CANsendMessage@data,w,c
 18178  011F60  26D9               	addwf	fsr2l,f,c
 18179  011F62  5043               	movf	i2CANsendMessage@data+1,w,c
 18180  011F64  22DA               	addwfc	fsr2h,f,c
 18181  011F66  50DF               	movf	indf2,w,c
 18182  011F68  010F               	movlb	15	; () banked
 18183  011F6A  6F39               	movwf	57,b	;volatile
 18184                           
 18185                           ; BSR set to: 15
 18186                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 18187  011F6C  EE20 F004          	lfsr	2,4
 18188  011F70  5042               	movf	i2CANsendMessage@data,w,c
 18189  011F72  26D9               	addwf	fsr2l,f,c
 18190  011F74  5043               	movf	i2CANsendMessage@data+1,w,c
 18191  011F76  22DA               	addwfc	fsr2h,f,c
 18192  011F78  50DF               	movf	indf2,w,c
 18193  011F7A  010F               	movlb	15	; () banked
 18194  011F7C  6F3A               	movwf	58,b	;volatile
 18195                           
 18196                           ; BSR set to: 15
 18197                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 18198  011F7E  EE20 F005          	lfsr	2,5
 18199  011F82  5042               	movf	i2CANsendMessage@data,w,c
 18200  011F84  26D9               	addwf	fsr2l,f,c
 18201  011F86  5043               	movf	i2CANsendMessage@data+1,w,c
 18202  011F88  22DA               	addwfc	fsr2h,f,c
 18203  011F8A  50DF               	movf	indf2,w,c
 18204  011F8C  010F               	movlb	15	; () banked
 18205  011F8E  6F3B               	movwf	59,b	;volatile
 18206                           
 18207                           ; BSR set to: 15
 18208                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 18209  011F90  EE20 F006          	lfsr	2,6
 18210  011F94  5042               	movf	i2CANsendMessage@data,w,c
 18211  011F96  26D9               	addwf	fsr2l,f,c
 18212  011F98  5043               	movf	i2CANsendMessage@data+1,w,c
 18213  011F9A  22DA               	addwfc	fsr2h,f,c
 18214  011F9C  50DF               	movf	indf2,w,c
 18215  011F9E  010F               	movlb	15	; () banked
 18216  011FA0  6F3C               	movwf	60,b	;volatile
 18217                           
 18218                           ; BSR set to: 15
 18219                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 18220  011FA2  EE20 F007          	lfsr	2,7
 18221  011FA6  5042               	movf	i2CANsendMessage@data,w,c
 18222  011FA8  26D9               	addwf	fsr2l,f,c
 18223  011FAA  5043               	movf	i2CANsendMessage@data+1,w,c
 18224  011FAC  22DA               	addwfc	fsr2h,f,c
 18225  011FAE  50DF               	movf	indf2,w,c
 18226  011FB0  010F               	movlb	15	; () banked
 18227  011FB2  6F3D               	movwf	61,b	;volatile
 18228                           
 18229                           ; BSR set to: 15
 18230                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 18231  011FB4  010F               	movlb	15	; () banked
 18232  011FB6  8730               	bsf	48,3,b	;volatile
 18233                           
 18234                           ; BSR set to: 15
 18235                           ;inc\CANlib.h: 444: return;
 18236  011FB8  0012               	return	
 18237  011FBA                     i2l390:
 18238                           
 18239                           ; BSR set to: 15
 18240                           ;inc\CANlib.h: 445: }
 18241                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 18242  011FBA  010F               	movlb	15	; () banked
 18243  011FBC  B720               	btfsc	32,3,b	;volatile
 18244  011FBE  0012               	return	
 18245                           
 18246                           ; BSR set to: 15
 18247                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 18248  011FC0  C044  FF25         	movff	i2CANsendMessage@dataLength,3877	;volatile
 18249                           
 18250                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 18251  011FC4  AC45               	btfss	i2CANsendMessage@flags,6,c
 18252  011FC6  D003               	goto	i2l405
 18253                           
 18254                           ; BSR set to: 15
 18255                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 18256  011FC8  010F               	movlb	15	; () banked
 18257  011FCA  8D25               	bsf	37,6,b	;volatile
 18258  011FCC  D002               	goto	i2l406
 18259  011FCE                     i2l405:
 18260                           
 18261                           ; BSR set to: 15
 18262                           ;inc\CANlib.h: 454: else
 18263                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 18264  011FCE  010F               	movlb	15	; () banked
 18265  011FD0  9D25               	bcf	37,6,b	;volatile
 18266  011FD2                     i2l406:
 18267                           
 18268                           ; BSR set to: 15
 18269                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 18270  011FD2  A645               	btfss	i2CANsendMessage@flags,3,c
 18271  011FD4  D06D               	goto	i2l407
 18272                           
 18273                           ; BSR set to: 15
 18274                           ;inc\CANlib.h: 458: {
 18275                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 18276  011FD6  503E               	movf	i2CANsendMessage@identifier,w,c
 18277  011FD8  0100               	movlb	0	; () banked
 18278  011FDA  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 18279  011FDC  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 18280  011FDE  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 18281  011FE0  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 18282                           
 18283                           ; BSR set to: 0
 18284                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 18285  011FE2  C060  FF24         	movff	i2CANsendMessage@tamp,3876	;volatile
 18286                           
 18287                           ; BSR set to: 0
 18288                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 18289  011FE6  0E00               	movlw	0
 18290  011FE8  143E               	andwf	i2CANsendMessage@identifier,w,c
 18291  011FEA  0100               	movlb	0	; () banked
 18292  011FEC  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 18293  011FEE  0EFF               	movlw	255
 18294  011FF0  143F               	andwf	i2CANsendMessage@identifier+1,w,c
 18295  011FF2  0100               	movlb	0	; () banked
 18296  011FF4  6F61               	movwf	(i2CANsendMessage@tamp+1)& (0+255),b
 18297  011FF6  0E00               	movlw	0
 18298  011FF8  1440               	andwf	i2CANsendMessage@identifier+2,w,c
 18299  011FFA  0100               	movlb	0	; () banked
 18300  011FFC  6F62               	movwf	(i2CANsendMessage@tamp+2)& (0+255),b
 18301  011FFE  0E00               	movlw	0
 18302  012000  1441               	andwf	i2CANsendMessage@identifier+3,w,c
 18303  012002  0100               	movlb	0	; () banked
 18304  012004  6F63               	movwf	(i2CANsendMessage@tamp+3)& (0+255),b
 18305                           
 18306                           ; BSR set to: 0
 18307                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 18308  012006  C060  F046         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 18309  01200A  C061  F047         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 18310  01200E  C062  F048         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 18311  012012  C063  F049         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 18312  012016  C047  F046         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 18313  01201A  C048  F047         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 18314  01201E  C049  F048         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 18315  012022  6A49               	clrf	??i2_CANsendMessage+3,c
 18316  012024  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18317  012028  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18318  01202C  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18319  012030  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18320                           
 18321                           ; BSR set to: 0
 18322                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 18323  012034  C060  FF23         	movff	i2CANsendMessage@tamp,3875	;volatile
 18324                           
 18325                           ; BSR set to: 0
 18326                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 18327  012038  0E00               	movlw	0
 18328  01203A  010F               	movlb	15	; () banked
 18329  01203C  6F22               	movwf	34,b	;volatile
 18330                           
 18331                           ; BSR set to: 15
 18332                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 18333  01203E  010F               	movlb	15	; () banked
 18334  012040  8722               	bsf	34,3,b	;volatile
 18335                           
 18336                           ; BSR set to: 15
 18337                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 18338  012042  A040               	btfss	i2CANsendMessage@identifier+2,0,c
 18339  012044  D002               	goto	i2l408
 18340                           
 18341                           ; BSR set to: 15
 18342                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 18343  012046  010F               	movlb	15	; () banked
 18344  012048  8122               	bsf	34,0,b	;volatile
 18345  01204A                     i2l408:
 18346                           
 18347                           ; BSR set to: 15
 18348                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 18349  01204A  A240               	btfss	i2CANsendMessage@identifier+2,1,c
 18350  01204C  D002               	goto	i2l409
 18351                           
 18352                           ; BSR set to: 15
 18353                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 18354  01204E  010F               	movlb	15	; () banked
 18355  012050  8322               	bsf	34,1,b	;volatile
 18356  012052                     i2l409:
 18357                           
 18358                           ; BSR set to: 15
 18359                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 18360  012052  A440               	btfss	i2CANsendMessage@identifier+2,2,c
 18361  012054  D002               	goto	i2l410
 18362                           
 18363                           ; BSR set to: 15
 18364                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 18365  012056  010F               	movlb	15	; () banked
 18366  012058  8B22               	bsf	34,5,b	;volatile
 18367  01205A                     i2l410:
 18368                           
 18369                           ; BSR set to: 15
 18370                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 18371  01205A  A640               	btfss	i2CANsendMessage@identifier+2,3,c
 18372  01205C  D002               	goto	i2l411
 18373                           
 18374                           ; BSR set to: 15
 18375                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 18376  01205E  010F               	movlb	15	; () banked
 18377  012060  8D22               	bsf	34,6,b	;volatile
 18378  012062                     i2l411:
 18379                           
 18380                           ; BSR set to: 15
 18381                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 18382  012062  A840               	btfss	i2CANsendMessage@identifier+2,4,c
 18383  012064  D002               	goto	i2l8730
 18384                           
 18385                           ; BSR set to: 15
 18386                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 18387  012066  010F               	movlb	15	; () banked
 18388  012068  8F22               	bsf	34,7,b	;volatile
 18389  01206A                     i2l8730:
 18390                           
 18391                           ; BSR set to: 15
 18392                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 18393  01206A  C03E  F046         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 18394  01206E  C03F  F047         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 18395  012072  C040  F048         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 18396  012076  C041  F049         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 18397  01207A  0E16               	movlw	22
 18398  01207C  D005               	goto	i2u1160_40
 18399  01207E                     i2u1160_45:
 18400  01207E  90D8               	bcf	status,0,c
 18401  012080  3249               	rrcf	??i2_CANsendMessage+3,f,c
 18402  012082  3248               	rrcf	??i2_CANsendMessage+2,f,c
 18403  012084  3247               	rrcf	??i2_CANsendMessage+1,f,c
 18404  012086  3246               	rrcf	??i2_CANsendMessage,f,c
 18405  012088                     i2u1160_40:
 18406  012088  2EE8               	decfsz	wreg,f,c
 18407  01208A  D7F9               	goto	i2u1160_45
 18408  01208C  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18409  012090  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18410  012094  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18411  012098  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18412                           
 18413                           ; BSR set to: 15
 18414                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 18415  01209C  0100               	movlb	0	; () banked
 18416  01209E  5160               	movf	i2CANsendMessage@tamp& (0+255),w,b
 18417  0120A0  0100               	movlb	0	; () banked
 18418  0120A2  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 18419  0120A4  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 18420  0120A6  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 18421  0120A8  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 18422                           
 18423                           ; BSR set to: 0
 18424                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 18425  0120AA  C060  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 18426                           
 18427                           ;inc\CANlib.h: 483: }
 18428  0120AE  D053               	goto	i2l8750
 18429  0120B0                     i2l407:
 18430                           
 18431                           ; BSR set to: 15
 18432                           ;inc\CANlib.h: 485: else
 18433                           ;inc\CANlib.h: 487: {
 18434                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 18435  0120B0  010F               	movlb	15	; () banked
 18436  0120B2  9722               	bcf	34,3,b	;volatile
 18437                           
 18438                           ; BSR set to: 15
 18439                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 18440  0120B4  C03E  F046         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 18441  0120B8  C03F  F047         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 18442  0120BC  C040  F048         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 18443  0120C0  C041  F049         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 18444  0120C4  0E04               	movlw	4
 18445  0120C6  D005               	goto	i2u1161_40
 18446  0120C8                     i2u1161_45:
 18447  0120C8  90D8               	bcf	status,0,c
 18448  0120CA  3249               	rrcf	??i2_CANsendMessage+3,f,c
 18449  0120CC  3248               	rrcf	??i2_CANsendMessage+2,f,c
 18450  0120CE  3247               	rrcf	??i2_CANsendMessage+1,f,c
 18451  0120D0  3246               	rrcf	??i2_CANsendMessage,f,c
 18452  0120D2                     i2u1161_40:
 18453  0120D2  2EE8               	decfsz	wreg,f,c
 18454  0120D4  D7F9               	goto	i2u1161_45
 18455  0120D6  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18456  0120DA  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18457  0120DE  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18458  0120E2  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18459                           
 18460                           ; BSR set to: 15
 18461                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 18462  0120E6  0100               	movlb	0	; () banked
 18463  0120E8  5160               	movf	i2CANsendMessage@tamp& (0+255),w,b
 18464  0120EA  0100               	movlb	0	; () banked
 18465  0120EC  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 18466  0120EE  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 18467  0120F0  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 18468  0120F2  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 18469                           
 18470                           ; BSR set to: 0
 18471                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 18472  0120F4  C060  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 18473                           
 18474                           ; BSR set to: 0
 18475                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 18476  0120F8  0E07               	movlw	7
 18477  0120FA  143E               	andwf	i2CANsendMessage@identifier,w,c
 18478  0120FC  0100               	movlb	0	; () banked
 18479  0120FE  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 18480  012100  0E00               	movlw	0
 18481  012102  143F               	andwf	i2CANsendMessage@identifier+1,w,c
 18482  012104  0100               	movlb	0	; () banked
 18483  012106  6F61               	movwf	(i2CANsendMessage@tamp+1)& (0+255),b
 18484  012108  0E00               	movlw	0
 18485  01210A  1440               	andwf	i2CANsendMessage@identifier+2,w,c
 18486  01210C  0100               	movlb	0	; () banked
 18487  01210E  6F62               	movwf	(i2CANsendMessage@tamp+2)& (0+255),b
 18488  012110  0E00               	movlw	0
 18489  012112  1441               	andwf	i2CANsendMessage@identifier+3,w,c
 18490  012114  0100               	movlb	0	; () banked
 18491  012116  6F63               	movwf	(i2CANsendMessage@tamp+3)& (0+255),b
 18492                           
 18493                           ; BSR set to: 0
 18494                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 18495  012118  C060  F046         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 18496  01211C  C061  F047         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 18497  012120  C062  F048         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 18498  012124  C063  F049         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 18499  012128  0E05               	movlw	5
 18500  01212A                     i2u1162_45:
 18501  01212A  90D8               	bcf	status,0,c
 18502  01212C  3646               	rlcf	??i2_CANsendMessage,f,c
 18503  01212E  3647               	rlcf	??i2_CANsendMessage+1,f,c
 18504  012130  3648               	rlcf	??i2_CANsendMessage+2,f,c
 18505  012132  3649               	rlcf	??i2_CANsendMessage+3,f,c
 18506  012134  2EE8               	decfsz	wreg,f,c
 18507  012136  D7F9               	goto	i2u1162_45
 18508  012138  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18509  01213C  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18510  012140  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18511  012144  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18512                           
 18513                           ; BSR set to: 0
 18514                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 18515  012148  010F               	movlb	15	; () banked
 18516  01214A  5122               	movf	34,w,b	;volatile
 18517  01214C  0B1F               	andlw	31
 18518  01214E  010F               	movlb	15	; () banked
 18519  012150  6F22               	movwf	34,b	;volatile
 18520                           
 18521                           ; BSR set to: 15
 18522                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 18523  012152  C060  FF22         	movff	i2CANsendMessage@tamp,3874	;volatile
 18524  012156                     i2l8750:
 18525                           
 18526                           ;inc\CANlib.h: 498: }
 18527                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 18528  012156  A045               	btfss	i2CANsendMessage@flags,0,c
 18529  012158  D003               	goto	i2l414
 18530                           
 18531                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 18532  01215A  010F               	movlb	15	; () banked
 18533  01215C  8120               	bsf	32,0,b	;volatile
 18534  01215E  D002               	goto	i2l415
 18535  012160                     i2l414:
 18536                           
 18537                           ;inc\CANlib.h: 502: else
 18538                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 18539  012160  010F               	movlb	15	; () banked
 18540  012162  9120               	bcf	32,0,b	;volatile
 18541  012164                     i2l415:
 18542                           
 18543                           ; BSR set to: 15
 18544                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 18545  012164  A245               	btfss	i2CANsendMessage@flags,1,c
 18546  012166  D003               	goto	i2l416
 18547                           
 18548                           ; BSR set to: 15
 18549                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 18550  012168  010F               	movlb	15	; () banked
 18551  01216A  8320               	bsf	32,1,b	;volatile
 18552  01216C  D002               	goto	i2l8756
 18553  01216E                     i2l416:
 18554                           
 18555                           ; BSR set to: 15
 18556                           ;inc\CANlib.h: 506: else
 18557                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 18558  01216E  010F               	movlb	15	; () banked
 18559  012170  9320               	bcf	32,1,b	;volatile
 18560  012172                     i2l8756:
 18561                           
 18562                           ; BSR set to: 15
 18563                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 18564  012172  C042  FFD9         	movff	i2CANsendMessage@data,fsr2l
 18565  012176  C043  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 18566  01217A  50DF               	movf	indf2,w,c
 18567  01217C  010F               	movlb	15	; () banked
 18568  01217E  6F26               	movwf	38,b	;volatile
 18569                           
 18570                           ; BSR set to: 15
 18571                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 18572  012180  EE20 F001          	lfsr	2,1
 18573  012184  5042               	movf	i2CANsendMessage@data,w,c
 18574  012186  26D9               	addwf	fsr2l,f,c
 18575  012188  5043               	movf	i2CANsendMessage@data+1,w,c
 18576  01218A  22DA               	addwfc	fsr2h,f,c
 18577  01218C  50DF               	movf	indf2,w,c
 18578  01218E  010F               	movlb	15	; () banked
 18579  012190  6F27               	movwf	39,b	;volatile
 18580                           
 18581                           ; BSR set to: 15
 18582                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 18583  012192  EE20 F002          	lfsr	2,2
 18584  012196  5042               	movf	i2CANsendMessage@data,w,c
 18585  012198  26D9               	addwf	fsr2l,f,c
 18586  01219A  5043               	movf	i2CANsendMessage@data+1,w,c
 18587  01219C  22DA               	addwfc	fsr2h,f,c
 18588  01219E  50DF               	movf	indf2,w,c
 18589  0121A0  010F               	movlb	15	; () banked
 18590  0121A2  6F28               	movwf	40,b	;volatile
 18591                           
 18592                           ; BSR set to: 15
 18593                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 18594  0121A4  EE20 F003          	lfsr	2,3
 18595  0121A8  5042               	movf	i2CANsendMessage@data,w,c
 18596  0121AA  26D9               	addwf	fsr2l,f,c
 18597  0121AC  5043               	movf	i2CANsendMessage@data+1,w,c
 18598  0121AE  22DA               	addwfc	fsr2h,f,c
 18599  0121B0  50DF               	movf	indf2,w,c
 18600  0121B2  010F               	movlb	15	; () banked
 18601  0121B4  6F29               	movwf	41,b	;volatile
 18602                           
 18603                           ; BSR set to: 15
 18604                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 18605  0121B6  EE20 F004          	lfsr	2,4
 18606  0121BA  5042               	movf	i2CANsendMessage@data,w,c
 18607  0121BC  26D9               	addwf	fsr2l,f,c
 18608  0121BE  5043               	movf	i2CANsendMessage@data+1,w,c
 18609  0121C0  22DA               	addwfc	fsr2h,f,c
 18610  0121C2  50DF               	movf	indf2,w,c
 18611  0121C4  010F               	movlb	15	; () banked
 18612  0121C6  6F2A               	movwf	42,b	;volatile
 18613                           
 18614                           ; BSR set to: 15
 18615                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 18616  0121C8  EE20 F005          	lfsr	2,5
 18617  0121CC  5042               	movf	i2CANsendMessage@data,w,c
 18618  0121CE  26D9               	addwf	fsr2l,f,c
 18619  0121D0  5043               	movf	i2CANsendMessage@data+1,w,c
 18620  0121D2  22DA               	addwfc	fsr2h,f,c
 18621  0121D4  50DF               	movf	indf2,w,c
 18622  0121D6  010F               	movlb	15	; () banked
 18623  0121D8  6F2B               	movwf	43,b	;volatile
 18624                           
 18625                           ; BSR set to: 15
 18626                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 18627  0121DA  EE20 F006          	lfsr	2,6
 18628  0121DE  5042               	movf	i2CANsendMessage@data,w,c
 18629  0121E0  26D9               	addwf	fsr2l,f,c
 18630  0121E2  5043               	movf	i2CANsendMessage@data+1,w,c
 18631  0121E4  22DA               	addwfc	fsr2h,f,c
 18632  0121E6  50DF               	movf	indf2,w,c
 18633  0121E8  010F               	movlb	15	; () banked
 18634  0121EA  6F2C               	movwf	44,b	;volatile
 18635                           
 18636                           ; BSR set to: 15
 18637                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 18638  0121EC  EE20 F007          	lfsr	2,7
 18639  0121F0  5042               	movf	i2CANsendMessage@data,w,c
 18640  0121F2  26D9               	addwf	fsr2l,f,c
 18641  0121F4  5043               	movf	i2CANsendMessage@data+1,w,c
 18642  0121F6  22DA               	addwfc	fsr2h,f,c
 18643  0121F8  50DF               	movf	indf2,w,c
 18644  0121FA  010F               	movlb	15	; () banked
 18645  0121FC  6F2D               	movwf	45,b	;volatile
 18646                           
 18647                           ; BSR set to: 15
 18648                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 18649  0121FE  010F               	movlb	15	; () banked
 18650  012200  8720               	bsf	32,3,b	;volatile
 18651                           
 18652                           ; BSR set to: 15
 18653                           ;inc\CANlib.h: 520: return;
 18654  012202  0012               	return	
 18655  012204                     __end_ofi2_CANsendMessage:
 18656                           	opt stack 0
 18657                           pclatu	equ	0xFFB
 18658                           pclath	equ	0xFFA
 18659                           tblptru	equ	0xFF8
 18660                           tblptrh	equ	0xFF7
 18661                           tblptrl	equ	0xFF6
 18662                           tablat	equ	0xFF5
 18663                           prodh	equ	0xFF4
 18664                           prodl	equ	0xFF3
 18665                           intcon	equ	0xFF2
 18666                           postinc0	equ	0xFEE
 18667                           fsr0h	equ	0xFEA
 18668                           fsr0l	equ	0xFE9
 18669                           wreg	equ	0xFE8
 18670                           indf1	equ	0xFE7
 18671                           fsr1h	equ	0xFE2
 18672                           fsr1l	equ	0xFE1
 18673                           bsr	equ	0xFE0
 18674                           indf2	equ	0xFDF
 18675                           postinc2	equ	0xFDE
 18676                           fsr2h	equ	0xFDA
 18677                           fsr2l	equ	0xFD9
 18678                           status	equ	0xFD8
 18679                           
 18680 ;; *************** function i2_CANisTxReady *****************
 18681 ;; Defined at:
 18682 ;;		line 1154 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 18683 ;; Parameters:    Size  Location     Type
 18684 ;;		None
 18685 ;; Auto vars:     Size  Location     Type
 18686 ;;		None
 18687 ;; Return value:  Size  Location     Type
 18688 ;;                  1    wreg      unsigned char 
 18689 ;; Registers used:
 18690 ;;		wreg, status,2
 18691 ;; Tracked objects:
 18692 ;;		On entry : 0/0
 18693 ;;		On exit  : 0/0
 18694 ;;		Unchanged: 0/0
 18695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18697 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18699 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18700 ;;Total ram usage:        1 bytes
 18701 ;; Hardware stack levels used:    1
 18702 ;; This function calls:
 18703 ;;		Nothing
 18704 ;; This function is called by:
 18705 ;;		_ISR_alta
 18706 ;; This function uses a non-reentrant model
 18707 ;;
 18708                           
 18709                           	psect	text50
 18710  015D52                     __ptext50:
 18711                           	opt stack 0
 18712  015D52                     i2_CANisTxReady:
 18713                           	opt stack 21
 18714                           
 18715                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 18716                           
 18717                           ; BSR set to: 15
 18718                           ;incstack = 0
 18719  015D52  0E01               	movlw	1
 18720  015D54  6E3E               	movwf	i2_CANisTxReady$3235,c
 18721  015D56  010F               	movlb	15	; () banked
 18722  015D58  A740               	btfss	64,3,b	;volatile
 18723  015D5A  D008               	goto	i2l568
 18724                           
 18725                           ; BSR set to: 15
 18726  015D5C  010F               	movlb	15	; () banked
 18727  015D5E  A730               	btfss	48,3,b	;volatile
 18728  015D60  D005               	goto	i2l568
 18729                           
 18730                           ; BSR set to: 15
 18731  015D62  010F               	movlb	15	; () banked
 18732  015D64  A720               	btfss	32,3,b	;volatile
 18733  015D66  D002               	goto	i2l568
 18734                           
 18735                           ; BSR set to: 15
 18736  015D68  0E00               	movlw	0
 18737  015D6A  6E3E               	movwf	i2_CANisTxReady$3235,c
 18738  015D6C                     i2l568:
 18739                           
 18740                           ; BSR set to: 15
 18741  015D6C  503E               	movf	i2_CANisTxReady$3235,w,c
 18742  015D6E  0012               	return	
 18743  015D70                     __end_ofi2_CANisTxReady:
 18744                           	opt stack 0
 18745                           pclatu	equ	0xFFB
 18746                           pclath	equ	0xFFA
 18747                           tblptru	equ	0xFF8
 18748                           tblptrh	equ	0xFF7
 18749                           tblptrl	equ	0xFF6
 18750                           tablat	equ	0xFF5
 18751                           prodh	equ	0xFF4
 18752                           prodl	equ	0xFF3
 18753                           intcon	equ	0xFF2
 18754                           postinc0	equ	0xFEE
 18755                           fsr0h	equ	0xFEA
 18756                           fsr0l	equ	0xFE9
 18757                           wreg	equ	0xFE8
 18758                           indf1	equ	0xFE7
 18759                           fsr1h	equ	0xFE2
 18760                           fsr1l	equ	0xFE1
 18761                           bsr	equ	0xFE0
 18762                           indf2	equ	0xFDF
 18763                           postinc2	equ	0xFDE
 18764                           fsr2h	equ	0xFDA
 18765                           fsr2l	equ	0xFD9
 18766                           status	equ	0xFD8
 18767                           
 18768 ;; *************** function _CANreceiveMessage *****************
 18769 ;; Defined at:
 18770 ;;		line 528 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 18771 ;; Parameters:    Size  Location     Type
 18772 ;;  msg             2   17[COMRAM] PTR struct .
 18773 ;;		 -> msg(15), 
 18774 ;; Auto vars:     Size  Location     Type
 18775 ;;  tamp            1   28[COMRAM] unsigned char 
 18776 ;;  error           1   27[COMRAM] unsigned char 
 18777 ;; Return value:  Size  Location     Type
 18778 ;;                  1    wreg      unsigned char 
 18779 ;; Registers used:
 18780 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18781 ;; Tracked objects:
 18782 ;;		On entry : 0/0
 18783 ;;		On exit  : 0/0
 18784 ;;		Unchanged: 0/0
 18785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18786 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18787 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18788 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18789 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18790 ;;Total ram usage:       12 bytes
 18791 ;; Hardware stack levels used:    1
 18792 ;; This function calls:
 18793 ;;		Nothing
 18794 ;; This function is called by:
 18795 ;;		_ISR_alta
 18796 ;; This function uses a non-reentrant model
 18797 ;;
 18798                           
 18799                           	psect	text51
 18800  012D3E                     __ptext51:
 18801                           	opt stack 0
 18802  012D3E                     _CANreceiveMessage:
 18803                           	opt stack 21
 18804                           
 18805                           ;inc\CANlib.h: 530: BYTE tamp;
 18806                           ;inc\CANlib.h: 531: BYTE error = 0;
 18807                           
 18808                           ; BSR set to: 15
 18809                           ;incstack = 0
 18810  012D3E  0E00               	movlw	0
 18811  012D40  6E48               	movwf	CANreceiveMessage@error,c
 18812                           
 18813                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 18814  012D42  BE74               	btfsc	3956,7,c	;volatile
 18815                           
 18816                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 18817  012D44  8048               	bsf	CANreceiveMessage@error,0,c
 18818                           
 18819                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 18820  012D46  BC74               	btfsc	3956,6,c	;volatile
 18821                           
 18822                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 18823  012D48  8248               	bsf	CANreceiveMessage@error,1,c
 18824                           
 18825                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 18826  012D4A  010F               	movlb	15	; () banked
 18827  012D4C  AF50               	btfss	80,7,b	;volatile
 18828  012D4E  D143               	goto	i2l422
 18829                           
 18830                           ; BSR set to: 15
 18831                           ;inc\CANlib.h: 541: {
 18832                           ;inc\CANlib.h: 542: msg->identifier = 0;
 18833  012D50  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 18834  012D54  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 18835  012D58  6ADE               	clrf	postinc2,c
 18836  012D5A  6ADE               	clrf	postinc2,c
 18837  012D5C  6ADE               	clrf	postinc2,c
 18838  012D5E  6ADD               	clrf	postdec2,c
 18839                           
 18840                           ; BSR set to: 15
 18841                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 18842  012D60  EE20 F004          	lfsr	2,4
 18843  012D64  503E               	movf	CANreceiveMessage@msg,w,c
 18844  012D66  26D9               	addwf	fsr2l,f,c
 18845  012D68  503F               	movf	CANreceiveMessage@msg+1,w,c
 18846  012D6A  22DA               	addwfc	fsr2h,f,c
 18847  012D6C  CF56 FFDF          	movff	3926,indf2	;volatile
 18848                           
 18849                           ; BSR set to: 15
 18850                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 18851  012D70  EE20 F005          	lfsr	2,5
 18852  012D74  503E               	movf	CANreceiveMessage@msg,w,c
 18853  012D76  26D9               	addwf	fsr2l,f,c
 18854  012D78  503F               	movf	CANreceiveMessage@msg+1,w,c
 18855  012D7A  22DA               	addwfc	fsr2h,f,c
 18856  012D7C  CF57 FFDF          	movff	3927,indf2	;volatile
 18857                           
 18858                           ; BSR set to: 15
 18859                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 18860  012D80  EE20 F006          	lfsr	2,6
 18861  012D84  503E               	movf	CANreceiveMessage@msg,w,c
 18862  012D86  26D9               	addwf	fsr2l,f,c
 18863  012D88  503F               	movf	CANreceiveMessage@msg+1,w,c
 18864  012D8A  22DA               	addwfc	fsr2h,f,c
 18865  012D8C  CF58 FFDF          	movff	3928,indf2	;volatile
 18866                           
 18867                           ; BSR set to: 15
 18868                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 18869  012D90  EE20 F007          	lfsr	2,7
 18870  012D94  503E               	movf	CANreceiveMessage@msg,w,c
 18871  012D96  26D9               	addwf	fsr2l,f,c
 18872  012D98  503F               	movf	CANreceiveMessage@msg+1,w,c
 18873  012D9A  22DA               	addwfc	fsr2h,f,c
 18874  012D9C  CF59 FFDF          	movff	3929,indf2	;volatile
 18875                           
 18876                           ; BSR set to: 15
 18877                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 18878  012DA0  EE20 F008          	lfsr	2,8
 18879  012DA4  503E               	movf	CANreceiveMessage@msg,w,c
 18880  012DA6  26D9               	addwf	fsr2l,f,c
 18881  012DA8  503F               	movf	CANreceiveMessage@msg+1,w,c
 18882  012DAA  22DA               	addwfc	fsr2h,f,c
 18883  012DAC  CF5A FFDF          	movff	3930,indf2	;volatile
 18884                           
 18885                           ; BSR set to: 15
 18886                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 18887  012DB0  EE20 F009          	lfsr	2,9
 18888  012DB4  503E               	movf	CANreceiveMessage@msg,w,c
 18889  012DB6  26D9               	addwf	fsr2l,f,c
 18890  012DB8  503F               	movf	CANreceiveMessage@msg+1,w,c
 18891  012DBA  22DA               	addwfc	fsr2h,f,c
 18892  012DBC  CF5B FFDF          	movff	3931,indf2	;volatile
 18893                           
 18894                           ; BSR set to: 15
 18895                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 18896  012DC0  EE20 F00A          	lfsr	2,10
 18897  012DC4  503E               	movf	CANreceiveMessage@msg,w,c
 18898  012DC6  26D9               	addwf	fsr2l,f,c
 18899  012DC8  503F               	movf	CANreceiveMessage@msg+1,w,c
 18900  012DCA  22DA               	addwfc	fsr2h,f,c
 18901  012DCC  CF5C FFDF          	movff	3932,indf2	;volatile
 18902                           
 18903                           ; BSR set to: 15
 18904                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 18905  012DD0  EE20 F00B          	lfsr	2,11
 18906  012DD4  503E               	movf	CANreceiveMessage@msg,w,c
 18907  012DD6  26D9               	addwf	fsr2l,f,c
 18908  012DD8  503F               	movf	CANreceiveMessage@msg+1,w,c
 18909  012DDA  22DA               	addwfc	fsr2h,f,c
 18910  012DDC  CF5D FFDF          	movff	3933,indf2	;volatile
 18911                           
 18912                           ; BSR set to: 15
 18913                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 18914  012DE0  EE20 F00E          	lfsr	2,14
 18915  012DE4  503E               	movf	CANreceiveMessage@msg,w,c
 18916  012DE6  26D9               	addwf	fsr2l,f,c
 18917  012DE8  503F               	movf	CANreceiveMessage@msg+1,w,c
 18918  012DEA  22DA               	addwfc	fsr2h,f,c
 18919  012DEC  010F               	movlb	15	; () banked
 18920  012DEE  AD55               	btfss	85,6,b	;volatile
 18921  012DF0  D002               	goto	i2u812_40
 18922  012DF2  0E01               	movlw	1
 18923  012DF4  D001               	goto	i2u812_46
 18924  012DF6                     i2u812_40:
 18925  012DF6  0E00               	movlw	0
 18926  012DF8                     i2u812_46:
 18927  012DF8  6EDF               	movwf	indf2,c
 18928                           
 18929                           ; BSR set to: 15
 18930                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 18931  012DFA  EE20 F00D          	lfsr	2,13
 18932  012DFE  503E               	movf	CANreceiveMessage@msg,w,c
 18933  012E00  26D9               	addwf	fsr2l,f,c
 18934  012E02  503F               	movf	CANreceiveMessage@msg+1,w,c
 18935  012E04  22DA               	addwfc	fsr2h,f,c
 18936  012E06  010F               	movlb	15	; () banked
 18937  012E08  5155               	movf	85,w,b	;volatile
 18938  012E0A  0B0F               	andlw	15
 18939  012E0C  6EDF               	movwf	indf2,c
 18940                           
 18941                           ; BSR set to: 15
 18942                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 18943  012E0E  EE20 F00C          	lfsr	2,12
 18944  012E12  503E               	movf	CANreceiveMessage@msg,w,c
 18945  012E14  26D9               	addwf	fsr2l,f,c
 18946  012E16  503F               	movf	CANreceiveMessage@msg+1,w,c
 18947  012E18  22DA               	addwfc	fsr2h,f,c
 18948  012E1A  010F               	movlb	15	; () banked
 18949  012E1C  A752               	btfss	82,3,b	;volatile
 18950  012E1E  D002               	goto	i2u813_40
 18951  012E20  0E01               	movlw	1
 18952  012E22  D001               	goto	i2u813_46
 18953  012E24                     i2u813_40:
 18954  012E24  0E00               	movlw	0
 18955  012E26                     i2u813_46:
 18956  012E26  6EDF               	movwf	indf2,c
 18957                           
 18958                           ; BSR set to: 15
 18959                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 18960  012E28  010F               	movlb	15	; () banked
 18961  012E2A  B752               	btfsc	82,3,b	;volatile
 18962  012E2C  D044               	goto	i2l6490
 18963                           
 18964                           ; BSR set to: 15
 18965                           ;inc\CANlib.h: 559: {
 18966                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 18967  012E2E  CF51 F040          	movff	3921,??_CANreceiveMessage	;volatile
 18968  012E32  6A41               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 18969  012E34  6A42               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 18970  012E36  6A43               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 18971  012E38  0E03               	movlw	3
 18972  012E3A                     i2u815_45:
 18973  012E3A  90D8               	bcf	status,0,c
 18974  012E3C  3640               	rlcf	??_CANreceiveMessage,f,c
 18975  012E3E  3641               	rlcf	??_CANreceiveMessage+1,f,c
 18976  012E40  3642               	rlcf	??_CANreceiveMessage+2,f,c
 18977  012E42  3643               	rlcf	??_CANreceiveMessage+3,f,c
 18978  012E44  2EE8               	decfsz	wreg,f,c
 18979  012E46  D7F9               	goto	i2u815_45
 18980  012E48  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 18981  012E4C  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 18982  012E50  C040  FFDE         	movff	??_CANreceiveMessage,postinc2
 18983  012E54  C041  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 18984  012E58  C042  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 18985  012E5C  C043  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 18986                           
 18987                           ; BSR set to: 15
 18988                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 18989  012E60  010F               	movlb	15	; () banked
 18990  012E62  3952               	swapf	82,w,b	;volatile
 18991  012E64  42E8               	rrncf	wreg,f,c
 18992  012E66  0B07               	andlw	7
 18993  012E68  0B07               	andlw	7
 18994  012E6A  6E49               	movwf	CANreceiveMessage@tamp,c
 18995                           
 18996                           ; BSR set to: 15
 18997                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 18998  012E6C  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 18999  012E70  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19000  012E74  CFDE F040          	movff	postinc2,??_CANreceiveMessage
 19001  012E78  CFDE F041          	movff	postinc2,??_CANreceiveMessage+1
 19002  012E7C  CFDE F042          	movff	postinc2,??_CANreceiveMessage+2
 19003  012E80  CFDE F043          	movff	postinc2,??_CANreceiveMessage+3
 19004  012E84  5049               	movf	CANreceiveMessage@tamp,w,c
 19005  012E86  2440               	addwf	??_CANreceiveMessage,w,c
 19006  012E88  6E44               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 19007  012E8A  0E00               	movlw	0
 19008  012E8C  2041               	addwfc	??_CANreceiveMessage+1,w,c
 19009  012E8E  6E45               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 19010  012E90  0E00               	movlw	0
 19011  012E92  2042               	addwfc	??_CANreceiveMessage+2,w,c
 19012  012E94  6E46               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 19013  012E96  0E00               	movlw	0
 19014  012E98  2043               	addwfc	??_CANreceiveMessage+3,w,c
 19015  012E9A  6E47               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 19016  012E9C  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19017  012EA0  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19018  012EA4  C044  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 19019  012EA8  C045  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 19020  012EAC  C046  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 19021  012EB0  C047  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 19022                           
 19023                           ;inc\CANlib.h: 563: }
 19024  012EB4  D08D               	goto	i2l6516
 19025  012EB6                     i2l6490:
 19026                           
 19027                           ; BSR set to: 15
 19028                           ;inc\CANlib.h: 564: else
 19029                           ;inc\CANlib.h: 565: {
 19030                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 19031  012EB6  CF54 F040          	movff	3924,??_CANreceiveMessage	;volatile
 19032  012EBA  6A41               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19033  012EBC  6A42               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19034  012EBE  6A43               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19035  012EC0  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19036  012EC4  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19037  012EC8  C040  FFDE         	movff	??_CANreceiveMessage,postinc2
 19038  012ECC  C041  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 19039  012ED0  C042  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 19040  012ED4  C043  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 19041                           
 19042                           ; BSR set to: 15
 19043                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 19044  012ED8  CF53 F040          	movff	3923,??_CANreceiveMessage	;volatile
 19045  012EDC  6A41               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19046  012EDE  6A42               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19047  012EE0  6A43               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19048  012EE2  C042  F043         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 19049  012EE6  C041  F042         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 19050  012EEA  C040  F041         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 19051  012EEE  6A40               	clrf	??_CANreceiveMessage,c
 19052  012EF0  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19053  012EF4  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19054  012EF8  5040               	movf	??_CANreceiveMessage,w,c
 19055  012EFA  26DE               	addwf	postinc2,f,c
 19056  012EFC  5041               	movf	??_CANreceiveMessage+1,w,c
 19057  012EFE  22DE               	addwfc	postinc2,f,c
 19058  012F00  5042               	movf	??_CANreceiveMessage+2,w,c
 19059  012F02  22DE               	addwfc	postinc2,f,c
 19060  012F04  5043               	movf	??_CANreceiveMessage+3,w,c
 19061  012F06  22DE               	addwfc	postinc2,f,c
 19062                           
 19063                           ; BSR set to: 15
 19064                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 19065  012F08  010F               	movlb	15	; () banked
 19066  012F0A  A152               	btfss	82,0,b	;volatile
 19067  012F0C  D00C               	goto	i2l6498
 19068                           
 19069                           ; BSR set to: 15
 19070                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 19071  012F0E  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19072  012F12  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19073  012F16  0E00               	movlw	0
 19074  012F18  12DE               	iorwf	postinc2,f,c
 19075  012F1A  0E00               	movlw	0
 19076  012F1C  12DE               	iorwf	postinc2,f,c
 19077  012F1E  0E01               	movlw	1
 19078  012F20  12DE               	iorwf	postinc2,f,c
 19079  012F22  0E00               	movlw	0
 19080  012F24  12DE               	iorwf	postinc2,f,c
 19081  012F26                     i2l6498:
 19082                           
 19083                           ; BSR set to: 15
 19084                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 19085  012F26  010F               	movlb	15	; () banked
 19086  012F28  A352               	btfss	82,1,b	;volatile
 19087  012F2A  D00C               	goto	i2l6502
 19088                           
 19089                           ; BSR set to: 15
 19090                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 19091  012F2C  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19092  012F30  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19093  012F34  0E00               	movlw	0
 19094  012F36  12DE               	iorwf	postinc2,f,c
 19095  012F38  0E00               	movlw	0
 19096  012F3A  12DE               	iorwf	postinc2,f,c
 19097  012F3C  0E02               	movlw	2
 19098  012F3E  12DE               	iorwf	postinc2,f,c
 19099  012F40  0E00               	movlw	0
 19100  012F42  12DE               	iorwf	postinc2,f,c
 19101  012F44                     i2l6502:
 19102                           
 19103                           ; BSR set to: 15
 19104                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 19105  012F44  010F               	movlb	15	; () banked
 19106  012F46  AB52               	btfss	82,5,b	;volatile
 19107  012F48  D00C               	goto	i2l6506
 19108                           
 19109                           ; BSR set to: 15
 19110                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 19111  012F4A  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19112  012F4E  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19113  012F52  0E00               	movlw	0
 19114  012F54  12DE               	iorwf	postinc2,f,c
 19115  012F56  0E00               	movlw	0
 19116  012F58  12DE               	iorwf	postinc2,f,c
 19117  012F5A  0E04               	movlw	4
 19118  012F5C  12DE               	iorwf	postinc2,f,c
 19119  012F5E  0E00               	movlw	0
 19120  012F60  12DE               	iorwf	postinc2,f,c
 19121  012F62                     i2l6506:
 19122                           
 19123                           ; BSR set to: 15
 19124                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 19125  012F62  010F               	movlb	15	; () banked
 19126  012F64  AD52               	btfss	82,6,b	;volatile
 19127  012F66  D00C               	goto	i2l6510
 19128                           
 19129                           ; BSR set to: 15
 19130                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 19131  012F68  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19132  012F6C  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19133  012F70  0E00               	movlw	0
 19134  012F72  12DE               	iorwf	postinc2,f,c
 19135  012F74  0E00               	movlw	0
 19136  012F76  12DE               	iorwf	postinc2,f,c
 19137  012F78  0E08               	movlw	8
 19138  012F7A  12DE               	iorwf	postinc2,f,c
 19139  012F7C  0E00               	movlw	0
 19140  012F7E  12DE               	iorwf	postinc2,f,c
 19141  012F80                     i2l6510:
 19142                           
 19143                           ; BSR set to: 15
 19144                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 19145  012F80  010F               	movlb	15	; () banked
 19146  012F82  AF52               	btfss	82,7,b	;volatile
 19147  012F84  D00C               	goto	i2l6514
 19148                           
 19149                           ; BSR set to: 15
 19150                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 19151  012F86  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19152  012F8A  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19153  012F8E  0E00               	movlw	0
 19154  012F90  12DE               	iorwf	postinc2,f,c
 19155  012F92  0E00               	movlw	0
 19156  012F94  12DE               	iorwf	postinc2,f,c
 19157  012F96  0E10               	movlw	16
 19158  012F98  12DE               	iorwf	postinc2,f,c
 19159  012F9A  0E00               	movlw	0
 19160  012F9C  12DE               	iorwf	postinc2,f,c
 19161  012F9E                     i2l6514:
 19162                           
 19163                           ; BSR set to: 15
 19164                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 19165  012F9E  CF51 F040          	movff	3921,??_CANreceiveMessage	;volatile
 19166  012FA2  6A41               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19167  012FA4  6A42               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19168  012FA6  6A43               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19169  012FA8  0E15               	movlw	21
 19170  012FAA                     i2u821_45:
 19171  012FAA  90D8               	bcf	status,0,c
 19172  012FAC  3640               	rlcf	??_CANreceiveMessage,f,c
 19173  012FAE  3641               	rlcf	??_CANreceiveMessage+1,f,c
 19174  012FB0  3642               	rlcf	??_CANreceiveMessage+2,f,c
 19175  012FB2  3643               	rlcf	??_CANreceiveMessage+3,f,c
 19176  012FB4  2EE8               	decfsz	wreg,f,c
 19177  012FB6  D7F9               	goto	i2u821_45
 19178  012FB8  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19179  012FBC  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19180  012FC0  5040               	movf	??_CANreceiveMessage,w,c
 19181  012FC2  12DE               	iorwf	postinc2,f,c
 19182  012FC4  5041               	movf	??_CANreceiveMessage+1,w,c
 19183  012FC6  12DE               	iorwf	postinc2,f,c
 19184  012FC8  5042               	movf	??_CANreceiveMessage+2,w,c
 19185  012FCA  12DE               	iorwf	postinc2,f,c
 19186  012FCC  5043               	movf	??_CANreceiveMessage+3,w,c
 19187  012FCE  12DE               	iorwf	postinc2,f,c
 19188  012FD0                     i2l6516:
 19189                           
 19190                           ; BSR set to: 15
 19191                           ;inc\CANlib.h: 581: }
 19192                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 19193  012FD0  010F               	movlb	15	; () banked
 19194  012FD2  9F50               	bcf	80,7,b	;volatile
 19195                           
 19196                           ; BSR set to: 15
 19197                           ;inc\CANlib.h: 584: return (error);
 19198                           ;	Return value of _CANreceiveMessage is never used
 19199  012FD4  0012               	return	
 19200  012FD6                     i2l422:
 19201                           
 19202                           ; BSR set to: 15
 19203                           ;inc\CANlib.h: 585: }
 19204                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 19205  012FD6  AE60               	btfss	3936,7,c	;volatile
 19206  012FD8  0012               	return	
 19207                           
 19208                           ; BSR set to: 15
 19209                           ;inc\CANlib.h: 588: {
 19210                           ;inc\CANlib.h: 589: msg->identifier = 0;
 19211  012FDA  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19212  012FDE  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19213  012FE2  6ADE               	clrf	postinc2,c
 19214  012FE4  6ADE               	clrf	postinc2,c
 19215  012FE6  6ADE               	clrf	postinc2,c
 19216  012FE8  6ADD               	clrf	postdec2,c
 19217                           
 19218                           ; BSR set to: 15
 19219                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 19220  012FEA  EE20 F004          	lfsr	2,4
 19221  012FEE  503E               	movf	CANreceiveMessage@msg,w,c
 19222  012FF0  26D9               	addwf	fsr2l,f,c
 19223  012FF2  503F               	movf	CANreceiveMessage@msg+1,w,c
 19224  012FF4  22DA               	addwfc	fsr2h,f,c
 19225  012FF6  CF66 FFDF          	movff	3942,indf2	;volatile
 19226                           
 19227                           ; BSR set to: 15
 19228                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 19229  012FFA  EE20 F005          	lfsr	2,5
 19230  012FFE  503E               	movf	CANreceiveMessage@msg,w,c
 19231  013000  26D9               	addwf	fsr2l,f,c
 19232  013002  503F               	movf	CANreceiveMessage@msg+1,w,c
 19233  013004  22DA               	addwfc	fsr2h,f,c
 19234  013006  CF67 FFDF          	movff	3943,indf2	;volatile
 19235                           
 19236                           ; BSR set to: 15
 19237                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 19238  01300A  EE20 F006          	lfsr	2,6
 19239  01300E  503E               	movf	CANreceiveMessage@msg,w,c
 19240  013010  26D9               	addwf	fsr2l,f,c
 19241  013012  503F               	movf	CANreceiveMessage@msg+1,w,c
 19242  013014  22DA               	addwfc	fsr2h,f,c
 19243  013016  CF68 FFDF          	movff	3944,indf2	;volatile
 19244                           
 19245                           ; BSR set to: 15
 19246                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 19247  01301A  EE20 F007          	lfsr	2,7
 19248  01301E  503E               	movf	CANreceiveMessage@msg,w,c
 19249  013020  26D9               	addwf	fsr2l,f,c
 19250  013022  503F               	movf	CANreceiveMessage@msg+1,w,c
 19251  013024  22DA               	addwfc	fsr2h,f,c
 19252  013026  CF69 FFDF          	movff	3945,indf2	;volatile
 19253                           
 19254                           ; BSR set to: 15
 19255                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 19256  01302A  EE20 F008          	lfsr	2,8
 19257  01302E  503E               	movf	CANreceiveMessage@msg,w,c
 19258  013030  26D9               	addwf	fsr2l,f,c
 19259  013032  503F               	movf	CANreceiveMessage@msg+1,w,c
 19260  013034  22DA               	addwfc	fsr2h,f,c
 19261  013036  CF6A FFDF          	movff	3946,indf2	;volatile
 19262                           
 19263                           ; BSR set to: 15
 19264                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 19265  01303A  EE20 F009          	lfsr	2,9
 19266  01303E  503E               	movf	CANreceiveMessage@msg,w,c
 19267  013040  26D9               	addwf	fsr2l,f,c
 19268  013042  503F               	movf	CANreceiveMessage@msg+1,w,c
 19269  013044  22DA               	addwfc	fsr2h,f,c
 19270  013046  CF6B FFDF          	movff	3947,indf2	;volatile
 19271                           
 19272                           ; BSR set to: 15
 19273                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 19274  01304A  EE20 F00A          	lfsr	2,10
 19275  01304E  503E               	movf	CANreceiveMessage@msg,w,c
 19276  013050  26D9               	addwf	fsr2l,f,c
 19277  013052  503F               	movf	CANreceiveMessage@msg+1,w,c
 19278  013054  22DA               	addwfc	fsr2h,f,c
 19279  013056  CF6C FFDF          	movff	3948,indf2	;volatile
 19280                           
 19281                           ; BSR set to: 15
 19282                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 19283  01305A  EE20 F00B          	lfsr	2,11
 19284  01305E  503E               	movf	CANreceiveMessage@msg,w,c
 19285  013060  26D9               	addwf	fsr2l,f,c
 19286  013062  503F               	movf	CANreceiveMessage@msg+1,w,c
 19287  013064  22DA               	addwfc	fsr2h,f,c
 19288  013066  CF6D FFDF          	movff	3949,indf2	;volatile
 19289                           
 19290                           ; BSR set to: 15
 19291                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 19292  01306A  EE20 F00E          	lfsr	2,14
 19293  01306E  503E               	movf	CANreceiveMessage@msg,w,c
 19294  013070  26D9               	addwf	fsr2l,f,c
 19295  013072  503F               	movf	CANreceiveMessage@msg+1,w,c
 19296  013074  22DA               	addwfc	fsr2h,f,c
 19297  013076  AC65               	btfss	3941,6,c	;volatile
 19298  013078  D002               	goto	i2u823_40
 19299  01307A  0E01               	movlw	1
 19300  01307C  D001               	goto	i2u823_46
 19301  01307E                     i2u823_40:
 19302  01307E  0E00               	movlw	0
 19303  013080                     i2u823_46:
 19304  013080  6EDF               	movwf	indf2,c
 19305                           
 19306                           ; BSR set to: 15
 19307                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 19308  013082  EE20 F00D          	lfsr	2,13
 19309  013086  503E               	movf	CANreceiveMessage@msg,w,c
 19310  013088  26D9               	addwf	fsr2l,f,c
 19311  01308A  503F               	movf	CANreceiveMessage@msg+1,w,c
 19312  01308C  22DA               	addwfc	fsr2h,f,c
 19313  01308E  5065               	movf	3941,w,c	;volatile
 19314  013090  0B0F               	andlw	15
 19315  013092  6EDF               	movwf	indf2,c
 19316                           
 19317                           ; BSR set to: 15
 19318                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 19319  013094  EE20 F00C          	lfsr	2,12
 19320  013098  503E               	movf	CANreceiveMessage@msg,w,c
 19321  01309A  26D9               	addwf	fsr2l,f,c
 19322  01309C  503F               	movf	CANreceiveMessage@msg+1,w,c
 19323  01309E  22DA               	addwfc	fsr2h,f,c
 19324  0130A0  A662               	btfss	3938,3,c	;volatile
 19325  0130A2  D002               	goto	i2u824_40
 19326  0130A4  0E01               	movlw	1
 19327  0130A6  D001               	goto	i2u824_46
 19328  0130A8                     i2u824_40:
 19329  0130A8  0E00               	movlw	0
 19330  0130AA                     i2u824_46:
 19331  0130AA  6EDF               	movwf	indf2,c
 19332                           
 19333                           ; BSR set to: 15
 19334                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 19335  0130AC  B662               	btfsc	3938,3,c	;volatile
 19336  0130AE  D043               	goto	i2l6552
 19337                           
 19338                           ; BSR set to: 15
 19339                           ;inc\CANlib.h: 606: {
 19340                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 19341  0130B0  CF61 F040          	movff	3937,??_CANreceiveMessage	;volatile
 19342  0130B4  6A41               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19343  0130B6  6A42               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19344  0130B8  6A43               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19345  0130BA  0E03               	movlw	3
 19346  0130BC                     i2u826_45:
 19347  0130BC  90D8               	bcf	status,0,c
 19348  0130BE  3640               	rlcf	??_CANreceiveMessage,f,c
 19349  0130C0  3641               	rlcf	??_CANreceiveMessage+1,f,c
 19350  0130C2  3642               	rlcf	??_CANreceiveMessage+2,f,c
 19351  0130C4  3643               	rlcf	??_CANreceiveMessage+3,f,c
 19352  0130C6  2EE8               	decfsz	wreg,f,c
 19353  0130C8  D7F9               	goto	i2u826_45
 19354  0130CA  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19355  0130CE  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19356  0130D2  C040  FFDE         	movff	??_CANreceiveMessage,postinc2
 19357  0130D6  C041  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 19358  0130DA  C042  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 19359  0130DE  C043  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 19360                           
 19361                           ; BSR set to: 15
 19362                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 19363  0130E2  3862               	swapf	3938,w,c	;volatile
 19364  0130E4  42E8               	rrncf	wreg,f,c
 19365  0130E6  0B07               	andlw	7
 19366  0130E8  0B07               	andlw	7
 19367  0130EA  6E49               	movwf	CANreceiveMessage@tamp,c
 19368                           
 19369                           ; BSR set to: 15
 19370                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 19371  0130EC  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19372  0130F0  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19373  0130F4  CFDE F040          	movff	postinc2,??_CANreceiveMessage
 19374  0130F8  CFDE F041          	movff	postinc2,??_CANreceiveMessage+1
 19375  0130FC  CFDE F042          	movff	postinc2,??_CANreceiveMessage+2
 19376  013100  CFDE F043          	movff	postinc2,??_CANreceiveMessage+3
 19377  013104  5049               	movf	CANreceiveMessage@tamp,w,c
 19378  013106  2440               	addwf	??_CANreceiveMessage,w,c
 19379  013108  6E44               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 19380  01310A  0E00               	movlw	0
 19381  01310C  2041               	addwfc	??_CANreceiveMessage+1,w,c
 19382  01310E  6E45               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 19383  013110  0E00               	movlw	0
 19384  013112  2042               	addwfc	??_CANreceiveMessage+2,w,c
 19385  013114  6E46               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 19386  013116  0E00               	movlw	0
 19387  013118  2043               	addwfc	??_CANreceiveMessage+3,w,c
 19388  01311A  6E47               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 19389  01311C  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19390  013120  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19391  013124  C044  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 19392  013128  C045  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 19393  01312C  C046  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 19394  013130  C047  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 19395                           
 19396                           ;inc\CANlib.h: 610: }
 19397  013134  D088               	goto	i2l6578
 19398  013136                     i2l6552:
 19399                           
 19400                           ; BSR set to: 15
 19401                           ;inc\CANlib.h: 611: else
 19402                           ;inc\CANlib.h: 612: {
 19403                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 19404  013136  CF64 F040          	movff	3940,??_CANreceiveMessage	;volatile
 19405  01313A  6A41               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19406  01313C  6A42               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19407  01313E  6A43               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19408  013140  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19409  013144  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19410  013148  C040  FFDE         	movff	??_CANreceiveMessage,postinc2
 19411  01314C  C041  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 19412  013150  C042  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 19413  013154  C043  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 19414                           
 19415                           ; BSR set to: 15
 19416                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 19417  013158  CF63 F040          	movff	3939,??_CANreceiveMessage	;volatile
 19418  01315C  6A41               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19419  01315E  6A42               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19420  013160  6A43               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19421  013162  C042  F043         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 19422  013166  C041  F042         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 19423  01316A  C040  F041         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 19424  01316E  6A40               	clrf	??_CANreceiveMessage,c
 19425  013170  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19426  013174  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19427  013178  5040               	movf	??_CANreceiveMessage,w,c
 19428  01317A  26DE               	addwf	postinc2,f,c
 19429  01317C  5041               	movf	??_CANreceiveMessage+1,w,c
 19430  01317E  22DE               	addwfc	postinc2,f,c
 19431  013180  5042               	movf	??_CANreceiveMessage+2,w,c
 19432  013182  22DE               	addwfc	postinc2,f,c
 19433  013184  5043               	movf	??_CANreceiveMessage+3,w,c
 19434  013186  22DE               	addwfc	postinc2,f,c
 19435                           
 19436                           ; BSR set to: 15
 19437                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 19438  013188  A062               	btfss	3938,0,c	;volatile
 19439  01318A  D00C               	goto	i2l6560
 19440                           
 19441                           ; BSR set to: 15
 19442                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 19443  01318C  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19444  013190  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19445  013194  0E00               	movlw	0
 19446  013196  12DE               	iorwf	postinc2,f,c
 19447  013198  0E00               	movlw	0
 19448  01319A  12DE               	iorwf	postinc2,f,c
 19449  01319C  0E01               	movlw	1
 19450  01319E  12DE               	iorwf	postinc2,f,c
 19451  0131A0  0E00               	movlw	0
 19452  0131A2  12DE               	iorwf	postinc2,f,c
 19453  0131A4                     i2l6560:
 19454                           
 19455                           ; BSR set to: 15
 19456                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 19457  0131A4  A262               	btfss	3938,1,c	;volatile
 19458  0131A6  D00C               	goto	i2l6564
 19459                           
 19460                           ; BSR set to: 15
 19461                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 19462  0131A8  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19463  0131AC  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19464  0131B0  0E00               	movlw	0
 19465  0131B2  12DE               	iorwf	postinc2,f,c
 19466  0131B4  0E00               	movlw	0
 19467  0131B6  12DE               	iorwf	postinc2,f,c
 19468  0131B8  0E02               	movlw	2
 19469  0131BA  12DE               	iorwf	postinc2,f,c
 19470  0131BC  0E00               	movlw	0
 19471  0131BE  12DE               	iorwf	postinc2,f,c
 19472  0131C0                     i2l6564:
 19473                           
 19474                           ; BSR set to: 15
 19475                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 19476  0131C0  AA62               	btfss	3938,5,c	;volatile
 19477  0131C2  D00C               	goto	i2l6568
 19478                           
 19479                           ; BSR set to: 15
 19480                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 19481  0131C4  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19482  0131C8  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19483  0131CC  0E00               	movlw	0
 19484  0131CE  12DE               	iorwf	postinc2,f,c
 19485  0131D0  0E00               	movlw	0
 19486  0131D2  12DE               	iorwf	postinc2,f,c
 19487  0131D4  0E04               	movlw	4
 19488  0131D6  12DE               	iorwf	postinc2,f,c
 19489  0131D8  0E00               	movlw	0
 19490  0131DA  12DE               	iorwf	postinc2,f,c
 19491  0131DC                     i2l6568:
 19492                           
 19493                           ; BSR set to: 15
 19494                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 19495  0131DC  AC62               	btfss	3938,6,c	;volatile
 19496  0131DE  D00C               	goto	i2l6572
 19497                           
 19498                           ; BSR set to: 15
 19499                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 19500  0131E0  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19501  0131E4  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19502  0131E8  0E00               	movlw	0
 19503  0131EA  12DE               	iorwf	postinc2,f,c
 19504  0131EC  0E00               	movlw	0
 19505  0131EE  12DE               	iorwf	postinc2,f,c
 19506  0131F0  0E08               	movlw	8
 19507  0131F2  12DE               	iorwf	postinc2,f,c
 19508  0131F4  0E00               	movlw	0
 19509  0131F6  12DE               	iorwf	postinc2,f,c
 19510  0131F8                     i2l6572:
 19511                           
 19512                           ; BSR set to: 15
 19513                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 19514  0131F8  AE62               	btfss	3938,7,c	;volatile
 19515  0131FA  D00C               	goto	i2l6576
 19516                           
 19517                           ; BSR set to: 15
 19518                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 19519  0131FC  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19520  013200  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19521  013204  0E00               	movlw	0
 19522  013206  12DE               	iorwf	postinc2,f,c
 19523  013208  0E00               	movlw	0
 19524  01320A  12DE               	iorwf	postinc2,f,c
 19525  01320C  0E10               	movlw	16
 19526  01320E  12DE               	iorwf	postinc2,f,c
 19527  013210  0E00               	movlw	0
 19528  013212  12DE               	iorwf	postinc2,f,c
 19529  013214                     i2l6576:
 19530                           
 19531                           ; BSR set to: 15
 19532                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 19533  013214  CF61 F040          	movff	3937,??_CANreceiveMessage	;volatile
 19534  013218  6A41               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19535  01321A  6A42               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19536  01321C  6A43               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19537  01321E  0E15               	movlw	21
 19538  013220                     i2u832_45:
 19539  013220  90D8               	bcf	status,0,c
 19540  013222  3640               	rlcf	??_CANreceiveMessage,f,c
 19541  013224  3641               	rlcf	??_CANreceiveMessage+1,f,c
 19542  013226  3642               	rlcf	??_CANreceiveMessage+2,f,c
 19543  013228  3643               	rlcf	??_CANreceiveMessage+3,f,c
 19544  01322A  2EE8               	decfsz	wreg,f,c
 19545  01322C  D7F9               	goto	i2u832_45
 19546  01322E  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19547  013232  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19548  013236  5040               	movf	??_CANreceiveMessage,w,c
 19549  013238  12DE               	iorwf	postinc2,f,c
 19550  01323A  5041               	movf	??_CANreceiveMessage+1,w,c
 19551  01323C  12DE               	iorwf	postinc2,f,c
 19552  01323E  5042               	movf	??_CANreceiveMessage+2,w,c
 19553  013240  12DE               	iorwf	postinc2,f,c
 19554  013242  5043               	movf	??_CANreceiveMessage+3,w,c
 19555  013244  12DE               	iorwf	postinc2,f,c
 19556  013246                     i2l6578:
 19557                           
 19558                           ; BSR set to: 15
 19559                           ;inc\CANlib.h: 629: }
 19560                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 19561  013246  9E60               	bcf	3936,7,c	;volatile
 19562                           
 19563                           ; BSR set to: 15
 19564                           ;inc\CANlib.h: 632: return (error);
 19565                           ;	Return value of _CANreceiveMessage is never used
 19566  013248  0012               	return	
 19567  01324A                     __end_of_CANreceiveMessage:
 19568                           	opt stack 0
 19569                           pclatu	equ	0xFFB
 19570                           pclath	equ	0xFFA
 19571                           tblptru	equ	0xFF8
 19572                           tblptrh	equ	0xFF7
 19573                           tblptrl	equ	0xFF6
 19574                           tablat	equ	0xFF5
 19575                           prodh	equ	0xFF4
 19576                           prodl	equ	0xFF3
 19577                           intcon	equ	0xFF2
 19578                           postinc0	equ	0xFEE
 19579                           fsr0h	equ	0xFEA
 19580                           fsr0l	equ	0xFE9
 19581                           wreg	equ	0xFE8
 19582                           indf1	equ	0xFE7
 19583                           fsr1h	equ	0xFE2
 19584                           fsr1l	equ	0xFE1
 19585                           bsr	equ	0xFE0
 19586                           indf2	equ	0xFDF
 19587                           postinc2	equ	0xFDE
 19588                           postdec2	equ	0xFDD
 19589                           fsr2h	equ	0xFDA
 19590                           fsr2l	equ	0xFD9
 19591                           status	equ	0xFD8
 19592                           
 19593 ;; *************** function _CANisRxReady *****************
 19594 ;; Defined at:
 19595 ;;		line 1163 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 19596 ;; Parameters:    Size  Location     Type
 19597 ;;		None
 19598 ;; Auto vars:     Size  Location     Type
 19599 ;;		None
 19600 ;; Return value:  Size  Location     Type
 19601 ;;                  1    wreg      unsigned char 
 19602 ;; Registers used:
 19603 ;;		wreg, status,2
 19604 ;; Tracked objects:
 19605 ;;		On entry : 0/0
 19606 ;;		On exit  : 0/0
 19607 ;;		Unchanged: 0/0
 19608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19610 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19612 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19613 ;;Total ram usage:        1 bytes
 19614 ;; Hardware stack levels used:    1
 19615 ;; This function calls:
 19616 ;;		Nothing
 19617 ;; This function is called by:
 19618 ;;		_ISR_alta
 19619 ;; This function uses a non-reentrant model
 19620 ;;
 19621                           
 19622                           	psect	text52
 19623  015DF6                     __ptext52:
 19624                           	opt stack 0
 19625  015DF6                     _CANisRxReady:
 19626                           	opt stack 21
 19627                           
 19628                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
 19629                           
 19630                           ; BSR set to: 15
 19631                           ;incstack = 0
 19632  015DF6  0E01               	movlw	1
 19633  015DF8  6E3E               	movwf	_CANisRxReady$3237,c
 19634  015DFA  BE60               	btfsc	3936,7,c	;volatile
 19635  015DFC  D005               	goto	i2l573
 19636  015DFE  010F               	movlb	15	; () banked
 19637  015E00  BF50               	btfsc	80,7,b	;volatile
 19638  015E02  D002               	goto	i2l573
 19639                           
 19640                           ; BSR set to: 15
 19641  015E04  0E00               	movlw	0
 19642  015E06  6E3E               	movwf	_CANisRxReady$3237,c
 19643  015E08                     i2l573:
 19644  015E08  503E               	movf	_CANisRxReady$3237,w,c
 19645  015E0A  0012               	return	
 19646  015E0C                     __end_of_CANisRxReady:
 19647                           	opt stack 0
 19648                           pclatu	equ	0xFFB
 19649                           pclath	equ	0xFFA
 19650                           tblptru	equ	0xFF8
 19651                           tblptrh	equ	0xFF7
 19652                           tblptrl	equ	0xFF6
 19653                           tablat	equ	0xFF5
 19654                           prodh	equ	0xFF4
 19655                           prodl	equ	0xFF3
 19656                           intcon	equ	0xFF2
 19657                           postinc0	equ	0xFEE
 19658                           fsr0h	equ	0xFEA
 19659                           fsr0l	equ	0xFE9
 19660                           wreg	equ	0xFE8
 19661                           indf1	equ	0xFE7
 19662                           fsr1h	equ	0xFE2
 19663                           fsr1l	equ	0xFE1
 19664                           bsr	equ	0xFE0
 19665                           indf2	equ	0xFDF
 19666                           postinc2	equ	0xFDE
 19667                           postdec2	equ	0xFDD
 19668                           fsr2h	equ	0xFDA
 19669                           fsr2l	equ	0xFD9
 19670                           status	equ	0xFD8
 19671                           pclatu	equ	0xFFB
 19672                           pclath	equ	0xFFA
 19673                           tblptru	equ	0xFF8
 19674                           tblptrh	equ	0xFF7
 19675                           tblptrl	equ	0xFF6
 19676                           tablat	equ	0xFF5
 19677                           prodh	equ	0xFF4
 19678                           prodl	equ	0xFF3
 19679                           intcon	equ	0xFF2
 19680                           postinc0	equ	0xFEE
 19681                           fsr0h	equ	0xFEA
 19682                           fsr0l	equ	0xFE9
 19683                           wreg	equ	0xFE8
 19684                           indf1	equ	0xFE7
 19685                           fsr1h	equ	0xFE2
 19686                           fsr1l	equ	0xFE1
 19687                           bsr	equ	0xFE0
 19688                           indf2	equ	0xFDF
 19689                           postinc2	equ	0xFDE
 19690                           postdec2	equ	0xFDD
 19691                           fsr2h	equ	0xFDA
 19692                           fsr2l	equ	0xFD9
 19693                           status	equ	0xFD8
 19694                           
 19695                           	psect	rparam
 19696  0000                     pclatu	equ	0xFFB
 19697                           pclath	equ	0xFFA
 19698                           tblptru	equ	0xFF8
 19699                           tblptrh	equ	0xFF7
 19700                           tblptrl	equ	0xFF6
 19701                           tablat	equ	0xFF5
 19702                           prodh	equ	0xFF4
 19703                           prodl	equ	0xFF3
 19704                           intcon	equ	0xFF2
 19705                           postinc0	equ	0xFEE
 19706                           fsr0h	equ	0xFEA
 19707                           fsr0l	equ	0xFE9
 19708                           wreg	equ	0xFE8
 19709                           indf1	equ	0xFE7
 19710                           fsr1h	equ	0xFE2
 19711                           fsr1l	equ	0xFE1
 19712                           bsr	equ	0xFE0
 19713                           indf2	equ	0xFDF
 19714                           postinc2	equ	0xFDE
 19715                           postdec2	equ	0xFDD
 19716                           fsr2h	equ	0xFDA
 19717                           fsr2l	equ	0xFD9
 19718                           status	equ	0xFD8
 19719                           
 19720                           	psect	temp
 19721  00004D                     btemp:
 19722                           	opt stack 0
 19723  00004D                     	ds	1
 19724  0000                     int$flags	set	btemp
 19725                           pclatu	equ	0xFFB
 19726                           pclath	equ	0xFFA
 19727                           tblptru	equ	0xFF8
 19728                           tblptrh	equ	0xFF7
 19729                           tblptrl	equ	0xFF6
 19730                           tablat	equ	0xFF5
 19731                           prodh	equ	0xFF4
 19732                           prodl	equ	0xFF3
 19733                           intcon	equ	0xFF2
 19734                           postinc0	equ	0xFEE
 19735                           fsr0h	equ	0xFEA
 19736                           fsr0l	equ	0xFE9
 19737                           wreg	equ	0xFE8
 19738                           indf1	equ	0xFE7
 19739                           fsr1h	equ	0xFE2
 19740                           fsr1l	equ	0xFE1
 19741                           bsr	equ	0xFE0
 19742                           indf2	equ	0xFDF
 19743                           postinc2	equ	0xFDE
 19744                           postdec2	equ	0xFDD
 19745                           fsr2h	equ	0xFDA
 19746                           fsr2l	equ	0xFD9
 19747                           status	equ	0xFD8


Data Sizes:
    Strings     171
    Constant    144
    Data        1
    BSS         111
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     30      76
    BANK0           160    108     141
    BANK1           256     35      70
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_15(CODE[8]), STR_14(CODE[8]), STR_13(CODE[8]), STR_12(CODE[5]), 
		 -> STR_11(CODE[5]), STR_10(CODE[5]), STR_9(CODE[14]), STR_8(CODE[17]), 
		 -> STR_7(CODE[12]), STR_6(CODE[21]), STR_4(CODE[21]), STR_3(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_speed(BANK0[1]), park_assist_state(BANK1[8]), data_brake(BANK0[1]), data_steering(BANK0[1]), 
		 -> data(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->_CANreceiveMessage
    _ISR_alta->i2_CANsendMessage

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _board_initialization->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _LCD_Handler->_sprintf
    _sprintf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___awdiv->___awmod
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->_fround
    ___flneg->___flmul
    ___fldiv->___xxtofl
    _LCD_write_string->_LCD_write_char
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_goto_xy->_LCD_shift_cursor
    _LCD_shift_cursor->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul
    _CAN_Send->_CANsendMessage

Critical Paths under _ISR_alta in BANK0

    _ISR_alta->i2_CANsendMessage

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_alta in BANK3

    None.

Critical Paths under _ISR_bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_alta in BANK4

    None.

Critical Paths under _ISR_bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_alta in BANK5

    None.

Critical Paths under _ISR_bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_alta in BANK6

    None.

Critical Paths under _ISR_bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_alta in BANK7

    None.

Critical Paths under _ISR_bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_alta in BANK8

    None.

Critical Paths under _ISR_bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_alta in BANK9

    None.

Critical Paths under _ISR_bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_alta in BANK10

    None.

Critical Paths under _ISR_bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_alta in BANK11

    None.

Critical Paths under _ISR_bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_alta in BANK12

    None.

Critical Paths under _ISR_bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  249545
                                             27 BANK1      8     8      0
                           _CAN_Send
                    _CAN_interpreter
                       _CANisTxReady
                     _CANsendMessage
                  _F1_Button_Polling
                  _F2_Button_Polling
                   _Joystick_Polling
                        _LCD_Handler
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                 _PWR_Button_Polling
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   51321
                      _CANInitialize
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             32 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             18 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             18 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWR_Button_Polling                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0  131306
                       _CANisTxReady
                     _CANsendMessage
                          _LCD_clear
                      _LCD_goto_line
                        _LCD_goto_xy
                     _LCD_initialize
                  _LCD_write_message
                   _LCD_write_string
                            ___fldiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   41624
                                            100 BANK0      8     0      8
                                              0 BANK1     27    27      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    9426
                                             57 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             18 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    9147
                                             57 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    4925
                                             32 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             18 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             24 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                             18 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                             18 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     861
                                             18 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                             18 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                             18 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     799
                                             90 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3851
                                             90 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             20    12      8    3518
                                             70 BANK0     20    12      8
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     219
                                             57 BANK0      4     0      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     728
                                             18 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1305
                                             32 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9519
                                             35 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (1) _LCD_write_message                                    2     0      2   10443
                                             35 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_char                                       5     5      0    9300
                                             30 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   27796
                                             32 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    8919
                                             30 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    8780
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_xy                                          2     1      1   18060
                                             33 BANK0      2     1      1
                      _LCD_goto_line
                   _LCD_shift_cursor
 ---------------------------------------------------------------------------------
 (3) _LCD_shift_cursor                                     3     2      1    8956
                                             30 BANK0      3     2      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    8811
                                             30 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_send_command                                     4     1      3    8780
                                             26 BANK0      4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (4) _LCD_enable_pulse                                     0     0      0    1264
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1264
                                             24 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             18 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     2     2      0      68
                                             18 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _F2_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _F1_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CAN_interpreter                                      4     4      0       0
                                             18 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _CAN_Send                                             0     0      0    4107
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4083
                                             18 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR_bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_alta                                            15    15      0    4512
                                             29 COMRAM     1     1      0
                                              4 BANK0     14    14      0
                       _CANisRxReady
                  _CANreceiveMessage
                     i2_CANisTxReady
                   i2_CANsendMessage
 ---------------------------------------------------------------------------------
 (10) i2_CANsendMessage                                   16     8      8    3197
                                             17 COMRAM    12     4      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (10) i2_CANisTxReady                                      1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _CANreceiveMessage                                  12    10      2    1137
                                             17 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (10) _CANisRxReady                                        1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_Send
     _CANisTxReady
     _CANsendMessage
   _CAN_interpreter
   _CANisTxReady
   _CANsendMessage
   _F1_Button_Polling
   _F2_Button_Polling
   _Joystick_Polling
   _LCD_Handler
     _CANisTxReady
     _CANsendMessage
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_xy
       _LCD_goto_line
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_shift_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_initialize
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_cursor
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
     _delay_ms
       ___wmul
     _delay_set_quartz
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _PWR_Button_Polling
   ___fladd
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___xxtofl (ARG)
   ___flneg
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fltol
     ___fladd (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___xxtofl
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   i2_CANisTxReady
   i2_CANsendMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     23      46       7       27.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6C      8D       5       88.1%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     1E      4C       1       80.9%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11F      20        0.0%
DATA                 0      0     11F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri Apr 15 17:16:14 2016

                   ___fldiv@aexp 0098                     ___fldiv@bexp 0097  
                              _x 00E7                                _y 0264  
                              _z 00E8        __size_of_delay_set_quartz 000A  
           __end_of_CANSetFilter 0B06                     ?_LCD_Handler 002D  
                   ___fldiv@sign 008C                     ___awdiv@sign 007D  
                             _id 0012                               bsr 000FE0  
            ___wmul@multiplicand 0074                      __CFG_BORV$3 000000  
                   __CFG_CP0$OFF 000000                     __CFG_CP1$OFF 000000  
                   __CFG_CP2$OFF 000000                     __CFG_CP3$OFF 000000  
                    __CFG_OSC$HS 000000                     __CFG_CP4$OFF 000000  
                   __CFG_CP5$OFF 000000                              l400 17EE  
                            l401 17F2                              l410 1958  
                            l402 17FE                              l411 1962  
                            l500 073A                              l405 18B8  
                            l501 0746                              l414 1A72  
                            l406 18BC                              l510 0852  
                            l502 074A                              l415 1A76  
                            l407 19B4                              l511 0856  
                            l503 0756                              l416 1A82  
                            l408 1944                              l520 0962  
                            l512 0862                              l504 075A  
                            l409 194E                              l521 096E  
                            l513 0866                              l505 0766  
                            l530 0A7A                              l522 0972  
                            l514 0872                              l450 4182  
                            l370 4A50                              l531 0A7E  
                            l523 097E                              l515 0876  
                            l451 4186                              l371 4A5A  
                            l380 1446                              l532 0A8A  
                            l524 0982                              l516 0882  
                            l508 0842                              l460 428E  
                            l452 4192                              l444 4152  
                            l381 1450                              l533 0A8E  
                            l525 098E                              l509 0846  
                            l461 429A                              l445 4156  
                            l390 18A2                              l382 145A  
                            l534 0A9A                              l526 0992  
                            l462 429E                              l446 4162  
                            l391 1634                              l375 161E  
                            l535 0A9E                              l527 099E  
                            l519 095E                              l463 42AA  
                            l455 426A                              l447 4166  
                            l392 1638                              l376 13B0  
                            l536 0AAA                              l480 0514  
                            l456 426E                              l448 4172  
                            l393 1730                              l385 156A  
                            l377 13B4                              l537 0AAE  
                            l481 0520                              l457 427A  
                            l449 4176                              l394 16C0  
                            l386 156E                              l378 14AC  
                            l538 0ABA                              l490 062A  
                            l482 0524                              l458 427E  
                            l395 16CA                              l387 157A  
                            l379 143C                              l491 062E  
                            l483 0530                              l475 04F0  
                            l459 428A                              l396 16D4  
                            l492 063A                              l476 04F4  
                            l397 16DE                              l581 5BA8  
                            l493 063E                              l477 0500  
                            l494 064A                              l486 060A  
                            l478 0504                              l487 060E  
                            l479 0510                              l568 5D2A  
                            l488 061A                              l497 0726  
                            l489 061E                              l498 072A  
                            l499 0736                              l781 244C  
                            l870 5A28                              l863 5DB0  
                            l775 2384                              l856 5DCC  
                            l849 5D78                              l954 10FA  
                            l868 5A26             ??_PWR_Button_Polling 0072  
                   __CFG_CPB$OFF 000000                     __CFG_CPD$OFF 000000  
                    ?_LCD_cursor 007E                              _dir 00E4  
                            _msg 0100                              _str 010F  
                   ___awmod@sign 0077                              prod 000FF3  
                            wreg 000FE8                     ___flmul@aexp 008D  
                   ___flmul@bexp 0092                     ___flmul@sign 008C  
                   ___flmul@temp 0097                     ___flmul@prod 0093  
                   __CFG_LVP$OFF 000000           __size_of_LCD_goto_line 00EC  
                   ___fltol@exp1 00C3                     __CFG_WDT$OFF 000000  
                           l1522 3DC6                             l1531 3DFE  
                           l1179 4FFE                             l1283 4CE6  
                           l1372 562A                             l1276 4C22  
                           l1533 3E6C                             l1525 3D6E  
                           l1189 4E38                             l1277 4C66  
                           l1382 596E                             l1552 37A6  
                           l1561 3AB0                             l1466 342A  
                           l1483 359E                             l1467 341E  
                           l1492 3632                             l1468 33EA  
                           l5100 0230                             l1581 48BC  
                           l1574 4810                             l5014 41DC  
                           l1559 3A42                             l5040 42AE  
                           l5008 4196                             l1569 3B54  
                           l6012 1A86                             l1588 4918  
                           l1589 4930                             l6006 1A66  
                           l5222 0694                             l5118 02EA  
                           l5216 064E                             l5136 03A4  
                           l5064 00BE                             l5250 076A  
                           l5154 045E                             l5082 0176  
                           l5324 09E8                             l5318 09A2  
                           l5182 0534                             l5352 0ABE  
                           l5256 07B0                             l6402 3E12  
                           l6322 3BDA                             l5290 08CC  
                           l6412 3E66                             l6316 3BB6  
                           l8012 4DE6                             l8004 4D46  
                           l8100 5902                             l5284 0886  
                           l5188 057A                             l6430 3F20  
                           l6422 3EBC                             l6342 3C38  
                           l6326 3BE4                             l8102 5912  
                           l6336 3C14                             l8008 4D94  
                           l7400 332E                             l8104 5918  
                           l9000 257E                             l6426 3EEA  
                           l6346 3C42                             l8018 4E84  
                           l8026 5BDC                             l8130 489E  
                           l6436 3F30                             l6428 3EFE  
                           l7500 35E6                             l8052 535E  
                           l8036 52F0                             l8108 595C  
                           l8124 4848                             l9004 2582  
                           l5910 16E8                             l6702 5A1C  
                           l6438 3F34                             l6390 3DC2  
                           l6366 3CC4                             l6358 3C96  
                           l7510 3606                             l7430 336A  
                           l8070 53C4                             l8062 538E  
                           l8150 4982                             l8126 4850  
                           l8118 4820                             l8302 0E6A  
                           l8230 0B66                             l8222 0B30  
                           l9030 27AA                             l9014 26A4  
                           l6720 5720                             l7336 5B9A  
                           l6384 3D7A                             l6376 3D42  
                           l7520 362C                             l7504 35F2  
                           l7512 360C                             l8064 539E  
                           l8056 5372                             l8080 55AE  
                           l8136 48FA                             l8128 4860  
                           l8400 12E0                             l8320 0F7E  
                           l8240 0BDA                             l8216 0B16  
                           l9024 2732                             l5930 17E2  
                           l5834 1464                             l6730 572E  
                           l8162 5C40                             l8170 5CFC  
                           l7530 3688                             l7442 33FE  
                           l8066 53A8                             l8082 55BE  
                           l8138 490A                             l8322 0F84  
                           l8306 0E9C                             l8234 0BB0  
                           l9018 2728                             l5860 157E  
                           l6396 3DE8                             l7444 3404  
                           l7364 328C                             l8092 5618  
                           l8084 55C4                             l8412 1364  
                           l8404 1308                             l8340 1004  
                           l8316 0F06                             l8252 0C24  
                           l8244 0BE0                             l8236 0BCA  
                           l4948 5DE8                             l5854 155E  
                           l6742 578C                             l8158 5C26  
                           l8166 5CE8                             l7550 36E0  
                           l7542 36C8                             l7534 369A  
                           l7382 32D6                             l7358 3268  
                           l8350 10AE                             l8334 0FD0  
                           l8262 0C76                             l8246 0C0A  
                           l8414 136A                             l4982 40C6  
                           l4966 4010                             l5790 4A5E  
                           l5936 1802                             l7544 36CC  
                           l7472 349C                             l7448 340E  
                           l7392 3304                             l7376 32C2  
                           l7368 3296                             l7704 5512  
                           l7720 5562                             l7560 3710  
                           l8408 1338                             l8416 138C  
                           l6682 563C                             l7538 36BC  
                           l7466 348C                             l7458 344E  
                           l7706 551E                             l7642 3A56  
                           l7570 374C                             l8370 112E  
                           l8362 10FE                             l8338 0FFC  
                           l8290 0DB0                             l8530 4758  
                           l5794 4A66                             l6692 5684  
                           l7468 3492                             l7476 34AE  
                           l7388 32FA                             l7724 5576  
                           l7716 5554                             l7708 5524  
                           l7740 5870                             l7652 3AAA  
                           l7636 3A2C                             l8356 10C8  
                           l8348 10A0                             l8292 0DC6  
                           l8540 479A                             l5796 4AAA  
                           l5788 4A48                             l7494 35D0  
                           l7486 357E                             l7662 3B00  
                           l7590 37BA                             l7566 3734  
                           l8374 1190                             l8358 10DC  
                           l8294 0E02                             l8286 0D7E  
                           l8278 0CFA                             l8526 4736  
                           l8518 4708                             l6696 56BC  
                           l7920 4C9C                             l7760 58DC  
                           l7752 58BA                             l7744 5884  
                           l7736 5860                             l7584 378E  
                           l7568 373A                             l7824 4594  
                           l7816 449C                             l8392 12AC  
                           l8384 1284                             l8296 0E18  
                           l8544 47B4                             l8528 4748  
                           l5986 196C                             l7770 5AA8  
                           l7930 4CCC                             l7746 5890  
                           l7666 3B26                             l7594 37CE  
                           l7586 3794                             l7578 376A  
                           l8386 1292                             l8394 12BA  
                           l7780 5472                             l7940 4EAE  
                           l7932 4CDC                             l7924 4CB0  
                           l7692 54DE                             l7748 5896  
                           l7756 58C8                             l7676 3B74  
                           l7668 3B3A                             l7844 2A86  
                           l8492 45EC                             l7774 53DC  
                           l7782 54A4                             l7766 5A76  
                           l7678 3B7E                             l7862 2D0C  
                           l7838 29B4                             l7776 540E  
                           l7960 4F28                             l7856 2C3A  
                           l7848 2AB8                             l8920 235A  
                           l7778 5440                             l7946 4ED4  
                           l7890 4BCE                             l7698 54F4  
                           l7874 5CDC                             l8914 22C4  
                           l7980 4FB4                             l7884 4B94  
                           l8924 236C                             l7990 4FE4  
                           l8950 244E                             l8934 2392  
                           l8926 2374                             l7992 4FF4  
                           l7984 4FC8                             l7968 4F7C  
                           l8936 239E                             l8970 24C4  
                           l8956 2470                             l8964 24B2  
                           l8980 2510                             l8884 222E  
                           STR_1 FF92                             l8992 253E  
                           STR_2 FF68                             STR_3 FF53  
                           l8978 2508                             STR_4 FF92  
                           STR_5 FFF9                             STR_6 FF7D  
                           STR_7 FFC6                             STR_8 FFA7  
                           STR_9 FFB8                             _LATA 000F89  
                           _LATB 000F8A                             _LATC 000F8B  
                           _LATD 000F8C                             _LATE 000F8D  
                           u6010 03DA                             u6100 0554  
                           u6015 03CE                             u6105 0548  
                           u6025 043A                             u5610 4042  
                           u6500 0ADE                             u6420 09C2  
                           u6340 08A6                             u6260 078A  
                           u6180 066E                             u5700 41B6  
                           u7205 1530                             u7310 1708  
                           u5615 4036                             u7320 1754  
                           u6505 0AD2                             u6425 09B6  
                           u6345 089A                             u6265 077E  
                           u6185 0662                             u5705 41AA  
                           u5625 40A2                             u5810 003A  
                           u5570 3F8C                             u7315 16FC  
                           u7180 1484                             u8060 3ED0  
              _F2_Button_Polling 5DA8                             u7325 1748  
                           u7190 14D0                             u7335 17B4  
                           u5815 002E                             u5575 3F80  
                           u7440 198C                             u7185 1478  
                           u5905 020C                             u5825 009A  
                           u5585 3FEC                             u7450 19D8  
                           u5930 0266                             u5850 00F2  
                           u7195 14C4                             u5780 42CE  
                           u7445 1980                             u8430 5DDA  
                           u7455 19CC                             u5935 025A  
                           u5855 00E6                             u7465 1A38  
                           u5945 02C6                             u5865 0152  
                           u5785 42C2                             u5970 0320  
                           u5890 01AC                             u8380 5D86  
                           u8445 5DDC                             u8550 5A4A  
                           u5975 0314                             u5895 01A0  
                           u8480 5DBE                             u5985 0380  
                           u8395 5D88                             u8556 5A4C  
                           u9700 33B4                             u9605 5B74  
                           u9606 5B76                             u9710 33CC  
                           u8495 5DC0                             u9720 33CE  
                           u9575 5B50                             u9576 5B52  
                           u9585 5B5C                             u9586 5B5E  
                           u9595 5B68                             u9596 5B6A  
            __size_of_CANSetMask 039E                     ?_LCD_goto_xy 0081  
                           _data 002C                             _main 2204  
             ?_F2_Button_Polling 002D        __size_of_LCD_send_command 003A  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           indf1 000FE7                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
                           btemp 004D                             pclat 000FFA  
                           prodh 000FF4                             prodl 000FF3  
                           start 00C0                    __CFG_IESO$OFF 000000  
                ___fldiv@new_exp 0091               __size_of_LCD_clear 0032  
               __end_of_CAN_Send 56F6                     _sprintf$4211 0125  
                  __CFG_MCLRE$ON 000000                     ___param_bank 000010  
            ??_F2_Button_Polling 0072         __end_of_LCD_enable_pulse 5D52  
               _CANOperationMode 5DE0          __size_of_LCD_initialize 016E  
     __size_of_CANreceiveMessage 050C                    ___fltol@sign1 00C2  
                __end_of___fladd 36F2                            ?_main 002D  
                __end_of___fldiv 3F58                  __end_of___awdiv 5580  
                __end_of___flneg 5BEE                            STR_10 FFEF  
                          STR_11 FFF4                            STR_12 FFEA  
                          STR_13 FFD2                            STR_14 FFDA  
                          STR_15 FFE2                  __end_of___awmod 58E6  
                __end_of___flmul 3B98                  __end_of___flsub 5AFE  
                __end_of___fltol 53D6                  __end_of___lldiv 563C  
                          u11100 10F2                            u10160 3B14  
                          u10080 39CE                            u10411 4B70  
                          u10085 39C2                            u10431 4BAA  
                ___awdiv@divisor 007A                            u12070 2796  
                          u10640 5310                            u12080 280E  
                __end_of___llmod 5980                            u10645 5304  
                          u12097 5B9C                            u11920 2408  
                          _T3CON 000FB1                            u11930 2420  
                          u11860 2328                            u11870 2340  
                          u11936 2422                            u11955 2448  
                          u11876 2342                            u11957 244A  
                          i2l400 1F16                            i2l401 1F1A  
                          i2l410 205A                            i2l402 1F24  
                          i2l411 2062                            i2l405 1FCE  
                          i2l422 2FD6                            i2l414 2160  
                          i2l406 1FD2                            i2l415 2164  
                          i2l407 20B0                            i2l416 216E  
                          i2l408 204A                            i2l409 2052  
                          i2l380 1BBE                            i2l381 1BC6  
                          i2l390 1FBA                            i2l382 1BCE  
                          i1l766 0078                            i2l391 1D84  
                          i2l375 1D70                            i2l392 1D88  
                          i2l376 1B3A                            i2l393 1E66  
                          i2l385 1CCC                            i2l377 1B3E  
                          i2l394 1E00                            i2l386 1CD0  
                          i2l378 1C1C                            i2l395 1E08  
                          i2l387 1CDA                            i2l379 1BB6  
                          i2l396 1E10                            i2l573 5E08  
                          i2l397 1E18                            i2l568 5D6C  
                          i2l762 528E                  ___awdiv@counter 007C  
                          _TMR3H 000FB3                            _TMR3L 000FB2  
              _CANisRxReady$3237 003E                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _TRISD 000F95                            _TRISE 000F96  
                  __CFG_PWRT$OFF 000000                    __CFG_WRT0$OFF 000000  
                  __CFG_WRT1$OFF 000000                    __CFG_WRT2$OFF 000000  
                  __CFG_WRT3$OFF 000000                    __CFG_WRT4$OFF 000000  
             __size_of_ISR_bassa 00A8                    __CFG_WRT5$OFF 000000  
                 __CFG_EBTR0$OFF 000000                   __CFG_FCMEN$OFF 000000  
                 __CFG_EBTR1$OFF 000000               CANInitialize@flags 0084  
                 __CFG_EBTR2$OFF 000000                   __CFG_EBTR3$OFF 000000  
                 __CFG_EBTR4$OFF 000000                 __end_of_ISR_alta 52CA  
                 __CFG_EBTR5$OFF 000000                    __CFG_WRTB$OFF 000000  
                  __CFG_WRTC$OFF 000000                    __CFG_WRTD$OFF 000000  
                 __CFG_EBTRB$OFF 000000        __end_of_F2_Button_Polling 5DC4  
                __end_of_dpowers FF53                            _scale 2824  
                __end_of_isdigit 5CE6        __size_of_LCD_shift_cursor 004C  
                 __pbitbssCOMRAM 0258             __end_of_CANisRxReady 5E0C  
                          tablat 000FF5             __end_of_CANisTxReady 5D30  
                          status 000FD8                  __end_of_sprintf 139A  
            __size_of_LCD_cursor 0032                  __initialization 5AFE  
                   __end_of_main 2824    __size_of_board_initialization 00A4  
                  _LCD_goto_line 53D6                ?_Joystick_Polling 002D  
             ??_Joystick_Polling 0072                ?_LCD_write_string 0083  
                         ??_main 013E        __size_ofi2_CANsendMessage 06DE  
                  __activetblptr 000003                   _JoystickValues 00DC  
             ??_LCD_write_string 0085             __size_of__tdiv_to_l_ 019E  
              _CANisTxReady$3235 0072         __size_of_CAN_interpreter 00AA  
              __end_of_LCD_clear 5CBC            i2CANsendMessage@flags 0045  
         LCD_write_string@buffer 0083                           _ADCON1 000FC1  
                         _CANCON 000F6F                 ___llmod@dividend 0072  
                         ?_scale 0099                           _ADRESH 000FC4  
               ___awdiv@dividend 0078                  __CFG_BBSIZ$1024 000000  
                         i2l6510 2F80                           i2l6502 2F44  
                         i2l6514 2F9E                           i2l6506 2F62  
                         i2l6516 2FD0                           i2l6560 31A4  
                         i2l6552 3136                           i2l6490 2EB6  
                         i2l6572 31F8                           i2l6564 31C0  
                         i2l6576 3214                           i2l6568 31DC  
                         i2l6578 3246                           i2l6498 2F26  
                         i2l8604 1CDE                           i2l8730 206A  
                         i2l8750 2156                           i2l8654 1E20  
                         i2l8830 51B6                           i2l8680 1F28  
                         i2l8674 1F0C                           i2l8578 1BD6  
                         i2l8756 2172                           i2l8844 51FC  
                         i2l8836 51D8                           i2l8598 1CC2  
                         i2l8854 522C                           i2l8864 5258  
                         i2l8848 5204                           i2l8868 5286  
                         _RXB0D0 000F66                           _RXB0D1 000F67  
                         _RXB0D2 000F68                           _RXB0D3 000F69  
                         _RXB0D4 000F6A                           _RXB1D0 000F56  
                         _RXB0D5 000F6B                           _RXB1D1 000F57  
                         _RXB0D6 000F6C                           _RXB1D2 000F58  
                         _RXB0D7 000F6D                           _RXB1D3 000F59  
                         _RXB1D4 000F5A                           _RXB1D5 000F5B  
                         _RXB1D6 000F5C                           _RXB1D7 000F5D  
                         _TXB0D0 000F46                           _TXB0D1 000F47  
                         _TXB0D2 000F48                           _TXB0D3 000F49  
                         _TXB1D0 000F36                           _TXB0D4 000F4A  
                         _TXB1D1 000F37                           _TXB0D5 000F4B  
                         _TXB1D2 000F38                           _TXB0D6 000F4C  
                         _TXB1D3 000F39                           _TXB0D7 000F4D  
                         _TXB2D0 000F26                           _TXB1D4 000F3A  
                         _TXB2D1 000F27                           _TXB1D5 000F3B  
                         _TXB2D2 000F28                           _TXB1D6 000F3C  
                         _TXB2D3 000F29                           _TXB1D7 000F3D  
                         _TXB2D4 000F2A                           _TXB2D5 000F2B  
                         _TXB2D6 000F2C                           _TXB2D7 000F2D  
             CANsendMessage@data 0076               CANsendMessage@tamp 007E  
               __end_of___xxtofl 4994                  _switch_position 00E6  
               __end_of_delay_ms 5BB6            __size_of_CANSetFilter 0B06  
                 __CFG_XINST$OFF 000000                __end_of_ISR_bassa 00C0  
               __end_of__powers_ FF2B                       _MotoreFlag 025B  
                 ?_LCD_goto_line 002D                           ___flge 4CF8  
                      ??___fladd 00AE                 _delay_set_quartz 5E0C  
                         ___wmul 5BEE                        ??___fldiv 0088  
                      ??___awdiv 007C                        ??___flneg 009D  
                 __CFG_STVREN$ON 000000                        ??___awmod 0076  
                      ??___flmul 0088                        ??___flsub 00C2  
                      ??___fltol 00BE                        ??___lldiv 007A  
                      ??___llmod 007A                     ??_CANSetMask 0077  
        __size_of_LCD_write_char 0096                           _fround 42F6  
 LCD_initialize@quartz_frequency 0080                           clear_0 5B04  
                         clear_1 5B10                           clear_2 5B20  
               ___awdiv@quotient 007E                  ___awmod@divisor 0074  
           __size_of_LCD_Handler 01DA                  ___awmod@counter 0076  
                __CFG_BOREN$BOHW 000000                _JoystickConstants 00CC  
                      ??_isdigit 0072                     __mediumconst FEC2  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                        ?_CAN_Send 002D  
     __size_of_F2_Button_Polling 001C                        ??_sprintf 0123  
                   _CANSetFilter 0000                       ___flge@ff1 0072  
                     ___flge@ff2 0076                     ___xxtofl@arg 007C  
                   ___xxtofl@exp 007B                     ___xxtofl@val 0072  
                     __accesstop 0060          __end_of__initialization 5B38  
             __end_of_CANSetMask 42F6                  __CFG_PBADEN$OFF 000000  
                     _SterzoFlag 025D                       ___flneg@f1 0099  
               _LCD_send_command 5B42                    ___rparam_used 000001  
                     ___fltol@f1 00BA             __size_of_LCD_goto_xy 001C  
                 __pcstackCOMRAM 002D                     __pidataBANK0 5E16  
                      ?_ISR_alta 002D                     LCD_goto_xy@x 0082  
                   LCD_goto_xy@y 0081                    __end_of_scale 2D3E  
                 _LCD_initialize 5010                _LCD_write_message 5C24  
          CANSetFilter@numBuffer 007B               ?_LCD_write_message 0083  
                     __div_to_l_ 4E88                     ??_LCD_cursor 007F  
                  _newMessageCan 025F                     _actual_speed 00DE  
          __size_of_CANisRxReady 0016            __size_of_CANisTxReady 0024  
                     ??_CAN_Send 0082                  __div_to_l_@exp1 007F  
            ??_LCD_write_message 0085                  __div_to_l_@cntr 007E  
                        ??_scale 009D                 _LCD_shift_cursor 5A6A  
                __div_to_l_@quot 007A         __end_of_CANOperationMode 5DF6  
                     __pbssBANK0 00CC                       __pbssBANK1 0100  
              ??_CAN_interpreter 0072                       _data_brake 00E9  
        __size_of_CANsendMessage 078C                       _data_speed 00EA  
                  __div_to_l_@f1 0072                    __div_to_l_@f2 0076  
                ??_LCD_goto_line 007E               __end_of_LCD_cursor 5C8A  
         __end_of_LCD_initialize 517E                          ?___flge 0072  
                        ?___wmul 0072                       ??_ISR_alta 0064  
      __end_of_LCD_write_message 5C58                ?_LCD_enable_pulse 002D  
                        ?_fround 0099                     _CANisRxReady 5DF6  
                        _CANSTAT 000F6E               ??_LCD_enable_pulse 007A  
                   _CANisTxReady 5D0C                        ISR_alta@i 004A  
                        _BRGCON1 000F70                          _BRGCON2 000F71  
                        _BRGCON3 000F72                 i2_CANsendMessage 1B26  
    __size_of_PWR_Button_Polling 001C                        ?___xxtofl 0072  
        __size_ofi2_CANisTxReady 001E           __size_of_CANInitialize 01C6  
               LCD_cursor@active 007F                        ?_delay_ms 0078  
                        _RXB0DLC 000F65                          _RXB1DLC 000F55  
                        _RXB0CON 000F60                          _RXB1CON 000F50  
                        _TXB0DLC 000F45                          _TXB1DLC 000F35  
                        _TXB2DLC 000F25              CANsendMessage@flags 0079  
                        _AbsFlag 0258                __end_of__npowers_ FEF7  
                        __Hparam 0000                       _left_speed 0026  
                     _scale$4210 009D                          __Lparam 0000  
               delay_ms@value_ms 0078                  ?_LCD_initialize 002D  
                __size_of___flge 0190                          ___fladd 324A  
                        ___fldiv 3B98                          ___awdiv 54C2  
                        ___flneg 5BB6                          ___awmod 5844  
                        ___flmul 36F2                          ___flsub 5AB6  
                        ___fltol 52CA                          ___lldiv 5580  
                __size_of___wmul 0036                   _LCD_write_char 5980  
                        ___llmod 58E6             CANInitialize@propSeg 0089  
                        __pcinit 5AFE                          _battery 002A  
                __size_of_fround 02F6                          __ramtop 0D00  
            LCD_write_char@value 0082                          __ptext0 2204  
                        __ptext1 57A0                          __ptext2 4994  
                        __ptext3 3F58                          __ptext4 0000  
                        __ptext5 5DE0                          __ptext6 5D70  
                        __ptext7 45EC                          __ptext8 0B06  
                        __ptext9 2824                      ?__div_to_l_ 0072  
               LCD_write_char@D0 0081                 LCD_write_char@D1 0080  
               LCD_write_char@D2 007F                 LCD_write_char@D3 007E  
                      _F1_switch 0259                          _dpowers FF2B  
                      _F2_switch 025A                          _isdigit 5CBC  
                     ??___xxtofl 0076                 ___awmod@dividend 0072  
                     ??_delay_ms 007A           CANreceiveMessage@error 0048  
   __end_of_board_initialization 5844        __size_of_Joystick_Polling 0054  
       __end_of_delay_set_quartz 5E16                          _sprintf 0B06  
                 __pintcode_body 517E                        _LCD_clear 5C8A  
           end_of_initialization 5B38        __size_of_LCD_write_string 0026  
                        int_func 517E                        i2u1210_47 5252  
                      i2u1134_40 1BF4                        i2u1134_45 1BEA  
                      i2u1135_40 1C3E                        i2u1135_45 1C34  
                      i2u1160_40 2088                        i2u1160_45 207E  
                      i2u1136_45 1C96                        i2u1161_40 20D2  
                      i2u1161_45 20C8                        i2u1162_45 212A  
                      i2u1147_40 1E3E                        i2u1147_45 1E34  
                      i2u1148_40 1E88                        i2u1148_45 1E7E  
                      i2u1149_45 1EE0                        i2u1177_40 51D6  
                  _CANInitialize 4994                  ___lldiv@divisor 0076  
             LCD_cursor@blinking 007E                    _parking_state 00E5  
                ___lldiv@counter 007E           __end_of_LCD_write_char 5A16  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc2 000FDE       __size_of_LCD_write_message 0034  
                 __tdiv_to_l_@f1 0072                   __tdiv_to_l_@f2 0076  
                     _wait_low_1 0261                       _wait_low_2 0262  
                     _wait_low_3 0263                        _ISR_bassa 0018  
                  ??__tdiv_to_l_ 007A                        _PORTAbits 000F80  
                      _PORTBbits 000F81                   CANSetMask@mask 0072  
                      _PORTDbits 000F83                   CANSetMask@tamp 007C  
       __end_of_LCD_send_command 5B7C                   CANSetMask@type 0076  
                    ___fladd@grs 00B9                    ___xxtofl@sign 007A  
                    ___fldiv@grs 0093                      ___fldiv@rem 008D  
              _F1_Button_Polling 5DC4                       ?_LCD_clear 002D  
             ?_F1_Button_Polling 002D                __size_of_CAN_Send 00BA  
        _clock_counter_reference 00E0                      ___flmul@grs 008E  
                 _CANsendMessage 139A                 CANInitialize@BRP 0083  
               CANInitialize@SJW 0082                   ?_CANInitialize 0080  
            ??_F1_Button_Polling 0072              __size_of__div_to_l_ 0188  
        LCD_write_integer@F17272 0008                  ?_LCD_write_char 002D  
                  ??_LCD_Handler 00CC         __end_of_LCD_shift_cursor 5AB6  
                 __end_of___flge 4E88                       ?_ISR_bassa 002D  
                 __end_of___wmul 5C24                __size_of_ISR_alta 52C2  
              LCD_shift_cursor@i 0080                   __end_of_fround 45EC  
                _CAN_interpreter 56F6                   i2_CANisTxReady 5D52  
      __end_of_F1_Button_Polling 5DE0              start_initialization 5AFE  
            __end_of__tdiv_to_l_ 4CF8              CANSetMask@numBuffer 007B  
                  _data_speed_rx 0001           __end_of_CANsendMessage 1B26  
              ?_CANOperationMode 002D                    _data_steering 00EB  
                  ??_LCD_goto_xy 0082       i2CANsendMessage@dataLength 0044  
           i2CANsendMessage@data 0042               ??_CANOperationMode 0072  
           i2CANsendMessage@tamp 0060                  ___llmod@divisor 0076  
       __end_ofi2_CANsendMessage 2204       CANInitialize@FilterConfig1 008A  
     CANInitialize@FilterConfig2 008B                  ___llmod@counter 007A  
                       ??___flge 007A             _board_initialization 57A0  
                       ??___wmul 0076                      __pdataBANK0 00EC  
               __CFG_LPT1OSC$OFF 000000                         ??_fround 009D  
         __end_ofi2_CANisTxReady 5D70                    sprintf@tmpval 0133  
                      ___fladd@a 00AA                        ___fladd@b 00A6  
         CANInitialize@phaseSeg1 0080           CANInitialize@phaseSeg2 0081  
                     fround@prec 00A5              __end_of_LCD_Handler 47C6  
                      ___fldiv@a 0084                        ___fldiv@b 0080  
                      ___flmul@a 0084                        ___flmul@b 0080  
                    __pbssCOMRAM 0001                        ___flsub@a 00BE  
                      ___flsub@b 00BA                    __pcstackBANK0 0060  
                  __pcstackBANK1 0123                      _BRGCON2bits 000F71  
                    _BRGCON3bits 000F72                 _Joystick_Polling 5A16  
              __size_of___xxtofl 01CE        __size_of_LCD_enable_pulse 0022  
                   _isdigit$3793 0073       i2CANsendMessage@identifier 003E  
              _park_assist_state 011B                __size_of_delay_ms 003A  
                    ??_LCD_clear 007E                  ?_CANsendMessage 0072  
        LCD_write_message@buffer 0083                 _LCD_write_string 5CE6  
                ??_CANInitialize 0085                      sprintf@flag 012B  
                    sprintf@fval 0139                      sprintf@prec 0137  
               ??_LCD_initialize 0080               CANSetFilter@filter 0072  
      delay_set_quartz@frequency 0072               LCD_send_command@D0 007C  
             LCD_send_command@D1 007B               LCD_send_command@D2 007A  
             LCD_send_command@D3 007D              __end_of_LCD_goto_xy 5DA8  
          __end_of_LCD_goto_line 54C2            ?_board_initialization 002D  
                      __pintcode 0008                    __pmediumconst FEC2  
                       ?___fladd 00A6                         ?___fldiv 0080  
                       ?___awdiv 0078                         ?___flneg 0099  
                       ?___awmod 0072                         ?___flmul 0080  
        __end_of_CAN_interpreter 57A0                         ?___flsub 00BA  
                       ?___fltol 00BA                         ?___lldiv 0072  
                       ?___llmod 0072                        __npowers_ FEC3  
                    ??_ISR_bassa 002D                      __pintcodelo 0018  
     __end_of_PWR_Button_Polling 5D8C                  ?i2_CANisTxReady 002D  
                    __tdiv_to_l_ 4B5A                     ??__div_to_l_ 007A  
                    _COMSTATbits 000F74                         ?_isdigit 002D  
     __size_of_F1_Button_Polling 001C                         _CAN_Send 563C  
                       ?_sprintf 00C4                   __size_of_scale 051A  
              ?_delay_set_quartz 002D            CANreceiveMessage@tamp 0049  
             ??_delay_set_quartz 0072                   ___wmul@product 0076  
                       _LATCbits 000F8B                         _LATDbits 000F8C  
                       _LATEbits 000F8D                         _IPR2bits 000FA2  
   _delay_quartz_frequency_value 00EC                         _IPR3bits 000FA5  
                       _PIE2bits 000FA0                         _PIE3bits 000FA3  
             __end_of__div_to_l_ 5010                         _PIR2bits 000FA1  
                       _PIR3bits 000FA4                         i2u812_40 2DF6  
                       i2u812_46 2DF8                         i2u813_40 2E24  
                       i2u821_45 2FAA                         i2u813_46 2E26  
                       i2u823_40 307E                         i2u815_45 2E3A  
                       i2u823_46 3080                         i2u824_40 30A8  
                       i2u832_45 3220                         i2u824_46 30AA  
                       i2u826_45 30BC                         _RXB0EIDH 000F63  
                       _RXB0EIDL 000F64                         _RXB1EIDH 000F53  
                      _pr_time_1 00D4                        _pr_time_2 00D8  
                       _RXB1EIDL 000F54                        _pr_time_3 0016  
                      _pr_time_4 001A                        _pr_time_5 001E  
                      _set_speed 00E2                         _RCONbits 000FD0  
               __CFG_WDTPS$32768 000000                         _RXB0SIDH 000F61  
                       _RXB0SIDL 000F62                         _RXF0EIDH 000F02  
                       _RXB1SIDH 000F51                         _RXF0EIDL 000F03  
                       _RXB1SIDL 000F52                         _RXF1EIDH 000F06  
                       _RXF1EIDL 000F07                         _RXF2EIDH 000F0A  
                       _RXF2EIDL 000F0B                         _RXF3EIDH 000F0E  
                       _RXF3EIDL 000F0F                         _RXF4EIDH 000F12  
                       _RXF4EIDL 000F13                         _RXF5EIDH 000F16  
                       _RXF5EIDL 000F17                         _RXF0SIDH 000F00  
                       _RXF0SIDL 000F01                         _TXB0EIDH 000F43  
                       _RXF1SIDH 000F04                         _TXB0EIDL 000F44  
                       _RXF1SIDL 000F05                         _TXB1EIDH 000F33  
                       _RXF2SIDH 000F08                         _TXB1EIDL 000F34  
                       _RXF2SIDL 000F09                         _ISR_alta 0008  
                       _TXB2EIDH 000F23                         _RXF3SIDH 000F0C  
                       _TXB2EIDL 000F24                         _RXF3SIDL 000F0D  
                       _RXF4SIDH 000F10                         _RXF4SIDL 000F11  
                       _RXF5SIDH 000F14                         _RXF5SIDL 000F15  
                       _RXM0EIDH 000F1A                         _RXM0EIDL 000F1B  
                       _TXB0SIDH 000F41                         _RXM1EIDH 000F1E  
                       _TXB0SIDL 000F42                         _RXM1EIDL 000F1F  
                       _TXB1SIDH 000F31                         _TXB1SIDL 000F32  
                       _TXB2SIDH 000F21                         _TXB2SIDL 000F22  
                    _LCD_Handler 45EC                         _RXM0SIDH 000F18  
                       _RXM0SIDL 000F19                         _RXM1SIDH 000F1C  
                       _RXM1SIDL 000F1D                         _RXERRCNT 000F75  
                       _TXERRCNT 000F76                       _ADCON0bits 000FC2  
                     _ADCON2bits 000FC0                ___wmul@multiplier 0072  
                       _RTR_Flag 025C                ?_LCD_send_command 007A  
               _actual_speed_kmh 000E               ??_LCD_send_command 007D  
                  ?_CANSetFilter 0072                       _CANCONbits 000F6F  
                    _LCD_goto_xy 5D8C                 ??_LCD_write_char 007E  
              LCD_goto_line@line 007E                         __Hrparam 0000  
                   _RXB0SIDLbits 000F62           ??_board_initialization 008C  
                       __Lrparam 0000                     _RXB1SIDLbits 000F52  
               ?_CAN_interpreter 002D                 __size_of___fladd 04A8  
                     _CANSetMask 3F58                 __size_of___fldiv 03C0  
               __size_of___awdiv 00BE                 __size_of___flneg 0038  
               __size_of___awmod 00A2                 __size_of___flmul 04A6  
              ?_LCD_shift_cursor 007E                 __size_of___flsub 0048  
               __size_of___fltol 010C                 __size_of___lldiv 00BC  
               __size_of___llmod 009A                      _fround$4208 00A1  
                    _fround$4209 009D               ??_LCD_shift_cursor 007F  
                     sprintf@exp 0131                       sprintf@val 012D  
                       ___xxtofl 47C6                     _RXF0SIDLbits 000F01  
               __size_of_isdigit 002A                         _delay_ms 5B7C  
                   _RXF1SIDLbits 000F05                   ??_CANSetFilter 0077  
               _LCD_enable_pulse 5D30                         __ptext10 5CBC  
                       __ptext11 42F6                         __ptext20 52CA  
                       __ptext12 36F2                         __ptext21 5AB6  
                       __ptext13 5844                         __ptext30 5E0C  
                       __ptext22 324A                         __ptext14 54C2  
                       __ptext31 5C58                         __ptext23 5BB6  
                       __ptext15 4B5A                         __ptext40 5A16  
                       __ptext32 5C8A                         __ptext24 4CF8  
                       __ptext16 4E88                         __ptext41 5DA8  
                       __ptext33 5D8C                         __ptext25 3B98  
                       __ptext17 47C6                         __ptext50 5D52  
                       __ptext42 5DC4                         __ptext34 5A6A  
                       __ptext26 5CE6                         __ptext18 58E6  
                       __ptext51 2D3E                         __ptext43 56F6  
                       __ptext35 53D6                         __ptext27 5C24  
                       __ptext19 5580                         __ptext52 5DF6  
                       __ptext44 563C                         __ptext36 5B42  
                       __ptext28 5980                         __ptext45 139A  
                       __ptext37 5D30                         __ptext29 5010  
                       __ptext46 5D0C                         __ptext38 5B7C  
                       __ptext39 5BEE                         __ptext49 1B26  
                   _RXF2SIDLbits 000F09                         __powers_ FEF7  
                   _RXF3SIDLbits 000F0D                 __size_of_sprintf 0894  
                   _RXF4SIDLbits 000F11                     _RXF5SIDLbits 000F15  
       CANsendMessage@dataLength 0078                    __size_of_main 0620  
              ?i2_CANsendMessage 003E             CANreceiveMessage@msg 003E  
          LCD_shift_cursor@shift 007F              i2_CANisTxReady$3235 003E  
                   _TXB0SIDLbits 000F42                Joystick_Polling@i 0073  
             ??i2_CANsendMessage 0046                     _TXB1SIDLbits 000F32  
       __end_of_Joystick_Polling 5A6A                     _TXB2SIDLbits 000F22  
                       int$flags 004D        __size_of_CANOperationMode 0016  
                  ?_CANisRxReady 002D                    ?_CANisTxReady 002D  
       __end_of_LCD_write_string 5D0C                      _RXB0DLCbits 000F65  
                    _RXB1DLCbits 000F55                     _RXM0SIDLbits 000F19  
                    _RXB0CONbits 000F60                       _LCD_cursor 5C58  
                    _RXB1CONbits 000F50                _CANreceiveMessage 2D3E  
                   _RXM1SIDLbits 000F1D                       _INTCONbits 000FF2  
                   _set_steering 002B                 ??_CANsendMessage 007A  
             ?_CANreceiveMessage 003E                         isdigit@c 0074  
                       scale@scl 00A1         CANsendMessage@identifier 0072  
                   _time_counter 0022                         intlevel1 0000  
                       intlevel2 0000                        sprintf@ap 0129  
               __tdiv_to_l_@exp1 0082                        sprintf@sp 00C4  
               __tdiv_to_l_@cntr 0081                 CANSetFilter@tamp 007C  
               __tdiv_to_l_@quot 007D                 CANSetFilter@type 0076  
            ??_CANreceiveMessage 0040                 ___lldiv@dividend 0072  
                    _TXB0DLCbits 000F45                      _right_speed 0028  
                    _TXB1DLCbits 000F35                      _TXB0CONbits 000F40  
                    _TXB2DLCbits 000F25                      _TXB1CONbits 000F30  
                    _TXB2CONbits 000F20                  _display_refresh 025E  
               ??i2_CANisTxReady 003E             CANOperationMode@mode 0072  
                 ??_CANisRxReady 003E                      ?_CANSetMask 0072  
                 ??_CANisTxReady 0072                     ?__tdiv_to_l_ 0072  
      __end_of_CANreceiveMessage 324A                         sprintf@c 013D  
                       sprintf@f 00C6                 ___lldiv@quotient 007A  
LCD_shift_cursor@number_of_shift 007E                    ___fladd@signs 00B6  
             _PWR_Button_Polling 5D70                     ___fladd@aexp 00B7  
                   ___fladd@bexp 00B8            __end_of_CANInitialize 4B5A  
            ?_PWR_Button_Polling 002D                     _power_switch 0260  
