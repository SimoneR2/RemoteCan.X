

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Mar 28 17:08:11 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    73                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    74  0000                     
    75                           	psect	idataBANK0
    76  015E7E                     __pidataBANK0:
    77                           	opt stack 0
    78                           
    79                           ;initializer for _delay_quartz_frequency_value
    80  015E7E  10                 	db	16
    81                           
    82                           	psect	mediumconst
    83  00FEF0                     __pmediumconst:
    84                           	opt stack 0
    85  00FEF0  00                 	db	0
    86  00FEF1                     __npowers_:
    87                           	opt stack 0
    88  00FEF1  0000               	dw	0
    89  00FEF3  3F80               	dw	16256
    90  00FEF5  CCCD               	dw	52429
    91  00FEF7  3DCC               	dw	15820
    92  00FEF9  D70A               	dw	55050
    93  00FEFB  3C23               	dw	15395
    94  00FEFD  126F               	dw	4719
    95  00FEFF  3A83               	dw	14979
    96  00FF01  B717               	dw	46871
    97  00FF03  38D1               	dw	14545
    98  00FF05  C5AC               	dw	50604
    99  00FF07  3727               	dw	14119
   100  00FF09  37BD               	dw	14269
   101  00FF0B  3586               	dw	13702
   102  00FF0D  BF95               	dw	49045
   103  00FF0F  33D6               	dw	13270
   104  00FF11  CC77               	dw	52343
   105  00FF13  322B               	dw	12843
   106  00FF15  705F               	dw	28767
   107  00FF17  3089               	dw	12425
   108  00FF19  E6FF               	dw	59135
   109  00FF1B  2EDB               	dw	11995
   110  00FF1D  E508               	dw	58632
   111  00FF1F  1E3C               	dw	7740
   112  00FF21  4260               	dw	16992
   113  00FF23  0DA2               	dw	3490
   114  00FF25                     __end_of__npowers_:
   115                           	opt stack 0
   116  00FF25                     __powers_:
   117                           	opt stack 0
   118  00FF25  0000               	dw	0
   119  00FF27  3F80               	dw	16256
   120  00FF29  0000               	dw	0
   121  00FF2B  4120               	dw	16672
   122  00FF2D  0000               	dw	0
   123  00FF2F  42C8               	dw	17096
   124  00FF31  0000               	dw	0
   125  00FF33  447A               	dw	17530
   126  00FF35  4000               	dw	16384
   127  00FF37  461C               	dw	17948
   128  00FF39  5000               	dw	20480
   129  00FF3B  47C3               	dw	18371
   130  00FF3D  2400               	dw	9216
   131  00FF3F  4974               	dw	18804
   132  00FF41  9680               	dw	38528
   133  00FF43  4B18               	dw	19224
   134  00FF45  BC20               	dw	48160
   135  00FF47  4CBE               	dw	19646
   136  00FF49  6B28               	dw	27432
   137  00FF4B  4E6E               	dw	20078
   138  00FF4D  02F9               	dw	761
   139  00FF4F  5015               	dw	20501
   140  00FF51  78EC               	dw	30956
   141  00FF53  60AD               	dw	24749
   142  00FF55  F2CA               	dw	62154
   143  00FF57  7149               	dw	29001
   144  00FF59                     __end_of__powers_:
   145                           	opt stack 0
   146  00FF59                     _dpowers:
   147                           	opt stack 0
   148  00FF59  0001               	dw	1
   149  00FF5B  0000               	dw	0
   150  00FF5D  000A               	dw	10
   151  00FF5F  0000               	dw	0
   152  00FF61  0064               	dw	100
   153  00FF63  0000               	dw	0
   154  00FF65  03E8               	dw	1000
   155  00FF67  0000               	dw	0
   156  00FF69  2710               	dw	10000
   157  00FF6B  0000               	dw	0
   158  00FF6D  86A0               	dw	34464
   159  00FF6F  0001               	dw	1
   160  00FF71  4240               	dw	16960
   161  00FF73  000F               	dw	15
   162  00FF75  9680               	dw	38528
   163  00FF77  0098               	dw	152
   164  00FF79  E100               	dw	57600
   165  00FF7B  05F5               	dw	1525
   166  00FF7D  CA00               	dw	51712
   167  00FF7F  3B9A               	dw	15258
   168  00FF81                     __end_of_dpowers:
   169                           	opt stack 0
   170  0000                     _RXB1CON	set	3920
   171  0000                     _RXB1CONbits	set	3920
   172  0000                     _RXB1D0	set	3926
   173  0000                     _RXB1D1	set	3927
   174  0000                     _RXB1D2	set	3928
   175  0000                     _RXB1D3	set	3929
   176  0000                     _RXB1D4	set	3930
   177  0000                     _RXB1D5	set	3931
   178  0000                     _RXB1D6	set	3932
   179  0000                     _RXB1D7	set	3933
   180  0000                     _RXB1DLC	set	3925
   181  0000                     _RXB1DLCbits	set	3925
   182  0000                     _RXB1EIDH	set	3923
   183  0000                     _RXB1EIDL	set	3924
   184  0000                     _RXB1SIDH	set	3921
   185  0000                     _RXB1SIDL	set	3922
   186  0000                     _RXB1SIDLbits	set	3922
   187  0000                     _RXF0EIDH	set	3842
   188  0000                     _RXF0EIDL	set	3843
   189  0000                     _RXF0SIDH	set	3840
   190  0000                     _RXF0SIDL	set	3841
   191  0000                     _RXF0SIDLbits	set	3841
   192  0000                     _RXF1EIDH	set	3846
   193  0000                     _RXF1EIDL	set	3847
   194  0000                     _RXF1SIDH	set	3844
   195  0000                     _RXF1SIDL	set	3845
   196  0000                     _RXF1SIDLbits	set	3845
   197  0000                     _RXF2EIDH	set	3850
   198  0000                     _RXF2EIDL	set	3851
   199  0000                     _RXF2SIDH	set	3848
   200  0000                     _RXF2SIDL	set	3849
   201  0000                     _RXF2SIDLbits	set	3849
   202  0000                     _RXF3EIDH	set	3854
   203  0000                     _RXF3EIDL	set	3855
   204  0000                     _RXF3SIDH	set	3852
   205  0000                     _RXF3SIDL	set	3853
   206  0000                     _RXF3SIDLbits	set	3853
   207  0000                     _RXF4EIDH	set	3858
   208  0000                     _RXF4EIDL	set	3859
   209  0000                     _RXF4SIDH	set	3856
   210  0000                     _RXF4SIDL	set	3857
   211  0000                     _RXF4SIDLbits	set	3857
   212  0000                     _RXF5EIDH	set	3862
   213  0000                     _RXF5EIDL	set	3863
   214  0000                     _RXF5SIDH	set	3860
   215  0000                     _RXF5SIDL	set	3861
   216  0000                     _RXF5SIDLbits	set	3861
   217  0000                     _RXM0EIDH	set	3866
   218  0000                     _RXM0EIDL	set	3867
   219  0000                     _RXM0SIDH	set	3864
   220  0000                     _RXM0SIDL	set	3865
   221  0000                     _RXM0SIDLbits	set	3865
   222  0000                     _RXM1EIDH	set	3870
   223  0000                     _RXM1EIDL	set	3871
   224  0000                     _RXM1SIDH	set	3868
   225  0000                     _RXM1SIDL	set	3869
   226  0000                     _RXM1SIDLbits	set	3869
   227  0000                     _TXB0CONbits	set	3904
   228  0000                     _TXB0D0	set	3910
   229  0000                     _TXB0D1	set	3911
   230  0000                     _TXB0D2	set	3912
   231  0000                     _TXB0D3	set	3913
   232  0000                     _TXB0D4	set	3914
   233  0000                     _TXB0D5	set	3915
   234  0000                     _TXB0D6	set	3916
   235  0000                     _TXB0D7	set	3917
   236  0000                     _TXB0DLC	set	3909
   237  0000                     _TXB0DLCbits	set	3909
   238  0000                     _TXB0EIDH	set	3907
   239  0000                     _TXB0EIDL	set	3908
   240  0000                     _TXB0SIDH	set	3905
   241  0000                     _TXB0SIDL	set	3906
   242  0000                     _TXB0SIDLbits	set	3906
   243  0000                     _TXB1CONbits	set	3888
   244  0000                     _TXB1D0	set	3894
   245  0000                     _TXB1D1	set	3895
   246  0000                     _TXB1D2	set	3896
   247  0000                     _TXB1D3	set	3897
   248  0000                     _TXB1D4	set	3898
   249  0000                     _TXB1D5	set	3899
   250  0000                     _TXB1D6	set	3900
   251  0000                     _TXB1D7	set	3901
   252  0000                     _TXB1DLC	set	3893
   253  0000                     _TXB1DLCbits	set	3893
   254  0000                     _TXB1EIDH	set	3891
   255  0000                     _TXB1EIDL	set	3892
   256  0000                     _TXB1SIDH	set	3889
   257  0000                     _TXB1SIDL	set	3890
   258  0000                     _TXB1SIDLbits	set	3890
   259  0000                     _TXB2CONbits	set	3872
   260  0000                     _TXB2D0	set	3878
   261  0000                     _TXB2D1	set	3879
   262  0000                     _TXB2D2	set	3880
   263  0000                     _TXB2D3	set	3881
   264  0000                     _TXB2D4	set	3882
   265  0000                     _TXB2D5	set	3883
   266  0000                     _TXB2D6	set	3884
   267  0000                     _TXB2D7	set	3885
   268  0000                     _TXB2DLC	set	3877
   269  0000                     _TXB2DLCbits	set	3877
   270  0000                     _TXB2EIDH	set	3875
   271  0000                     _TXB2EIDL	set	3876
   272  0000                     _TXB2SIDH	set	3873
   273  0000                     _TXB2SIDL	set	3874
   274  0000                     _TXB2SIDLbits	set	3874
   275  0000                     _ADCON0bits	set	4034
   276  0000                     _ADCON1	set	4033
   277  0000                     _ADCON2bits	set	4032
   278  0000                     _ADRESH	set	4036
   279  0000                     _BRGCON1	set	3952
   280  0000                     _BRGCON2	set	3953
   281  0000                     _BRGCON2bits	set	3953
   282  0000                     _BRGCON3	set	3954
   283  0000                     _BRGCON3bits	set	3954
   284  0000                     _CANCON	set	3951
   285  0000                     _CANCONbits	set	3951
   286  0000                     _CANSTAT	set	3950
   287  0000                     _COMSTATbits	set	3956
   288  0000                     _INTCONbits	set	4082
   289  0000                     _IPR2bits	set	4002
   290  0000                     _IPR3bits	set	4005
   291  0000                     _LATA	set	3977
   292  0000                     _LATB	set	3978
   293  0000                     _LATC	set	3979
   294  0000                     _LATCbits	set	3979
   295  0000                     _LATD	set	3980
   296  0000                     _LATDbits	set	3980
   297  0000                     _LATE	set	3981
   298  0000                     _LATEbits	set	3981
   299  0000                     _PIE2bits	set	4000
   300  0000                     _PIE3bits	set	4003
   301  0000                     _PIR2bits	set	4001
   302  0000                     _PIR3bits	set	4004
   303  0000                     _PORTAbits	set	3968
   304  0000                     _PORTBbits	set	3969
   305  0000                     _PORTDbits	set	3971
   306  0000                     _RCONbits	set	4048
   307  0000                     _RXB0CON	set	3936
   308  0000                     _RXB0CONbits	set	3936
   309  0000                     _RXB0D0	set	3942
   310  0000                     _RXB0D1	set	3943
   311  0000                     _RXB0D2	set	3944
   312  0000                     _RXB0D3	set	3945
   313  0000                     _RXB0D4	set	3946
   314  0000                     _RXB0D5	set	3947
   315  0000                     _RXB0D6	set	3948
   316  0000                     _RXB0D7	set	3949
   317  0000                     _RXB0DLC	set	3941
   318  0000                     _RXB0DLCbits	set	3941
   319  0000                     _RXB0EIDH	set	3939
   320  0000                     _RXB0EIDL	set	3940
   321  0000                     _RXB0SIDH	set	3937
   322  0000                     _RXB0SIDL	set	3938
   323  0000                     _RXB0SIDLbits	set	3938
   324  0000                     _RXERRCNT	set	3957
   325  0000                     _T3CON	set	4017
   326  0000                     _TMR3H	set	4019
   327  0000                     _TMR3L	set	4018
   328  0000                     _TRISA	set	3986
   329  0000                     _TRISB	set	3987
   330  0000                     _TRISC	set	3988
   331  0000                     _TRISD	set	3989
   332  0000                     _TRISE	set	3990
   333  0000                     _TXERRCNT	set	3958
   334  00FF81                     STR_3:
   335  00FF81  54                 	db	84	;'T'
   336  00FF82  75                 	db	117	;'u'
   337  00FF83  72                 	db	114	;'r'
   338  00FF84  6E                 	db	110	;'n'
   339  00FF85  20                 	db	32
   340  00FF86  74                 	db	116	;'t'
   341  00FF87  68                 	db	104	;'h'
   342  00FF88  65                 	db	101	;'e'
   343  00FF89  20                 	db	32
   344  00FF8A  73                 	db	115	;'s'
   345  00FF8B  77                 	db	119	;'w'
   346  00FF8C  69                 	db	105	;'i'
   347  00FF8D  74                 	db	116	;'t'
   348  00FF8E  63                 	db	99	;'c'
   349  00FF8F  68                 	db	104	;'h'
   350  00FF90  20                 	db	32
   351  00FF91  4F                 	db	79	;'O'
   352  00FF92  4E                 	db	78	;'N'
   353  00FF93  21                 	db	33
   354  00FF94  20                 	db	32
   355  00FF95  00                 	db	0
   356  00FF96                     STR_2:
   357  00FF96  3D                 	db	61	;'='
   358  00FF97  3D                 	db	61	;'='
   359  00FF98  3E                 	db	62	;'>'
   360  00FF99  20                 	db	32
   361  00FF9A  56                 	db	86	;'V'
   362  00FF9B  45                 	db	69	;'E'
   363  00FF9C  48                 	db	72	;'H'
   364  00FF9D  49                 	db	73	;'I'
   365  00FF9E  43                 	db	67	;'C'
   366  00FF9F  4C                 	db	76	;'L'
   367  00FFA0  45                 	db	69	;'E'
   368  00FFA1  20                 	db	32
   369  00FFA2  20                 	db	32
   370  00FFA3  4F                 	db	79	;'O'
   371  00FFA4  46                 	db	70	;'F'
   372  00FFA5  46                 	db	70	;'F'
   373  00FFA6  20                 	db	32
   374  00FFA7  3C                 	db	60	;'<'
   375  00FFA8  3D                 	db	61	;'='
   376  00FFA9  3D                 	db	61	;'='
   377  00FFAA  00                 	db	0
   378  00FFAB                     STR_1:
   379  00FFAB  3D                 	db	61	;'='
   380  00FFAC  3D                 	db	61	;'='
   381  00FFAD  3D                 	db	61	;'='
   382  00FFAE  3D                 	db	61	;'='
   383  00FFAF  3D                 	db	61	;'='
   384  00FFB0  3D                 	db	61	;'='
   385  00FFB1  3D                 	db	61	;'='
   386  00FFB2  3D                 	db	61	;'='
   387  00FFB3  3D                 	db	61	;'='
   388  00FFB4  3D                 	db	61	;'='
   389  00FFB5  3D                 	db	61	;'='
   390  00FFB6  3D                 	db	61	;'='
   391  00FFB7  3D                 	db	61	;'='
   392  00FFB8  3D                 	db	61	;'='
   393  00FFB9  3D                 	db	61	;'='
   394  00FFBA  3D                 	db	61	;'='
   395  00FFBB  3D                 	db	61	;'='
   396  00FFBC  3D                 	db	61	;'='
   397  00FFBD  3D                 	db	61	;'='
   398  00FFBE  3D                 	db	61	;'='
   399  00FFBF  00                 	db	0
   400  00FFC0                     STR_13:
   401  00FFC0  68                 	db	104	;'h'
   402  00FFC1  6F                 	db	111	;'o'
   403  00FFC2  6C                 	db	108	;'l'
   404  00FFC3  61                 	db	97	;'a'
   405  00FFC4  20                 	db	32
   406  00FFC5  6D                 	db	109	;'m'
   407  00FFC6  75                 	db	117	;'u'
   408  00FFC7  63                 	db	99	;'c'
   409  00FFC8  68                 	db	104	;'h'
   410  00FFC9  61                 	db	97	;'a'
   411  00FFCA  63                 	db	99	;'c'
   412  00FFCB  68                 	db	104	;'h'
   413  00FFCC  6F                 	db	111	;'o'
   414  00FFCD  00                 	db	0
   415  00FFCE                     STR_5:
   416  00FFCE  44                 	db	68	;'D'
   417  00FFCF  69                 	db	105	;'i'
   418  00FFD0  72                 	db	114	;'r'
   419  00FFD1  65                 	db	101	;'e'
   420  00FFD2  63                 	db	99	;'c'
   421  00FFD3  74                 	db	116	;'t'
   422  00FFD4  69                 	db	105	;'i'
   423  00FFD5  6F                 	db	111	;'o'
   424  00FFD6  6E                 	db	110	;'n'
   425  00FFD7  3A                 	db	58	;':'
   426  00FFD8  20                 	db	32
   427  00FFD9  00                 	db	0
   428  00FFDA                     STR_9:
   429  00FFDA  53                 	db	83	;'S'
   430  00FFDB  70                 	db	112	;'p'
   431  00FFDC  65                 	db	101	;'e'
   432  00FFDD  65                 	db	101	;'e'
   433  00FFDE  64                 	db	100	;'d'
   434  00FFDF  3A                 	db	58	;':'
   435  00FFE0  20                 	db	32
   436  00FFE1  25                 	db	37
   437  00FFE2  2E                 	db	46
   438  00FFE3  33                 	db	51	;'3'
   439  00FFE4  66                 	db	102	;'f'
   440  00FFE5  00                 	db	0
   441  00FFE6                     STR_12:
   442  00FFE6  57                 	db	87	;'W'
   443  00FFE7  61                 	db	97	;'a'
   444  00FFE8  69                 	db	105	;'i'
   445  00FFE9  74                 	db	116	;'t'
   446  00FFEA  2E                 	db	46
   447  00FFEB  2E                 	db	46
   448  00FFEC  2E                 	db	46
   449  00FFED  00                 	db	0
   450  00FFEE                     STR_7:
   451  00FFEE  42                 	db	66	;'B'
   452  00FFEF  4B                 	db	75	;'K'
   453  00FFF0  57                 	db	87	;'W'
   454  00FFF1  44                 	db	68	;'D'
   455  00FFF2  00                 	db	0
   456  00FFF3                     STR_10:
   457  00FFF3  4B                 	db	75	;'K'
   458  00FFF4  6D                 	db	109	;'m'
   459  00FFF5  2F                 	db	47
   460  00FFF6  68                 	db	104	;'h'
   461  00FFF7  00                 	db	0
   462  00FFF8                     STR_6:
   463  00FFF8  46                 	db	70	;'F'
   464  00FFF9  57                 	db	87	;'W'
   465  00FFFA  44                 	db	68	;'D'
   466  00FFFB  00                 	db	0
   467  00FFFC                     STR_8:
   468  00FFFC  50                 	db	80	;'P'
   469  00FFFD  00                 	db	0
   470  0000                     
   471                           ; #config settings
   472  00FFFE  00                 	db	0	; dummy byte at the end
   473  0000                     
   474                           	psect	cinit
   475  015BBC                     __pcinit:
   476                           	opt stack 0
   477  015BBC                     start_initialization:
   478                           	opt stack 0
   479  015BBC                     __initialization:
   480                           	opt stack 0
   481                           
   482                           ; Clear objects allocated to BANK1 (27 bytes)
   483  015BBC  EE01  F000         	lfsr	0,__pbssBANK1
   484  015BC0  0E1B               	movlw	27
   485  015BC2                     clear_0:
   486  015BC2  6AEE               	clrf	postinc0,c
   487  015BC4  06E8               	decf	wreg,f,c
   488  015BC6  E1FD               	bnz	clear_0
   489                           
   490                           ; Clear objects allocated to BANK0 (33 bytes)
   491  015BC8  EE00  F0D0         	lfsr	0,__pbssBANK0
   492  015BCC  0E21               	movlw	33
   493  015BCE                     clear_1:
   494  015BCE  6AEE               	clrf	postinc0,c
   495  015BD0  06E8               	decf	wreg,f,c
   496  015BD2  E1FD               	bnz	clear_1
   497                           
   498                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   499  015BD4  6A47               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   500                           
   501                           ; Clear objects allocated to COMRAM (36 bytes)
   502  015BD6  EE00  F001         	lfsr	0,__pbssCOMRAM
   503  015BDA  0E24               	movlw	36
   504  015BDC                     clear_2:
   505  015BDC  6AEE               	clrf	postinc0,c
   506  015BDE  06E8               	decf	wreg,f,c
   507  015BE0  E1FD               	bnz	clear_2
   508                           
   509                           ; Initialize objects allocated to BANK0 (1 bytes)
   510                           ; load TBLPTR registers with __pidataBANK0
   511  015BE2  0E7E               	movlw	low __pidataBANK0
   512  015BE4  6EF6               	movwf	tblptrl,c
   513  015BE6  0E5E               	movlw	high __pidataBANK0
   514  015BE8  6EF7               	movwf	tblptrh,c
   515  015BEA  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   516  015BEC  6EF8               	movwf	tblptru,c
   517  015BEE  0009               	tblrd		*+	;fetch initializer
   518  015BF0  CFF5 F0F1          	movff	tablat,__pdataBANK0
   519  015BF4                     end_of_initialization:
   520                           	opt stack 0
   521  015BF4                     __end_of__initialization:
   522                           	opt stack 0
   523  015BF4  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   524  015BF6  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   525  015BF8  0100               	movlb	0
   526  015BFA  EF95  F09A         	goto	_main	;jump to C main() function
   527                           tblptru	equ	0xFF8
   528                           tblptrh	equ	0xFF7
   529                           tblptrl	equ	0xFF6
   530                           tablat	equ	0xFF5
   531                           postinc0	equ	0xFEE
   532                           wreg	equ	0xFE8
   533                           
   534                           	psect	bitbssCOMRAM
   535  000238                     __pbitbssCOMRAM:
   536                           	opt stack 0
   537  000238                     _AbsFlag:
   538                           	opt stack 0
   539  000238                     	ds	1
   540  000239                     _MotoreFlag:
   541                           	opt stack 0
   542  000239                     	ds	1
   543  00023A                     _RTR_Flag:
   544                           	opt stack 0
   545  00023A                     	ds	1
   546  00023B                     _SterzoFlag:
   547                           	opt stack 0
   548  00023B                     	ds	1
   549  00023C                     _newMessageCan:
   550                           	opt stack 0
   551  00023C                     	ds	1
   552  00023D                     _power_switch:
   553                           	opt stack 0
   554  00023D                     	ds	1
   555  00023E                     _wait_low:
   556                           	opt stack 0
   557  00023E                     	ds	1
   558                           tblptru	equ	0xFF8
   559                           tblptrh	equ	0xFF7
   560                           tblptrl	equ	0xFF6
   561                           tablat	equ	0xFF5
   562                           postinc0	equ	0xFEE
   563                           wreg	equ	0xFE8
   564                           
   565                           	psect	bssCOMRAM
   566  000001                     __pbssCOMRAM:
   567                           	opt stack 0
   568  000001                     _data_speed_rx:
   569                           	opt stack 0
   570  000001                     	ds	7
   571  000008                     LCD_write_integer@F17272:
   572                           	opt stack 0
   573  000008                     	ds	6
   574  00000E                     _actual_speed_kmh:
   575                           	opt stack 0
   576  00000E                     	ds	4
   577  000012                     _id:
   578                           	opt stack 0
   579  000012                     	ds	4
   580  000016                     _pr_time_4:
   581                           	opt stack 0
   582  000016                     	ds	4
   583  00001A                     _time_counter:
   584                           	opt stack 0
   585  00001A                     	ds	4
   586  00001E                     _left_speed:
   587                           	opt stack 0
   588  00001E                     	ds	2
   589  000020                     _right_speed:
   590                           	opt stack 0
   591  000020                     	ds	2
   592  000022                     _battery:
   593                           	opt stack 0
   594  000022                     	ds	1
   595  000023                     _set_steering:
   596                           	opt stack 0
   597  000023                     	ds	1
   598  000024                     _data:
   599                           	opt stack 0
   600  000024                     	ds	1
   601                           tblptru	equ	0xFF8
   602                           tblptrh	equ	0xFF7
   603                           tblptrl	equ	0xFF6
   604                           tablat	equ	0xFF5
   605                           postinc0	equ	0xFEE
   606                           wreg	equ	0xFE8
   607                           
   608                           	psect	bssBANK0
   609  0000D0                     __pbssBANK0:
   610                           	opt stack 0
   611  0000D0                     _JoystickConstants:
   612                           	opt stack 0
   613  0000D0                     	ds	8
   614  0000D8                     _pr_time_1:
   615                           	opt stack 0
   616  0000D8                     	ds	4
   617  0000DC                     _pr_time_2:
   618                           	opt stack 0
   619  0000DC                     	ds	4
   620  0000E0                     _pr_time_3:
   621                           	opt stack 0
   622  0000E0                     	ds	4
   623  0000E4                     _JoystickValues:
   624                           	opt stack 0
   625  0000E4                     	ds	2
   626  0000E6                     _actual_speed:
   627                           	opt stack 0
   628  0000E6                     	ds	2
   629  0000E8                     _clock_counter_reference:
   630                           	opt stack 0
   631  0000E8                     	ds	2
   632  0000EA                     _set_speed:
   633                           	opt stack 0
   634  0000EA                     	ds	2
   635  0000EC                     _dir:
   636                           	opt stack 0
   637  0000EC                     	ds	1
   638  0000ED                     _switch_position:
   639                           	opt stack 0
   640  0000ED                     	ds	1
   641  0000EE                     _data_brake:
   642                           	opt stack 0
   643  0000EE                     	ds	1
   644  0000EF                     _data_speed:
   645                           	opt stack 0
   646  0000EF                     	ds	1
   647  0000F0                     _data_steering:
   648                           	opt stack 0
   649  0000F0                     	ds	1
   650                           tblptru	equ	0xFF8
   651                           tblptrh	equ	0xFF7
   652                           tblptrl	equ	0xFF6
   653                           tablat	equ	0xFF5
   654                           postinc0	equ	0xFEE
   655                           wreg	equ	0xFE8
   656                           
   657                           	psect	dataBANK0
   658  0000F1                     __pdataBANK0:
   659                           	opt stack 0
   660  0000F1                     _delay_quartz_frequency_value:
   661                           	opt stack 0
   662  0000F1                     	ds	1
   663                           tblptru	equ	0xFF8
   664                           tblptrh	equ	0xFF7
   665                           tblptrl	equ	0xFF6
   666                           tablat	equ	0xFF5
   667                           postinc0	equ	0xFEE
   668                           wreg	equ	0xFE8
   669                           
   670                           	psect	bssBANK1
   671  000100                     __pbssBANK1:
   672                           	opt stack 0
   673  000100                     _msg:
   674                           	opt stack 0
   675  000100                     	ds	15
   676  00010F                     _str:
   677                           	opt stack 0
   678  00010F                     	ds	12
   679                           tblptru	equ	0xFF8
   680                           tblptrh	equ	0xFF7
   681                           tblptrl	equ	0xFF6
   682                           tablat	equ	0xFF5
   683                           postinc0	equ	0xFEE
   684                           wreg	equ	0xFE8
   685                           
   686                           	psect	cstackBANK1
   687  00011B                     __pcstackBANK1:
   688                           	opt stack 0
   689  00011B                     _sprintf$4193:
   690                           	opt stack 0
   691                           
   692                           ; 4 bytes @ 0x0
   693  00011B                     	ds	4
   694  00011F                     sprintf@ap:
   695                           	opt stack 0
   696                           
   697                           ; 2 bytes @ 0x4
   698  00011F                     	ds	2
   699  000121                     sprintf@flag:
   700                           	opt stack 0
   701                           
   702                           ; 2 bytes @ 0x6
   703  000121                     	ds	2
   704  000123                     sprintf@val:
   705                           	opt stack 0
   706                           
   707                           ; 4 bytes @ 0x8
   708  000123                     	ds	4
   709  000127                     sprintf@exp:
   710                           	opt stack 0
   711                           
   712                           ; 2 bytes @ 0xC
   713  000127                     	ds	2
   714  000129                     sprintf@tmpval:
   715                           	opt stack 0
   716                           
   717                           ; 4 bytes @ 0xE
   718  000129                     	ds	4
   719  00012D                     sprintf@prec:
   720                           	opt stack 0
   721                           
   722                           ; 2 bytes @ 0x12
   723  00012D                     	ds	2
   724  00012F                     sprintf@fval:
   725                           	opt stack 0
   726                           
   727                           ; 4 bytes @ 0x14
   728  00012F                     	ds	4
   729  000133                     sprintf@c:
   730                           	opt stack 0
   731                           
   732                           ; 1 bytes @ 0x18
   733  000133                     	ds	1
   734                           tblptru	equ	0xFF8
   735                           tblptrh	equ	0xFF7
   736                           tblptrl	equ	0xFF6
   737                           tablat	equ	0xFF5
   738                           postinc0	equ	0xFEE
   739                           wreg	equ	0xFE8
   740                           
   741                           	psect	cstackBANK0
   742  000060                     __pcstackBANK0:
   743                           	opt stack 0
   744  000060                     ??_ISR_alta:
   745                           
   746                           ; 0 bytes @ 0x0
   747  000060                     	ds	14
   748  00006E                     ??_Joystick_Polling:
   749  00006E                     ??_CAN_interpreter:
   750  00006E                     ??_isdigit:
   751  00006E                     ?___wmul:
   752                           	opt stack 0
   753  00006E                     ?___awmod:
   754                           	opt stack 0
   755  00006E                     ?___lwdiv:
   756                           	opt stack 0
   757  00006E                     ?___lwmod:
   758                           	opt stack 0
   759  00006E                     ?__tdiv_to_l_:
   760                           	opt stack 0
   761  00006E                     ?__div_to_l_:
   762                           	opt stack 0
   763  00006E                     ?___flneg:
   764                           	opt stack 0
   765  00006E                     ?___lldiv:
   766                           	opt stack 0
   767  00006E                     ?___llmod:
   768                           	opt stack 0
   769  00006E                     ?___xxtofl:
   770                           	opt stack 0
   771  00006E                     CANOperationMode@mode:
   772                           	opt stack 0
   773  00006E                     _CANisTxReady$3227:
   774                           	opt stack 0
   775  00006E                     delay_set_quartz@frequency:
   776                           	opt stack 0
   777  00006E                     ___wmul@multiplier:
   778                           	opt stack 0
   779  00006E                     ___awmod@dividend:
   780                           	opt stack 0
   781  00006E                     ___lwdiv@dividend:
   782                           	opt stack 0
   783  00006E                     ___lwmod@dividend:
   784                           	opt stack 0
   785  00006E                     CANsendMessage@identifier:
   786                           	opt stack 0
   787  00006E                     CANSetMask@mask:
   788                           	opt stack 0
   789  00006E                     CANSetFilter@filter:
   790                           	opt stack 0
   791  00006E                     __div_to_l_@f1:
   792                           	opt stack 0
   793  00006E                     ___flge@ff1:
   794                           	opt stack 0
   795  00006E                     ___flneg@f1:
   796                           	opt stack 0
   797  00006E                     __tdiv_to_l_@f1:
   798                           	opt stack 0
   799  00006E                     ___lldiv@dividend:
   800                           	opt stack 0
   801  00006E                     ___llmod@dividend:
   802                           	opt stack 0
   803  00006E                     ___xxtofl@val:
   804                           	opt stack 0
   805                           
   806                           ; 4 bytes @ 0xE
   807  00006E                     	ds	1
   808  00006F                     Joystick_Polling@i:
   809                           	opt stack 0
   810  00006F                     _isdigit$3772:
   811                           	opt stack 0
   812                           
   813                           ; 1 bytes @ 0xF
   814  00006F                     	ds	1
   815  000070                     isdigit@c:
   816                           	opt stack 0
   817  000070                     ___wmul@multiplicand:
   818                           	opt stack 0
   819  000070                     ___awmod@divisor:
   820                           	opt stack 0
   821  000070                     ___lwdiv@divisor:
   822                           	opt stack 0
   823  000070                     ___lwmod@divisor:
   824                           	opt stack 0
   825                           
   826                           ; 2 bytes @ 0x10
   827  000070                     	ds	2
   828  000072                     ??___xxtofl:
   829  000072                     CANSetMask@type:
   830                           	opt stack 0
   831  000072                     CANSetFilter@type:
   832                           	opt stack 0
   833  000072                     ___awmod@counter:
   834                           	opt stack 0
   835  000072                     ___lwmod@counter:
   836                           	opt stack 0
   837  000072                     CANsendMessage@data:
   838                           	opt stack 0
   839  000072                     ___wmul@product:
   840                           	opt stack 0
   841  000072                     ___lwdiv@quotient:
   842                           	opt stack 0
   843  000072                     __div_to_l_@f2:
   844                           	opt stack 0
   845  000072                     ___flge@ff2:
   846                           	opt stack 0
   847  000072                     __tdiv_to_l_@f2:
   848                           	opt stack 0
   849  000072                     ___lldiv@divisor:
   850                           	opt stack 0
   851  000072                     ___llmod@divisor:
   852                           	opt stack 0
   853                           
   854                           ; 4 bytes @ 0x12
   855  000072                     	ds	1
   856  000073                     ??_CANSetMask:
   857  000073                     ??_CANSetFilter:
   858  000073                     ___awmod@sign:
   859                           	opt stack 0
   860                           
   861                           ; 1 bytes @ 0x13
   862  000073                     	ds	1
   863  000074                     ?___awdiv:
   864                           	opt stack 0
   865  000074                     CANsendMessage@dataLength:
   866                           	opt stack 0
   867  000074                     ___lwdiv@counter:
   868                           	opt stack 0
   869  000074                     delay_ms@value_ms:
   870                           	opt stack 0
   871  000074                     ___awdiv@dividend:
   872                           	opt stack 0
   873                           
   874                           ; 2 bytes @ 0x14
   875  000074                     	ds	1
   876  000075                     CANsendMessage@flags:
   877                           	opt stack 0
   878  000075                     utoa@buf:
   879                           	opt stack 0
   880                           
   881                           ; 2 bytes @ 0x15
   882  000075                     	ds	1
   883  000076                     ??__tdiv_to_l_:
   884  000076                     ??_CANsendMessage:
   885  000076                     ??___flge:
   886  000076                     LCD_send_command@D2:
   887                           	opt stack 0
   888  000076                     ___llmod@counter:
   889                           	opt stack 0
   890  000076                     ___xxtofl@sign:
   891                           	opt stack 0
   892  000076                     ___awdiv@divisor:
   893                           	opt stack 0
   894  000076                     __div_to_l_@quot:
   895                           	opt stack 0
   896  000076                     ___lldiv@quotient:
   897                           	opt stack 0
   898                           
   899                           ; 4 bytes @ 0x16
   900  000076                     	ds	1
   901  000077                     CANSetMask@numBuffer:
   902                           	opt stack 0
   903  000077                     CANSetFilter@numBuffer:
   904                           	opt stack 0
   905  000077                     LCD_send_command@D1:
   906                           	opt stack 0
   907  000077                     ___xxtofl@exp:
   908                           	opt stack 0
   909  000077                     utoa@val:
   910                           	opt stack 0
   911                           
   912                           ; 2 bytes @ 0x17
   913  000077                     	ds	1
   914  000078                     LCD_send_command@D0:
   915                           	opt stack 0
   916  000078                     ___awdiv@counter:
   917                           	opt stack 0
   918  000078                     CANSetMask@tamp:
   919                           	opt stack 0
   920  000078                     CANSetFilter@tamp:
   921                           	opt stack 0
   922  000078                     ___xxtofl@arg:
   923                           	opt stack 0
   924                           
   925                           ; 4 bytes @ 0x18
   926  000078                     	ds	1
   927  000079                     LCD_send_command@D3:
   928                           	opt stack 0
   929  000079                     ___awdiv@sign:
   930                           	opt stack 0
   931  000079                     utoa@base:
   932                           	opt stack 0
   933  000079                     __tdiv_to_l_@quot:
   934                           	opt stack 0
   935                           
   936                           ; 4 bytes @ 0x19
   937  000079                     	ds	1
   938  00007A                     LCD_goto_line@line:
   939                           	opt stack 0
   940  00007A                     LCD_write_char@D3:
   941                           	opt stack 0
   942  00007A                     LCD_cursor@blinking:
   943                           	opt stack 0
   944  00007A                     __div_to_l_@cntr:
   945                           	opt stack 0
   946  00007A                     ___lldiv@counter:
   947                           	opt stack 0
   948  00007A                     ___awdiv@quotient:
   949                           	opt stack 0
   950  00007A                     CANsendMessage@tamp:
   951                           	opt stack 0
   952                           
   953                           ; 4 bytes @ 0x1A
   954  00007A                     	ds	1
   955  00007B                     LCD_write_char@D2:
   956                           	opt stack 0
   957  00007B                     LCD_cursor@active:
   958                           	opt stack 0
   959  00007B                     __div_to_l_@exp1:
   960                           	opt stack 0
   961  00007B                     utoa@v:
   962                           	opt stack 0
   963                           
   964                           ; 2 bytes @ 0x1B
   965  00007B                     	ds	1
   966  00007C                     ?___fldiv:
   967                           	opt stack 0
   968  00007C                     ?___flmul:
   969                           	opt stack 0
   970  00007C                     CANInitialize@phaseSeg1:
   971                           	opt stack 0
   972  00007C                     LCD_write_char@D1:
   973                           	opt stack 0
   974  00007C                     LCD_initialize@quartz_frequency:
   975                           	opt stack 0
   976  00007C                     ___fldiv@b:
   977                           	opt stack 0
   978  00007C                     ___flmul@b:
   979                           	opt stack 0
   980                           
   981                           ; 4 bytes @ 0x1C
   982  00007C                     	ds	1
   983  00007D                     CANInitialize@phaseSeg2:
   984                           	opt stack 0
   985  00007D                     LCD_write_char@D0:
   986                           	opt stack 0
   987  00007D                     __tdiv_to_l_@cntr:
   988                           	opt stack 0
   989  00007D                     utoa@c:
   990                           	opt stack 0
   991                           
   992                           ; 1 bytes @ 0x1D
   993  00007D                     	ds	1
   994  00007E                     CANInitialize@SJW:
   995                           	opt stack 0
   996  00007E                     LCD_write_char@value:
   997                           	opt stack 0
   998  00007E                     __tdiv_to_l_@exp1:
   999                           	opt stack 0
  1000  00007E                     itoa@buf:
  1001                           	opt stack 0
  1002                           
  1003                           ; 2 bytes @ 0x1E
  1004  00007E                     	ds	1
  1005  00007F                     CANInitialize@BRP:
  1006                           	opt stack 0
  1007  00007F                     LCD_write_message@buffer:
  1008                           	opt stack 0
  1009  00007F                     LCD_write_string@buffer:
  1010                           	opt stack 0
  1011                           
  1012                           ; 2 bytes @ 0x1F
  1013  00007F                     	ds	1
  1014  000080                     CANInitialize@flags:
  1015                           	opt stack 0
  1016  000080                     itoa@val:
  1017                           	opt stack 0
  1018  000080                     ___fldiv@a:
  1019                           	opt stack 0
  1020  000080                     ___flmul@a:
  1021                           	opt stack 0
  1022                           
  1023                           ; 4 bytes @ 0x20
  1024  000080                     	ds	1
  1025  000081                     ??_CANInitialize:
  1026  000081                     
  1027                           ; 0 bytes @ 0x21
  1028  000081                     	ds	1
  1029  000082                     itoa@base:
  1030                           	opt stack 0
  1031                           
  1032                           ; 2 bytes @ 0x22
  1033  000082                     	ds	2
  1034  000084                     ??___fldiv:
  1035  000084                     ??___flmul:
  1036  000084                     itoa@cp:
  1037                           	opt stack 0
  1038                           
  1039                           ; 2 bytes @ 0x24
  1040  000084                     	ds	1
  1041  000085                     CANInitialize@propSeg:
  1042                           	opt stack 0
  1043                           
  1044                           ; 1 bytes @ 0x25
  1045  000085                     	ds	1
  1046  000086                     CANInitialize@FilterConfig1:
  1047                           	opt stack 0
  1048  000086                     LCD_write_integer@value:
  1049                           	opt stack 0
  1050                           
  1051                           ; 2 bytes @ 0x26
  1052  000086                     	ds	1
  1053  000087                     CANInitialize@FilterConfig2:
  1054                           	opt stack 0
  1055                           
  1056                           ; 1 bytes @ 0x27
  1057  000087                     	ds	1
  1058  000088                     LCD_write_integer@number_of_digits:
  1059                           	opt stack 0
  1060  000088                     ___fldiv@sign:
  1061                           	opt stack 0
  1062  000088                     ___flmul@sign:
  1063                           	opt stack 0
  1064                           
  1065                           ; 1 bytes @ 0x28
  1066  000088                     	ds	1
  1067  000089                     LCD_write_integer@zero_cleaning:
  1068                           	opt stack 0
  1069  000089                     ___flmul@aexp:
  1070                           	opt stack 0
  1071  000089                     ___fldiv@rem:
  1072                           	opt stack 0
  1073                           
  1074                           ; 4 bytes @ 0x29
  1075  000089                     	ds	1
  1076  00008A                     ??_LCD_write_integer:
  1077  00008A                     ___flmul@grs:
  1078                           	opt stack 0
  1079                           
  1080                           ; 4 bytes @ 0x2A
  1081  00008A                     	ds	3
  1082  00008D                     ___fldiv@new_exp:
  1083                           	opt stack 0
  1084                           
  1085                           ; 2 bytes @ 0x2D
  1086  00008D                     	ds	1
  1087  00008E                     ___flmul@bexp:
  1088                           	opt stack 0
  1089                           
  1090                           ; 1 bytes @ 0x2E
  1091  00008E                     	ds	1
  1092  00008F                     ___fldiv@grs:
  1093                           	opt stack 0
  1094  00008F                     ___flmul@prod:
  1095                           	opt stack 0
  1096  00008F                     LCD_write_integer@convertedInt:
  1097                           	opt stack 0
  1098                           
  1099                           ; 6 bytes @ 0x2F
  1100  00008F                     	ds	4
  1101  000093                     ___fldiv@bexp:
  1102                           	opt stack 0
  1103  000093                     ___flmul@temp:
  1104                           	opt stack 0
  1105                           
  1106                           ; 2 bytes @ 0x33
  1107  000093                     	ds	1
  1108  000094                     ___fldiv@aexp:
  1109                           	opt stack 0
  1110                           
  1111                           ; 1 bytes @ 0x34
  1112  000094                     	ds	1
  1113  000095                     ?_fround:
  1114                           	opt stack 0
  1115  000095                     ?_scale:
  1116                           	opt stack 0
  1117  000095                     LCD_write_integer@index:
  1118                           	opt stack 0
  1119                           
  1120                           ; 1 bytes @ 0x35
  1121  000095                     	ds	4
  1122  000099                     _fround$4191:
  1123                           	opt stack 0
  1124  000099                     _scale$4192:
  1125                           	opt stack 0
  1126                           
  1127                           ; 4 bytes @ 0x39
  1128  000099                     	ds	4
  1129  00009D                     scale@scl:
  1130                           	opt stack 0
  1131  00009D                     _fround$4190:
  1132                           	opt stack 0
  1133                           
  1134                           ; 4 bytes @ 0x3D
  1135  00009D                     	ds	1
  1136  00009E                     ?___fltol:
  1137                           	opt stack 0
  1138  00009E                     ___fltol@f1:
  1139                           	opt stack 0
  1140                           
  1141                           ; 4 bytes @ 0x3E
  1142  00009E                     	ds	3
  1143  0000A1                     fround@prec:
  1144                           	opt stack 0
  1145                           
  1146                           ; 1 bytes @ 0x41
  1147  0000A1                     	ds	1
  1148  0000A2                     ??___fltol:
  1149  0000A2                     ?___fladd:
  1150                           	opt stack 0
  1151  0000A2                     ___fladd@b:
  1152                           	opt stack 0
  1153                           
  1154                           ; 4 bytes @ 0x42
  1155  0000A2                     	ds	4
  1156  0000A6                     ___fltol@sign1:
  1157                           	opt stack 0
  1158  0000A6                     ___fladd@a:
  1159                           	opt stack 0
  1160                           
  1161                           ; 4 bytes @ 0x46
  1162  0000A6                     	ds	1
  1163  0000A7                     ___fltol@exp1:
  1164                           	opt stack 0
  1165                           
  1166                           ; 1 bytes @ 0x47
  1167  0000A7                     	ds	3
  1168  0000AA                     ??___fladd:
  1169                           
  1170                           ; 0 bytes @ 0x4A
  1171  0000AA                     	ds	8
  1172  0000B2                     ___fladd@signs:
  1173                           	opt stack 0
  1174                           
  1175                           ; 1 bytes @ 0x52
  1176  0000B2                     	ds	1
  1177  0000B3                     ___fladd@aexp:
  1178                           	opt stack 0
  1179                           
  1180                           ; 1 bytes @ 0x53
  1181  0000B3                     	ds	1
  1182  0000B4                     ___fladd@bexp:
  1183                           	opt stack 0
  1184                           
  1185                           ; 1 bytes @ 0x54
  1186  0000B4                     	ds	1
  1187  0000B5                     ___fladd@grs:
  1188                           	opt stack 0
  1189                           
  1190                           ; 1 bytes @ 0x55
  1191  0000B5                     	ds	1
  1192  0000B6                     ?___flsub:
  1193                           	opt stack 0
  1194  0000B6                     ___flsub@b:
  1195                           	opt stack 0
  1196                           
  1197                           ; 4 bytes @ 0x56
  1198  0000B6                     	ds	4
  1199  0000BA                     ___flsub@a:
  1200                           	opt stack 0
  1201                           
  1202                           ; 4 bytes @ 0x5A
  1203  0000BA                     	ds	4
  1204  0000BE                     ?_sprintf:
  1205                           	opt stack 0
  1206  0000BE                     sprintf@sp:
  1207                           	opt stack 0
  1208                           
  1209                           ; 2 bytes @ 0x5E
  1210  0000BE                     	ds	2
  1211  0000C0                     sprintf@f:
  1212                           	opt stack 0
  1213                           
  1214                           ; 2 bytes @ 0x60
  1215  0000C0                     	ds	6
  1216  0000C6                     ??_sprintf:
  1217                           
  1218                           ; 0 bytes @ 0x66
  1219  0000C6                     	ds	2
  1220  0000C8                     ??_main:
  1221                           
  1222                           ; 0 bytes @ 0x68
  1223  0000C8                     	ds	8
  1224                           tblptru	equ	0xFF8
  1225                           tblptrh	equ	0xFF7
  1226                           tblptrl	equ	0xFF6
  1227                           tablat	equ	0xFF5
  1228                           postinc0	equ	0xFEE
  1229                           wreg	equ	0xFE8
  1230                           
  1231                           	psect	cstackCOMRAM
  1232  000025                     __pcstackCOMRAM:
  1233                           	opt stack 0
  1234  000025                     ??_ISR_bassa:
  1235  000025                     
  1236                           ; 1 bytes @ 0x0
  1237  000025                     	ds	17
  1238  000036                     _CANisRxReady$3229:
  1239                           	opt stack 0
  1240  000036                     i2_CANisTxReady$3227:
  1241                           	opt stack 0
  1242  000036                     CANreceiveMessage@msg:
  1243                           	opt stack 0
  1244  000036                     i2CANsendMessage@identifier:
  1245                           	opt stack 0
  1246                           
  1247                           ; 4 bytes @ 0x11
  1248  000036                     	ds	2
  1249  000038                     ??_CANreceiveMessage:
  1250                           
  1251                           ; 0 bytes @ 0x13
  1252  000038                     	ds	2
  1253  00003A                     i2CANsendMessage@data:
  1254                           	opt stack 0
  1255                           
  1256                           ; 2 bytes @ 0x15
  1257  00003A                     	ds	2
  1258  00003C                     i2CANsendMessage@dataLength:
  1259                           	opt stack 0
  1260                           
  1261                           ; 1 bytes @ 0x17
  1262  00003C                     	ds	1
  1263  00003D                     i2CANsendMessage@flags:
  1264                           	opt stack 0
  1265                           
  1266                           ; 1 bytes @ 0x18
  1267  00003D                     	ds	1
  1268  00003E                     ??i2_CANsendMessage:
  1269                           
  1270                           ; 0 bytes @ 0x19
  1271  00003E                     	ds	2
  1272  000040                     CANreceiveMessage@error:
  1273                           	opt stack 0
  1274                           
  1275                           ; 1 bytes @ 0x1B
  1276  000040                     	ds	1
  1277  000041                     CANreceiveMessage@tamp:
  1278                           	opt stack 0
  1279                           
  1280                           ; 1 bytes @ 0x1C
  1281  000041                     	ds	1
  1282  000042                     i2CANsendMessage@tamp:
  1283                           	opt stack 0
  1284                           
  1285                           ; 4 bytes @ 0x1D
  1286  000042                     	ds	4
  1287  000046                     ISR_alta@i:
  1288                           	opt stack 0
  1289                           
  1290                           ; 1 bytes @ 0x21
  1291  000046                     	ds	1
  1292                           tblptru	equ	0xFF8
  1293                           tblptrh	equ	0xFF7
  1294                           tblptrl	equ	0xFF6
  1295                           tablat	equ	0xFF5
  1296                           postinc0	equ	0xFEE
  1297                           wreg	equ	0xFE8
  1298                           
  1299 ;;
  1300 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1301 ;;
  1302 ;; *************** function _main *****************
  1303 ;; Defined at:
  1304 ;;		line 114 in file "RemoteCan.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;		None
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;		None
  1309 ;; Return value:  Size  Location     Type
  1310 ;;		None               void
  1311 ;; Registers used:
  1312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1320 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1321 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1322 ;;Total ram usage:        8 bytes
  1323 ;; Hardware stack levels required when called:   11
  1324 ;; This function calls:
  1325 ;;		_CAN_Send
  1326 ;;		_CAN_interpreter
  1327 ;;		_Joystick_Polling
  1328 ;;		_LCD_Handler
  1329 ;;		_LCD_goto_line
  1330 ;;		_LCD_initialize
  1331 ;;		_LCD_write_message
  1332 ;;		_PWR_Button_Polling
  1333 ;;		___flmul
  1334 ;;		___fltol
  1335 ;;		___xxtofl
  1336 ;;		_board_initialization
  1337 ;;		_delay_ms
  1338 ;; This function is called by:
  1339 ;;		Startup code after reset
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343                           	psect	text0
  1344  01352A                     __ptext0:
  1345                           	opt stack 0
  1346  01352A                     _main:
  1347                           	opt stack 20
  1348                           
  1349                           ;RemoteCan.c: 115: board_initialization();
  1350                           
  1351                           ;incstack = 0
  1352  01352A  ECDC  F0A9         	call	_board_initialization	;wreg free
  1353                           
  1354                           ;RemoteCan.c: 116: JoystickConstants[0] = 0.703;
  1355  01352E  0ECF               	movlw	207
  1356  013530  0100               	movlb	0	; () banked
  1357  013532  6FD0               	movwf	_JoystickConstants& (0+255),b	;volatile
  1358  013534  0EF7               	movlw	247
  1359  013536  6FD1               	movwf	(_JoystickConstants+1)& (0+255),b	;volatile
  1360  013538  0E33               	movlw	51
  1361  01353A  6FD2               	movwf	(_JoystickConstants+2)& (0+255),b	;volatile
  1362  01353C  0E3F               	movlw	63
  1363  01353E  6FD3               	movwf	(_JoystickConstants+3)& (0+255),b	;volatile
  1364                           
  1365                           ; BSR set to: 0
  1366                           ;RemoteCan.c: 117: JoystickConstants[1] = 5;
  1367  013540  0E00               	movlw	0
  1368  013542  0100               	movlb	0	; () banked
  1369  013544  6FD4               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  1370  013546  0E00               	movlw	0
  1371  013548  6FD5               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  1372  01354A  0EA0               	movlw	160
  1373  01354C  6FD6               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  1374  01354E  0E40               	movlw	64
  1375  013550  6FD7               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  1376  013552                     l8593:
  1377                           
  1378                           ;RemoteCan.c: 120: PWR_Button_Polling();
  1379  013552  EC16  F0AF         	call	_PWR_Button_Polling	;wreg free
  1380                           
  1381                           ;RemoteCan.c: 121: if (power_switch == 0) {
  1382  013556  BA47               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1383  013558  D09A               	goto	l8631
  1384                           
  1385                           ;RemoteCan.c: 122: dir = 0;
  1386  01355A  0E00               	movlw	0
  1387  01355C  0100               	movlb	0	; () banked
  1388  01355E  6FEC               	movwf	_dir& (0+255),b	;volatile
  1389                           
  1390                           ;RemoteCan.c: 123: set_speed = 0;
  1391  013560  0E00               	movlw	0
  1392  013562  0100               	movlb	0	; () banked
  1393  013564  6FEB               	movwf	(_set_speed+1)& (0+255),b	;volatile
  1394  013566  0E00               	movlw	0
  1395  013568  6FEA               	movwf	_set_speed& (0+255),b	;volatile
  1396                           
  1397                           ;RemoteCan.c: 124: data_steering [0] = 90;
  1398  01356A  0E5A               	movlw	90
  1399  01356C  0100               	movlb	0	; () banked
  1400  01356E  6FF0               	movwf	_data_steering& (0+255),b
  1401                           
  1402                           ;RemoteCan.c: 125: data_brake [0] = 0;
  1403  013570  0E00               	movlw	0
  1404  013572  0100               	movlb	0	; () banked
  1405  013574  6FEE               	movwf	_data_brake& (0+255),b
  1406                           
  1407                           ;RemoteCan.c: 126: data_brake [1] = 1;
  1408  013576  0E01               	movlw	1
  1409  013578  0100               	movlb	0	; () banked
  1410  01357A  6FEF               	movwf	(_data_brake+1)& (0+255),b
  1411                           
  1412                           ; BSR set to: 0
  1413                           ;RemoteCan.c: 127: CAN_Send();
  1414  01357C  EC64  F0AB         	call	_CAN_Send	;wreg free
  1415                           
  1416                           ;RemoteCan.c: 128: LCD_initialize(16);
  1417  013580  0E10               	movlw	16
  1418  013582  EC80  F0A7         	call	_LCD_initialize
  1419                           
  1420                           ;RemoteCan.c: 129: LCD_goto_line(1);
  1421  013586  0E01               	movlw	1
  1422  013588  EC66  F0A9         	call	_LCD_goto_line
  1423                           
  1424                           ;RemoteCan.c: 130: LCD_write_message("====================");
  1425  01358C  0EAB               	movlw	low STR_1
  1426  01358E  0100               	movlb	0	; () banked
  1427  013590  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  1428  013592  0EFF               	movlw	high STR_1
  1429  013594  0100               	movlb	0	; () banked
  1430  013596  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1431  013598  EC70  F0AE         	call	_LCD_write_message	;wreg free
  1432                           
  1433                           ;RemoteCan.c: 131: LCD_goto_line(2);
  1434  01359C  0E02               	movlw	2
  1435  01359E  EC66  F0A9         	call	_LCD_goto_line
  1436                           
  1437                           ;RemoteCan.c: 132: LCD_write_message("==> VEHICLE  OFF <==");
  1438  0135A2  0E96               	movlw	low STR_2
  1439  0135A4  0100               	movlb	0	; () banked
  1440  0135A6  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  1441  0135A8  0EFF               	movlw	high STR_2
  1442  0135AA  0100               	movlb	0	; () banked
  1443  0135AC  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1444  0135AE  EC70  F0AE         	call	_LCD_write_message	;wreg free
  1445                           
  1446                           ;RemoteCan.c: 133: LCD_goto_line(3);
  1447  0135B2  0E03               	movlw	3
  1448  0135B4  EC66  F0A9         	call	_LCD_goto_line
  1449                           
  1450                           ;RemoteCan.c: 134: LCD_write_message("Turn the switch ON! ");
  1451  0135B8  0E81               	movlw	low STR_3
  1452  0135BA  0100               	movlb	0	; () banked
  1453  0135BC  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  1454  0135BE  0EFF               	movlw	high STR_3
  1455  0135C0  0100               	movlb	0	; () banked
  1456  0135C2  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1457  0135C4  EC70  F0AE         	call	_LCD_write_message	;wreg free
  1458                           
  1459                           ;RemoteCan.c: 135: LCD_goto_line(4);
  1460  0135C8  0E04               	movlw	4
  1461  0135CA  EC66  F0A9         	call	_LCD_goto_line
  1462                           
  1463                           ;RemoteCan.c: 136: LCD_write_message("====================");
  1464  0135CE  0EAB               	movlw	low STR_1
  1465  0135D0  0100               	movlb	0	; () banked
  1466  0135D2  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  1467  0135D4  0EFF               	movlw	high STR_1
  1468  0135D6  0100               	movlb	0	; () banked
  1469  0135D8  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1470  0135DA  EC70  F0AE         	call	_LCD_write_message	;wreg free
  1471                           
  1472                           ;RemoteCan.c: 137: while (power_switch == 0) {
  1473  0135DE  D054               	goto	l8629
  1474  0135E0                     l8619:
  1475                           
  1476                           ;RemoteCan.c: 138: if ((time_counter - pr_time_1) >= 30) {
  1477  0135E0  C0D8  F0C8         	movff	_pr_time_1,??_main	;volatile
  1478  0135E4  C0D9  F0C9         	movff	_pr_time_1+1,??_main+1	;volatile
  1479  0135E8  C0DA  F0CA         	movff	_pr_time_1+2,??_main+2	;volatile
  1480  0135EC  C0DB  F0CB         	movff	_pr_time_1+3,??_main+3	;volatile
  1481  0135F0  0100               	movlb	0	; () banked
  1482  0135F2  1FC8               	comf	??_main& (0+255),f,b
  1483  0135F4  1FC9               	comf	(??_main+1)& (0+255),f,b
  1484  0135F6  1FCA               	comf	(??_main+2)& (0+255),f,b
  1485  0135F8  1FCB               	comf	(??_main+3)& (0+255),f,b
  1486  0135FA  2BC8               	incf	??_main& (0+255),f,b
  1487  0135FC  0E00               	movlw	0
  1488  0135FE  23C9               	addwfc	(??_main+1)& (0+255),f,b
  1489  013600  23CA               	addwfc	(??_main+2)& (0+255),f,b
  1490  013602  23CB               	addwfc	(??_main+3)& (0+255),f,b
  1491  013604  501A               	movf	_time_counter,w,c	;volatile
  1492  013606  0100               	movlb	0	; () banked
  1493  013608  25C8               	addwf	??_main& (0+255),w,b
  1494  01360A  0100               	movlb	0	; () banked
  1495  01360C  6FCC               	movwf	(??_main+4)& (0+255),b
  1496  01360E  501B               	movf	_time_counter+1,w,c	;volatile
  1497  013610  0100               	movlb	0	; () banked
  1498  013612  21C9               	addwfc	(??_main+1)& (0+255),w,b
  1499  013614  0100               	movlb	0	; () banked
  1500  013616  6FCD               	movwf	(??_main+5)& (0+255),b
  1501  013618  501C               	movf	_time_counter+2,w,c	;volatile
  1502  01361A  0100               	movlb	0	; () banked
  1503  01361C  21CA               	addwfc	(??_main+2)& (0+255),w,b
  1504  01361E  0100               	movlb	0	; () banked
  1505  013620  6FCE               	movwf	(??_main+6)& (0+255),b
  1506  013622  501D               	movf	_time_counter+3,w,c	;volatile
  1507  013624  0100               	movlb	0	; () banked
  1508  013626  21CB               	addwfc	(??_main+3)& (0+255),w,b
  1509  013628  0100               	movlb	0	; () banked
  1510  01362A  6FCF               	movwf	(??_main+7)& (0+255),b
  1511  01362C  0100               	movlb	0	; () banked
  1512  01362E  51CF               	movf	(??_main+7)& (0+255),w,b
  1513  013630  0100               	movlb	0	; () banked
  1514  013632  11CE               	iorwf	(??_main+6)& (0+255),w,b
  1515  013634  0100               	movlb	0	; () banked
  1516  013636  11CD               	iorwf	(??_main+5)& (0+255),w,b
  1517  013638  E105               	bnz	u11130
  1518  01363A  0E1E               	movlw	30
  1519  01363C  0100               	movlb	0	; () banked
  1520  01363E  5DCC               	subwf	(??_main+4)& (0+255),w,b
  1521  013640  A0D8               	btfss	status,0,c
  1522  013642  D019               	goto	l8625
  1523  013644                     u11130:
  1524                           
  1525                           ; BSR set to: 0
  1526                           ;RemoteCan.c: 139: pr_time_1 = time_counter;
  1527  013644  C01A  F0D8         	movff	_time_counter,_pr_time_1	;volatile
  1528  013648  C01B  F0D9         	movff	_time_counter+1,_pr_time_1+1	;volatile
  1529  01364C  C01C  F0DA         	movff	_time_counter+2,_pr_time_1+2	;volatile
  1530  013650  C01D  F0DB         	movff	_time_counter+3,_pr_time_1+3	;volatile
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;RemoteCan.c: 140: PORTDbits.RD7 = ~PORTDbits.RD7;
  1534  013654  AE83               	btfss	3971,7,c	;volatile
  1535  013656  D002               	goto	u11140
  1536  013658  0E01               	movlw	1
  1537  01365A  D001               	goto	u11146
  1538  01365C                     u11140:
  1539  01365C  0E00               	movlw	0
  1540  01365E                     u11146:
  1541  01365E  0AFF               	xorlw	255
  1542  013660  0100               	movlb	0	; () banked
  1543  013662  6FC8               	movwf	??_main& (0+255),b
  1544  013664  0100               	movlb	0	; () banked
  1545  013666  33C8               	rrcf	??_main& (0+255),f,b
  1546  013668  33C8               	rrcf	??_main& (0+255),f,b
  1547  01366A  5083               	movf	3971,w,c	;volatile
  1548  01366C  0100               	movlb	0	; () banked
  1549  01366E  19C8               	xorwf	??_main& (0+255),w,b
  1550  013670  0B7F               	andlw	-129
  1551  013672  19C8               	xorwf	??_main& (0+255),w,b
  1552  013674  6E83               	movwf	3971,c	;volatile
  1553  013676                     l8625:
  1554                           
  1555                           ; BSR set to: 0
  1556                           ;RemoteCan.c: 141: }
  1557                           ;RemoteCan.c: 142: PWR_Button_Polling();
  1558  013676  EC16  F0AF         	call	_PWR_Button_Polling	;wreg free
  1559                           
  1560                           ;RemoteCan.c: 143: delay_ms(10);
  1561  01367A  0E00               	movlw	0
  1562  01367C  0100               	movlb	0	; () banked
  1563  01367E  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1564  013680  0E0A               	movlw	10
  1565  013682  6F74               	movwf	delay_ms@value_ms& (0+255),b
  1566  013684  EC1C  F0AE         	call	_delay_ms	;wreg free
  1567  013688                     l8629:
  1568  013688  AA47               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1569  01368A  D7AA               	goto	l8619
  1570                           
  1571                           ;RemoteCan.c: 144: }
  1572                           ;RemoteCan.c: 145: PORTDbits.RD7 = 0;
  1573  01368C  9E83               	bcf	3971,7,c	;volatile
  1574  01368E                     l8631:
  1575                           
  1576                           ;RemoteCan.c: 146: }
  1577                           ;RemoteCan.c: 148: Joystick_Polling();
  1578  01368E  EC6C  F0AD         	call	_Joystick_Polling	;wreg free
  1579                           
  1580                           ;RemoteCan.c: 151: if (PORTAbits.RA2 == 1) {
  1581  013692  A480               	btfss	3968,2,c	;volatile
  1582  013694  D004               	goto	l752
  1583                           
  1584                           ;RemoteCan.c: 152: switch_position = 0;
  1585  013696  0E00               	movlw	0
  1586  013698  0100               	movlb	0	; () banked
  1587  01369A  6FED               	movwf	_switch_position& (0+255),b	;volatile
  1588                           
  1589                           ;RemoteCan.c: 153: } else {
  1590  01369C  D00D               	goto	l8641
  1591  01369E                     l752:
  1592                           
  1593                           ;RemoteCan.c: 154: if (PORTAbits.RA3 == 0) {
  1594  01369E  B680               	btfsc	3968,3,c	;volatile
  1595  0136A0  D005               	goto	l8639
  1596                           
  1597                           ;RemoteCan.c: 155: switch_position = 1;
  1598  0136A2  0E01               	movlw	1
  1599  0136A4  0100               	movlb	0	; () banked
  1600  0136A6  6FED               	movwf	_switch_position& (0+255),b	;volatile
  1601                           
  1602                           ;RemoteCan.c: 156: dir = 1;
  1603  0136A8  0E01               	movlw	1
  1604  0136AA  D004               	goto	L1
  1605  0136AC                     l8639:
  1606                           
  1607                           ;RemoteCan.c: 158: switch_position = 2;
  1608  0136AC  0E02               	movlw	2
  1609  0136AE  0100               	movlb	0	; () banked
  1610  0136B0  6FED               	movwf	_switch_position& (0+255),b	;volatile
  1611                           
  1612                           ;RemoteCan.c: 159: dir = 0;
  1613  0136B2  0E00               	movlw	0
  1614  0136B4                     L1:
  1615  0136B4  0100               	movlb	0	; () banked
  1616  0136B6  6FEC               	movwf	_dir& (0+255),b	;volatile
  1617  0136B8                     l8641:
  1618                           
  1619                           ; BSR set to: 0
  1620                           ;RemoteCan.c: 160: }
  1621                           ;RemoteCan.c: 161: }
  1622                           ;RemoteCan.c: 163: data_steering [0] = (JoystickValues[0])*(JoystickConstants[0]);
  1623  0136B8  C0D0  F080         	movff	_JoystickConstants,___flmul@a	;volatile
  1624  0136BC  C0D1  F081         	movff	_JoystickConstants+1,___flmul@a+1	;volatile
  1625  0136C0  C0D2  F082         	movff	_JoystickConstants+2,___flmul@a+2	;volatile
  1626  0136C4  C0D3  F083         	movff	_JoystickConstants+3,___flmul@a+3	;volatile
  1627  0136C8  0100               	movlb	0	; () banked
  1628  0136CA  51E4               	movf	_JoystickValues& (0+255),w,b	;volatile
  1629  0136CC  0100               	movlb	0	; () banked
  1630  0136CE  6F6E               	movwf	___xxtofl@val& (0+255),b
  1631  0136D0  6B6F               	clrf	(___xxtofl@val+1)& (0+255),b
  1632  0136D2  6B70               	clrf	(___xxtofl@val+2)& (0+255),b
  1633  0136D4  6B71               	clrf	(___xxtofl@val+3)& (0+255),b
  1634  0136D6  0E00               	movlw	0
  1635  0136D8  ECBA  F0A1         	call	___xxtofl
  1636  0136DC  C06E  F07C         	movff	?___xxtofl,___flmul@b
  1637  0136E0  C06F  F07D         	movff	?___xxtofl+1,___flmul@b+1
  1638  0136E4  C070  F07E         	movff	?___xxtofl+2,___flmul@b+2
  1639  0136E8  C071  F07F         	movff	?___xxtofl+3,___flmul@b+3
  1640  0136EC  EC42  F098         	call	___flmul	;wreg free
  1641  0136F0  C07C  F09E         	movff	?___flmul,___fltol@f1
  1642  0136F4  C07D  F09F         	movff	?___flmul+1,___fltol@f1+1
  1643  0136F8  C07E  F0A0         	movff	?___flmul+2,___fltol@f1+2
  1644  0136FC  C07F  F0A1         	movff	?___flmul+3,___fltol@f1+3
  1645  013700  ECE0  F0A8         	call	___fltol	;wreg free
  1646  013704  0100               	movlb	0	; () banked
  1647  013706  519E               	movf	?___fltol& (0+255),w,b
  1648  013708  0100               	movlb	0	; () banked
  1649  01370A  6FF0               	movwf	_data_steering& (0+255),b
  1650                           
  1651                           ; BSR set to: 0
  1652                           ;RemoteCan.c: 164: if (switch_position != 0) {
  1653  01370C  0100               	movlb	0	; () banked
  1654  01370E  51ED               	movf	_switch_position& (0+255),w,b	;volatile
  1655  013710  B4D8               	btfsc	status,2,c
  1656  013712  D088               	goto	l8655
  1657                           
  1658                           ; BSR set to: 0
  1659                           ;RemoteCan.c: 165: if (JoystickValues[1] > 132) {
  1660  013714  0E84               	movlw	132
  1661  013716  0100               	movlb	0	; () banked
  1662  013718  65E5               	cpfsgt	(_JoystickValues+1)& (0+255),b	;volatile
  1663  01371A  D042               	goto	l8651
  1664                           
  1665                           ; BSR set to: 0
  1666                           ;RemoteCan.c: 166: set_speed = (JoystickValues[1] - 130)*(JoystickConstants[1]);
  1667  01371C  C0D4  F080         	movff	_JoystickConstants+4,___flmul@a	;volatile
  1668  013720  C0D5  F081         	movff	_JoystickConstants+5,___flmul@a+1	;volatile
  1669  013724  C0D6  F082         	movff	_JoystickConstants+6,___flmul@a+2	;volatile
  1670  013728  C0D7  F083         	movff	_JoystickConstants+7,___flmul@a+3	;volatile
  1671  01372C  0E7E               	movlw	126
  1672  01372E  0100               	movlb	0	; () banked
  1673  013730  6FC8               	movwf	??_main& (0+255),b
  1674  013732  0EFF               	movlw	255
  1675  013734  0100               	movlb	0	; () banked
  1676  013736  6FC9               	movwf	(??_main+1)& (0+255),b
  1677  013738  0100               	movlb	0	; () banked
  1678  01373A  51E5               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  1679  01373C  0100               	movlb	0	; () banked
  1680  01373E  6FCA               	movwf	(??_main+2)& (0+255),b
  1681  013740  6BCB               	clrf	(??_main+3)& (0+255),b
  1682  013742  0100               	movlb	0	; () banked
  1683  013744  51C8               	movf	??_main& (0+255),w,b
  1684  013746  0100               	movlb	0	; () banked
  1685  013748  27CA               	addwf	(??_main+2)& (0+255),f,b
  1686  01374A  0100               	movlb	0	; () banked
  1687  01374C  51C9               	movf	(??_main+1)& (0+255),w,b
  1688  01374E  0100               	movlb	0	; () banked
  1689  013750  23CB               	addwfc	(??_main+3)& (0+255),f,b
  1690  013752  C0CA  F06E         	movff	??_main+2,___xxtofl@val
  1691  013756  C0CB  F06F         	movff	??_main+3,___xxtofl@val+1
  1692  01375A  0100               	movlb	0	; () banked
  1693  01375C  0E00               	movlw	0
  1694  01375E  BF6F               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1695  013760  0EFF               	movlw	-1
  1696  013762  6F70               	movwf	(___xxtofl@val+2)& (0+255),b
  1697  013764  6F71               	movwf	(___xxtofl@val+3)& (0+255),b
  1698  013766  0E01               	movlw	1
  1699  013768  ECBA  F0A1         	call	___xxtofl
  1700  01376C  C06E  F07C         	movff	?___xxtofl,___flmul@b
  1701  013770  C06F  F07D         	movff	?___xxtofl+1,___flmul@b+1
  1702  013774  C070  F07E         	movff	?___xxtofl+2,___flmul@b+2
  1703  013778  C071  F07F         	movff	?___xxtofl+3,___flmul@b+3
  1704  01377C  EC42  F098         	call	___flmul	;wreg free
  1705  013780  C07C  F09E         	movff	?___flmul,___fltol@f1
  1706  013784  C07D  F09F         	movff	?___flmul+1,___fltol@f1+1
  1707  013788  C07E  F0A0         	movff	?___flmul+2,___fltol@f1+2
  1708  01378C  C07F  F0A1         	movff	?___flmul+3,___fltol@f1+3
  1709  013790  ECE0  F0A8         	call	___fltol	;wreg free
  1710  013794  C09E  F0EA         	movff	?___fltol,_set_speed	;volatile
  1711  013798  C09F  F0EB         	movff	?___fltol+1,_set_speed+1	;volatile
  1712                           
  1713                           ;RemoteCan.c: 167: data_brake [0] = 0;
  1714  01379C  0E00               	movlw	0
  1715  01379E  D040               	goto	L2
  1716  0137A0                     l8651:
  1717                           
  1718                           ; BSR set to: 0
  1719                           ;RemoteCan.c: 169: set_speed = 0;
  1720  0137A0  0E00               	movlw	0
  1721  0137A2  0100               	movlb	0	; () banked
  1722  0137A4  6FEB               	movwf	(_set_speed+1)& (0+255),b	;volatile
  1723  0137A6  0E00               	movlw	0
  1724  0137A8  6FEA               	movwf	_set_speed& (0+255),b	;volatile
  1725                           
  1726                           ; BSR set to: 0
  1727                           ;RemoteCan.c: 170: data_brake [0] = ((130 - JoystickValues[1]))*(1.9);
  1728  0137AA  0E33               	movlw	51
  1729  0137AC  0100               	movlb	0	; () banked
  1730  0137AE  6F80               	movwf	___flmul@a& (0+255),b
  1731  0137B0  0E33               	movlw	51
  1732  0137B2  6F81               	movwf	(___flmul@a+1)& (0+255),b
  1733  0137B4  0EF3               	movlw	243
  1734  0137B6  6F82               	movwf	(___flmul@a+2)& (0+255),b
  1735  0137B8  0E3F               	movlw	63
  1736  0137BA  6F83               	movwf	(___flmul@a+3)& (0+255),b
  1737  0137BC  0100               	movlb	0	; () banked
  1738  0137BE  51E5               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  1739  0137C0  0100               	movlb	0	; () banked
  1740  0137C2  6FC8               	movwf	??_main& (0+255),b
  1741  0137C4  6BC9               	clrf	(??_main+1)& (0+255),b
  1742  0137C6  0100               	movlb	0	; () banked
  1743  0137C8  1FC8               	comf	??_main& (0+255),f,b
  1744  0137CA  1FC9               	comf	(??_main+1)& (0+255),f,b
  1745  0137CC  4BC8               	infsnz	??_main& (0+255),f,b
  1746  0137CE  2BC9               	incf	(??_main+1)& (0+255),f,b
  1747  0137D0  0E82               	movlw	130
  1748  0137D2  0100               	movlb	0	; () banked
  1749  0137D4  27C8               	addwf	??_main& (0+255),f,b
  1750  0137D6  0E00               	movlw	0
  1751  0137D8  23C9               	addwfc	(??_main+1)& (0+255),f,b
  1752  0137DA  C0C8  F06E         	movff	??_main,___xxtofl@val
  1753  0137DE  C0C9  F06F         	movff	??_main+1,___xxtofl@val+1
  1754  0137E2  0100               	movlb	0	; () banked
  1755  0137E4  0E00               	movlw	0
  1756  0137E6  BF6F               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1757  0137E8  0EFF               	movlw	-1
  1758  0137EA  6F70               	movwf	(___xxtofl@val+2)& (0+255),b
  1759  0137EC  6F71               	movwf	(___xxtofl@val+3)& (0+255),b
  1760  0137EE  0E01               	movlw	1
  1761  0137F0  ECBA  F0A1         	call	___xxtofl
  1762  0137F4  C06E  F07C         	movff	?___xxtofl,___flmul@b
  1763  0137F8  C06F  F07D         	movff	?___xxtofl+1,___flmul@b+1
  1764  0137FC  C070  F07E         	movff	?___xxtofl+2,___flmul@b+2
  1765  013800  C071  F07F         	movff	?___xxtofl+3,___flmul@b+3
  1766  013804  EC42  F098         	call	___flmul	;wreg free
  1767  013808  C07C  F09E         	movff	?___flmul,___fltol@f1
  1768  01380C  C07D  F09F         	movff	?___flmul+1,___fltol@f1+1
  1769  013810  C07E  F0A0         	movff	?___flmul+2,___fltol@f1+2
  1770  013814  C07F  F0A1         	movff	?___flmul+3,___fltol@f1+3
  1771  013818  ECE0  F0A8         	call	___fltol	;wreg free
  1772  01381C  0100               	movlb	0	; () banked
  1773  01381E  519E               	movf	?___fltol& (0+255),w,b
  1774  013820                     L2:
  1775  013820  0100               	movlb	0	; () banked
  1776  013822  6FEE               	movwf	_data_brake& (0+255),b
  1777  013824                     l8655:
  1778                           
  1779                           ; BSR set to: 0
  1780                           ;RemoteCan.c: 171: }
  1781                           ;RemoteCan.c: 172: }
  1782                           ;RemoteCan.c: 174: if (newMessageCan == 1) {
  1783  013824  A847               	btfss	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  1784  013826  D003               	goto	l8661
  1785                           
  1786                           ; BSR set to: 0
  1787                           ;RemoteCan.c: 175: CAN_interpreter();
  1788  013828  ECC1  F0AB         	call	_CAN_interpreter	;wreg free
  1789                           
  1790                           ;RemoteCan.c: 176: newMessageCan = 0;
  1791  01382C  9847               	bcf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  1792  01382E                     l8661:
  1793                           
  1794                           ;RemoteCan.c: 177: }
  1795                           ;RemoteCan.c: 179: if ((time_counter - pr_time_2) >= 2) {
  1796  01382E  C0DC  F0C8         	movff	_pr_time_2,??_main	;volatile
  1797  013832  C0DD  F0C9         	movff	_pr_time_2+1,??_main+1	;volatile
  1798  013836  C0DE  F0CA         	movff	_pr_time_2+2,??_main+2	;volatile
  1799  01383A  C0DF  F0CB         	movff	_pr_time_2+3,??_main+3	;volatile
  1800  01383E  0100               	movlb	0	; () banked
  1801  013840  1FC8               	comf	??_main& (0+255),f,b
  1802  013842  1FC9               	comf	(??_main+1)& (0+255),f,b
  1803  013844  1FCA               	comf	(??_main+2)& (0+255),f,b
  1804  013846  1FCB               	comf	(??_main+3)& (0+255),f,b
  1805  013848  2BC8               	incf	??_main& (0+255),f,b
  1806  01384A  0E00               	movlw	0
  1807  01384C  23C9               	addwfc	(??_main+1)& (0+255),f,b
  1808  01384E  23CA               	addwfc	(??_main+2)& (0+255),f,b
  1809  013850  23CB               	addwfc	(??_main+3)& (0+255),f,b
  1810  013852  501A               	movf	_time_counter,w,c	;volatile
  1811  013854  0100               	movlb	0	; () banked
  1812  013856  25C8               	addwf	??_main& (0+255),w,b
  1813  013858  0100               	movlb	0	; () banked
  1814  01385A  6FCC               	movwf	(??_main+4)& (0+255),b
  1815  01385C  501B               	movf	_time_counter+1,w,c	;volatile
  1816  01385E  0100               	movlb	0	; () banked
  1817  013860  21C9               	addwfc	(??_main+1)& (0+255),w,b
  1818  013862  0100               	movlb	0	; () banked
  1819  013864  6FCD               	movwf	(??_main+5)& (0+255),b
  1820  013866  501C               	movf	_time_counter+2,w,c	;volatile
  1821  013868  0100               	movlb	0	; () banked
  1822  01386A  21CA               	addwfc	(??_main+2)& (0+255),w,b
  1823  01386C  0100               	movlb	0	; () banked
  1824  01386E  6FCE               	movwf	(??_main+6)& (0+255),b
  1825  013870  501D               	movf	_time_counter+3,w,c	;volatile
  1826  013872  0100               	movlb	0	; () banked
  1827  013874  21CB               	addwfc	(??_main+3)& (0+255),w,b
  1828  013876  0100               	movlb	0	; () banked
  1829  013878  6FCF               	movwf	(??_main+7)& (0+255),b
  1830  01387A  0100               	movlb	0	; () banked
  1831  01387C  51CF               	movf	(??_main+7)& (0+255),w,b
  1832  01387E  0100               	movlb	0	; () banked
  1833  013880  11CE               	iorwf	(??_main+6)& (0+255),w,b
  1834  013882  0100               	movlb	0	; () banked
  1835  013884  11CD               	iorwf	(??_main+5)& (0+255),w,b
  1836  013886  E105               	bnz	u11210
  1837  013888  0E02               	movlw	2
  1838  01388A  0100               	movlb	0	; () banked
  1839  01388C  5DCC               	subwf	(??_main+4)& (0+255),w,b
  1840  01388E  A0D8               	btfss	status,0,c
  1841  013890  D00A               	goto	l8667
  1842  013892                     u11210:
  1843                           
  1844                           ; BSR set to: 0
  1845                           ;RemoteCan.c: 180: pr_time_2 = time_counter;
  1846  013892  C01A  F0DC         	movff	_time_counter,_pr_time_2	;volatile
  1847  013896  C01B  F0DD         	movff	_time_counter+1,_pr_time_2+1	;volatile
  1848  01389A  C01C  F0DE         	movff	_time_counter+2,_pr_time_2+2	;volatile
  1849  01389E  C01D  F0DF         	movff	_time_counter+3,_pr_time_2+3	;volatile
  1850                           
  1851                           ; BSR set to: 0
  1852                           ;RemoteCan.c: 181: CAN_Send();
  1853  0138A2  EC64  F0AB         	call	_CAN_Send	;wreg free
  1854  0138A6                     l8667:
  1855                           
  1856                           ;RemoteCan.c: 182: }
  1857                           ;RemoteCan.c: 184: if ((time_counter - pr_time_3) >= 100) {
  1858  0138A6  C0E0  F0C8         	movff	_pr_time_3,??_main	;volatile
  1859  0138AA  C0E1  F0C9         	movff	_pr_time_3+1,??_main+1	;volatile
  1860  0138AE  C0E2  F0CA         	movff	_pr_time_3+2,??_main+2	;volatile
  1861  0138B2  C0E3  F0CB         	movff	_pr_time_3+3,??_main+3	;volatile
  1862  0138B6  0100               	movlb	0	; () banked
  1863  0138B8  1FC8               	comf	??_main& (0+255),f,b
  1864  0138BA  1FC9               	comf	(??_main+1)& (0+255),f,b
  1865  0138BC  1FCA               	comf	(??_main+2)& (0+255),f,b
  1866  0138BE  1FCB               	comf	(??_main+3)& (0+255),f,b
  1867  0138C0  2BC8               	incf	??_main& (0+255),f,b
  1868  0138C2  0E00               	movlw	0
  1869  0138C4  23C9               	addwfc	(??_main+1)& (0+255),f,b
  1870  0138C6  23CA               	addwfc	(??_main+2)& (0+255),f,b
  1871  0138C8  23CB               	addwfc	(??_main+3)& (0+255),f,b
  1872  0138CA  501A               	movf	_time_counter,w,c	;volatile
  1873  0138CC  0100               	movlb	0	; () banked
  1874  0138CE  25C8               	addwf	??_main& (0+255),w,b
  1875  0138D0  0100               	movlb	0	; () banked
  1876  0138D2  6FCC               	movwf	(??_main+4)& (0+255),b
  1877  0138D4  501B               	movf	_time_counter+1,w,c	;volatile
  1878  0138D6  0100               	movlb	0	; () banked
  1879  0138D8  21C9               	addwfc	(??_main+1)& (0+255),w,b
  1880  0138DA  0100               	movlb	0	; () banked
  1881  0138DC  6FCD               	movwf	(??_main+5)& (0+255),b
  1882  0138DE  501C               	movf	_time_counter+2,w,c	;volatile
  1883  0138E0  0100               	movlb	0	; () banked
  1884  0138E2  21CA               	addwfc	(??_main+2)& (0+255),w,b
  1885  0138E4  0100               	movlb	0	; () banked
  1886  0138E6  6FCE               	movwf	(??_main+6)& (0+255),b
  1887  0138E8  501D               	movf	_time_counter+3,w,c	;volatile
  1888  0138EA  0100               	movlb	0	; () banked
  1889  0138EC  21CB               	addwfc	(??_main+3)& (0+255),w,b
  1890  0138EE  0100               	movlb	0	; () banked
  1891  0138F0  6FCF               	movwf	(??_main+7)& (0+255),b
  1892  0138F2  0100               	movlb	0	; () banked
  1893  0138F4  51CF               	movf	(??_main+7)& (0+255),w,b
  1894  0138F6  0100               	movlb	0	; () banked
  1895  0138F8  11CE               	iorwf	(??_main+6)& (0+255),w,b
  1896  0138FA  0100               	movlb	0	; () banked
  1897  0138FC  11CD               	iorwf	(??_main+5)& (0+255),w,b
  1898  0138FE  E105               	bnz	u11220
  1899  013900  0E64               	movlw	100
  1900  013902  0100               	movlb	0	; () banked
  1901  013904  5DCC               	subwf	(??_main+4)& (0+255),w,b
  1902  013906  A0D8               	btfss	status,0,c
  1903  013908  D624               	goto	l8593
  1904  01390A                     u11220:
  1905                           
  1906                           ; BSR set to: 0
  1907                           ;RemoteCan.c: 185: pr_time_3 = time_counter;
  1908  01390A  C01A  F0E0         	movff	_time_counter,_pr_time_3	;volatile
  1909  01390E  C01B  F0E1         	movff	_time_counter+1,_pr_time_3+1	;volatile
  1910  013912  C01C  F0E2         	movff	_time_counter+2,_pr_time_3+2	;volatile
  1911  013916  C01D  F0E3         	movff	_time_counter+3,_pr_time_3+3	;volatile
  1912                           
  1913                           ; BSR set to: 0
  1914                           ;RemoteCan.c: 186: LCD_Handler();
  1915  01391A  ECBF  F0A6         	call	_LCD_Handler	;wreg free
  1916  01391E  D619               	goto	l8593
  1917  013920                     __end_of_main:
  1918                           	opt stack 0
  1919                           tblptru	equ	0xFF8
  1920                           tblptrh	equ	0xFF7
  1921                           tblptrl	equ	0xFF6
  1922                           tablat	equ	0xFF5
  1923                           postinc0	equ	0xFEE
  1924                           wreg	equ	0xFE8
  1925                           status	equ	0xFD8
  1926                           
  1927 ;; *************** function _board_initialization *****************
  1928 ;; Defined at:
  1929 ;;		line 297 in file "RemoteCan.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;		None
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;		None
  1934 ;; Return value:  Size  Location     Type
  1935 ;;		None               void
  1936 ;; Registers used:
  1937 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1947 ;;Total ram usage:        0 bytes
  1948 ;; Hardware stack levels used:    1
  1949 ;; Hardware stack levels required when called:    9
  1950 ;; This function calls:
  1951 ;;		_CANInitialize
  1952 ;;		_LCD_clear
  1953 ;;		_LCD_goto_line
  1954 ;;		_LCD_initialize
  1955 ;;		_LCD_write_message
  1956 ;;		_delay_ms
  1957 ;; This function is called by:
  1958 ;;		_main
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           	psect	text1
  1963  0153B8                     __ptext1:
  1964                           	opt stack 0
  1965  0153B8                     _board_initialization:
  1966                           	opt stack 21
  1967                           
  1968                           ;RemoteCan.c: 299: LATA = 0x00;
  1969                           
  1970                           ;incstack = 0
  1971  0153B8  0E00               	movlw	0
  1972  0153BA  6E89               	movwf	3977,c	;volatile
  1973                           
  1974                           ;RemoteCan.c: 300: TRISA = 0b00011111;
  1975  0153BC  0E1F               	movlw	31
  1976  0153BE  6E92               	movwf	3986,c	;volatile
  1977                           
  1978                           ;RemoteCan.c: 301: LATB = 0x00;
  1979  0153C0  0E00               	movlw	0
  1980  0153C2  6E8A               	movwf	3978,c	;volatile
  1981                           
  1982                           ;RemoteCan.c: 302: TRISB = 0b11111011;
  1983  0153C4  0EFB               	movlw	251
  1984  0153C6  6E93               	movwf	3987,c	;volatile
  1985                           
  1986                           ;RemoteCan.c: 303: LATC = 0x00;
  1987  0153C8  0E00               	movlw	0
  1988  0153CA  6E8B               	movwf	3979,c	;volatile
  1989                           
  1990                           ;RemoteCan.c: 304: TRISC = 0b11110000;
  1991  0153CC  0EF0               	movlw	240
  1992  0153CE  6E94               	movwf	3988,c	;volatile
  1993                           
  1994                           ;RemoteCan.c: 305: LATD = 0x00;
  1995  0153D0  0E00               	movlw	0
  1996  0153D2  6E8C               	movwf	3980,c	;volatile
  1997                           
  1998                           ;RemoteCan.c: 306: TRISD = 0x00;
  1999  0153D4  0E00               	movlw	0
  2000  0153D6  6E95               	movwf	3989,c	;volatile
  2001                           
  2002                           ;RemoteCan.c: 307: LATE = 0x00;
  2003  0153D8  0E00               	movlw	0
  2004  0153DA  6E8D               	movwf	3981,c	;volatile
  2005                           
  2006                           ;RemoteCan.c: 308: TRISE = 0x00;
  2007  0153DC  0E00               	movlw	0
  2008  0153DE  6E96               	movwf	3990,c	;volatile
  2009                           
  2010                           ;RemoteCan.c: 310: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_
      +                          SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  2011  0153E0  0E06               	movlw	6
  2012  0153E2  0100               	movlb	0	; () banked
  2013  0153E4  6F7C               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2014  0153E6  0E05               	movlw	5
  2015  0153E8  0100               	movlb	0	; () banked
  2016  0153EA  6F7D               	movwf	CANInitialize@phaseSeg2& (0+255),b
  2017  0153EC  0E01               	movlw	1
  2018  0153EE  0100               	movlb	0	; () banked
  2019  0153F0  6F7E               	movwf	CANInitialize@SJW& (0+255),b
  2020  0153F2  0E03               	movlw	3
  2021  0153F4  0100               	movlb	0	; () banked
  2022  0153F6  6F7F               	movwf	CANInitialize@BRP& (0+255),b
  2023  0153F8  0E9D               	movlw	157
  2024  0153FA  0100               	movlb	0	; () banked
  2025  0153FC  6F80               	movwf	CANInitialize@flags& (0+255),b
  2026  0153FE  0E04               	movlw	4
  2027  015400  ECA1  F0A2         	call	_CANInitialize
  2028                           
  2029                           ;RemoteCan.c: 314: PIR2bits.TMR3IF = 0;
  2030  015404  92A1               	bcf	4001,1,c	;volatile
  2031                           
  2032                           ;RemoteCan.c: 315: PIR3bits.RXB1IF = 0;
  2033  015406  92A4               	bcf	4004,1,c	;volatile
  2034                           
  2035                           ;RemoteCan.c: 316: PIR3bits.RXB0IF = 0;
  2036  015408  90A4               	bcf	4004,0,c	;volatile
  2037                           
  2038                           ;RemoteCan.c: 319: RCONbits.IPEN = 1;
  2039  01540A  8ED0               	bsf	4048,7,c	;volatile
  2040                           
  2041                           ;RemoteCan.c: 320: IPR3bits.RXB1IP = 1;
  2042  01540C  82A5               	bsf	4005,1,c	;volatile
  2043                           
  2044                           ;RemoteCan.c: 321: IPR3bits.RXB0IP = 1;
  2045  01540E  80A5               	bsf	4005,0,c	;volatile
  2046                           
  2047                           ;RemoteCan.c: 322: IPR2bits.TMR3IP = 0;
  2048  015410  92A2               	bcf	4002,1,c	;volatile
  2049                           
  2050                           ;RemoteCan.c: 325: ADCON1 = 0b00001101;
  2051  015412  0E0D               	movlw	13
  2052  015414  6EC1               	movwf	4033,c	;volatile
  2053                           
  2054                           ;RemoteCan.c: 326: ADCON0bits.CHS2 = 0;
  2055  015416  98C2               	bcf	4034,4,c	;volatile
  2056                           
  2057                           ;RemoteCan.c: 327: ADCON0bits.CHS1 = 0;
  2058  015418  96C2               	bcf	4034,3,c	;volatile
  2059                           
  2060                           ;RemoteCan.c: 328: ADCON0bits.CHS0 = 0;
  2061  01541A  94C2               	bcf	4034,2,c	;volatile
  2062                           
  2063                           ;RemoteCan.c: 329: ADCON2bits.ACQT2 = 1;
  2064  01541C  8AC0               	bsf	4032,5,c	;volatile
  2065                           
  2066                           ;RemoteCan.c: 330: ADCON2bits.ACQT1 = 1;
  2067  01541E  88C0               	bsf	4032,4,c	;volatile
  2068                           
  2069                           ;RemoteCan.c: 331: ADCON2bits.ACQT0 = 0;
  2070  015420  96C0               	bcf	4032,3,c	;volatile
  2071                           
  2072                           ;RemoteCan.c: 332: ADCON2bits.ADCS2 = 1;
  2073  015422  84C0               	bsf	4032,2,c	;volatile
  2074                           
  2075                           ;RemoteCan.c: 333: ADCON2bits.ADCS1 = 0;
  2076  015424  92C0               	bcf	4032,1,c	;volatile
  2077                           
  2078                           ;RemoteCan.c: 334: ADCON2bits.ADCS0 = 1;
  2079  015426  80C0               	bsf	4032,0,c	;volatile
  2080                           
  2081                           ;RemoteCan.c: 335: ADCON2bits.ADFM = 0;
  2082  015428  9EC0               	bcf	4032,7,c	;volatile
  2083                           
  2084                           ;RemoteCan.c: 336: ADCON0bits.ADON = 1;
  2085  01542A  80C2               	bsf	4034,0,c	;volatile
  2086                           
  2087                           ;RemoteCan.c: 339: LCD_initialize(16);
  2088  01542C  0E10               	movlw	16
  2089  01542E  EC80  F0A7         	call	_LCD_initialize
  2090                           
  2091                           ;RemoteCan.c: 341: LCD_clear();
  2092  015432  ECA3  F0AE         	call	_LCD_clear	;wreg free
  2093                           
  2094                           ;RemoteCan.c: 342: LCD_goto_line(1);
  2095  015436  0E01               	movlw	1
  2096  015438  EC66  F0A9         	call	_LCD_goto_line
  2097                           
  2098                           ;RemoteCan.c: 344: LCD_write_message("Wait...");
  2099  01543C  0EE6               	movlw	low STR_12
  2100  01543E  0100               	movlb	0	; () banked
  2101  015440  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  2102  015442  0EFF               	movlw	high STR_12
  2103  015444  0100               	movlb	0	; () banked
  2104  015446  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2105  015448  EC70  F0AE         	call	_LCD_write_message	;wreg free
  2106                           
  2107                           ;RemoteCan.c: 345: LCD_goto_line(2);
  2108  01544C  0E02               	movlw	2
  2109  01544E  EC66  F0A9         	call	_LCD_goto_line
  2110                           
  2111                           ;RemoteCan.c: 346: LCD_write_message("hola muchacho");
  2112  015452  0EC0               	movlw	low STR_13
  2113  015454  0100               	movlb	0	; () banked
  2114  015456  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  2115  015458  0EFF               	movlw	high STR_13
  2116  01545A  0100               	movlb	0	; () banked
  2117  01545C  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2118  01545E  EC70  F0AE         	call	_LCD_write_message	;wreg free
  2119                           
  2120                           ;RemoteCan.c: 347: delay_ms(300);
  2121  015462  0E01               	movlw	1
  2122  015464  0100               	movlb	0	; () banked
  2123  015466  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2124  015468  0E2C               	movlw	44
  2125  01546A  6F74               	movwf	delay_ms@value_ms& (0+255),b
  2126  01546C  EC1C  F0AE         	call	_delay_ms	;wreg free
  2127                           
  2128                           ;RemoteCan.c: 349: PORTDbits.RD2 = 0;
  2129  015470  9483               	bcf	3971,2,c	;volatile
  2130                           
  2131                           ;RemoteCan.c: 350: PORTDbits.RD3 = 0;
  2132  015472  9683               	bcf	3971,3,c	;volatile
  2133                           
  2134                           ;RemoteCan.c: 353: TMR3H = 0x63;
  2135  015474  0E63               	movlw	99
  2136  015476  6EB3               	movwf	4019,c	;volatile
  2137                           
  2138                           ;RemoteCan.c: 354: TMR3L = 0xC0;
  2139  015478  0EC0               	movlw	192
  2140  01547A  6EB2               	movwf	4018,c	;volatile
  2141                           
  2142                           ;RemoteCan.c: 357: PIE3bits.RXB1IE = 1;
  2143  01547C  82A3               	bsf	4003,1,c	;volatile
  2144                           
  2145                           ;RemoteCan.c: 358: PIE3bits.RXB0IE = 1;
  2146  01547E  80A3               	bsf	4003,0,c	;volatile
  2147                           
  2148                           ;RemoteCan.c: 359: PIE2bits.TMR3IE = 1;
  2149  015480  82A0               	bsf	4000,1,c	;volatile
  2150                           
  2151                           ;RemoteCan.c: 362: T3CON = 0x01;
  2152  015482  0E01               	movlw	1
  2153  015484  6EB1               	movwf	4017,c	;volatile
  2154                           
  2155                           ;RemoteCan.c: 363: LCD_clear();
  2156  015486  ECA3  F0AE         	call	_LCD_clear	;wreg free
  2157                           
  2158                           ;RemoteCan.c: 364: INTCONbits.GIEH = 1;
  2159  01548A  8EF2               	bsf	intcon,7,c	;volatile
  2160                           
  2161                           ;RemoteCan.c: 365: INTCONbits.GIEL = 1;
  2162  01548C  8CF2               	bsf	intcon,6,c	;volatile
  2163  01548E  0012               	return		;funcret
  2164  015490                     __end_of_board_initialization:
  2165                           	opt stack 0
  2166                           tblptru	equ	0xFF8
  2167                           tblptrh	equ	0xFF7
  2168                           tblptrl	equ	0xFF6
  2169                           tablat	equ	0xFF5
  2170                           intcon	equ	0xFF2
  2171                           postinc0	equ	0xFEE
  2172                           wreg	equ	0xFE8
  2173                           status	equ	0xFD8
  2174                           
  2175 ;; *************** function _CANInitialize *****************
  2176 ;; Defined at:
  2177 ;;		line 218 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;  propSeg         1    wreg     unsigned char 
  2180 ;;  phaseSeg1       1   28[BANK0 ] unsigned char 
  2181 ;;  phaseSeg2       1   29[BANK0 ] unsigned char 
  2182 ;;  SJW             1   30[BANK0 ] unsigned char 
  2183 ;;  BRP             1   31[BANK0 ] unsigned char 
  2184 ;;  flags           1   32[BANK0 ] enum E16887
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;  propSeg         1   37[BANK0 ] unsigned char 
  2187 ;;  FilterConfig    1   39[BANK0 ] unsigned char 
  2188 ;;  FilterConfig    1   38[BANK0 ] unsigned char 
  2189 ;; Return value:  Size  Location     Type
  2190 ;;		None               void
  2191 ;; Registers used:
  2192 ;;		wreg, status,2, status,0, cstack
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2198 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2199 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2200 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2201 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2202 ;;Total ram usage:       12 bytes
  2203 ;; Hardware stack levels used:    1
  2204 ;; Hardware stack levels required when called:    4
  2205 ;; This function calls:
  2206 ;;		_CANOperationMode
  2207 ;;		_CANSetFilter
  2208 ;;		_CANSetMask
  2209 ;; This function is called by:
  2210 ;;		_board_initialization
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214                           	psect	text2
  2215  014542                     __ptext2:
  2216                           	opt stack 0
  2217  014542                     _CANInitialize:
  2218                           	opt stack 25
  2219                           
  2220                           ;incstack = 0
  2221                           ;CANInitialize@propSeg stored from wreg
  2222  014542  0100               	movlb	0	; () banked
  2223  014544  6F85               	movwf	CANInitialize@propSeg& (0+255),b
  2224                           
  2225                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  2226                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  2227                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  2228  014546  0E80               	movlw	128
  2229  014548  EC24  F0AF         	call	_CANOperationMode
  2230                           
  2231                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  2232  01454C  0E00               	movlw	0
  2233  01454E  6E70               	movwf	3952,c	;volatile
  2234                           
  2235                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  2236  014550  0E00               	movlw	0
  2237  014552  6E71               	movwf	3953,c	;volatile
  2238                           
  2239                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  2240  014554  0E00               	movlw	0
  2241  014556  6E72               	movwf	3954,c	;volatile
  2242                           
  2243                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  2244  014558  0100               	movlb	0	; () banked
  2245  01455A  417E               	rrncf	CANInitialize@SJW& (0+255),w,b
  2246  01455C  42E8               	rrncf	wreg,f,c
  2247  01455E  0BC0               	andlw	192
  2248  014560  0100               	movlb	0	; () banked
  2249  014562  6F7E               	movwf	CANInitialize@SJW& (0+255),b
  2250                           
  2251                           ; BSR set to: 0
  2252                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  2253  014564  0100               	movlb	0	; () banked
  2254  014566  517E               	movf	CANInitialize@SJW& (0+255),w,b
  2255  014568  1270               	iorwf	3952,f,c	;volatile
  2256                           
  2257                           ; BSR set to: 0
  2258                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  2259  01456A  0100               	movlb	0	; () banked
  2260  01456C  517F               	movf	CANInitialize@BRP& (0+255),w,b
  2261  01456E  1270               	iorwf	3952,f,c	;volatile
  2262                           
  2263                           ; BSR set to: 0
  2264                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  2265  014570  0100               	movlb	0	; () banked
  2266  014572  5185               	movf	CANInitialize@propSeg& (0+255),w,b
  2267  014574  1271               	iorwf	3953,f,c	;volatile
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  2271  014576  0100               	movlb	0	; () banked
  2272  014578  397C               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  2273  01457A  42E8               	rrncf	wreg,f,c
  2274  01457C  0BF8               	andlw	248
  2275  01457E  0100               	movlb	0	; () banked
  2276  014580  6F7C               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  2280  014582  0100               	movlb	0	; () banked
  2281  014584  517C               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  2282  014586  1271               	iorwf	3953,f,c	;volatile
  2283                           
  2284                           ; BSR set to: 0
  2285                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  2286  014588  0100               	movlb	0	; () banked
  2287  01458A  A580               	btfss	CANInitialize@flags& (0+255),2,b
  2288                           
  2289                           ; BSR set to: 0
  2290                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  2291  01458C  8C71               	bsf	3953,6,c	;volatile
  2292                           
  2293                           ; BSR set to: 0
  2294                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  2295  01458E  0100               	movlb	0	; () banked
  2296  014590  B180               	btfsc	CANInitialize@flags& (0+255),0,b
  2297                           
  2298                           ; BSR set to: 0
  2299                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  2300  014592  8E71               	bsf	3953,7,c	;volatile
  2301                           
  2302                           ; BSR set to: 0
  2303                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  2304                           
  2305                           ; BSR set to: 0
  2306  014594  0100               	movlb	0	; () banked
  2307  014596  517D               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  2308  014598  1272               	iorwf	3954,f,c	;volatile
  2309                           
  2310                           ; BSR set to: 0
  2311                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  2312  01459A  0100               	movlb	0	; () banked
  2313  01459C  B380               	btfsc	CANInitialize@flags& (0+255),1,b
  2314                           
  2315                           ; BSR set to: 0
  2316                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  2317  01459E  8C72               	bsf	3954,6,c	;volatile
  2318                           
  2319                           ; BSR set to: 0
  2320                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  2321                           
  2322                           ; BSR set to: 0
  2323  0145A0  0100               	movlb	0	; () banked
  2324  0145A2  5180               	movf	CANInitialize@flags& (0+255),w,b
  2325  0145A4  0B60               	andlw	96
  2326  0145A6  6E60               	movwf	3936,c	;volatile
  2327                           
  2328                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  2329  0145A8  0100               	movlb	0	; () banked
  2330  0145AA  5180               	movf	CANInitialize@flags& (0+255),w,b
  2331  0145AC  0B10               	andlw	16
  2332  0145AE  0AFF               	xorlw	255
  2333  0145B0  B4D8               	btfsc	status,2,c
  2334                           
  2335                           ; BSR set to: 0
  2336                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  2337  0145B2  8460               	bsf	3936,2,c	;volatile
  2338                           
  2339                           ; BSR set to: 0
  2340                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  2341  0145B4  CF60 FF50          	movff	3936,3920	;volatile
  2342                           
  2343                           ; BSR set to: 0
  2344                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  2345  0145B8  0E00               	movlw	0
  2346  0145BA  0100               	movlb	0	; () banked
  2347  0145BC  6F6E               	movwf	CANSetMask@mask& (0+255),b
  2348  0145BE  0E00               	movlw	0
  2349  0145C0  6F6F               	movwf	(CANSetMask@mask+1)& (0+255),b
  2350  0145C2  0E00               	movlw	0
  2351  0145C4  6F70               	movwf	(CANSetMask@mask+2)& (0+255),b
  2352  0145C6  0E00               	movlw	0
  2353  0145C8  6F71               	movwf	(CANSetMask@mask+3)& (0+255),b
  2354  0145CA  0EF7               	movlw	247
  2355  0145CC  0100               	movlb	0	; () banked
  2356  0145CE  6F72               	movwf	CANSetMask@type& (0+255),b
  2357  0145D0  0E01               	movlw	1
  2358  0145D2  EC70  F09E         	call	_CANSetMask
  2359                           
  2360                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  2361  0145D6  0E00               	movlw	0
  2362  0145D8  0100               	movlb	0	; () banked
  2363  0145DA  6F6E               	movwf	CANSetMask@mask& (0+255),b
  2364  0145DC  0E00               	movlw	0
  2365  0145DE  6F6F               	movwf	(CANSetMask@mask+1)& (0+255),b
  2366  0145E0  0E00               	movlw	0
  2367  0145E2  6F70               	movwf	(CANSetMask@mask+2)& (0+255),b
  2368  0145E4  0E00               	movlw	0
  2369  0145E6  6F71               	movwf	(CANSetMask@mask+3)& (0+255),b
  2370  0145E8  0EF7               	movlw	247
  2371  0145EA  0100               	movlb	0	; () banked
  2372  0145EC  6F72               	movwf	CANSetMask@type& (0+255),b
  2373  0145EE  0E02               	movlw	2
  2374  0145F0  EC70  F09E         	call	_CANSetMask
  2375                           
  2376                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  2377  0145F4  D00F               	goto	l5801
  2378  0145F6                     l5795:
  2379                           
  2380                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  2381  0145F6  0EF7               	movlw	247
  2382  0145F8  0100               	movlb	0	; () banked
  2383  0145FA  6F86               	movwf	CANInitialize@FilterConfig1& (0+255),b
  2384  0145FC  D007               	goto	l5797
  2385  0145FE                     l366:
  2386                           
  2387                           ; BSR set to: 0
  2388                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2389  0145FE  0100               	movlb	0	; () banked
  2390  014600  6986               	setf	CANInitialize@FilterConfig1& (0+255),b
  2391                           
  2392                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  2393  014602  0100               	movlb	0	; () banked
  2394  014604  6987               	setf	CANInitialize@FilterConfig2& (0+255),b
  2395                           
  2396                           ;inc\CANlib.h: 273: break;
  2397  014606  D028               	goto	l5803
  2398  014608                     l367:
  2399                           
  2400                           ; BSR set to: 0
  2401                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2402  014608  0100               	movlb	0	; () banked
  2403  01460A  6986               	setf	CANInitialize@FilterConfig1& (0+255),b
  2404  01460C                     l5797:
  2405                           
  2406                           ; BSR set to: 0
  2407                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  2408  01460C  0EF7               	movlw	247
  2409  01460E  0100               	movlb	0	; () banked
  2410  014610  6F87               	movwf	CANInitialize@FilterConfig2& (0+255),b
  2411                           
  2412                           ; BSR set to: 0
  2413                           ;inc\CANlib.h: 278: }
  2414                           
  2415                           ;inc\CANlib.h: 277: break;
  2416  014612  D022               	goto	l5803
  2417  014614                     l5801:
  2418  014614  0E9F               	movlw	159
  2419  014616  0100               	movlb	0	; () banked
  2420  014618  6F81               	movwf	??_CANInitialize& (0+255),b
  2421  01461A  0EFF               	movlw	255
  2422  01461C  0100               	movlb	0	; () banked
  2423  01461E  6F82               	movwf	(??_CANInitialize+1)& (0+255),b
  2424  014620  0100               	movlb	0	; () banked
  2425  014622  5180               	movf	CANInitialize@flags& (0+255),w,b
  2426  014624  0B60               	andlw	96
  2427  014626  0100               	movlb	0	; () banked
  2428  014628  6F83               	movwf	(??_CANInitialize+2)& (0+255),b
  2429  01462A  6B84               	clrf	(??_CANInitialize+3)& (0+255),b
  2430  01462C  0100               	movlb	0	; () banked
  2431  01462E  5181               	movf	??_CANInitialize& (0+255),w,b
  2432  014630  0100               	movlb	0	; () banked
  2433  014632  1383               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  2434  014634  0100               	movlb	0	; () banked
  2435  014636  5182               	movf	(??_CANInitialize+1)& (0+255),w,b
  2436  014638  0100               	movlb	0	; () banked
  2437  01463A  1384               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  2438                           
  2439                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2440                           ; Switch size 1, requested type "space"
  2441                           ; Number of cases is 1, Range of values is 0 to 0
  2442                           ; switch strategies available:
  2443                           ; Name         Instructions Cycles
  2444                           ; simple_byte            4     3 (average)
  2445                           ;	Chosen strategy is simple_byte
  2446  01463C  0100               	movlb	0	; () banked
  2447  01463E  5184               	movf	(??_CANInitialize+3)& (0+255),w,b
  2448  014640  0A00               	xorlw	0	; case 0
  2449  014642  A4D8               	btfss	status,2,c
  2450  014644  D7E1               	goto	l367
  2451                           
  2452                           ; BSR set to: 0
  2453                           ; Switch size 1, requested type "space"
  2454                           ; Number of cases is 2, Range of values is 191 to 223
  2455                           ; switch strategies available:
  2456                           ; Name         Instructions Cycles
  2457                           ; simple_byte            7     4 (average)
  2458                           ;	Chosen strategy is simple_byte
  2459  014646  0100               	movlb	0	; () banked
  2460  014648  5183               	movf	(??_CANInitialize+2)& (0+255),w,b
  2461  01464A  0ABF               	xorlw	191	; case 191
  2462  01464C  B4D8               	btfsc	status,2,c
  2463  01464E  D7D7               	goto	l366
  2464  014650  0A60               	xorlw	96	; case 223
  2465  014652  B4D8               	btfsc	status,2,c
  2466  014654  D7D0               	goto	l5795
  2467  014656  D7D8               	goto	l367
  2468  014658                     l5803:
  2469                           
  2470                           ; BSR set to: 0
  2471                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  2472  014658  0E00               	movlw	0
  2473  01465A  0100               	movlb	0	; () banked
  2474  01465C  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2475  01465E  0E00               	movlw	0
  2476  014660  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2477  014662  0E00               	movlw	0
  2478  014664  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2479  014666  0E00               	movlw	0
  2480  014668  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2481  01466A  C086  F072         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2482  01466E  0E00               	movlw	0
  2483  014670  EC00  F080         	call	_CANSetFilter
  2484                           
  2485                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  2486  014674  0E00               	movlw	0
  2487  014676  0100               	movlb	0	; () banked
  2488  014678  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2489  01467A  0E00               	movlw	0
  2490  01467C  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2491  01467E  0E00               	movlw	0
  2492  014680  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2493  014682  0E00               	movlw	0
  2494  014684  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2495  014686  C086  F072         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2496  01468A  0E01               	movlw	1
  2497  01468C  EC00  F080         	call	_CANSetFilter
  2498                           
  2499                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  2500  014690  0E00               	movlw	0
  2501  014692  0100               	movlb	0	; () banked
  2502  014694  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2503  014696  0E00               	movlw	0
  2504  014698  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2505  01469A  0E00               	movlw	0
  2506  01469C  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2507  01469E  0E00               	movlw	0
  2508  0146A0  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2509  0146A2  C087  F072         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2510  0146A6  0E02               	movlw	2
  2511  0146A8  EC00  F080         	call	_CANSetFilter
  2512                           
  2513                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  2514  0146AC  0E00               	movlw	0
  2515  0146AE  0100               	movlb	0	; () banked
  2516  0146B0  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2517  0146B2  0E00               	movlw	0
  2518  0146B4  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2519  0146B6  0E00               	movlw	0
  2520  0146B8  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2521  0146BA  0E00               	movlw	0
  2522  0146BC  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2523  0146BE  C087  F072         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2524  0146C2  0E03               	movlw	3
  2525  0146C4  EC00  F080         	call	_CANSetFilter
  2526                           
  2527                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  2528  0146C8  0E00               	movlw	0
  2529  0146CA  0100               	movlb	0	; () banked
  2530  0146CC  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2531  0146CE  0E00               	movlw	0
  2532  0146D0  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2533  0146D2  0E00               	movlw	0
  2534  0146D4  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2535  0146D6  0E00               	movlw	0
  2536  0146D8  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2537  0146DA  C087  F072         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2538  0146DE  0E04               	movlw	4
  2539  0146E0  EC00  F080         	call	_CANSetFilter
  2540                           
  2541                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  2542  0146E4  0E00               	movlw	0
  2543  0146E6  0100               	movlb	0	; () banked
  2544  0146E8  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2545  0146EA  0E00               	movlw	0
  2546  0146EC  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2547  0146EE  0E00               	movlw	0
  2548  0146F0  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2549  0146F2  0E00               	movlw	0
  2550  0146F4  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2551  0146F6  C087  F072         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2552  0146FA  0E05               	movlw	5
  2553  0146FC  EC00  F080         	call	_CANSetFilter
  2554                           
  2555                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  2556  014700  0E00               	movlw	0
  2557  014702  EC24  F0AF         	call	_CANOperationMode
  2558  014706  0012               	return		;funcret
  2559  014708                     __end_of_CANInitialize:
  2560                           	opt stack 0
  2561                           tblptru	equ	0xFF8
  2562                           tblptrh	equ	0xFF7
  2563                           tblptrl	equ	0xFF6
  2564                           tablat	equ	0xFF5
  2565                           intcon	equ	0xFF2
  2566                           postinc0	equ	0xFEE
  2567                           wreg	equ	0xFE8
  2568                           status	equ	0xFD8
  2569                           
  2570 ;; *************** function _CANSetMask *****************
  2571 ;; Defined at:
  2572 ;;		line 640 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;  numBuffer       1    wreg     enum E16921
  2575 ;;  mask            4   14[BANK0 ] unsigned long 
  2576 ;;  type            1   18[BANK0 ] enum E16887
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;  numBuffer       1   23[BANK0 ] enum E16921
  2579 ;;  tamp            4   24[BANK0 ] unsigned long 
  2580 ;; Return value:  Size  Location     Type
  2581 ;;		None               void
  2582 ;; Registers used:
  2583 ;;		wreg, status,2, status,0
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2589 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2590 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2591 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2592 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2593 ;;Total ram usage:       14 bytes
  2594 ;; Hardware stack levels used:    1
  2595 ;; Hardware stack levels required when called:    3
  2596 ;; This function calls:
  2597 ;;		Nothing
  2598 ;; This function is called by:
  2599 ;;		_CANInitialize
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           	psect	text3
  2604  013CE0                     __ptext3:
  2605                           	opt stack 0
  2606  013CE0                     _CANSetMask:
  2607                           	opt stack 25
  2608                           
  2609                           ;incstack = 0
  2610                           ;CANSetMask@numBuffer stored from wreg
  2611  013CE0  0100               	movlb	0	; () banked
  2612  013CE2  6F77               	movwf	CANSetMask@numBuffer& (0+255),b
  2613                           
  2614                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  2615  013CE4  0100               	movlb	0	; () banked
  2616  013CE6  0577               	decf	CANSetMask@numBuffer& (0+255),w,b
  2617  013CE8  A4D8               	btfss	status,2,c
  2618  013CEA  D056               	goto	l4991
  2619                           
  2620                           ; BSR set to: 0
  2621  013CEC  0100               	movlb	0	; () banked
  2622  013CEE  2972               	incf	CANSetMask@type& (0+255),w,b
  2623  013CF0  A4D8               	btfss	status,2,c
  2624  013CF2  D052               	goto	l4991
  2625                           
  2626                           ; BSR set to: 0
  2627                           ;inc\CANlib.h: 644: {
  2628                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  2629  013CF4  C06E  F073         	movff	CANSetMask@mask,??_CANSetMask
  2630  013CF8  C06F  F074         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2631  013CFC  C070  F075         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2632  013D00  C071  F076         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2633  013D04  0E04               	movlw	4
  2634  013D06  D006               	goto	u5510
  2635  013D08                     u5515:
  2636  013D08  0100               	movlb	0	; () banked
  2637  013D0A  90D8               	bcf	status,0,c
  2638  013D0C  3376               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2639  013D0E  3375               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2640  013D10  3374               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2641  013D12  3373               	rrcf	??_CANSetMask& (0+255),f,b
  2642  013D14                     u5510:
  2643  013D14  2EE8               	decfsz	wreg,f,c
  2644  013D16  D7F8               	goto	u5515
  2645  013D18  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  2646  013D1C  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2647  013D20  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2648  013D24  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2649                           
  2650                           ; BSR set to: 0
  2651                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  2652  013D28  0100               	movlb	0	; () banked
  2653  013D2A  5178               	movf	CANSetMask@tamp& (0+255),w,b
  2654  013D2C  0100               	movlb	0	; () banked
  2655  013D2E  6F78               	movwf	CANSetMask@tamp& (0+255),b
  2656  013D30  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2657  013D32  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2658  013D34  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2659                           
  2660                           ; BSR set to: 0
  2661                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  2662  013D36  C078  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2663                           
  2664                           ; BSR set to: 0
  2665                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  2666  013D3A  0E07               	movlw	7
  2667  013D3C  0100               	movlb	0	; () banked
  2668  013D3E  156E               	andwf	CANSetMask@mask& (0+255),w,b
  2669  013D40  0100               	movlb	0	; () banked
  2670  013D42  6F78               	movwf	CANSetMask@tamp& (0+255),b
  2671  013D44  0E00               	movlw	0
  2672  013D46  0100               	movlb	0	; () banked
  2673  013D48  156F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2674  013D4A  0100               	movlb	0	; () banked
  2675  013D4C  6F79               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2676  013D4E  0E00               	movlw	0
  2677  013D50  0100               	movlb	0	; () banked
  2678  013D52  1570               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2679  013D54  0100               	movlb	0	; () banked
  2680  013D56  6F7A               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2681  013D58  0E00               	movlw	0
  2682  013D5A  0100               	movlb	0	; () banked
  2683  013D5C  1571               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2684  013D5E  0100               	movlb	0	; () banked
  2685  013D60  6F7B               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2686                           
  2687                           ; BSR set to: 0
  2688                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  2689  013D62  C078  F073         	movff	CANSetMask@tamp,??_CANSetMask
  2690  013D66  C079  F074         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2691  013D6A  C07A  F075         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2692  013D6E  C07B  F076         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2693  013D72  0E05               	movlw	5
  2694  013D74                     u5525:
  2695  013D74  90D8               	bcf	status,0,c
  2696  013D76  0100               	movlb	0	; () banked
  2697  013D78  3773               	rlcf	??_CANSetMask& (0+255),f,b
  2698  013D7A  3774               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2699  013D7C  3775               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2700  013D7E  3776               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2701  013D80  2EE8               	decfsz	wreg,f,c
  2702  013D82  D7F8               	goto	u5525
  2703  013D84  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  2704  013D88  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2705  013D8C  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2706  013D90  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2707                           
  2708                           ; BSR set to: 0
  2709                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  2710  013D94  C078  FF19         	movff	CANSetMask@tamp,3865	;volatile
  2711  013D98                     l4991:
  2712                           
  2713                           ; BSR set to: 0
  2714                           ;inc\CANlib.h: 652: }
  2715                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  2716  013D98  0E02               	movlw	2
  2717  013D9A  0100               	movlb	0	; () banked
  2718  013D9C  1977               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2719  013D9E  A4D8               	btfss	status,2,c
  2720  013DA0  D056               	goto	l5007
  2721                           
  2722                           ; BSR set to: 0
  2723  013DA2  0100               	movlb	0	; () banked
  2724  013DA4  2972               	incf	CANSetMask@type& (0+255),w,b
  2725  013DA6  A4D8               	btfss	status,2,c
  2726  013DA8  D052               	goto	l5007
  2727                           
  2728                           ; BSR set to: 0
  2729                           ;inc\CANlib.h: 655: {
  2730                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  2731  013DAA  C06E  F073         	movff	CANSetMask@mask,??_CANSetMask
  2732  013DAE  C06F  F074         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2733  013DB2  C070  F075         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2734  013DB6  C071  F076         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2735  013DBA  0E04               	movlw	4
  2736  013DBC  D006               	goto	u5550
  2737  013DBE                     u5555:
  2738  013DBE  0100               	movlb	0	; () banked
  2739  013DC0  90D8               	bcf	status,0,c
  2740  013DC2  3376               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2741  013DC4  3375               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2742  013DC6  3374               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2743  013DC8  3373               	rrcf	??_CANSetMask& (0+255),f,b
  2744  013DCA                     u5550:
  2745  013DCA  2EE8               	decfsz	wreg,f,c
  2746  013DCC  D7F8               	goto	u5555
  2747  013DCE  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  2748  013DD2  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2749  013DD6  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2750  013DDA  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2751                           
  2752                           ; BSR set to: 0
  2753                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  2754  013DDE  0100               	movlb	0	; () banked
  2755  013DE0  5178               	movf	CANSetMask@tamp& (0+255),w,b
  2756  013DE2  0100               	movlb	0	; () banked
  2757  013DE4  6F78               	movwf	CANSetMask@tamp& (0+255),b
  2758  013DE6  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2759  013DE8  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2760  013DEA  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2761                           
  2762                           ; BSR set to: 0
  2763                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  2764  013DEC  C078  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  2765                           
  2766                           ; BSR set to: 0
  2767                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  2768  013DF0  0E07               	movlw	7
  2769  013DF2  0100               	movlb	0	; () banked
  2770  013DF4  156E               	andwf	CANSetMask@mask& (0+255),w,b
  2771  013DF6  0100               	movlb	0	; () banked
  2772  013DF8  6F78               	movwf	CANSetMask@tamp& (0+255),b
  2773  013DFA  0E00               	movlw	0
  2774  013DFC  0100               	movlb	0	; () banked
  2775  013DFE  156F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2776  013E00  0100               	movlb	0	; () banked
  2777  013E02  6F79               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2778  013E04  0E00               	movlw	0
  2779  013E06  0100               	movlb	0	; () banked
  2780  013E08  1570               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2781  013E0A  0100               	movlb	0	; () banked
  2782  013E0C  6F7A               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2783  013E0E  0E00               	movlw	0
  2784  013E10  0100               	movlb	0	; () banked
  2785  013E12  1571               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2786  013E14  0100               	movlb	0	; () banked
  2787  013E16  6F7B               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2788                           
  2789                           ; BSR set to: 0
  2790                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  2791  013E18  C078  F073         	movff	CANSetMask@tamp,??_CANSetMask
  2792  013E1C  C079  F074         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2793  013E20  C07A  F075         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2794  013E24  C07B  F076         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2795  013E28  0E05               	movlw	5
  2796  013E2A                     u5565:
  2797  013E2A  90D8               	bcf	status,0,c
  2798  013E2C  0100               	movlb	0	; () banked
  2799  013E2E  3773               	rlcf	??_CANSetMask& (0+255),f,b
  2800  013E30  3774               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2801  013E32  3775               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2802  013E34  3776               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2803  013E36  2EE8               	decfsz	wreg,f,c
  2804  013E38  D7F8               	goto	u5565
  2805  013E3A  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  2806  013E3E  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2807  013E42  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2808  013E46  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2809                           
  2810                           ; BSR set to: 0
  2811                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  2812  013E4A  C078  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  2813  013E4E                     l5007:
  2814                           
  2815                           ; BSR set to: 0
  2816                           ;inc\CANlib.h: 663: }
  2817                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  2818  013E4E  0100               	movlb	0	; () banked
  2819  013E50  0577               	decf	CANSetMask@numBuffer& (0+255),w,b
  2820  013E52  A4D8               	btfss	status,2,c
  2821  013E54  D087               	goto	l5039
  2822                           
  2823                           ; BSR set to: 0
  2824  013E56  0EF7               	movlw	247
  2825  013E58  0100               	movlb	0	; () banked
  2826  013E5A  1972               	xorwf	CANSetMask@type& (0+255),w,b
  2827  013E5C  A4D8               	btfss	status,2,c
  2828  013E5E  D082               	goto	l5039
  2829                           
  2830                           ; BSR set to: 0
  2831                           ;inc\CANlib.h: 666: {
  2832                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  2833  013E60  0100               	movlb	0	; () banked
  2834  013E62  516E               	movf	CANSetMask@mask& (0+255),w,b
  2835  013E64  0100               	movlb	0	; () banked
  2836  013E66  6F78               	movwf	CANSetMask@tamp& (0+255),b
  2837  013E68  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2838  013E6A  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2839  013E6C  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2840                           
  2841                           ; BSR set to: 0
  2842                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  2843  013E6E  C078  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  2844                           
  2845                           ; BSR set to: 0
  2846                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  2847  013E72  0E00               	movlw	0
  2848  013E74  0100               	movlb	0	; () banked
  2849  013E76  156E               	andwf	CANSetMask@mask& (0+255),w,b
  2850  013E78  0100               	movlb	0	; () banked
  2851  013E7A  6F78               	movwf	CANSetMask@tamp& (0+255),b
  2852  013E7C  0EFF               	movlw	255
  2853  013E7E  0100               	movlb	0	; () banked
  2854  013E80  156F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2855  013E82  0100               	movlb	0	; () banked
  2856  013E84  6F79               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2857  013E86  0E00               	movlw	0
  2858  013E88  0100               	movlb	0	; () banked
  2859  013E8A  1570               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2860  013E8C  0100               	movlb	0	; () banked
  2861  013E8E  6F7A               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2862  013E90  0E00               	movlw	0
  2863  013E92  0100               	movlb	0	; () banked
  2864  013E94  1571               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2865  013E96  0100               	movlb	0	; () banked
  2866  013E98  6F7B               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2867                           
  2868                           ; BSR set to: 0
  2869                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  2870  013E9A  C078  F073         	movff	CANSetMask@tamp,??_CANSetMask
  2871  013E9E  C079  F074         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2872  013EA2  C07A  F075         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2873  013EA6  C07B  F076         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2874  013EAA  C074  F073         	movff	??_CANSetMask+1,??_CANSetMask
  2875  013EAE  C075  F074         	movff	??_CANSetMask+2,??_CANSetMask+1
  2876  013EB2  C076  F075         	movff	??_CANSetMask+3,??_CANSetMask+2
  2877  013EB6  0100               	movlb	0	; () banked
  2878  013EB8  6B76               	clrf	(??_CANSetMask+3)& (0+255),b
  2879  013EBA  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  2880  013EBE  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2881  013EC2  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2882  013EC6  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2883                           
  2884                           ; BSR set to: 0
  2885                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  2886  013ECA  C078  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  2887                           
  2888                           ; BSR set to: 0
  2889                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  2890  013ECE  0100               	movlb	0	; () banked
  2891  013ED0  A170               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  2892  013ED2  D003               	goto	l440
  2893                           
  2894                           ; BSR set to: 0
  2895                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  2896  013ED4  010F               	movlb	15	; () banked
  2897  013ED6  8119               	bsf	25,0,b	;volatile
  2898  013ED8  D002               	goto	l441
  2899  013EDA                     l440:
  2900                           
  2901                           ; BSR set to: 0
  2902                           ;inc\CANlib.h: 676: else
  2903                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  2904  013EDA  010F               	movlb	15	; () banked
  2905  013EDC  9119               	bcf	25,0,b	;volatile
  2906  013EDE                     l441:
  2907                           
  2908                           ; BSR set to: 15
  2909                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  2910  013EDE  0100               	movlb	0	; () banked
  2911  013EE0  A370               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  2912  013EE2  D003               	goto	l442
  2913                           
  2914                           ; BSR set to: 0
  2915                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  2916  013EE4  010F               	movlb	15	; () banked
  2917  013EE6  8319               	bsf	25,1,b	;volatile
  2918  013EE8  D002               	goto	l443
  2919  013EEA                     l442:
  2920                           
  2921                           ; BSR set to: 0
  2922                           ;inc\CANlib.h: 681: else
  2923                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  2924  013EEA  010F               	movlb	15	; () banked
  2925  013EEC  9319               	bcf	25,1,b	;volatile
  2926  013EEE                     l443:
  2927                           
  2928                           ; BSR set to: 15
  2929                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  2930  013EEE  0100               	movlb	0	; () banked
  2931  013EF0  A570               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  2932  013EF2  D003               	goto	l444
  2933                           
  2934                           ; BSR set to: 0
  2935                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  2936  013EF4  010F               	movlb	15	; () banked
  2937  013EF6  8B19               	bsf	25,5,b	;volatile
  2938  013EF8  D002               	goto	l445
  2939  013EFA                     l444:
  2940                           
  2941                           ; BSR set to: 0
  2942                           ;inc\CANlib.h: 686: else
  2943                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  2944  013EFA  010F               	movlb	15	; () banked
  2945  013EFC  9B19               	bcf	25,5,b	;volatile
  2946  013EFE                     l445:
  2947                           
  2948                           ; BSR set to: 15
  2949                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  2950  013EFE  0100               	movlb	0	; () banked
  2951  013F00  A770               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  2952  013F02  D003               	goto	l446
  2953                           
  2954                           ; BSR set to: 0
  2955                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  2956  013F04  010F               	movlb	15	; () banked
  2957  013F06  8D19               	bsf	25,6,b	;volatile
  2958  013F08  D002               	goto	l447
  2959  013F0A                     l446:
  2960                           
  2961                           ; BSR set to: 0
  2962                           ;inc\CANlib.h: 691: else
  2963                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  2964  013F0A  010F               	movlb	15	; () banked
  2965  013F0C  9D19               	bcf	25,6,b	;volatile
  2966  013F0E                     l447:
  2967                           
  2968                           ; BSR set to: 15
  2969                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  2970  013F0E  0100               	movlb	0	; () banked
  2971  013F10  A970               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  2972  013F12  D003               	goto	l448
  2973                           
  2974                           ; BSR set to: 0
  2975                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  2976  013F14  010F               	movlb	15	; () banked
  2977  013F16  8F19               	bsf	25,7,b	;volatile
  2978  013F18  D002               	goto	l5033
  2979  013F1A                     l448:
  2980                           
  2981                           ; BSR set to: 0
  2982                           ;inc\CANlib.h: 696: else
  2983                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  2984  013F1A  010F               	movlb	15	; () banked
  2985  013F1C  9F19               	bcf	25,7,b	;volatile
  2986  013F1E                     l5033:
  2987                           
  2988                           ; BSR set to: 15
  2989                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  2990  013F1E  C06E  F073         	movff	CANSetMask@mask,??_CANSetMask
  2991  013F22  C06F  F074         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2992  013F26  C070  F075         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2993  013F2A  C071  F076         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2994  013F2E  0E16               	movlw	22
  2995  013F30  D006               	goto	u5640
  2996  013F32                     u5645:
  2997  013F32  0100               	movlb	0	; () banked
  2998  013F34  90D8               	bcf	status,0,c
  2999  013F36  3376               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3000  013F38  3375               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3001  013F3A  3374               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3002  013F3C  3373               	rrcf	??_CANSetMask& (0+255),f,b
  3003  013F3E                     u5640:
  3004  013F3E  2EE8               	decfsz	wreg,f,c
  3005  013F40  D7F8               	goto	u5645
  3006  013F42  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  3007  013F46  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3008  013F4A  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3009  013F4E  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3010                           
  3011                           ; BSR set to: 0
  3012                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  3013  013F52  0100               	movlb	0	; () banked
  3014  013F54  5178               	movf	CANSetMask@tamp& (0+255),w,b
  3015  013F56  0100               	movlb	0	; () banked
  3016  013F58  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3017  013F5A  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3018  013F5C  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3019  013F5E  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  3023  013F60  C078  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3024  013F64                     l5039:
  3025                           
  3026                           ; BSR set to: 0
  3027                           ;inc\CANlib.h: 702: }
  3028                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  3029  013F64  0E02               	movlw	2
  3030  013F66  0100               	movlb	0	; () banked
  3031  013F68  1977               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3032  013F6A  A4D8               	btfss	status,2,c
  3033  013F6C  0012               	return	
  3034                           
  3035                           ; BSR set to: 0
  3036  013F6E  0EF7               	movlw	247
  3037  013F70  0100               	movlb	0	; () banked
  3038  013F72  1972               	xorwf	CANSetMask@type& (0+255),w,b
  3039  013F74  A4D8               	btfss	status,2,c
  3040  013F76  0012               	return	
  3041                           
  3042                           ; BSR set to: 0
  3043                           ;inc\CANlib.h: 705: {
  3044                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  3045  013F78  0100               	movlb	0	; () banked
  3046  013F7A  516E               	movf	CANSetMask@mask& (0+255),w,b
  3047  013F7C  0100               	movlb	0	; () banked
  3048  013F7E  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3049  013F80  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3050  013F82  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3051  013F84  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3052                           
  3053                           ; BSR set to: 0
  3054                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  3055  013F86  C078  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  3056                           
  3057                           ; BSR set to: 0
  3058                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  3059  013F8A  0E00               	movlw	0
  3060  013F8C  0100               	movlb	0	; () banked
  3061  013F8E  156E               	andwf	CANSetMask@mask& (0+255),w,b
  3062  013F90  0100               	movlb	0	; () banked
  3063  013F92  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3064  013F94  0EFF               	movlw	255
  3065  013F96  0100               	movlb	0	; () banked
  3066  013F98  156F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3067  013F9A  0100               	movlb	0	; () banked
  3068  013F9C  6F79               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3069  013F9E  0E00               	movlw	0
  3070  013FA0  0100               	movlb	0	; () banked
  3071  013FA2  1570               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3072  013FA4  0100               	movlb	0	; () banked
  3073  013FA6  6F7A               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3074  013FA8  0E00               	movlw	0
  3075  013FAA  0100               	movlb	0	; () banked
  3076  013FAC  1571               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3077  013FAE  0100               	movlb	0	; () banked
  3078  013FB0  6F7B               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3079                           
  3080                           ; BSR set to: 0
  3081                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  3082  013FB2  C078  F073         	movff	CANSetMask@tamp,??_CANSetMask
  3083  013FB6  C079  F074         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3084  013FBA  C07A  F075         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3085  013FBE  C07B  F076         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3086  013FC2  C074  F073         	movff	??_CANSetMask+1,??_CANSetMask
  3087  013FC6  C075  F074         	movff	??_CANSetMask+2,??_CANSetMask+1
  3088  013FCA  C076  F075         	movff	??_CANSetMask+3,??_CANSetMask+2
  3089  013FCE  0100               	movlb	0	; () banked
  3090  013FD0  6B76               	clrf	(??_CANSetMask+3)& (0+255),b
  3091  013FD2  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  3092  013FD6  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3093  013FDA  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3094  013FDE  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3095                           
  3096                           ; BSR set to: 0
  3097                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  3098  013FE2  C078  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  3099                           
  3100                           ; BSR set to: 0
  3101                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  3102  013FE6  0100               	movlb	0	; () banked
  3103  013FE8  A170               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3104  013FEA  D003               	goto	l451
  3105                           
  3106                           ; BSR set to: 0
  3107                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  3108  013FEC  010F               	movlb	15	; () banked
  3109  013FEE  811D               	bsf	29,0,b	;volatile
  3110  013FF0  D002               	goto	l452
  3111  013FF2                     l451:
  3112                           
  3113                           ; BSR set to: 0
  3114                           ;inc\CANlib.h: 715: else
  3115                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  3116  013FF2  010F               	movlb	15	; () banked
  3117  013FF4  911D               	bcf	29,0,b	;volatile
  3118  013FF6                     l452:
  3119                           
  3120                           ; BSR set to: 15
  3121                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  3122  013FF6  0100               	movlb	0	; () banked
  3123  013FF8  A370               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3124  013FFA  D003               	goto	l453
  3125                           
  3126                           ; BSR set to: 0
  3127                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  3128  013FFC  010F               	movlb	15	; () banked
  3129  013FFE  831D               	bsf	29,1,b	;volatile
  3130  014000  D002               	goto	l454
  3131  014002                     l453:
  3132                           
  3133                           ; BSR set to: 0
  3134                           ;inc\CANlib.h: 720: else
  3135                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  3136  014002  010F               	movlb	15	; () banked
  3137  014004  931D               	bcf	29,1,b	;volatile
  3138  014006                     l454:
  3139                           
  3140                           ; BSR set to: 15
  3141                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  3142  014006  0100               	movlb	0	; () banked
  3143  014008  A570               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3144  01400A  D003               	goto	l455
  3145                           
  3146                           ; BSR set to: 0
  3147                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  3148  01400C  010F               	movlb	15	; () banked
  3149  01400E  8B1D               	bsf	29,5,b	;volatile
  3150  014010  D002               	goto	l456
  3151  014012                     l455:
  3152                           
  3153                           ; BSR set to: 0
  3154                           ;inc\CANlib.h: 725: else
  3155                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  3156  014012  010F               	movlb	15	; () banked
  3157  014014  9B1D               	bcf	29,5,b	;volatile
  3158  014016                     l456:
  3159                           
  3160                           ; BSR set to: 15
  3161                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  3162  014016  0100               	movlb	0	; () banked
  3163  014018  A770               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3164  01401A  D003               	goto	l457
  3165                           
  3166                           ; BSR set to: 0
  3167                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  3168  01401C  010F               	movlb	15	; () banked
  3169  01401E  8D1D               	bsf	29,6,b	;volatile
  3170  014020  D002               	goto	l458
  3171  014022                     l457:
  3172                           
  3173                           ; BSR set to: 0
  3174                           ;inc\CANlib.h: 730: else
  3175                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  3176  014022  010F               	movlb	15	; () banked
  3177  014024  9D1D               	bcf	29,6,b	;volatile
  3178  014026                     l458:
  3179                           
  3180                           ; BSR set to: 15
  3181                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  3182  014026  0100               	movlb	0	; () banked
  3183  014028  A970               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3184  01402A  D003               	goto	l459
  3185                           
  3186                           ; BSR set to: 0
  3187                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  3188  01402C  010F               	movlb	15	; () banked
  3189  01402E  8F1D               	bsf	29,7,b	;volatile
  3190  014030  D002               	goto	l5065
  3191  014032                     l459:
  3192                           
  3193                           ; BSR set to: 0
  3194                           ;inc\CANlib.h: 735: else
  3195                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  3196  014032  010F               	movlb	15	; () banked
  3197  014034  9F1D               	bcf	29,7,b	;volatile
  3198  014036                     l5065:
  3199                           
  3200                           ; BSR set to: 15
  3201                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  3202  014036  C06E  F073         	movff	CANSetMask@mask,??_CANSetMask
  3203  01403A  C06F  F074         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3204  01403E  C070  F075         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3205  014042  C071  F076         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3206  014046  0E16               	movlw	22
  3207  014048  D006               	goto	u5720
  3208  01404A                     u5725:
  3209  01404A  0100               	movlb	0	; () banked
  3210  01404C  90D8               	bcf	status,0,c
  3211  01404E  3376               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3212  014050  3375               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3213  014052  3374               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3214  014054  3373               	rrcf	??_CANSetMask& (0+255),f,b
  3215  014056                     u5720:
  3216  014056  2EE8               	decfsz	wreg,f,c
  3217  014058  D7F8               	goto	u5725
  3218  01405A  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  3219  01405E  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3220  014062  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3221  014066  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3222                           
  3223                           ; BSR set to: 0
  3224                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  3225  01406A  0100               	movlb	0	; () banked
  3226  01406C  5178               	movf	CANSetMask@tamp& (0+255),w,b
  3227  01406E  0100               	movlb	0	; () banked
  3228  014070  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3229  014072  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3230  014074  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3231  014076  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3232                           
  3233                           ; BSR set to: 0
  3234                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  3235  014078  C078  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3236  01407C  0012               	return	
  3237  01407E                     __end_of_CANSetMask:
  3238                           	opt stack 0
  3239                           tblptru	equ	0xFF8
  3240                           tblptrh	equ	0xFF7
  3241                           tblptrl	equ	0xFF6
  3242                           tablat	equ	0xFF5
  3243                           intcon	equ	0xFF2
  3244                           postinc0	equ	0xFEE
  3245                           wreg	equ	0xFE8
  3246                           status	equ	0xFD8
  3247                           
  3248 ;; *************** function _CANSetFilter *****************
  3249 ;; Defined at:
  3250 ;;		line 748 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;  numBuffer       1    wreg     enum E16924
  3253 ;;  filter          4   14[BANK0 ] unsigned long 
  3254 ;;  type            1   18[BANK0 ] enum E16887
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;  numBuffer       1   23[BANK0 ] enum E16924
  3257 ;;  tamp            4   24[BANK0 ] unsigned long 
  3258 ;; Return value:  Size  Location     Type
  3259 ;;		None               void
  3260 ;; Registers used:
  3261 ;;		wreg, status,2, status,0
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3267 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3268 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3269 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3270 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3271 ;;Total ram usage:       14 bytes
  3272 ;; Hardware stack levels used:    1
  3273 ;; Hardware stack levels required when called:    3
  3274 ;; This function calls:
  3275 ;;		Nothing
  3276 ;; This function is called by:
  3277 ;;		_CANInitialize
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           	psect	text4
  3282  010000                     __ptext4:
  3283                           	opt stack 0
  3284  010000                     _CANSetFilter:
  3285                           	opt stack 25
  3286                           
  3287                           ; BSR set to: 0
  3288                           ;incstack = 0
  3289                           ;CANSetFilter@numBuffer stored from wreg
  3290  010000  0100               	movlb	0	; () banked
  3291  010002  6F77               	movwf	CANSetFilter@numBuffer& (0+255),b
  3292                           
  3293                           ;inc\CANlib.h: 750: unsigned long tamp;
  3294                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  3295  010004  0100               	movlb	0	; () banked
  3296  010006  5177               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3297  010008  0100               	movlb	0	; () banked
  3298  01000A  A4D8               	btfss	status,2,c
  3299  01000C  D058               	goto	l5089
  3300                           
  3301                           ; BSR set to: 0
  3302  01000E  0100               	movlb	0	; () banked
  3303  010010  2972               	incf	CANSetFilter@type& (0+255),w,b
  3304  010012  A4D8               	btfss	status,2,c
  3305  010014  D054               	goto	l5089
  3306                           
  3307                           ; BSR set to: 0
  3308                           ;inc\CANlib.h: 753: {
  3309                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  3310  010016  010F               	movlb	15	; () banked
  3311  010018  9701               	bcf	1,3,b	;volatile
  3312                           
  3313                           ; BSR set to: 15
  3314                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  3315  01001A  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  3316  01001E  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3317  010022  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3318  010026  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3319  01002A  0E04               	movlw	4
  3320  01002C  D006               	goto	u5750
  3321  01002E                     u5755:
  3322  01002E  0100               	movlb	0	; () banked
  3323  010030  90D8               	bcf	status,0,c
  3324  010032  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3325  010034  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3326  010036  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3327  010038  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  3328  01003A                     u5750:
  3329  01003A  2EE8               	decfsz	wreg,f,c
  3330  01003C  D7F8               	goto	u5755
  3331  01003E  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3332  010042  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3333  010046  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3334  01004A  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3335                           
  3336                           ; BSR set to: 0
  3337                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  3338  01004E  0100               	movlb	0	; () banked
  3339  010050  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  3340  010052  0100               	movlb	0	; () banked
  3341  010054  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3342  010056  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3343  010058  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3344  01005A  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  3348  01005C  C078  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3349                           
  3350                           ; BSR set to: 0
  3351                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  3352  010060  0E07               	movlw	7
  3353  010062  0100               	movlb	0	; () banked
  3354  010064  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3355  010066  0100               	movlb	0	; () banked
  3356  010068  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3357  01006A  0E00               	movlw	0
  3358  01006C  0100               	movlb	0	; () banked
  3359  01006E  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3360  010070  0100               	movlb	0	; () banked
  3361  010072  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3362  010074  0E00               	movlw	0
  3363  010076  0100               	movlb	0	; () banked
  3364  010078  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3365  01007A  0100               	movlb	0	; () banked
  3366  01007C  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3367  01007E  0E00               	movlw	0
  3368  010080  0100               	movlb	0	; () banked
  3369  010082  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3370  010084  0100               	movlb	0	; () banked
  3371  010086  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3372                           
  3373                           ; BSR set to: 0
  3374                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  3375  010088  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  3376  01008C  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3377  010090  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3378  010094  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3379  010098  0E05               	movlw	5
  3380  01009A                     u5765:
  3381  01009A  90D8               	bcf	status,0,c
  3382  01009C  0100               	movlb	0	; () banked
  3383  01009E  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  3384  0100A0  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3385  0100A2  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3386  0100A4  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3387  0100A6  2EE8               	decfsz	wreg,f,c
  3388  0100A8  D7F8               	goto	u5765
  3389  0100AA  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3390  0100AE  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3391  0100B2  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3392  0100B6  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  3396  0100BA  C078  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  3397  0100BE                     l5089:
  3398                           
  3399                           ; BSR set to: 0
  3400                           ;inc\CANlib.h: 763: }
  3401                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  3402  0100BE  0100               	movlb	0	; () banked
  3403  0100C0  0577               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3404  0100C2  A4D8               	btfss	status,2,c
  3405  0100C4  D058               	goto	l5107
  3406                           
  3407                           ; BSR set to: 0
  3408  0100C6  0100               	movlb	0	; () banked
  3409  0100C8  2972               	incf	CANSetFilter@type& (0+255),w,b
  3410  0100CA  A4D8               	btfss	status,2,c
  3411  0100CC  D054               	goto	l5107
  3412                           
  3413                           ; BSR set to: 0
  3414                           ;inc\CANlib.h: 766: {
  3415                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  3416  0100CE  010F               	movlb	15	; () banked
  3417  0100D0  9705               	bcf	5,3,b	;volatile
  3418                           
  3419                           ; BSR set to: 15
  3420                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  3421  0100D2  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  3422  0100D6  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3423  0100DA  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3424  0100DE  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3425  0100E2  0E04               	movlw	4
  3426  0100E4  D006               	goto	u5790
  3427  0100E6                     u5795:
  3428  0100E6  0100               	movlb	0	; () banked
  3429  0100E8  90D8               	bcf	status,0,c
  3430  0100EA  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3431  0100EC  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3432  0100EE  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3433  0100F0  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  3434  0100F2                     u5790:
  3435  0100F2  2EE8               	decfsz	wreg,f,c
  3436  0100F4  D7F8               	goto	u5795
  3437  0100F6  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3438  0100FA  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3439  0100FE  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3440  010102  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3441                           
  3442                           ; BSR set to: 0
  3443                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  3444  010106  0100               	movlb	0	; () banked
  3445  010108  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  3446  01010A  0100               	movlb	0	; () banked
  3447  01010C  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3448  01010E  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3449  010110  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3450  010112  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  3454  010114  C078  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  3455                           
  3456                           ; BSR set to: 0
  3457                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  3458  010118  0E07               	movlw	7
  3459  01011A  0100               	movlb	0	; () banked
  3460  01011C  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3461  01011E  0100               	movlb	0	; () banked
  3462  010120  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3463  010122  0E00               	movlw	0
  3464  010124  0100               	movlb	0	; () banked
  3465  010126  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3466  010128  0100               	movlb	0	; () banked
  3467  01012A  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3468  01012C  0E00               	movlw	0
  3469  01012E  0100               	movlb	0	; () banked
  3470  010130  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3471  010132  0100               	movlb	0	; () banked
  3472  010134  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3473  010136  0E00               	movlw	0
  3474  010138  0100               	movlb	0	; () banked
  3475  01013A  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3476  01013C  0100               	movlb	0	; () banked
  3477  01013E  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  3481  010140  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  3482  010144  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3483  010148  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3484  01014C  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3485  010150  0E05               	movlw	5
  3486  010152                     u5805:
  3487  010152  90D8               	bcf	status,0,c
  3488  010154  0100               	movlb	0	; () banked
  3489  010156  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  3490  010158  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3491  01015A  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3492  01015C  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3493  01015E  2EE8               	decfsz	wreg,f,c
  3494  010160  D7F8               	goto	u5805
  3495  010162  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3496  010166  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3497  01016A  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3498  01016E  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3499                           
  3500                           ; BSR set to: 0
  3501                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  3502  010172  C078  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  3503  010176                     l5107:
  3504                           
  3505                           ; BSR set to: 0
  3506                           ;inc\CANlib.h: 776: }
  3507                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  3508  010176  0E02               	movlw	2
  3509  010178  0100               	movlb	0	; () banked
  3510  01017A  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3511  01017C  A4D8               	btfss	status,2,c
  3512  01017E  D058               	goto	l5125
  3513                           
  3514                           ; BSR set to: 0
  3515  010180  0100               	movlb	0	; () banked
  3516  010182  2972               	incf	CANSetFilter@type& (0+255),w,b
  3517  010184  A4D8               	btfss	status,2,c
  3518  010186  D054               	goto	l5125
  3519                           
  3520                           ; BSR set to: 0
  3521                           ;inc\CANlib.h: 779: {
  3522                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  3523  010188  010F               	movlb	15	; () banked
  3524  01018A  9709               	bcf	9,3,b	;volatile
  3525                           
  3526                           ; BSR set to: 15
  3527                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  3528  01018C  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  3529  010190  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3530  010194  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3531  010198  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3532  01019C  0E04               	movlw	4
  3533  01019E  D006               	goto	u5830
  3534  0101A0                     u5835:
  3535  0101A0  0100               	movlb	0	; () banked
  3536  0101A2  90D8               	bcf	status,0,c
  3537  0101A4  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3538  0101A6  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3539  0101A8  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3540  0101AA  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  3541  0101AC                     u5830:
  3542  0101AC  2EE8               	decfsz	wreg,f,c
  3543  0101AE  D7F8               	goto	u5835
  3544  0101B0  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3545  0101B4  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3546  0101B8  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3547  0101BC  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  3551  0101C0  0100               	movlb	0	; () banked
  3552  0101C2  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  3553  0101C4  0100               	movlb	0	; () banked
  3554  0101C6  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3555  0101C8  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3556  0101CA  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3557  0101CC  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3558                           
  3559                           ; BSR set to: 0
  3560                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  3561  0101CE  C078  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  3562                           
  3563                           ; BSR set to: 0
  3564                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  3565  0101D2  0E07               	movlw	7
  3566  0101D4  0100               	movlb	0	; () banked
  3567  0101D6  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3568  0101D8  0100               	movlb	0	; () banked
  3569  0101DA  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3570  0101DC  0E00               	movlw	0
  3571  0101DE  0100               	movlb	0	; () banked
  3572  0101E0  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3573  0101E2  0100               	movlb	0	; () banked
  3574  0101E4  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3575  0101E6  0E00               	movlw	0
  3576  0101E8  0100               	movlb	0	; () banked
  3577  0101EA  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3578  0101EC  0100               	movlb	0	; () banked
  3579  0101EE  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3580  0101F0  0E00               	movlw	0
  3581  0101F2  0100               	movlb	0	; () banked
  3582  0101F4  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3583  0101F6  0100               	movlb	0	; () banked
  3584  0101F8  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3585                           
  3586                           ; BSR set to: 0
  3587                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  3588  0101FA  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  3589  0101FE  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3590  010202  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3591  010206  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3592  01020A  0E05               	movlw	5
  3593  01020C                     u5845:
  3594  01020C  90D8               	bcf	status,0,c
  3595  01020E  0100               	movlb	0	; () banked
  3596  010210  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  3597  010212  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3598  010214  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3599  010216  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3600  010218  2EE8               	decfsz	wreg,f,c
  3601  01021A  D7F8               	goto	u5845
  3602  01021C  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3603  010220  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3604  010224  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3605  010228  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3606                           
  3607                           ; BSR set to: 0
  3608                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  3609  01022C  C078  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  3610  010230                     l5125:
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;inc\CANlib.h: 789: }
  3614                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  3615  010230  0E03               	movlw	3
  3616  010232  0100               	movlb	0	; () banked
  3617  010234  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3618  010236  A4D8               	btfss	status,2,c
  3619  010238  D058               	goto	l5143
  3620                           
  3621                           ; BSR set to: 0
  3622  01023A  0100               	movlb	0	; () banked
  3623  01023C  2972               	incf	CANSetFilter@type& (0+255),w,b
  3624  01023E  A4D8               	btfss	status,2,c
  3625  010240  D054               	goto	l5143
  3626                           
  3627                           ; BSR set to: 0
  3628                           ;inc\CANlib.h: 792: {
  3629                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  3630  010242  010F               	movlb	15	; () banked
  3631  010244  970D               	bcf	13,3,b	;volatile
  3632                           
  3633                           ; BSR set to: 15
  3634                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  3635  010246  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  3636  01024A  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3637  01024E  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3638  010252  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3639  010256  0E04               	movlw	4
  3640  010258  D006               	goto	u5870
  3641  01025A                     u5875:
  3642  01025A  0100               	movlb	0	; () banked
  3643  01025C  90D8               	bcf	status,0,c
  3644  01025E  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3645  010260  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3646  010262  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3647  010264  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  3648  010266                     u5870:
  3649  010266  2EE8               	decfsz	wreg,f,c
  3650  010268  D7F8               	goto	u5875
  3651  01026A  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3652  01026E  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3653  010272  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3654  010276  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3655                           
  3656                           ; BSR set to: 0
  3657                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  3658  01027A  0100               	movlb	0	; () banked
  3659  01027C  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  3660  01027E  0100               	movlb	0	; () banked
  3661  010280  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3662  010282  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3663  010284  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3664  010286  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3665                           
  3666                           ; BSR set to: 0
  3667                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  3668  010288  C078  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  3669                           
  3670                           ; BSR set to: 0
  3671                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  3672  01028C  0E07               	movlw	7
  3673  01028E  0100               	movlb	0	; () banked
  3674  010290  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3675  010292  0100               	movlb	0	; () banked
  3676  010294  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3677  010296  0E00               	movlw	0
  3678  010298  0100               	movlb	0	; () banked
  3679  01029A  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3680  01029C  0100               	movlb	0	; () banked
  3681  01029E  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3682  0102A0  0E00               	movlw	0
  3683  0102A2  0100               	movlb	0	; () banked
  3684  0102A4  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3685  0102A6  0100               	movlb	0	; () banked
  3686  0102A8  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3687  0102AA  0E00               	movlw	0
  3688  0102AC  0100               	movlb	0	; () banked
  3689  0102AE  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3690  0102B0  0100               	movlb	0	; () banked
  3691  0102B2  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3692                           
  3693                           ; BSR set to: 0
  3694                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  3695  0102B4  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  3696  0102B8  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3697  0102BC  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3698  0102C0  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3699  0102C4  0E05               	movlw	5
  3700  0102C6                     u5885:
  3701  0102C6  90D8               	bcf	status,0,c
  3702  0102C8  0100               	movlb	0	; () banked
  3703  0102CA  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  3704  0102CC  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3705  0102CE  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3706  0102D0  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3707  0102D2  2EE8               	decfsz	wreg,f,c
  3708  0102D4  D7F8               	goto	u5885
  3709  0102D6  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3710  0102DA  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3711  0102DE  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3712  0102E2  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3713                           
  3714                           ; BSR set to: 0
  3715                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  3716  0102E6  C078  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  3717  0102EA                     l5143:
  3718                           
  3719                           ; BSR set to: 0
  3720                           ;inc\CANlib.h: 802: }
  3721                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  3722  0102EA  0E04               	movlw	4
  3723  0102EC  0100               	movlb	0	; () banked
  3724  0102EE  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3725  0102F0  A4D8               	btfss	status,2,c
  3726  0102F2  D058               	goto	l5161
  3727                           
  3728                           ; BSR set to: 0
  3729  0102F4  0100               	movlb	0	; () banked
  3730  0102F6  2972               	incf	CANSetFilter@type& (0+255),w,b
  3731  0102F8  A4D8               	btfss	status,2,c
  3732  0102FA  D054               	goto	l5161
  3733                           
  3734                           ; BSR set to: 0
  3735                           ;inc\CANlib.h: 805: {
  3736                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  3737  0102FC  010F               	movlb	15	; () banked
  3738  0102FE  9711               	bcf	17,3,b	;volatile
  3739                           
  3740                           ; BSR set to: 15
  3741                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  3742  010300  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  3743  010304  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3744  010308  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3745  01030C  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3746  010310  0E04               	movlw	4
  3747  010312  D006               	goto	u5910
  3748  010314                     u5915:
  3749  010314  0100               	movlb	0	; () banked
  3750  010316  90D8               	bcf	status,0,c
  3751  010318  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3752  01031A  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3753  01031C  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3754  01031E  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  3755  010320                     u5910:
  3756  010320  2EE8               	decfsz	wreg,f,c
  3757  010322  D7F8               	goto	u5915
  3758  010324  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3759  010328  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3760  01032C  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3761  010330  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3762                           
  3763                           ; BSR set to: 0
  3764                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  3765  010334  0100               	movlb	0	; () banked
  3766  010336  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  3767  010338  0100               	movlb	0	; () banked
  3768  01033A  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3769  01033C  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3770  01033E  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3771  010340  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3772                           
  3773                           ; BSR set to: 0
  3774                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  3775  010342  C078  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  3776                           
  3777                           ; BSR set to: 0
  3778                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  3779  010346  0E07               	movlw	7
  3780  010348  0100               	movlb	0	; () banked
  3781  01034A  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3782  01034C  0100               	movlb	0	; () banked
  3783  01034E  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3784  010350  0E00               	movlw	0
  3785  010352  0100               	movlb	0	; () banked
  3786  010354  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3787  010356  0100               	movlb	0	; () banked
  3788  010358  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3789  01035A  0E00               	movlw	0
  3790  01035C  0100               	movlb	0	; () banked
  3791  01035E  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3792  010360  0100               	movlb	0	; () banked
  3793  010362  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3794  010364  0E00               	movlw	0
  3795  010366  0100               	movlb	0	; () banked
  3796  010368  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3797  01036A  0100               	movlb	0	; () banked
  3798  01036C  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3799                           
  3800                           ; BSR set to: 0
  3801                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  3802  01036E  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  3803  010372  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3804  010376  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3805  01037A  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3806  01037E  0E05               	movlw	5
  3807  010380                     u5925:
  3808  010380  90D8               	bcf	status,0,c
  3809  010382  0100               	movlb	0	; () banked
  3810  010384  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  3811  010386  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3812  010388  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3813  01038A  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3814  01038C  2EE8               	decfsz	wreg,f,c
  3815  01038E  D7F8               	goto	u5925
  3816  010390  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3817  010394  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3818  010398  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3819  01039C  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3820                           
  3821                           ; BSR set to: 0
  3822                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  3823  0103A0  C078  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  3824  0103A4                     l5161:
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;inc\CANlib.h: 815: }
  3828                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  3829  0103A4  0E05               	movlw	5
  3830  0103A6  0100               	movlb	0	; () banked
  3831  0103A8  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3832  0103AA  A4D8               	btfss	status,2,c
  3833  0103AC  D058               	goto	l5179
  3834                           
  3835                           ; BSR set to: 0
  3836  0103AE  0100               	movlb	0	; () banked
  3837  0103B0  2972               	incf	CANSetFilter@type& (0+255),w,b
  3838  0103B2  A4D8               	btfss	status,2,c
  3839  0103B4  D054               	goto	l5179
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;inc\CANlib.h: 818: {
  3843                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  3844  0103B6  010F               	movlb	15	; () banked
  3845  0103B8  9715               	bcf	21,3,b	;volatile
  3846                           
  3847                           ; BSR set to: 15
  3848                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  3849  0103BA  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  3850  0103BE  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3851  0103C2  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3852  0103C6  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3853  0103CA  0E04               	movlw	4
  3854  0103CC  D006               	goto	u5950
  3855  0103CE                     u5955:
  3856  0103CE  0100               	movlb	0	; () banked
  3857  0103D0  90D8               	bcf	status,0,c
  3858  0103D2  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3859  0103D4  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3860  0103D6  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3861  0103D8  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  3862  0103DA                     u5950:
  3863  0103DA  2EE8               	decfsz	wreg,f,c
  3864  0103DC  D7F8               	goto	u5955
  3865  0103DE  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3866  0103E2  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3867  0103E6  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3868  0103EA  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3869                           
  3870                           ; BSR set to: 0
  3871                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  3872  0103EE  0100               	movlb	0	; () banked
  3873  0103F0  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  3874  0103F2  0100               	movlb	0	; () banked
  3875  0103F4  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3876  0103F6  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3877  0103F8  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3878  0103FA  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3879                           
  3880                           ; BSR set to: 0
  3881                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  3882  0103FC  C078  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  3883                           
  3884                           ; BSR set to: 0
  3885                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  3886  010400  0E07               	movlw	7
  3887  010402  0100               	movlb	0	; () banked
  3888  010404  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3889  010406  0100               	movlb	0	; () banked
  3890  010408  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3891  01040A  0E00               	movlw	0
  3892  01040C  0100               	movlb	0	; () banked
  3893  01040E  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3894  010410  0100               	movlb	0	; () banked
  3895  010412  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3896  010414  0E00               	movlw	0
  3897  010416  0100               	movlb	0	; () banked
  3898  010418  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3899  01041A  0100               	movlb	0	; () banked
  3900  01041C  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3901  01041E  0E00               	movlw	0
  3902  010420  0100               	movlb	0	; () banked
  3903  010422  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3904  010424  0100               	movlb	0	; () banked
  3905  010426  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3906                           
  3907                           ; BSR set to: 0
  3908                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  3909  010428  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  3910  01042C  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3911  010430  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3912  010434  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3913  010438  0E05               	movlw	5
  3914  01043A                     u5965:
  3915  01043A  90D8               	bcf	status,0,c
  3916  01043C  0100               	movlb	0	; () banked
  3917  01043E  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  3918  010440  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3919  010442  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3920  010444  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3921  010446  2EE8               	decfsz	wreg,f,c
  3922  010448  D7F8               	goto	u5965
  3923  01044A  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3924  01044E  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3925  010452  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3926  010456  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3927                           
  3928                           ; BSR set to: 0
  3929                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  3930  01045A  C078  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  3931  01045E                     l5179:
  3932                           
  3933                           ; BSR set to: 0
  3934                           ;inc\CANlib.h: 828: }
  3935                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  3936  01045E  0100               	movlb	0	; () banked
  3937  010460  5177               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3938  010462  0100               	movlb	0	; () banked
  3939  010464  A4D8               	btfss	status,2,c
  3940  010466  D089               	goto	l5213
  3941                           
  3942                           ; BSR set to: 0
  3943  010468  0EF7               	movlw	247
  3944  01046A  0100               	movlb	0	; () banked
  3945  01046C  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  3946  01046E  A4D8               	btfss	status,2,c
  3947  010470  D084               	goto	l5213
  3948                           
  3949                           ; BSR set to: 0
  3950                           ;inc\CANlib.h: 832: {
  3951                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  3952  010472  010F               	movlb	15	; () banked
  3953  010474  8701               	bsf	1,3,b	;volatile
  3954                           
  3955                           ; BSR set to: 15
  3956                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  3957  010476  0100               	movlb	0	; () banked
  3958  010478  516E               	movf	CANSetFilter@filter& (0+255),w,b
  3959  01047A  0100               	movlb	0	; () banked
  3960  01047C  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3961  01047E  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3962  010480  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3963  010482  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  3967  010484  C078  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  3968                           
  3969                           ; BSR set to: 0
  3970                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  3971  010488  0E00               	movlw	0
  3972  01048A  0100               	movlb	0	; () banked
  3973  01048C  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3974  01048E  0100               	movlb	0	; () banked
  3975  010490  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3976  010492  0EFF               	movlw	255
  3977  010494  0100               	movlb	0	; () banked
  3978  010496  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3979  010498  0100               	movlb	0	; () banked
  3980  01049A  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3981  01049C  0E00               	movlw	0
  3982  01049E  0100               	movlb	0	; () banked
  3983  0104A0  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3984  0104A2  0100               	movlb	0	; () banked
  3985  0104A4  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3986  0104A6  0E00               	movlw	0
  3987  0104A8  0100               	movlb	0	; () banked
  3988  0104AA  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3989  0104AC  0100               	movlb	0	; () banked
  3990  0104AE  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3991                           
  3992                           ; BSR set to: 0
  3993                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  3994  0104B0  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  3995  0104B4  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3996  0104B8  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3997  0104BC  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3998  0104C0  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  3999  0104C4  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4000  0104C8  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4001  0104CC  0100               	movlb	0	; () banked
  4002  0104CE  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  4003  0104D0  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4004  0104D4  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4005  0104D8  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4006  0104DC  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4007                           
  4008                           ; BSR set to: 0
  4009                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  4010  0104E0  C078  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  4014  0104E4  0100               	movlb	0	; () banked
  4015  0104E6  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4016  0104E8  D003               	goto	l471
  4017                           
  4018                           ; BSR set to: 0
  4019                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  4020  0104EA  010F               	movlb	15	; () banked
  4021  0104EC  8101               	bsf	1,0,b	;volatile
  4022  0104EE  D002               	goto	l472
  4023  0104F0                     l471:
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;inc\CANlib.h: 844: else
  4027                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  4028  0104F0  010F               	movlb	15	; () banked
  4029  0104F2  9101               	bcf	1,0,b	;volatile
  4030  0104F4                     l472:
  4031                           
  4032                           ; BSR set to: 15
  4033                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  4034  0104F4  0100               	movlb	0	; () banked
  4035  0104F6  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4036  0104F8  D003               	goto	l473
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  4040  0104FA  010F               	movlb	15	; () banked
  4041  0104FC  8301               	bsf	1,1,b	;volatile
  4042  0104FE  D002               	goto	l474
  4043  010500                     l473:
  4044                           
  4045                           ; BSR set to: 0
  4046                           ;inc\CANlib.h: 849: else
  4047                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  4048  010500  010F               	movlb	15	; () banked
  4049  010502  9301               	bcf	1,1,b	;volatile
  4050  010504                     l474:
  4051                           
  4052                           ; BSR set to: 15
  4053                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  4054  010504  0100               	movlb	0	; () banked
  4055  010506  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4056  010508  D003               	goto	l475
  4057                           
  4058                           ; BSR set to: 0
  4059                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  4060  01050A  010F               	movlb	15	; () banked
  4061  01050C  8B01               	bsf	1,5,b	;volatile
  4062  01050E  D002               	goto	l476
  4063  010510                     l475:
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;inc\CANlib.h: 854: else
  4067                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  4068  010510  010F               	movlb	15	; () banked
  4069  010512  9B01               	bcf	1,5,b	;volatile
  4070  010514                     l476:
  4071                           
  4072                           ; BSR set to: 15
  4073                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  4074  010514  0100               	movlb	0	; () banked
  4075  010516  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4076  010518  D003               	goto	l477
  4077                           
  4078                           ; BSR set to: 0
  4079                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  4080  01051A  010F               	movlb	15	; () banked
  4081  01051C  8D01               	bsf	1,6,b	;volatile
  4082  01051E  D002               	goto	l478
  4083  010520                     l477:
  4084                           
  4085                           ; BSR set to: 0
  4086                           ;inc\CANlib.h: 859: else
  4087                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  4088  010520  010F               	movlb	15	; () banked
  4089  010522  9D01               	bcf	1,6,b	;volatile
  4090  010524                     l478:
  4091                           
  4092                           ; BSR set to: 15
  4093                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  4094  010524  0100               	movlb	0	; () banked
  4095  010526  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4096  010528  D003               	goto	l479
  4097                           
  4098                           ; BSR set to: 0
  4099                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  4100  01052A  010F               	movlb	15	; () banked
  4101  01052C  8F01               	bsf	1,7,b	;volatile
  4102  01052E  D002               	goto	l5207
  4103  010530                     l479:
  4104                           
  4105                           ; BSR set to: 0
  4106                           ;inc\CANlib.h: 864: else
  4107                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  4108  010530  010F               	movlb	15	; () banked
  4109  010532  9F01               	bcf	1,7,b	;volatile
  4110  010534                     l5207:
  4111                           
  4112                           ; BSR set to: 15
  4113                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  4114  010534  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4115  010538  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4116  01053C  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4117  010540  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4118  010544  0E16               	movlw	22
  4119  010546  D006               	goto	u6040
  4120  010548                     u6045:
  4121  010548  0100               	movlb	0	; () banked
  4122  01054A  90D8               	bcf	status,0,c
  4123  01054C  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4124  01054E  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4125  010550  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4126  010552  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4127  010554                     u6040:
  4128  010554  2EE8               	decfsz	wreg,f,c
  4129  010556  D7F8               	goto	u6045
  4130  010558  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4131  01055C  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4132  010560  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4133  010564  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  4137  010568  0100               	movlb	0	; () banked
  4138  01056A  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4139  01056C  0100               	movlb	0	; () banked
  4140  01056E  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4141  010570  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4142  010572  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4143  010574  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  4147  010576  C078  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4148  01057A                     l5213:
  4149                           
  4150                           ; BSR set to: 0
  4151                           ;inc\CANlib.h: 870: }
  4152                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  4153  01057A  0100               	movlb	0	; () banked
  4154  01057C  0577               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4155  01057E  A4D8               	btfss	status,2,c
  4156  010580  D089               	goto	l5247
  4157                           
  4158                           ; BSR set to: 0
  4159  010582  0EF7               	movlw	247
  4160  010584  0100               	movlb	0	; () banked
  4161  010586  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  4162  010588  A4D8               	btfss	status,2,c
  4163  01058A  D084               	goto	l5247
  4164                           
  4165                           ; BSR set to: 0
  4166                           ;inc\CANlib.h: 873: {
  4167                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  4168  01058C  010F               	movlb	15	; () banked
  4169  01058E  8705               	bsf	5,3,b	;volatile
  4170                           
  4171                           ; BSR set to: 15
  4172                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  4173  010590  0100               	movlb	0	; () banked
  4174  010592  516E               	movf	CANSetFilter@filter& (0+255),w,b
  4175  010594  0100               	movlb	0	; () banked
  4176  010596  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4177  010598  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4178  01059A  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4179  01059C  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  4183  01059E  C078  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  4184                           
  4185                           ; BSR set to: 0
  4186                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  4187  0105A2  0E00               	movlw	0
  4188  0105A4  0100               	movlb	0	; () banked
  4189  0105A6  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4190  0105A8  0100               	movlb	0	; () banked
  4191  0105AA  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4192  0105AC  0EFF               	movlw	255
  4193  0105AE  0100               	movlb	0	; () banked
  4194  0105B0  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4195  0105B2  0100               	movlb	0	; () banked
  4196  0105B4  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4197  0105B6  0E00               	movlw	0
  4198  0105B8  0100               	movlb	0	; () banked
  4199  0105BA  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4200  0105BC  0100               	movlb	0	; () banked
  4201  0105BE  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4202  0105C0  0E00               	movlw	0
  4203  0105C2  0100               	movlb	0	; () banked
  4204  0105C4  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4205  0105C6  0100               	movlb	0	; () banked
  4206  0105C8  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  4210  0105CA  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4211  0105CE  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4212  0105D2  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4213  0105D6  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4214  0105DA  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  4215  0105DE  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4216  0105E2  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4217  0105E6  0100               	movlb	0	; () banked
  4218  0105E8  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  4219  0105EA  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4220  0105EE  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4221  0105F2  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4222  0105F6  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  4226  0105FA  C078  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  4227                           
  4228                           ; BSR set to: 0
  4229                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  4230  0105FE  0100               	movlb	0	; () banked
  4231  010600  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4232  010602  D003               	goto	l482
  4233                           
  4234                           ; BSR set to: 0
  4235                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  4236  010604  010F               	movlb	15	; () banked
  4237  010606  8105               	bsf	5,0,b	;volatile
  4238  010608  D002               	goto	l483
  4239  01060A                     l482:
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;inc\CANlib.h: 885: else
  4243                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  4244  01060A  010F               	movlb	15	; () banked
  4245  01060C  9105               	bcf	5,0,b	;volatile
  4246  01060E                     l483:
  4247                           
  4248                           ; BSR set to: 15
  4249                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  4250  01060E  0100               	movlb	0	; () banked
  4251  010610  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4252  010612  D003               	goto	l484
  4253                           
  4254                           ; BSR set to: 0
  4255                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  4256  010614  010F               	movlb	15	; () banked
  4257  010616  8305               	bsf	5,1,b	;volatile
  4258  010618  D002               	goto	l485
  4259  01061A                     l484:
  4260                           
  4261                           ; BSR set to: 0
  4262                           ;inc\CANlib.h: 890: else
  4263                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  4264  01061A  010F               	movlb	15	; () banked
  4265  01061C  9305               	bcf	5,1,b	;volatile
  4266  01061E                     l485:
  4267                           
  4268                           ; BSR set to: 15
  4269                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  4270  01061E  0100               	movlb	0	; () banked
  4271  010620  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4272  010622  D003               	goto	l486
  4273                           
  4274                           ; BSR set to: 0
  4275                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  4276  010624  010F               	movlb	15	; () banked
  4277  010626  8B05               	bsf	5,5,b	;volatile
  4278  010628  D002               	goto	l487
  4279  01062A                     l486:
  4280                           
  4281                           ; BSR set to: 0
  4282                           ;inc\CANlib.h: 895: else
  4283                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  4284  01062A  010F               	movlb	15	; () banked
  4285  01062C  9B05               	bcf	5,5,b	;volatile
  4286  01062E                     l487:
  4287                           
  4288                           ; BSR set to: 15
  4289                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  4290  01062E  0100               	movlb	0	; () banked
  4291  010630  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4292  010632  D003               	goto	l488
  4293                           
  4294                           ; BSR set to: 0
  4295                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  4296  010634  010F               	movlb	15	; () banked
  4297  010636  8D05               	bsf	5,6,b	;volatile
  4298  010638  D002               	goto	l489
  4299  01063A                     l488:
  4300                           
  4301                           ; BSR set to: 0
  4302                           ;inc\CANlib.h: 900: else
  4303                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  4304  01063A  010F               	movlb	15	; () banked
  4305  01063C  9D05               	bcf	5,6,b	;volatile
  4306  01063E                     l489:
  4307                           
  4308                           ; BSR set to: 15
  4309                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  4310  01063E  0100               	movlb	0	; () banked
  4311  010640  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4312  010642  D003               	goto	l490
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  4316  010644  010F               	movlb	15	; () banked
  4317  010646  8F05               	bsf	5,7,b	;volatile
  4318  010648  D002               	goto	l5241
  4319  01064A                     l490:
  4320                           
  4321                           ; BSR set to: 0
  4322                           ;inc\CANlib.h: 905: else
  4323                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  4324  01064A  010F               	movlb	15	; () banked
  4325  01064C  9F05               	bcf	5,7,b	;volatile
  4326  01064E                     l5241:
  4327                           
  4328                           ; BSR set to: 15
  4329                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  4330  01064E  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4331  010652  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4332  010656  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4333  01065A  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4334  01065E  0E16               	movlw	22
  4335  010660  D006               	goto	u6120
  4336  010662                     u6125:
  4337  010662  0100               	movlb	0	; () banked
  4338  010664  90D8               	bcf	status,0,c
  4339  010666  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4340  010668  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4341  01066A  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4342  01066C  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4343  01066E                     u6120:
  4344  01066E  2EE8               	decfsz	wreg,f,c
  4345  010670  D7F8               	goto	u6125
  4346  010672  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4347  010676  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4348  01067A  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4349  01067E  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4350                           
  4351                           ; BSR set to: 0
  4352                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  4353  010682  0100               	movlb	0	; () banked
  4354  010684  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4355  010686  0100               	movlb	0	; () banked
  4356  010688  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4357  01068A  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4358  01068C  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4359  01068E  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4360                           
  4361                           ; BSR set to: 0
  4362                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  4363  010690  C078  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4364  010694                     l5247:
  4365                           
  4366                           ; BSR set to: 0
  4367                           ;inc\CANlib.h: 911: }
  4368                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  4369  010694  0E02               	movlw	2
  4370  010696  0100               	movlb	0	; () banked
  4371  010698  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4372  01069A  A4D8               	btfss	status,2,c
  4373  01069C  D089               	goto	l5281
  4374                           
  4375                           ; BSR set to: 0
  4376  01069E  0EF7               	movlw	247
  4377  0106A0  0100               	movlb	0	; () banked
  4378  0106A2  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  4379  0106A4  A4D8               	btfss	status,2,c
  4380  0106A6  D084               	goto	l5281
  4381                           
  4382                           ; BSR set to: 0
  4383                           ;inc\CANlib.h: 915: {
  4384                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  4385  0106A8  010F               	movlb	15	; () banked
  4386  0106AA  8709               	bsf	9,3,b	;volatile
  4387                           
  4388                           ; BSR set to: 15
  4389                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  4390  0106AC  0100               	movlb	0	; () banked
  4391  0106AE  516E               	movf	CANSetFilter@filter& (0+255),w,b
  4392  0106B0  0100               	movlb	0	; () banked
  4393  0106B2  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4394  0106B4  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4395  0106B6  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4396  0106B8  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4397                           
  4398                           ; BSR set to: 0
  4399                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  4400  0106BA  C078  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  4401                           
  4402                           ; BSR set to: 0
  4403                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  4404  0106BE  0E00               	movlw	0
  4405  0106C0  0100               	movlb	0	; () banked
  4406  0106C2  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4407  0106C4  0100               	movlb	0	; () banked
  4408  0106C6  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4409  0106C8  0EFF               	movlw	255
  4410  0106CA  0100               	movlb	0	; () banked
  4411  0106CC  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4412  0106CE  0100               	movlb	0	; () banked
  4413  0106D0  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4414  0106D2  0E00               	movlw	0
  4415  0106D4  0100               	movlb	0	; () banked
  4416  0106D6  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4417  0106D8  0100               	movlb	0	; () banked
  4418  0106DA  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4419  0106DC  0E00               	movlw	0
  4420  0106DE  0100               	movlb	0	; () banked
  4421  0106E0  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4422  0106E2  0100               	movlb	0	; () banked
  4423  0106E4  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4424                           
  4425                           ; BSR set to: 0
  4426                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  4427  0106E6  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4428  0106EA  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4429  0106EE  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4430  0106F2  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4431  0106F6  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  4432  0106FA  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4433  0106FE  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4434  010702  0100               	movlb	0	; () banked
  4435  010704  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  4436  010706  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4437  01070A  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4438  01070E  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4439  010712  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4440                           
  4441                           ; BSR set to: 0
  4442                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  4443  010716  C078  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  4444                           
  4445                           ; BSR set to: 0
  4446                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  4447  01071A  0100               	movlb	0	; () banked
  4448  01071C  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4449  01071E  D003               	goto	l493
  4450                           
  4451                           ; BSR set to: 0
  4452                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  4453  010720  010F               	movlb	15	; () banked
  4454  010722  8109               	bsf	9,0,b	;volatile
  4455  010724  D002               	goto	l494
  4456  010726                     l493:
  4457                           
  4458                           ; BSR set to: 0
  4459                           ;inc\CANlib.h: 927: else
  4460                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  4461  010726  010F               	movlb	15	; () banked
  4462  010728  9109               	bcf	9,0,b	;volatile
  4463  01072A                     l494:
  4464                           
  4465                           ; BSR set to: 15
  4466                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  4467  01072A  0100               	movlb	0	; () banked
  4468  01072C  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4469  01072E  D003               	goto	l495
  4470                           
  4471                           ; BSR set to: 0
  4472                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  4473  010730  010F               	movlb	15	; () banked
  4474  010732  8309               	bsf	9,1,b	;volatile
  4475  010734  D002               	goto	l496
  4476  010736                     l495:
  4477                           
  4478                           ; BSR set to: 0
  4479                           ;inc\CANlib.h: 932: else
  4480                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  4481  010736  010F               	movlb	15	; () banked
  4482  010738  9309               	bcf	9,1,b	;volatile
  4483  01073A                     l496:
  4484                           
  4485                           ; BSR set to: 15
  4486                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  4487  01073A  0100               	movlb	0	; () banked
  4488  01073C  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4489  01073E  D003               	goto	l497
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  4493  010740  010F               	movlb	15	; () banked
  4494  010742  8B09               	bsf	9,5,b	;volatile
  4495  010744  D002               	goto	l498
  4496  010746                     l497:
  4497                           
  4498                           ; BSR set to: 0
  4499                           ;inc\CANlib.h: 937: else
  4500                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  4501  010746  010F               	movlb	15	; () banked
  4502  010748  9B09               	bcf	9,5,b	;volatile
  4503  01074A                     l498:
  4504                           
  4505                           ; BSR set to: 15
  4506                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  4507  01074A  0100               	movlb	0	; () banked
  4508  01074C  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4509  01074E  D003               	goto	l499
  4510                           
  4511                           ; BSR set to: 0
  4512                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  4513  010750  010F               	movlb	15	; () banked
  4514  010752  8D09               	bsf	9,6,b	;volatile
  4515  010754  D002               	goto	l500
  4516  010756                     l499:
  4517                           
  4518                           ; BSR set to: 0
  4519                           ;inc\CANlib.h: 942: else
  4520                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  4521  010756  010F               	movlb	15	; () banked
  4522  010758  9D09               	bcf	9,6,b	;volatile
  4523  01075A                     l500:
  4524                           
  4525                           ; BSR set to: 15
  4526                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  4527  01075A  0100               	movlb	0	; () banked
  4528  01075C  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4529  01075E  D003               	goto	l501
  4530                           
  4531                           ; BSR set to: 0
  4532                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  4533  010760  010F               	movlb	15	; () banked
  4534  010762  8F09               	bsf	9,7,b	;volatile
  4535  010764  D002               	goto	l5275
  4536  010766                     l501:
  4537                           
  4538                           ; BSR set to: 0
  4539                           ;inc\CANlib.h: 947: else
  4540                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  4541  010766  010F               	movlb	15	; () banked
  4542  010768  9F09               	bcf	9,7,b	;volatile
  4543  01076A                     l5275:
  4544                           
  4545                           ; BSR set to: 15
  4546                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  4547  01076A  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4548  01076E  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4549  010772  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4550  010776  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4551  01077A  0E16               	movlw	22
  4552  01077C  D006               	goto	u6200
  4553  01077E                     u6205:
  4554  01077E  0100               	movlb	0	; () banked
  4555  010780  90D8               	bcf	status,0,c
  4556  010782  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4557  010784  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4558  010786  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4559  010788  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4560  01078A                     u6200:
  4561  01078A  2EE8               	decfsz	wreg,f,c
  4562  01078C  D7F8               	goto	u6205
  4563  01078E  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4564  010792  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4565  010796  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4566  01079A  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4567                           
  4568                           ; BSR set to: 0
  4569                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  4570  01079E  0100               	movlb	0	; () banked
  4571  0107A0  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4572  0107A2  0100               	movlb	0	; () banked
  4573  0107A4  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4574  0107A6  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4575  0107A8  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4576  0107AA  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4577                           
  4578                           ; BSR set to: 0
  4579                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  4580  0107AC  C078  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4581  0107B0                     l5281:
  4582                           
  4583                           ; BSR set to: 0
  4584                           ;inc\CANlib.h: 953: }
  4585                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  4586  0107B0  0E03               	movlw	3
  4587  0107B2  0100               	movlb	0	; () banked
  4588  0107B4  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4589  0107B6  A4D8               	btfss	status,2,c
  4590  0107B8  D089               	goto	l5315
  4591                           
  4592                           ; BSR set to: 0
  4593  0107BA  0EF7               	movlw	247
  4594  0107BC  0100               	movlb	0	; () banked
  4595  0107BE  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  4596  0107C0  A4D8               	btfss	status,2,c
  4597  0107C2  D084               	goto	l5315
  4598                           
  4599                           ; BSR set to: 0
  4600                           ;inc\CANlib.h: 956: {
  4601                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  4602  0107C4  010F               	movlb	15	; () banked
  4603  0107C6  870D               	bsf	13,3,b	;volatile
  4604                           
  4605                           ; BSR set to: 15
  4606                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  4607  0107C8  0100               	movlb	0	; () banked
  4608  0107CA  516E               	movf	CANSetFilter@filter& (0+255),w,b
  4609  0107CC  0100               	movlb	0	; () banked
  4610  0107CE  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4611  0107D0  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4612  0107D2  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4613  0107D4  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4614                           
  4615                           ; BSR set to: 0
  4616                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  4617  0107D6  C078  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  4618                           
  4619                           ; BSR set to: 0
  4620                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  4621  0107DA  0E00               	movlw	0
  4622  0107DC  0100               	movlb	0	; () banked
  4623  0107DE  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4624  0107E0  0100               	movlb	0	; () banked
  4625  0107E2  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4626  0107E4  0EFF               	movlw	255
  4627  0107E6  0100               	movlb	0	; () banked
  4628  0107E8  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4629  0107EA  0100               	movlb	0	; () banked
  4630  0107EC  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4631  0107EE  0E00               	movlw	0
  4632  0107F0  0100               	movlb	0	; () banked
  4633  0107F2  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4634  0107F4  0100               	movlb	0	; () banked
  4635  0107F6  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4636  0107F8  0E00               	movlw	0
  4637  0107FA  0100               	movlb	0	; () banked
  4638  0107FC  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4639  0107FE  0100               	movlb	0	; () banked
  4640  010800  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4641                           
  4642                           ; BSR set to: 0
  4643                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  4644  010802  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4645  010806  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4646  01080A  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4647  01080E  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4648  010812  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  4649  010816  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4650  01081A  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4651  01081E  0100               	movlb	0	; () banked
  4652  010820  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  4653  010822  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4654  010826  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4655  01082A  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4656  01082E  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4657                           
  4658                           ; BSR set to: 0
  4659                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  4660  010832  C078  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  4661                           
  4662                           ; BSR set to: 0
  4663                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  4664  010836  0100               	movlb	0	; () banked
  4665  010838  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4666  01083A  D003               	goto	l504
  4667                           
  4668                           ; BSR set to: 0
  4669                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  4670  01083C  010F               	movlb	15	; () banked
  4671  01083E  810D               	bsf	13,0,b	;volatile
  4672  010840  D002               	goto	l505
  4673  010842                     l504:
  4674                           
  4675                           ; BSR set to: 0
  4676                           ;inc\CANlib.h: 968: else
  4677                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  4678  010842  010F               	movlb	15	; () banked
  4679  010844  910D               	bcf	13,0,b	;volatile
  4680  010846                     l505:
  4681                           
  4682                           ; BSR set to: 15
  4683                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  4684  010846  0100               	movlb	0	; () banked
  4685  010848  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4686  01084A  D003               	goto	l506
  4687                           
  4688                           ; BSR set to: 0
  4689                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  4690  01084C  010F               	movlb	15	; () banked
  4691  01084E  830D               	bsf	13,1,b	;volatile
  4692  010850  D002               	goto	l507
  4693  010852                     l506:
  4694                           
  4695                           ; BSR set to: 0
  4696                           ;inc\CANlib.h: 973: else
  4697                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  4698  010852  010F               	movlb	15	; () banked
  4699  010854  930D               	bcf	13,1,b	;volatile
  4700  010856                     l507:
  4701                           
  4702                           ; BSR set to: 15
  4703                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  4704  010856  0100               	movlb	0	; () banked
  4705  010858  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4706  01085A  D003               	goto	l508
  4707                           
  4708                           ; BSR set to: 0
  4709                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  4710  01085C  010F               	movlb	15	; () banked
  4711  01085E  8B0D               	bsf	13,5,b	;volatile
  4712  010860  D002               	goto	l509
  4713  010862                     l508:
  4714                           
  4715                           ; BSR set to: 0
  4716                           ;inc\CANlib.h: 978: else
  4717                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  4718  010862  010F               	movlb	15	; () banked
  4719  010864  9B0D               	bcf	13,5,b	;volatile
  4720  010866                     l509:
  4721                           
  4722                           ; BSR set to: 15
  4723                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  4724  010866  0100               	movlb	0	; () banked
  4725  010868  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4726  01086A  D003               	goto	l510
  4727                           
  4728                           ; BSR set to: 0
  4729                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  4730  01086C  010F               	movlb	15	; () banked
  4731  01086E  8D0D               	bsf	13,6,b	;volatile
  4732  010870  D002               	goto	l511
  4733  010872                     l510:
  4734                           
  4735                           ; BSR set to: 0
  4736                           ;inc\CANlib.h: 983: else
  4737                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  4738  010872  010F               	movlb	15	; () banked
  4739  010874  9D0D               	bcf	13,6,b	;volatile
  4740  010876                     l511:
  4741                           
  4742                           ; BSR set to: 15
  4743                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  4744  010876  0100               	movlb	0	; () banked
  4745  010878  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4746  01087A  D003               	goto	l512
  4747                           
  4748                           ; BSR set to: 0
  4749                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  4750  01087C  010F               	movlb	15	; () banked
  4751  01087E  8F0D               	bsf	13,7,b	;volatile
  4752  010880  D002               	goto	l5309
  4753  010882                     l512:
  4754                           
  4755                           ; BSR set to: 0
  4756                           ;inc\CANlib.h: 988: else
  4757                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  4758  010882  010F               	movlb	15	; () banked
  4759  010884  9F0D               	bcf	13,7,b	;volatile
  4760  010886                     l5309:
  4761                           
  4762                           ; BSR set to: 15
  4763                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  4764  010886  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4765  01088A  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4766  01088E  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4767  010892  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4768  010896  0E16               	movlw	22
  4769  010898  D006               	goto	u6280
  4770  01089A                     u6285:
  4771  01089A  0100               	movlb	0	; () banked
  4772  01089C  90D8               	bcf	status,0,c
  4773  01089E  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4774  0108A0  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4775  0108A2  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4776  0108A4  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4777  0108A6                     u6280:
  4778  0108A6  2EE8               	decfsz	wreg,f,c
  4779  0108A8  D7F8               	goto	u6285
  4780  0108AA  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4781  0108AE  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4782  0108B2  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4783  0108B6  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4784                           
  4785                           ; BSR set to: 0
  4786                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  4787  0108BA  0100               	movlb	0	; () banked
  4788  0108BC  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4789  0108BE  0100               	movlb	0	; () banked
  4790  0108C0  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4791  0108C2  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4792  0108C4  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4793  0108C6  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4794                           
  4795                           ; BSR set to: 0
  4796                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  4797  0108C8  C078  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4798  0108CC                     l5315:
  4799                           
  4800                           ; BSR set to: 0
  4801                           ;inc\CANlib.h: 994: }
  4802                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  4803  0108CC  0E04               	movlw	4
  4804  0108CE  0100               	movlb	0	; () banked
  4805  0108D0  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4806  0108D2  A4D8               	btfss	status,2,c
  4807  0108D4  D089               	goto	l5349
  4808                           
  4809                           ; BSR set to: 0
  4810  0108D6  0EF7               	movlw	247
  4811  0108D8  0100               	movlb	0	; () banked
  4812  0108DA  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  4813  0108DC  A4D8               	btfss	status,2,c
  4814  0108DE  D084               	goto	l5349
  4815                           
  4816                           ; BSR set to: 0
  4817                           ;inc\CANlib.h: 997: {
  4818                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  4819  0108E0  010F               	movlb	15	; () banked
  4820  0108E2  8711               	bsf	17,3,b	;volatile
  4821                           
  4822                           ; BSR set to: 15
  4823                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  4824  0108E4  0100               	movlb	0	; () banked
  4825  0108E6  516E               	movf	CANSetFilter@filter& (0+255),w,b
  4826  0108E8  0100               	movlb	0	; () banked
  4827  0108EA  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4828  0108EC  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4829  0108EE  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4830  0108F0  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4831                           
  4832                           ; BSR set to: 0
  4833                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  4834  0108F2  C078  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  4835                           
  4836                           ; BSR set to: 0
  4837                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  4838  0108F6  0E00               	movlw	0
  4839  0108F8  0100               	movlb	0	; () banked
  4840  0108FA  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4841  0108FC  0100               	movlb	0	; () banked
  4842  0108FE  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4843  010900  0EFF               	movlw	255
  4844  010902  0100               	movlb	0	; () banked
  4845  010904  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4846  010906  0100               	movlb	0	; () banked
  4847  010908  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4848  01090A  0E00               	movlw	0
  4849  01090C  0100               	movlb	0	; () banked
  4850  01090E  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4851  010910  0100               	movlb	0	; () banked
  4852  010912  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4853  010914  0E00               	movlw	0
  4854  010916  0100               	movlb	0	; () banked
  4855  010918  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4856  01091A  0100               	movlb	0	; () banked
  4857  01091C  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4858                           
  4859                           ; BSR set to: 0
  4860                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  4861  01091E  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4862  010922  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4863  010926  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4864  01092A  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4865  01092E  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  4866  010932  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4867  010936  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4868  01093A  0100               	movlb	0	; () banked
  4869  01093C  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  4870  01093E  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4871  010942  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4872  010946  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4873  01094A  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4874                           
  4875                           ; BSR set to: 0
  4876                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  4877  01094E  C078  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  4878                           
  4879                           ; BSR set to: 0
  4880                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  4881  010952  0100               	movlb	0	; () banked
  4882  010954  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4883  010956  D003               	goto	l515
  4884                           
  4885                           ; BSR set to: 0
  4886                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  4887  010958  010F               	movlb	15	; () banked
  4888  01095A  8111               	bsf	17,0,b	;volatile
  4889  01095C  D002               	goto	l516
  4890  01095E                     l515:
  4891                           
  4892                           ; BSR set to: 0
  4893                           ;inc\CANlib.h: 1009: else
  4894                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  4895  01095E  010F               	movlb	15	; () banked
  4896  010960  9111               	bcf	17,0,b	;volatile
  4897  010962                     l516:
  4898                           
  4899                           ; BSR set to: 15
  4900                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  4901  010962  0100               	movlb	0	; () banked
  4902  010964  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4903  010966  D003               	goto	l517
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  4907  010968  010F               	movlb	15	; () banked
  4908  01096A  8311               	bsf	17,1,b	;volatile
  4909  01096C  D002               	goto	l518
  4910  01096E                     l517:
  4911                           
  4912                           ; BSR set to: 0
  4913                           ;inc\CANlib.h: 1014: else
  4914                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  4915  01096E  010F               	movlb	15	; () banked
  4916  010970  9311               	bcf	17,1,b	;volatile
  4917  010972                     l518:
  4918                           
  4919                           ; BSR set to: 15
  4920                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  4921  010972  0100               	movlb	0	; () banked
  4922  010974  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4923  010976  D003               	goto	l519
  4924                           
  4925                           ; BSR set to: 0
  4926                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  4927  010978  010F               	movlb	15	; () banked
  4928  01097A  8B11               	bsf	17,5,b	;volatile
  4929  01097C  D002               	goto	l520
  4930  01097E                     l519:
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;inc\CANlib.h: 1019: else
  4934                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  4935  01097E  010F               	movlb	15	; () banked
  4936  010980  9B11               	bcf	17,5,b	;volatile
  4937  010982                     l520:
  4938                           
  4939                           ; BSR set to: 15
  4940                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  4941  010982  0100               	movlb	0	; () banked
  4942  010984  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4943  010986  D003               	goto	l521
  4944                           
  4945                           ; BSR set to: 0
  4946                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  4947  010988  010F               	movlb	15	; () banked
  4948  01098A  8D11               	bsf	17,6,b	;volatile
  4949  01098C  D002               	goto	l522
  4950  01098E                     l521:
  4951                           
  4952                           ; BSR set to: 0
  4953                           ;inc\CANlib.h: 1024: else
  4954                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  4955  01098E  010F               	movlb	15	; () banked
  4956  010990  9D11               	bcf	17,6,b	;volatile
  4957  010992                     l522:
  4958                           
  4959                           ; BSR set to: 15
  4960                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  4961  010992  0100               	movlb	0	; () banked
  4962  010994  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4963  010996  D003               	goto	l523
  4964                           
  4965                           ; BSR set to: 0
  4966                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  4967  010998  010F               	movlb	15	; () banked
  4968  01099A  8F11               	bsf	17,7,b	;volatile
  4969  01099C  D002               	goto	l5343
  4970  01099E                     l523:
  4971                           
  4972                           ; BSR set to: 0
  4973                           ;inc\CANlib.h: 1029: else
  4974                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  4975  01099E  010F               	movlb	15	; () banked
  4976  0109A0  9F11               	bcf	17,7,b	;volatile
  4977  0109A2                     l5343:
  4978                           
  4979                           ; BSR set to: 15
  4980                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  4981  0109A2  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4982  0109A6  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4983  0109AA  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4984  0109AE  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4985  0109B2  0E16               	movlw	22
  4986  0109B4  D006               	goto	u6360
  4987  0109B6                     u6365:
  4988  0109B6  0100               	movlb	0	; () banked
  4989  0109B8  90D8               	bcf	status,0,c
  4990  0109BA  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4991  0109BC  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4992  0109BE  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4993  0109C0  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4994  0109C2                     u6360:
  4995  0109C2  2EE8               	decfsz	wreg,f,c
  4996  0109C4  D7F8               	goto	u6365
  4997  0109C6  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4998  0109CA  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4999  0109CE  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5000  0109D2  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5001                           
  5002                           ; BSR set to: 0
  5003                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  5004  0109D6  0100               	movlb	0	; () banked
  5005  0109D8  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  5006  0109DA  0100               	movlb	0	; () banked
  5007  0109DC  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5008  0109DE  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5009  0109E0  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5010  0109E2  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5011                           
  5012                           ; BSR set to: 0
  5013                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  5014  0109E4  C078  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5015  0109E8                     l5349:
  5016                           
  5017                           ; BSR set to: 0
  5018                           ;inc\CANlib.h: 1035: }
  5019                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  5020  0109E8  0E05               	movlw	5
  5021  0109EA  0100               	movlb	0	; () banked
  5022  0109EC  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5023  0109EE  A4D8               	btfss	status,2,c
  5024  0109F0  0012               	return	
  5025                           
  5026                           ; BSR set to: 0
  5027  0109F2  0EF7               	movlw	247
  5028  0109F4  0100               	movlb	0	; () banked
  5029  0109F6  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  5030  0109F8  A4D8               	btfss	status,2,c
  5031  0109FA  0012               	return	
  5032                           
  5033                           ; BSR set to: 0
  5034                           ;inc\CANlib.h: 1038: {
  5035                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  5036  0109FC  010F               	movlb	15	; () banked
  5037  0109FE  8715               	bsf	21,3,b	;volatile
  5038                           
  5039                           ; BSR set to: 15
  5040                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  5041  010A00  0100               	movlb	0	; () banked
  5042  010A02  516E               	movf	CANSetFilter@filter& (0+255),w,b
  5043  010A04  0100               	movlb	0	; () banked
  5044  010A06  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5045  010A08  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5046  010A0A  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5047  010A0C  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5048                           
  5049                           ; BSR set to: 0
  5050                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  5051  010A0E  C078  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  5052                           
  5053                           ; BSR set to: 0
  5054                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  5055  010A12  0E00               	movlw	0
  5056  010A14  0100               	movlb	0	; () banked
  5057  010A16  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  5058  010A18  0100               	movlb	0	; () banked
  5059  010A1A  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5060  010A1C  0EFF               	movlw	255
  5061  010A1E  0100               	movlb	0	; () banked
  5062  010A20  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5063  010A22  0100               	movlb	0	; () banked
  5064  010A24  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5065  010A26  0E00               	movlw	0
  5066  010A28  0100               	movlb	0	; () banked
  5067  010A2A  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5068  010A2C  0100               	movlb	0	; () banked
  5069  010A2E  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5070  010A30  0E00               	movlw	0
  5071  010A32  0100               	movlb	0	; () banked
  5072  010A34  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5073  010A36  0100               	movlb	0	; () banked
  5074  010A38  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5075                           
  5076                           ; BSR set to: 0
  5077                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  5078  010A3A  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  5079  010A3E  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5080  010A42  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5081  010A46  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5082  010A4A  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  5083  010A4E  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5084  010A52  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5085  010A56  0100               	movlb	0	; () banked
  5086  010A58  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  5087  010A5A  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  5088  010A5E  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5089  010A62  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5090  010A66  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5091                           
  5092                           ; BSR set to: 0
  5093                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  5094  010A6A  C078  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  5095                           
  5096                           ; BSR set to: 0
  5097                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  5098  010A6E  0100               	movlb	0	; () banked
  5099  010A70  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5100  010A72  D003               	goto	l526
  5101                           
  5102                           ; BSR set to: 0
  5103                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  5104  010A74  010F               	movlb	15	; () banked
  5105  010A76  8115               	bsf	21,0,b	;volatile
  5106  010A78  D002               	goto	l527
  5107  010A7A                     l526:
  5108                           
  5109                           ; BSR set to: 0
  5110                           ;inc\CANlib.h: 1050: else
  5111                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  5112  010A7A  010F               	movlb	15	; () banked
  5113  010A7C  9115               	bcf	21,0,b	;volatile
  5114  010A7E                     l527:
  5115                           
  5116                           ; BSR set to: 15
  5117                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  5118  010A7E  0100               	movlb	0	; () banked
  5119  010A80  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5120  010A82  D003               	goto	l528
  5121                           
  5122                           ; BSR set to: 0
  5123                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  5124  010A84  010F               	movlb	15	; () banked
  5125  010A86  8315               	bsf	21,1,b	;volatile
  5126  010A88  D002               	goto	l529
  5127  010A8A                     l528:
  5128                           
  5129                           ; BSR set to: 0
  5130                           ;inc\CANlib.h: 1055: else
  5131                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  5132  010A8A  010F               	movlb	15	; () banked
  5133  010A8C  9315               	bcf	21,1,b	;volatile
  5134  010A8E                     l529:
  5135                           
  5136                           ; BSR set to: 15
  5137                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  5138  010A8E  0100               	movlb	0	; () banked
  5139  010A90  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5140  010A92  D003               	goto	l530
  5141                           
  5142                           ; BSR set to: 0
  5143                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  5144  010A94  010F               	movlb	15	; () banked
  5145  010A96  8B15               	bsf	21,5,b	;volatile
  5146  010A98  D002               	goto	l531
  5147  010A9A                     l530:
  5148                           
  5149                           ; BSR set to: 0
  5150                           ;inc\CANlib.h: 1060: else
  5151                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  5152  010A9A  010F               	movlb	15	; () banked
  5153  010A9C  9B15               	bcf	21,5,b	;volatile
  5154  010A9E                     l531:
  5155                           
  5156                           ; BSR set to: 15
  5157                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  5158  010A9E  0100               	movlb	0	; () banked
  5159  010AA0  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5160  010AA2  D003               	goto	l532
  5161                           
  5162                           ; BSR set to: 0
  5163                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  5164  010AA4  010F               	movlb	15	; () banked
  5165  010AA6  8D15               	bsf	21,6,b	;volatile
  5166  010AA8  D002               	goto	l533
  5167  010AAA                     l532:
  5168                           
  5169                           ; BSR set to: 0
  5170                           ;inc\CANlib.h: 1065: else
  5171                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  5172  010AAA  010F               	movlb	15	; () banked
  5173  010AAC  9D15               	bcf	21,6,b	;volatile
  5174  010AAE                     l533:
  5175                           
  5176                           ; BSR set to: 15
  5177                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  5178  010AAE  0100               	movlb	0	; () banked
  5179  010AB0  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5180  010AB2  D003               	goto	l534
  5181                           
  5182                           ; BSR set to: 0
  5183                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  5184  010AB4  010F               	movlb	15	; () banked
  5185  010AB6  8F15               	bsf	21,7,b	;volatile
  5186  010AB8  D002               	goto	l5377
  5187  010ABA                     l534:
  5188                           
  5189                           ; BSR set to: 0
  5190                           ;inc\CANlib.h: 1070: else
  5191                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  5192  010ABA  010F               	movlb	15	; () banked
  5193  010ABC  9F15               	bcf	21,7,b	;volatile
  5194  010ABE                     l5377:
  5195                           
  5196                           ; BSR set to: 15
  5197                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  5198  010ABE  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  5199  010AC2  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5200  010AC6  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5201  010ACA  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5202  010ACE  0E16               	movlw	22
  5203  010AD0  D006               	goto	u6440
  5204  010AD2                     u6445:
  5205  010AD2  0100               	movlb	0	; () banked
  5206  010AD4  90D8               	bcf	status,0,c
  5207  010AD6  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5208  010AD8  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5209  010ADA  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5210  010ADC  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  5211  010ADE                     u6440:
  5212  010ADE  2EE8               	decfsz	wreg,f,c
  5213  010AE0  D7F8               	goto	u6445
  5214  010AE2  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  5215  010AE6  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5216  010AEA  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5217  010AEE  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5218                           
  5219                           ; BSR set to: 0
  5220                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  5221  010AF2  0100               	movlb	0	; () banked
  5222  010AF4  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  5223  010AF6  0100               	movlb	0	; () banked
  5224  010AF8  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5225  010AFA  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5226  010AFC  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5227  010AFE  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5228                           
  5229                           ; BSR set to: 0
  5230                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  5231  010B00  C078  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5232  010B04  0012               	return	
  5233  010B06                     __end_of_CANSetFilter:
  5234                           	opt stack 0
  5235                           tblptru	equ	0xFF8
  5236                           tblptrh	equ	0xFF7
  5237                           tblptrl	equ	0xFF6
  5238                           tablat	equ	0xFF5
  5239                           intcon	equ	0xFF2
  5240                           postinc0	equ	0xFEE
  5241                           wreg	equ	0xFE8
  5242                           status	equ	0xFD8
  5243                           
  5244 ;; *************** function _CANOperationMode *****************
  5245 ;; Defined at:
  5246 ;;		line 206 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  5247 ;; Parameters:    Size  Location     Type
  5248 ;;  mode            1    wreg     enum E16881
  5249 ;; Auto vars:     Size  Location     Type
  5250 ;;  mode            1   14[BANK0 ] enum E16881
  5251 ;; Return value:  Size  Location     Type
  5252 ;;		None               void
  5253 ;; Registers used:
  5254 ;;		wreg, status,2, status,0
  5255 ;; Tracked objects:
  5256 ;;		On entry : 0/0
  5257 ;;		On exit  : 0/0
  5258 ;;		Unchanged: 0/0
  5259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5261 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5263 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5264 ;;Total ram usage:        1 bytes
  5265 ;; Hardware stack levels used:    1
  5266 ;; Hardware stack levels required when called:    3
  5267 ;; This function calls:
  5268 ;;		Nothing
  5269 ;; This function is called by:
  5270 ;;		_CANInitialize
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273                           
  5274                           	psect	text5
  5275  015E48                     __ptext5:
  5276                           	opt stack 0
  5277  015E48                     _CANOperationMode:
  5278                           	opt stack 25
  5279                           
  5280                           ; BSR set to: 0
  5281                           ;incstack = 0
  5282                           ;CANOperationMode@mode stored from wreg
  5283  015E48  0100               	movlb	0	; () banked
  5284  015E4A  6F6E               	movwf	CANOperationMode@mode& (0+255),b
  5285                           
  5286                           ;inc\CANlib.h: 208: CANCON = mode;
  5287  015E4C  C06E  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  5288  015E50                     l4973:
  5289  015E50  506E               	movf	3950,w,c	;volatile
  5290  015E52  0BE0               	andlw	224
  5291  015E54  0100               	movlb	0	; () banked
  5292  015E56  196E               	xorwf	CANOperationMode@mode& (0+255),w,b
  5293  015E58  B4D8               	btfsc	status,2,c
  5294  015E5A  0012               	return	
  5295  015E5C  D7F9               	goto	l4973
  5296  015E5E                     __end_of_CANOperationMode:
  5297                           	opt stack 0
  5298                           tblptru	equ	0xFF8
  5299                           tblptrh	equ	0xFF7
  5300                           tblptrl	equ	0xFF6
  5301                           tablat	equ	0xFF5
  5302                           intcon	equ	0xFF2
  5303                           postinc0	equ	0xFEE
  5304                           wreg	equ	0xFE8
  5305                           status	equ	0xFD8
  5306                           
  5307 ;; *************** function _PWR_Button_Polling *****************
  5308 ;; Defined at:
  5309 ;;		line 278 in file "RemoteCan.c"
  5310 ;; Parameters:    Size  Location     Type
  5311 ;;		None
  5312 ;; Auto vars:     Size  Location     Type
  5313 ;;		None
  5314 ;; Return value:  Size  Location     Type
  5315 ;;		None               void
  5316 ;; Registers used:
  5317 ;;		None
  5318 ;; Tracked objects:
  5319 ;;		On entry : 0/0
  5320 ;;		On exit  : 0/0
  5321 ;;		Unchanged: 0/0
  5322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5327 ;;Total ram usage:        0 bytes
  5328 ;; Hardware stack levels used:    1
  5329 ;; Hardware stack levels required when called:    3
  5330 ;; This function calls:
  5331 ;;		Nothing
  5332 ;; This function is called by:
  5333 ;;		_main
  5334 ;; This function uses a non-reentrant model
  5335 ;;
  5336                           
  5337                           	psect	text6
  5338  015E2C                     __ptext6:
  5339                           	opt stack 0
  5340  015E2C                     _PWR_Button_Polling:
  5341                           	opt stack 27
  5342                           
  5343                           ;RemoteCan.c: 279: if ((PORTBbits.RB5 == 0) || (wait_low == 0)) {
  5344                           
  5345                           ; BSR set to: 0
  5346                           ;incstack = 0
  5347  015E2C  AA81               	btfss	3969,5,c	;volatile
  5348  015E2E  D002               	goto	l802
  5349  015E30  BC47               	btfsc	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  5350  015E32  0012               	return	
  5351  015E34                     l802:
  5352                           
  5353                           ;RemoteCan.c: 280: wait_low = 0;
  5354  015E34  9C47               	bcf	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  5355                           
  5356                           ;RemoteCan.c: 281: if (PORTBbits.RB5 == 1) {
  5357  015E36  AA81               	btfss	3969,5,c	;volatile
  5358  015E38  0012               	return	
  5359                           
  5360                           ;RemoteCan.c: 282: power_switch = ~power_switch;
  5361  015E3A  BA47               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5362  015E3C  D002               	goto	u8400
  5363  015E3E  8A47               	bsf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5364  015E40  D001               	goto	u8415
  5365  015E42                     u8400:
  5366  015E42  9A47               	bcf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5367  015E44                     u8415:
  5368                           
  5369                           ;RemoteCan.c: 283: wait_low = 1;
  5370  015E44  8C47               	bsf	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  5371  015E46  0012               	return	
  5372  015E48                     __end_of_PWR_Button_Polling:
  5373                           	opt stack 0
  5374                           tblptru	equ	0xFF8
  5375                           tblptrh	equ	0xFF7
  5376                           tblptrl	equ	0xFF6
  5377                           tablat	equ	0xFF5
  5378                           intcon	equ	0xFF2
  5379                           postinc0	equ	0xFEE
  5380                           wreg	equ	0xFE8
  5381                           status	equ	0xFD8
  5382                           
  5383 ;; *************** function _LCD_Handler *****************
  5384 ;; Defined at:
  5385 ;;		line 204 in file "RemoteCan.c"
  5386 ;; Parameters:    Size  Location     Type
  5387 ;;		None
  5388 ;; Auto vars:     Size  Location     Type
  5389 ;;		None
  5390 ;; Return value:  Size  Location     Type
  5391 ;;		None               void
  5392 ;; Registers used:
  5393 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5394 ;; Tracked objects:
  5395 ;;		On entry : 0/0
  5396 ;;		On exit  : 0/0
  5397 ;;		Unchanged: 0/0
  5398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5403 ;;Total ram usage:        0 bytes
  5404 ;; Hardware stack levels used:    1
  5405 ;; Hardware stack levels required when called:   10
  5406 ;; This function calls:
  5407 ;;		_CANisTxReady
  5408 ;;		_CANsendMessage
  5409 ;;		_LCD_clear
  5410 ;;		_LCD_goto_line
  5411 ;;		_LCD_initialize
  5412 ;;		_LCD_write_integer
  5413 ;;		_LCD_write_message
  5414 ;;		_LCD_write_string
  5415 ;;		___fldiv
  5416 ;;		___xxtofl
  5417 ;;		_delay_ms
  5418 ;;		_sprintf
  5419 ;; This function is called by:
  5420 ;;		_main
  5421 ;; This function uses a non-reentrant model
  5422 ;;
  5423                           
  5424                           	psect	text7
  5425  014D7E                     __ptext7:
  5426                           	opt stack 0
  5427  014D7E                     _LCD_Handler:
  5428                           	opt stack 20
  5429  014D7E                     l8467:
  5430  014D7E  ECE4  F0AE         	call	_CANisTxReady	;wreg free
  5431  014D82  06E8               	decf	wreg,f,c
  5432  014D84  A4D8               	btfss	status,2,c
  5433  014D86  D7FB               	goto	l8467
  5434                           
  5435                           ;RemoteCan.c: 207: CANsendMessage(0b00000000110, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  5436  014D88  0E06               	movlw	6
  5437  014D8A  0100               	movlb	0	; () banked
  5438  014D8C  6F6E               	movwf	CANsendMessage@identifier& (0+255),b
  5439  014D8E  0E00               	movlw	0
  5440  014D90  6F6F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  5441  014D92  0E00               	movlw	0
  5442  014D94  6F70               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  5443  014D96  0E00               	movlw	0
  5444  014D98  6F71               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  5445  014D9A  0EEF               	movlw	low _data_speed
  5446  014D9C  0100               	movlb	0	; () banked
  5447  014D9E  6F72               	movwf	CANsendMessage@data& (0+255),b
  5448  014DA0  0E00               	movlw	high _data_speed
  5449  014DA2  0100               	movlb	0	; () banked
  5450  014DA4  6F73               	movwf	(CANsendMessage@data+1)& (0+255),b
  5451  014DA6  0E08               	movlw	8
  5452  014DA8  0100               	movlb	0	; () banked
  5453  014DAA  6F74               	movwf	CANsendMessage@dataLength& (0+255),b
  5454  014DAC  0EFC               	movlw	252
  5455  014DAE  0100               	movlb	0	; () banked
  5456  014DB0  6F75               	movwf	CANsendMessage@flags& (0+255),b
  5457  014DB2  ECCD  F089         	call	_CANsendMessage	;wreg free
  5458                           
  5459                           ;RemoteCan.c: 209: actual_speed_kmh = ((actual_speed) / 278.0);
  5460  014DB6  C0E6  F06E         	movff	_actual_speed,___xxtofl@val
  5461  014DBA  C0E7  F06F         	movff	_actual_speed+1,___xxtofl@val+1
  5462  014DBE  0100               	movlb	0	; () banked
  5463  014DC0  6B70               	clrf	(___xxtofl@val+2)& (0+255),b
  5464  014DC2  6B71               	clrf	(___xxtofl@val+3)& (0+255),b
  5465  014DC4  0E00               	movlw	0
  5466  014DC6  ECBA  F0A1         	call	___xxtofl
  5467  014DCA  C06E  F07C         	movff	?___xxtofl,___fldiv@b
  5468  014DCE  C06F  F07D         	movff	?___xxtofl+1,___fldiv@b+1
  5469  014DD2  C070  F07E         	movff	?___xxtofl+2,___fldiv@b+2
  5470  014DD6  C071  F07F         	movff	?___xxtofl+3,___fldiv@b+3
  5471  014DDA  0E00               	movlw	0
  5472  014DDC  0100               	movlb	0	; () banked
  5473  014DDE  6F80               	movwf	___fldiv@a& (0+255),b
  5474  014DE0  0E00               	movlw	0
  5475  014DE2  6F81               	movwf	(___fldiv@a+1)& (0+255),b
  5476  014DE4  0E8B               	movlw	139
  5477  014DE6  6F82               	movwf	(___fldiv@a+2)& (0+255),b
  5478  014DE8  0E43               	movlw	67
  5479  014DEA  6F83               	movwf	(___fldiv@a+3)& (0+255),b
  5480  014DEC  EC90  F09C         	call	___fldiv	;wreg free
  5481  014DF0  C07C  F00E         	movff	?___fldiv,_actual_speed_kmh
  5482  014DF4  C07D  F00F         	movff	?___fldiv+1,_actual_speed_kmh+1
  5483  014DF8  C07E  F010         	movff	?___fldiv+2,_actual_speed_kmh+2
  5484  014DFC  C07F  F011         	movff	?___fldiv+3,_actual_speed_kmh+3
  5485                           
  5486                           ;RemoteCan.c: 211: LCD_clear();
  5487  014E00  ECA3  F0AE         	call	_LCD_clear	;wreg free
  5488                           
  5489                           ;RemoteCan.c: 212: delay_ms(1);
  5490  014E04  0E00               	movlw	0
  5491  014E06  0100               	movlb	0	; () banked
  5492  014E08  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
  5493  014E0A  0E01               	movlw	1
  5494  014E0C  6F74               	movwf	delay_ms@value_ms& (0+255),b
  5495  014E0E  EC1C  F0AE         	call	_delay_ms	;wreg free
  5496                           
  5497                           ;RemoteCan.c: 213: LCD_initialize(16);
  5498  014E12  0E10               	movlw	16
  5499  014E14  EC80  F0A7         	call	_LCD_initialize
  5500                           
  5501                           ;RemoteCan.c: 214: LCD_goto_line(1);
  5502  014E18  0E01               	movlw	1
  5503  014E1A  EC66  F0A9         	call	_LCD_goto_line
  5504                           
  5505                           ;RemoteCan.c: 216: LCD_write_integer(set_speed,6,0x00);
  5506  014E1E  C0EA  F086         	movff	_set_speed,LCD_write_integer@value	;volatile
  5507  014E22  C0EB  F087         	movff	_set_speed+1,LCD_write_integer@value+1	;volatile
  5508  014E26  0E06               	movlw	6
  5509  014E28  0100               	movlb	0	; () banked
  5510  014E2A  6F88               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  5511  014E2C  0E00               	movlw	0
  5512  014E2E  0100               	movlb	0	; () banked
  5513  014E30  6F89               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  5514  014E32  EC84  F0A3         	call	_LCD_write_integer	;wreg free
  5515                           
  5516                           ;RemoteCan.c: 217: LCD_goto_line(2);
  5517  014E36  0E02               	movlw	2
  5518  014E38  EC66  F0A9         	call	_LCD_goto_line
  5519                           
  5520                           ;RemoteCan.c: 218: LCD_write_message("Direction: ");
  5521  014E3C  0ECE               	movlw	low STR_5
  5522  014E3E  0100               	movlb	0	; () banked
  5523  014E40  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  5524  014E42  0EFF               	movlw	high STR_5
  5525  014E44  0100               	movlb	0	; () banked
  5526  014E46  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5527  014E48  EC70  F0AE         	call	_LCD_write_message	;wreg free
  5528                           
  5529                           ;RemoteCan.c: 219: if (switch_position != 0) {
  5530  014E4C  0100               	movlb	0	; () banked
  5531  014E4E  51ED               	movf	_switch_position& (0+255),w,b	;volatile
  5532  014E50  B4D8               	btfsc	status,2,c
  5533  014E52  D016               	goto	l8495
  5534                           
  5535                           ; BSR set to: 0
  5536                           ;RemoteCan.c: 220: if (dir == 0) {
  5537  014E54  0100               	movlb	0	; () banked
  5538  014E56  51EC               	movf	_dir& (0+255),w,b	;volatile
  5539  014E58  A4D8               	btfss	status,2,c
  5540  014E5A  D009               	goto	l8493
  5541                           
  5542                           ; BSR set to: 0
  5543                           ;RemoteCan.c: 221: LCD_write_message("FWD");
  5544  014E5C  0EF8               	movlw	low STR_6
  5545  014E5E  0100               	movlb	0	; () banked
  5546  014E60  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  5547  014E62  0EFF               	movlw	high STR_6
  5548  014E64  0100               	movlb	0	; () banked
  5549  014E66  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5550  014E68  EC70  F0AE         	call	_LCD_write_message	;wreg free
  5551                           
  5552                           ;RemoteCan.c: 222: } else {
  5553  014E6C  D011               	goto	l8497
  5554  014E6E                     l8493:
  5555                           
  5556                           ;RemoteCan.c: 223: LCD_write_message("BKWD");
  5557  014E6E  0EEE               	movlw	low STR_7
  5558  014E70  0100               	movlb	0	; () banked
  5559  014E72  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  5560  014E74  0EFF               	movlw	high STR_7
  5561  014E76  0100               	movlb	0	; () banked
  5562  014E78  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5563  014E7A  EC70  F0AE         	call	_LCD_write_message	;wreg free
  5564                           
  5565                           ;RemoteCan.c: 224: }
  5566                           ;RemoteCan.c: 225: } else {
  5567  014E7E  D008               	goto	l8497
  5568  014E80                     l8495:
  5569                           
  5570                           ;RemoteCan.c: 227: LCD_write_message("P");
  5571  014E80  0EFC               	movlw	low STR_8
  5572  014E82  0100               	movlb	0	; () banked
  5573  014E84  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  5574  014E86  0EFF               	movlw	high STR_8
  5575  014E88  0100               	movlb	0	; () banked
  5576  014E8A  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5577  014E8C  EC70  F0AE         	call	_LCD_write_message	;wreg free
  5578  014E90                     l8497:
  5579                           
  5580                           ;RemoteCan.c: 228: }
  5581                           ;RemoteCan.c: 230: LCD_goto_line(3);
  5582  014E90  0E03               	movlw	3
  5583  014E92  EC66  F0A9         	call	_LCD_goto_line
  5584                           
  5585                           ;RemoteCan.c: 231: sprintf(str, "Speed: %.3f", actual_speed_kmh);
  5586  014E96  0E0F               	movlw	low _str
  5587  014E98  0100               	movlb	0	; () banked
  5588  014E9A  6FBE               	movwf	sprintf@sp& (0+255),b
  5589  014E9C  0E01               	movlw	high _str
  5590  014E9E  0100               	movlb	0	; () banked
  5591  014EA0  6FBF               	movwf	(sprintf@sp+1)& (0+255),b
  5592  014EA2  0EDA               	movlw	low STR_9
  5593  014EA4  0100               	movlb	0	; () banked
  5594  014EA6  6FC0               	movwf	sprintf@f& (0+255),b
  5595  014EA8  0EFF               	movlw	high STR_9
  5596  014EAA  0100               	movlb	0	; () banked
  5597  014EAC  6FC1               	movwf	(sprintf@f+1)& (0+255),b
  5598  014EAE  C00E  F0C2         	movff	_actual_speed_kmh,?_sprintf+4
  5599  014EB2  C00F  F0C3         	movff	_actual_speed_kmh+1,?_sprintf+5
  5600  014EB6  C010  F0C4         	movff	_actual_speed_kmh+2,?_sprintf+6
  5601  014EBA  C011  F0C5         	movff	_actual_speed_kmh+3,?_sprintf+7
  5602  014EBE  EC83  F085         	call	_sprintf	;wreg free
  5603                           
  5604                           ;RemoteCan.c: 232: str[11] = '\0';
  5605  014EC2  0E00               	movlw	0
  5606  014EC4  0101               	movlb	1	; () banked
  5607  014EC6  6F1A               	movwf	(_str+11)& (0+255),b
  5608                           
  5609                           ; BSR set to: 1
  5610                           ;RemoteCan.c: 233: LCD_write_string(str);
  5611  014EC8  0E0F               	movlw	low _str
  5612  014ECA  0100               	movlb	0	; () banked
  5613  014ECC  6F7F               	movwf	LCD_write_string@buffer& (0+255),b
  5614  014ECE  0E01               	movlw	high _str
  5615  014ED0  0100               	movlb	0	; () banked
  5616  014ED2  6F80               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  5617  014ED4  ECD1  F0AE         	call	_LCD_write_string	;wreg free
  5618                           
  5619                           ;RemoteCan.c: 234: LCD_write_message("Km/h");
  5620  014ED8  0EF3               	movlw	low STR_10
  5621  014EDA  0100               	movlb	0	; () banked
  5622  014EDC  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  5623  014EDE  0EFF               	movlw	high STR_10
  5624  014EE0  0100               	movlb	0	; () banked
  5625  014EE2  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5626  014EE4  EC70  F0AE         	call	_LCD_write_message	;wreg free
  5627                           
  5628                           ;RemoteCan.c: 235: LCD_goto_line(4);
  5629  014EE8  0E04               	movlw	4
  5630  014EEA  EC66  F0A9         	call	_LCD_goto_line
  5631                           
  5632                           ;RemoteCan.c: 236: LCD_write_message("====================");
  5633  014EEE  0EAB               	movlw	low STR_1
  5634  014EF0  0100               	movlb	0	; () banked
  5635  014EF2  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  5636  014EF4  0EFF               	movlw	high STR_1
  5637  014EF6  0100               	movlb	0	; () banked
  5638  014EF8  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5639  014EFA  EC70  F0AE         	call	_LCD_write_message	;wreg free
  5640  014EFE  0012               	return		;funcret
  5641  014F00                     __end_of_LCD_Handler:
  5642                           	opt stack 0
  5643                           tblptru	equ	0xFF8
  5644                           tblptrh	equ	0xFF7
  5645                           tblptrl	equ	0xFF6
  5646                           tablat	equ	0xFF5
  5647                           intcon	equ	0xFF2
  5648                           postinc0	equ	0xFEE
  5649                           wreg	equ	0xFE8
  5650                           status	equ	0xFD8
  5651                           
  5652 ;; *************** function _sprintf *****************
  5653 ;; Defined at:
  5654 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  5655 ;; Parameters:    Size  Location     Type
  5656 ;;  sp              2   94[BANK0 ] PTR unsigned char 
  5657 ;;		 -> str(12), 
  5658 ;;  f               2   96[BANK0 ] PTR const unsigned char 
  5659 ;;		 -> STR_9(12), 
  5660 ;; Auto vars:     Size  Location     Type
  5661 ;;  fval            4   20[BANK1 ] PTR const unsigned char 
  5662 ;;  tmpval          4   14[BANK1 ] struct .
  5663 ;;  val             4    8[BANK1 ] unsigned long 
  5664 ;;  cp              3    0        PTR const unsigned char 
  5665 ;;  prec            2   18[BANK1 ] int 
  5666 ;;  exp             2   12[BANK1 ] int 
  5667 ;;  flag            2    6[BANK1 ] unsigned short 
  5668 ;;  ap              2    4[BANK1 ] PTR void [1]
  5669 ;;		 -> ?_sprintf(2), 
  5670 ;;  len             2    0        unsigned int 
  5671 ;;  width           2    0        int 
  5672 ;;  c               1   24[BANK1 ] char 
  5673 ;;  d               1    0        unsigned char 
  5674 ;; Return value:  Size  Location     Type
  5675 ;;                  2   94[BANK0 ] int 
  5676 ;; Registers used:
  5677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5678 ;; Tracked objects:
  5679 ;;		On entry : 0/0
  5680 ;;		On exit  : 0/0
  5681 ;;		Unchanged: 0/0
  5682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5683 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5684 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0
  5685 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5686 ;;      Totals:         0      10      25       0       0       0       0       0       0       0       0       0       
      +0       0
  5687 ;;Total ram usage:       35 bytes
  5688 ;; Hardware stack levels used:    1
  5689 ;; Hardware stack levels required when called:    5
  5690 ;; This function calls:
  5691 ;;		___awdiv
  5692 ;;		___fladd
  5693 ;;		___flge
  5694 ;;		___flmul
  5695 ;;		___flneg
  5696 ;;		___flsub
  5697 ;;		___fltol
  5698 ;;		___lldiv
  5699 ;;		___llmod
  5700 ;;		___wmul
  5701 ;;		___xxtofl
  5702 ;;		__div_to_l_
  5703 ;;		__tdiv_to_l_
  5704 ;;		_fround
  5705 ;;		_isdigit
  5706 ;;		_scale
  5707 ;; This function is called by:
  5708 ;;		_LCD_Handler
  5709 ;; This function uses a non-reentrant model
  5710 ;;
  5711                           
  5712                           	psect	text8
  5713  010B06                     __ptext8:
  5714                           	opt stack 0
  5715  010B06                     _sprintf:
  5716                           	opt stack 24
  5717                           
  5718                           ;doprnt.c: 494: va_list ap;
  5719                           ;doprnt.c: 499: signed char c;
  5720                           ;doprnt.c: 501: int width;
  5721                           ;doprnt.c: 504: int prec;
  5722                           ;doprnt.c: 508: unsigned short flag;
  5723                           ;doprnt.c: 515: char d;
  5724                           ;doprnt.c: 516: double fval;
  5725                           ;doprnt.c: 517: int exp;
  5726                           ;doprnt.c: 523: union {
  5727                           ;doprnt.c: 524: unsigned long vd;
  5728                           ;doprnt.c: 525: double integ;
  5729                           ;doprnt.c: 526: } tmpval;
  5730                           ;doprnt.c: 528: unsigned long val;
  5731                           ;doprnt.c: 529: unsigned len;
  5732                           ;doprnt.c: 530: const char * cp;
  5733                           ;doprnt.c: 533: *ap = __va_start();
  5734                           
  5735                           ;incstack = 0
  5736  010B06  0EC2               	movlw	low (?_sprintf+4)
  5737  010B08  0101               	movlb	1	; () banked
  5738  010B0A  6F1F               	movwf	sprintf@ap& (0+255),b
  5739  010B0C  0E00               	movlw	high (?_sprintf+4)
  5740  010B0E  0101               	movlb	1	; () banked
  5741  010B10  6F20               	movwf	(sprintf@ap+1)& (0+255),b
  5742                           
  5743                           ;doprnt.c: 536: while(c = *f++) {
  5744  010B12  EFB5  F089         	goto	l8373
  5745  010B16                     l8175:
  5746                           
  5747                           ; BSR set to: 1
  5748                           ;doprnt.c: 538: if(c != '%')
  5749  010B16  0E25               	movlw	37
  5750  010B18  0101               	movlb	1	; () banked
  5751  010B1A  1933               	xorwf	sprintf@c& (0+255),w,b
  5752  010B1C  B4D8               	btfsc	status,2,c
  5753  010B1E  D008               	goto	l8181
  5754                           
  5755                           ; BSR set to: 1
  5756                           ;doprnt.c: 540: {
  5757                           ;doprnt.c: 541: ((*sp++ = (c)));
  5758  010B20  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  5759  010B24  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  5760  010B28  C133  FFDF         	movff	sprintf@c,indf2
  5761  010B2C  EFB2  F089         	goto	l8371
  5762  010B30                     l8181:
  5763                           
  5764                           ;doprnt.c: 543: }
  5765                           ;doprnt.c: 548: flag = 0;
  5766  010B30  0E00               	movlw	0
  5767  010B32  0101               	movlb	1	; () banked
  5768  010B34  6F22               	movwf	(sprintf@flag+1)& (0+255),b
  5769  010B36  0E00               	movlw	0
  5770  010B38  6F21               	movwf	sprintf@flag& (0+255),b
  5771                           
  5772                           ; BSR set to: 1
  5773                           ;doprnt.c: 611: if(*f == '.') {
  5774  010B3A  C0C0  FFF6         	movff	sprintf@f,tblptrl
  5775  010B3E  C0C1  FFF7         	movff	sprintf@f+1,tblptrh
  5776  010B42                     	if	0	;tblptru may be non-zero
  5777  010B42                     	endif
  5778  010B42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5779  010B42  0E00               	movlw	low (__mediumconst shr (0+16))
  5780  010B44  6EF8               	movwf	tblptru,c
  5781  010B46                     	endif
  5782  010B46  0008               	tblrd		*
  5783  010B48  50F5               	movf	tablat,w,c
  5784  010B4A  0A2E               	xorlw	46
  5785  010B4C  A4D8               	btfss	status,2,c
  5786  010B4E  D03D               	goto	l8195
  5787                           
  5788                           ; BSR set to: 1
  5789                           ;doprnt.c: 612: flag |= 0x4000;
  5790  010B50  0101               	movlb	1	; () banked
  5791  010B52  8D22               	bsf	(sprintf@flag+1)& (0+255),6,b
  5792                           
  5793                           ;doprnt.c: 613: f++;
  5794  010B54  0100               	movlb	0	; () banked
  5795  010B56  4BC0               	infsnz	sprintf@f& (0+255),f,b
  5796  010B58  2BC1               	incf	(sprintf@f+1)& (0+255),f,b
  5797                           
  5798                           ; BSR set to: 0
  5799                           ;doprnt.c: 620: {
  5800                           ;doprnt.c: 621: prec = 0;
  5801  010B5A  0E00               	movlw	0
  5802  010B5C  0101               	movlb	1	; () banked
  5803  010B5E  6F2E               	movwf	(sprintf@prec+1)& (0+255),b
  5804  010B60  0E00               	movlw	0
  5805  010B62  6F2D               	movwf	sprintf@prec& (0+255),b
  5806                           
  5807                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  5808  010B64  D025               	goto	l8193
  5809  010B66                     l8189:
  5810                           
  5811                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  5812  010B66  C12D  F06E         	movff	sprintf@prec,___wmul@multiplier
  5813  010B6A  C12E  F06F         	movff	sprintf@prec+1,___wmul@multiplier+1
  5814  010B6E  0E00               	movlw	0
  5815  010B70  0100               	movlb	0	; () banked
  5816  010B72  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5817  010B74  0E0A               	movlw	10
  5818  010B76  6F70               	movwf	___wmul@multiplicand& (0+255),b
  5819  010B78  EC55  F0AE         	call	___wmul	;wreg free
  5820  010B7C  C0C0  FFF6         	movff	sprintf@f,tblptrl
  5821  010B80  C0C1  FFF7         	movff	sprintf@f+1,tblptrh
  5822  010B84                     	if	0	;tblptru may be non-zero
  5823  010B84                     	endif
  5824  010B84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5825  010B84  0E00               	movlw	low (__mediumconst shr (0+16))
  5826  010B86  6EF8               	movwf	tblptru,c
  5827  010B88                     	endif
  5828  010B88  0008               	tblrd		*
  5829  010B8A  50F5               	movf	tablat,w,c
  5830  010B8C  0100               	movlb	0	; () banked
  5831  010B8E  276E               	addwf	?___wmul& (0+255),f,b
  5832  010B90  0E00               	movlw	0
  5833  010B92  0100               	movlb	0	; () banked
  5834  010B94  236F               	addwfc	(?___wmul+1)& (0+255),f,b
  5835  010B96  0ED0               	movlw	208
  5836  010B98  0100               	movlb	0	; () banked
  5837  010B9A  256E               	addwf	?___wmul& (0+255),w,b
  5838  010B9C  0101               	movlb	1	; () banked
  5839  010B9E  6F2D               	movwf	sprintf@prec& (0+255),b
  5840  010BA0  0EFF               	movlw	255
  5841  010BA2  0100               	movlb	0	; () banked
  5842  010BA4  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  5843  010BA6  0101               	movlb	1	; () banked
  5844  010BA8  6F2E               	movwf	(sprintf@prec+1)& (0+255),b
  5845                           
  5846                           ; BSR set to: 1
  5847  010BAA  0100               	movlb	0	; () banked
  5848  010BAC  4BC0               	infsnz	sprintf@f& (0+255),f,b
  5849  010BAE  2BC1               	incf	(sprintf@f+1)& (0+255),f,b
  5850  010BB0                     l8193:
  5851  010BB0  C0C0  FFF6         	movff	sprintf@f,tblptrl
  5852  010BB4  C0C1  FFF7         	movff	sprintf@f+1,tblptrh
  5853  010BB8                     	if	0	;tblptru may be non-zero
  5854  010BB8                     	endif
  5855  010BB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5856  010BB8  0E00               	movlw	low (__mediumconst shr (0+16))
  5857  010BBA  6EF8               	movwf	tblptru,c
  5858  010BBC                     	endif
  5859  010BBC  0008               	tblrd		*
  5860  010BBE  50F5               	movf	tablat,w,c
  5861  010BC0  ECBC  F0AE         	call	_isdigit
  5862  010BC4  A0D8               	btfss	status,0,c
  5863  010BC6  D00C               	goto	l8203
  5864  010BC8  D7CE               	goto	l8189
  5865  010BCA                     l8195:
  5866                           
  5867                           ;doprnt.c: 626: prec = 0;
  5868  010BCA  0E00               	movlw	0
  5869  010BCC  0101               	movlb	1	; () banked
  5870  010BCE  6F2E               	movwf	(sprintf@prec+1)& (0+255),b
  5871  010BD0  0E00               	movlw	0
  5872  010BD2  6F2D               	movwf	sprintf@prec& (0+255),b
  5873                           
  5874                           ; BSR set to: 1
  5875                           ;doprnt.c: 628: flag |= 0x1000;
  5876  010BD4  0101               	movlb	1	; () banked
  5877  010BD6  8922               	bsf	(sprintf@flag+1)& (0+255),4,b
  5878                           
  5879                           ; BSR set to: 1
  5880                           ;doprnt.c: 630: }
  5881                           ;doprnt.c: 635: switch(c = *f++) {
  5882  010BD8  D003               	goto	l8203
  5883  010BDA                     l8199:
  5884                           
  5885                           ; BSR set to: 1
  5886                           ;doprnt.c: 663: flag |= 0x400;
  5887  010BDA  0101               	movlb	1	; () banked
  5888  010BDC  8522               	bsf	(sprintf@flag+1)& (0+255),2,b
  5889                           
  5890                           ;doprnt.c: 664: break;
  5891  010BDE  D015               	goto	l8205
  5892  010BE0                     l8203:
  5893  010BE0  C0C0  FFF6         	movff	sprintf@f,tblptrl
  5894  010BE4  C0C1  FFF7         	movff	sprintf@f+1,tblptrh
  5895  010BE8  0100               	movlb	0	; () banked
  5896  010BEA  4BC0               	infsnz	sprintf@f& (0+255),f,b
  5897  010BEC  2BC1               	incf	(sprintf@f+1)& (0+255),f,b
  5898  010BEE                     	if	0	;tblptru may be non-zero
  5899  010BEE                     	endif
  5900  010BEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5901  010BEE  0E00               	movlw	low (__mediumconst shr (0+16))
  5902  010BF0  6EF8               	movwf	tblptru,c
  5903  010BF2                     	endif
  5904  010BF2  0008               	tblrd		*
  5905  010BF4  CFF5 F133          	movff	tablat,sprintf@c
  5906  010BF8  0101               	movlb	1	; () banked
  5907  010BFA  5133               	movf	sprintf@c& (0+255),w,b
  5908                           
  5909                           ; Switch size 1, requested type "space"
  5910                           ; Number of cases is 2, Range of values is 0 to 102
  5911                           ; switch strategies available:
  5912                           ; Name         Instructions Cycles
  5913                           ; simple_byte            7     4 (average)
  5914                           ;	Chosen strategy is simple_byte
  5915  010BFC  0A00               	xorlw	0	; case 0
  5916  010BFE  B4D8               	btfsc	status,2,c
  5917  010C00  D3C5               	goto	l8375
  5918  010C02  0A66               	xorlw	102	; case 102
  5919  010C04  B4D8               	btfsc	status,2,c
  5920  010C06  D7E9               	goto	l8199
  5921  010C08  D3B0               	goto	l8373
  5922  010C0A                     l8205:
  5923                           
  5924                           ; BSR set to: 1
  5925                           ;doprnt.c: 825: if(flag & (0x700)) {
  5926  010C0A  0E07               	movlw	7
  5927  010C0C  0101               	movlb	1	; () banked
  5928  010C0E  1522               	andwf	(sprintf@flag+1)& (0+255),w,b
  5929  010C10  B4D8               	btfsc	status,2,c
  5930  010C12  D353               	goto	l8353
  5931                           
  5932                           ; BSR set to: 1
  5933                           ;doprnt.c: 827: if(flag & 0x1000)
  5934  010C14  0101               	movlb	1	; () banked
  5935  010C16  A922               	btfss	(sprintf@flag+1)& (0+255),4,b
  5936  010C18  D005               	goto	l8211
  5937                           
  5938                           ; BSR set to: 1
  5939                           ;doprnt.c: 829: prec = 6;
  5940  010C1A  0E00               	movlw	0
  5941  010C1C  0101               	movlb	1	; () banked
  5942  010C1E  6F2E               	movwf	(sprintf@prec+1)& (0+255),b
  5943  010C20  0E06               	movlw	6
  5944  010C22  6F2D               	movwf	sprintf@prec& (0+255),b
  5945  010C24                     l8211:
  5946                           
  5947                           ; BSR set to: 1
  5948                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  5949  010C24  C11F  FFD9         	movff	sprintf@ap,fsr2l
  5950  010C28  C120  FFDA         	movff	sprintf@ap+1,fsr2h
  5951  010C2C  CFDE F12F          	movff	postinc2,sprintf@fval
  5952  010C30  CFDE F130          	movff	postinc2,sprintf@fval+1
  5953  010C34  CFDE F131          	movff	postinc2,sprintf@fval+2
  5954  010C38  CFDE F132          	movff	postinc2,sprintf@fval+3
  5955                           
  5956                           ; BSR set to: 1
  5957  010C3C  0E04               	movlw	4
  5958  010C3E  0101               	movlb	1	; () banked
  5959  010C40  271F               	addwf	sprintf@ap& (0+255),f,b
  5960  010C42  0E00               	movlw	0
  5961  010C44  2320               	addwfc	(sprintf@ap+1)& (0+255),f,b
  5962                           
  5963                           ; BSR set to: 1
  5964                           ;doprnt.c: 831: if(fval < 0.0) {
  5965  010C46  0101               	movlb	1	; () banked
  5966  010C48  AF32               	btfss	(sprintf@fval+3)& (0+255),7,b
  5967  010C4A  D015               	goto	l8221
  5968                           
  5969                           ; BSR set to: 1
  5970                           ;doprnt.c: 832: fval = -fval;
  5971  010C4C  C12F  F06E         	movff	sprintf@fval,___flneg@f1
  5972  010C50  C130  F06F         	movff	sprintf@fval+1,___flneg@f1+1
  5973  010C54  C131  F070         	movff	sprintf@fval+2,___flneg@f1+2
  5974  010C58  C132  F071         	movff	sprintf@fval+3,___flneg@f1+3
  5975  010C5C  EC39  F0AE         	call	___flneg	;wreg free
  5976  010C60  C06E  F12F         	movff	?___flneg,sprintf@fval
  5977  010C64  C06F  F130         	movff	?___flneg+1,sprintf@fval+1
  5978  010C68  C070  F131         	movff	?___flneg+2,sprintf@fval+2
  5979  010C6C  C071  F132         	movff	?___flneg+3,sprintf@fval+3
  5980                           
  5981                           ;doprnt.c: 833: flag |= 0x03;
  5982  010C70  0E03               	movlw	3
  5983  010C72  0101               	movlb	1	; () banked
  5984  010C74  1321               	iorwf	sprintf@flag& (0+255),f,b
  5985  010C76                     l8221:
  5986                           
  5987                           ; BSR set to: 1
  5988                           ;doprnt.c: 834: }
  5989                           ;doprnt.c: 835: exp = 0;
  5990  010C76  0E00               	movlw	0
  5991  010C78  0101               	movlb	1	; () banked
  5992  010C7A  6F28               	movwf	(sprintf@exp+1)& (0+255),b
  5993  010C7C  0E00               	movlw	0
  5994  010C7E  6F27               	movwf	sprintf@exp& (0+255),b
  5995                           
  5996                           ; BSR set to: 1
  5997                           ;doprnt.c: 836: if( fval!=0) {
  5998  010C80  0101               	movlb	1	; () banked
  5999  010C82  512F               	movf	sprintf@fval& (0+255),w,b
  6000  010C84  0101               	movlb	1	; () banked
  6001  010C86  1130               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6002  010C88  0101               	movlb	1	; () banked
  6003  010C8A  1131               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6004  010C8C  0101               	movlb	1	; () banked
  6005  010C8E  1132               	iorwf	(sprintf@fval+3)& (0+255),w,b
  6006  010C90  B4D8               	btfsc	status,2,c
  6007  010C92  D08E               	goto	l8249
  6008                           
  6009                           ; BSR set to: 1
  6010                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  6011  010C94  0101               	movlb	1	; () banked
  6012  010C96  3531               	rlcf	(sprintf@fval+2)& (0+255),w,b
  6013  010C98  3532               	rlcf	(sprintf@fval+3)& (0+255),w,b
  6014  010C9A  0F82               	addlw	130
  6015  010C9C  0101               	movlb	1	; () banked
  6016  010C9E  6F27               	movwf	sprintf@exp& (0+255),b
  6017  010CA0  0101               	movlb	1	; () banked
  6018  010CA2  6B28               	clrf	(sprintf@exp+1)& (0+255),b
  6019  010CA4  0EFF               	movlw	255
  6020  010CA6  2328               	addwfc	(sprintf@exp+1)& (0+255),f,b
  6021                           
  6022                           ; BSR set to: 1
  6023                           ;doprnt.c: 838: exp--;
  6024  010CA8  0101               	movlb	1	; () banked
  6025  010CAA  0727               	decf	sprintf@exp& (0+255),f,b
  6026  010CAC  A0D8               	btfss	status,0,c
  6027  010CAE  0728               	decf	(sprintf@exp+1)& (0+255),f,b
  6028                           
  6029                           ; BSR set to: 1
  6030                           ;doprnt.c: 839: exp *= 3;
  6031  010CB0  C127  F06E         	movff	sprintf@exp,___wmul@multiplier
  6032  010CB4  C128  F06F         	movff	sprintf@exp+1,___wmul@multiplier+1
  6033  010CB8  0E00               	movlw	0
  6034  010CBA  0100               	movlb	0	; () banked
  6035  010CBC  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6036  010CBE  0E03               	movlw	3
  6037  010CC0  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6038  010CC2  EC55  F0AE         	call	___wmul	;wreg free
  6039  010CC6  C06E  F127         	movff	?___wmul,sprintf@exp
  6040  010CCA  C06F  F128         	movff	?___wmul+1,sprintf@exp+1
  6041                           
  6042                           ;doprnt.c: 840: exp /= 10;
  6043  010CCE  C127  F074         	movff	sprintf@exp,___awdiv@dividend
  6044  010CD2  C128  F075         	movff	sprintf@exp+1,___awdiv@dividend+1
  6045  010CD6  0E00               	movlw	0
  6046  010CD8  0100               	movlb	0	; () banked
  6047  010CDA  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  6048  010CDC  0E0A               	movlw	10
  6049  010CDE  6F76               	movwf	___awdiv@divisor& (0+255),b
  6050  010CE0  EC48  F0AA         	call	___awdiv	;wreg free
  6051  010CE4  C074  F127         	movff	?___awdiv,sprintf@exp
  6052  010CE8  C075  F128         	movff	?___awdiv+1,sprintf@exp+1
  6053                           
  6054                           ;doprnt.c: 841: if(exp < 0)
  6055  010CEC  0101               	movlb	1	; () banked
  6056  010CEE  AF28               	btfss	(sprintf@exp+1)& (0+255),7,b
  6057  010CF0  D004               	goto	l8237
  6058                           
  6059                           ; BSR set to: 1
  6060                           ;doprnt.c: 842: exp--;
  6061  010CF2  0101               	movlb	1	; () banked
  6062  010CF4  0727               	decf	sprintf@exp& (0+255),f,b
  6063  010CF6  A0D8               	btfss	status,0,c
  6064  010CF8  0728               	decf	(sprintf@exp+1)& (0+255),f,b
  6065  010CFA                     l8237:
  6066                           
  6067                           ; BSR set to: 1
  6068                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  6069  010CFA  0101               	movlb	1	; () banked
  6070  010CFC  5127               	movf	sprintf@exp& (0+255),w,b
  6071  010CFE  0800               	sublw	0
  6072  010D00  ECDB  F090         	call	_scale
  6073  010D04  C095  F129         	movff	?_scale,sprintf@tmpval
  6074  010D08  C096  F12A         	movff	?_scale+1,sprintf@tmpval+1
  6075  010D0C  C097  F12B         	movff	?_scale+2,sprintf@tmpval+2
  6076  010D10  C098  F12C         	movff	?_scale+3,sprintf@tmpval+3
  6077                           
  6078                           ;doprnt.c: 847: tmpval.integ *= fval;
  6079  010D14  C129  F07C         	movff	sprintf@tmpval,___flmul@b
  6080  010D18  C12A  F07D         	movff	sprintf@tmpval+1,___flmul@b+1
  6081  010D1C  C12B  F07E         	movff	sprintf@tmpval+2,___flmul@b+2
  6082  010D20  C12C  F07F         	movff	sprintf@tmpval+3,___flmul@b+3
  6083  010D24  C12F  F080         	movff	sprintf@fval,___flmul@a
  6084  010D28  C130  F081         	movff	sprintf@fval+1,___flmul@a+1
  6085  010D2C  C131  F082         	movff	sprintf@fval+2,___flmul@a+2
  6086  010D30  C132  F083         	movff	sprintf@fval+3,___flmul@a+3
  6087  010D34  EC42  F098         	call	___flmul	;wreg free
  6088  010D38  C07C  F129         	movff	?___flmul,sprintf@tmpval
  6089  010D3C  C07D  F12A         	movff	?___flmul+1,sprintf@tmpval+1
  6090  010D40  C07E  F12B         	movff	?___flmul+2,sprintf@tmpval+2
  6091  010D44  C07F  F12C         	movff	?___flmul+3,sprintf@tmpval+3
  6092                           
  6093                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  6094  010D48  C129  F06E         	movff	sprintf@tmpval,___flge@ff1
  6095  010D4C  C12A  F06F         	movff	sprintf@tmpval+1,___flge@ff1+1
  6096  010D50  C12B  F070         	movff	sprintf@tmpval+2,___flge@ff1+2
  6097  010D54  C12C  F071         	movff	sprintf@tmpval+3,___flge@ff1+3
  6098  010D58  0E00               	movlw	0
  6099  010D5A  0100               	movlb	0	; () banked
  6100  010D5C  6F72               	movwf	___flge@ff2& (0+255),b
  6101  010D5E  0E00               	movlw	0
  6102  010D60  6F73               	movwf	(___flge@ff2+1)& (0+255),b
  6103  010D62  0E80               	movlw	128
  6104  010D64  6F74               	movwf	(___flge@ff2+2)& (0+255),b
  6105  010D66  0E3F               	movlw	63
  6106  010D68  6F75               	movwf	(___flge@ff2+3)& (0+255),b
  6107  010D6A  EC33  F0A5         	call	___flge	;wreg free
  6108  010D6E  0100               	movlb	0	; () banked
  6109  010D70  B0D8               	btfsc	status,0,c
  6110  010D72  D005               	goto	l8245
  6111                           
  6112                           ; BSR set to: 0
  6113                           ;doprnt.c: 849: exp--;
  6114  010D74  0101               	movlb	1	; () banked
  6115  010D76  0727               	decf	sprintf@exp& (0+255),f,b
  6116  010D78  A0D8               	btfss	status,0,c
  6117  010D7A  0728               	decf	(sprintf@exp+1)& (0+255),f,b
  6118  010D7C  D019               	goto	l8249
  6119  010D7E                     l8245:
  6120                           
  6121                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  6122  010D7E  C129  F06E         	movff	sprintf@tmpval,___flge@ff1
  6123  010D82  C12A  F06F         	movff	sprintf@tmpval+1,___flge@ff1+1
  6124  010D86  C12B  F070         	movff	sprintf@tmpval+2,___flge@ff1+2
  6125  010D8A  C12C  F071         	movff	sprintf@tmpval+3,___flge@ff1+3
  6126  010D8E  0E00               	movlw	0
  6127  010D90  0100               	movlb	0	; () banked
  6128  010D92  6F72               	movwf	___flge@ff2& (0+255),b
  6129  010D94  0E00               	movlw	0
  6130  010D96  6F73               	movwf	(___flge@ff2+1)& (0+255),b
  6131  010D98  0E20               	movlw	32
  6132  010D9A  6F74               	movwf	(___flge@ff2+2)& (0+255),b
  6133  010D9C  0E41               	movlw	65
  6134  010D9E  6F75               	movwf	(___flge@ff2+3)& (0+255),b
  6135  010DA0  EC33  F0A5         	call	___flge	;wreg free
  6136  010DA4  0100               	movlb	0	; () banked
  6137  010DA6  A0D8               	btfss	status,0,c
  6138  010DA8  D003               	goto	l8249
  6139                           
  6140                           ; BSR set to: 0
  6141                           ;doprnt.c: 851: exp++;
  6142  010DAA  0101               	movlb	1	; () banked
  6143  010DAC  4B27               	infsnz	sprintf@exp& (0+255),f,b
  6144  010DAE  2B28               	incf	(sprintf@exp+1)& (0+255),f,b
  6145  010DB0                     l8249:
  6146                           
  6147                           ;doprnt.c: 852: }
  6148                           ;doprnt.c: 1112: if(prec <= 12)
  6149  010DB0  0101               	movlb	1	; () banked
  6150  010DB2  BF2E               	btfsc	(sprintf@prec+1)& (0+255),7,b
  6151  010DB4  D008               	goto	l8251
  6152  010DB6  0101               	movlb	1	; () banked
  6153  010DB8  512E               	movf	(sprintf@prec+1)& (0+255),w,b
  6154  010DBA  E123               	bnz	l8253
  6155  010DBC  0E0D               	movlw	13
  6156  010DBE  0101               	movlb	1	; () banked
  6157  010DC0  5D2D               	subwf	sprintf@prec& (0+255),w,b
  6158  010DC2  B0D8               	btfsc	status,0,c
  6159  010DC4  D01E               	goto	l8253
  6160  010DC6                     l8251:
  6161                           
  6162                           ; BSR set to: 1
  6163                           ;doprnt.c: 1113: fval += fround(prec);
  6164  010DC6  C12F  F0A2         	movff	sprintf@fval,___fladd@b
  6165  010DCA  C130  F0A3         	movff	sprintf@fval+1,___fladd@b+1
  6166  010DCE  C131  F0A4         	movff	sprintf@fval+2,___fladd@b+2
  6167  010DD2  C132  F0A5         	movff	sprintf@fval+3,___fladd@b+3
  6168  010DD6  0101               	movlb	1	; () banked
  6169  010DD8  512D               	movf	sprintf@prec& (0+255),w,b
  6170  010DDA  EC3F  F0A0         	call	_fround
  6171  010DDE  C095  F0A6         	movff	?_fround,___fladd@a
  6172  010DE2  C096  F0A7         	movff	?_fround+1,___fladd@a+1
  6173  010DE6  C097  F0A8         	movff	?_fround+2,___fladd@a+2
  6174  010DEA  C098  F0A9         	movff	?_fround+3,___fladd@a+3
  6175  010DEE  ECEE  F095         	call	___fladd	;wreg free
  6176  010DF2  C0A2  F12F         	movff	?___fladd,sprintf@fval
  6177  010DF6  C0A3  F130         	movff	?___fladd+1,sprintf@fval+1
  6178  010DFA  C0A4  F131         	movff	?___fladd+2,sprintf@fval+2
  6179  010DFE  C0A5  F132         	movff	?___fladd+3,sprintf@fval+3
  6180  010E02                     l8253:
  6181                           
  6182                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  6183  010E02  0101               	movlb	1	; () banked
  6184  010E04  BF28               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6185  010E06  D008               	goto	l8255
  6186  010E08  0101               	movlb	1	; () banked
  6187  010E0A  5128               	movf	(sprintf@exp+1)& (0+255),w,b
  6188  010E0C  E12E               	bnz	l8261
  6189  010E0E  0E0A               	movlw	10
  6190  010E10  0101               	movlb	1	; () banked
  6191  010E12  5D27               	subwf	sprintf@exp& (0+255),w,b
  6192  010E14  B0D8               	btfsc	status,0,c
  6193  010E16  D029               	goto	l8261
  6194  010E18                     l8255:
  6195                           
  6196                           ; BSR set to: 1
  6197  010E18  0101               	movlb	1	; () banked
  6198  010E1A  512F               	movf	sprintf@fval& (0+255),w,b
  6199  010E1C  0101               	movlb	1	; () banked
  6200  010E1E  1130               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6201  010E20  0101               	movlb	1	; () banked
  6202  010E22  1131               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6203  010E24  0101               	movlb	1	; () banked
  6204  010E26  1132               	iorwf	(sprintf@fval+3)& (0+255),w,b
  6205  010E28  B4D8               	btfsc	status,2,c
  6206  010E2A  D06D               	goto	l8275
  6207                           
  6208                           ; BSR set to: 1
  6209  010E2C  C12F  F09E         	movff	sprintf@fval,___fltol@f1
  6210  010E30  C130  F09F         	movff	sprintf@fval+1,___fltol@f1+1
  6211  010E34  C131  F0A0         	movff	sprintf@fval+2,___fltol@f1+2
  6212  010E38  C132  F0A1         	movff	sprintf@fval+3,___fltol@f1+3
  6213  010E3C  ECE0  F0A8         	call	___fltol	;wreg free
  6214  010E40  0100               	movlb	0	; () banked
  6215  010E42  519E               	movf	?___fltol& (0+255),w,b
  6216  010E44  0100               	movlb	0	; () banked
  6217  010E46  119F               	iorwf	(?___fltol+1)& (0+255),w,b
  6218  010E48  0100               	movlb	0	; () banked
  6219  010E4A  11A0               	iorwf	(?___fltol+2)& (0+255),w,b
  6220  010E4C  0100               	movlb	0	; () banked
  6221  010E4E  11A1               	iorwf	(?___fltol+3)& (0+255),w,b
  6222  010E50  A4D8               	btfss	status,2,c
  6223  010E52  D059               	goto	l8275
  6224                           
  6225                           ; BSR set to: 0
  6226  010E54  0101               	movlb	1	; () banked
  6227  010E56  BF28               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6228  010E58  D056               	goto	l8275
  6229  010E5A  0101               	movlb	1	; () banked
  6230  010E5C  5128               	movf	(sprintf@exp+1)& (0+255),w,b
  6231  010E5E  E105               	bnz	l8261
  6232  010E60  0E02               	movlw	2
  6233  010E62  0101               	movlb	1	; () banked
  6234  010E64  5D27               	subwf	sprintf@exp& (0+255),w,b
  6235  010E66  A0D8               	btfss	status,0,c
  6236  010E68  D04E               	goto	l8275
  6237  010E6A                     l8261:
  6238                           
  6239                           ; BSR set to: 1
  6240                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  6241  010E6A  C129  F06E         	movff	sprintf@tmpval,___flge@ff1
  6242  010E6E  C12A  F06F         	movff	sprintf@tmpval+1,___flge@ff1+1
  6243  010E72  C12B  F070         	movff	sprintf@tmpval+2,___flge@ff1+2
  6244  010E76  C12C  F071         	movff	sprintf@tmpval+3,___flge@ff1+3
  6245  010E7A  0E5F               	movlw	95
  6246  010E7C  0100               	movlb	0	; () banked
  6247  010E7E  6F72               	movwf	___flge@ff2& (0+255),b
  6248  010E80  0E70               	movlw	112
  6249  010E82  6F73               	movwf	(___flge@ff2+1)& (0+255),b
  6250  010E84  0E89               	movlw	137
  6251  010E86  6F74               	movwf	(___flge@ff2+2)& (0+255),b
  6252  010E88  0E40               	movlw	64
  6253  010E8A  6F75               	movwf	(___flge@ff2+3)& (0+255),b
  6254  010E8C  EC33  F0A5         	call	___flge	;wreg free
  6255  010E90  0100               	movlb	0	; () banked
  6256  010E92  B0D8               	btfsc	status,0,c
  6257  010E94  D003               	goto	l8265
  6258                           
  6259                           ; BSR set to: 0
  6260                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  6261  010E96  0101               	movlb	1	; () banked
  6262  010E98  0EF7               	movlw	247
  6263  010E9A  D002               	goto	L3
  6264  010E9C                     l8265:
  6265                           
  6266                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  6267  010E9C  0101               	movlb	1	; () banked
  6268  010E9E  0EF8               	movlw	248
  6269  010EA0                     L3:
  6270  010EA0  2727               	addwf	sprintf@exp& (0+255),f,b
  6271  010EA2  0EFF               	movlw	255
  6272  010EA4  2328               	addwfc	(sprintf@exp+1)& (0+255),f,b
  6273                           
  6274                           ; BSR set to: 1
  6275                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  6276                           
  6277                           ; BSR set to: 1
  6278  010EA6  0101               	movlb	1	; () banked
  6279  010EA8  5127               	movf	sprintf@exp& (0+255),w,b
  6280  010EAA  ECDB  F090         	call	_scale
  6281  010EAE  C095  F129         	movff	?_scale,sprintf@tmpval
  6282  010EB2  C096  F12A         	movff	?_scale+1,sprintf@tmpval+1
  6283  010EB6  C097  F12B         	movff	?_scale+2,sprintf@tmpval+2
  6284  010EBA  C098  F12C         	movff	?_scale+3,sprintf@tmpval+3
  6285  010EBE  C12F  F06E         	movff	sprintf@fval,__div_to_l_@f1
  6286  010EC2  C130  F06F         	movff	sprintf@fval+1,__div_to_l_@f1+1
  6287  010EC6  C131  F070         	movff	sprintf@fval+2,__div_to_l_@f1+2
  6288  010ECA  C132  F071         	movff	sprintf@fval+3,__div_to_l_@f1+3
  6289  010ECE  C129  F072         	movff	sprintf@tmpval,__div_to_l_@f2
  6290  010ED2  C12A  F073         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  6291  010ED6  C12B  F074         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  6292  010EDA  C12C  F075         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  6293  010EDE  ECFB  F0A5         	call	__div_to_l_	;wreg free
  6294  010EE2  C06E  F123         	movff	?__div_to_l_,sprintf@val
  6295  010EE6  C06F  F124         	movff	?__div_to_l_+1,sprintf@val+1
  6296  010EEA  C070  F125         	movff	?__div_to_l_+2,sprintf@val+2
  6297  010EEE  C071  F126         	movff	?__div_to_l_+3,sprintf@val+3
  6298                           
  6299                           ;doprnt.c: 1129: fval = 0.0;
  6300  010EF2  0E00               	movlw	0
  6301  010EF4  0101               	movlb	1	; () banked
  6302  010EF6  6F2F               	movwf	sprintf@fval& (0+255),b
  6303  010EF8  0E00               	movlw	0
  6304  010EFA  6F30               	movwf	(sprintf@fval+1)& (0+255),b
  6305  010EFC  0E00               	movlw	0
  6306  010EFE  6F31               	movwf	(sprintf@fval+2)& (0+255),b
  6307  010F00  0E00               	movlw	0
  6308  010F02  6F32               	movwf	(sprintf@fval+3)& (0+255),b
  6309                           
  6310                           ;doprnt.c: 1130: } else {
  6311  010F04  D03C               	goto	l8279
  6312  010F06                     l8275:
  6313                           
  6314                           ;doprnt.c: 1131: val = (unsigned long)fval;
  6315  010F06  C12F  F09E         	movff	sprintf@fval,___fltol@f1
  6316  010F0A  C130  F09F         	movff	sprintf@fval+1,___fltol@f1+1
  6317  010F0E  C131  F0A0         	movff	sprintf@fval+2,___fltol@f1+2
  6318  010F12  C132  F0A1         	movff	sprintf@fval+3,___fltol@f1+3
  6319  010F16  ECE0  F0A8         	call	___fltol	;wreg free
  6320  010F1A  C09E  F123         	movff	?___fltol,sprintf@val
  6321  010F1E  C09F  F124         	movff	?___fltol+1,sprintf@val+1
  6322  010F22  C0A0  F125         	movff	?___fltol+2,sprintf@val+2
  6323  010F26  C0A1  F126         	movff	?___fltol+3,sprintf@val+3
  6324                           
  6325                           ;doprnt.c: 1132: fval -= (double)val;
  6326  010F2A  C12F  F0B6         	movff	sprintf@fval,___flsub@b
  6327  010F2E  C130  F0B7         	movff	sprintf@fval+1,___flsub@b+1
  6328  010F32  C131  F0B8         	movff	sprintf@fval+2,___flsub@b+2
  6329  010F36  C132  F0B9         	movff	sprintf@fval+3,___flsub@b+3
  6330  010F3A  C123  F06E         	movff	sprintf@val,___xxtofl@val
  6331  010F3E  C124  F06F         	movff	sprintf@val+1,___xxtofl@val+1
  6332  010F42  C125  F070         	movff	sprintf@val+2,___xxtofl@val+2
  6333  010F46  C126  F071         	movff	sprintf@val+3,___xxtofl@val+3
  6334  010F4A  0E00               	movlw	0
  6335  010F4C  ECBA  F0A1         	call	___xxtofl
  6336  010F50  C06E  F0BA         	movff	?___xxtofl,___flsub@a
  6337  010F54  C06F  F0BB         	movff	?___xxtofl+1,___flsub@a+1
  6338  010F58  C070  F0BC         	movff	?___xxtofl+2,___flsub@a+2
  6339  010F5C  C071  F0BD         	movff	?___xxtofl+3,___flsub@a+3
  6340  010F60  EC96  F0AD         	call	___flsub	;wreg free
  6341  010F64  C0B6  F12F         	movff	?___flsub,sprintf@fval
  6342  010F68  C0B7  F130         	movff	?___flsub+1,sprintf@fval+1
  6343  010F6C  C0B8  F131         	movff	?___flsub+2,sprintf@fval+2
  6344  010F70  C0B9  F132         	movff	?___flsub+3,sprintf@fval+3
  6345                           
  6346                           ;doprnt.c: 1133: exp = 0;
  6347  010F74  0E00               	movlw	0
  6348  010F76  0101               	movlb	1	; () banked
  6349  010F78  6F28               	movwf	(sprintf@exp+1)& (0+255),b
  6350  010F7A  0E00               	movlw	0
  6351  010F7C  6F27               	movwf	sprintf@exp& (0+255),b
  6352  010F7E                     l8279:
  6353                           
  6354                           ; BSR set to: 1
  6355                           ;doprnt.c: 1134: }
  6356                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  6357  010F7E  0E01               	movlw	1
  6358  010F80  0101               	movlb	1	; () banked
  6359  010F82  6F33               	movwf	sprintf@c& (0+255),b
  6360  010F84                     l8281:
  6361                           
  6362                           ; BSR set to: 1
  6363  010F84  0E0A               	movlw	10
  6364  010F86  0101               	movlb	1	; () banked
  6365  010F88  1933               	xorwf	sprintf@c& (0+255),w,b
  6366  010F8A  B4D8               	btfsc	status,2,c
  6367  010F8C  D021               	goto	l8293
  6368                           
  6369                           ; BSR set to: 1
  6370                           ;doprnt.c: 1137: if(val < dpowers[c])
  6371                           
  6372                           ; BSR set to: 1
  6373                           
  6374                           ; BSR set to: 1
  6375  010F8E  0101               	movlb	1	; () banked
  6376  010F90  5133               	movf	sprintf@c& (0+255),w,b
  6377  010F92  0D04               	mullw	4
  6378  010F94  0E59               	movlw	low _dpowers
  6379  010F96  24F3               	addwf	prodl,w,c
  6380  010F98  6EF6               	movwf	tblptrl,c
  6381  010F9A  0EFF               	movlw	high _dpowers
  6382  010F9C  20F4               	addwfc	prodh,w,c
  6383  010F9E  6EF7               	movwf	tblptrh,c
  6384  010FA0                     	if	1	;There are 3 active tblptr bytes
  6385  010FA0  6AF8               	clrf	tblptru,c
  6386  010FA2  0E00               	movlw	low (__mediumconst shr (0+16))
  6387  010FA4  22F8               	addwfc	tblptru,f,c
  6388  010FA6                     	endif
  6389  010FA6  0009               	tblrd		*+
  6390  010FA8  50F5               	movf	tablat,w,c
  6391  010FAA  0101               	movlb	1	; () banked
  6392  010FAC  5D23               	subwf	sprintf@val& (0+255),w,b
  6393  010FAE  0009               	tblrd		*+
  6394  010FB0  50F5               	movf	tablat,w,c
  6395  010FB2  0101               	movlb	1	; () banked
  6396  010FB4  5924               	subwfb	(sprintf@val+1)& (0+255),w,b
  6397  010FB6  0009               	tblrd		*+
  6398  010FB8  50F5               	movf	tablat,w,c
  6399  010FBA  0101               	movlb	1	; () banked
  6400  010FBC  5925               	subwfb	(sprintf@val+2)& (0+255),w,b
  6401  010FBE  0009               	tblrd		*+
  6402  010FC0  50F5               	movf	tablat,w,c
  6403  010FC2  0101               	movlb	1	; () banked
  6404  010FC4  5926               	subwfb	(sprintf@val+3)& (0+255),w,b
  6405  010FC6  A0D8               	btfss	status,0,c
  6406  010FC8  D003               	goto	l8293
  6407                           
  6408                           ; BSR set to: 1
  6409                           
  6410                           ; BSR set to: 1
  6411                           
  6412                           ; BSR set to: 1
  6413                           ;doprnt.c: 1138: break;
  6414  010FCA  0101               	movlb	1	; () banked
  6415  010FCC  2B33               	incf	sprintf@c& (0+255),f,b
  6416  010FCE  D7DA               	goto	l8281
  6417  010FD0                     l8293:
  6418                           
  6419                           ; BSR set to: 1
  6420                           ;doprnt.c: 1175: {
  6421                           ;doprnt.c: 1188: if(flag & 0x03)
  6422  010FD0  0E03               	movlw	3
  6423  010FD2  0101               	movlb	1	; () banked
  6424  010FD4  1521               	andwf	sprintf@flag& (0+255),w,b
  6425  010FD6  0100               	movlb	0	; () banked
  6426  010FD8  6FC6               	movwf	??_sprintf& (0+255),b
  6427  010FDA  0E00               	movlw	0
  6428  010FDC  0101               	movlb	1	; () banked
  6429  010FDE  1522               	andwf	(sprintf@flag+1)& (0+255),w,b
  6430  010FE0  0100               	movlb	0	; () banked
  6431  010FE2  6FC7               	movwf	(??_sprintf+1)& (0+255),b
  6432  010FE4  0100               	movlb	0	; () banked
  6433  010FE6  51C6               	movf	??_sprintf& (0+255),w,b
  6434  010FE8  0100               	movlb	0	; () banked
  6435  010FEA  11C7               	iorwf	(??_sprintf+1)& (0+255),w,b
  6436  010FEC  B4D8               	btfsc	status,2,c
  6437  010FEE  D058               	goto	l8307
  6438                           
  6439                           ; BSR set to: 0
  6440                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  6441  010FF0  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  6442  010FF4  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  6443  010FF8  0E2D               	movlw	45
  6444  010FFA  D050               	goto	L4
  6445  010FFC                     l8297:
  6446                           
  6447                           ; BSR set to: 0
  6448  010FFC  0100               	movlb	0	; () banked
  6449  010FFE  4BBE               	infsnz	sprintf@sp& (0+255),f,b
  6450  011000  2BBF               	incf	(sprintf@sp+1)& (0+255),f,b
  6451                           
  6452                           ; BSR set to: 0
  6453                           ;doprnt.c: 1195: }
  6454                           ;doprnt.c: 1196: while(c--) {
  6455  011002  D04E               	goto	l8307
  6456  011004                     l8299:
  6457                           
  6458                           ;doprnt.c: 1200: {
  6459                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  6460  011004  C123  F06E         	movff	sprintf@val,___lldiv@dividend
  6461  011008  C124  F06F         	movff	sprintf@val+1,___lldiv@dividend+1
  6462  01100C  C125  F070         	movff	sprintf@val+2,___lldiv@dividend+2
  6463  011010  C126  F071         	movff	sprintf@val+3,___lldiv@dividend+3
  6464  011014  0101               	movlb	1	; () banked
  6465  011016  5133               	movf	sprintf@c& (0+255),w,b
  6466  011018  0D04               	mullw	4
  6467  01101A  0E59               	movlw	low _dpowers
  6468  01101C  24F3               	addwf	prodl,w,c
  6469  01101E  6EF6               	movwf	tblptrl,c
  6470  011020  0EFF               	movlw	high _dpowers
  6471  011022  20F4               	addwfc	prodh,w,c
  6472  011024  6EF7               	movwf	tblptrh,c
  6473  011026                     	if	1	;There are 3 active tblptr bytes
  6474  011026  6AF8               	clrf	tblptru,c
  6475  011028  0E00               	movlw	low (__mediumconst shr (0+16))
  6476  01102A  22F8               	addwfc	tblptru,f,c
  6477  01102C                     	endif
  6478  01102C  0009               	tblrd		*+
  6479  01102E  CFF5 F072          	movff	tablat,___lldiv@divisor
  6480  011032  0009               	tblrd		*+
  6481  011034  CFF5 F073          	movff	tablat,___lldiv@divisor+1
  6482  011038  0009               	tblrd		*+
  6483  01103A  CFF5 F074          	movff	tablat,___lldiv@divisor+2
  6484  01103E  000A               	tblrd		*-
  6485  011040  CFF5 F075          	movff	tablat,___lldiv@divisor+3
  6486  011044  EC06  F0AB         	call	___lldiv	;wreg free
  6487  011048  C06E  F129         	movff	?___lldiv,sprintf@tmpval
  6488  01104C  C06F  F12A         	movff	?___lldiv+1,sprintf@tmpval+1
  6489  011050  C070  F12B         	movff	?___lldiv+2,sprintf@tmpval+2
  6490  011054  C071  F12C         	movff	?___lldiv+3,sprintf@tmpval+3
  6491                           
  6492                           ;doprnt.c: 1202: tmpval.vd %= 10;
  6493  011058  C129  F06E         	movff	sprintf@tmpval,___llmod@dividend
  6494  01105C  C12A  F06F         	movff	sprintf@tmpval+1,___llmod@dividend+1
  6495  011060  C12B  F070         	movff	sprintf@tmpval+2,___llmod@dividend+2
  6496  011064  C12C  F071         	movff	sprintf@tmpval+3,___llmod@dividend+3
  6497  011068  0E0A               	movlw	10
  6498  01106A  0100               	movlb	0	; () banked
  6499  01106C  6F72               	movwf	___llmod@divisor& (0+255),b
  6500  01106E  0E00               	movlw	0
  6501  011070  6F73               	movwf	(___llmod@divisor+1)& (0+255),b
  6502  011072  0E00               	movlw	0
  6503  011074  6F74               	movwf	(___llmod@divisor+2)& (0+255),b
  6504  011076  0E00               	movlw	0
  6505  011078  6F75               	movwf	(___llmod@divisor+3)& (0+255),b
  6506  01107A  EC67  F0AC         	call	___llmod	;wreg free
  6507  01107E  C06E  F129         	movff	?___llmod,sprintf@tmpval
  6508  011082  C06F  F12A         	movff	?___llmod+1,sprintf@tmpval+1
  6509  011086  C070  F12B         	movff	?___llmod+2,sprintf@tmpval+2
  6510  01108A  C071  F12C         	movff	?___llmod+3,sprintf@tmpval+3
  6511                           
  6512                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  6513  01108E  0101               	movlb	1	; () banked
  6514  011090  5129               	movf	sprintf@tmpval& (0+255),w,b
  6515  011092  0F30               	addlw	48
  6516  011094  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  6517  011098  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  6518  01109C                     L4:
  6519  01109C  6EDF               	movwf	indf2,c
  6520  01109E  D7AE               	goto	l8297
  6521  0110A0                     l8307:
  6522                           
  6523                           ; BSR set to: 0
  6524  0110A0  0101               	movlb	1	; () banked
  6525  0110A2  0733               	decf	sprintf@c& (0+255),f,b
  6526  0110A4  0101               	movlb	1	; () banked
  6527  0110A6  2933               	incf	sprintf@c& (0+255),w,b
  6528  0110A8  B4D8               	btfsc	status,2,c
  6529  0110AA  D00E               	goto	l8315
  6530  0110AC  D7AB               	goto	l8299
  6531  0110AE                     l8309:
  6532                           
  6533                           ; BSR set to: 1
  6534                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  6535  0110AE  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  6536  0110B2  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  6537  0110B6  0E30               	movlw	48
  6538  0110B8  6EDF               	movwf	indf2,c
  6539                           
  6540                           ; BSR set to: 1
  6541  0110BA  0100               	movlb	0	; () banked
  6542  0110BC  4BBE               	infsnz	sprintf@sp& (0+255),f,b
  6543  0110BE  2BBF               	incf	(sprintf@sp+1)& (0+255),f,b
  6544                           
  6545                           ; BSR set to: 0
  6546                           ;doprnt.c: 1209: exp--;
  6547  0110C0  0101               	movlb	1	; () banked
  6548  0110C2  0727               	decf	sprintf@exp& (0+255),f,b
  6549  0110C4  A0D8               	btfss	status,0,c
  6550  0110C6  0728               	decf	(sprintf@exp+1)& (0+255),f,b
  6551  0110C8                     l8315:
  6552                           
  6553                           ; BSR set to: 1
  6554  0110C8  0101               	movlb	1	; () banked
  6555  0110CA  BF28               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6556  0110CC  D007               	goto	l8317
  6557  0110CE  0101               	movlb	1	; () banked
  6558  0110D0  5128               	movf	(sprintf@exp+1)& (0+255),w,b
  6559  0110D2  E1ED               	bnz	l8309
  6560  0110D4  0101               	movlb	1	; () banked
  6561  0110D6  0527               	decf	sprintf@exp& (0+255),w,b
  6562  0110D8  B0D8               	btfsc	status,0,c
  6563  0110DA  D7E9               	goto	l8309
  6564  0110DC                     l8317:
  6565                           
  6566                           ; BSR set to: 1
  6567                           ;doprnt.c: 1210: }
  6568                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  6569  0110DC  0101               	movlb	1	; () banked
  6570  0110DE  BF2E               	btfsc	(sprintf@prec+1)& (0+255),7,b
  6571  0110E0  D00C               	goto	l893
  6572  0110E2  0101               	movlb	1	; () banked
  6573  0110E4  512E               	movf	(sprintf@prec+1)& (0+255),w,b
  6574  0110E6  E105               	bnz	u10850
  6575  0110E8  0E09               	movlw	9
  6576  0110EA  0101               	movlb	1	; () banked
  6577  0110EC  5D2D               	subwf	sprintf@prec& (0+255),w,b
  6578  0110EE  A0D8               	btfss	status,0,c
  6579  0110F0  D004               	goto	l893
  6580  0110F2                     u10850:
  6581                           
  6582                           ; BSR set to: 1
  6583                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  6584  0110F2  0E08               	movlw	8
  6585  0110F4  0101               	movlb	1	; () banked
  6586  0110F6  6F33               	movwf	sprintf@c& (0+255),b
  6587  0110F8  D002               	goto	l8321
  6588  0110FA                     l893:
  6589                           
  6590                           ; BSR set to: 1
  6591                           ;doprnt.c: 1213: else
  6592                           ;doprnt.c: 1214: c = prec;
  6593  0110FA  C12D  F133         	movff	sprintf@prec,sprintf@c
  6594  0110FE                     l8321:
  6595                           
  6596                           ; BSR set to: 1
  6597                           ;doprnt.c: 1215: prec -= c;
  6598  0110FE  0101               	movlb	1	; () banked
  6599  011100  5133               	movf	sprintf@c& (0+255),w,b
  6600  011102  0101               	movlb	1	; () banked
  6601  011104  5F2D               	subwf	sprintf@prec& (0+255),f,b
  6602  011106  0E00               	movlw	0
  6603  011108  0101               	movlb	1	; () banked
  6604  01110A  BF33               	btfsc	sprintf@c& (0+255),7,b
  6605  01110C  0EFF               	movlw	255
  6606  01110E  0101               	movlb	1	; () banked
  6607  011110  5B2E               	subwfb	(sprintf@prec+1)& (0+255),f,b
  6608                           
  6609                           ; BSR set to: 1
  6610                           ;doprnt.c: 1219: if(c)
  6611  011112  0101               	movlb	1	; () banked
  6612  011114  5133               	movf	sprintf@c& (0+255),w,b
  6613  011116  0101               	movlb	1	; () banked
  6614  011118  B4D8               	btfsc	status,2,c
  6615  01111A  D009               	goto	l8329
  6616                           
  6617                           ; BSR set to: 1
  6618                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  6619  01111C  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  6620  011120  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  6621  011124  0E2E               	movlw	46
  6622  011126  6EDF               	movwf	indf2,c
  6623                           
  6624                           ; BSR set to: 1
  6625  011128  0100               	movlb	0	; () banked
  6626  01112A  4BBE               	infsnz	sprintf@sp& (0+255),f,b
  6627  01112C  2BBF               	incf	(sprintf@sp+1)& (0+255),f,b
  6628  01112E                     l8329:
  6629                           
  6630                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  6631  01112E  0101               	movlb	1	; () banked
  6632  011130  5133               	movf	sprintf@c& (0+255),w,b
  6633  011132  ECDB  F090         	call	_scale
  6634  011136  C095  F11B         	movff	?_scale,_sprintf$4193
  6635  01113A  C096  F11C         	movff	?_scale+1,_sprintf$4193+1
  6636  01113E  C097  F11D         	movff	?_scale+2,_sprintf$4193+2
  6637  011142  C098  F11E         	movff	?_scale+3,_sprintf$4193+3
  6638                           
  6639                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  6640  011146  C12F  F080         	movff	sprintf@fval,___flmul@a
  6641  01114A  C130  F081         	movff	sprintf@fval+1,___flmul@a+1
  6642  01114E  C131  F082         	movff	sprintf@fval+2,___flmul@a+2
  6643  011152  C132  F083         	movff	sprintf@fval+3,___flmul@a+3
  6644  011156  C11B  F07C         	movff	_sprintf$4193,___flmul@b
  6645  01115A  C11C  F07D         	movff	_sprintf$4193+1,___flmul@b+1
  6646  01115E  C11D  F07E         	movff	_sprintf$4193+2,___flmul@b+2
  6647  011162  C11E  F07F         	movff	_sprintf$4193+3,___flmul@b+3
  6648  011166  EC42  F098         	call	___flmul	;wreg free
  6649  01116A  C07C  F09E         	movff	?___flmul,___fltol@f1
  6650  01116E  C07D  F09F         	movff	?___flmul+1,___fltol@f1+1
  6651  011172  C07E  F0A0         	movff	?___flmul+2,___fltol@f1+2
  6652  011176  C07F  F0A1         	movff	?___flmul+3,___fltol@f1+3
  6653  01117A  ECE0  F0A8         	call	___fltol	;wreg free
  6654  01117E  C09E  F123         	movff	?___fltol,sprintf@val
  6655  011182  C09F  F124         	movff	?___fltol+1,sprintf@val+1
  6656  011186  C0A0  F125         	movff	?___fltol+2,sprintf@val+2
  6657  01118A  C0A1  F126         	movff	?___fltol+3,sprintf@val+3
  6658                           
  6659                           ;doprnt.c: 1228: while(c--) {
  6660  01118E  D07A               	goto	l8343
  6661  011190                     l8333:
  6662                           
  6663                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  6664  011190  C123  F06E         	movff	sprintf@val,___lldiv@dividend
  6665  011194  C124  F06F         	movff	sprintf@val+1,___lldiv@dividend+1
  6666  011198  C125  F070         	movff	sprintf@val+2,___lldiv@dividend+2
  6667  01119C  C126  F071         	movff	sprintf@val+3,___lldiv@dividend+3
  6668  0111A0  0101               	movlb	1	; () banked
  6669  0111A2  5133               	movf	sprintf@c& (0+255),w,b
  6670  0111A4  0D04               	mullw	4
  6671  0111A6  0E59               	movlw	low _dpowers
  6672  0111A8  24F3               	addwf	prodl,w,c
  6673  0111AA  6EF6               	movwf	tblptrl,c
  6674  0111AC  0EFF               	movlw	high _dpowers
  6675  0111AE  20F4               	addwfc	prodh,w,c
  6676  0111B0  6EF7               	movwf	tblptrh,c
  6677  0111B2                     	if	1	;There are 3 active tblptr bytes
  6678  0111B2  6AF8               	clrf	tblptru,c
  6679  0111B4  0E00               	movlw	low (__mediumconst shr (0+16))
  6680  0111B6  22F8               	addwfc	tblptru,f,c
  6681  0111B8                     	endif
  6682  0111B8  0009               	tblrd		*+
  6683  0111BA  CFF5 F072          	movff	tablat,___lldiv@divisor
  6684  0111BE  0009               	tblrd		*+
  6685  0111C0  CFF5 F073          	movff	tablat,___lldiv@divisor+1
  6686  0111C4  0009               	tblrd		*+
  6687  0111C6  CFF5 F074          	movff	tablat,___lldiv@divisor+2
  6688  0111CA  000A               	tblrd		*-
  6689  0111CC  CFF5 F075          	movff	tablat,___lldiv@divisor+3
  6690  0111D0  EC06  F0AB         	call	___lldiv	;wreg free
  6691  0111D4  C06E  F129         	movff	?___lldiv,sprintf@tmpval
  6692  0111D8  C06F  F12A         	movff	?___lldiv+1,sprintf@tmpval+1
  6693  0111DC  C070  F12B         	movff	?___lldiv+2,sprintf@tmpval+2
  6694  0111E0  C071  F12C         	movff	?___lldiv+3,sprintf@tmpval+3
  6695                           
  6696                           ;doprnt.c: 1230: tmpval.vd %= 10;
  6697  0111E4  C129  F06E         	movff	sprintf@tmpval,___llmod@dividend
  6698  0111E8  C12A  F06F         	movff	sprintf@tmpval+1,___llmod@dividend+1
  6699  0111EC  C12B  F070         	movff	sprintf@tmpval+2,___llmod@dividend+2
  6700  0111F0  C12C  F071         	movff	sprintf@tmpval+3,___llmod@dividend+3
  6701  0111F4  0E0A               	movlw	10
  6702  0111F6  0100               	movlb	0	; () banked
  6703  0111F8  6F72               	movwf	___llmod@divisor& (0+255),b
  6704  0111FA  0E00               	movlw	0
  6705  0111FC  6F73               	movwf	(___llmod@divisor+1)& (0+255),b
  6706  0111FE  0E00               	movlw	0
  6707  011200  6F74               	movwf	(___llmod@divisor+2)& (0+255),b
  6708  011202  0E00               	movlw	0
  6709  011204  6F75               	movwf	(___llmod@divisor+3)& (0+255),b
  6710  011206  EC67  F0AC         	call	___llmod	;wreg free
  6711  01120A  C06E  F129         	movff	?___llmod,sprintf@tmpval
  6712  01120E  C06F  F12A         	movff	?___llmod+1,sprintf@tmpval+1
  6713  011212  C070  F12B         	movff	?___llmod+2,sprintf@tmpval+2
  6714  011216  C071  F12C         	movff	?___llmod+3,sprintf@tmpval+3
  6715                           
  6716                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  6717  01121A  0101               	movlb	1	; () banked
  6718  01121C  5129               	movf	sprintf@tmpval& (0+255),w,b
  6719  01121E  0F30               	addlw	48
  6720  011220  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  6721  011224  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  6722  011228  6EDF               	movwf	indf2,c
  6723                           
  6724                           ; BSR set to: 1
  6725  01122A  0100               	movlb	0	; () banked
  6726  01122C  4BBE               	infsnz	sprintf@sp& (0+255),f,b
  6727  01122E  2BBF               	incf	(sprintf@sp+1)& (0+255),f,b
  6728                           
  6729                           ; BSR set to: 0
  6730                           ;doprnt.c: 1232: val %= dpowers[c];
  6731  011230  C123  F06E         	movff	sprintf@val,___llmod@dividend
  6732  011234  C124  F06F         	movff	sprintf@val+1,___llmod@dividend+1
  6733  011238  C125  F070         	movff	sprintf@val+2,___llmod@dividend+2
  6734  01123C  C126  F071         	movff	sprintf@val+3,___llmod@dividend+3
  6735  011240  0101               	movlb	1	; () banked
  6736  011242  5133               	movf	sprintf@c& (0+255),w,b
  6737  011244  0D04               	mullw	4
  6738  011246  0E59               	movlw	low _dpowers
  6739  011248  24F3               	addwf	prodl,w,c
  6740  01124A  6EF6               	movwf	tblptrl,c
  6741  01124C  0EFF               	movlw	high _dpowers
  6742  01124E  20F4               	addwfc	prodh,w,c
  6743  011250  6EF7               	movwf	tblptrh,c
  6744  011252                     	if	1	;There are 3 active tblptr bytes
  6745  011252  6AF8               	clrf	tblptru,c
  6746  011254  0E00               	movlw	low (__mediumconst shr (0+16))
  6747  011256  22F8               	addwfc	tblptru,f,c
  6748  011258                     	endif
  6749  011258  0009               	tblrd		*+
  6750  01125A  CFF5 F072          	movff	tablat,___llmod@divisor
  6751  01125E  0009               	tblrd		*+
  6752  011260  CFF5 F073          	movff	tablat,___llmod@divisor+1
  6753  011264  0009               	tblrd		*+
  6754  011266  CFF5 F074          	movff	tablat,___llmod@divisor+2
  6755  01126A  000A               	tblrd		*-
  6756  01126C  CFF5 F075          	movff	tablat,___llmod@divisor+3
  6757  011270  EC67  F0AC         	call	___llmod	;wreg free
  6758  011274  C06E  F123         	movff	?___llmod,sprintf@val
  6759  011278  C06F  F124         	movff	?___llmod+1,sprintf@val+1
  6760  01127C  C070  F125         	movff	?___llmod+2,sprintf@val+2
  6761  011280  C071  F126         	movff	?___llmod+3,sprintf@val+3
  6762  011284                     l8343:
  6763  011284  0101               	movlb	1	; () banked
  6764  011286  0733               	decf	sprintf@c& (0+255),f,b
  6765  011288  0101               	movlb	1	; () banked
  6766  01128A  2933               	incf	sprintf@c& (0+255),w,b
  6767  01128C  B4D8               	btfsc	status,2,c
  6768  01128E  D00E               	goto	l8351
  6769  011290  D77F               	goto	l8333
  6770  011292                     l8345:
  6771                           
  6772                           ; BSR set to: 1
  6773                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  6774  011292  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  6775  011296  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  6776  01129A  0E30               	movlw	48
  6777  01129C  6EDF               	movwf	indf2,c
  6778                           
  6779                           ; BSR set to: 1
  6780  01129E  0100               	movlb	0	; () banked
  6781  0112A0  4BBE               	infsnz	sprintf@sp& (0+255),f,b
  6782  0112A2  2BBF               	incf	(sprintf@sp+1)& (0+255),f,b
  6783                           
  6784                           ; BSR set to: 0
  6785                           ;doprnt.c: 1237: prec--;
  6786  0112A4  0101               	movlb	1	; () banked
  6787  0112A6  072D               	decf	sprintf@prec& (0+255),f,b
  6788  0112A8  A0D8               	btfss	status,0,c
  6789  0112AA  072E               	decf	(sprintf@prec+1)& (0+255),f,b
  6790  0112AC                     l8351:
  6791                           
  6792                           ; BSR set to: 1
  6793  0112AC  0101               	movlb	1	; () banked
  6794  0112AE  512D               	movf	sprintf@prec& (0+255),w,b
  6795  0112B0  0101               	movlb	1	; () banked
  6796  0112B2  112E               	iorwf	(sprintf@prec+1)& (0+255),w,b
  6797  0112B4  B4D8               	btfsc	status,2,c
  6798  0112B6  D059               	goto	l8373
  6799  0112B8  D7EC               	goto	l8345
  6800  0112BA                     l8353:
  6801                           
  6802                           ; BSR set to: 1
  6803                           ;doprnt.c: 1246: }
  6804                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  6805  0112BA  0101               	movlb	1	; () banked
  6806  0112BC  512D               	movf	sprintf@prec& (0+255),w,b
  6807  0112BE  0101               	movlb	1	; () banked
  6808  0112C0  112E               	iorwf	(sprintf@prec+1)& (0+255),w,b
  6809  0112C2  A4D8               	btfss	status,2,c
  6810  0112C4  D00D               	goto	l8359
  6811                           
  6812                           ; BSR set to: 1
  6813  0112C6  0101               	movlb	1	; () banked
  6814  0112C8  5123               	movf	sprintf@val& (0+255),w,b
  6815  0112CA  0101               	movlb	1	; () banked
  6816  0112CC  1124               	iorwf	(sprintf@val+1)& (0+255),w,b
  6817  0112CE  0101               	movlb	1	; () banked
  6818  0112D0  1125               	iorwf	(sprintf@val+2)& (0+255),w,b
  6819  0112D2  0101               	movlb	1	; () banked
  6820  0112D4  1126               	iorwf	(sprintf@val+3)& (0+255),w,b
  6821  0112D6  A4D8               	btfss	status,2,c
  6822  0112D8  D003               	goto	l8359
  6823                           
  6824                           ; BSR set to: 1
  6825                           ;doprnt.c: 1291: prec++;
  6826  0112DA  0101               	movlb	1	; () banked
  6827  0112DC  4B2D               	infsnz	sprintf@prec& (0+255),f,b
  6828  0112DE  2B2E               	incf	(sprintf@prec+1)& (0+255),f,b
  6829  0112E0                     l8359:
  6830                           
  6831                           ; BSR set to: 1
  6832                           ;doprnt.c: 1339: if(c < prec)
  6833  0112E0  0E80               	movlw	128
  6834  0112E2  0101               	movlb	1	; () banked
  6835  0112E4  BF33               	btfsc	sprintf@c& (0+255),7,b
  6836  0112E6  0E7F               	movlw	127
  6837  0112E8  0100               	movlb	0	; () banked
  6838  0112EA  6FC6               	movwf	??_sprintf& (0+255),b
  6839  0112EC  0101               	movlb	1	; () banked
  6840  0112EE  512D               	movf	sprintf@prec& (0+255),w,b
  6841  0112F0  0101               	movlb	1	; () banked
  6842  0112F2  5D33               	subwf	sprintf@c& (0+255),w,b
  6843  0112F4  0101               	movlb	1	; () banked
  6844  0112F6  512E               	movf	(sprintf@prec+1)& (0+255),w,b
  6845  0112F8  0A80               	xorlw	128
  6846  0112FA  0100               	movlb	0	; () banked
  6847  0112FC  59C6               	subwfb	??_sprintf& (0+255),w,b
  6848  0112FE  B0D8               	btfsc	status,0,c
  6849  011300  D003               	goto	l8363
  6850                           
  6851                           ; BSR set to: 0
  6852                           ;doprnt.c: 1340: c = prec;
  6853  011302  C12D  F133         	movff	sprintf@prec,sprintf@c
  6854  011306  D018               	goto	l8367
  6855  011308                     l8363:
  6856                           
  6857                           ; BSR set to: 0
  6858                           ;doprnt.c: 1341: else if(prec < c)
  6859  011308  0101               	movlb	1	; () banked
  6860  01130A  512E               	movf	(sprintf@prec+1)& (0+255),w,b
  6861  01130C  0A80               	xorlw	128
  6862  01130E  0100               	movlb	0	; () banked
  6863  011310  6FC6               	movwf	??_sprintf& (0+255),b
  6864  011312  0101               	movlb	1	; () banked
  6865  011314  5133               	movf	sprintf@c& (0+255),w,b
  6866  011316  0101               	movlb	1	; () banked
  6867  011318  5D2D               	subwf	sprintf@prec& (0+255),w,b
  6868  01131A  0E80               	movlw	128
  6869  01131C  0101               	movlb	1	; () banked
  6870  01131E  BF33               	btfsc	sprintf@c& (0+255),7,b
  6871  011320  0E7F               	movlw	127
  6872  011322  0100               	movlb	0	; () banked
  6873  011324  59C6               	subwfb	??_sprintf& (0+255),w,b
  6874  011326  B0D8               	btfsc	status,0,c
  6875  011328  D007               	goto	l8367
  6876                           
  6877                           ; BSR set to: 0
  6878                           ;doprnt.c: 1342: prec = c;
  6879  01132A  0101               	movlb	1	; () banked
  6880  01132C  5133               	movf	sprintf@c& (0+255),w,b
  6881  01132E  0101               	movlb	1	; () banked
  6882  011330  6F2D               	movwf	sprintf@prec& (0+255),b
  6883  011332  6B2E               	clrf	(sprintf@prec+1)& (0+255),b
  6884  011334  BF2D               	btfsc	sprintf@prec& (0+255),7,b
  6885  011336  072E               	decf	(sprintf@prec+1)& (0+255),f,b
  6886  011338                     l8367:
  6887                           
  6888                           ;doprnt.c: 1422: {
  6889                           ;doprnt.c: 1438: if(flag & 0x03)
  6890  011338  0E03               	movlw	3
  6891  01133A  0101               	movlb	1	; () banked
  6892  01133C  1521               	andwf	sprintf@flag& (0+255),w,b
  6893  01133E  0100               	movlb	0	; () banked
  6894  011340  6FC6               	movwf	??_sprintf& (0+255),b
  6895  011342  0E00               	movlw	0
  6896  011344  0101               	movlb	1	; () banked
  6897  011346  1522               	andwf	(sprintf@flag+1)& (0+255),w,b
  6898  011348  0100               	movlb	0	; () banked
  6899  01134A  6FC7               	movwf	(??_sprintf+1)& (0+255),b
  6900  01134C  0100               	movlb	0	; () banked
  6901  01134E  51C6               	movf	??_sprintf& (0+255),w,b
  6902  011350  0100               	movlb	0	; () banked
  6903  011352  11C7               	iorwf	(??_sprintf+1)& (0+255),w,b
  6904  011354  B4D8               	btfsc	status,2,c
  6905  011356  D009               	goto	l8373
  6906                           
  6907                           ; BSR set to: 0
  6908                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  6909  011358  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  6910  01135C  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  6911  011360  0E2D               	movlw	45
  6912  011362  6EDF               	movwf	indf2,c
  6913  011364                     l8371:
  6914                           
  6915                           ; BSR set to: 0
  6916  011364  0100               	movlb	0	; () banked
  6917  011366  4BBE               	infsnz	sprintf@sp& (0+255),f,b
  6918  011368  2BBF               	incf	(sprintf@sp+1)& (0+255),f,b
  6919  01136A                     l8373:
  6920  01136A  C0C0  FFF6         	movff	sprintf@f,tblptrl
  6921  01136E  C0C1  FFF7         	movff	sprintf@f+1,tblptrh
  6922  011372  0100               	movlb	0	; () banked
  6923  011374  4BC0               	infsnz	sprintf@f& (0+255),f,b
  6924  011376  2BC1               	incf	(sprintf@f+1)& (0+255),f,b
  6925  011378                     	if	0	;tblptru may be non-zero
  6926  011378                     	endif
  6927  011378                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6928  011378  0E00               	movlw	low (__mediumconst shr (0+16))
  6929  01137A  6EF8               	movwf	tblptru,c
  6930  01137C                     	endif
  6931  01137C  0008               	tblrd		*
  6932  01137E  CFF5 F133          	movff	tablat,sprintf@c
  6933  011382  0101               	movlb	1	; () banked
  6934  011384  5133               	movf	sprintf@c& (0+255),w,b
  6935  011386  A4D8               	btfss	status,2,c
  6936  011388  EF8B  F085         	goto	l8175
  6937  01138C                     l8375:
  6938                           
  6939                           ; BSR set to: 1
  6940                           ;doprnt.c: 1538: *sp = 0;
  6941  01138C  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  6942  011390  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  6943  011394  0E00               	movlw	0
  6944  011396  6EDF               	movwf	indf2,c
  6945  011398  0012               	return	
  6946  01139A                     __end_of_sprintf:
  6947                           	opt stack 0
  6948                           tblptru	equ	0xFF8
  6949                           tblptrh	equ	0xFF7
  6950                           tblptrl	equ	0xFF6
  6951                           tablat	equ	0xFF5
  6952                           prodh	equ	0xFF4
  6953                           prodl	equ	0xFF3
  6954                           intcon	equ	0xFF2
  6955                           postinc0	equ	0xFEE
  6956                           wreg	equ	0xFE8
  6957                           indf2	equ	0xFDF
  6958                           postinc2	equ	0xFDE
  6959                           fsr2h	equ	0xFDA
  6960                           fsr2l	equ	0xFD9
  6961                           status	equ	0xFD8
  6962                           
  6963 ;; *************** function _scale *****************
  6964 ;; Defined at:
  6965 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  6966 ;; Parameters:    Size  Location     Type
  6967 ;;  scl             1    wreg     char 
  6968 ;; Auto vars:     Size  Location     Type
  6969 ;;  scl             1   61[BANK0 ] char 
  6970 ;; Return value:  Size  Location     Type
  6971 ;;                  4   53[BANK0 ] char 
  6972 ;; Registers used:
  6973 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6974 ;; Tracked objects:
  6975 ;;		On entry : 0/0
  6976 ;;		On exit  : 0/0
  6977 ;;		Unchanged: 0/0
  6978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6979 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6980 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6982 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6983 ;;Total ram usage:        9 bytes
  6984 ;; Hardware stack levels used:    1
  6985 ;; Hardware stack levels required when called:    4
  6986 ;; This function calls:
  6987 ;;		___awdiv
  6988 ;;		___awmod
  6989 ;;		___flmul
  6990 ;; This function is called by:
  6991 ;;		_sprintf
  6992 ;; This function uses a non-reentrant model
  6993 ;;
  6994                           
  6995                           	psect	text9
  6996  0121B6                     __ptext9:
  6997                           	opt stack 0
  6998  0121B6                     _scale:
  6999                           	opt stack 24
  7000                           
  7001                           ; BSR set to: 1
  7002                           ;incstack = 0
  7003                           ;scale@scl stored from wreg
  7004  0121B6  0100               	movlb	0	; () banked
  7005  0121B8  6F9D               	movwf	scale@scl& (0+255),b
  7006                           
  7007                           ;doprnt.c: 428: if(scl < 0) {
  7008  0121BA  0100               	movlb	0	; () banked
  7009  0121BC  AF9D               	btfss	scale@scl& (0+255),7,b
  7010  0121BE  D145               	goto	l7773
  7011                           
  7012                           ; BSR set to: 0
  7013                           ;doprnt.c: 429: scl = -scl;
  7014  0121C0  0100               	movlb	0	; () banked
  7015  0121C2  6D9D               	negf	scale@scl& (0+255),b
  7016                           
  7017                           ;doprnt.c: 430: if(scl>=110)
  7018  0121C4  0100               	movlb	0	; () banked
  7019  0121C6  519D               	movf	scale@scl& (0+255),w,b
  7020  0121C8  0A80               	xorlw	128
  7021  0121CA  0F12               	addlw	-238
  7022  0121CC  A0D8               	btfss	status,0,c
  7023  0121CE  D0BB               	goto	l7763
  7024                           
  7025                           ; BSR set to: 0
  7026                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7027  0121D0  0E00               	movlw	0
  7028  0121D2  0100               	movlb	0	; () banked
  7029  0121D4  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  7030  0121D6  0E0A               	movlw	10
  7031  0121D8  6F76               	movwf	___awdiv@divisor& (0+255),b
  7032  0121DA  0E00               	movlw	0
  7033  0121DC  0100               	movlb	0	; () banked
  7034  0121DE  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  7035  0121E0  0E64               	movlw	100
  7036  0121E2  6F70               	movwf	___awmod@divisor& (0+255),b
  7037  0121E4  0100               	movlb	0	; () banked
  7038  0121E6  519D               	movf	scale@scl& (0+255),w,b
  7039  0121E8  0100               	movlb	0	; () banked
  7040  0121EA  6F6E               	movwf	___awmod@dividend& (0+255),b
  7041  0121EC  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  7042  0121EE  BF6E               	btfsc	___awmod@dividend& (0+255),7,b
  7043  0121F0  076F               	decf	(___awmod@dividend+1)& (0+255),f,b
  7044  0121F2  EC16  F0AC         	call	___awmod	;wreg free
  7045  0121F6  C06E  F074         	movff	?___awmod,___awdiv@dividend
  7046  0121FA  C06F  F075         	movff	?___awmod+1,___awdiv@dividend+1
  7047  0121FE  EC48  F0AA         	call	___awdiv	;wreg free
  7048  012202  0100               	movlb	0	; () banked
  7049  012204  90D8               	bcf	status,0,c
  7050  012206  3774               	rlcf	?___awdiv& (0+255),f,b
  7051  012208  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7052  01220A  0100               	movlb	0	; () banked
  7053  01220C  90D8               	bcf	status,0,c
  7054  01220E  3774               	rlcf	?___awdiv& (0+255),f,b
  7055  012210  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7056  012212  0E24               	movlw	36
  7057  012214  0100               	movlb	0	; () banked
  7058  012216  2774               	addwf	?___awdiv& (0+255),f,b
  7059  012218  0E00               	movlw	0
  7060  01221A  0100               	movlb	0	; () banked
  7061  01221C  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  7062  01221E  0EF1               	movlw	low __npowers_
  7063  012220  0100               	movlb	0	; () banked
  7064  012222  2574               	addwf	?___awdiv& (0+255),w,b
  7065  012224  6EF6               	movwf	tblptrl,c
  7066  012226  0EFE               	movlw	high __npowers_
  7067  012228  0100               	movlb	0	; () banked
  7068  01222A  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  7069  01222C  6EF7               	movwf	tblptrh,c
  7070  01222E                     	if	1	;There are 3 active tblptr bytes
  7071  01222E  6AF8               	clrf	tblptru,c
  7072  012230  0E00               	movlw	low (__mediumconst shr (0+16))
  7073  012232  22F8               	addwfc	tblptru,f,c
  7074  012234                     	endif
  7075  012234  0009               	tblrd		*+
  7076  012236  CFF5 F080          	movff	tablat,___flmul@a
  7077  01223A  0009               	tblrd		*+
  7078  01223C  CFF5 F081          	movff	tablat,___flmul@a+1
  7079  012240  0009               	tblrd		*+
  7080  012242  CFF5 F082          	movff	tablat,___flmul@a+2
  7081  012246  000A               	tblrd		*-
  7082  012248  CFF5 F083          	movff	tablat,___flmul@a+3
  7083  01224C  0E00               	movlw	0
  7084  01224E  0100               	movlb	0	; () banked
  7085  012250  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  7086  012252  0E64               	movlw	100
  7087  012254  6F76               	movwf	___awdiv@divisor& (0+255),b
  7088  012256  0100               	movlb	0	; () banked
  7089  012258  519D               	movf	scale@scl& (0+255),w,b
  7090  01225A  0100               	movlb	0	; () banked
  7091  01225C  6F74               	movwf	___awdiv@dividend& (0+255),b
  7092  01225E  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
  7093  012260  BF74               	btfsc	___awdiv@dividend& (0+255),7,b
  7094  012262  0775               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7095  012264  EC48  F0AA         	call	___awdiv	;wreg free
  7096  012268  0100               	movlb	0	; () banked
  7097  01226A  90D8               	bcf	status,0,c
  7098  01226C  3774               	rlcf	?___awdiv& (0+255),f,b
  7099  01226E  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7100  012270  0100               	movlb	0	; () banked
  7101  012272  90D8               	bcf	status,0,c
  7102  012274  3774               	rlcf	?___awdiv& (0+255),f,b
  7103  012276  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7104  012278  0E48               	movlw	72
  7105  01227A  0100               	movlb	0	; () banked
  7106  01227C  2774               	addwf	?___awdiv& (0+255),f,b
  7107  01227E  0E00               	movlw	0
  7108  012280  0100               	movlb	0	; () banked
  7109  012282  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  7110  012284  0EF1               	movlw	low __npowers_
  7111  012286  0100               	movlb	0	; () banked
  7112  012288  2574               	addwf	?___awdiv& (0+255),w,b
  7113  01228A  6EF6               	movwf	tblptrl,c
  7114  01228C  0EFE               	movlw	high __npowers_
  7115  01228E  0100               	movlb	0	; () banked
  7116  012290  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  7117  012292  6EF7               	movwf	tblptrh,c
  7118  012294                     	if	1	;There are 3 active tblptr bytes
  7119  012294  6AF8               	clrf	tblptru,c
  7120  012296  0E00               	movlw	low (__mediumconst shr (0+16))
  7121  012298  22F8               	addwfc	tblptru,f,c
  7122  01229A                     	endif
  7123  01229A  0009               	tblrd		*+
  7124  01229C  CFF5 F07C          	movff	tablat,___flmul@b
  7125  0122A0  0009               	tblrd		*+
  7126  0122A2  CFF5 F07D          	movff	tablat,___flmul@b+1
  7127  0122A6  0009               	tblrd		*+
  7128  0122A8  CFF5 F07E          	movff	tablat,___flmul@b+2
  7129  0122AC  000A               	tblrd		*-
  7130  0122AE  CFF5 F07F          	movff	tablat,___flmul@b+3
  7131  0122B2  EC42  F098         	call	___flmul	;wreg free
  7132  0122B6  C07C  F099         	movff	?___flmul,_scale$4192
  7133  0122BA  C07D  F09A         	movff	?___flmul+1,_scale$4192+1
  7134  0122BE  C07E  F09B         	movff	?___flmul+2,_scale$4192+2
  7135  0122C2  C07F  F09C         	movff	?___flmul+3,_scale$4192+3
  7136                           
  7137                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7138  0122C6  C099  F07C         	movff	_scale$4192,___flmul@b
  7139  0122CA  C09A  F07D         	movff	_scale$4192+1,___flmul@b+1
  7140  0122CE  C09B  F07E         	movff	_scale$4192+2,___flmul@b+2
  7141  0122D2  C09C  F07F         	movff	_scale$4192+3,___flmul@b+3
  7142  0122D6  0E00               	movlw	0
  7143  0122D8  0100               	movlb	0	; () banked
  7144  0122DA  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  7145  0122DC  0E0A               	movlw	10
  7146  0122DE  6F70               	movwf	___awmod@divisor& (0+255),b
  7147  0122E0  0100               	movlb	0	; () banked
  7148  0122E2  519D               	movf	scale@scl& (0+255),w,b
  7149  0122E4  0100               	movlb	0	; () banked
  7150  0122E6  6F6E               	movwf	___awmod@dividend& (0+255),b
  7151  0122E8  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  7152  0122EA  BF6E               	btfsc	___awmod@dividend& (0+255),7,b
  7153  0122EC  076F               	decf	(___awmod@dividend+1)& (0+255),f,b
  7154  0122EE  EC16  F0AC         	call	___awmod	;wreg free
  7155  0122F2  0100               	movlb	0	; () banked
  7156  0122F4  90D8               	bcf	status,0,c
  7157  0122F6  376E               	rlcf	?___awmod& (0+255),f,b
  7158  0122F8  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7159  0122FA  0100               	movlb	0	; () banked
  7160  0122FC  90D8               	bcf	status,0,c
  7161  0122FE  376E               	rlcf	?___awmod& (0+255),f,b
  7162  012300  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7163  012302  0EF1               	movlw	low __npowers_
  7164  012304  0100               	movlb	0	; () banked
  7165  012306  256E               	addwf	?___awmod& (0+255),w,b
  7166  012308  6EF6               	movwf	tblptrl,c
  7167  01230A  0EFE               	movlw	high __npowers_
  7168  01230C  0100               	movlb	0	; () banked
  7169  01230E  216F               	addwfc	(?___awmod+1)& (0+255),w,b
  7170  012310  6EF7               	movwf	tblptrh,c
  7171  012312                     	if	1	;There are 3 active tblptr bytes
  7172  012312  6AF8               	clrf	tblptru,c
  7173  012314  0E00               	movlw	low (__mediumconst shr (0+16))
  7174  012316  22F8               	addwfc	tblptru,f,c
  7175  012318                     	endif
  7176  012318  0009               	tblrd		*+
  7177  01231A  CFF5 F080          	movff	tablat,___flmul@a
  7178  01231E  0009               	tblrd		*+
  7179  012320  CFF5 F081          	movff	tablat,___flmul@a+1
  7180  012324  0009               	tblrd		*+
  7181  012326  CFF5 F082          	movff	tablat,___flmul@a+2
  7182  01232A  000A               	tblrd		*-
  7183  01232C  CFF5 F083          	movff	tablat,___flmul@a+3
  7184  012330  EC42  F098         	call	___flmul	;wreg free
  7185  012334  C07C  F095         	movff	?___flmul,?_scale
  7186  012338  C07D  F096         	movff	?___flmul+1,?_scale+1
  7187  01233C  C07E  F097         	movff	?___flmul+2,?_scale+2
  7188  012340  C07F  F098         	movff	?___flmul+3,?_scale+3
  7189  012344  0012               	return	
  7190  012346                     l7763:
  7191                           
  7192                           ;doprnt.c: 432: else if(scl > 10)
  7193  012346  0100               	movlb	0	; () banked
  7194  012348  519D               	movf	scale@scl& (0+255),w,b
  7195  01234A  0A80               	xorlw	128
  7196  01234C  0F75               	addlw	-139
  7197  01234E  A0D8               	btfss	status,0,c
  7198  012350  D063               	goto	l7769
  7199                           
  7200                           ; BSR set to: 0
  7201                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  7202  012352  0E00               	movlw	0
  7203  012354  0100               	movlb	0	; () banked
  7204  012356  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  7205  012358  0E0A               	movlw	10
  7206  01235A  6F76               	movwf	___awdiv@divisor& (0+255),b
  7207  01235C  0100               	movlb	0	; () banked
  7208  01235E  519D               	movf	scale@scl& (0+255),w,b
  7209  012360  0100               	movlb	0	; () banked
  7210  012362  6F74               	movwf	___awdiv@dividend& (0+255),b
  7211  012364  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
  7212  012366  BF74               	btfsc	___awdiv@dividend& (0+255),7,b
  7213  012368  0775               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7214  01236A  EC48  F0AA         	call	___awdiv	;wreg free
  7215  01236E  0100               	movlb	0	; () banked
  7216  012370  90D8               	bcf	status,0,c
  7217  012372  3774               	rlcf	?___awdiv& (0+255),f,b
  7218  012374  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7219  012376  0100               	movlb	0	; () banked
  7220  012378  90D8               	bcf	status,0,c
  7221  01237A  3774               	rlcf	?___awdiv& (0+255),f,b
  7222  01237C  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7223  01237E  0E24               	movlw	36
  7224  012380  0100               	movlb	0	; () banked
  7225  012382  2774               	addwf	?___awdiv& (0+255),f,b
  7226  012384  0E00               	movlw	0
  7227  012386  0100               	movlb	0	; () banked
  7228  012388  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  7229  01238A  0EF1               	movlw	low __npowers_
  7230  01238C  0100               	movlb	0	; () banked
  7231  01238E  2574               	addwf	?___awdiv& (0+255),w,b
  7232  012390  6EF6               	movwf	tblptrl,c
  7233  012392  0EFE               	movlw	high __npowers_
  7234  012394  0100               	movlb	0	; () banked
  7235  012396  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  7236  012398  6EF7               	movwf	tblptrh,c
  7237  01239A                     	if	1	;There are 3 active tblptr bytes
  7238  01239A  6AF8               	clrf	tblptru,c
  7239  01239C  0E00               	movlw	low (__mediumconst shr (0+16))
  7240  01239E  22F8               	addwfc	tblptru,f,c
  7241  0123A0                     	endif
  7242  0123A0  0009               	tblrd		*+
  7243  0123A2  CFF5 F07C          	movff	tablat,___flmul@b
  7244  0123A6  0009               	tblrd		*+
  7245  0123A8  CFF5 F07D          	movff	tablat,___flmul@b+1
  7246  0123AC  0009               	tblrd		*+
  7247  0123AE  CFF5 F07E          	movff	tablat,___flmul@b+2
  7248  0123B2  000A               	tblrd		*-
  7249  0123B4  CFF5 F07F          	movff	tablat,___flmul@b+3
  7250  0123B8  0E00               	movlw	0
  7251  0123BA  0100               	movlb	0	; () banked
  7252  0123BC  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  7253  0123BE  0E0A               	movlw	10
  7254  0123C0  6F70               	movwf	___awmod@divisor& (0+255),b
  7255  0123C2  0100               	movlb	0	; () banked
  7256  0123C4  519D               	movf	scale@scl& (0+255),w,b
  7257  0123C6  0100               	movlb	0	; () banked
  7258  0123C8  6F6E               	movwf	___awmod@dividend& (0+255),b
  7259  0123CA  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  7260  0123CC  BF6E               	btfsc	___awmod@dividend& (0+255),7,b
  7261  0123CE  076F               	decf	(___awmod@dividend+1)& (0+255),f,b
  7262  0123D0  EC16  F0AC         	call	___awmod	;wreg free
  7263  0123D4  0100               	movlb	0	; () banked
  7264  0123D6  90D8               	bcf	status,0,c
  7265  0123D8  376E               	rlcf	?___awmod& (0+255),f,b
  7266  0123DA  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7267  0123DC  0100               	movlb	0	; () banked
  7268  0123DE  90D8               	bcf	status,0,c
  7269  0123E0  376E               	rlcf	?___awmod& (0+255),f,b
  7270  0123E2  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7271  0123E4  0EF1               	movlw	low __npowers_
  7272  0123E6  0100               	movlb	0	; () banked
  7273  0123E8  256E               	addwf	?___awmod& (0+255),w,b
  7274  0123EA  6EF6               	movwf	tblptrl,c
  7275  0123EC  0EFE               	movlw	high __npowers_
  7276  0123EE  0100               	movlb	0	; () banked
  7277  0123F0  216F               	addwfc	(?___awmod+1)& (0+255),w,b
  7278  0123F2  6EF7               	movwf	tblptrh,c
  7279  0123F4                     	if	1	;There are 3 active tblptr bytes
  7280  0123F4  6AF8               	clrf	tblptru,c
  7281  0123F6  0E00               	movlw	low (__mediumconst shr (0+16))
  7282  0123F8  22F8               	addwfc	tblptru,f,c
  7283  0123FA                     	endif
  7284  0123FA  0009               	tblrd		*+
  7285  0123FC  CFF5 F080          	movff	tablat,___flmul@a
  7286  012400  0009               	tblrd		*+
  7287  012402  CFF5 F081          	movff	tablat,___flmul@a+1
  7288  012406  0009               	tblrd		*+
  7289  012408  CFF5 F082          	movff	tablat,___flmul@a+2
  7290  01240C  000A               	tblrd		*-
  7291  01240E  CFF5 F083          	movff	tablat,___flmul@a+3
  7292  012412  EC42  F098         	call	___flmul	;wreg free
  7293  012416  D78E               	goto	L5
  7294  012418                     l7769:
  7295                           
  7296                           ;doprnt.c: 434: return _npowers_[scl];
  7297  012418  0100               	movlb	0	; () banked
  7298  01241A  519D               	movf	scale@scl& (0+255),w,b
  7299  01241C  0D04               	mullw	4
  7300  01241E  0EF1               	movlw	low __npowers_
  7301  012420  24F3               	addwf	prodl,w,c
  7302  012422  6EF6               	movwf	tblptrl,c
  7303  012424  0EFE               	movlw	high __npowers_
  7304  012426  20F4               	addwfc	prodh,w,c
  7305  012428  6EF7               	movwf	tblptrh,c
  7306  01242A                     	if	1	;There are 3 active tblptr bytes
  7307  01242A  6AF8               	clrf	tblptru,c
  7308  01242C  0E00               	movlw	low (__mediumconst shr (0+16))
  7309  01242E  22F8               	addwfc	tblptru,f,c
  7310  012430                     	endif
  7311  012430  0009               	tblrd		*+
  7312  012432  CFF5 F095          	movff	tablat,?_scale
  7313  012436  0009               	tblrd		*+
  7314  012438  CFF5 F096          	movff	tablat,?_scale+1
  7315  01243C  0009               	tblrd		*+
  7316  01243E  CFF5 F097          	movff	tablat,?_scale+2
  7317  012442  000A               	tblrd		*-
  7318  012444  CFF5 F098          	movff	tablat,?_scale+3
  7319                           
  7320                           ; BSR set to: 0
  7321  012448  0012               	return	
  7322  01244A                     l7773:
  7323                           
  7324                           ; BSR set to: 0
  7325                           ;doprnt.c: 435: }
  7326                           ;doprnt.c: 436: if(scl>=110)
  7327  01244A  0100               	movlb	0	; () banked
  7328  01244C  519D               	movf	scale@scl& (0+255),w,b
  7329  01244E  0A80               	xorlw	128
  7330  012450  0F12               	addlw	-238
  7331  012452  A0D8               	btfss	status,0,c
  7332  012454  D0BB               	goto	l7781
  7333                           
  7334                           ; BSR set to: 0
  7335                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7336  012456  0E00               	movlw	0
  7337  012458  0100               	movlb	0	; () banked
  7338  01245A  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  7339  01245C  0E0A               	movlw	10
  7340  01245E  6F76               	movwf	___awdiv@divisor& (0+255),b
  7341  012460  0E00               	movlw	0
  7342  012462  0100               	movlb	0	; () banked
  7343  012464  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  7344  012466  0E64               	movlw	100
  7345  012468  6F70               	movwf	___awmod@divisor& (0+255),b
  7346  01246A  0100               	movlb	0	; () banked
  7347  01246C  519D               	movf	scale@scl& (0+255),w,b
  7348  01246E  0100               	movlb	0	; () banked
  7349  012470  6F6E               	movwf	___awmod@dividend& (0+255),b
  7350  012472  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  7351  012474  BF6E               	btfsc	___awmod@dividend& (0+255),7,b
  7352  012476  076F               	decf	(___awmod@dividend+1)& (0+255),f,b
  7353  012478  EC16  F0AC         	call	___awmod	;wreg free
  7354  01247C  C06E  F074         	movff	?___awmod,___awdiv@dividend
  7355  012480  C06F  F075         	movff	?___awmod+1,___awdiv@dividend+1
  7356  012484  EC48  F0AA         	call	___awdiv	;wreg free
  7357  012488  0100               	movlb	0	; () banked
  7358  01248A  90D8               	bcf	status,0,c
  7359  01248C  3774               	rlcf	?___awdiv& (0+255),f,b
  7360  01248E  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7361  012490  0100               	movlb	0	; () banked
  7362  012492  90D8               	bcf	status,0,c
  7363  012494  3774               	rlcf	?___awdiv& (0+255),f,b
  7364  012496  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7365  012498  0E24               	movlw	36
  7366  01249A  0100               	movlb	0	; () banked
  7367  01249C  2774               	addwf	?___awdiv& (0+255),f,b
  7368  01249E  0E00               	movlw	0
  7369  0124A0  0100               	movlb	0	; () banked
  7370  0124A2  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  7371  0124A4  0E25               	movlw	low __powers_
  7372  0124A6  0100               	movlb	0	; () banked
  7373  0124A8  2574               	addwf	?___awdiv& (0+255),w,b
  7374  0124AA  6EF6               	movwf	tblptrl,c
  7375  0124AC  0EFF               	movlw	high __powers_
  7376  0124AE  0100               	movlb	0	; () banked
  7377  0124B0  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  7378  0124B2  6EF7               	movwf	tblptrh,c
  7379  0124B4                     	if	1	;There are 3 active tblptr bytes
  7380  0124B4  6AF8               	clrf	tblptru,c
  7381  0124B6  0E00               	movlw	low (__mediumconst shr (0+16))
  7382  0124B8  22F8               	addwfc	tblptru,f,c
  7383  0124BA                     	endif
  7384  0124BA  0009               	tblrd		*+
  7385  0124BC  CFF5 F080          	movff	tablat,___flmul@a
  7386  0124C0  0009               	tblrd		*+
  7387  0124C2  CFF5 F081          	movff	tablat,___flmul@a+1
  7388  0124C6  0009               	tblrd		*+
  7389  0124C8  CFF5 F082          	movff	tablat,___flmul@a+2
  7390  0124CC  000A               	tblrd		*-
  7391  0124CE  CFF5 F083          	movff	tablat,___flmul@a+3
  7392  0124D2  0E00               	movlw	0
  7393  0124D4  0100               	movlb	0	; () banked
  7394  0124D6  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  7395  0124D8  0E64               	movlw	100
  7396  0124DA  6F76               	movwf	___awdiv@divisor& (0+255),b
  7397  0124DC  0100               	movlb	0	; () banked
  7398  0124DE  519D               	movf	scale@scl& (0+255),w,b
  7399  0124E0  0100               	movlb	0	; () banked
  7400  0124E2  6F74               	movwf	___awdiv@dividend& (0+255),b
  7401  0124E4  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
  7402  0124E6  BF74               	btfsc	___awdiv@dividend& (0+255),7,b
  7403  0124E8  0775               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7404  0124EA  EC48  F0AA         	call	___awdiv	;wreg free
  7405  0124EE  0100               	movlb	0	; () banked
  7406  0124F0  90D8               	bcf	status,0,c
  7407  0124F2  3774               	rlcf	?___awdiv& (0+255),f,b
  7408  0124F4  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7409  0124F6  0100               	movlb	0	; () banked
  7410  0124F8  90D8               	bcf	status,0,c
  7411  0124FA  3774               	rlcf	?___awdiv& (0+255),f,b
  7412  0124FC  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7413  0124FE  0E48               	movlw	72
  7414  012500  0100               	movlb	0	; () banked
  7415  012502  2774               	addwf	?___awdiv& (0+255),f,b
  7416  012504  0E00               	movlw	0
  7417  012506  0100               	movlb	0	; () banked
  7418  012508  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  7419  01250A  0E25               	movlw	low __powers_
  7420  01250C  0100               	movlb	0	; () banked
  7421  01250E  2574               	addwf	?___awdiv& (0+255),w,b
  7422  012510  6EF6               	movwf	tblptrl,c
  7423  012512  0EFF               	movlw	high __powers_
  7424  012514  0100               	movlb	0	; () banked
  7425  012516  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  7426  012518  6EF7               	movwf	tblptrh,c
  7427  01251A                     	if	1	;There are 3 active tblptr bytes
  7428  01251A  6AF8               	clrf	tblptru,c
  7429  01251C  0E00               	movlw	low (__mediumconst shr (0+16))
  7430  01251E  22F8               	addwfc	tblptru,f,c
  7431  012520                     	endif
  7432  012520  0009               	tblrd		*+
  7433  012522  CFF5 F07C          	movff	tablat,___flmul@b
  7434  012526  0009               	tblrd		*+
  7435  012528  CFF5 F07D          	movff	tablat,___flmul@b+1
  7436  01252C  0009               	tblrd		*+
  7437  01252E  CFF5 F07E          	movff	tablat,___flmul@b+2
  7438  012532  000A               	tblrd		*-
  7439  012534  CFF5 F07F          	movff	tablat,___flmul@b+3
  7440  012538  EC42  F098         	call	___flmul	;wreg free
  7441  01253C  C07C  F099         	movff	?___flmul,_scale$4192
  7442  012540  C07D  F09A         	movff	?___flmul+1,_scale$4192+1
  7443  012544  C07E  F09B         	movff	?___flmul+2,_scale$4192+2
  7444  012548  C07F  F09C         	movff	?___flmul+3,_scale$4192+3
  7445                           
  7446                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7447  01254C  C099  F07C         	movff	_scale$4192,___flmul@b
  7448  012550  C09A  F07D         	movff	_scale$4192+1,___flmul@b+1
  7449  012554  C09B  F07E         	movff	_scale$4192+2,___flmul@b+2
  7450  012558  C09C  F07F         	movff	_scale$4192+3,___flmul@b+3
  7451  01255C  0E00               	movlw	0
  7452  01255E  0100               	movlb	0	; () banked
  7453  012560  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  7454  012562  0E0A               	movlw	10
  7455  012564  6F70               	movwf	___awmod@divisor& (0+255),b
  7456  012566  0100               	movlb	0	; () banked
  7457  012568  519D               	movf	scale@scl& (0+255),w,b
  7458  01256A  0100               	movlb	0	; () banked
  7459  01256C  6F6E               	movwf	___awmod@dividend& (0+255),b
  7460  01256E  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  7461  012570  BF6E               	btfsc	___awmod@dividend& (0+255),7,b
  7462  012572  076F               	decf	(___awmod@dividend+1)& (0+255),f,b
  7463  012574  EC16  F0AC         	call	___awmod	;wreg free
  7464  012578  0100               	movlb	0	; () banked
  7465  01257A  90D8               	bcf	status,0,c
  7466  01257C  376E               	rlcf	?___awmod& (0+255),f,b
  7467  01257E  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7468  012580  0100               	movlb	0	; () banked
  7469  012582  90D8               	bcf	status,0,c
  7470  012584  376E               	rlcf	?___awmod& (0+255),f,b
  7471  012586  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7472  012588  0E25               	movlw	low __powers_
  7473  01258A  0100               	movlb	0	; () banked
  7474  01258C  256E               	addwf	?___awmod& (0+255),w,b
  7475  01258E  6EF6               	movwf	tblptrl,c
  7476  012590  0EFF               	movlw	high __powers_
  7477  012592  0100               	movlb	0	; () banked
  7478  012594  216F               	addwfc	(?___awmod+1)& (0+255),w,b
  7479  012596  6EF7               	movwf	tblptrh,c
  7480  012598                     	if	1	;There are 3 active tblptr bytes
  7481  012598  6AF8               	clrf	tblptru,c
  7482  01259A  0E00               	movlw	low (__mediumconst shr (0+16))
  7483  01259C  22F8               	addwfc	tblptru,f,c
  7484  01259E                     	endif
  7485  01259E  0009               	tblrd		*+
  7486  0125A0  CFF5 F080          	movff	tablat,___flmul@a
  7487  0125A4  0009               	tblrd		*+
  7488  0125A6  CFF5 F081          	movff	tablat,___flmul@a+1
  7489  0125AA  0009               	tblrd		*+
  7490  0125AC  CFF5 F082          	movff	tablat,___flmul@a+2
  7491  0125B0  000A               	tblrd		*-
  7492  0125B2  CFF5 F083          	movff	tablat,___flmul@a+3
  7493  0125B6  EC42  F098         	call	___flmul	;wreg free
  7494  0125BA  C07C  F095         	movff	?___flmul,?_scale
  7495  0125BE  C07D  F096         	movff	?___flmul+1,?_scale+1
  7496  0125C2  C07E  F097         	movff	?___flmul+2,?_scale+2
  7497  0125C6  C07F  F098         	movff	?___flmul+3,?_scale+3
  7498  0125CA  0012               	return	
  7499  0125CC                     l7781:
  7500                           
  7501                           ;doprnt.c: 438: else if(scl > 10)
  7502  0125CC  0100               	movlb	0	; () banked
  7503  0125CE  519D               	movf	scale@scl& (0+255),w,b
  7504  0125D0  0A80               	xorlw	128
  7505  0125D2  0F75               	addlw	-139
  7506  0125D4  A0D8               	btfss	status,0,c
  7507  0125D6  D063               	goto	l7787
  7508                           
  7509                           ; BSR set to: 0
  7510                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  7511  0125D8  0E00               	movlw	0
  7512  0125DA  0100               	movlb	0	; () banked
  7513  0125DC  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  7514  0125DE  0E0A               	movlw	10
  7515  0125E0  6F76               	movwf	___awdiv@divisor& (0+255),b
  7516  0125E2  0100               	movlb	0	; () banked
  7517  0125E4  519D               	movf	scale@scl& (0+255),w,b
  7518  0125E6  0100               	movlb	0	; () banked
  7519  0125E8  6F74               	movwf	___awdiv@dividend& (0+255),b
  7520  0125EA  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
  7521  0125EC  BF74               	btfsc	___awdiv@dividend& (0+255),7,b
  7522  0125EE  0775               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7523  0125F0  EC48  F0AA         	call	___awdiv	;wreg free
  7524  0125F4  0100               	movlb	0	; () banked
  7525  0125F6  90D8               	bcf	status,0,c
  7526  0125F8  3774               	rlcf	?___awdiv& (0+255),f,b
  7527  0125FA  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7528  0125FC  0100               	movlb	0	; () banked
  7529  0125FE  90D8               	bcf	status,0,c
  7530  012600  3774               	rlcf	?___awdiv& (0+255),f,b
  7531  012602  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7532  012604  0E24               	movlw	36
  7533  012606  0100               	movlb	0	; () banked
  7534  012608  2774               	addwf	?___awdiv& (0+255),f,b
  7535  01260A  0E00               	movlw	0
  7536  01260C  0100               	movlb	0	; () banked
  7537  01260E  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  7538  012610  0E25               	movlw	low __powers_
  7539  012612  0100               	movlb	0	; () banked
  7540  012614  2574               	addwf	?___awdiv& (0+255),w,b
  7541  012616  6EF6               	movwf	tblptrl,c
  7542  012618  0EFF               	movlw	high __powers_
  7543  01261A  0100               	movlb	0	; () banked
  7544  01261C  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  7545  01261E  6EF7               	movwf	tblptrh,c
  7546  012620                     	if	1	;There are 3 active tblptr bytes
  7547  012620  6AF8               	clrf	tblptru,c
  7548  012622  0E00               	movlw	low (__mediumconst shr (0+16))
  7549  012624  22F8               	addwfc	tblptru,f,c
  7550  012626                     	endif
  7551  012626  0009               	tblrd		*+
  7552  012628  CFF5 F07C          	movff	tablat,___flmul@b
  7553  01262C  0009               	tblrd		*+
  7554  01262E  CFF5 F07D          	movff	tablat,___flmul@b+1
  7555  012632  0009               	tblrd		*+
  7556  012634  CFF5 F07E          	movff	tablat,___flmul@b+2
  7557  012638  000A               	tblrd		*-
  7558  01263A  CFF5 F07F          	movff	tablat,___flmul@b+3
  7559  01263E  0E00               	movlw	0
  7560  012640  0100               	movlb	0	; () banked
  7561  012642  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  7562  012644  0E0A               	movlw	10
  7563  012646  6F70               	movwf	___awmod@divisor& (0+255),b
  7564  012648  0100               	movlb	0	; () banked
  7565  01264A  519D               	movf	scale@scl& (0+255),w,b
  7566  01264C  0100               	movlb	0	; () banked
  7567  01264E  6F6E               	movwf	___awmod@dividend& (0+255),b
  7568  012650  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  7569  012652  BF6E               	btfsc	___awmod@dividend& (0+255),7,b
  7570  012654  076F               	decf	(___awmod@dividend+1)& (0+255),f,b
  7571  012656  EC16  F0AC         	call	___awmod	;wreg free
  7572  01265A  0100               	movlb	0	; () banked
  7573  01265C  90D8               	bcf	status,0,c
  7574  01265E  376E               	rlcf	?___awmod& (0+255),f,b
  7575  012660  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7576  012662  0100               	movlb	0	; () banked
  7577  012664  90D8               	bcf	status,0,c
  7578  012666  376E               	rlcf	?___awmod& (0+255),f,b
  7579  012668  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7580  01266A  0E25               	movlw	low __powers_
  7581  01266C  0100               	movlb	0	; () banked
  7582  01266E  256E               	addwf	?___awmod& (0+255),w,b
  7583  012670  6EF6               	movwf	tblptrl,c
  7584  012672  0EFF               	movlw	high __powers_
  7585  012674  0100               	movlb	0	; () banked
  7586  012676  216F               	addwfc	(?___awmod+1)& (0+255),w,b
  7587  012678  6EF7               	movwf	tblptrh,c
  7588  01267A                     	if	1	;There are 3 active tblptr bytes
  7589  01267A  6AF8               	clrf	tblptru,c
  7590  01267C  0E00               	movlw	low (__mediumconst shr (0+16))
  7591  01267E  22F8               	addwfc	tblptru,f,c
  7592  012680                     	endif
  7593  012680  0009               	tblrd		*+
  7594  012682  CFF5 F080          	movff	tablat,___flmul@a
  7595  012686  0009               	tblrd		*+
  7596  012688  CFF5 F081          	movff	tablat,___flmul@a+1
  7597  01268C  0009               	tblrd		*+
  7598  01268E  CFF5 F082          	movff	tablat,___flmul@a+2
  7599  012692  000A               	tblrd		*-
  7600  012694  CFF5 F083          	movff	tablat,___flmul@a+3
  7601  012698  EC42  F098         	call	___flmul	;wreg free
  7602  01269C  D78E               	goto	L6
  7603  01269E                     l7787:
  7604                           
  7605                           ;doprnt.c: 440: return _powers_[scl];
  7606  01269E  0100               	movlb	0	; () banked
  7607  0126A0  519D               	movf	scale@scl& (0+255),w,b
  7608  0126A2  0D04               	mullw	4
  7609  0126A4  0E25               	movlw	low __powers_
  7610  0126A6  24F3               	addwf	prodl,w,c
  7611  0126A8  6EF6               	movwf	tblptrl,c
  7612  0126AA  0EFF               	movlw	high __powers_
  7613  0126AC  20F4               	addwfc	prodh,w,c
  7614  0126AE  6EF7               	movwf	tblptrh,c
  7615  0126B0                     	if	1	;There are 3 active tblptr bytes
  7616  0126B0  6AF8               	clrf	tblptru,c
  7617  0126B2  0E00               	movlw	low (__mediumconst shr (0+16))
  7618  0126B4  22F8               	addwfc	tblptru,f,c
  7619  0126B6                     	endif
  7620  0126B6  0009               	tblrd		*+
  7621  0126B8  CFF5 F095          	movff	tablat,?_scale
  7622  0126BC  0009               	tblrd		*+
  7623  0126BE  CFF5 F096          	movff	tablat,?_scale+1
  7624  0126C2  0009               	tblrd		*+
  7625  0126C4  CFF5 F097          	movff	tablat,?_scale+2
  7626  0126C8  000A               	tblrd		*-
  7627  0126CA  CFF5 F098          	movff	tablat,?_scale+3
  7628  0126CE  0012               	return	
  7629  0126D0                     __end_of_scale:
  7630                           	opt stack 0
  7631                           tblptru	equ	0xFF8
  7632                           tblptrh	equ	0xFF7
  7633                           tblptrl	equ	0xFF6
  7634                           tablat	equ	0xFF5
  7635                           prodh	equ	0xFF4
  7636                           prodl	equ	0xFF3
  7637                           intcon	equ	0xFF2
  7638                           postinc0	equ	0xFEE
  7639                           wreg	equ	0xFE8
  7640                           indf2	equ	0xFDF
  7641                           postinc2	equ	0xFDE
  7642                           fsr2h	equ	0xFDA
  7643                           fsr2l	equ	0xFD9
  7644                           status	equ	0xFD8
  7645                           
  7646 ;; *************** function _isdigit *****************
  7647 ;; Defined at:
  7648 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  7649 ;; Parameters:    Size  Location     Type
  7650 ;;  c               1    wreg     unsigned char 
  7651 ;; Auto vars:     Size  Location     Type
  7652 ;;  c               1   16[BANK0 ] unsigned char 
  7653 ;; Return value:  Size  Location     Type
  7654 ;;		None               void
  7655 ;; Registers used:
  7656 ;;		wreg, status,2, status,0
  7657 ;; Tracked objects:
  7658 ;;		On entry : 0/0
  7659 ;;		On exit  : 0/0
  7660 ;;		Unchanged: 0/0
  7661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7663 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7664 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7665 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7666 ;;Total ram usage:        3 bytes
  7667 ;; Hardware stack levels used:    1
  7668 ;; Hardware stack levels required when called:    3
  7669 ;; This function calls:
  7670 ;;		Nothing
  7671 ;; This function is called by:
  7672 ;;		_sprintf
  7673 ;; This function uses a non-reentrant model
  7674 ;;
  7675                           
  7676                           	psect	text10
  7677  015D78                     __ptext10:
  7678                           	opt stack 0
  7679  015D78                     _isdigit:
  7680                           	opt stack 25
  7681                           
  7682                           ;incstack = 0
  7683                           ;isdigit@c stored from wreg
  7684  015D78  0100               	movlb	0	; () banked
  7685  015D7A  6F70               	movwf	isdigit@c& (0+255),b
  7686  015D7C  0E00               	movlw	0
  7687  015D7E  0100               	movlb	0	; () banked
  7688  015D80  6F6F               	movwf	_isdigit$3772& (0+255),b
  7689                           
  7690                           ; BSR set to: 0
  7691  015D82  0E3A               	movlw	58
  7692  015D84  0100               	movlb	0	; () banked
  7693  015D86  6170               	cpfslt	isdigit@c& (0+255),b
  7694  015D88  D007               	goto	l7799
  7695                           
  7696                           ; BSR set to: 0
  7697  015D8A  0E2F               	movlw	47
  7698  015D8C  0100               	movlb	0	; () banked
  7699  015D8E  6570               	cpfsgt	isdigit@c& (0+255),b
  7700  015D90  D003               	goto	l7799
  7701                           
  7702                           ; BSR set to: 0
  7703  015D92  0E01               	movlw	1
  7704  015D94  0100               	movlb	0	; () banked
  7705  015D96  6F6F               	movwf	_isdigit$3772& (0+255),b
  7706  015D98                     l7799:
  7707                           
  7708                           ; BSR set to: 0
  7709  015D98  C06F  F06E         	movff	_isdigit$3772,??_isdigit
  7710  015D9C  0100               	movlb	0	; () banked
  7711  015D9E  316E               	rrcf	??_isdigit& (0+255),w,b
  7712  015DA0  0012               	return	
  7713  015DA2                     __end_of_isdigit:
  7714                           	opt stack 0
  7715                           tblptru	equ	0xFF8
  7716                           tblptrh	equ	0xFF7
  7717                           tblptrl	equ	0xFF6
  7718                           tablat	equ	0xFF5
  7719                           prodh	equ	0xFF4
  7720                           prodl	equ	0xFF3
  7721                           intcon	equ	0xFF2
  7722                           postinc0	equ	0xFEE
  7723                           wreg	equ	0xFE8
  7724                           indf2	equ	0xFDF
  7725                           postinc2	equ	0xFDE
  7726                           fsr2h	equ	0xFDA
  7727                           fsr2l	equ	0xFD9
  7728                           status	equ	0xFD8
  7729                           
  7730 ;; *************** function _fround *****************
  7731 ;; Defined at:
  7732 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  7733 ;; Parameters:    Size  Location     Type
  7734 ;;  prec            1    wreg     unsigned char 
  7735 ;; Auto vars:     Size  Location     Type
  7736 ;;  prec            1   65[BANK0 ] unsigned char 
  7737 ;; Return value:  Size  Location     Type
  7738 ;;                  4   53[BANK0 ] unsigned char 
  7739 ;; Registers used:
  7740 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7741 ;; Tracked objects:
  7742 ;;		On entry : 0/0
  7743 ;;		On exit  : 0/0
  7744 ;;		Unchanged: 0/0
  7745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7746 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7747 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7749 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7750 ;;Total ram usage:       13 bytes
  7751 ;; Hardware stack levels used:    1
  7752 ;; Hardware stack levels required when called:    4
  7753 ;; This function calls:
  7754 ;;		___awdiv
  7755 ;;		___awmod
  7756 ;;		___flmul
  7757 ;; This function is called by:
  7758 ;;		_sprintf
  7759 ;; This function uses a non-reentrant model
  7760 ;;
  7761                           
  7762                           	psect	text11
  7763  01407E                     __ptext11:
  7764                           	opt stack 0
  7765  01407E                     _fround:
  7766                           	opt stack 24
  7767                           
  7768                           ; BSR set to: 0
  7769                           ;incstack = 0
  7770                           ;fround@prec stored from wreg
  7771  01407E  0100               	movlb	0	; () banked
  7772  014080  6FA1               	movwf	fround@prec& (0+255),b
  7773                           
  7774                           ;doprnt.c: 413: if(prec>=110)
  7775  014082  0E6D               	movlw	109
  7776  014084  0100               	movlb	0	; () banked
  7777  014086  65A1               	cpfsgt	fround@prec& (0+255),b
  7778  014088  D0CD               	goto	l7741
  7779                           
  7780                           ; BSR set to: 0
  7781                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  7782  01408A  0E00               	movlw	0
  7783  01408C  0100               	movlb	0	; () banked
  7784  01408E  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  7785  014090  0E0A               	movlw	10
  7786  014092  6F76               	movwf	___awdiv@divisor& (0+255),b
  7787  014094  0E00               	movlw	0
  7788  014096  0100               	movlb	0	; () banked
  7789  014098  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  7790  01409A  0E64               	movlw	100
  7791  01409C  6F70               	movwf	___awmod@divisor& (0+255),b
  7792  01409E  C0A1  F06E         	movff	fround@prec,___awmod@dividend
  7793  0140A2  0100               	movlb	0	; () banked
  7794  0140A4  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  7795  0140A6  EC16  F0AC         	call	___awmod	;wreg free
  7796  0140AA  C06E  F074         	movff	?___awmod,___awdiv@dividend
  7797  0140AE  C06F  F075         	movff	?___awmod+1,___awdiv@dividend+1
  7798  0140B2  EC48  F0AA         	call	___awdiv	;wreg free
  7799  0140B6  0100               	movlb	0	; () banked
  7800  0140B8  90D8               	bcf	status,0,c
  7801  0140BA  3774               	rlcf	?___awdiv& (0+255),f,b
  7802  0140BC  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7803  0140BE  0100               	movlb	0	; () banked
  7804  0140C0  90D8               	bcf	status,0,c
  7805  0140C2  3774               	rlcf	?___awdiv& (0+255),f,b
  7806  0140C4  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7807  0140C6  0E24               	movlw	36
  7808  0140C8  0100               	movlb	0	; () banked
  7809  0140CA  2774               	addwf	?___awdiv& (0+255),f,b
  7810  0140CC  0E00               	movlw	0
  7811  0140CE  0100               	movlb	0	; () banked
  7812  0140D0  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  7813  0140D2  0EF1               	movlw	low __npowers_
  7814  0140D4  0100               	movlb	0	; () banked
  7815  0140D6  2574               	addwf	?___awdiv& (0+255),w,b
  7816  0140D8  6EF6               	movwf	tblptrl,c
  7817  0140DA  0EFE               	movlw	high __npowers_
  7818  0140DC  0100               	movlb	0	; () banked
  7819  0140DE  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  7820  0140E0  6EF7               	movwf	tblptrh,c
  7821  0140E2                     	if	1	;There are 3 active tblptr bytes
  7822  0140E2  6AF8               	clrf	tblptru,c
  7823  0140E4  0E00               	movlw	low (__mediumconst shr (0+16))
  7824  0140E6  22F8               	addwfc	tblptru,f,c
  7825  0140E8                     	endif
  7826  0140E8  0009               	tblrd		*+
  7827  0140EA  CFF5 F080          	movff	tablat,___flmul@a
  7828  0140EE  0009               	tblrd		*+
  7829  0140F0  CFF5 F081          	movff	tablat,___flmul@a+1
  7830  0140F4  0009               	tblrd		*+
  7831  0140F6  CFF5 F082          	movff	tablat,___flmul@a+2
  7832  0140FA  000A               	tblrd		*-
  7833  0140FC  CFF5 F083          	movff	tablat,___flmul@a+3
  7834  014100  0E00               	movlw	0
  7835  014102  0100               	movlb	0	; () banked
  7836  014104  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  7837  014106  0E64               	movlw	100
  7838  014108  6F76               	movwf	___awdiv@divisor& (0+255),b
  7839  01410A  C0A1  F074         	movff	fround@prec,___awdiv@dividend
  7840  01410E  0100               	movlb	0	; () banked
  7841  014110  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
  7842  014112  EC48  F0AA         	call	___awdiv	;wreg free
  7843  014116  0100               	movlb	0	; () banked
  7844  014118  90D8               	bcf	status,0,c
  7845  01411A  3774               	rlcf	?___awdiv& (0+255),f,b
  7846  01411C  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7847  01411E  0100               	movlb	0	; () banked
  7848  014120  90D8               	bcf	status,0,c
  7849  014122  3774               	rlcf	?___awdiv& (0+255),f,b
  7850  014124  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7851  014126  0E48               	movlw	72
  7852  014128  0100               	movlb	0	; () banked
  7853  01412A  2774               	addwf	?___awdiv& (0+255),f,b
  7854  01412C  0E00               	movlw	0
  7855  01412E  0100               	movlb	0	; () banked
  7856  014130  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  7857  014132  0EF1               	movlw	low __npowers_
  7858  014134  0100               	movlb	0	; () banked
  7859  014136  2574               	addwf	?___awdiv& (0+255),w,b
  7860  014138  6EF6               	movwf	tblptrl,c
  7861  01413A  0EFE               	movlw	high __npowers_
  7862  01413C  0100               	movlb	0	; () banked
  7863  01413E  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  7864  014140  6EF7               	movwf	tblptrh,c
  7865  014142                     	if	1	;There are 3 active tblptr bytes
  7866  014142  6AF8               	clrf	tblptru,c
  7867  014144  0E00               	movlw	low (__mediumconst shr (0+16))
  7868  014146  22F8               	addwfc	tblptru,f,c
  7869  014148                     	endif
  7870  014148  0009               	tblrd		*+
  7871  01414A  CFF5 F07C          	movff	tablat,___flmul@b
  7872  01414E  0009               	tblrd		*+
  7873  014150  CFF5 F07D          	movff	tablat,___flmul@b+1
  7874  014154  0009               	tblrd		*+
  7875  014156  CFF5 F07E          	movff	tablat,___flmul@b+2
  7876  01415A  000A               	tblrd		*-
  7877  01415C  CFF5 F07F          	movff	tablat,___flmul@b+3
  7878  014160  EC42  F098         	call	___flmul	;wreg free
  7879  014164  C07C  F09D         	movff	?___flmul,_fround$4190
  7880  014168  C07D  F09E         	movff	?___flmul+1,_fround$4190+1
  7881  01416C  C07E  F09F         	movff	?___flmul+2,_fround$4190+2
  7882  014170  C07F  F0A0         	movff	?___flmul+3,_fround$4190+3
  7883                           
  7884                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  7885  014174  0E00               	movlw	0
  7886  014176  0100               	movlb	0	; () banked
  7887  014178  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  7888  01417A  0E0A               	movlw	10
  7889  01417C  6F70               	movwf	___awmod@divisor& (0+255),b
  7890  01417E  C0A1  F06E         	movff	fround@prec,___awmod@dividend
  7891  014182  0100               	movlb	0	; () banked
  7892  014184  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  7893  014186  EC16  F0AC         	call	___awmod	;wreg free
  7894  01418A  0100               	movlb	0	; () banked
  7895  01418C  90D8               	bcf	status,0,c
  7896  01418E  376E               	rlcf	?___awmod& (0+255),f,b
  7897  014190  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7898  014192  0100               	movlb	0	; () banked
  7899  014194  90D8               	bcf	status,0,c
  7900  014196  376E               	rlcf	?___awmod& (0+255),f,b
  7901  014198  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7902  01419A  0EF1               	movlw	low __npowers_
  7903  01419C  0100               	movlb	0	; () banked
  7904  01419E  256E               	addwf	?___awmod& (0+255),w,b
  7905  0141A0  6EF6               	movwf	tblptrl,c
  7906  0141A2  0EFE               	movlw	high __npowers_
  7907  0141A4  0100               	movlb	0	; () banked
  7908  0141A6  216F               	addwfc	(?___awmod+1)& (0+255),w,b
  7909  0141A8  6EF7               	movwf	tblptrh,c
  7910  0141AA                     	if	1	;There are 3 active tblptr bytes
  7911  0141AA  6AF8               	clrf	tblptru,c
  7912  0141AC  0E00               	movlw	low (__mediumconst shr (0+16))
  7913  0141AE  22F8               	addwfc	tblptru,f,c
  7914  0141B0                     	endif
  7915  0141B0  0009               	tblrd		*+
  7916  0141B2  CFF5 F080          	movff	tablat,___flmul@a
  7917  0141B6  0009               	tblrd		*+
  7918  0141B8  CFF5 F081          	movff	tablat,___flmul@a+1
  7919  0141BC  0009               	tblrd		*+
  7920  0141BE  CFF5 F082          	movff	tablat,___flmul@a+2
  7921  0141C2  000A               	tblrd		*-
  7922  0141C4  CFF5 F083          	movff	tablat,___flmul@a+3
  7923  0141C8  C09D  F07C         	movff	_fround$4190,___flmul@b
  7924  0141CC  C09E  F07D         	movff	_fround$4190+1,___flmul@b+1
  7925  0141D0  C09F  F07E         	movff	_fround$4190+2,___flmul@b+2
  7926  0141D4  C0A0  F07F         	movff	_fround$4190+3,___flmul@b+3
  7927  0141D8  EC42  F098         	call	___flmul	;wreg free
  7928  0141DC  C07C  F099         	movff	?___flmul,_fround$4191
  7929  0141E0  C07D  F09A         	movff	?___flmul+1,_fround$4191+1
  7930  0141E4  C07E  F09B         	movff	?___flmul+2,_fround$4191+2
  7931  0141E8  C07F  F09C         	movff	?___flmul+3,_fround$4191+3
  7932                           
  7933                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  7934  0141EC  C099  F07C         	movff	_fround$4191,___flmul@b
  7935  0141F0  C09A  F07D         	movff	_fround$4191+1,___flmul@b+1
  7936  0141F4  C09B  F07E         	movff	_fround$4191+2,___flmul@b+2
  7937  0141F8  C09C  F07F         	movff	_fround$4191+3,___flmul@b+3
  7938  0141FC  0E00               	movlw	0
  7939  0141FE  0100               	movlb	0	; () banked
  7940  014200  6F80               	movwf	___flmul@a& (0+255),b
  7941  014202  0E00               	movlw	0
  7942  014204  6F81               	movwf	(___flmul@a+1)& (0+255),b
  7943  014206  0E00               	movlw	0
  7944  014208  6F82               	movwf	(___flmul@a+2)& (0+255),b
  7945  01420A  0E3F               	movlw	63
  7946  01420C  6F83               	movwf	(___flmul@a+3)& (0+255),b
  7947  01420E  EC42  F098         	call	___flmul	;wreg free
  7948  014212  C07C  F095         	movff	?___flmul,?_fround
  7949  014216  C07D  F096         	movff	?___flmul+1,?_fround+1
  7950  01421A  C07E  F097         	movff	?___flmul+2,?_fround+2
  7951  01421E  C07F  F098         	movff	?___flmul+3,?_fround+3
  7952  014222  0012               	return	
  7953  014224                     l7741:
  7954                           
  7955                           ;doprnt.c: 415: else if(prec > 10)
  7956  014224  0E0A               	movlw	10
  7957  014226  0100               	movlb	0	; () banked
  7958  014228  65A1               	cpfsgt	fround@prec& (0+255),b
  7959  01422A  D078               	goto	l7749
  7960                           
  7961                           ; BSR set to: 0
  7962                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  7963  01422C  0E00               	movlw	0
  7964  01422E  0100               	movlb	0	; () banked
  7965  014230  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  7966  014232  0E0A               	movlw	10
  7967  014234  6F70               	movwf	___awmod@divisor& (0+255),b
  7968  014236  C0A1  F06E         	movff	fround@prec,___awmod@dividend
  7969  01423A  0100               	movlb	0	; () banked
  7970  01423C  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  7971  01423E  EC16  F0AC         	call	___awmod	;wreg free
  7972  014242  0100               	movlb	0	; () banked
  7973  014244  90D8               	bcf	status,0,c
  7974  014246  376E               	rlcf	?___awmod& (0+255),f,b
  7975  014248  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7976  01424A  0100               	movlb	0	; () banked
  7977  01424C  90D8               	bcf	status,0,c
  7978  01424E  376E               	rlcf	?___awmod& (0+255),f,b
  7979  014250  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7980  014252  0EF1               	movlw	low __npowers_
  7981  014254  0100               	movlb	0	; () banked
  7982  014256  256E               	addwf	?___awmod& (0+255),w,b
  7983  014258  6EF6               	movwf	tblptrl,c
  7984  01425A  0EFE               	movlw	high __npowers_
  7985  01425C  0100               	movlb	0	; () banked
  7986  01425E  216F               	addwfc	(?___awmod+1)& (0+255),w,b
  7987  014260  6EF7               	movwf	tblptrh,c
  7988  014262                     	if	1	;There are 3 active tblptr bytes
  7989  014262  6AF8               	clrf	tblptru,c
  7990  014264  0E00               	movlw	low (__mediumconst shr (0+16))
  7991  014266  22F8               	addwfc	tblptru,f,c
  7992  014268                     	endif
  7993  014268  0009               	tblrd		*+
  7994  01426A  CFF5 F080          	movff	tablat,___flmul@a
  7995  01426E  0009               	tblrd		*+
  7996  014270  CFF5 F081          	movff	tablat,___flmul@a+1
  7997  014274  0009               	tblrd		*+
  7998  014276  CFF5 F082          	movff	tablat,___flmul@a+2
  7999  01427A  000A               	tblrd		*-
  8000  01427C  CFF5 F083          	movff	tablat,___flmul@a+3
  8001  014280  0E00               	movlw	0
  8002  014282  0100               	movlb	0	; () banked
  8003  014284  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  8004  014286  0E0A               	movlw	10
  8005  014288  6F76               	movwf	___awdiv@divisor& (0+255),b
  8006  01428A  C0A1  F074         	movff	fround@prec,___awdiv@dividend
  8007  01428E  0100               	movlb	0	; () banked
  8008  014290  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
  8009  014292  EC48  F0AA         	call	___awdiv	;wreg free
  8010  014296  0100               	movlb	0	; () banked
  8011  014298  90D8               	bcf	status,0,c
  8012  01429A  3774               	rlcf	?___awdiv& (0+255),f,b
  8013  01429C  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  8014  01429E  0100               	movlb	0	; () banked
  8015  0142A0  90D8               	bcf	status,0,c
  8016  0142A2  3774               	rlcf	?___awdiv& (0+255),f,b
  8017  0142A4  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  8018  0142A6  0E24               	movlw	36
  8019  0142A8  0100               	movlb	0	; () banked
  8020  0142AA  2774               	addwf	?___awdiv& (0+255),f,b
  8021  0142AC  0E00               	movlw	0
  8022  0142AE  0100               	movlb	0	; () banked
  8023  0142B0  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  8024  0142B2  0EF1               	movlw	low __npowers_
  8025  0142B4  0100               	movlb	0	; () banked
  8026  0142B6  2574               	addwf	?___awdiv& (0+255),w,b
  8027  0142B8  6EF6               	movwf	tblptrl,c
  8028  0142BA  0EFE               	movlw	high __npowers_
  8029  0142BC  0100               	movlb	0	; () banked
  8030  0142BE  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  8031  0142C0  6EF7               	movwf	tblptrh,c
  8032  0142C2                     	if	1	;There are 3 active tblptr bytes
  8033  0142C2  6AF8               	clrf	tblptru,c
  8034  0142C4  0E00               	movlw	low (__mediumconst shr (0+16))
  8035  0142C6  22F8               	addwfc	tblptru,f,c
  8036  0142C8                     	endif
  8037  0142C8  0009               	tblrd		*+
  8038  0142CA  CFF5 F07C          	movff	tablat,___flmul@b
  8039  0142CE  0009               	tblrd		*+
  8040  0142D0  CFF5 F07D          	movff	tablat,___flmul@b+1
  8041  0142D4  0009               	tblrd		*+
  8042  0142D6  CFF5 F07E          	movff	tablat,___flmul@b+2
  8043  0142DA  000A               	tblrd		*-
  8044  0142DC  CFF5 F07F          	movff	tablat,___flmul@b+3
  8045  0142E0  EC42  F098         	call	___flmul	;wreg free
  8046  0142E4  C07C  F09D         	movff	?___flmul,_fround$4190
  8047  0142E8  C07D  F09E         	movff	?___flmul+1,_fround$4190+1
  8048  0142EC  C07E  F09F         	movff	?___flmul+2,_fround$4190+2
  8049  0142F0  C07F  F0A0         	movff	?___flmul+3,_fround$4190+3
  8050                           
  8051                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8052  0142F4  C09D  F07C         	movff	_fround$4190,___flmul@b
  8053  0142F8  C09E  F07D         	movff	_fround$4190+1,___flmul@b+1
  8054  0142FC  C09F  F07E         	movff	_fround$4190+2,___flmul@b+2
  8055  014300  C0A0  F07F         	movff	_fround$4190+3,___flmul@b+3
  8056  014304  0E00               	movlw	0
  8057  014306  0100               	movlb	0	; () banked
  8058  014308  6F80               	movwf	___flmul@a& (0+255),b
  8059  01430A  0E00               	movlw	0
  8060  01430C  6F81               	movwf	(___flmul@a+1)& (0+255),b
  8061  01430E  0E00               	movlw	0
  8062  014310  6F82               	movwf	(___flmul@a+2)& (0+255),b
  8063  014312  0E3F               	movlw	63
  8064  014314  6F83               	movwf	(___flmul@a+3)& (0+255),b
  8065  014316  EC42  F098         	call	___flmul	;wreg free
  8066  01431A  D77B               	goto	L7
  8067  01431C                     l7749:
  8068                           
  8069                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  8070  01431C  0100               	movlb	0	; () banked
  8071  01431E  51A1               	movf	fround@prec& (0+255),w,b
  8072  014320  0D04               	mullw	4
  8073  014322  0EF1               	movlw	low __npowers_
  8074  014324  24F3               	addwf	prodl,w,c
  8075  014326  6EF6               	movwf	tblptrl,c
  8076  014328  0EFE               	movlw	high __npowers_
  8077  01432A  20F4               	addwfc	prodh,w,c
  8078  01432C  6EF7               	movwf	tblptrh,c
  8079  01432E                     	if	1	;There are 3 active tblptr bytes
  8080  01432E  6AF8               	clrf	tblptru,c
  8081  014330  0E00               	movlw	low (__mediumconst shr (0+16))
  8082  014332  22F8               	addwfc	tblptru,f,c
  8083  014334                     	endif
  8084  014334  0009               	tblrd		*+
  8085  014336  CFF5 F07C          	movff	tablat,___flmul@b
  8086  01433A  0009               	tblrd		*+
  8087  01433C  CFF5 F07D          	movff	tablat,___flmul@b+1
  8088  014340  0009               	tblrd		*+
  8089  014342  CFF5 F07E          	movff	tablat,___flmul@b+2
  8090  014346  000A               	tblrd		*-
  8091  014348  CFF5 F07F          	movff	tablat,___flmul@b+3
  8092  01434C  0E00               	movlw	0
  8093  01434E  0100               	movlb	0	; () banked
  8094  014350  6F80               	movwf	___flmul@a& (0+255),b
  8095  014352  0E00               	movlw	0
  8096  014354  6F81               	movwf	(___flmul@a+1)& (0+255),b
  8097  014356  0E00               	movlw	0
  8098  014358  6F82               	movwf	(___flmul@a+2)& (0+255),b
  8099  01435A  0E3F               	movlw	63
  8100  01435C  6F83               	movwf	(___flmul@a+3)& (0+255),b
  8101  01435E  EC42  F098         	call	___flmul	;wreg free
  8102  014362  C07C  F095         	movff	?___flmul,?_fround
  8103  014366  C07D  F096         	movff	?___flmul+1,?_fround+1
  8104  01436A  C07E  F097         	movff	?___flmul+2,?_fround+2
  8105  01436E  C07F  F098         	movff	?___flmul+3,?_fround+3
  8106  014372  0012               	return	
  8107  014374                     __end_of_fround:
  8108                           	opt stack 0
  8109                           tblptru	equ	0xFF8
  8110                           tblptrh	equ	0xFF7
  8111                           tblptrl	equ	0xFF6
  8112                           tablat	equ	0xFF5
  8113                           prodh	equ	0xFF4
  8114                           prodl	equ	0xFF3
  8115                           intcon	equ	0xFF2
  8116                           postinc0	equ	0xFEE
  8117                           wreg	equ	0xFE8
  8118                           indf2	equ	0xFDF
  8119                           postinc2	equ	0xFDE
  8120                           fsr2h	equ	0xFDA
  8121                           fsr2l	equ	0xFD9
  8122                           status	equ	0xFD8
  8123                           
  8124 ;; *************** function ___flmul *****************
  8125 ;; Defined at:
  8126 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  8127 ;; Parameters:    Size  Location     Type
  8128 ;;  b               4   28[BANK0 ] unsigned char 
  8129 ;;  a               4   32[BANK0 ] unsigned char 
  8130 ;; Auto vars:     Size  Location     Type
  8131 ;;  prod            4   47[BANK0 ] struct .
  8132 ;;  grs             4   42[BANK0 ] unsigned long 
  8133 ;;  temp            2   51[BANK0 ] struct .
  8134 ;;  bexp            1   46[BANK0 ] unsigned char 
  8135 ;;  aexp            1   41[BANK0 ] unsigned char 
  8136 ;;  sign            1   40[BANK0 ] unsigned char 
  8137 ;; Return value:  Size  Location     Type
  8138 ;;                  4   28[BANK0 ] unsigned char 
  8139 ;; Registers used:
  8140 ;;		wreg, status,2, status,0, prodl, prodh
  8141 ;; Tracked objects:
  8142 ;;		On entry : 0/0
  8143 ;;		On exit  : 0/0
  8144 ;;		Unchanged: 0/0
  8145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8146 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8147 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8148 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8149 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8150 ;;Total ram usage:       25 bytes
  8151 ;; Hardware stack levels used:    1
  8152 ;; Hardware stack levels required when called:    3
  8153 ;; This function calls:
  8154 ;;		Nothing
  8155 ;; This function is called by:
  8156 ;;		_main
  8157 ;;		_fround
  8158 ;;		_scale
  8159 ;;		_sprintf
  8160 ;; This function uses a non-reentrant model
  8161 ;;
  8162                           
  8163                           	psect	text12
  8164  013084                     __ptext12:
  8165                           	opt stack 0
  8166  013084                     ___flmul:
  8167                           	opt stack 27
  8168                           
  8169                           ;incstack = 0
  8170  013084  0100               	movlb	0	; () banked
  8171  013086  517F               	movf	(___flmul@b+3)& (0+255),w,b
  8172  013088  0B80               	andlw	128
  8173  01308A  0100               	movlb	0	; () banked
  8174  01308C  6F88               	movwf	___flmul@sign& (0+255),b
  8175  01308E  0100               	movlb	0	; () banked
  8176  013090  517F               	movf	(___flmul@b+3)& (0+255),w,b
  8177  013092  257F               	addwf	(___flmul@b+3)& (0+255),w,b
  8178  013094  0100               	movlb	0	; () banked
  8179  013096  6F8E               	movwf	___flmul@bexp& (0+255),b
  8180                           
  8181                           ; BSR set to: 0
  8182  013098  0100               	movlb	0	; () banked
  8183  01309A  AF7E               	btfss	(___flmul@b+2)& (0+255),7,b
  8184  01309C  D002               	goto	l7515
  8185                           
  8186                           ; BSR set to: 0
  8187  01309E  0100               	movlb	0	; () banked
  8188  0130A0  818E               	bsf	___flmul@bexp& (0+255),0,b
  8189  0130A2                     l7515:
  8190                           
  8191                           ; BSR set to: 0
  8192  0130A2  0100               	movlb	0	; () banked
  8193  0130A4  518E               	movf	___flmul@bexp& (0+255),w,b
  8194  0130A6  0100               	movlb	0	; () banked
  8195  0130A8  B4D8               	btfsc	status,2,c
  8196  0130AA  D010               	goto	l7523
  8197                           
  8198                           ; BSR set to: 0
  8199  0130AC  0100               	movlb	0	; () banked
  8200  0130AE  298E               	incf	___flmul@bexp& (0+255),w,b
  8201  0130B0  A4D8               	btfss	status,2,c
  8202  0130B2  D009               	goto	l7521
  8203                           
  8204                           ; BSR set to: 0
  8205  0130B4  0E00               	movlw	0
  8206  0130B6  0100               	movlb	0	; () banked
  8207  0130B8  6F7C               	movwf	___flmul@b& (0+255),b
  8208  0130BA  0E00               	movlw	0
  8209  0130BC  6F7D               	movwf	(___flmul@b+1)& (0+255),b
  8210  0130BE  0E00               	movlw	0
  8211  0130C0  6F7E               	movwf	(___flmul@b+2)& (0+255),b
  8212  0130C2  0E00               	movlw	0
  8213  0130C4  6F7F               	movwf	(___flmul@b+3)& (0+255),b
  8214  0130C6                     l7521:
  8215                           
  8216                           ; BSR set to: 0
  8217  0130C6  0100               	movlb	0	; () banked
  8218  0130C8  8F7E               	bsf	(___flmul@b+2)& (0+255),7,b
  8219  0130CA  D009               	goto	l7525
  8220  0130CC                     l7523:
  8221                           
  8222                           ; BSR set to: 0
  8223  0130CC  0E00               	movlw	0
  8224  0130CE  0100               	movlb	0	; () banked
  8225  0130D0  6F7C               	movwf	___flmul@b& (0+255),b
  8226  0130D2  0E00               	movlw	0
  8227  0130D4  6F7D               	movwf	(___flmul@b+1)& (0+255),b
  8228  0130D6  0E00               	movlw	0
  8229  0130D8  6F7E               	movwf	(___flmul@b+2)& (0+255),b
  8230  0130DA  0E00               	movlw	0
  8231  0130DC  6F7F               	movwf	(___flmul@b+3)& (0+255),b
  8232  0130DE                     l7525:
  8233                           
  8234                           ; BSR set to: 0
  8235  0130DE  0100               	movlb	0	; () banked
  8236  0130E0  5183               	movf	(___flmul@a+3)& (0+255),w,b
  8237  0130E2  0B80               	andlw	128
  8238  0130E4  0100               	movlb	0	; () banked
  8239  0130E6  1B88               	xorwf	___flmul@sign& (0+255),f,b
  8240                           
  8241                           ; BSR set to: 0
  8242  0130E8  0100               	movlb	0	; () banked
  8243  0130EA  5183               	movf	(___flmul@a+3)& (0+255),w,b
  8244  0130EC  2583               	addwf	(___flmul@a+3)& (0+255),w,b
  8245  0130EE  0100               	movlb	0	; () banked
  8246  0130F0  6F89               	movwf	___flmul@aexp& (0+255),b
  8247                           
  8248                           ; BSR set to: 0
  8249  0130F2  0100               	movlb	0	; () banked
  8250  0130F4  AF82               	btfss	(___flmul@a+2)& (0+255),7,b
  8251  0130F6  D002               	goto	l7533
  8252                           
  8253                           ; BSR set to: 0
  8254  0130F8  0100               	movlb	0	; () banked
  8255  0130FA  8189               	bsf	___flmul@aexp& (0+255),0,b
  8256  0130FC                     l7533:
  8257                           
  8258                           ; BSR set to: 0
  8259  0130FC  0100               	movlb	0	; () banked
  8260  0130FE  5189               	movf	___flmul@aexp& (0+255),w,b
  8261  013100  0100               	movlb	0	; () banked
  8262  013102  B4D8               	btfsc	status,2,c
  8263  013104  D010               	goto	l7541
  8264                           
  8265                           ; BSR set to: 0
  8266  013106  0100               	movlb	0	; () banked
  8267  013108  2989               	incf	___flmul@aexp& (0+255),w,b
  8268  01310A  A4D8               	btfss	status,2,c
  8269  01310C  D009               	goto	l7539
  8270                           
  8271                           ; BSR set to: 0
  8272  01310E  0E00               	movlw	0
  8273  013110  0100               	movlb	0	; () banked
  8274  013112  6F80               	movwf	___flmul@a& (0+255),b
  8275  013114  0E00               	movlw	0
  8276  013116  6F81               	movwf	(___flmul@a+1)& (0+255),b
  8277  013118  0E00               	movlw	0
  8278  01311A  6F82               	movwf	(___flmul@a+2)& (0+255),b
  8279  01311C  0E00               	movlw	0
  8280  01311E  6F83               	movwf	(___flmul@a+3)& (0+255),b
  8281  013120                     l7539:
  8282                           
  8283                           ; BSR set to: 0
  8284  013120  0100               	movlb	0	; () banked
  8285  013122  8F82               	bsf	(___flmul@a+2)& (0+255),7,b
  8286  013124  D009               	goto	l1491
  8287  013126                     l7541:
  8288                           
  8289                           ; BSR set to: 0
  8290  013126  0E00               	movlw	0
  8291  013128  0100               	movlb	0	; () banked
  8292  01312A  6F80               	movwf	___flmul@a& (0+255),b
  8293  01312C  0E00               	movlw	0
  8294  01312E  6F81               	movwf	(___flmul@a+1)& (0+255),b
  8295  013130  0E00               	movlw	0
  8296  013132  6F82               	movwf	(___flmul@a+2)& (0+255),b
  8297  013134  0E00               	movlw	0
  8298  013136  6F83               	movwf	(___flmul@a+3)& (0+255),b
  8299  013138                     l1491:
  8300                           
  8301                           ; BSR set to: 0
  8302  013138  0100               	movlb	0	; () banked
  8303  01313A  5189               	movf	___flmul@aexp& (0+255),w,b
  8304  01313C  0100               	movlb	0	; () banked
  8305  01313E  B4D8               	btfsc	status,2,c
  8306  013140  D005               	goto	l7545
  8307                           
  8308                           ; BSR set to: 0
  8309  013142  0100               	movlb	0	; () banked
  8310  013144  518E               	movf	___flmul@bexp& (0+255),w,b
  8311  013146  0100               	movlb	0	; () banked
  8312  013148  A4D8               	btfss	status,2,c
  8313  01314A  D00A               	goto	l7549
  8314  01314C                     l7545:
  8315                           
  8316                           ; BSR set to: 0
  8317  01314C  0E00               	movlw	0
  8318  01314E  0100               	movlb	0	; () banked
  8319  013150  6F7C               	movwf	?___flmul& (0+255),b
  8320  013152  0E00               	movlw	0
  8321  013154  6F7D               	movwf	(?___flmul+1)& (0+255),b
  8322  013156  0E00               	movlw	0
  8323  013158  6F7E               	movwf	(?___flmul+2)& (0+255),b
  8324  01315A  0E00               	movlw	0
  8325  01315C  6F7F               	movwf	(?___flmul+3)& (0+255),b
  8326                           
  8327                           ; BSR set to: 0
  8328  01315E  0012               	return	
  8329  013160                     l7549:
  8330                           
  8331                           ; BSR set to: 0
  8332  013160  0100               	movlb	0	; () banked
  8333  013162  5182               	movf	(___flmul@a+2)& (0+255),w,b
  8334  013164  0100               	movlb	0	; () banked
  8335  013166  037C               	mulwf	___flmul@b& (0+255),b
  8336  013168  CFF3 F093          	movff	prodl,___flmul@temp
  8337  01316C  CFF4 F094          	movff	prodh,___flmul@temp+1
  8338                           
  8339                           ; BSR set to: 0
  8340  013170  0100               	movlb	0	; () banked
  8341  013172  5193               	movf	___flmul@temp& (0+255),w,b
  8342  013174  0100               	movlb	0	; () banked
  8343  013176  6F8A               	movwf	___flmul@grs& (0+255),b
  8344  013178  6B8B               	clrf	(___flmul@grs+1)& (0+255),b
  8345  01317A  6B8C               	clrf	(___flmul@grs+2)& (0+255),b
  8346  01317C  6B8D               	clrf	(___flmul@grs+3)& (0+255),b
  8347                           
  8348                           ; BSR set to: 0
  8349  01317E  0100               	movlb	0	; () banked
  8350  013180  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8351  013182  0100               	movlb	0	; () banked
  8352  013184  6F8F               	movwf	___flmul@prod& (0+255),b
  8353  013186  6B90               	clrf	(___flmul@prod+1)& (0+255),b
  8354  013188  6B91               	clrf	(___flmul@prod+2)& (0+255),b
  8355  01318A  6B92               	clrf	(___flmul@prod+3)& (0+255),b
  8356  01318C  0100               	movlb	0	; () banked
  8357  01318E  5181               	movf	(___flmul@a+1)& (0+255),w,b
  8358  013190  0100               	movlb	0	; () banked
  8359  013192  037D               	mulwf	(___flmul@b+1)& (0+255),b
  8360  013194  CFF3 F093          	movff	prodl,___flmul@temp
  8361  013198  CFF4 F094          	movff	prodh,___flmul@temp+1
  8362                           
  8363                           ; BSR set to: 0
  8364  01319C  0100               	movlb	0	; () banked
  8365  01319E  5193               	movf	___flmul@temp& (0+255),w,b
  8366  0131A0  0100               	movlb	0	; () banked
  8367  0131A2  278A               	addwf	___flmul@grs& (0+255),f,b
  8368  0131A4  0E00               	movlw	0
  8369  0131A6  238B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8370  0131A8  238C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8371  0131AA  238D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8372                           
  8373                           ; BSR set to: 0
  8374  0131AC  0100               	movlb	0	; () banked
  8375  0131AE  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8376  0131B0  0100               	movlb	0	; () banked
  8377  0131B2  278F               	addwf	___flmul@prod& (0+255),f,b
  8378  0131B4  0E00               	movlw	0
  8379  0131B6  2390               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8380  0131B8  2391               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8381  0131BA  2392               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8382  0131BC  0100               	movlb	0	; () banked
  8383  0131BE  5180               	movf	___flmul@a& (0+255),w,b
  8384  0131C0  0100               	movlb	0	; () banked
  8385  0131C2  037E               	mulwf	(___flmul@b+2)& (0+255),b
  8386  0131C4  CFF3 F093          	movff	prodl,___flmul@temp
  8387  0131C8  CFF4 F094          	movff	prodh,___flmul@temp+1
  8388                           
  8389                           ; BSR set to: 0
  8390  0131CC  0100               	movlb	0	; () banked
  8391  0131CE  5193               	movf	___flmul@temp& (0+255),w,b
  8392  0131D0  0100               	movlb	0	; () banked
  8393  0131D2  278A               	addwf	___flmul@grs& (0+255),f,b
  8394  0131D4  0E00               	movlw	0
  8395  0131D6  238B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8396  0131D8  238C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8397  0131DA  238D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8398                           
  8399                           ; BSR set to: 0
  8400  0131DC  0100               	movlb	0	; () banked
  8401  0131DE  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8402  0131E0  0100               	movlb	0	; () banked
  8403  0131E2  278F               	addwf	___flmul@prod& (0+255),f,b
  8404  0131E4  0E00               	movlw	0
  8405  0131E6  2390               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8406  0131E8  2391               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8407  0131EA  2392               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8408                           
  8409                           ; BSR set to: 0
  8410  0131EC  C08C  F08D         	movff	___flmul@grs+2,___flmul@grs+3
  8411  0131F0  C08B  F08C         	movff	___flmul@grs+1,___flmul@grs+2
  8412  0131F4  C08A  F08B         	movff	___flmul@grs,___flmul@grs+1
  8413  0131F8  0100               	movlb	0	; () banked
  8414  0131FA  6B8A               	clrf	___flmul@grs& (0+255),b
  8415                           
  8416                           ; BSR set to: 0
  8417  0131FC  0100               	movlb	0	; () banked
  8418  0131FE  5180               	movf	___flmul@a& (0+255),w,b
  8419  013200  0100               	movlb	0	; () banked
  8420  013202  037D               	mulwf	(___flmul@b+1)& (0+255),b
  8421  013204  CFF3 F093          	movff	prodl,___flmul@temp
  8422  013208  CFF4 F094          	movff	prodh,___flmul@temp+1
  8423                           
  8424                           ; BSR set to: 0
  8425  01320C  0100               	movlb	0	; () banked
  8426  01320E  5193               	movf	___flmul@temp& (0+255),w,b
  8427  013210  0100               	movlb	0	; () banked
  8428  013212  278A               	addwf	___flmul@grs& (0+255),f,b
  8429  013214  0100               	movlb	0	; () banked
  8430  013216  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8431  013218  0100               	movlb	0	; () banked
  8432  01321A  238B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8433  01321C  0E00               	movlw	0
  8434  01321E  0100               	movlb	0	; () banked
  8435  013220  238C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8436  013222  0E00               	movlw	0
  8437  013224  0100               	movlb	0	; () banked
  8438  013226  238D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8439                           
  8440                           ; BSR set to: 0
  8441  013228  0100               	movlb	0	; () banked
  8442  01322A  5181               	movf	(___flmul@a+1)& (0+255),w,b
  8443  01322C  0100               	movlb	0	; () banked
  8444  01322E  037C               	mulwf	___flmul@b& (0+255),b
  8445  013230  CFF3 F093          	movff	prodl,___flmul@temp
  8446  013234  CFF4 F094          	movff	prodh,___flmul@temp+1
  8447                           
  8448                           ; BSR set to: 0
  8449  013238  0100               	movlb	0	; () banked
  8450  01323A  5193               	movf	___flmul@temp& (0+255),w,b
  8451  01323C  0100               	movlb	0	; () banked
  8452  01323E  278A               	addwf	___flmul@grs& (0+255),f,b
  8453  013240  0100               	movlb	0	; () banked
  8454  013242  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8455  013244  0100               	movlb	0	; () banked
  8456  013246  238B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8457  013248  0E00               	movlw	0
  8458  01324A  0100               	movlb	0	; () banked
  8459  01324C  238C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8460  01324E  0E00               	movlw	0
  8461  013250  0100               	movlb	0	; () banked
  8462  013252  238D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8463                           
  8464                           ; BSR set to: 0
  8465  013254  C08C  F08D         	movff	___flmul@grs+2,___flmul@grs+3
  8466  013258  C08B  F08C         	movff	___flmul@grs+1,___flmul@grs+2
  8467  01325C  C08A  F08B         	movff	___flmul@grs,___flmul@grs+1
  8468  013260  0100               	movlb	0	; () banked
  8469  013262  6B8A               	clrf	___flmul@grs& (0+255),b
  8470  013264  0100               	movlb	0	; () banked
  8471  013266  5180               	movf	___flmul@a& (0+255),w,b
  8472  013268  0100               	movlb	0	; () banked
  8473  01326A  037C               	mulwf	___flmul@b& (0+255),b
  8474  01326C  CFF3 F093          	movff	prodl,___flmul@temp
  8475  013270  CFF4 F094          	movff	prodh,___flmul@temp+1
  8476                           
  8477                           ; BSR set to: 0
  8478  013274  0100               	movlb	0	; () banked
  8479  013276  5193               	movf	___flmul@temp& (0+255),w,b
  8480  013278  0100               	movlb	0	; () banked
  8481  01327A  278A               	addwf	___flmul@grs& (0+255),f,b
  8482  01327C  0100               	movlb	0	; () banked
  8483  01327E  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8484  013280  0100               	movlb	0	; () banked
  8485  013282  238B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8486  013284  0E00               	movlw	0
  8487  013286  0100               	movlb	0	; () banked
  8488  013288  238C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8489  01328A  0E00               	movlw	0
  8490  01328C  0100               	movlb	0	; () banked
  8491  01328E  238D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8492                           
  8493                           ; BSR set to: 0
  8494  013290  0100               	movlb	0	; () banked
  8495  013292  5182               	movf	(___flmul@a+2)& (0+255),w,b
  8496  013294  0100               	movlb	0	; () banked
  8497  013296  037D               	mulwf	(___flmul@b+1)& (0+255),b
  8498  013298  CFF3 F093          	movff	prodl,___flmul@temp
  8499  01329C  CFF4 F094          	movff	prodh,___flmul@temp+1
  8500  0132A0  0100               	movlb	0	; () banked
  8501  0132A2  5193               	movf	___flmul@temp& (0+255),w,b
  8502  0132A4  0100               	movlb	0	; () banked
  8503  0132A6  278F               	addwf	___flmul@prod& (0+255),f,b
  8504  0132A8  0100               	movlb	0	; () banked
  8505  0132AA  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8506  0132AC  0100               	movlb	0	; () banked
  8507  0132AE  2390               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8508  0132B0  0E00               	movlw	0
  8509  0132B2  0100               	movlb	0	; () banked
  8510  0132B4  2391               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8511  0132B6  0E00               	movlw	0
  8512  0132B8  0100               	movlb	0	; () banked
  8513  0132BA  2392               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8514                           
  8515                           ; BSR set to: 0
  8516  0132BC  0100               	movlb	0	; () banked
  8517  0132BE  5181               	movf	(___flmul@a+1)& (0+255),w,b
  8518  0132C0  0100               	movlb	0	; () banked
  8519  0132C2  037E               	mulwf	(___flmul@b+2)& (0+255),b
  8520  0132C4  CFF3 F093          	movff	prodl,___flmul@temp
  8521  0132C8  CFF4 F094          	movff	prodh,___flmul@temp+1
  8522                           
  8523                           ; BSR set to: 0
  8524  0132CC  0100               	movlb	0	; () banked
  8525  0132CE  5193               	movf	___flmul@temp& (0+255),w,b
  8526  0132D0  0100               	movlb	0	; () banked
  8527  0132D2  278F               	addwf	___flmul@prod& (0+255),f,b
  8528  0132D4  0100               	movlb	0	; () banked
  8529  0132D6  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8530  0132D8  0100               	movlb	0	; () banked
  8531  0132DA  2390               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8532  0132DC  0E00               	movlw	0
  8533  0132DE  0100               	movlb	0	; () banked
  8534  0132E0  2391               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8535  0132E2  0E00               	movlw	0
  8536  0132E4  0100               	movlb	0	; () banked
  8537  0132E6  2392               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8538  0132E8  0100               	movlb	0	; () banked
  8539  0132EA  5182               	movf	(___flmul@a+2)& (0+255),w,b
  8540  0132EC  0100               	movlb	0	; () banked
  8541  0132EE  037E               	mulwf	(___flmul@b+2)& (0+255),b
  8542  0132F0  CFF3 F093          	movff	prodl,___flmul@temp
  8543  0132F4  CFF4 F094          	movff	prodh,___flmul@temp+1
  8544                           
  8545                           ; BSR set to: 0
  8546  0132F8  0100               	movlb	0	; () banked
  8547  0132FA  5193               	movf	___flmul@temp& (0+255),w,b
  8548  0132FC  0100               	movlb	0	; () banked
  8549  0132FE  6F84               	movwf	??___flmul& (0+255),b
  8550  013300  0100               	movlb	0	; () banked
  8551  013302  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8552  013304  0100               	movlb	0	; () banked
  8553  013306  6F85               	movwf	(??___flmul+1)& (0+255),b
  8554  013308  0100               	movlb	0	; () banked
  8555  01330A  6B86               	clrf	(??___flmul+2)& (0+255),b
  8556  01330C  0100               	movlb	0	; () banked
  8557  01330E  6B87               	clrf	(??___flmul+3)& (0+255),b
  8558  013310  C086  F087         	movff	??___flmul+2,??___flmul+3
  8559  013314  C085  F086         	movff	??___flmul+1,??___flmul+2
  8560  013318  C084  F085         	movff	??___flmul,??___flmul+1
  8561  01331C  0100               	movlb	0	; () banked
  8562  01331E  6B84               	clrf	??___flmul& (0+255),b
  8563  013320  0100               	movlb	0	; () banked
  8564  013322  5184               	movf	??___flmul& (0+255),w,b
  8565  013324  0100               	movlb	0	; () banked
  8566  013326  278F               	addwf	___flmul@prod& (0+255),f,b
  8567  013328  0100               	movlb	0	; () banked
  8568  01332A  5185               	movf	(??___flmul+1)& (0+255),w,b
  8569  01332C  0100               	movlb	0	; () banked
  8570  01332E  2390               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8571  013330  0100               	movlb	0	; () banked
  8572  013332  5186               	movf	(??___flmul+2)& (0+255),w,b
  8573  013334  0100               	movlb	0	; () banked
  8574  013336  2391               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8575  013338  0100               	movlb	0	; () banked
  8576  01333A  5187               	movf	(??___flmul+3)& (0+255),w,b
  8577  01333C  0100               	movlb	0	; () banked
  8578  01333E  2392               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8579                           
  8580                           ; BSR set to: 0
  8581  013340  C08A  F084         	movff	___flmul@grs,??___flmul
  8582  013344  C08B  F085         	movff	___flmul@grs+1,??___flmul+1
  8583  013348  C08C  F086         	movff	___flmul@grs+2,??___flmul+2
  8584  01334C  C08D  F087         	movff	___flmul@grs+3,??___flmul+3
  8585  013350  0E19               	movlw	25
  8586  013352  D006               	goto	u9770
  8587  013354                     u9775:
  8588  013354  0100               	movlb	0	; () banked
  8589  013356  90D8               	bcf	status,0,c
  8590  013358  3387               	rrcf	(??___flmul+3)& (0+255),f,b
  8591  01335A  3386               	rrcf	(??___flmul+2)& (0+255),f,b
  8592  01335C  3385               	rrcf	(??___flmul+1)& (0+255),f,b
  8593  01335E  3384               	rrcf	??___flmul& (0+255),f,b
  8594  013360                     u9770:
  8595  013360  2EE8               	decfsz	wreg,f,c
  8596  013362  D7F8               	goto	u9775
  8597  013364  0100               	movlb	0	; () banked
  8598  013366  5184               	movf	??___flmul& (0+255),w,b
  8599  013368  0100               	movlb	0	; () banked
  8600  01336A  278F               	addwf	___flmul@prod& (0+255),f,b
  8601  01336C  0100               	movlb	0	; () banked
  8602  01336E  5185               	movf	(??___flmul+1)& (0+255),w,b
  8603  013370  0100               	movlb	0	; () banked
  8604  013372  2390               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8605  013374  0100               	movlb	0	; () banked
  8606  013376  5186               	movf	(??___flmul+2)& (0+255),w,b
  8607  013378  0100               	movlb	0	; () banked
  8608  01337A  2391               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8609  01337C  0100               	movlb	0	; () banked
  8610  01337E  5187               	movf	(??___flmul+3)& (0+255),w,b
  8611  013380  0100               	movlb	0	; () banked
  8612  013382  2392               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8613                           
  8614                           ; BSR set to: 0
  8615  013384  C08C  F08D         	movff	___flmul@grs+2,___flmul@grs+3
  8616  013388  C08B  F08C         	movff	___flmul@grs+1,___flmul@grs+2
  8617  01338C  C08A  F08B         	movff	___flmul@grs,___flmul@grs+1
  8618  013390  0100               	movlb	0	; () banked
  8619  013392  6B8A               	clrf	___flmul@grs& (0+255),b
  8620                           
  8621                           ; BSR set to: 0
  8622  013394  0100               	movlb	0	; () banked
  8623  013396  5189               	movf	___flmul@aexp& (0+255),w,b
  8624  013398  C08E  F084         	movff	___flmul@bexp,??___flmul
  8625  01339C  0100               	movlb	0	; () banked
  8626  01339E  6B85               	clrf	(??___flmul+1)& (0+255),b
  8627  0133A0  0100               	movlb	0	; () banked
  8628  0133A2  2784               	addwf	??___flmul& (0+255),f,b
  8629  0133A4  0E00               	movlw	0
  8630  0133A6  2385               	addwfc	(??___flmul+1)& (0+255),f,b
  8631  0133A8  0E82               	movlw	130
  8632  0133AA  0100               	movlb	0	; () banked
  8633  0133AC  2584               	addwf	??___flmul& (0+255),w,b
  8634  0133AE  0100               	movlb	0	; () banked
  8635  0133B0  6F93               	movwf	___flmul@temp& (0+255),b
  8636  0133B2  0EFF               	movlw	255
  8637  0133B4  0100               	movlb	0	; () banked
  8638  0133B6  2185               	addwfc	(??___flmul+1)& (0+255),w,b
  8639  0133B8  0100               	movlb	0	; () banked
  8640  0133BA  6F94               	movwf	(___flmul@temp+1)& (0+255),b
  8641  0133BC  D015               	goto	l7597
  8642  0133BE                     l7591:
  8643                           
  8644                           ; BSR set to: 0
  8645  0133BE  0100               	movlb	0	; () banked
  8646  0133C0  90D8               	bcf	status,0,c
  8647  0133C2  378F               	rlcf	___flmul@prod& (0+255),f,b
  8648  0133C4  3790               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8649  0133C6  3791               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8650  0133C8  3792               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8651                           
  8652                           ; BSR set to: 0
  8653  0133CA  0100               	movlb	0	; () banked
  8654  0133CC  AF8D               	btfss	(___flmul@grs+3)& (0+255),7,b
  8655  0133CE  D002               	goto	l1498
  8656                           
  8657                           ; BSR set to: 0
  8658  0133D0  0100               	movlb	0	; () banked
  8659  0133D2  818F               	bsf	___flmul@prod& (0+255),0,b
  8660  0133D4                     l1498:
  8661                           
  8662                           ; BSR set to: 0
  8663  0133D4  0100               	movlb	0	; () banked
  8664  0133D6  90D8               	bcf	status,0,c
  8665  0133D8  378A               	rlcf	___flmul@grs& (0+255),f,b
  8666  0133DA  378B               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8667  0133DC  378C               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8668  0133DE  378D               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8669  0133E0  0100               	movlb	0	; () banked
  8670  0133E2  0793               	decf	___flmul@temp& (0+255),f,b
  8671  0133E4  A0D8               	btfss	status,0,c
  8672  0133E6  0794               	decf	(___flmul@temp+1)& (0+255),f,b
  8673  0133E8                     l7597:
  8674                           
  8675                           ; BSR set to: 0
  8676  0133E8  0100               	movlb	0	; () banked
  8677  0133EA  AF91               	btfss	(___flmul@prod+2)& (0+255),7,b
  8678  0133EC  D7E8               	goto	l7591
  8679                           
  8680                           ; BSR set to: 0
  8681                           
  8682                           ; BSR set to: 0
  8683  0133EE  0E00               	movlw	0
  8684  0133F0  0100               	movlb	0	; () banked
  8685  0133F2  6F89               	movwf	___flmul@aexp& (0+255),b
  8686                           
  8687                           ; BSR set to: 0
  8688  0133F4  0100               	movlb	0	; () banked
  8689  0133F6  AF8D               	btfss	(___flmul@grs+3)& (0+255),7,b
  8690  0133F8  D024               	goto	l1500
  8691                           
  8692                           ; BSR set to: 0
  8693  0133FA  0EFF               	movlw	255
  8694  0133FC  0100               	movlb	0	; () banked
  8695  0133FE  158A               	andwf	___flmul@grs& (0+255),w,b
  8696  013400  0100               	movlb	0	; () banked
  8697  013402  6F84               	movwf	??___flmul& (0+255),b
  8698  013404  0EFF               	movlw	255
  8699  013406  0100               	movlb	0	; () banked
  8700  013408  158B               	andwf	(___flmul@grs+1)& (0+255),w,b
  8701  01340A  0100               	movlb	0	; () banked
  8702  01340C  6F85               	movwf	(??___flmul+1)& (0+255),b
  8703  01340E  0EFF               	movlw	255
  8704  013410  0100               	movlb	0	; () banked
  8705  013412  158C               	andwf	(___flmul@grs+2)& (0+255),w,b
  8706  013414  0100               	movlb	0	; () banked
  8707  013416  6F86               	movwf	(??___flmul+2)& (0+255),b
  8708  013418  0E7F               	movlw	127
  8709  01341A  0100               	movlb	0	; () banked
  8710  01341C  158D               	andwf	(___flmul@grs+3)& (0+255),w,b
  8711  01341E  0100               	movlb	0	; () banked
  8712  013420  6F87               	movwf	(??___flmul+3)& (0+255),b
  8713  013422  0100               	movlb	0	; () banked
  8714  013424  5184               	movf	??___flmul& (0+255),w,b
  8715  013426  0100               	movlb	0	; () banked
  8716  013428  1185               	iorwf	(??___flmul+1)& (0+255),w,b
  8717  01342A  0100               	movlb	0	; () banked
  8718  01342C  1186               	iorwf	(??___flmul+2)& (0+255),w,b
  8719  01342E  0100               	movlb	0	; () banked
  8720  013430  1187               	iorwf	(??___flmul+3)& (0+255),w,b
  8721  013432  A4D8               	btfss	status,2,c
  8722  013434  D003               	goto	l7607
  8723                           
  8724                           ; BSR set to: 0
  8725                           
  8726                           ; BSR set to: 0
  8727  013436  0100               	movlb	0	; () banked
  8728  013438  A18F               	btfss	___flmul@prod& (0+255),0,b
  8729  01343A  D003               	goto	l1500
  8730  01343C                     l7607:
  8731                           
  8732                           ; BSR set to: 0
  8733  01343C  0E01               	movlw	1
  8734  01343E  0100               	movlb	0	; () banked
  8735  013440  6F89               	movwf	___flmul@aexp& (0+255),b
  8736  013442                     l1500:
  8737                           
  8738                           ; BSR set to: 0
  8739  013442  0100               	movlb	0	; () banked
  8740  013444  5189               	movf	___flmul@aexp& (0+255),w,b
  8741  013446  0100               	movlb	0	; () banked
  8742  013448  B4D8               	btfsc	status,2,c
  8743  01344A  D023               	goto	l7617
  8744                           
  8745                           ; BSR set to: 0
  8746  01344C  0E01               	movlw	1
  8747  01344E  0100               	movlb	0	; () banked
  8748  013450  278F               	addwf	___flmul@prod& (0+255),f,b
  8749  013452  0E00               	movlw	0
  8750  013454  2390               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8751  013456  2391               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8752  013458  2392               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8753                           
  8754                           ; BSR set to: 0
  8755  01345A  0100               	movlb	0	; () banked
  8756  01345C  A192               	btfss	(___flmul@prod+3)& (0+255),0,b
  8757  01345E  D019               	goto	l7617
  8758                           
  8759                           ; BSR set to: 0
  8760  013460  C08F  F084         	movff	___flmul@prod,??___flmul
  8761  013464  C090  F085         	movff	___flmul@prod+1,??___flmul+1
  8762  013468  C091  F086         	movff	___flmul@prod+2,??___flmul+2
  8763  01346C  C092  F087         	movff	___flmul@prod+3,??___flmul+3
  8764  013470  0100               	movlb	0	; () banked
  8765  013472  3587               	rlcf	(??___flmul+3)& (0+255),w,b
  8766  013474  3387               	rrcf	(??___flmul+3)& (0+255),f,b
  8767  013476  3386               	rrcf	(??___flmul+2)& (0+255),f,b
  8768  013478  3385               	rrcf	(??___flmul+1)& (0+255),f,b
  8769  01347A  3384               	rrcf	??___flmul& (0+255),f,b
  8770  01347C  C084  F08F         	movff	??___flmul,___flmul@prod
  8771  013480  C085  F090         	movff	??___flmul+1,___flmul@prod+1
  8772  013484  C086  F091         	movff	??___flmul+2,___flmul@prod+2
  8773  013488  C087  F092         	movff	??___flmul+3,___flmul@prod+3
  8774                           
  8775                           ; BSR set to: 0
  8776  01348C  0100               	movlb	0	; () banked
  8777  01348E  4B93               	infsnz	___flmul@temp& (0+255),f,b
  8778  013490  2B94               	incf	(___flmul@temp+1)& (0+255),f,b
  8779  013492                     l7617:
  8780                           
  8781                           ; BSR set to: 0
  8782  013492  0100               	movlb	0	; () banked
  8783  013494  BF94               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8784  013496  D010               	goto	l7621
  8785  013498  0100               	movlb	0	; () banked
  8786  01349A  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8787  01349C  E104               	bnz	u9850
  8788  01349E  0100               	movlb	0	; () banked
  8789  0134A0  2993               	incf	___flmul@temp& (0+255),w,b
  8790  0134A2  A0D8               	btfss	status,0,c
  8791  0134A4  D009               	goto	l7621
  8792  0134A6                     u9850:
  8793                           
  8794                           ; BSR set to: 0
  8795  0134A6  0E00               	movlw	0
  8796  0134A8  0100               	movlb	0	; () banked
  8797  0134AA  6F8F               	movwf	___flmul@prod& (0+255),b
  8798  0134AC  0E00               	movlw	0
  8799  0134AE  6F90               	movwf	(___flmul@prod+1)& (0+255),b
  8800  0134B0  0E80               	movlw	128
  8801  0134B2  6F91               	movwf	(___flmul@prod+2)& (0+255),b
  8802  0134B4  0E7F               	movlw	127
  8803  0134B6  D02B               	goto	L8
  8804  0134B8                     l7621:
  8805                           
  8806                           ; BSR set to: 0
  8807  0134B8  0100               	movlb	0	; () banked
  8808  0134BA  BF94               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8809  0134BC  D007               	goto	l7623
  8810  0134BE  0100               	movlb	0	; () banked
  8811  0134C0  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8812  0134C2  E111               	bnz	l1508
  8813  0134C4  0100               	movlb	0	; () banked
  8814  0134C6  0593               	decf	___flmul@temp& (0+255),w,b
  8815  0134C8  B0D8               	btfsc	status,0,c
  8816  0134CA  D00D               	goto	l1508
  8817  0134CC                     l7623:
  8818                           
  8819                           ; BSR set to: 0
  8820  0134CC  0E00               	movlw	0
  8821  0134CE  0100               	movlb	0	; () banked
  8822  0134D0  6F8F               	movwf	___flmul@prod& (0+255),b
  8823  0134D2  0E00               	movlw	0
  8824  0134D4  6F90               	movwf	(___flmul@prod+1)& (0+255),b
  8825  0134D6  0E00               	movlw	0
  8826  0134D8  6F91               	movwf	(___flmul@prod+2)& (0+255),b
  8827  0134DA  0E00               	movlw	0
  8828  0134DC  6F92               	movwf	(___flmul@prod+3)& (0+255),b
  8829  0134DE  0E00               	movlw	0
  8830  0134E0  0100               	movlb	0	; () banked
  8831  0134E2  6F88               	movwf	___flmul@sign& (0+255),b
  8832  0134E4  D015               	goto	l7633
  8833  0134E6                     l1508:
  8834                           
  8835                           ; BSR set to: 0
  8836  0134E6  C093  F08E         	movff	___flmul@temp,___flmul@bexp
  8837                           
  8838                           ; BSR set to: 0
  8839  0134EA  0EFF               	movlw	255
  8840  0134EC  0100               	movlb	0	; () banked
  8841  0134EE  178F               	andwf	___flmul@prod& (0+255),f,b
  8842  0134F0  0EFF               	movlw	255
  8843  0134F2  1790               	andwf	(___flmul@prod+1)& (0+255),f,b
  8844  0134F4  0E7F               	movlw	127
  8845  0134F6  1791               	andwf	(___flmul@prod+2)& (0+255),f,b
  8846  0134F8  0E00               	movlw	0
  8847  0134FA  1792               	andwf	(___flmul@prod+3)& (0+255),f,b
  8848                           
  8849                           ; BSR set to: 0
  8850  0134FC  0100               	movlb	0	; () banked
  8851  0134FE  A18E               	btfss	___flmul@bexp& (0+255),0,b
  8852  013500  D002               	goto	l7631
  8853                           
  8854                           ; BSR set to: 0
  8855  013502  0100               	movlb	0	; () banked
  8856  013504  8F91               	bsf	(___flmul@prod+2)& (0+255),7,b
  8857  013506                     l7631:
  8858                           
  8859                           ; BSR set to: 0
  8860  013506  0100               	movlb	0	; () banked
  8861  013508  90D8               	bcf	status,0,c
  8862  01350A  318E               	rrcf	___flmul@bexp& (0+255),w,b
  8863  01350C  0100               	movlb	0	; () banked
  8864  01350E                     L8:
  8865  01350E  6F92               	movwf	(___flmul@prod+3)& (0+255),b
  8866  013510                     l7633:
  8867                           
  8868                           ; BSR set to: 0
  8869  013510  0100               	movlb	0	; () banked
  8870  013512  5188               	movf	___flmul@sign& (0+255),w,b
  8871  013514  0100               	movlb	0	; () banked
  8872  013516  1392               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8873                           
  8874                           ; BSR set to: 0
  8875  013518  C08F  F07C         	movff	___flmul@prod,?___flmul
  8876  01351C  C090  F07D         	movff	___flmul@prod+1,?___flmul+1
  8877  013520  C091  F07E         	movff	___flmul@prod+2,?___flmul+2
  8878  013524  C092  F07F         	movff	___flmul@prod+3,?___flmul+3
  8879  013528  0012               	return	
  8880  01352A                     __end_of___flmul:
  8881                           	opt stack 0
  8882                           tblptru	equ	0xFF8
  8883                           tblptrh	equ	0xFF7
  8884                           tblptrl	equ	0xFF6
  8885                           tablat	equ	0xFF5
  8886                           prodh	equ	0xFF4
  8887                           prodl	equ	0xFF3
  8888                           intcon	equ	0xFF2
  8889                           postinc0	equ	0xFEE
  8890                           wreg	equ	0xFE8
  8891                           indf2	equ	0xFDF
  8892                           postinc2	equ	0xFDE
  8893                           fsr2h	equ	0xFDA
  8894                           fsr2l	equ	0xFD9
  8895                           status	equ	0xFD8
  8896                           
  8897 ;; *************** function ___awmod *****************
  8898 ;; Defined at:
  8899 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  8900 ;; Parameters:    Size  Location     Type
  8901 ;;  dividend        2   14[BANK0 ] int 
  8902 ;;  divisor         2   16[BANK0 ] int 
  8903 ;; Auto vars:     Size  Location     Type
  8904 ;;  sign            1   19[BANK0 ] unsigned char 
  8905 ;;  counter         1   18[BANK0 ] unsigned char 
  8906 ;; Return value:  Size  Location     Type
  8907 ;;                  2   14[BANK0 ] int 
  8908 ;; Registers used:
  8909 ;;		wreg, status,2, status,0
  8910 ;; Tracked objects:
  8911 ;;		On entry : 0/0
  8912 ;;		On exit  : 0/0
  8913 ;;		Unchanged: 0/0
  8914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8915 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8916 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8918 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8919 ;;Total ram usage:        6 bytes
  8920 ;; Hardware stack levels used:    1
  8921 ;; Hardware stack levels required when called:    3
  8922 ;; This function calls:
  8923 ;;		Nothing
  8924 ;; This function is called by:
  8925 ;;		_fround
  8926 ;;		_scale
  8927 ;; This function uses a non-reentrant model
  8928 ;;
  8929                           
  8930                           	psect	text13
  8931  01582C                     __ptext13:
  8932                           	opt stack 0
  8933  01582C                     ___awmod:
  8934                           	opt stack 24
  8935                           
  8936                           ; BSR set to: 0
  8937                           ;incstack = 0
  8938  01582C  0E00               	movlw	0
  8939  01582E  0100               	movlb	0	; () banked
  8940  015830  6F73               	movwf	___awmod@sign& (0+255),b
  8941                           
  8942                           ; BSR set to: 0
  8943  015832  0100               	movlb	0	; () banked
  8944  015834  AF6F               	btfss	(___awmod@dividend+1)& (0+255),7,b
  8945  015836  D008               	goto	l7691
  8946                           
  8947                           ; BSR set to: 0
  8948  015838  0100               	movlb	0	; () banked
  8949  01583A  6D6E               	negf	___awmod@dividend& (0+255),b
  8950  01583C  1F6F               	comf	(___awmod@dividend+1)& (0+255),f,b
  8951  01583E  B0D8               	btfsc	status,0,c
  8952  015840  2B6F               	incf	(___awmod@dividend+1)& (0+255),f,b
  8953                           
  8954                           ; BSR set to: 0
  8955  015842  0E01               	movlw	1
  8956  015844  0100               	movlb	0	; () banked
  8957  015846  6F73               	movwf	___awmod@sign& (0+255),b
  8958  015848                     l7691:
  8959                           
  8960                           ; BSR set to: 0
  8961  015848  0100               	movlb	0	; () banked
  8962  01584A  AF71               	btfss	(___awmod@divisor+1)& (0+255),7,b
  8963  01584C  D005               	goto	l7695
  8964                           
  8965                           ; BSR set to: 0
  8966  01584E  0100               	movlb	0	; () banked
  8967  015850  6D70               	negf	___awmod@divisor& (0+255),b
  8968  015852  1F71               	comf	(___awmod@divisor+1)& (0+255),f,b
  8969  015854  B0D8               	btfsc	status,0,c
  8970  015856  2B71               	incf	(___awmod@divisor+1)& (0+255),f,b
  8971  015858                     l7695:
  8972                           
  8973                           ; BSR set to: 0
  8974  015858  0100               	movlb	0	; () banked
  8975  01585A  5170               	movf	___awmod@divisor& (0+255),w,b
  8976  01585C  0100               	movlb	0	; () banked
  8977  01585E  1171               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  8978  015860  B4D8               	btfsc	status,2,c
  8979  015862  D026               	goto	l7711
  8980                           
  8981                           ; BSR set to: 0
  8982  015864  0E01               	movlw	1
  8983  015866  0100               	movlb	0	; () banked
  8984  015868  6F72               	movwf	___awmod@counter& (0+255),b
  8985  01586A  D006               	goto	l7701
  8986  01586C                     l7699:
  8987                           
  8988                           ; BSR set to: 0
  8989  01586C  0100               	movlb	0	; () banked
  8990  01586E  90D8               	bcf	status,0,c
  8991  015870  3770               	rlcf	___awmod@divisor& (0+255),f,b
  8992  015872  3771               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  8993  015874  0100               	movlb	0	; () banked
  8994  015876  2B72               	incf	___awmod@counter& (0+255),f,b
  8995  015878                     l7701:
  8996                           
  8997                           ; BSR set to: 0
  8998  015878  0100               	movlb	0	; () banked
  8999  01587A  AF71               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9000  01587C  D7F7               	goto	l7699
  9001  01587E                     l7703:
  9002                           
  9003                           ; BSR set to: 0
  9004  01587E  0100               	movlb	0	; () banked
  9005  015880  5170               	movf	___awmod@divisor& (0+255),w,b
  9006  015882  0100               	movlb	0	; () banked
  9007  015884  5D6E               	subwf	___awmod@dividend& (0+255),w,b
  9008  015886  0100               	movlb	0	; () banked
  9009  015888  5171               	movf	(___awmod@divisor+1)& (0+255),w,b
  9010  01588A  0100               	movlb	0	; () banked
  9011  01588C  596F               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  9012  01588E  A0D8               	btfss	status,0,c
  9013  015890  D008               	goto	l7707
  9014                           
  9015                           ; BSR set to: 0
  9016  015892  0100               	movlb	0	; () banked
  9017  015894  5170               	movf	___awmod@divisor& (0+255),w,b
  9018  015896  0100               	movlb	0	; () banked
  9019  015898  5F6E               	subwf	___awmod@dividend& (0+255),f,b
  9020  01589A  0100               	movlb	0	; () banked
  9021  01589C  5171               	movf	(___awmod@divisor+1)& (0+255),w,b
  9022  01589E  0100               	movlb	0	; () banked
  9023  0158A0  5B6F               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  9024  0158A2                     l7707:
  9025                           
  9026                           ; BSR set to: 0
  9027  0158A2  0100               	movlb	0	; () banked
  9028  0158A4  90D8               	bcf	status,0,c
  9029  0158A6  3371               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  9030  0158A8  3370               	rrcf	___awmod@divisor& (0+255),f,b
  9031                           
  9032                           ; BSR set to: 0
  9033  0158AA  0100               	movlb	0	; () banked
  9034  0158AC  2F72               	decfsz	___awmod@counter& (0+255),f,b
  9035  0158AE  D7E7               	goto	l7703
  9036  0158B0                     l7711:
  9037                           
  9038                           ; BSR set to: 0
  9039  0158B0  0100               	movlb	0	; () banked
  9040  0158B2  5173               	movf	___awmod@sign& (0+255),w,b
  9041  0158B4  0100               	movlb	0	; () banked
  9042  0158B6  B4D8               	btfsc	status,2,c
  9043  0158B8  D005               	goto	l7715
  9044                           
  9045                           ; BSR set to: 0
  9046  0158BA  0100               	movlb	0	; () banked
  9047  0158BC  6D6E               	negf	___awmod@dividend& (0+255),b
  9048  0158BE  1F6F               	comf	(___awmod@dividend+1)& (0+255),f,b
  9049  0158C0  B0D8               	btfsc	status,0,c
  9050  0158C2  2B6F               	incf	(___awmod@dividend+1)& (0+255),f,b
  9051  0158C4                     l7715:
  9052                           
  9053                           ; BSR set to: 0
  9054  0158C4  C06E  F06E         	movff	___awmod@dividend,?___awmod
  9055  0158C8  C06F  F06F         	movff	___awmod@dividend+1,?___awmod+1
  9056  0158CC  0012               	return	
  9057  0158CE                     __end_of___awmod:
  9058                           	opt stack 0
  9059                           tblptru	equ	0xFF8
  9060                           tblptrh	equ	0xFF7
  9061                           tblptrl	equ	0xFF6
  9062                           tablat	equ	0xFF5
  9063                           prodh	equ	0xFF4
  9064                           prodl	equ	0xFF3
  9065                           intcon	equ	0xFF2
  9066                           postinc0	equ	0xFEE
  9067                           wreg	equ	0xFE8
  9068                           indf2	equ	0xFDF
  9069                           postinc2	equ	0xFDE
  9070                           fsr2h	equ	0xFDA
  9071                           fsr2l	equ	0xFD9
  9072                           status	equ	0xFD8
  9073                           
  9074 ;; *************** function ___awdiv *****************
  9075 ;; Defined at:
  9076 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  9077 ;; Parameters:    Size  Location     Type
  9078 ;;  dividend        2   20[BANK0 ] int 
  9079 ;;  divisor         2   22[BANK0 ] int 
  9080 ;; Auto vars:     Size  Location     Type
  9081 ;;  quotient        2   26[BANK0 ] int 
  9082 ;;  sign            1   25[BANK0 ] unsigned char 
  9083 ;;  counter         1   24[BANK0 ] unsigned char 
  9084 ;; Return value:  Size  Location     Type
  9085 ;;                  2   20[BANK0 ] int 
  9086 ;; Registers used:
  9087 ;;		wreg, status,2, status,0
  9088 ;; Tracked objects:
  9089 ;;		On entry : 0/0
  9090 ;;		On exit  : 0/0
  9091 ;;		Unchanged: 0/0
  9092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9093 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9094 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9096 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9097 ;;Total ram usage:        8 bytes
  9098 ;; Hardware stack levels used:    1
  9099 ;; Hardware stack levels required when called:    3
  9100 ;; This function calls:
  9101 ;;		Nothing
  9102 ;; This function is called by:
  9103 ;;		_fround
  9104 ;;		_scale
  9105 ;;		_sprintf
  9106 ;; This function uses a non-reentrant model
  9107 ;;
  9108                           
  9109                           	psect	text14
  9110  015490                     __ptext14:
  9111                           	opt stack 0
  9112  015490                     ___awdiv:
  9113                           	opt stack 24
  9114                           
  9115                           ; BSR set to: 0
  9116                           ;incstack = 0
  9117  015490  0E00               	movlw	0
  9118  015492  0100               	movlb	0	; () banked
  9119  015494  6F79               	movwf	___awdiv@sign& (0+255),b
  9120                           
  9121                           ; BSR set to: 0
  9122  015496  0100               	movlb	0	; () banked
  9123  015498  AF77               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9124  01549A  D008               	goto	l7647
  9125                           
  9126                           ; BSR set to: 0
  9127  01549C  0100               	movlb	0	; () banked
  9128  01549E  6D76               	negf	___awdiv@divisor& (0+255),b
  9129  0154A0  1F77               	comf	(___awdiv@divisor+1)& (0+255),f,b
  9130  0154A2  B0D8               	btfsc	status,0,c
  9131  0154A4  2B77               	incf	(___awdiv@divisor+1)& (0+255),f,b
  9132                           
  9133                           ; BSR set to: 0
  9134  0154A6  0E01               	movlw	1
  9135  0154A8  0100               	movlb	0	; () banked
  9136  0154AA  6F79               	movwf	___awdiv@sign& (0+255),b
  9137  0154AC                     l7647:
  9138                           
  9139                           ; BSR set to: 0
  9140  0154AC  0100               	movlb	0	; () banked
  9141  0154AE  AF75               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  9142  0154B0  D008               	goto	l7653
  9143                           
  9144                           ; BSR set to: 0
  9145  0154B2  0100               	movlb	0	; () banked
  9146  0154B4  6D74               	negf	___awdiv@dividend& (0+255),b
  9147  0154B6  1F75               	comf	(___awdiv@dividend+1)& (0+255),f,b
  9148  0154B8  B0D8               	btfsc	status,0,c
  9149  0154BA  2B75               	incf	(___awdiv@dividend+1)& (0+255),f,b
  9150                           
  9151                           ; BSR set to: 0
  9152  0154BC  0E01               	movlw	1
  9153  0154BE  0100               	movlb	0	; () banked
  9154  0154C0  1B79               	xorwf	___awdiv@sign& (0+255),f,b
  9155  0154C2                     l7653:
  9156                           
  9157                           ; BSR set to: 0
  9158  0154C2  0E00               	movlw	0
  9159  0154C4  0100               	movlb	0	; () banked
  9160  0154C6  6F7B               	movwf	(___awdiv@quotient+1)& (0+255),b
  9161  0154C8  0E00               	movlw	0
  9162  0154CA  6F7A               	movwf	___awdiv@quotient& (0+255),b
  9163                           
  9164                           ; BSR set to: 0
  9165  0154CC  0100               	movlb	0	; () banked
  9166  0154CE  5176               	movf	___awdiv@divisor& (0+255),w,b
  9167  0154D0  0100               	movlb	0	; () banked
  9168  0154D2  1177               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  9169  0154D4  B4D8               	btfsc	status,2,c
  9170  0154D6  D02C               	goto	l7675
  9171                           
  9172                           ; BSR set to: 0
  9173  0154D8  0E01               	movlw	1
  9174  0154DA  0100               	movlb	0	; () banked
  9175  0154DC  6F78               	movwf	___awdiv@counter& (0+255),b
  9176  0154DE  D006               	goto	l7661
  9177  0154E0                     l7659:
  9178                           
  9179                           ; BSR set to: 0
  9180  0154E0  0100               	movlb	0	; () banked
  9181  0154E2  90D8               	bcf	status,0,c
  9182  0154E4  3776               	rlcf	___awdiv@divisor& (0+255),f,b
  9183  0154E6  3777               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  9184  0154E8  0100               	movlb	0	; () banked
  9185  0154EA  2B78               	incf	___awdiv@counter& (0+255),f,b
  9186  0154EC                     l7661:
  9187                           
  9188                           ; BSR set to: 0
  9189  0154EC  0100               	movlb	0	; () banked
  9190  0154EE  AF77               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9191  0154F0  D7F7               	goto	l7659
  9192  0154F2                     l7663:
  9193                           
  9194                           ; BSR set to: 0
  9195  0154F2  0100               	movlb	0	; () banked
  9196  0154F4  90D8               	bcf	status,0,c
  9197  0154F6  377A               	rlcf	___awdiv@quotient& (0+255),f,b
  9198  0154F8  377B               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  9199                           
  9200                           ; BSR set to: 0
  9201  0154FA  0100               	movlb	0	; () banked
  9202  0154FC  5176               	movf	___awdiv@divisor& (0+255),w,b
  9203  0154FE  0100               	movlb	0	; () banked
  9204  015500  5D74               	subwf	___awdiv@dividend& (0+255),w,b
  9205  015502  0100               	movlb	0	; () banked
  9206  015504  5177               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9207  015506  0100               	movlb	0	; () banked
  9208  015508  5975               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  9209  01550A  A0D8               	btfss	status,0,c
  9210  01550C  D00A               	goto	l7671
  9211                           
  9212                           ; BSR set to: 0
  9213  01550E  0100               	movlb	0	; () banked
  9214  015510  5176               	movf	___awdiv@divisor& (0+255),w,b
  9215  015512  0100               	movlb	0	; () banked
  9216  015514  5F74               	subwf	___awdiv@dividend& (0+255),f,b
  9217  015516  0100               	movlb	0	; () banked
  9218  015518  5177               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9219  01551A  0100               	movlb	0	; () banked
  9220  01551C  5B75               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  9221                           
  9222                           ; BSR set to: 0
  9223  01551E  0100               	movlb	0	; () banked
  9224  015520  817A               	bsf	___awdiv@quotient& (0+255),0,b
  9225  015522                     l7671:
  9226                           
  9227                           ; BSR set to: 0
  9228  015522  0100               	movlb	0	; () banked
  9229  015524  90D8               	bcf	status,0,c
  9230  015526  3377               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  9231  015528  3376               	rrcf	___awdiv@divisor& (0+255),f,b
  9232                           
  9233                           ; BSR set to: 0
  9234  01552A  0100               	movlb	0	; () banked
  9235  01552C  2F78               	decfsz	___awdiv@counter& (0+255),f,b
  9236  01552E  D7E1               	goto	l7663
  9237  015530                     l7675:
  9238                           
  9239                           ; BSR set to: 0
  9240  015530  0100               	movlb	0	; () banked
  9241  015532  5179               	movf	___awdiv@sign& (0+255),w,b
  9242  015534  0100               	movlb	0	; () banked
  9243  015536  B4D8               	btfsc	status,2,c
  9244  015538  D005               	goto	l7679
  9245                           
  9246                           ; BSR set to: 0
  9247  01553A  0100               	movlb	0	; () banked
  9248  01553C  6D7A               	negf	___awdiv@quotient& (0+255),b
  9249  01553E  1F7B               	comf	(___awdiv@quotient+1)& (0+255),f,b
  9250  015540  B0D8               	btfsc	status,0,c
  9251  015542  2B7B               	incf	(___awdiv@quotient+1)& (0+255),f,b
  9252  015544                     l7679:
  9253                           
  9254                           ; BSR set to: 0
  9255  015544  C07A  F074         	movff	___awdiv@quotient,?___awdiv
  9256  015548  C07B  F075         	movff	___awdiv@quotient+1,?___awdiv+1
  9257  01554C  0012               	return	
  9258  01554E                     __end_of___awdiv:
  9259                           	opt stack 0
  9260                           tblptru	equ	0xFF8
  9261                           tblptrh	equ	0xFF7
  9262                           tblptrl	equ	0xFF6
  9263                           tablat	equ	0xFF5
  9264                           prodh	equ	0xFF4
  9265                           prodl	equ	0xFF3
  9266                           intcon	equ	0xFF2
  9267                           postinc0	equ	0xFEE
  9268                           wreg	equ	0xFE8
  9269                           indf2	equ	0xFDF
  9270                           postinc2	equ	0xFDE
  9271                           fsr2h	equ	0xFDA
  9272                           fsr2l	equ	0xFD9
  9273                           status	equ	0xFD8
  9274                           
  9275 ;; *************** function __tdiv_to_l_ *****************
  9276 ;; Defined at:
  9277 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
  9278 ;; Parameters:    Size  Location     Type
  9279 ;;  f1              4   14[BANK0 ] float 
  9280 ;;  f2              4   18[BANK0 ] float 
  9281 ;; Auto vars:     Size  Location     Type
  9282 ;;  quot            4   25[BANK0 ] unsigned long 
  9283 ;;  exp1            1   30[BANK0 ] unsigned char 
  9284 ;;  cntr            1   29[BANK0 ] unsigned char 
  9285 ;; Return value:  Size  Location     Type
  9286 ;;                  4   14[BANK0 ] unsigned long 
  9287 ;; Registers used:
  9288 ;;		wreg, status,2, status,0
  9289 ;; Tracked objects:
  9290 ;;		On entry : 0/0
  9291 ;;		On exit  : 0/0
  9292 ;;		Unchanged: 0/0
  9293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9294 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9295 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9296 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9297 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9298 ;;Total ram usage:       17 bytes
  9299 ;; Hardware stack levels used:    1
  9300 ;; Hardware stack levels required when called:    3
  9301 ;; This function calls:
  9302 ;;		Nothing
  9303 ;; This function is called by:
  9304 ;;		_sprintf
  9305 ;; This function uses a non-reentrant model
  9306 ;;
  9307                           
  9308                           	psect	text15
  9309  0148C8                     __ptext15:
  9310                           	opt stack 0
  9311  0148C8                     __tdiv_to_l_:
  9312                           	opt stack 25
  9313                           
  9314                           ; BSR set to: 0
  9315                           ;incstack = 0
  9316  0148C8  C070  F076         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  9317  0148CC  0100               	movlb	0	; () banked
  9318  0148CE  6B77               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9319  0148D0  6B78               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9320  0148D2  0100               	movlb	0	; () banked
  9321  0148D4  356F               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  9322  0148D6  0100               	movlb	0	; () banked
  9323  0148D8  3776               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9324  0148DA  E301               	bnc	u10101
  9325  0148DC  8177               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9326  0148DE                     u10101:
  9327  0148DE  0100               	movlb	0	; () banked
  9328  0148E0  5176               	movf	??__tdiv_to_l_& (0+255),w,b
  9329  0148E2  0100               	movlb	0	; () banked
  9330  0148E4  6F7E               	movwf	__tdiv_to_l_@exp1& (0+255),b
  9331  0148E6  0100               	movlb	0	; () banked
  9332  0148E8  517E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9333  0148EA  A4D8               	btfss	status,2,c
  9334  0148EC  D00A               	goto	l7809
  9335                           
  9336                           ; BSR set to: 0
  9337  0148EE  0E00               	movlw	0
  9338  0148F0  0100               	movlb	0	; () banked
  9339  0148F2  6F6E               	movwf	?__tdiv_to_l_& (0+255),b
  9340  0148F4  0E00               	movlw	0
  9341  0148F6  6F6F               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9342  0148F8  0E00               	movlw	0
  9343  0148FA  6F70               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9344  0148FC  0E00               	movlw	0
  9345  0148FE  6F71               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9346                           
  9347                           ; BSR set to: 0
  9348  014900  0012               	return	
  9349  014902                     l7809:
  9350                           
  9351                           ; BSR set to: 0
  9352  014902  C074  F076         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  9353  014906  0100               	movlb	0	; () banked
  9354  014908  6B77               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9355  01490A  6B78               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9356  01490C  0100               	movlb	0	; () banked
  9357  01490E  3573               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9358  014910  0100               	movlb	0	; () banked
  9359  014912  3776               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9360  014914  E301               	bnc	u10121
  9361  014916  8177               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9362  014918                     u10121:
  9363  014918  0100               	movlb	0	; () banked
  9364  01491A  5176               	movf	??__tdiv_to_l_& (0+255),w,b
  9365  01491C  0100               	movlb	0	; () banked
  9366  01491E  6F7D               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9367  014920  0100               	movlb	0	; () banked
  9368  014922  517D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9369  014924  A4D8               	btfss	status,2,c
  9370  014926  D00A               	goto	l7815
  9371                           
  9372                           ; BSR set to: 0
  9373  014928  0E00               	movlw	0
  9374  01492A  0100               	movlb	0	; () banked
  9375  01492C  6F6E               	movwf	?__tdiv_to_l_& (0+255),b
  9376  01492E  0E00               	movlw	0
  9377  014930  6F6F               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9378  014932  0E00               	movlw	0
  9379  014934  6F70               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9380  014936  0E00               	movlw	0
  9381  014938  6F71               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9382                           
  9383                           ; BSR set to: 0
  9384  01493A  0012               	return	
  9385  01493C                     l7815:
  9386                           
  9387                           ; BSR set to: 0
  9388  01493C  0100               	movlb	0	; () banked
  9389  01493E  8F6F               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  9390                           
  9391                           ; BSR set to: 0
  9392  014940  0EFF               	movlw	255
  9393  014942  0100               	movlb	0	; () banked
  9394  014944  176E               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  9395  014946  0EFF               	movlw	255
  9396  014948  0100               	movlb	0	; () banked
  9397  01494A  176F               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9398  01494C  0E00               	movlw	0
  9399  01494E  0100               	movlb	0	; () banked
  9400  014950  1770               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9401  014952  0100               	movlb	0	; () banked
  9402  014954  8F73               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  9403                           
  9404                           ; BSR set to: 0
  9405  014956  0EFF               	movlw	255
  9406  014958  0100               	movlb	0	; () banked
  9407  01495A  1772               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  9408  01495C  0EFF               	movlw	255
  9409  01495E  0100               	movlb	0	; () banked
  9410  014960  1773               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  9411  014962  0E00               	movlw	0
  9412  014964  0100               	movlb	0	; () banked
  9413  014966  1774               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  9414                           
  9415                           ; BSR set to: 0
  9416  014968  0E00               	movlw	0
  9417  01496A  0100               	movlb	0	; () banked
  9418  01496C  6F79               	movwf	__tdiv_to_l_@quot& (0+255),b
  9419  01496E  0E00               	movlw	0
  9420  014970  6F7A               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  9421  014972  0E00               	movlw	0
  9422  014974  6F7B               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  9423  014976  0E00               	movlw	0
  9424  014978  6F7C               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  9425                           
  9426                           ; BSR set to: 0
  9427  01497A  0E7F               	movlw	127
  9428  01497C  0100               	movlb	0	; () banked
  9429  01497E  5F7E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  9430                           
  9431                           ; BSR set to: 0
  9432  014980  0100               	movlb	0	; () banked
  9433  014982  517D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9434  014984  0F98               	addlw	152
  9435  014986  0100               	movlb	0	; () banked
  9436  014988  5F7E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  9437                           
  9438                           ; BSR set to: 0
  9439  01498A  0E18               	movlw	24
  9440  01498C  0100               	movlb	0	; () banked
  9441  01498E  6F7D               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9442  014990                     l1215:
  9443                           
  9444                           ; BSR set to: 0
  9445  014990  0100               	movlb	0	; () banked
  9446  014992  90D8               	bcf	status,0,c
  9447  014994  3779               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  9448  014996  377A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9449  014998  377B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9450  01499A  377C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9451                           
  9452                           ; BSR set to: 0
  9453  01499C  0100               	movlb	0	; () banked
  9454  01499E  5172               	movf	__tdiv_to_l_@f2& (0+255),w,b
  9455  0149A0  0100               	movlb	0	; () banked
  9456  0149A2  5D6E               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  9457  0149A4  0100               	movlb	0	; () banked
  9458  0149A6  5173               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9459  0149A8  0100               	movlb	0	; () banked
  9460  0149AA  596F               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  9461  0149AC  0100               	movlb	0	; () banked
  9462  0149AE  5174               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  9463  0149B0  0100               	movlb	0	; () banked
  9464  0149B2  5970               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  9465  0149B4  A0D8               	btfss	status,0,c
  9466  0149B6  D00E               	goto	l1216
  9467                           
  9468                           ; BSR set to: 0
  9469  0149B8  0100               	movlb	0	; () banked
  9470  0149BA  5172               	movf	__tdiv_to_l_@f2& (0+255),w,b
  9471  0149BC  0100               	movlb	0	; () banked
  9472  0149BE  5F6E               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  9473  0149C0  0100               	movlb	0	; () banked
  9474  0149C2  5173               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9475  0149C4  0100               	movlb	0	; () banked
  9476  0149C6  5B6F               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9477  0149C8  0100               	movlb	0	; () banked
  9478  0149CA  5174               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  9479  0149CC  0100               	movlb	0	; () banked
  9480  0149CE  5B70               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9481                           
  9482                           ; BSR set to: 0
  9483  0149D0  0100               	movlb	0	; () banked
  9484  0149D2  8179               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  9485  0149D4                     l1216:
  9486                           
  9487                           ; BSR set to: 0
  9488  0149D4  0100               	movlb	0	; () banked
  9489  0149D6  90D8               	bcf	status,0,c
  9490  0149D8  376E               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  9491  0149DA  376F               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9492  0149DC  3770               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9493                           
  9494                           ; BSR set to: 0
  9495  0149DE  0100               	movlb	0	; () banked
  9496  0149E0  2F7D               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  9497  0149E2  D7D6               	goto	l1215
  9498                           
  9499                           ; BSR set to: 0
  9500                           
  9501                           ; BSR set to: 0
  9502  0149E4  0100               	movlb	0	; () banked
  9503  0149E6  AF7E               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  9504  0149E8  D01A               	goto	l7849
  9505                           
  9506                           ; BSR set to: 0
  9507  0149EA  0100               	movlb	0	; () banked
  9508  0149EC  517E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9509  0149EE  0A80               	xorlw	128
  9510  0149F0  0F97               	addlw	151
  9511  0149F2  B0D8               	btfsc	status,0,c
  9512  0149F4  D00A               	goto	l7845
  9513                           
  9514                           ; BSR set to: 0
  9515  0149F6  0E00               	movlw	0
  9516  0149F8  0100               	movlb	0	; () banked
  9517  0149FA  6F6E               	movwf	?__tdiv_to_l_& (0+255),b
  9518  0149FC  0E00               	movlw	0
  9519  0149FE  6F6F               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9520  014A00  0E00               	movlw	0
  9521  014A02  6F70               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9522  014A04  0E00               	movlw	0
  9523  014A06  6F71               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9524                           
  9525                           ; BSR set to: 0
  9526  014A08  0012               	return	
  9527  014A0A                     l7845:
  9528                           
  9529                           ; BSR set to: 0
  9530  014A0A  0100               	movlb	0	; () banked
  9531  014A0C  90D8               	bcf	status,0,c
  9532  014A0E  337C               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9533  014A10  337B               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9534  014A12  337A               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9535  014A14  3379               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  9536                           
  9537                           ; BSR set to: 0
  9538  014A16  0100               	movlb	0	; () banked
  9539  014A18  3F7E               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  9540  014A1A  D7F7               	goto	l7845
  9541                           
  9542                           ; BSR set to: 0
  9543  014A1C  D01B               	goto	l1222
  9544  014A1E                     l7849:
  9545                           
  9546                           ; BSR set to: 0
  9547  014A1E  0E17               	movlw	23
  9548  014A20  0100               	movlb	0	; () banked
  9549  014A22  657E               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  9550  014A24  D012               	goto	l7857
  9551                           
  9552                           ; BSR set to: 0
  9553  014A26  0E00               	movlw	0
  9554  014A28  0100               	movlb	0	; () banked
  9555  014A2A  6F6E               	movwf	?__tdiv_to_l_& (0+255),b
  9556  014A2C  0E00               	movlw	0
  9557  014A2E  6F6F               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9558  014A30  0E00               	movlw	0
  9559  014A32  6F70               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9560  014A34  0E00               	movlw	0
  9561  014A36  6F71               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9562                           
  9563                           ; BSR set to: 0
  9564  014A38  0012               	return	
  9565  014A3A                     l7855:
  9566                           
  9567                           ; BSR set to: 0
  9568  014A3A  0100               	movlb	0	; () banked
  9569  014A3C  90D8               	bcf	status,0,c
  9570  014A3E  3779               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  9571  014A40  377A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9572  014A42  377B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9573  014A44  377C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9574  014A46  0100               	movlb	0	; () banked
  9575  014A48  077E               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  9576  014A4A                     l7857:
  9577                           
  9578                           ; BSR set to: 0
  9579  014A4A  0100               	movlb	0	; () banked
  9580  014A4C  517E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9581  014A4E  0100               	movlb	0	; () banked
  9582  014A50  A4D8               	btfss	status,2,c
  9583  014A52  D7F3               	goto	l7855
  9584  014A54                     l1222:
  9585                           
  9586                           ; BSR set to: 0
  9587  014A54  C079  F06E         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  9588  014A58  C07A  F06F         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  9589  014A5C  C07B  F070         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  9590  014A60  C07C  F071         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  9591                           
  9592                           ; BSR set to: 0
  9593  014A64  0012               	return		;funcret
  9594  014A66                     __end_of__tdiv_to_l_:
  9595                           	opt stack 0
  9596                           tblptru	equ	0xFF8
  9597                           tblptrh	equ	0xFF7
  9598                           tblptrl	equ	0xFF6
  9599                           tablat	equ	0xFF5
  9600                           prodh	equ	0xFF4
  9601                           prodl	equ	0xFF3
  9602                           intcon	equ	0xFF2
  9603                           postinc0	equ	0xFEE
  9604                           wreg	equ	0xFE8
  9605                           indf2	equ	0xFDF
  9606                           postinc2	equ	0xFDE
  9607                           fsr2h	equ	0xFDA
  9608                           fsr2l	equ	0xFD9
  9609                           status	equ	0xFD8
  9610                           
  9611 ;; *************** function __div_to_l_ *****************
  9612 ;; Defined at:
  9613 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
  9614 ;; Parameters:    Size  Location     Type
  9615 ;;  f1              4   14[BANK0 ] unsigned long 
  9616 ;;  f2              4   18[BANK0 ] unsigned long 
  9617 ;; Auto vars:     Size  Location     Type
  9618 ;;  quot            4   22[BANK0 ] unsigned long 
  9619 ;;  exp1            1   27[BANK0 ] unsigned char 
  9620 ;;  cntr            1   26[BANK0 ] unsigned char 
  9621 ;; Return value:  Size  Location     Type
  9622 ;;                  4   14[BANK0 ] unsigned long 
  9623 ;; Registers used:
  9624 ;;		wreg, status,2, status,0
  9625 ;; Tracked objects:
  9626 ;;		On entry : 0/0
  9627 ;;		On exit  : 0/0
  9628 ;;		Unchanged: 0/0
  9629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9630 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9631 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9633 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9634 ;;Total ram usage:       14 bytes
  9635 ;; Hardware stack levels used:    1
  9636 ;; Hardware stack levels required when called:    3
  9637 ;; This function calls:
  9638 ;;		Nothing
  9639 ;; This function is called by:
  9640 ;;		_sprintf
  9641 ;; This function uses a non-reentrant model
  9642 ;;
  9643                           
  9644                           	psect	text16
  9645  014BF6                     __ptext16:
  9646                           	opt stack 0
  9647  014BF6                     __div_to_l_:
  9648                           	opt stack 25
  9649                           
  9650                           ; BSR set to: 0
  9651                           ;incstack = 0
  9652  014BF6  0100               	movlb	0	; () banked
  9653  014BF8  3570               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  9654  014BFA  3571               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  9655  014BFC  0100               	movlb	0	; () banked
  9656  014BFE  6F7B               	movwf	__div_to_l_@exp1& (0+255),b
  9657  014C00  0100               	movlb	0	; () banked
  9658  014C02  517B               	movf	__div_to_l_@exp1& (0+255),w,b
  9659  014C04  A4D8               	btfss	status,2,c
  9660  014C06  D00A               	goto	l7865
  9661                           
  9662                           ; BSR set to: 0
  9663  014C08  0E00               	movlw	0
  9664  014C0A  0100               	movlb	0	; () banked
  9665  014C0C  6F6E               	movwf	?__div_to_l_& (0+255),b
  9666  014C0E  0E00               	movlw	0
  9667  014C10  6F6F               	movwf	(?__div_to_l_+1)& (0+255),b
  9668  014C12  0E00               	movlw	0
  9669  014C14  6F70               	movwf	(?__div_to_l_+2)& (0+255),b
  9670  014C16  0E00               	movlw	0
  9671  014C18  6F71               	movwf	(?__div_to_l_+3)& (0+255),b
  9672                           
  9673                           ; BSR set to: 0
  9674  014C1A  0012               	return	
  9675  014C1C                     l7865:
  9676                           
  9677                           ; BSR set to: 0
  9678  014C1C  0100               	movlb	0	; () banked
  9679  014C1E  3574               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  9680  014C20  3575               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  9681  014C22  0100               	movlb	0	; () banked
  9682  014C24  6F7A               	movwf	__div_to_l_@cntr& (0+255),b
  9683  014C26  0100               	movlb	0	; () banked
  9684  014C28  517A               	movf	__div_to_l_@cntr& (0+255),w,b
  9685  014C2A  A4D8               	btfss	status,2,c
  9686  014C2C  D00A               	goto	l7871
  9687                           
  9688                           ; BSR set to: 0
  9689  014C2E  0E00               	movlw	0
  9690  014C30  0100               	movlb	0	; () banked
  9691  014C32  6F6E               	movwf	?__div_to_l_& (0+255),b
  9692  014C34  0E00               	movlw	0
  9693  014C36  6F6F               	movwf	(?__div_to_l_+1)& (0+255),b
  9694  014C38  0E00               	movlw	0
  9695  014C3A  6F70               	movwf	(?__div_to_l_+2)& (0+255),b
  9696  014C3C  0E00               	movlw	0
  9697  014C3E  6F71               	movwf	(?__div_to_l_+3)& (0+255),b
  9698                           
  9699                           ; BSR set to: 0
  9700  014C40  0012               	return	
  9701  014C42                     l7871:
  9702                           
  9703                           ; BSR set to: 0
  9704  014C42  0100               	movlb	0	; () banked
  9705  014C44  8F70               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  9706                           
  9707                           ; BSR set to: 0
  9708  014C46  0EFF               	movlw	255
  9709  014C48  0100               	movlb	0	; () banked
  9710  014C4A  176E               	andwf	__div_to_l_@f1& (0+255),f,b
  9711  014C4C  0EFF               	movlw	255
  9712  014C4E  176F               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  9713  014C50  0EFF               	movlw	255
  9714  014C52  1770               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  9715  014C54  0E00               	movlw	0
  9716  014C56  1771               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  9717                           
  9718                           ; BSR set to: 0
  9719  014C58  0100               	movlb	0	; () banked
  9720  014C5A  8F74               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  9721  014C5C  0EFF               	movlw	255
  9722  014C5E  0100               	movlb	0	; () banked
  9723  014C60  1772               	andwf	__div_to_l_@f2& (0+255),f,b
  9724  014C62  0EFF               	movlw	255
  9725  014C64  1773               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  9726  014C66  0EFF               	movlw	255
  9727  014C68  1774               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  9728  014C6A  0E00               	movlw	0
  9729  014C6C  1775               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  9730                           
  9731                           ; BSR set to: 0
  9732  014C6E  0E00               	movlw	0
  9733  014C70  0100               	movlb	0	; () banked
  9734  014C72  6F76               	movwf	__div_to_l_@quot& (0+255),b
  9735  014C74  0E00               	movlw	0
  9736  014C76  6F77               	movwf	(__div_to_l_@quot+1)& (0+255),b
  9737  014C78  0E00               	movlw	0
  9738  014C7A  6F78               	movwf	(__div_to_l_@quot+2)& (0+255),b
  9739  014C7C  0E00               	movlw	0
  9740  014C7E  6F79               	movwf	(__div_to_l_@quot+3)& (0+255),b
  9741                           
  9742                           ; BSR set to: 0
  9743  014C80  0E7F               	movlw	127
  9744  014C82  0100               	movlb	0	; () banked
  9745  014C84  5F7B               	subwf	__div_to_l_@exp1& (0+255),f,b
  9746                           
  9747                           ; BSR set to: 0
  9748  014C86  0100               	movlb	0	; () banked
  9749  014C88  517A               	movf	__div_to_l_@cntr& (0+255),w,b
  9750  014C8A  0FA0               	addlw	160
  9751  014C8C  0100               	movlb	0	; () banked
  9752  014C8E  5F7B               	subwf	__div_to_l_@exp1& (0+255),f,b
  9753                           
  9754                           ; BSR set to: 0
  9755  014C90  0E20               	movlw	32
  9756  014C92  0100               	movlb	0	; () banked
  9757  014C94  6F7A               	movwf	__div_to_l_@cntr& (0+255),b
  9758  014C96                     l7885:
  9759                           
  9760                           ; BSR set to: 0
  9761  014C96  0100               	movlb	0	; () banked
  9762  014C98  90D8               	bcf	status,0,c
  9763  014C9A  3776               	rlcf	__div_to_l_@quot& (0+255),f,b
  9764  014C9C  3777               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  9765  014C9E  3778               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  9766  014CA0  3779               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  9767                           
  9768                           ; BSR set to: 0
  9769  014CA2  0100               	movlb	0	; () banked
  9770  014CA4  5172               	movf	__div_to_l_@f2& (0+255),w,b
  9771  014CA6  0100               	movlb	0	; () banked
  9772  014CA8  5D6E               	subwf	__div_to_l_@f1& (0+255),w,b
  9773  014CAA  0100               	movlb	0	; () banked
  9774  014CAC  5173               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  9775  014CAE  0100               	movlb	0	; () banked
  9776  014CB0  596F               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  9777  014CB2  0100               	movlb	0	; () banked
  9778  014CB4  5174               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  9779  014CB6  0100               	movlb	0	; () banked
  9780  014CB8  5970               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  9781  014CBA  0100               	movlb	0	; () banked
  9782  014CBC  5175               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  9783  014CBE  0100               	movlb	0	; () banked
  9784  014CC0  5971               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  9785  014CC2  A0D8               	btfss	status,0,c
  9786  014CC4  D012               	goto	l7893
  9787                           
  9788                           ; BSR set to: 0
  9789  014CC6  0100               	movlb	0	; () banked
  9790  014CC8  5172               	movf	__div_to_l_@f2& (0+255),w,b
  9791  014CCA  0100               	movlb	0	; () banked
  9792  014CCC  5F6E               	subwf	__div_to_l_@f1& (0+255),f,b
  9793  014CCE  0100               	movlb	0	; () banked
  9794  014CD0  5173               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  9795  014CD2  0100               	movlb	0	; () banked
  9796  014CD4  5B6F               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  9797  014CD6  0100               	movlb	0	; () banked
  9798  014CD8  5174               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  9799  014CDA  0100               	movlb	0	; () banked
  9800  014CDC  5B70               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  9801  014CDE  0100               	movlb	0	; () banked
  9802  014CE0  5175               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  9803  014CE2  0100               	movlb	0	; () banked
  9804  014CE4  5B71               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  9805                           
  9806                           ; BSR set to: 0
  9807  014CE6  0100               	movlb	0	; () banked
  9808  014CE8  8176               	bsf	__div_to_l_@quot& (0+255),0,b
  9809  014CEA                     l7893:
  9810                           
  9811                           ; BSR set to: 0
  9812  014CEA  0100               	movlb	0	; () banked
  9813  014CEC  90D8               	bcf	status,0,c
  9814  014CEE  376E               	rlcf	__div_to_l_@f1& (0+255),f,b
  9815  014CF0  376F               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  9816  014CF2  3770               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  9817  014CF4  3771               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  9818                           
  9819                           ; BSR set to: 0
  9820  014CF6  0100               	movlb	0	; () banked
  9821  014CF8  2F7A               	decfsz	__div_to_l_@cntr& (0+255),f,b
  9822  014CFA  D7CD               	goto	l7885
  9823                           
  9824                           ; BSR set to: 0
  9825                           
  9826                           ; BSR set to: 0
  9827  014CFC  0100               	movlb	0	; () banked
  9828  014CFE  AF7B               	btfss	__div_to_l_@exp1& (0+255),7,b
  9829  014D00  D01A               	goto	l7909
  9830                           
  9831                           ; BSR set to: 0
  9832  014D02  0100               	movlb	0	; () banked
  9833  014D04  517B               	movf	__div_to_l_@exp1& (0+255),w,b
  9834  014D06  0A80               	xorlw	128
  9835  014D08  0F9F               	addlw	159
  9836  014D0A  B0D8               	btfsc	status,0,c
  9837  014D0C  D00A               	goto	l7905
  9838                           
  9839                           ; BSR set to: 0
  9840  014D0E  0E00               	movlw	0
  9841  014D10  0100               	movlb	0	; () banked
  9842  014D12  6F6E               	movwf	?__div_to_l_& (0+255),b
  9843  014D14  0E00               	movlw	0
  9844  014D16  6F6F               	movwf	(?__div_to_l_+1)& (0+255),b
  9845  014D18  0E00               	movlw	0
  9846  014D1A  6F70               	movwf	(?__div_to_l_+2)& (0+255),b
  9847  014D1C  0E00               	movlw	0
  9848  014D1E  6F71               	movwf	(?__div_to_l_+3)& (0+255),b
  9849                           
  9850                           ; BSR set to: 0
  9851  014D20  0012               	return	
  9852  014D22                     l7905:
  9853                           
  9854                           ; BSR set to: 0
  9855  014D22  0100               	movlb	0	; () banked
  9856  014D24  90D8               	bcf	status,0,c
  9857  014D26  3379               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  9858  014D28  3378               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  9859  014D2A  3377               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  9860  014D2C  3376               	rrcf	__div_to_l_@quot& (0+255),f,b
  9861                           
  9862                           ; BSR set to: 0
  9863  014D2E  0100               	movlb	0	; () banked
  9864  014D30  3F7B               	incfsz	__div_to_l_@exp1& (0+255),f,b
  9865  014D32  D7F7               	goto	l7905
  9866                           
  9867                           ; BSR set to: 0
  9868  014D34  D01B               	goto	l1118
  9869  014D36                     l7909:
  9870                           
  9871                           ; BSR set to: 0
  9872  014D36  0E1F               	movlw	31
  9873  014D38  0100               	movlb	0	; () banked
  9874  014D3A  657B               	cpfsgt	__div_to_l_@exp1& (0+255),b
  9875  014D3C  D012               	goto	l7917
  9876                           
  9877                           ; BSR set to: 0
  9878  014D3E  0E00               	movlw	0
  9879  014D40  0100               	movlb	0	; () banked
  9880  014D42  6F6E               	movwf	?__div_to_l_& (0+255),b
  9881  014D44  0E00               	movlw	0
  9882  014D46  6F6F               	movwf	(?__div_to_l_+1)& (0+255),b
  9883  014D48  0E00               	movlw	0
  9884  014D4A  6F70               	movwf	(?__div_to_l_+2)& (0+255),b
  9885  014D4C  0E00               	movlw	0
  9886  014D4E  6F71               	movwf	(?__div_to_l_+3)& (0+255),b
  9887                           
  9888                           ; BSR set to: 0
  9889  014D50  0012               	return	
  9890  014D52                     l7915:
  9891                           
  9892                           ; BSR set to: 0
  9893  014D52  0100               	movlb	0	; () banked
  9894  014D54  90D8               	bcf	status,0,c
  9895  014D56  3776               	rlcf	__div_to_l_@quot& (0+255),f,b
  9896  014D58  3777               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  9897  014D5A  3778               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  9898  014D5C  3779               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  9899  014D5E  0100               	movlb	0	; () banked
  9900  014D60  077B               	decf	__div_to_l_@exp1& (0+255),f,b
  9901  014D62                     l7917:
  9902                           
  9903                           ; BSR set to: 0
  9904  014D62  0100               	movlb	0	; () banked
  9905  014D64  517B               	movf	__div_to_l_@exp1& (0+255),w,b
  9906  014D66  0100               	movlb	0	; () banked
  9907  014D68  A4D8               	btfss	status,2,c
  9908  014D6A  D7F3               	goto	l7915
  9909  014D6C                     l1118:
  9910                           
  9911                           ; BSR set to: 0
  9912  014D6C  C076  F06E         	movff	__div_to_l_@quot,?__div_to_l_
  9913  014D70  C077  F06F         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  9914  014D74  C078  F070         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  9915  014D78  C079  F071         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  9916                           
  9917                           ; BSR set to: 0
  9918  014D7C  0012               	return		;funcret
  9919  014D7E                     __end_of__div_to_l_:
  9920                           	opt stack 0
  9921                           tblptru	equ	0xFF8
  9922                           tblptrh	equ	0xFF7
  9923                           tblptrl	equ	0xFF6
  9924                           tablat	equ	0xFF5
  9925                           prodh	equ	0xFF4
  9926                           prodl	equ	0xFF3
  9927                           intcon	equ	0xFF2
  9928                           postinc0	equ	0xFEE
  9929                           wreg	equ	0xFE8
  9930                           indf2	equ	0xFDF
  9931                           postinc2	equ	0xFDE
  9932                           fsr2h	equ	0xFDA
  9933                           fsr2l	equ	0xFD9
  9934                           status	equ	0xFD8
  9935                           
  9936 ;; *************** function ___xxtofl *****************
  9937 ;; Defined at:
  9938 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  9939 ;; Parameters:    Size  Location     Type
  9940 ;;  sign            1    wreg     unsigned char 
  9941 ;;  val             4   14[BANK0 ] long 
  9942 ;; Auto vars:     Size  Location     Type
  9943 ;;  sign            1   22[BANK0 ] unsigned char 
  9944 ;;  arg             4   24[BANK0 ] unsigned long 
  9945 ;;  exp             1   23[BANK0 ] unsigned char 
  9946 ;; Return value:  Size  Location     Type
  9947 ;;                  4   14[BANK0 ] unsigned char 
  9948 ;; Registers used:
  9949 ;;		wreg, status,2, status,0
  9950 ;; Tracked objects:
  9951 ;;		On entry : 0/0
  9952 ;;		On exit  : 0/0
  9953 ;;		Unchanged: 0/0
  9954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9955 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9956 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9957 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9958 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9959 ;;Total ram usage:       14 bytes
  9960 ;; Hardware stack levels used:    1
  9961 ;; Hardware stack levels required when called:    3
  9962 ;; This function calls:
  9963 ;;		Nothing
  9964 ;; This function is called by:
  9965 ;;		_main
  9966 ;;		_LCD_Handler
  9967 ;;		_sprintf
  9968 ;; This function uses a non-reentrant model
  9969 ;;
  9970                           
  9971                           	psect	text17
  9972  014374                     __ptext17:
  9973                           	opt stack 0
  9974  014374                     ___xxtofl:
  9975                           	opt stack 27
  9976                           
  9977                           ; BSR set to: 0
  9978                           ;incstack = 0
  9979                           ;___xxtofl@sign stored from wreg
  9980  014374  0100               	movlb	0	; () banked
  9981  014376  6F76               	movwf	___xxtofl@sign& (0+255),b
  9982  014378  0100               	movlb	0	; () banked
  9983  01437A  5176               	movf	___xxtofl@sign& (0+255),w,b
  9984  01437C  0100               	movlb	0	; () banked
  9985  01437E  B4D8               	btfsc	status,2,c
  9986  014380  D01E               	goto	l1513
  9987                           
  9988                           ; BSR set to: 0
  9989  014382  0100               	movlb	0	; () banked
  9990  014384  AF71               	btfss	(___xxtofl@val+3)& (0+255),7,b
  9991  014386  D01B               	goto	l1513
  9992                           
  9993                           ; BSR set to: 0
  9994  014388  C06E  F072         	movff	___xxtofl@val,??___xxtofl
  9995  01438C  C06F  F073         	movff	___xxtofl@val+1,??___xxtofl+1
  9996  014390  C070  F074         	movff	___xxtofl@val+2,??___xxtofl+2
  9997  014394  C071  F075         	movff	___xxtofl@val+3,??___xxtofl+3
  9998  014398  0100               	movlb	0	; () banked
  9999  01439A  1F72               	comf	??___xxtofl& (0+255),f,b
 10000  01439C  1F73               	comf	(??___xxtofl+1)& (0+255),f,b
 10001  01439E  1F74               	comf	(??___xxtofl+2)& (0+255),f,b
 10002  0143A0  1F75               	comf	(??___xxtofl+3)& (0+255),f,b
 10003  0143A2  2B72               	incf	??___xxtofl& (0+255),f,b
 10004  0143A4  0E00               	movlw	0
 10005  0143A6  2373               	addwfc	(??___xxtofl+1)& (0+255),f,b
 10006  0143A8  2374               	addwfc	(??___xxtofl+2)& (0+255),f,b
 10007  0143AA  2375               	addwfc	(??___xxtofl+3)& (0+255),f,b
 10008  0143AC  C072  F078         	movff	??___xxtofl,___xxtofl@arg
 10009  0143B0  C073  F079         	movff	??___xxtofl+1,___xxtofl@arg+1
 10010  0143B4  C074  F07A         	movff	??___xxtofl+2,___xxtofl@arg+2
 10011  0143B8  C075  F07B         	movff	??___xxtofl+3,___xxtofl@arg+3
 10012  0143BC  D008               	goto	l8043
 10013  0143BE                     l1513:
 10014                           
 10015                           ; BSR set to: 0
 10016  0143BE  C06E  F078         	movff	___xxtofl@val,___xxtofl@arg
 10017  0143C2  C06F  F079         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10018  0143C6  C070  F07A         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10019  0143CA  C071  F07B         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10020  0143CE                     l8043:
 10021                           
 10022                           ; BSR set to: 0
 10023  0143CE  0100               	movlb	0	; () banked
 10024  0143D0  516E               	movf	___xxtofl@val& (0+255),w,b
 10025  0143D2  0100               	movlb	0	; () banked
 10026  0143D4  116F               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 10027  0143D6  0100               	movlb	0	; () banked
 10028  0143D8  1170               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 10029  0143DA  0100               	movlb	0	; () banked
 10030  0143DC  1171               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 10031  0143DE  A4D8               	btfss	status,2,c
 10032  0143E0  D00A               	goto	l8049
 10033                           
 10034                           ; BSR set to: 0
 10035  0143E2  0E00               	movlw	0
 10036  0143E4  0100               	movlb	0	; () banked
 10037  0143E6  6F6E               	movwf	?___xxtofl& (0+255),b
 10038  0143E8  0E00               	movlw	0
 10039  0143EA  6F6F               	movwf	(?___xxtofl+1)& (0+255),b
 10040  0143EC  0E00               	movlw	0
 10041  0143EE  6F70               	movwf	(?___xxtofl+2)& (0+255),b
 10042  0143F0  0E00               	movlw	0
 10043  0143F2  6F71               	movwf	(?___xxtofl+3)& (0+255),b
 10044                           
 10045                           ; BSR set to: 0
 10046  0143F4  0012               	return	
 10047  0143F6                     l8049:
 10048                           
 10049                           ; BSR set to: 0
 10050  0143F6  0E96               	movlw	150
 10051  0143F8  0100               	movlb	0	; () banked
 10052  0143FA  6F77               	movwf	___xxtofl@exp& (0+255),b
 10053  0143FC  D008               	goto	l8053
 10054  0143FE                     l8051:
 10055                           
 10056                           ; BSR set to: 0
 10057  0143FE  0100               	movlb	0	; () banked
 10058  014400  2B77               	incf	___xxtofl@exp& (0+255),f,b
 10059  014402  0100               	movlb	0	; () banked
 10060  014404  90D8               	bcf	status,0,c
 10061  014406  337B               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10062  014408  337A               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10063  01440A  3379               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10064  01440C  3378               	rrcf	___xxtofl@arg& (0+255),f,b
 10065  01440E                     l8053:
 10066                           
 10067                           ; BSR set to: 0
 10068  01440E  0E00               	movlw	0
 10069  014410  0100               	movlb	0	; () banked
 10070  014412  1578               	andwf	___xxtofl@arg& (0+255),w,b
 10071  014414  0100               	movlb	0	; () banked
 10072  014416  6F72               	movwf	??___xxtofl& (0+255),b
 10073  014418  0E00               	movlw	0
 10074  01441A  0100               	movlb	0	; () banked
 10075  01441C  1579               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10076  01441E  0100               	movlb	0	; () banked
 10077  014420  6F73               	movwf	(??___xxtofl+1)& (0+255),b
 10078  014422  0E00               	movlw	0
 10079  014424  0100               	movlb	0	; () banked
 10080  014426  157A               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10081  014428  0100               	movlb	0	; () banked
 10082  01442A  6F74               	movwf	(??___xxtofl+2)& (0+255),b
 10083  01442C  0EFE               	movlw	254
 10084  01442E  0100               	movlb	0	; () banked
 10085  014430  157B               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10086  014432  0100               	movlb	0	; () banked
 10087  014434  6F75               	movwf	(??___xxtofl+3)& (0+255),b
 10088  014436  0100               	movlb	0	; () banked
 10089  014438  5172               	movf	??___xxtofl& (0+255),w,b
 10090  01443A  0100               	movlb	0	; () banked
 10091  01443C  1173               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10092  01443E  0100               	movlb	0	; () banked
 10093  014440  1174               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10094  014442  0100               	movlb	0	; () banked
 10095  014444  1175               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10096  014446  B4D8               	btfsc	status,2,c
 10097  014448  D010               	goto	l1520
 10098  01444A  D7D9               	goto	l8051
 10099  01444C                     l8055:
 10100                           
 10101                           ; BSR set to: 0
 10102  01444C  0100               	movlb	0	; () banked
 10103  01444E  2B77               	incf	___xxtofl@exp& (0+255),f,b
 10104                           
 10105                           ; BSR set to: 0
 10106  014450  0E01               	movlw	1
 10107  014452  0100               	movlb	0	; () banked
 10108  014454  2778               	addwf	___xxtofl@arg& (0+255),f,b
 10109  014456  0E00               	movlw	0
 10110  014458  2379               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 10111  01445A  237A               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 10112  01445C  237B               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 10113                           
 10114                           ; BSR set to: 0
 10115  01445E  0100               	movlb	0	; () banked
 10116  014460  90D8               	bcf	status,0,c
 10117  014462  337B               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10118  014464  337A               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10119  014466  3379               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10120  014468  3378               	rrcf	___xxtofl@arg& (0+255),f,b
 10121  01446A                     l1520:
 10122                           
 10123                           ; BSR set to: 0
 10124  01446A  0E00               	movlw	0
 10125  01446C  0100               	movlb	0	; () banked
 10126  01446E  1578               	andwf	___xxtofl@arg& (0+255),w,b
 10127  014470  0100               	movlb	0	; () banked
 10128  014472  6F72               	movwf	??___xxtofl& (0+255),b
 10129  014474  0E00               	movlw	0
 10130  014476  0100               	movlb	0	; () banked
 10131  014478  1579               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10132  01447A  0100               	movlb	0	; () banked
 10133  01447C  6F73               	movwf	(??___xxtofl+1)& (0+255),b
 10134  01447E  0E00               	movlw	0
 10135  014480  0100               	movlb	0	; () banked
 10136  014482  157A               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10137  014484  0100               	movlb	0	; () banked
 10138  014486  6F74               	movwf	(??___xxtofl+2)& (0+255),b
 10139  014488  0EFF               	movlw	255
 10140  01448A  0100               	movlb	0	; () banked
 10141  01448C  157B               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10142  01448E  0100               	movlb	0	; () banked
 10143  014490  6F75               	movwf	(??___xxtofl+3)& (0+255),b
 10144  014492  0100               	movlb	0	; () banked
 10145  014494  5172               	movf	??___xxtofl& (0+255),w,b
 10146  014496  0100               	movlb	0	; () banked
 10147  014498  1173               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10148  01449A  0100               	movlb	0	; () banked
 10149  01449C  1174               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10150  01449E  0100               	movlb	0	; () banked
 10151  0144A0  1175               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10152  0144A2  B4D8               	btfsc	status,2,c
 10153  0144A4  D009               	goto	l8063
 10154  0144A6  D7D2               	goto	l8055
 10155  0144A8                     l8061:
 10156                           
 10157                           ; BSR set to: 0
 10158  0144A8  0100               	movlb	0	; () banked
 10159  0144AA  0777               	decf	___xxtofl@exp& (0+255),f,b
 10160  0144AC  0100               	movlb	0	; () banked
 10161  0144AE  90D8               	bcf	status,0,c
 10162  0144B0  3778               	rlcf	___xxtofl@arg& (0+255),f,b
 10163  0144B2  3779               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 10164  0144B4  377A               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 10165  0144B6  377B               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 10166  0144B8                     l8063:
 10167                           
 10168                           ; BSR set to: 0
 10169  0144B8  0100               	movlb	0	; () banked
 10170  0144BA  BF7A               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 10171  0144BC  D004               	goto	l1527
 10172                           
 10173                           ; BSR set to: 0
 10174  0144BE  0E02               	movlw	2
 10175  0144C0  0100               	movlb	0	; () banked
 10176  0144C2  6177               	cpfslt	___xxtofl@exp& (0+255),b
 10177  0144C4  D7F1               	goto	l8061
 10178  0144C6                     l1527:
 10179                           
 10180                           ; BSR set to: 0
 10181  0144C6  0100               	movlb	0	; () banked
 10182  0144C8  B177               	btfsc	___xxtofl@exp& (0+255),0,b
 10183  0144CA  D009               	goto	l1528
 10184                           
 10185                           ; BSR set to: 0
 10186  0144CC  0EFF               	movlw	255
 10187  0144CE  0100               	movlb	0	; () banked
 10188  0144D0  1778               	andwf	___xxtofl@arg& (0+255),f,b
 10189  0144D2  0EFF               	movlw	255
 10190  0144D4  1779               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 10191  0144D6  0E7F               	movlw	127
 10192  0144D8  177A               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 10193  0144DA  0EFF               	movlw	255
 10194  0144DC  177B               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 10195  0144DE                     l1528:
 10196                           
 10197                           ; BSR set to: 0
 10198  0144DE  0100               	movlb	0	; () banked
 10199  0144E0  90D8               	bcf	status,0,c
 10200  0144E2  3377               	rrcf	___xxtofl@exp& (0+255),f,b
 10201  0144E4  C077  F072         	movff	___xxtofl@exp,??___xxtofl
 10202  0144E8  0100               	movlb	0	; () banked
 10203  0144EA  6B73               	clrf	(??___xxtofl+1)& (0+255),b
 10204  0144EC  6B74               	clrf	(??___xxtofl+2)& (0+255),b
 10205  0144EE  6B75               	clrf	(??___xxtofl+3)& (0+255),b
 10206  0144F0  C072  F075         	movff	??___xxtofl,??___xxtofl+3
 10207  0144F4  0100               	movlb	0	; () banked
 10208  0144F6  6B74               	clrf	(??___xxtofl+2)& (0+255),b
 10209  0144F8  6B73               	clrf	(??___xxtofl+1)& (0+255),b
 10210  0144FA  6B72               	clrf	??___xxtofl& (0+255),b
 10211  0144FC  0100               	movlb	0	; () banked
 10212  0144FE  5172               	movf	??___xxtofl& (0+255),w,b
 10213  014500  0100               	movlb	0	; () banked
 10214  014502  1378               	iorwf	___xxtofl@arg& (0+255),f,b
 10215  014504  0100               	movlb	0	; () banked
 10216  014506  5173               	movf	(??___xxtofl+1)& (0+255),w,b
 10217  014508  0100               	movlb	0	; () banked
 10218  01450A  1379               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 10219  01450C  0100               	movlb	0	; () banked
 10220  01450E  5174               	movf	(??___xxtofl+2)& (0+255),w,b
 10221  014510  0100               	movlb	0	; () banked
 10222  014512  137A               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 10223  014514  0100               	movlb	0	; () banked
 10224  014516  5175               	movf	(??___xxtofl+3)& (0+255),w,b
 10225  014518  0100               	movlb	0	; () banked
 10226  01451A  137B               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 10227                           
 10228                           ; BSR set to: 0
 10229  01451C  0100               	movlb	0	; () banked
 10230  01451E  5176               	movf	___xxtofl@sign& (0+255),w,b
 10231  014520  0100               	movlb	0	; () banked
 10232  014522  B4D8               	btfsc	status,2,c
 10233  014524  D005               	goto	l8075
 10234                           
 10235                           ; BSR set to: 0
 10236  014526  0100               	movlb	0	; () banked
 10237  014528  AF71               	btfss	(___xxtofl@val+3)& (0+255),7,b
 10238  01452A  D002               	goto	l8075
 10239                           
 10240                           ; BSR set to: 0
 10241  01452C  0100               	movlb	0	; () banked
 10242  01452E  8F7B               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 10243  014530                     l8075:
 10244                           
 10245                           ; BSR set to: 0
 10246  014530  C078  F06E         	movff	___xxtofl@arg,?___xxtofl
 10247  014534  C079  F06F         	movff	___xxtofl@arg+1,?___xxtofl+1
 10248  014538  C07A  F070         	movff	___xxtofl@arg+2,?___xxtofl+2
 10249  01453C  C07B  F071         	movff	___xxtofl@arg+3,?___xxtofl+3
 10250  014540  0012               	return	
 10251  014542                     __end_of___xxtofl:
 10252                           	opt stack 0
 10253                           tblptru	equ	0xFF8
 10254                           tblptrh	equ	0xFF7
 10255                           tblptrl	equ	0xFF6
 10256                           tablat	equ	0xFF5
 10257                           prodh	equ	0xFF4
 10258                           prodl	equ	0xFF3
 10259                           intcon	equ	0xFF2
 10260                           postinc0	equ	0xFEE
 10261                           wreg	equ	0xFE8
 10262                           indf2	equ	0xFDF
 10263                           postinc2	equ	0xFDE
 10264                           fsr2h	equ	0xFDA
 10265                           fsr2l	equ	0xFD9
 10266                           status	equ	0xFD8
 10267                           
 10268 ;; *************** function ___llmod *****************
 10269 ;; Defined at:
 10270 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 10271 ;; Parameters:    Size  Location     Type
 10272 ;;  dividend        4   14[BANK0 ] unsigned long 
 10273 ;;  divisor         4   18[BANK0 ] unsigned long 
 10274 ;; Auto vars:     Size  Location     Type
 10275 ;;  counter         1   22[BANK0 ] unsigned char 
 10276 ;; Return value:  Size  Location     Type
 10277 ;;                  4   14[BANK0 ] unsigned long 
 10278 ;; Registers used:
 10279 ;;		wreg, status,2, status,0
 10280 ;; Tracked objects:
 10281 ;;		On entry : 0/0
 10282 ;;		On exit  : 0/0
 10283 ;;		Unchanged: 0/0
 10284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10285 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10286 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10288 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10289 ;;Total ram usage:        9 bytes
 10290 ;; Hardware stack levels used:    1
 10291 ;; Hardware stack levels required when called:    3
 10292 ;; This function calls:
 10293 ;;		Nothing
 10294 ;; This function is called by:
 10295 ;;		_sprintf
 10296 ;; This function uses a non-reentrant model
 10297 ;;
 10298                           
 10299                           	psect	text18
 10300  0158CE                     __ptext18:
 10301                           	opt stack 0
 10302  0158CE                     ___llmod:
 10303                           	opt stack 25
 10304                           
 10305                           ; BSR set to: 0
 10306                           ;incstack = 0
 10307  0158CE  0100               	movlb	0	; () banked
 10308  0158D0  5172               	movf	___llmod@divisor& (0+255),w,b
 10309  0158D2  0100               	movlb	0	; () banked
 10310  0158D4  1173               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 10311  0158D6  0100               	movlb	0	; () banked
 10312  0158D8  1174               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 10313  0158DA  0100               	movlb	0	; () banked
 10314  0158DC  1175               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 10315  0158DE  B4D8               	btfsc	status,2,c
 10316  0158E0  D03A               	goto	l1321
 10317                           
 10318                           ; BSR set to: 0
 10319  0158E2  0E01               	movlw	1
 10320  0158E4  0100               	movlb	0	; () banked
 10321  0158E6  6F76               	movwf	___llmod@counter& (0+255),b
 10322  0158E8  D008               	goto	l8027
 10323  0158EA                     l8025:
 10324                           
 10325                           ; BSR set to: 0
 10326  0158EA  0100               	movlb	0	; () banked
 10327  0158EC  90D8               	bcf	status,0,c
 10328  0158EE  3772               	rlcf	___llmod@divisor& (0+255),f,b
 10329  0158F0  3773               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 10330  0158F2  3774               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 10331  0158F4  3775               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 10332  0158F6  0100               	movlb	0	; () banked
 10333  0158F8  2B76               	incf	___llmod@counter& (0+255),f,b
 10334  0158FA                     l8027:
 10335                           
 10336                           ; BSR set to: 0
 10337  0158FA  0100               	movlb	0	; () banked
 10338  0158FC  AF75               	btfss	(___llmod@divisor+3)& (0+255),7,b
 10339  0158FE  D7F5               	goto	l8025
 10340  015900                     l8029:
 10341                           
 10342                           ; BSR set to: 0
 10343  015900  0100               	movlb	0	; () banked
 10344  015902  5172               	movf	___llmod@divisor& (0+255),w,b
 10345  015904  0100               	movlb	0	; () banked
 10346  015906  5D6E               	subwf	___llmod@dividend& (0+255),w,b
 10347  015908  0100               	movlb	0	; () banked
 10348  01590A  5173               	movf	(___llmod@divisor+1)& (0+255),w,b
 10349  01590C  0100               	movlb	0	; () banked
 10350  01590E  596F               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 10351  015910  0100               	movlb	0	; () banked
 10352  015912  5174               	movf	(___llmod@divisor+2)& (0+255),w,b
 10353  015914  0100               	movlb	0	; () banked
 10354  015916  5970               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 10355  015918  0100               	movlb	0	; () banked
 10356  01591A  5175               	movf	(___llmod@divisor+3)& (0+255),w,b
 10357  01591C  0100               	movlb	0	; () banked
 10358  01591E  5971               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 10359  015920  A0D8               	btfss	status,0,c
 10360  015922  D010               	goto	l8033
 10361                           
 10362                           ; BSR set to: 0
 10363  015924  0100               	movlb	0	; () banked
 10364  015926  5172               	movf	___llmod@divisor& (0+255),w,b
 10365  015928  0100               	movlb	0	; () banked
 10366  01592A  5F6E               	subwf	___llmod@dividend& (0+255),f,b
 10367  01592C  0100               	movlb	0	; () banked
 10368  01592E  5173               	movf	(___llmod@divisor+1)& (0+255),w,b
 10369  015930  0100               	movlb	0	; () banked
 10370  015932  5B6F               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 10371  015934  0100               	movlb	0	; () banked
 10372  015936  5174               	movf	(___llmod@divisor+2)& (0+255),w,b
 10373  015938  0100               	movlb	0	; () banked
 10374  01593A  5B70               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 10375  01593C  0100               	movlb	0	; () banked
 10376  01593E  5175               	movf	(___llmod@divisor+3)& (0+255),w,b
 10377  015940  0100               	movlb	0	; () banked
 10378  015942  5B71               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 10379  015944                     l8033:
 10380                           
 10381                           ; BSR set to: 0
 10382  015944  0100               	movlb	0	; () banked
 10383  015946  90D8               	bcf	status,0,c
 10384  015948  3375               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 10385  01594A  3374               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 10386  01594C  3373               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 10387  01594E  3372               	rrcf	___llmod@divisor& (0+255),f,b
 10388                           
 10389                           ; BSR set to: 0
 10390  015950  0100               	movlb	0	; () banked
 10391  015952  2F76               	decfsz	___llmod@counter& (0+255),f,b
 10392  015954  D7D5               	goto	l8029
 10393  015956                     l1321:
 10394                           
 10395                           ; BSR set to: 0
 10396  015956  C06E  F06E         	movff	___llmod@dividend,?___llmod
 10397  01595A  C06F  F06F         	movff	___llmod@dividend+1,?___llmod+1
 10398  01595E  C070  F070         	movff	___llmod@dividend+2,?___llmod+2
 10399  015962  C071  F071         	movff	___llmod@dividend+3,?___llmod+3
 10400                           
 10401                           ; BSR set to: 0
 10402  015966  0012               	return		;funcret
 10403  015968                     __end_of___llmod:
 10404                           	opt stack 0
 10405                           tblptru	equ	0xFF8
 10406                           tblptrh	equ	0xFF7
 10407                           tblptrl	equ	0xFF6
 10408                           tablat	equ	0xFF5
 10409                           prodh	equ	0xFF4
 10410                           prodl	equ	0xFF3
 10411                           intcon	equ	0xFF2
 10412                           postinc0	equ	0xFEE
 10413                           wreg	equ	0xFE8
 10414                           indf2	equ	0xFDF
 10415                           postinc2	equ	0xFDE
 10416                           fsr2h	equ	0xFDA
 10417                           fsr2l	equ	0xFD9
 10418                           status	equ	0xFD8
 10419                           
 10420 ;; *************** function ___lldiv *****************
 10421 ;; Defined at:
 10422 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 10423 ;; Parameters:    Size  Location     Type
 10424 ;;  dividend        4   14[BANK0 ] unsigned long 
 10425 ;;  divisor         4   18[BANK0 ] unsigned long 
 10426 ;; Auto vars:     Size  Location     Type
 10427 ;;  quotient        4   22[BANK0 ] unsigned long 
 10428 ;;  counter         1   26[BANK0 ] unsigned char 
 10429 ;; Return value:  Size  Location     Type
 10430 ;;                  4   14[BANK0 ] unsigned long 
 10431 ;; Registers used:
 10432 ;;		wreg, status,2, status,0
 10433 ;; Tracked objects:
 10434 ;;		On entry : 0/0
 10435 ;;		On exit  : 0/0
 10436 ;;		Unchanged: 0/0
 10437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10438 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10439 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10441 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10442 ;;Total ram usage:       13 bytes
 10443 ;; Hardware stack levels used:    1
 10444 ;; Hardware stack levels required when called:    3
 10445 ;; This function calls:
 10446 ;;		Nothing
 10447 ;; This function is called by:
 10448 ;;		_sprintf
 10449 ;; This function uses a non-reentrant model
 10450 ;;
 10451                           
 10452                           	psect	text19
 10453  01560C                     __ptext19:
 10454                           	opt stack 0
 10455  01560C                     ___lldiv:
 10456                           	opt stack 25
 10457                           
 10458                           ; BSR set to: 0
 10459                           ;incstack = 0
 10460  01560C  0E00               	movlw	0
 10461  01560E  0100               	movlb	0	; () banked
 10462  015610  6F76               	movwf	___lldiv@quotient& (0+255),b
 10463  015612  0E00               	movlw	0
 10464  015614  6F77               	movwf	(___lldiv@quotient+1)& (0+255),b
 10465  015616  0E00               	movlw	0
 10466  015618  6F78               	movwf	(___lldiv@quotient+2)& (0+255),b
 10467  01561A  0E00               	movlw	0
 10468  01561C  6F79               	movwf	(___lldiv@quotient+3)& (0+255),b
 10469                           
 10470                           ; BSR set to: 0
 10471  01561E  0100               	movlb	0	; () banked
 10472  015620  5172               	movf	___lldiv@divisor& (0+255),w,b
 10473  015622  0100               	movlb	0	; () banked
 10474  015624  1173               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 10475  015626  0100               	movlb	0	; () banked
 10476  015628  1174               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 10477  01562A  0100               	movlb	0	; () banked
 10478  01562C  1175               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 10479  01562E  B4D8               	btfsc	status,2,c
 10480  015630  D042               	goto	l1311
 10481                           
 10482                           ; BSR set to: 0
 10483  015632  0E01               	movlw	1
 10484  015634  0100               	movlb	0	; () banked
 10485  015636  6F7A               	movwf	___lldiv@counter& (0+255),b
 10486  015638  D008               	goto	l8007
 10487  01563A                     l8005:
 10488                           
 10489                           ; BSR set to: 0
 10490  01563A  0100               	movlb	0	; () banked
 10491  01563C  90D8               	bcf	status,0,c
 10492  01563E  3772               	rlcf	___lldiv@divisor& (0+255),f,b
 10493  015640  3773               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 10494  015642  3774               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 10495  015644  3775               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 10496  015646  0100               	movlb	0	; () banked
 10497  015648  2B7A               	incf	___lldiv@counter& (0+255),f,b
 10498  01564A                     l8007:
 10499                           
 10500                           ; BSR set to: 0
 10501  01564A  0100               	movlb	0	; () banked
 10502  01564C  AF75               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 10503  01564E  D7F5               	goto	l8005
 10504  015650                     l8009:
 10505                           
 10506                           ; BSR set to: 0
 10507  015650  0100               	movlb	0	; () banked
 10508  015652  90D8               	bcf	status,0,c
 10509  015654  3776               	rlcf	___lldiv@quotient& (0+255),f,b
 10510  015656  3777               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 10511  015658  3778               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 10512  01565A  3779               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 10513                           
 10514                           ; BSR set to: 0
 10515  01565C  0100               	movlb	0	; () banked
 10516  01565E  5172               	movf	___lldiv@divisor& (0+255),w,b
 10517  015660  0100               	movlb	0	; () banked
 10518  015662  5D6E               	subwf	___lldiv@dividend& (0+255),w,b
 10519  015664  0100               	movlb	0	; () banked
 10520  015666  5173               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10521  015668  0100               	movlb	0	; () banked
 10522  01566A  596F               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 10523  01566C  0100               	movlb	0	; () banked
 10524  01566E  5174               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10525  015670  0100               	movlb	0	; () banked
 10526  015672  5970               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 10527  015674  0100               	movlb	0	; () banked
 10528  015676  5175               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10529  015678  0100               	movlb	0	; () banked
 10530  01567A  5971               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 10531  01567C  A0D8               	btfss	status,0,c
 10532  01567E  D012               	goto	l8017
 10533                           
 10534                           ; BSR set to: 0
 10535  015680  0100               	movlb	0	; () banked
 10536  015682  5172               	movf	___lldiv@divisor& (0+255),w,b
 10537  015684  0100               	movlb	0	; () banked
 10538  015686  5F6E               	subwf	___lldiv@dividend& (0+255),f,b
 10539  015688  0100               	movlb	0	; () banked
 10540  01568A  5173               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10541  01568C  0100               	movlb	0	; () banked
 10542  01568E  5B6F               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 10543  015690  0100               	movlb	0	; () banked
 10544  015692  5174               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10545  015694  0100               	movlb	0	; () banked
 10546  015696  5B70               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 10547  015698  0100               	movlb	0	; () banked
 10548  01569A  5175               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10549  01569C  0100               	movlb	0	; () banked
 10550  01569E  5B71               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 10551                           
 10552                           ; BSR set to: 0
 10553  0156A0  0100               	movlb	0	; () banked
 10554  0156A2  8176               	bsf	___lldiv@quotient& (0+255),0,b
 10555  0156A4                     l8017:
 10556                           
 10557                           ; BSR set to: 0
 10558  0156A4  0100               	movlb	0	; () banked
 10559  0156A6  90D8               	bcf	status,0,c
 10560  0156A8  3375               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 10561  0156AA  3374               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 10562  0156AC  3373               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 10563  0156AE  3372               	rrcf	___lldiv@divisor& (0+255),f,b
 10564                           
 10565                           ; BSR set to: 0
 10566  0156B0  0100               	movlb	0	; () banked
 10567  0156B2  2F7A               	decfsz	___lldiv@counter& (0+255),f,b
 10568  0156B4  D7CD               	goto	l8009
 10569  0156B6                     l1311:
 10570                           
 10571                           ; BSR set to: 0
 10572  0156B6  C076  F06E         	movff	___lldiv@quotient,?___lldiv
 10573  0156BA  C077  F06F         	movff	___lldiv@quotient+1,?___lldiv+1
 10574  0156BE  C078  F070         	movff	___lldiv@quotient+2,?___lldiv+2
 10575  0156C2  C079  F071         	movff	___lldiv@quotient+3,?___lldiv+3
 10576                           
 10577                           ; BSR set to: 0
 10578  0156C6  0012               	return		;funcret
 10579  0156C8                     __end_of___lldiv:
 10580                           	opt stack 0
 10581                           tblptru	equ	0xFF8
 10582                           tblptrh	equ	0xFF7
 10583                           tblptrl	equ	0xFF6
 10584                           tablat	equ	0xFF5
 10585                           prodh	equ	0xFF4
 10586                           prodl	equ	0xFF3
 10587                           intcon	equ	0xFF2
 10588                           postinc0	equ	0xFEE
 10589                           wreg	equ	0xFE8
 10590                           indf2	equ	0xFDF
 10591                           postinc2	equ	0xFDE
 10592                           fsr2h	equ	0xFDA
 10593                           fsr2l	equ	0xFD9
 10594                           status	equ	0xFD8
 10595                           
 10596 ;; *************** function ___fltol *****************
 10597 ;; Defined at:
 10598 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
 10599 ;; Parameters:    Size  Location     Type
 10600 ;;  f1              4   62[BANK0 ] unsigned long 
 10601 ;; Auto vars:     Size  Location     Type
 10602 ;;  exp1            1   71[BANK0 ] unsigned char 
 10603 ;;  sign1           1   70[BANK0 ] unsigned char 
 10604 ;; Return value:  Size  Location     Type
 10605 ;;                  4   62[BANK0 ] long 
 10606 ;; Registers used:
 10607 ;;		wreg, status,2, status,0
 10608 ;; Tracked objects:
 10609 ;;		On entry : 0/0
 10610 ;;		On exit  : 0/0
 10611 ;;		Unchanged: 0/0
 10612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10613 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10614 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10615 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10616 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10617 ;;Total ram usage:       10 bytes
 10618 ;; Hardware stack levels used:    1
 10619 ;; Hardware stack levels required when called:    3
 10620 ;; This function calls:
 10621 ;;		Nothing
 10622 ;; This function is called by:
 10623 ;;		_main
 10624 ;;		_sprintf
 10625 ;; This function uses a non-reentrant model
 10626 ;;
 10627                           
 10628                           	psect	text20
 10629  0151C0                     __ptext20:
 10630                           	opt stack 0
 10631  0151C0                     ___fltol:
 10632                           	opt stack 27
 10633                           
 10634                           ; BSR set to: 0
 10635                           ;incstack = 0
 10636  0151C0  0100               	movlb	0	; () banked
 10637  0151C2  35A0               	rlcf	(___fltol@f1+2)& (0+255),w,b
 10638  0151C4  35A1               	rlcf	(___fltol@f1+3)& (0+255),w,b
 10639  0151C6  0100               	movlb	0	; () banked
 10640  0151C8  6FA7               	movwf	___fltol@exp1& (0+255),b
 10641  0151CA  0100               	movlb	0	; () banked
 10642  0151CC  51A7               	movf	___fltol@exp1& (0+255),w,b
 10643  0151CE  A4D8               	btfss	status,2,c
 10644  0151D0  D00A               	goto	l7961
 10645                           
 10646                           ; BSR set to: 0
 10647  0151D2  0E00               	movlw	0
 10648  0151D4  0100               	movlb	0	; () banked
 10649  0151D6  6F9E               	movwf	?___fltol& (0+255),b
 10650  0151D8  0E00               	movlw	0
 10651  0151DA  6F9F               	movwf	(?___fltol+1)& (0+255),b
 10652  0151DC  0E00               	movlw	0
 10653  0151DE  6FA0               	movwf	(?___fltol+2)& (0+255),b
 10654  0151E0  0E00               	movlw	0
 10655  0151E2  6FA1               	movwf	(?___fltol+3)& (0+255),b
 10656                           
 10657                           ; BSR set to: 0
 10658  0151E4  0012               	return	
 10659  0151E6                     l7961:
 10660                           
 10661                           ; BSR set to: 0
 10662  0151E6  C09E  F0A2         	movff	___fltol@f1,??___fltol
 10663  0151EA  C09F  F0A3         	movff	___fltol@f1+1,??___fltol+1
 10664  0151EE  C0A0  F0A4         	movff	___fltol@f1+2,??___fltol+2
 10665  0151F2  C0A1  F0A5         	movff	___fltol@f1+3,??___fltol+3
 10666  0151F6  0E20               	movlw	32
 10667  0151F8  D006               	goto	u10330
 10668  0151FA                     u10335:
 10669  0151FA  0100               	movlb	0	; () banked
 10670  0151FC  90D8               	bcf	status,0,c
 10671  0151FE  33A5               	rrcf	(??___fltol+3)& (0+255),f,b
 10672  015200  33A4               	rrcf	(??___fltol+2)& (0+255),f,b
 10673  015202  33A3               	rrcf	(??___fltol+1)& (0+255),f,b
 10674  015204  33A2               	rrcf	??___fltol& (0+255),f,b
 10675  015206                     u10330:
 10676  015206  2EE8               	decfsz	wreg,f,c
 10677  015208  D7F8               	goto	u10335
 10678  01520A  0100               	movlb	0	; () banked
 10679  01520C  51A2               	movf	??___fltol& (0+255),w,b
 10680  01520E  0100               	movlb	0	; () banked
 10681  015210  6FA6               	movwf	___fltol@sign1& (0+255),b
 10682                           
 10683                           ; BSR set to: 0
 10684  015212  0100               	movlb	0	; () banked
 10685  015214  8FA0               	bsf	(___fltol@f1+2)& (0+255),7,b
 10686                           
 10687                           ; BSR set to: 0
 10688  015216  0EFF               	movlw	255
 10689  015218  0100               	movlb	0	; () banked
 10690  01521A  179E               	andwf	___fltol@f1& (0+255),f,b
 10691  01521C  0EFF               	movlw	255
 10692  01521E  179F               	andwf	(___fltol@f1+1)& (0+255),f,b
 10693  015220  0EFF               	movlw	255
 10694  015222  17A0               	andwf	(___fltol@f1+2)& (0+255),f,b
 10695  015224  0E00               	movlw	0
 10696  015226  17A1               	andwf	(___fltol@f1+3)& (0+255),f,b
 10697                           
 10698                           ; BSR set to: 0
 10699  015228  0E96               	movlw	150
 10700  01522A  0100               	movlb	0	; () banked
 10701  01522C  5FA7               	subwf	___fltol@exp1& (0+255),f,b
 10702                           
 10703                           ; BSR set to: 0
 10704  01522E  0100               	movlb	0	; () banked
 10705  015230  AFA7               	btfss	___fltol@exp1& (0+255),7,b
 10706  015232  D01A               	goto	l7981
 10707                           
 10708                           ; BSR set to: 0
 10709  015234  0100               	movlb	0	; () banked
 10710  015236  51A7               	movf	___fltol@exp1& (0+255),w,b
 10711  015238  0A80               	xorlw	128
 10712  01523A  0F97               	addlw	151
 10713  01523C  B0D8               	btfsc	status,0,c
 10714  01523E  D00A               	goto	l7977
 10715                           
 10716                           ; BSR set to: 0
 10717  015240  0E00               	movlw	0
 10718  015242  0100               	movlb	0	; () banked
 10719  015244  6F9E               	movwf	?___fltol& (0+255),b
 10720  015246  0E00               	movlw	0
 10721  015248  6F9F               	movwf	(?___fltol+1)& (0+255),b
 10722  01524A  0E00               	movlw	0
 10723  01524C  6FA0               	movwf	(?___fltol+2)& (0+255),b
 10724  01524E  0E00               	movlw	0
 10725  015250  6FA1               	movwf	(?___fltol+3)& (0+255),b
 10726                           
 10727                           ; BSR set to: 0
 10728  015252  0012               	return	
 10729  015254                     l7977:
 10730                           
 10731                           ; BSR set to: 0
 10732  015254  0100               	movlb	0	; () banked
 10733  015256  90D8               	bcf	status,0,c
 10734  015258  33A1               	rrcf	(___fltol@f1+3)& (0+255),f,b
 10735  01525A  33A0               	rrcf	(___fltol@f1+2)& (0+255),f,b
 10736  01525C  339F               	rrcf	(___fltol@f1+1)& (0+255),f,b
 10737  01525E  339E               	rrcf	___fltol@f1& (0+255),f,b
 10738                           
 10739                           ; BSR set to: 0
 10740  015260  0100               	movlb	0	; () banked
 10741  015262  3FA7               	incfsz	___fltol@exp1& (0+255),f,b
 10742  015264  D7F7               	goto	l7977
 10743                           
 10744                           ; BSR set to: 0
 10745  015266  D01B               	goto	l7991
 10746  015268                     l7981:
 10747                           
 10748                           ; BSR set to: 0
 10749  015268  0E1F               	movlw	31
 10750  01526A  0100               	movlb	0	; () banked
 10751  01526C  65A7               	cpfsgt	___fltol@exp1& (0+255),b
 10752  01526E  D012               	goto	l7989
 10753                           
 10754                           ; BSR set to: 0
 10755  015270  0E00               	movlw	0
 10756  015272  0100               	movlb	0	; () banked
 10757  015274  6F9E               	movwf	?___fltol& (0+255),b
 10758  015276  0E00               	movlw	0
 10759  015278  6F9F               	movwf	(?___fltol+1)& (0+255),b
 10760  01527A  0E00               	movlw	0
 10761  01527C  6FA0               	movwf	(?___fltol+2)& (0+255),b
 10762  01527E  0E00               	movlw	0
 10763  015280  6FA1               	movwf	(?___fltol+3)& (0+255),b
 10764                           
 10765                           ; BSR set to: 0
 10766  015282  0012               	return	
 10767  015284                     l7987:
 10768                           
 10769                           ; BSR set to: 0
 10770  015284  0100               	movlb	0	; () banked
 10771  015286  90D8               	bcf	status,0,c
 10772  015288  379E               	rlcf	___fltol@f1& (0+255),f,b
 10773  01528A  379F               	rlcf	(___fltol@f1+1)& (0+255),f,b
 10774  01528C  37A0               	rlcf	(___fltol@f1+2)& (0+255),f,b
 10775  01528E  37A1               	rlcf	(___fltol@f1+3)& (0+255),f,b
 10776  015290  0100               	movlb	0	; () banked
 10777  015292  07A7               	decf	___fltol@exp1& (0+255),f,b
 10778  015294                     l7989:
 10779                           
 10780                           ; BSR set to: 0
 10781  015294  0100               	movlb	0	; () banked
 10782  015296  51A7               	movf	___fltol@exp1& (0+255),w,b
 10783  015298  0100               	movlb	0	; () banked
 10784  01529A  A4D8               	btfss	status,2,c
 10785  01529C  D7F3               	goto	l7987
 10786  01529E                     l7991:
 10787                           
 10788                           ; BSR set to: 0
 10789  01529E  0100               	movlb	0	; () banked
 10790  0152A0  51A6               	movf	___fltol@sign1& (0+255),w,b
 10791  0152A2  0100               	movlb	0	; () banked
 10792  0152A4  B4D8               	btfsc	status,2,c
 10793  0152A6  D009               	goto	l7995
 10794                           
 10795                           ; BSR set to: 0
 10796  0152A8  0100               	movlb	0	; () banked
 10797  0152AA  1FA1               	comf	(___fltol@f1+3)& (0+255),f,b
 10798  0152AC  1FA0               	comf	(___fltol@f1+2)& (0+255),f,b
 10799  0152AE  1F9F               	comf	(___fltol@f1+1)& (0+255),f,b
 10800  0152B0  6D9E               	negf	___fltol@f1& (0+255),b
 10801  0152B2  0E00               	movlw	0
 10802  0152B4  239F               	addwfc	(___fltol@f1+1)& (0+255),f,b
 10803  0152B6  23A0               	addwfc	(___fltol@f1+2)& (0+255),f,b
 10804  0152B8  23A1               	addwfc	(___fltol@f1+3)& (0+255),f,b
 10805  0152BA                     l7995:
 10806                           
 10807                           ; BSR set to: 0
 10808  0152BA  C09E  F09E         	movff	___fltol@f1,?___fltol
 10809  0152BE  C09F  F09F         	movff	___fltol@f1+1,?___fltol+1
 10810  0152C2  C0A0  F0A0         	movff	___fltol@f1+2,?___fltol+2
 10811  0152C6  C0A1  F0A1         	movff	___fltol@f1+3,?___fltol+3
 10812  0152CA  0012               	return	
 10813  0152CC                     __end_of___fltol:
 10814                           	opt stack 0
 10815                           tblptru	equ	0xFF8
 10816                           tblptrh	equ	0xFF7
 10817                           tblptrl	equ	0xFF6
 10818                           tablat	equ	0xFF5
 10819                           prodh	equ	0xFF4
 10820                           prodl	equ	0xFF3
 10821                           intcon	equ	0xFF2
 10822                           postinc0	equ	0xFEE
 10823                           wreg	equ	0xFE8
 10824                           indf2	equ	0xFDF
 10825                           postinc2	equ	0xFDE
 10826                           fsr2h	equ	0xFDA
 10827                           fsr2l	equ	0xFD9
 10828                           status	equ	0xFD8
 10829                           
 10830 ;; *************** function ___flsub *****************
 10831 ;; Defined at:
 10832 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 10833 ;; Parameters:    Size  Location     Type
 10834 ;;  b               4   86[BANK0 ] long 
 10835 ;;  a               4   90[BANK0 ] long 
 10836 ;; Auto vars:     Size  Location     Type
 10837 ;;		None
 10838 ;; Return value:  Size  Location     Type
 10839 ;;                  4   86[BANK0 ] long 
 10840 ;; Registers used:
 10841 ;;		wreg, status,2, status,0, cstack
 10842 ;; Tracked objects:
 10843 ;;		On entry : 0/0
 10844 ;;		On exit  : 0/0
 10845 ;;		Unchanged: 0/0
 10846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10847 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10850 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10851 ;;Total ram usage:        8 bytes
 10852 ;; Hardware stack levels used:    1
 10853 ;; Hardware stack levels required when called:    4
 10854 ;; This function calls:
 10855 ;;		___fladd
 10856 ;; This function is called by:
 10857 ;;		_sprintf
 10858 ;; This function uses a non-reentrant model
 10859 ;;
 10860                           
 10861                           	psect	text21
 10862  015B2C                     __ptext21:
 10863                           	opt stack 0
 10864  015B2C                     ___flsub:
 10865                           	opt stack 24
 10866                           
 10867                           ; BSR set to: 0
 10868                           ;incstack = 0
 10869  015B2C  0E00               	movlw	0
 10870  015B2E  0100               	movlb	0	; () banked
 10871  015B30  1BBA               	xorwf	___flsub@a& (0+255),f,b
 10872  015B32  0E00               	movlw	0
 10873  015B34  1BBB               	xorwf	(___flsub@a+1)& (0+255),f,b
 10874  015B36  0E00               	movlw	0
 10875  015B38  1BBC               	xorwf	(___flsub@a+2)& (0+255),f,b
 10876  015B3A  0E80               	movlw	128
 10877  015B3C  1BBD               	xorwf	(___flsub@a+3)& (0+255),f,b
 10878                           
 10879                           ; BSR set to: 0
 10880  015B3E  C0B6  F0A2         	movff	___flsub@b,___fladd@b
 10881  015B42  C0B7  F0A3         	movff	___flsub@b+1,___fladd@b+1
 10882  015B46  C0B8  F0A4         	movff	___flsub@b+2,___fladd@b+2
 10883  015B4A  C0B9  F0A5         	movff	___flsub@b+3,___fladd@b+3
 10884  015B4E  C0BA  F0A6         	movff	___flsub@a,___fladd@a
 10885  015B52  C0BB  F0A7         	movff	___flsub@a+1,___fladd@a+1
 10886  015B56  C0BC  F0A8         	movff	___flsub@a+2,___fladd@a+2
 10887  015B5A  C0BD  F0A9         	movff	___flsub@a+3,___fladd@a+3
 10888  015B5E  ECEE  F095         	call	___fladd	;wreg free
 10889  015B62  C0A2  F0B6         	movff	?___fladd,?___flsub
 10890  015B66  C0A3  F0B7         	movff	?___fladd+1,?___flsub+1
 10891  015B6A  C0A4  F0B8         	movff	?___fladd+2,?___flsub+2
 10892  015B6E  C0A5  F0B9         	movff	?___fladd+3,?___flsub+3
 10893  015B72  0012               	return	
 10894  015B74                     __end_of___flsub:
 10895                           	opt stack 0
 10896                           tblptru	equ	0xFF8
 10897                           tblptrh	equ	0xFF7
 10898                           tblptrl	equ	0xFF6
 10899                           tablat	equ	0xFF5
 10900                           prodh	equ	0xFF4
 10901                           prodl	equ	0xFF3
 10902                           intcon	equ	0xFF2
 10903                           postinc0	equ	0xFEE
 10904                           wreg	equ	0xFE8
 10905                           indf2	equ	0xFDF
 10906                           postinc2	equ	0xFDE
 10907                           fsr2h	equ	0xFDA
 10908                           fsr2l	equ	0xFD9
 10909                           status	equ	0xFD8
 10910                           
 10911 ;; *************** function ___fladd *****************
 10912 ;; Defined at:
 10913 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 10914 ;; Parameters:    Size  Location     Type
 10915 ;;  b               4   66[BANK0 ] long 
 10916 ;;  a               4   70[BANK0 ] long 
 10917 ;; Auto vars:     Size  Location     Type
 10918 ;;  grs             1   85[BANK0 ] unsigned char 
 10919 ;;  bexp            1   84[BANK0 ] unsigned char 
 10920 ;;  aexp            1   83[BANK0 ] unsigned char 
 10921 ;;  signs           1   82[BANK0 ] unsigned char 
 10922 ;; Return value:  Size  Location     Type
 10923 ;;                  4   66[BANK0 ] unsigned char 
 10924 ;; Registers used:
 10925 ;;		wreg, status,2, status,0
 10926 ;; Tracked objects:
 10927 ;;		On entry : 0/0
 10928 ;;		On exit  : 0/0
 10929 ;;		Unchanged: 0/0
 10930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10931 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10932 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10933 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10934 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10935 ;;Total ram usage:       20 bytes
 10936 ;; Hardware stack levels used:    1
 10937 ;; Hardware stack levels required when called:    3
 10938 ;; This function calls:
 10939 ;;		Nothing
 10940 ;; This function is called by:
 10941 ;;		_sprintf
 10942 ;;		___flsub
 10943 ;; This function uses a non-reentrant model
 10944 ;;
 10945                           
 10946                           	psect	text22
 10947  012BDC                     __ptext22:
 10948                           	opt stack 0
 10949  012BDC                     ___fladd:
 10950                           	opt stack 24
 10951                           
 10952                           ;incstack = 0
 10953  012BDC  0100               	movlb	0	; () banked
 10954  012BDE  51A5               	movf	(___fladd@b+3)& (0+255),w,b
 10955  012BE0  0B80               	andlw	128
 10956  012BE2  0100               	movlb	0	; () banked
 10957  012BE4  6FB2               	movwf	___fladd@signs& (0+255),b
 10958  012BE6  0100               	movlb	0	; () banked
 10959  012BE8  51A5               	movf	(___fladd@b+3)& (0+255),w,b
 10960  012BEA  25A5               	addwf	(___fladd@b+3)& (0+255),w,b
 10961  012BEC  0100               	movlb	0	; () banked
 10962  012BEE  6FB4               	movwf	___fladd@bexp& (0+255),b
 10963                           
 10964                           ; BSR set to: 0
 10965  012BF0  0100               	movlb	0	; () banked
 10966  012BF2  AFA4               	btfss	(___fladd@b+2)& (0+255),7,b
 10967  012BF4  D002               	goto	l7313
 10968                           
 10969                           ; BSR set to: 0
 10970  012BF6  0100               	movlb	0	; () banked
 10971  012BF8  81B4               	bsf	___fladd@bexp& (0+255),0,b
 10972  012BFA                     l7313:
 10973                           
 10974                           ; BSR set to: 0
 10975  012BFA  0100               	movlb	0	; () banked
 10976  012BFC  51B4               	movf	___fladd@bexp& (0+255),w,b
 10977  012BFE  0100               	movlb	0	; () banked
 10978  012C00  B4D8               	btfsc	status,2,c
 10979  012C02  D012               	goto	l7323
 10980                           
 10981                           ; BSR set to: 0
 10982  012C04  0100               	movlb	0	; () banked
 10983  012C06  29B4               	incf	___fladd@bexp& (0+255),w,b
 10984  012C08  A4D8               	btfss	status,2,c
 10985  012C0A  D009               	goto	l7319
 10986                           
 10987                           ; BSR set to: 0
 10988  012C0C  0E00               	movlw	0
 10989  012C0E  0100               	movlb	0	; () banked
 10990  012C10  6FA2               	movwf	___fladd@b& (0+255),b
 10991  012C12  0E00               	movlw	0
 10992  012C14  6FA3               	movwf	(___fladd@b+1)& (0+255),b
 10993  012C16  0E00               	movlw	0
 10994  012C18  6FA4               	movwf	(___fladd@b+2)& (0+255),b
 10995  012C1A  0E00               	movlw	0
 10996  012C1C  6FA5               	movwf	(___fladd@b+3)& (0+255),b
 10997  012C1E                     l7319:
 10998                           
 10999                           ; BSR set to: 0
 11000  012C1E  0100               	movlb	0	; () banked
 11001  012C20  8FA4               	bsf	(___fladd@b+2)& (0+255),7,b
 11002                           
 11003                           ; BSR set to: 0
 11004  012C22  0E00               	movlw	0
 11005  012C24  0100               	movlb	0	; () banked
 11006  012C26  D008               	goto	L9
 11007  012C28                     l7323:
 11008                           
 11009                           ; BSR set to: 0
 11010  012C28  0E00               	movlw	0
 11011  012C2A  0100               	movlb	0	; () banked
 11012  012C2C  6FA2               	movwf	___fladd@b& (0+255),b
 11013  012C2E  0E00               	movlw	0
 11014  012C30  6FA3               	movwf	(___fladd@b+1)& (0+255),b
 11015  012C32  0E00               	movlw	0
 11016  012C34  6FA4               	movwf	(___fladd@b+2)& (0+255),b
 11017  012C36  0E00               	movlw	0
 11018  012C38                     L9:
 11019  012C38  6FA5               	movwf	(___fladd@b+3)& (0+255),b
 11020                           
 11021                           ; BSR set to: 0
 11022                           
 11023                           ; BSR set to: 0
 11024  012C3A  0100               	movlb	0	; () banked
 11025  012C3C  51A9               	movf	(___fladd@a+3)& (0+255),w,b
 11026  012C3E  0B80               	andlw	128
 11027  012C40  0100               	movlb	0	; () banked
 11028  012C42  6FB3               	movwf	___fladd@aexp& (0+255),b
 11029                           
 11030                           ; BSR set to: 0
 11031  012C44  0100               	movlb	0	; () banked
 11032  012C46  51B2               	movf	___fladd@signs& (0+255),w,b
 11033  012C48  0100               	movlb	0	; () banked
 11034  012C4A  19B3               	xorwf	___fladd@aexp& (0+255),w,b
 11035  012C4C  B4D8               	btfsc	status,2,c
 11036  012C4E  D002               	goto	l7331
 11037                           
 11038                           ; BSR set to: 0
 11039  012C50  0100               	movlb	0	; () banked
 11040  012C52  8DB2               	bsf	___fladd@signs& (0+255),6,b
 11041  012C54                     l7331:
 11042                           
 11043                           ; BSR set to: 0
 11044  012C54  0100               	movlb	0	; () banked
 11045  012C56  51A9               	movf	(___fladd@a+3)& (0+255),w,b
 11046  012C58  25A9               	addwf	(___fladd@a+3)& (0+255),w,b
 11047  012C5A  0100               	movlb	0	; () banked
 11048  012C5C  6FB3               	movwf	___fladd@aexp& (0+255),b
 11049                           
 11050                           ; BSR set to: 0
 11051  012C5E  0100               	movlb	0	; () banked
 11052  012C60  AFA8               	btfss	(___fladd@a+2)& (0+255),7,b
 11053  012C62  D002               	goto	l7337
 11054                           
 11055                           ; BSR set to: 0
 11056  012C64  0100               	movlb	0	; () banked
 11057  012C66  81B3               	bsf	___fladd@aexp& (0+255),0,b
 11058  012C68                     l7337:
 11059                           
 11060                           ; BSR set to: 0
 11061  012C68  0100               	movlb	0	; () banked
 11062  012C6A  51B3               	movf	___fladd@aexp& (0+255),w,b
 11063  012C6C  0100               	movlb	0	; () banked
 11064  012C6E  B4D8               	btfsc	status,2,c
 11065  012C70  D012               	goto	l7347
 11066                           
 11067                           ; BSR set to: 0
 11068  012C72  0100               	movlb	0	; () banked
 11069  012C74  29B3               	incf	___fladd@aexp& (0+255),w,b
 11070  012C76  A4D8               	btfss	status,2,c
 11071  012C78  D009               	goto	l7343
 11072                           
 11073                           ; BSR set to: 0
 11074  012C7A  0E00               	movlw	0
 11075  012C7C  0100               	movlb	0	; () banked
 11076  012C7E  6FA6               	movwf	___fladd@a& (0+255),b
 11077  012C80  0E00               	movlw	0
 11078  012C82  6FA7               	movwf	(___fladd@a+1)& (0+255),b
 11079  012C84  0E00               	movlw	0
 11080  012C86  6FA8               	movwf	(___fladd@a+2)& (0+255),b
 11081  012C88  0E00               	movlw	0
 11082  012C8A  6FA9               	movwf	(___fladd@a+3)& (0+255),b
 11083  012C8C                     l7343:
 11084                           
 11085                           ; BSR set to: 0
 11086  012C8C  0100               	movlb	0	; () banked
 11087  012C8E  8FA8               	bsf	(___fladd@a+2)& (0+255),7,b
 11088                           
 11089                           ; BSR set to: 0
 11090  012C90  0E00               	movlw	0
 11091  012C92  0100               	movlb	0	; () banked
 11092  012C94  D008               	goto	L10
 11093  012C96                     l7347:
 11094                           
 11095                           ; BSR set to: 0
 11096  012C96  0E00               	movlw	0
 11097  012C98  0100               	movlb	0	; () banked
 11098  012C9A  6FA6               	movwf	___fladd@a& (0+255),b
 11099  012C9C  0E00               	movlw	0
 11100  012C9E  6FA7               	movwf	(___fladd@a+1)& (0+255),b
 11101  012CA0  0E00               	movlw	0
 11102  012CA2  6FA8               	movwf	(___fladd@a+2)& (0+255),b
 11103  012CA4  0E00               	movlw	0
 11104  012CA6                     L10:
 11105  012CA6  6FA9               	movwf	(___fladd@a+3)& (0+255),b
 11106                           
 11107                           ; BSR set to: 0
 11108                           
 11109                           ; BSR set to: 0
 11110  012CA8  0100               	movlb	0	; () banked
 11111  012CAA  51B4               	movf	___fladd@bexp& (0+255),w,b
 11112  012CAC  0100               	movlb	0	; () banked
 11113  012CAE  5DB3               	subwf	___fladd@aexp& (0+255),w,b
 11114  012CB0  B0D8               	btfsc	status,0,c
 11115  012CB2  D024               	goto	l7385
 11116                           
 11117                           ; BSR set to: 0
 11118  012CB4  0100               	movlb	0	; () banked
 11119  012CB6  ADB2               	btfss	___fladd@signs& (0+255),6,b
 11120  012CB8  D003               	goto	l7355
 11121                           
 11122                           ; BSR set to: 0
 11123  012CBA  0E80               	movlw	128
 11124  012CBC  0100               	movlb	0	; () banked
 11125  012CBE  1BB2               	xorwf	___fladd@signs& (0+255),f,b
 11126  012CC0                     l7355:
 11127                           
 11128                           ; BSR set to: 0
 11129  012CC0  C0B4  F0B5         	movff	___fladd@bexp,___fladd@grs
 11130                           
 11131                           ; BSR set to: 0
 11132  012CC4  C0B3  F0B4         	movff	___fladd@aexp,___fladd@bexp
 11133                           
 11134                           ; BSR set to: 0
 11135  012CC8  C0B5  F0B3         	movff	___fladd@grs,___fladd@aexp
 11136                           
 11137                           ; BSR set to: 0
 11138  012CCC  C0A2  F0B5         	movff	___fladd@b,___fladd@grs
 11139                           
 11140                           ; BSR set to: 0
 11141  012CD0  C0A6  F0A2         	movff	___fladd@a,___fladd@b
 11142                           
 11143                           ; BSR set to: 0
 11144  012CD4  C0B5  F0A6         	movff	___fladd@grs,___fladd@a
 11145                           
 11146                           ; BSR set to: 0
 11147  012CD8  C0A3  F0B5         	movff	___fladd@b+1,___fladd@grs
 11148                           
 11149                           ; BSR set to: 0
 11150  012CDC  C0A7  F0A3         	movff	___fladd@a+1,___fladd@b+1
 11151                           
 11152                           ; BSR set to: 0
 11153  012CE0  C0B5  F0A7         	movff	___fladd@grs,___fladd@a+1
 11154                           
 11155                           ; BSR set to: 0
 11156  012CE4  C0A4  F0B5         	movff	___fladd@b+2,___fladd@grs
 11157                           
 11158                           ; BSR set to: 0
 11159  012CE8  C0A8  F0A4         	movff	___fladd@a+2,___fladd@b+2
 11160                           
 11161                           ; BSR set to: 0
 11162  012CEC  C0B5  F0A8         	movff	___fladd@grs,___fladd@a+2
 11163                           
 11164                           ; BSR set to: 0
 11165  012CF0  C0A5  F0B5         	movff	___fladd@b+3,___fladd@grs
 11166                           
 11167                           ; BSR set to: 0
 11168  012CF4  C0A9  F0A5         	movff	___fladd@a+3,___fladd@b+3
 11169                           
 11170                           ; BSR set to: 0
 11171  012CF8  C0B5  F0A9         	movff	___fladd@grs,___fladd@a+3
 11172  012CFC                     l7385:
 11173                           
 11174                           ; BSR set to: 0
 11175  012CFC  0E00               	movlw	0
 11176  012CFE  0100               	movlb	0	; () banked
 11177  012D00  6FB5               	movwf	___fladd@grs& (0+255),b
 11178                           
 11179                           ; BSR set to: 0
 11180  012D02  0100               	movlb	0	; () banked
 11181  012D04  51B4               	movf	___fladd@bexp& (0+255),w,b
 11182  012D06  0100               	movlb	0	; () banked
 11183  012D08  6FAA               	movwf	??___fladd& (0+255),b
 11184  012D0A  6BAB               	clrf	(??___fladd+1)& (0+255),b
 11185  012D0C  0100               	movlb	0	; () banked
 11186  012D0E  1FAA               	comf	??___fladd& (0+255),f,b
 11187  012D10  1FAB               	comf	(??___fladd+1)& (0+255),f,b
 11188  012D12  4BAA               	infsnz	??___fladd& (0+255),f,b
 11189  012D14  2BAB               	incf	(??___fladd+1)& (0+255),f,b
 11190  012D16  0100               	movlb	0	; () banked
 11191  012D18  51B3               	movf	___fladd@aexp& (0+255),w,b
 11192  012D1A  0100               	movlb	0	; () banked
 11193  012D1C  6FAC               	movwf	(??___fladd+2)& (0+255),b
 11194  012D1E  6BAD               	clrf	(??___fladd+3)& (0+255),b
 11195  012D20  0100               	movlb	0	; () banked
 11196  012D22  51AA               	movf	??___fladd& (0+255),w,b
 11197  012D24  0100               	movlb	0	; () banked
 11198  012D26  27AC               	addwf	(??___fladd+2)& (0+255),f,b
 11199  012D28  0100               	movlb	0	; () banked
 11200  012D2A  51AB               	movf	(??___fladd+1)& (0+255),w,b
 11201  012D2C  0100               	movlb	0	; () banked
 11202  012D2E  23AD               	addwfc	(??___fladd+3)& (0+255),f,b
 11203  012D30  0100               	movlb	0	; () banked
 11204  012D32  BFAD               	btfsc	(??___fladd+3)& (0+255),7,b
 11205  012D34  D03D               	goto	l1406
 11206  012D36  0100               	movlb	0	; () banked
 11207  012D38  51AD               	movf	(??___fladd+3)& (0+255),w,b
 11208  012D3A  E105               	bnz	u9390
 11209  012D3C  0E1A               	movlw	26
 11210  012D3E  0100               	movlb	0	; () banked
 11211  012D40  5DAC               	subwf	(??___fladd+2)& (0+255),w,b
 11212  012D42  A0D8               	btfss	status,0,c
 11213  012D44  D035               	goto	l1406
 11214  012D46                     u9390:
 11215                           
 11216                           ; BSR set to: 0
 11217  012D46  0100               	movlb	0	; () banked
 11218  012D48  51A2               	movf	___fladd@b& (0+255),w,b
 11219  012D4A  0100               	movlb	0	; () banked
 11220  012D4C  11A3               	iorwf	(___fladd@b+1)& (0+255),w,b
 11221  012D4E  0100               	movlb	0	; () banked
 11222  012D50  11A4               	iorwf	(___fladd@b+2)& (0+255),w,b
 11223  012D52  0100               	movlb	0	; () banked
 11224  012D54  11A5               	iorwf	(___fladd@b+3)& (0+255),w,b
 11225  012D56  B4D8               	btfsc	status,2,c
 11226  012D58  D002               	goto	u9400
 11227  012D5A  0E01               	movlw	1
 11228  012D5C  D001               	goto	u9410
 11229  012D5E                     u9400:
 11230  012D5E  0E00               	movlw	0
 11231  012D60                     u9410:
 11232  012D60  0100               	movlb	0	; () banked
 11233  012D62  6FB5               	movwf	___fladd@grs& (0+255),b
 11234                           
 11235                           ; BSR set to: 0
 11236  012D64  0E00               	movlw	0
 11237  012D66  0100               	movlb	0	; () banked
 11238  012D68  6FA2               	movwf	___fladd@b& (0+255),b
 11239  012D6A  0E00               	movlw	0
 11240  012D6C  6FA3               	movwf	(___fladd@b+1)& (0+255),b
 11241  012D6E  0E00               	movlw	0
 11242  012D70  6FA4               	movwf	(___fladd@b+2)& (0+255),b
 11243  012D72  0E00               	movlw	0
 11244  012D74  6FA5               	movwf	(___fladd@b+3)& (0+255),b
 11245                           
 11246                           ; BSR set to: 0
 11247  012D76  C0B3  F0B4         	movff	___fladd@aexp,___fladd@bexp
 11248  012D7A  D020               	goto	l1405
 11249  012D7C                     l1407:
 11250                           
 11251                           ; BSR set to: 0
 11252  012D7C  0100               	movlb	0	; () banked
 11253  012D7E  A1B5               	btfss	___fladd@grs& (0+255),0,b
 11254  012D80  D007               	goto	l7397
 11255                           
 11256                           ; BSR set to: 0
 11257  012D82  0100               	movlb	0	; () banked
 11258  012D84  90D8               	bcf	status,0,c
 11259  012D86  31B5               	rrcf	___fladd@grs& (0+255),w,b
 11260  012D88  0901               	iorlw	1
 11261  012D8A  0100               	movlb	0	; () banked
 11262  012D8C  6FB5               	movwf	___fladd@grs& (0+255),b
 11263  012D8E  D003               	goto	l7399
 11264  012D90                     l7397:
 11265                           
 11266                           ; BSR set to: 0
 11267  012D90  0100               	movlb	0	; () banked
 11268  012D92  90D8               	bcf	status,0,c
 11269  012D94  33B5               	rrcf	___fladd@grs& (0+255),f,b
 11270  012D96                     l7399:
 11271                           
 11272                           ; BSR set to: 0
 11273  012D96  0100               	movlb	0	; () banked
 11274  012D98  A1A2               	btfss	___fladd@b& (0+255),0,b
 11275  012D9A  D002               	goto	l7403
 11276                           
 11277                           ; BSR set to: 0
 11278  012D9C  0100               	movlb	0	; () banked
 11279  012D9E  8FB5               	bsf	___fladd@grs& (0+255),7,b
 11280  012DA0                     l7403:
 11281                           
 11282                           ; BSR set to: 0
 11283  012DA0  0100               	movlb	0	; () banked
 11284  012DA2  35A5               	rlcf	(___fladd@b+3)& (0+255),w,b
 11285  012DA4  33A5               	rrcf	(___fladd@b+3)& (0+255),f,b
 11286  012DA6  33A4               	rrcf	(___fladd@b+2)& (0+255),f,b
 11287  012DA8  33A3               	rrcf	(___fladd@b+1)& (0+255),f,b
 11288  012DAA  33A2               	rrcf	___fladd@b& (0+255),f,b
 11289                           
 11290                           ; BSR set to: 0
 11291  012DAC  0100               	movlb	0	; () banked
 11292  012DAE  2BB4               	incf	___fladd@bexp& (0+255),f,b
 11293  012DB0                     l1406:
 11294                           
 11295                           ; BSR set to: 0
 11296  012DB0  0100               	movlb	0	; () banked
 11297  012DB2  51B3               	movf	___fladd@aexp& (0+255),w,b
 11298  012DB4  0100               	movlb	0	; () banked
 11299  012DB6  5DB4               	subwf	___fladd@bexp& (0+255),w,b
 11300  012DB8  A0D8               	btfss	status,0,c
 11301  012DBA  D7E0               	goto	l1407
 11302  012DBC                     l1405:
 11303                           
 11304                           ; BSR set to: 0
 11305  012DBC  0100               	movlb	0	; () banked
 11306  012DBE  BDB2               	btfsc	___fladd@signs& (0+255),6,b
 11307  012DC0  D03F               	goto	l7431
 11308                           
 11309                           ; BSR set to: 0
 11310  012DC2  0100               	movlb	0	; () banked
 11311  012DC4  51B4               	movf	___fladd@bexp& (0+255),w,b
 11312  012DC6  0100               	movlb	0	; () banked
 11313  012DC8  A4D8               	btfss	status,2,c
 11314  012DCA  D00A               	goto	l7413
 11315                           
 11316                           ; BSR set to: 0
 11317  012DCC  0E00               	movlw	0
 11318  012DCE  0100               	movlb	0	; () banked
 11319  012DD0  6FA2               	movwf	?___fladd& (0+255),b
 11320  012DD2  0E00               	movlw	0
 11321  012DD4  6FA3               	movwf	(?___fladd+1)& (0+255),b
 11322  012DD6  0E00               	movlw	0
 11323  012DD8  6FA4               	movwf	(?___fladd+2)& (0+255),b
 11324  012DDA  0E00               	movlw	0
 11325  012DDC  6FA5               	movwf	(?___fladd+3)& (0+255),b
 11326                           
 11327                           ; BSR set to: 0
 11328  012DDE  0012               	return	
 11329  012DE0                     l7413:
 11330                           
 11331                           ; BSR set to: 0
 11332  012DE0  0100               	movlb	0	; () banked
 11333  012DE2  51A6               	movf	___fladd@a& (0+255),w,b
 11334  012DE4  0100               	movlb	0	; () banked
 11335  012DE6  27A2               	addwf	___fladd@b& (0+255),f,b
 11336  012DE8  0100               	movlb	0	; () banked
 11337  012DEA  51A7               	movf	(___fladd@a+1)& (0+255),w,b
 11338  012DEC  0100               	movlb	0	; () banked
 11339  012DEE  23A3               	addwfc	(___fladd@b+1)& (0+255),f,b
 11340  012DF0  0100               	movlb	0	; () banked
 11341  012DF2  51A8               	movf	(___fladd@a+2)& (0+255),w,b
 11342  012DF4  0100               	movlb	0	; () banked
 11343  012DF6  23A4               	addwfc	(___fladd@b+2)& (0+255),f,b
 11344  012DF8  0100               	movlb	0	; () banked
 11345  012DFA  51A9               	movf	(___fladd@a+3)& (0+255),w,b
 11346  012DFC  0100               	movlb	0	; () banked
 11347  012DFE  23A5               	addwfc	(___fladd@b+3)& (0+255),f,b
 11348                           
 11349                           ; BSR set to: 0
 11350  012E00  0100               	movlb	0	; () banked
 11351  012E02  A1A5               	btfss	(___fladd@b+3)& (0+255),0,b
 11352  012E04  D0CC               	goto	l7467
 11353                           
 11354                           ; BSR set to: 0
 11355  012E06  0100               	movlb	0	; () banked
 11356  012E08  A1B5               	btfss	___fladd@grs& (0+255),0,b
 11357  012E0A  D009               	goto	l7421
 11358                           
 11359                           ; BSR set to: 0
 11360  012E0C  0100               	movlb	0	; () banked
 11361  012E0E  90D8               	bcf	status,0,c
 11362  012E10  33B5               	rrcf	___fladd@grs& (0+255),f,b
 11363  012E12  0100               	movlb	0	; () banked
 11364  012E14  51B5               	movf	___fladd@grs& (0+255),w,b
 11365  012E16  0901               	iorlw	1
 11366  012E18  0100               	movlb	0	; () banked
 11367  012E1A  6FB5               	movwf	___fladd@grs& (0+255),b
 11368  012E1C  D003               	goto	l7423
 11369  012E1E                     l7421:
 11370                           
 11371                           ; BSR set to: 0
 11372  012E1E  0100               	movlb	0	; () banked
 11373  012E20  90D8               	bcf	status,0,c
 11374  012E22  33B5               	rrcf	___fladd@grs& (0+255),f,b
 11375  012E24                     l7423:
 11376                           
 11377                           ; BSR set to: 0
 11378  012E24  0100               	movlb	0	; () banked
 11379  012E26  A1A2               	btfss	___fladd@b& (0+255),0,b
 11380  012E28  D002               	goto	l7427
 11381                           
 11382                           ; BSR set to: 0
 11383  012E2A  0100               	movlb	0	; () banked
 11384  012E2C  8FB5               	bsf	___fladd@grs& (0+255),7,b
 11385  012E2E                     l7427:
 11386                           
 11387                           ; BSR set to: 0
 11388  012E2E  0100               	movlb	0	; () banked
 11389  012E30  35A5               	rlcf	(___fladd@b+3)& (0+255),w,b
 11390  012E32  33A5               	rrcf	(___fladd@b+3)& (0+255),f,b
 11391  012E34  33A4               	rrcf	(___fladd@b+2)& (0+255),f,b
 11392  012E36  33A3               	rrcf	(___fladd@b+1)& (0+255),f,b
 11393  012E38  33A2               	rrcf	___fladd@b& (0+255),f,b
 11394                           
 11395                           ; BSR set to: 0
 11396  012E3A  0100               	movlb	0	; () banked
 11397  012E3C  2BB4               	incf	___fladd@bexp& (0+255),f,b
 11398                           
 11399                           ; BSR set to: 0
 11400  012E3E  D0AF               	goto	l7467
 11401  012E40                     l7431:
 11402                           
 11403                           ; BSR set to: 0
 11404  012E40  0100               	movlb	0	; () banked
 11405  012E42  51A6               	movf	___fladd@a& (0+255),w,b
 11406  012E44  0100               	movlb	0	; () banked
 11407  012E46  5DA2               	subwf	___fladd@b& (0+255),w,b
 11408  012E48  0100               	movlb	0	; () banked
 11409  012E4A  51A7               	movf	(___fladd@a+1)& (0+255),w,b
 11410  012E4C  0100               	movlb	0	; () banked
 11411  012E4E  59A3               	subwfb	(___fladd@b+1)& (0+255),w,b
 11412  012E50  0100               	movlb	0	; () banked
 11413  012E52  51A8               	movf	(___fladd@a+2)& (0+255),w,b
 11414  012E54  0100               	movlb	0	; () banked
 11415  012E56  59A4               	subwfb	(___fladd@b+2)& (0+255),w,b
 11416  012E58  0100               	movlb	0	; () banked
 11417  012E5A  51A5               	movf	(___fladd@b+3)& (0+255),w,b
 11418  012E5C  0A80               	xorlw	128
 11419  012E5E  0100               	movlb	0	; () banked
 11420  012E60  6FAA               	movwf	??___fladd& (0+255),b
 11421  012E62  0100               	movlb	0	; () banked
 11422  012E64  51A9               	movf	(___fladd@a+3)& (0+255),w,b
 11423  012E66  0A80               	xorlw	128
 11424  012E68  0100               	movlb	0	; () banked
 11425  012E6A  59AA               	subwfb	??___fladd& (0+255),w,b
 11426  012E6C  B0D8               	btfsc	status,0,c
 11427  012E6E  D050               	goto	l7441
 11428                           
 11429                           ; BSR set to: 0
 11430  012E70  C0A2  F0AA         	movff	___fladd@b,??___fladd
 11431  012E74  C0A3  F0AB         	movff	___fladd@b+1,??___fladd+1
 11432  012E78  C0A4  F0AC         	movff	___fladd@b+2,??___fladd+2
 11433  012E7C  C0A5  F0AD         	movff	___fladd@b+3,??___fladd+3
 11434  012E80  0100               	movlb	0	; () banked
 11435  012E82  1FAA               	comf	??___fladd& (0+255),f,b
 11436  012E84  1FAB               	comf	(??___fladd+1)& (0+255),f,b
 11437  012E86  1FAC               	comf	(??___fladd+2)& (0+255),f,b
 11438  012E88  1FAD               	comf	(??___fladd+3)& (0+255),f,b
 11439  012E8A  2BAA               	incf	??___fladd& (0+255),f,b
 11440  012E8C  0E00               	movlw	0
 11441  012E8E  23AB               	addwfc	(??___fladd+1)& (0+255),f,b
 11442  012E90  23AC               	addwfc	(??___fladd+2)& (0+255),f,b
 11443  012E92  23AD               	addwfc	(??___fladd+3)& (0+255),f,b
 11444  012E94  0100               	movlb	0	; () banked
 11445  012E96  51A6               	movf	___fladd@a& (0+255),w,b
 11446  012E98  0100               	movlb	0	; () banked
 11447  012E9A  25AA               	addwf	??___fladd& (0+255),w,b
 11448  012E9C  0100               	movlb	0	; () banked
 11449  012E9E  6FAE               	movwf	(??___fladd+4)& (0+255),b
 11450  012EA0  0100               	movlb	0	; () banked
 11451  012EA2  51A7               	movf	(___fladd@a+1)& (0+255),w,b
 11452  012EA4  0100               	movlb	0	; () banked
 11453  012EA6  21AB               	addwfc	(??___fladd+1)& (0+255),w,b
 11454  012EA8  0100               	movlb	0	; () banked
 11455  012EAA  6FAF               	movwf	(??___fladd+5)& (0+255),b
 11456  012EAC  0100               	movlb	0	; () banked
 11457  012EAE  51A8               	movf	(___fladd@a+2)& (0+255),w,b
 11458  012EB0  0100               	movlb	0	; () banked
 11459  012EB2  21AC               	addwfc	(??___fladd+2)& (0+255),w,b
 11460  012EB4  0100               	movlb	0	; () banked
 11461  012EB6  6FB0               	movwf	(??___fladd+6)& (0+255),b
 11462  012EB8  0100               	movlb	0	; () banked
 11463  012EBA  51A9               	movf	(___fladd@a+3)& (0+255),w,b
 11464  012EBC  0100               	movlb	0	; () banked
 11465  012EBE  21AD               	addwfc	(??___fladd+3)& (0+255),w,b
 11466  012EC0  0100               	movlb	0	; () banked
 11467  012EC2  6FB1               	movwf	(??___fladd+7)& (0+255),b
 11468  012EC4  0EFF               	movlw	255
 11469  012EC6  0100               	movlb	0	; () banked
 11470  012EC8  25AE               	addwf	(??___fladd+4)& (0+255),w,b
 11471  012ECA  0100               	movlb	0	; () banked
 11472  012ECC  6FA2               	movwf	___fladd@b& (0+255),b
 11473  012ECE  0EFF               	movlw	255
 11474  012ED0  0100               	movlb	0	; () banked
 11475  012ED2  21AF               	addwfc	(??___fladd+5)& (0+255),w,b
 11476  012ED4  0100               	movlb	0	; () banked
 11477  012ED6  6FA3               	movwf	(___fladd@b+1)& (0+255),b
 11478  012ED8  0EFF               	movlw	255
 11479  012EDA  0100               	movlb	0	; () banked
 11480  012EDC  21B0               	addwfc	(??___fladd+6)& (0+255),w,b
 11481  012EDE  0100               	movlb	0	; () banked
 11482  012EE0  6FA4               	movwf	(___fladd@b+2)& (0+255),b
 11483  012EE2  0EFF               	movlw	255
 11484  012EE4  0100               	movlb	0	; () banked
 11485  012EE6  21B1               	addwfc	(??___fladd+7)& (0+255),w,b
 11486  012EE8  0100               	movlb	0	; () banked
 11487  012EEA  6FA5               	movwf	(___fladd@b+3)& (0+255),b
 11488  012EEC  0E80               	movlw	128
 11489  012EEE  0100               	movlb	0	; () banked
 11490  012EF0  1BB2               	xorwf	___fladd@signs& (0+255),f,b
 11491                           
 11492                           ; BSR set to: 0
 11493  012EF2  0100               	movlb	0	; () banked
 11494  012EF4  6DB5               	negf	___fladd@grs& (0+255),b
 11495                           
 11496                           ; BSR set to: 0
 11497  012EF6  0100               	movlb	0	; () banked
 11498  012EF8  51B5               	movf	___fladd@grs& (0+255),w,b
 11499  012EFA  0100               	movlb	0	; () banked
 11500  012EFC  A4D8               	btfss	status,2,c
 11501  012EFE  D018               	goto	l1422
 11502                           
 11503                           ; BSR set to: 0
 11504  012F00  0E01               	movlw	1
 11505  012F02  0100               	movlb	0	; () banked
 11506  012F04  27A2               	addwf	___fladd@b& (0+255),f,b
 11507  012F06  0E00               	movlw	0
 11508  012F08  23A3               	addwfc	(___fladd@b+1)& (0+255),f,b
 11509  012F0A  23A4               	addwfc	(___fladd@b+2)& (0+255),f,b
 11510  012F0C  23A5               	addwfc	(___fladd@b+3)& (0+255),f,b
 11511                           
 11512                           ; BSR set to: 0
 11513  012F0E  D010               	goto	l1422
 11514  012F10                     l7441:
 11515                           
 11516                           ; BSR set to: 0
 11517  012F10  0100               	movlb	0	; () banked
 11518  012F12  51A6               	movf	___fladd@a& (0+255),w,b
 11519  012F14  0100               	movlb	0	; () banked
 11520  012F16  5FA2               	subwf	___fladd@b& (0+255),f,b
 11521  012F18  0100               	movlb	0	; () banked
 11522  012F1A  51A7               	movf	(___fladd@a+1)& (0+255),w,b
 11523  012F1C  0100               	movlb	0	; () banked
 11524  012F1E  5BA3               	subwfb	(___fladd@b+1)& (0+255),f,b
 11525  012F20  0100               	movlb	0	; () banked
 11526  012F22  51A8               	movf	(___fladd@a+2)& (0+255),w,b
 11527  012F24  0100               	movlb	0	; () banked
 11528  012F26  5BA4               	subwfb	(___fladd@b+2)& (0+255),f,b
 11529  012F28  0100               	movlb	0	; () banked
 11530  012F2A  51A9               	movf	(___fladd@a+3)& (0+255),w,b
 11531  012F2C  0100               	movlb	0	; () banked
 11532  012F2E  5BA5               	subwfb	(___fladd@b+3)& (0+255),f,b
 11533  012F30                     l1422:
 11534                           
 11535                           ; BSR set to: 0
 11536  012F30  0100               	movlb	0	; () banked
 11537  012F32  51A2               	movf	___fladd@b& (0+255),w,b
 11538  012F34  0100               	movlb	0	; () banked
 11539  012F36  11A3               	iorwf	(___fladd@b+1)& (0+255),w,b
 11540  012F38  0100               	movlb	0	; () banked
 11541  012F3A  11A4               	iorwf	(___fladd@b+2)& (0+255),w,b
 11542  012F3C  0100               	movlb	0	; () banked
 11543  012F3E  11A5               	iorwf	(___fladd@b+3)& (0+255),w,b
 11544  012F40  A4D8               	btfss	status,2,c
 11545  012F42  D02A               	goto	l7465
 11546                           
 11547                           ; BSR set to: 0
 11548  012F44  0100               	movlb	0	; () banked
 11549  012F46  51B5               	movf	___fladd@grs& (0+255),w,b
 11550  012F48  0100               	movlb	0	; () banked
 11551  012F4A  A4D8               	btfss	status,2,c
 11552  012F4C  D025               	goto	l7465
 11553                           
 11554                           ; BSR set to: 0
 11555  012F4E  0E00               	movlw	0
 11556  012F50  0100               	movlb	0	; () banked
 11557  012F52  6FA2               	movwf	?___fladd& (0+255),b
 11558  012F54  0E00               	movlw	0
 11559  012F56  6FA3               	movwf	(?___fladd+1)& (0+255),b
 11560  012F58  0E00               	movlw	0
 11561  012F5A  6FA4               	movwf	(?___fladd+2)& (0+255),b
 11562  012F5C  0E00               	movlw	0
 11563  012F5E  6FA5               	movwf	(?___fladd+3)& (0+255),b
 11564                           
 11565                           ; BSR set to: 0
 11566  012F60  0012               	return	
 11567  012F62                     l7449:
 11568                           
 11569                           ; BSR set to: 0
 11570  012F62  0100               	movlb	0	; () banked
 11571  012F64  90D8               	bcf	status,0,c
 11572  012F66  37A2               	rlcf	___fladd@b& (0+255),f,b
 11573  012F68  37A3               	rlcf	(___fladd@b+1)& (0+255),f,b
 11574  012F6A  37A4               	rlcf	(___fladd@b+2)& (0+255),f,b
 11575  012F6C  37A5               	rlcf	(___fladd@b+3)& (0+255),f,b
 11576                           
 11577                           ; BSR set to: 0
 11578  012F6E  0100               	movlb	0	; () banked
 11579  012F70  AFB5               	btfss	___fladd@grs& (0+255),7,b
 11580  012F72  D002               	goto	l7455
 11581                           
 11582                           ; BSR set to: 0
 11583  012F74  0100               	movlb	0	; () banked
 11584  012F76  81A2               	bsf	___fladd@b& (0+255),0,b
 11585  012F78                     l7455:
 11586                           
 11587                           ; BSR set to: 0
 11588  012F78  0100               	movlb	0	; () banked
 11589  012F7A  A1B5               	btfss	___fladd@grs& (0+255),0,b
 11590  012F7C  D003               	goto	l7459
 11591                           
 11592                           ; BSR set to: 0
 11593  012F7E  80D8               	bsf	status,0,c
 11594  012F80  0100               	movlb	0	; () banked
 11595  012F82  D002               	goto	L11
 11596  012F84                     l7459:
 11597                           
 11598                           ; BSR set to: 0
 11599  012F84  0100               	movlb	0	; () banked
 11600  012F86  90D8               	bcf	status,0,c
 11601  012F88                     L11:
 11602  012F88  37B5               	rlcf	___fladd@grs& (0+255),f,b
 11603                           
 11604                           ; BSR set to: 0
 11605                           
 11606                           ; BSR set to: 0
 11607  012F8A  0100               	movlb	0	; () banked
 11608  012F8C  51B4               	movf	___fladd@bexp& (0+255),w,b
 11609  012F8E  0100               	movlb	0	; () banked
 11610  012F90  B4D8               	btfsc	status,2,c
 11611  012F92  D002               	goto	l7465
 11612                           
 11613                           ; BSR set to: 0
 11614  012F94  0100               	movlb	0	; () banked
 11615  012F96  07B4               	decf	___fladd@bexp& (0+255),f,b
 11616  012F98                     l7465:
 11617                           
 11618                           ; BSR set to: 0
 11619  012F98  0100               	movlb	0	; () banked
 11620  012F9A  AFA4               	btfss	(___fladd@b+2)& (0+255),7,b
 11621  012F9C  D7E2               	goto	l7449
 11622  012F9E                     l7467:
 11623                           
 11624                           ; BSR set to: 0
 11625  012F9E  0E00               	movlw	0
 11626  012FA0  0100               	movlb	0	; () banked
 11627  012FA2  6FB3               	movwf	___fladd@aexp& (0+255),b
 11628                           
 11629                           ; BSR set to: 0
 11630  012FA4  0100               	movlb	0	; () banked
 11631  012FA6  AFB5               	btfss	___fladd@grs& (0+255),7,b
 11632  012FA8  D00D               	goto	l1431
 11633                           
 11634                           ; BSR set to: 0
 11635  012FAA  C0B5  F0AA         	movff	___fladd@grs,??___fladd
 11636  012FAE  0E7F               	movlw	127
 11637  012FB0  0100               	movlb	0	; () banked
 11638  012FB2  17AA               	andwf	??___fladd& (0+255),f,b
 11639  012FB4  A4D8               	btfss	status,2,c
 11640  012FB6  D003               	goto	l7475
 11641                           
 11642                           ; BSR set to: 0
 11643                           
 11644                           ; BSR set to: 0
 11645  012FB8  0100               	movlb	0	; () banked
 11646  012FBA  A1A2               	btfss	___fladd@b& (0+255),0,b
 11647  012FBC  D003               	goto	l1431
 11648  012FBE                     l7475:
 11649                           
 11650                           ; BSR set to: 0
 11651  012FBE  0E01               	movlw	1
 11652  012FC0  0100               	movlb	0	; () banked
 11653  012FC2  6FB3               	movwf	___fladd@aexp& (0+255),b
 11654  012FC4                     l1431:
 11655                           
 11656                           ; BSR set to: 0
 11657  012FC4  0100               	movlb	0	; () banked
 11658  012FC6  51B3               	movf	___fladd@aexp& (0+255),w,b
 11659  012FC8  0100               	movlb	0	; () banked
 11660  012FCA  B4D8               	btfsc	status,2,c
 11661  012FCC  D026               	goto	l7485
 11662                           
 11663                           ; BSR set to: 0
 11664  012FCE  0E01               	movlw	1
 11665  012FD0  0100               	movlb	0	; () banked
 11666  012FD2  27A2               	addwf	___fladd@b& (0+255),f,b
 11667  012FD4  0E00               	movlw	0
 11668  012FD6  23A3               	addwfc	(___fladd@b+1)& (0+255),f,b
 11669  012FD8  23A4               	addwfc	(___fladd@b+2)& (0+255),f,b
 11670  012FDA  23A5               	addwfc	(___fladd@b+3)& (0+255),f,b
 11671                           
 11672                           ; BSR set to: 0
 11673  012FDC  0100               	movlb	0	; () banked
 11674  012FDE  A1A5               	btfss	(___fladd@b+3)& (0+255),0,b
 11675  012FE0  D01C               	goto	l7485
 11676                           
 11677                           ; BSR set to: 0
 11678  012FE2  C0A2  F0AA         	movff	___fladd@b,??___fladd
 11679  012FE6  C0A3  F0AB         	movff	___fladd@b+1,??___fladd+1
 11680  012FEA  C0A4  F0AC         	movff	___fladd@b+2,??___fladd+2
 11681  012FEE  C0A5  F0AD         	movff	___fladd@b+3,??___fladd+3
 11682  012FF2  0100               	movlb	0	; () banked
 11683  012FF4  35AD               	rlcf	(??___fladd+3)& (0+255),w,b
 11684  012FF6  33AD               	rrcf	(??___fladd+3)& (0+255),f,b
 11685  012FF8  33AC               	rrcf	(??___fladd+2)& (0+255),f,b
 11686  012FFA  33AB               	rrcf	(??___fladd+1)& (0+255),f,b
 11687  012FFC  33AA               	rrcf	??___fladd& (0+255),f,b
 11688  012FFE  C0AA  F0A2         	movff	??___fladd,___fladd@b
 11689  013002  C0AB  F0A3         	movff	??___fladd+1,___fladd@b+1
 11690  013006  C0AC  F0A4         	movff	??___fladd+2,___fladd@b+2
 11691  01300A  C0AD  F0A5         	movff	??___fladd+3,___fladd@b+3
 11692  01300E  0100               	movlb	0	; () banked
 11693  013010  29B4               	incf	___fladd@bexp& (0+255),w,b
 11694  013012  B4D8               	btfsc	status,2,c
 11695  013014  D002               	goto	l7485
 11696                           
 11697                           ; BSR set to: 0
 11698  013016  0100               	movlb	0	; () banked
 11699  013018  2BB4               	incf	___fladd@bexp& (0+255),f,b
 11700  01301A                     l7485:
 11701                           
 11702                           ; BSR set to: 0
 11703  01301A  0100               	movlb	0	; () banked
 11704  01301C  29B4               	incf	___fladd@bexp& (0+255),w,b
 11705  01301E  B4D8               	btfsc	status,2,c
 11706  013020  D005               	goto	l7489
 11707                           
 11708                           ; BSR set to: 0
 11709  013022  0100               	movlb	0	; () banked
 11710  013024  51B4               	movf	___fladd@bexp& (0+255),w,b
 11711  013026  0100               	movlb	0	; () banked
 11712  013028  A4D8               	btfss	status,2,c
 11713  01302A  D011               	goto	l7493
 11714  01302C                     l7489:
 11715                           
 11716                           ; BSR set to: 0
 11717  01302C  0E00               	movlw	0
 11718  01302E  0100               	movlb	0	; () banked
 11719  013030  6FA2               	movwf	___fladd@b& (0+255),b
 11720  013032  0E00               	movlw	0
 11721  013034  6FA3               	movwf	(___fladd@b+1)& (0+255),b
 11722  013036  0E00               	movlw	0
 11723  013038  6FA4               	movwf	(___fladd@b+2)& (0+255),b
 11724  01303A  0E00               	movlw	0
 11725  01303C  6FA5               	movwf	(___fladd@b+3)& (0+255),b
 11726  01303E  0100               	movlb	0	; () banked
 11727  013040  51B4               	movf	___fladd@bexp& (0+255),w,b
 11728  013042  0100               	movlb	0	; () banked
 11729  013044  A4D8               	btfss	status,2,c
 11730  013046  D003               	goto	l7493
 11731                           
 11732                           ; BSR set to: 0
 11733  013048  0E00               	movlw	0
 11734  01304A  0100               	movlb	0	; () banked
 11735  01304C  6FB2               	movwf	___fladd@signs& (0+255),b
 11736  01304E                     l7493:
 11737                           
 11738                           ; BSR set to: 0
 11739  01304E  0100               	movlb	0	; () banked
 11740  013050  A1B4               	btfss	___fladd@bexp& (0+255),0,b
 11741  013052  D003               	goto	l7497
 11742                           
 11743                           ; BSR set to: 0
 11744  013054  0100               	movlb	0	; () banked
 11745  013056  8FA4               	bsf	(___fladd@b+2)& (0+255),7,b
 11746  013058  D002               	goto	l7499
 11747  01305A                     l7497:
 11748                           
 11749                           ; BSR set to: 0
 11750  01305A  0100               	movlb	0	; () banked
 11751  01305C  9FA4               	bcf	(___fladd@b+2)& (0+255),7,b
 11752  01305E                     l7499:
 11753                           
 11754                           ; BSR set to: 0
 11755  01305E  0100               	movlb	0	; () banked
 11756  013060  90D8               	bcf	status,0,c
 11757  013062  31B4               	rrcf	___fladd@bexp& (0+255),w,b
 11758  013064  0100               	movlb	0	; () banked
 11759  013066  6FA5               	movwf	(___fladd@b+3)& (0+255),b
 11760                           
 11761                           ; BSR set to: 0
 11762  013068  0100               	movlb	0	; () banked
 11763  01306A  AFB2               	btfss	___fladd@signs& (0+255),7,b
 11764  01306C  D002               	goto	l7505
 11765                           
 11766                           ; BSR set to: 0
 11767  01306E  0100               	movlb	0	; () banked
 11768  013070  8FA5               	bsf	(___fladd@b+3)& (0+255),7,b
 11769  013072                     l7505:
 11770                           
 11771                           ; BSR set to: 0
 11772  013072  C0A2  F0A2         	movff	___fladd@b,?___fladd
 11773  013076  C0A3  F0A3         	movff	___fladd@b+1,?___fladd+1
 11774  01307A  C0A4  F0A4         	movff	___fladd@b+2,?___fladd+2
 11775  01307E  C0A5  F0A5         	movff	___fladd@b+3,?___fladd+3
 11776  013082  0012               	return	
 11777  013084                     __end_of___fladd:
 11778                           	opt stack 0
 11779                           tblptru	equ	0xFF8
 11780                           tblptrh	equ	0xFF7
 11781                           tblptrl	equ	0xFF6
 11782                           tablat	equ	0xFF5
 11783                           prodh	equ	0xFF4
 11784                           prodl	equ	0xFF3
 11785                           intcon	equ	0xFF2
 11786                           postinc0	equ	0xFEE
 11787                           wreg	equ	0xFE8
 11788                           indf2	equ	0xFDF
 11789                           postinc2	equ	0xFDE
 11790                           fsr2h	equ	0xFDA
 11791                           fsr2l	equ	0xFD9
 11792                           status	equ	0xFD8
 11793                           
 11794 ;; *************** function ___flneg *****************
 11795 ;; Defined at:
 11796 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
 11797 ;; Parameters:    Size  Location     Type
 11798 ;;  f1              4   14[BANK0 ] unsigned char 
 11799 ;; Auto vars:     Size  Location     Type
 11800 ;;		None
 11801 ;; Return value:  Size  Location     Type
 11802 ;;                  4   14[BANK0 ] unsigned char 
 11803 ;; Registers used:
 11804 ;;		wreg, status,2, status,0
 11805 ;; Tracked objects:
 11806 ;;		On entry : 0/0
 11807 ;;		On exit  : 0/0
 11808 ;;		Unchanged: 0/0
 11809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11810 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11813 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11814 ;;Total ram usage:        4 bytes
 11815 ;; Hardware stack levels used:    1
 11816 ;; Hardware stack levels required when called:    3
 11817 ;; This function calls:
 11818 ;;		Nothing
 11819 ;; This function is called by:
 11820 ;;		_sprintf
 11821 ;; This function uses a non-reentrant model
 11822 ;;
 11823                           
 11824                           	psect	text23
 11825  015C72                     __ptext23:
 11826                           	opt stack 0
 11827  015C72                     ___flneg:
 11828                           	opt stack 25
 11829                           
 11830                           ; BSR set to: 0
 11831                           ;incstack = 0
 11832  015C72  0100               	movlb	0	; () banked
 11833  015C74  516E               	movf	___flneg@f1& (0+255),w,b
 11834  015C76  0100               	movlb	0	; () banked
 11835  015C78  116F               	iorwf	(___flneg@f1+1)& (0+255),w,b
 11836  015C7A  0100               	movlb	0	; () banked
 11837  015C7C  1170               	iorwf	(___flneg@f1+2)& (0+255),w,b
 11838  015C7E  0100               	movlb	0	; () banked
 11839  015C80  1171               	iorwf	(___flneg@f1+3)& (0+255),w,b
 11840  015C82  B4D8               	btfsc	status,2,c
 11841  015C84  D009               	goto	l7951
 11842                           
 11843                           ; BSR set to: 0
 11844  015C86  0E00               	movlw	0
 11845  015C88  0100               	movlb	0	; () banked
 11846  015C8A  1B6E               	xorwf	___flneg@f1& (0+255),f,b
 11847  015C8C  0E00               	movlw	0
 11848  015C8E  1B6F               	xorwf	(___flneg@f1+1)& (0+255),f,b
 11849  015C90  0E00               	movlw	0
 11850  015C92  1B70               	xorwf	(___flneg@f1+2)& (0+255),f,b
 11851  015C94  0E80               	movlw	128
 11852  015C96  1B71               	xorwf	(___flneg@f1+3)& (0+255),f,b
 11853  015C98                     l7951:
 11854                           
 11855                           ; BSR set to: 0
 11856  015C98  C06E  F06E         	movff	___flneg@f1,?___flneg
 11857  015C9C  C06F  F06F         	movff	___flneg@f1+1,?___flneg+1
 11858  015CA0  C070  F070         	movff	___flneg@f1+2,?___flneg+2
 11859  015CA4  C071  F071         	movff	___flneg@f1+3,?___flneg+3
 11860  015CA8  0012               	return	
 11861  015CAA                     __end_of___flneg:
 11862                           	opt stack 0
 11863                           tblptru	equ	0xFF8
 11864                           tblptrh	equ	0xFF7
 11865                           tblptrl	equ	0xFF6
 11866                           tablat	equ	0xFF5
 11867                           prodh	equ	0xFF4
 11868                           prodl	equ	0xFF3
 11869                           intcon	equ	0xFF2
 11870                           postinc0	equ	0xFEE
 11871                           wreg	equ	0xFE8
 11872                           indf2	equ	0xFDF
 11873                           postinc2	equ	0xFDE
 11874                           fsr2h	equ	0xFDA
 11875                           fsr2l	equ	0xFD9
 11876                           status	equ	0xFD8
 11877                           
 11878 ;; *************** function ___flge *****************
 11879 ;; Defined at:
 11880 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
 11881 ;; Parameters:    Size  Location     Type
 11882 ;;  ff1             4   14[BANK0 ] unsigned char 
 11883 ;;  ff2             4   18[BANK0 ] unsigned char 
 11884 ;; Auto vars:     Size  Location     Type
 11885 ;;		None
 11886 ;; Return value:  Size  Location     Type
 11887 ;;		None               void
 11888 ;; Registers used:
 11889 ;;		wreg, status,2, status,0
 11890 ;; Tracked objects:
 11891 ;;		On entry : 0/0
 11892 ;;		On exit  : 0/0
 11893 ;;		Unchanged: 0/0
 11894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11895 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11897 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11898 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11899 ;;Total ram usage:       12 bytes
 11900 ;; Hardware stack levels used:    1
 11901 ;; Hardware stack levels required when called:    3
 11902 ;; This function calls:
 11903 ;;		Nothing
 11904 ;; This function is called by:
 11905 ;;		_sprintf
 11906 ;; This function uses a non-reentrant model
 11907 ;;
 11908                           
 11909                           	psect	text24
 11910  014A66                     __ptext24:
 11911                           	opt stack 0
 11912  014A66                     ___flge:
 11913                           	opt stack 25
 11914                           
 11915                           ; BSR set to: 0
 11916                           ;incstack = 0
 11917  014A66  0E00               	movlw	0
 11918  014A68  0100               	movlb	0	; () banked
 11919  014A6A  156E               	andwf	___flge@ff1& (0+255),w,b
 11920  014A6C  0100               	movlb	0	; () banked
 11921  014A6E  6F76               	movwf	??___flge& (0+255),b
 11922  014A70  0E00               	movlw	0
 11923  014A72  0100               	movlb	0	; () banked
 11924  014A74  156F               	andwf	(___flge@ff1+1)& (0+255),w,b
 11925  014A76  0100               	movlb	0	; () banked
 11926  014A78  6F77               	movwf	(??___flge+1)& (0+255),b
 11927  014A7A  0E80               	movlw	128
 11928  014A7C  0100               	movlb	0	; () banked
 11929  014A7E  1570               	andwf	(___flge@ff1+2)& (0+255),w,b
 11930  014A80  0100               	movlb	0	; () banked
 11931  014A82  6F78               	movwf	(??___flge+2)& (0+255),b
 11932  014A84  0E7F               	movlw	127
 11933  014A86  0100               	movlb	0	; () banked
 11934  014A88  1571               	andwf	(___flge@ff1+3)& (0+255),w,b
 11935  014A8A  0100               	movlb	0	; () banked
 11936  014A8C  6F79               	movwf	(??___flge+3)& (0+255),b
 11937  014A8E  0100               	movlb	0	; () banked
 11938  014A90  5176               	movf	??___flge& (0+255),w,b
 11939  014A92  0100               	movlb	0	; () banked
 11940  014A94  1177               	iorwf	(??___flge+1)& (0+255),w,b
 11941  014A96  0100               	movlb	0	; () banked
 11942  014A98  1178               	iorwf	(??___flge+2)& (0+255),w,b
 11943  014A9A  0100               	movlb	0	; () banked
 11944  014A9C  1179               	iorwf	(??___flge+3)& (0+255),w,b
 11945  014A9E  A4D8               	btfss	status,2,c
 11946  014AA0  D009               	goto	l7929
 11947                           
 11948                           ; BSR set to: 0
 11949  014AA2  0E00               	movlw	0
 11950  014AA4  0100               	movlb	0	; () banked
 11951  014AA6  6F6E               	movwf	___flge@ff1& (0+255),b
 11952  014AA8  0E00               	movlw	0
 11953  014AAA  6F6F               	movwf	(___flge@ff1+1)& (0+255),b
 11954  014AAC  0E00               	movlw	0
 11955  014AAE  6F70               	movwf	(___flge@ff1+2)& (0+255),b
 11956  014AB0  0E00               	movlw	0
 11957  014AB2  6F71               	movwf	(___flge@ff1+3)& (0+255),b
 11958  014AB4                     l7929:
 11959                           
 11960                           ; BSR set to: 0
 11961  014AB4  0E00               	movlw	0
 11962  014AB6  0100               	movlb	0	; () banked
 11963  014AB8  1572               	andwf	___flge@ff2& (0+255),w,b
 11964  014ABA  0100               	movlb	0	; () banked
 11965  014ABC  6F76               	movwf	??___flge& (0+255),b
 11966  014ABE  0E00               	movlw	0
 11967  014AC0  0100               	movlb	0	; () banked
 11968  014AC2  1573               	andwf	(___flge@ff2+1)& (0+255),w,b
 11969  014AC4  0100               	movlb	0	; () banked
 11970  014AC6  6F77               	movwf	(??___flge+1)& (0+255),b
 11971  014AC8  0E80               	movlw	128
 11972  014ACA  0100               	movlb	0	; () banked
 11973  014ACC  1574               	andwf	(___flge@ff2+2)& (0+255),w,b
 11974  014ACE  0100               	movlb	0	; () banked
 11975  014AD0  6F78               	movwf	(??___flge+2)& (0+255),b
 11976  014AD2  0E7F               	movlw	127
 11977  014AD4  0100               	movlb	0	; () banked
 11978  014AD6  1575               	andwf	(___flge@ff2+3)& (0+255),w,b
 11979  014AD8  0100               	movlb	0	; () banked
 11980  014ADA  6F79               	movwf	(??___flge+3)& (0+255),b
 11981  014ADC  0100               	movlb	0	; () banked
 11982  014ADE  5176               	movf	??___flge& (0+255),w,b
 11983  014AE0  0100               	movlb	0	; () banked
 11984  014AE2  1177               	iorwf	(??___flge+1)& (0+255),w,b
 11985  014AE4  0100               	movlb	0	; () banked
 11986  014AE6  1178               	iorwf	(??___flge+2)& (0+255),w,b
 11987  014AE8  0100               	movlb	0	; () banked
 11988  014AEA  1179               	iorwf	(??___flge+3)& (0+255),w,b
 11989  014AEC  A4D8               	btfss	status,2,c
 11990  014AEE  D009               	goto	l7933
 11991                           
 11992                           ; BSR set to: 0
 11993  014AF0  0E00               	movlw	0
 11994  014AF2  0100               	movlb	0	; () banked
 11995  014AF4  6F72               	movwf	___flge@ff2& (0+255),b
 11996  014AF6  0E00               	movlw	0
 11997  014AF8  6F73               	movwf	(___flge@ff2+1)& (0+255),b
 11998  014AFA  0E00               	movlw	0
 11999  014AFC  6F74               	movwf	(___flge@ff2+2)& (0+255),b
 12000  014AFE  0E00               	movlw	0
 12001  014B00  6F75               	movwf	(___flge@ff2+3)& (0+255),b
 12002  014B02                     l7933:
 12003                           
 12004                           ; BSR set to: 0
 12005  014B02  0100               	movlb	0	; () banked
 12006  014B04  AF71               	btfss	(___flge@ff1+3)& (0+255),7,b
 12007  014B06  D026               	goto	l7937
 12008                           
 12009                           ; BSR set to: 0
 12010  014B08  C06E  F076         	movff	___flge@ff1,??___flge
 12011  014B0C  C06F  F077         	movff	___flge@ff1+1,??___flge+1
 12012  014B10  C070  F078         	movff	___flge@ff1+2,??___flge+2
 12013  014B14  C071  F079         	movff	___flge@ff1+3,??___flge+3
 12014  014B18  0100               	movlb	0	; () banked
 12015  014B1A  1F76               	comf	??___flge& (0+255),f,b
 12016  014B1C  1F77               	comf	(??___flge+1)& (0+255),f,b
 12017  014B1E  1F78               	comf	(??___flge+2)& (0+255),f,b
 12018  014B20  1F79               	comf	(??___flge+3)& (0+255),f,b
 12019  014B22  2B76               	incf	??___flge& (0+255),f,b
 12020  014B24  0E00               	movlw	0
 12021  014B26  2377               	addwfc	(??___flge+1)& (0+255),f,b
 12022  014B28  2378               	addwfc	(??___flge+2)& (0+255),f,b
 12023  014B2A  2379               	addwfc	(??___flge+3)& (0+255),f,b
 12024  014B2C  0E00               	movlw	0
 12025  014B2E  0100               	movlb	0	; () banked
 12026  014B30  2576               	addwf	??___flge& (0+255),w,b
 12027  014B32  0100               	movlb	0	; () banked
 12028  014B34  6F6E               	movwf	___flge@ff1& (0+255),b
 12029  014B36  0E00               	movlw	0
 12030  014B38  0100               	movlb	0	; () banked
 12031  014B3A  2177               	addwfc	(??___flge+1)& (0+255),w,b
 12032  014B3C  0100               	movlb	0	; () banked
 12033  014B3E  6F6F               	movwf	(___flge@ff1+1)& (0+255),b
 12034  014B40  0E00               	movlw	0
 12035  014B42  0100               	movlb	0	; () banked
 12036  014B44  2178               	addwfc	(??___flge+2)& (0+255),w,b
 12037  014B46  0100               	movlb	0	; () banked
 12038  014B48  6F70               	movwf	(___flge@ff1+2)& (0+255),b
 12039  014B4A  0E80               	movlw	128
 12040  014B4C  0100               	movlb	0	; () banked
 12041  014B4E  2179               	addwfc	(??___flge+3)& (0+255),w,b
 12042  014B50  0100               	movlb	0	; () banked
 12043  014B52  6F71               	movwf	(___flge@ff1+3)& (0+255),b
 12044  014B54                     l7937:
 12045                           
 12046                           ; BSR set to: 0
 12047  014B54  0100               	movlb	0	; () banked
 12048  014B56  AF75               	btfss	(___flge@ff2+3)& (0+255),7,b
 12049  014B58  D026               	goto	l1128
 12050                           
 12051                           ; BSR set to: 0
 12052  014B5A  C072  F076         	movff	___flge@ff2,??___flge
 12053  014B5E  C073  F077         	movff	___flge@ff2+1,??___flge+1
 12054  014B62  C074  F078         	movff	___flge@ff2+2,??___flge+2
 12055  014B66  C075  F079         	movff	___flge@ff2+3,??___flge+3
 12056  014B6A  0100               	movlb	0	; () banked
 12057  014B6C  1F76               	comf	??___flge& (0+255),f,b
 12058  014B6E  1F77               	comf	(??___flge+1)& (0+255),f,b
 12059  014B70  1F78               	comf	(??___flge+2)& (0+255),f,b
 12060  014B72  1F79               	comf	(??___flge+3)& (0+255),f,b
 12061  014B74  2B76               	incf	??___flge& (0+255),f,b
 12062  014B76  0E00               	movlw	0
 12063  014B78  2377               	addwfc	(??___flge+1)& (0+255),f,b
 12064  014B7A  2378               	addwfc	(??___flge+2)& (0+255),f,b
 12065  014B7C  2379               	addwfc	(??___flge+3)& (0+255),f,b
 12066  014B7E  0E00               	movlw	0
 12067  014B80  0100               	movlb	0	; () banked
 12068  014B82  2576               	addwf	??___flge& (0+255),w,b
 12069  014B84  0100               	movlb	0	; () banked
 12070  014B86  6F72               	movwf	___flge@ff2& (0+255),b
 12071  014B88  0E00               	movlw	0
 12072  014B8A  0100               	movlb	0	; () banked
 12073  014B8C  2177               	addwfc	(??___flge+1)& (0+255),w,b
 12074  014B8E  0100               	movlb	0	; () banked
 12075  014B90  6F73               	movwf	(___flge@ff2+1)& (0+255),b
 12076  014B92  0E00               	movlw	0
 12077  014B94  0100               	movlb	0	; () banked
 12078  014B96  2178               	addwfc	(??___flge+2)& (0+255),w,b
 12079  014B98  0100               	movlb	0	; () banked
 12080  014B9A  6F74               	movwf	(___flge@ff2+2)& (0+255),b
 12081  014B9C  0E80               	movlw	128
 12082  014B9E  0100               	movlb	0	; () banked
 12083  014BA0  2179               	addwfc	(??___flge+3)& (0+255),w,b
 12084  014BA2  0100               	movlb	0	; () banked
 12085  014BA4  6F75               	movwf	(___flge@ff2+3)& (0+255),b
 12086  014BA6                     l1128:
 12087                           
 12088                           ; BSR set to: 0
 12089  014BA6  0E00               	movlw	0
 12090  014BA8  0100               	movlb	0	; () banked
 12091  014BAA  1B6E               	xorwf	___flge@ff1& (0+255),f,b
 12092  014BAC  0E00               	movlw	0
 12093  014BAE  1B6F               	xorwf	(___flge@ff1+1)& (0+255),f,b
 12094  014BB0  0E00               	movlw	0
 12095  014BB2  1B70               	xorwf	(___flge@ff1+2)& (0+255),f,b
 12096  014BB4  0E80               	movlw	128
 12097  014BB6  1B71               	xorwf	(___flge@ff1+3)& (0+255),f,b
 12098  014BB8  0E00               	movlw	0
 12099  014BBA  0100               	movlb	0	; () banked
 12100  014BBC  1B72               	xorwf	___flge@ff2& (0+255),f,b
 12101  014BBE  0E00               	movlw	0
 12102  014BC0  1B73               	xorwf	(___flge@ff2+1)& (0+255),f,b
 12103  014BC2  0E00               	movlw	0
 12104  014BC4  1B74               	xorwf	(___flge@ff2+2)& (0+255),f,b
 12105  014BC6  0E80               	movlw	128
 12106  014BC8  1B75               	xorwf	(___flge@ff2+3)& (0+255),f,b
 12107  014BCA  0100               	movlb	0	; () banked
 12108  014BCC  5172               	movf	___flge@ff2& (0+255),w,b
 12109  014BCE  0100               	movlb	0	; () banked
 12110  014BD0  5D6E               	subwf	___flge@ff1& (0+255),w,b
 12111  014BD2  0100               	movlb	0	; () banked
 12112  014BD4  5173               	movf	(___flge@ff2+1)& (0+255),w,b
 12113  014BD6  0100               	movlb	0	; () banked
 12114  014BD8  596F               	subwfb	(___flge@ff1+1)& (0+255),w,b
 12115  014BDA  0100               	movlb	0	; () banked
 12116  014BDC  5174               	movf	(___flge@ff2+2)& (0+255),w,b
 12117  014BDE  0100               	movlb	0	; () banked
 12118  014BE0  5970               	subwfb	(___flge@ff1+2)& (0+255),w,b
 12119  014BE2  0100               	movlb	0	; () banked
 12120  014BE4  5175               	movf	(___flge@ff2+3)& (0+255),w,b
 12121  014BE6  0100               	movlb	0	; () banked
 12122  014BE8  5971               	subwfb	(___flge@ff1+3)& (0+255),w,b
 12123  014BEA  B0D8               	btfsc	status,0,c
 12124  014BEC  D002               	goto	l7943
 12125                           
 12126                           ; BSR set to: 0
 12127  014BEE  90D8               	bcf	status,0,c
 12128  014BF0  0012               	return	
 12129  014BF2                     l7943:
 12130                           
 12131                           ; BSR set to: 0
 12132  014BF2  80D8               	bsf	status,0,c
 12133                           
 12134                           ; BSR set to: 0
 12135  014BF4  0012               	return	
 12136  014BF6                     __end_of___flge:
 12137                           	opt stack 0
 12138                           tblptru	equ	0xFF8
 12139                           tblptrh	equ	0xFF7
 12140                           tblptrl	equ	0xFF6
 12141                           tablat	equ	0xFF5
 12142                           prodh	equ	0xFF4
 12143                           prodl	equ	0xFF3
 12144                           intcon	equ	0xFF2
 12145                           postinc0	equ	0xFEE
 12146                           wreg	equ	0xFE8
 12147                           indf2	equ	0xFDF
 12148                           postinc2	equ	0xFDE
 12149                           fsr2h	equ	0xFDA
 12150                           fsr2l	equ	0xFD9
 12151                           status	equ	0xFD8
 12152                           
 12153 ;; *************** function ___fldiv *****************
 12154 ;; Defined at:
 12155 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
 12156 ;; Parameters:    Size  Location     Type
 12157 ;;  b               4   28[BANK0 ] unsigned char 
 12158 ;;  a               4   32[BANK0 ] unsigned char 
 12159 ;; Auto vars:     Size  Location     Type
 12160 ;;  grs             4   47[BANK0 ] unsigned long 
 12161 ;;  rem             4   41[BANK0 ] unsigned long 
 12162 ;;  new_exp         2   45[BANK0 ] int 
 12163 ;;  aexp            1   52[BANK0 ] unsigned char 
 12164 ;;  bexp            1   51[BANK0 ] unsigned char 
 12165 ;;  sign            1   40[BANK0 ] unsigned char 
 12166 ;; Return value:  Size  Location     Type
 12167 ;;                  4   28[BANK0 ] unsigned char 
 12168 ;; Registers used:
 12169 ;;		wreg, status,2, status,0
 12170 ;; Tracked objects:
 12171 ;;		On entry : 0/0
 12172 ;;		On exit  : 0/0
 12173 ;;		Unchanged: 0/0
 12174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12175 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12176 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12177 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12178 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12179 ;;Total ram usage:       25 bytes
 12180 ;; Hardware stack levels used:    1
 12181 ;; Hardware stack levels required when called:    3
 12182 ;; This function calls:
 12183 ;;		Nothing
 12184 ;; This function is called by:
 12185 ;;		_LCD_Handler
 12186 ;; This function uses a non-reentrant model
 12187 ;;
 12188                           
 12189                           	psect	text25
 12190  013920                     __ptext25:
 12191                           	opt stack 0
 12192  013920                     ___fldiv:
 12193                           	opt stack 26
 12194                           
 12195                           ; BSR set to: 0
 12196                           ;incstack = 0
 12197  013920  0100               	movlb	0	; () banked
 12198  013922  517F               	movf	(___fldiv@b+3)& (0+255),w,b
 12199  013924  0B80               	andlw	128
 12200  013926  0100               	movlb	0	; () banked
 12201  013928  6F88               	movwf	___fldiv@sign& (0+255),b
 12202  01392A  0100               	movlb	0	; () banked
 12203  01392C  517F               	movf	(___fldiv@b+3)& (0+255),w,b
 12204  01392E  257F               	addwf	(___fldiv@b+3)& (0+255),w,b
 12205  013930  0100               	movlb	0	; () banked
 12206  013932  6F93               	movwf	___fldiv@bexp& (0+255),b
 12207                           
 12208                           ; BSR set to: 0
 12209  013934  0100               	movlb	0	; () banked
 12210  013936  AF7E               	btfss	(___fldiv@b+2)& (0+255),7,b
 12211  013938  D002               	goto	l6357
 12212                           
 12213                           ; BSR set to: 0
 12214  01393A  0100               	movlb	0	; () banked
 12215  01393C  8193               	bsf	___fldiv@bexp& (0+255),0,b
 12216  01393E                     l6357:
 12217                           
 12218                           ; BSR set to: 0
 12219  01393E  0100               	movlb	0	; () banked
 12220  013940  5193               	movf	___fldiv@bexp& (0+255),w,b
 12221  013942  0100               	movlb	0	; () banked
 12222  013944  B4D8               	btfsc	status,2,c
 12223  013946  D012               	goto	l6367
 12224                           
 12225                           ; BSR set to: 0
 12226  013948  0100               	movlb	0	; () banked
 12227  01394A  2993               	incf	___fldiv@bexp& (0+255),w,b
 12228  01394C  A4D8               	btfss	status,2,c
 12229  01394E  D009               	goto	l6363
 12230                           
 12231                           ; BSR set to: 0
 12232  013950  0E00               	movlw	0
 12233  013952  0100               	movlb	0	; () banked
 12234  013954  6F7C               	movwf	___fldiv@b& (0+255),b
 12235  013956  0E00               	movlw	0
 12236  013958  6F7D               	movwf	(___fldiv@b+1)& (0+255),b
 12237  01395A  0E00               	movlw	0
 12238  01395C  6F7E               	movwf	(___fldiv@b+2)& (0+255),b
 12239  01395E  0E00               	movlw	0
 12240  013960  6F7F               	movwf	(___fldiv@b+3)& (0+255),b
 12241  013962                     l6363:
 12242                           
 12243                           ; BSR set to: 0
 12244  013962  0100               	movlb	0	; () banked
 12245  013964  8F7E               	bsf	(___fldiv@b+2)& (0+255),7,b
 12246                           
 12247                           ; BSR set to: 0
 12248  013966  0E00               	movlw	0
 12249  013968  0100               	movlb	0	; () banked
 12250  01396A  D008               	goto	L12
 12251  01396C                     l6367:
 12252                           
 12253                           ; BSR set to: 0
 12254  01396C  0E00               	movlw	0
 12255  01396E  0100               	movlb	0	; () banked
 12256  013970  6F7C               	movwf	___fldiv@b& (0+255),b
 12257  013972  0E00               	movlw	0
 12258  013974  6F7D               	movwf	(___fldiv@b+1)& (0+255),b
 12259  013976  0E00               	movlw	0
 12260  013978  6F7E               	movwf	(___fldiv@b+2)& (0+255),b
 12261  01397A  0E00               	movlw	0
 12262  01397C                     L12:
 12263  01397C  6F7F               	movwf	(___fldiv@b+3)& (0+255),b
 12264                           
 12265                           ; BSR set to: 0
 12266                           
 12267                           ; BSR set to: 0
 12268  01397E  0100               	movlb	0	; () banked
 12269  013980  5183               	movf	(___fldiv@a+3)& (0+255),w,b
 12270  013982  0B80               	andlw	128
 12271  013984  0100               	movlb	0	; () banked
 12272  013986  1B88               	xorwf	___fldiv@sign& (0+255),f,b
 12273                           
 12274                           ; BSR set to: 0
 12275  013988  0100               	movlb	0	; () banked
 12276  01398A  5183               	movf	(___fldiv@a+3)& (0+255),w,b
 12277  01398C  2583               	addwf	(___fldiv@a+3)& (0+255),w,b
 12278  01398E  0100               	movlb	0	; () banked
 12279  013990  6F94               	movwf	___fldiv@aexp& (0+255),b
 12280                           
 12281                           ; BSR set to: 0
 12282  013992  0100               	movlb	0	; () banked
 12283  013994  AF82               	btfss	(___fldiv@a+2)& (0+255),7,b
 12284  013996  D002               	goto	l6377
 12285                           
 12286                           ; BSR set to: 0
 12287  013998  0100               	movlb	0	; () banked
 12288  01399A  8194               	bsf	___fldiv@aexp& (0+255),0,b
 12289  01399C                     l6377:
 12290                           
 12291                           ; BSR set to: 0
 12292  01399C  0100               	movlb	0	; () banked
 12293  01399E  5194               	movf	___fldiv@aexp& (0+255),w,b
 12294  0139A0  0100               	movlb	0	; () banked
 12295  0139A2  B4D8               	btfsc	status,2,c
 12296  0139A4  D012               	goto	l6387
 12297                           
 12298                           ; BSR set to: 0
 12299  0139A6  0100               	movlb	0	; () banked
 12300  0139A8  2994               	incf	___fldiv@aexp& (0+255),w,b
 12301  0139AA  A4D8               	btfss	status,2,c
 12302  0139AC  D009               	goto	l6383
 12303                           
 12304                           ; BSR set to: 0
 12305  0139AE  0E00               	movlw	0
 12306  0139B0  0100               	movlb	0	; () banked
 12307  0139B2  6F80               	movwf	___fldiv@a& (0+255),b
 12308  0139B4  0E00               	movlw	0
 12309  0139B6  6F81               	movwf	(___fldiv@a+1)& (0+255),b
 12310  0139B8  0E00               	movlw	0
 12311  0139BA  6F82               	movwf	(___fldiv@a+2)& (0+255),b
 12312  0139BC  0E00               	movlw	0
 12313  0139BE  6F83               	movwf	(___fldiv@a+3)& (0+255),b
 12314  0139C0                     l6383:
 12315                           
 12316                           ; BSR set to: 0
 12317  0139C0  0100               	movlb	0	; () banked
 12318  0139C2  8F82               	bsf	(___fldiv@a+2)& (0+255),7,b
 12319                           
 12320                           ; BSR set to: 0
 12321  0139C4  0E00               	movlw	0
 12322  0139C6  0100               	movlb	0	; () banked
 12323  0139C8  D008               	goto	L13
 12324  0139CA                     l6387:
 12325                           
 12326                           ; BSR set to: 0
 12327  0139CA  0E00               	movlw	0
 12328  0139CC  0100               	movlb	0	; () banked
 12329  0139CE  6F80               	movwf	___fldiv@a& (0+255),b
 12330  0139D0  0E00               	movlw	0
 12331  0139D2  6F81               	movwf	(___fldiv@a+1)& (0+255),b
 12332  0139D4  0E00               	movlw	0
 12333  0139D6  6F82               	movwf	(___fldiv@a+2)& (0+255),b
 12334  0139D8  0E00               	movlw	0
 12335  0139DA                     L13:
 12336  0139DA  6F83               	movwf	(___fldiv@a+3)& (0+255),b
 12337                           
 12338                           ; BSR set to: 0
 12339                           
 12340                           ; BSR set to: 0
 12341  0139DC  0100               	movlb	0	; () banked
 12342  0139DE  5180               	movf	___fldiv@a& (0+255),w,b
 12343  0139E0  0100               	movlb	0	; () banked
 12344  0139E2  1181               	iorwf	(___fldiv@a+1)& (0+255),w,b
 12345  0139E4  0100               	movlb	0	; () banked
 12346  0139E6  1182               	iorwf	(___fldiv@a+2)& (0+255),w,b
 12347  0139E8  0100               	movlb	0	; () banked
 12348  0139EA  1183               	iorwf	(___fldiv@a+3)& (0+255),w,b
 12349  0139EC  A4D8               	btfss	status,2,c
 12350  0139EE  D017               	goto	l6399
 12351                           
 12352                           ; BSR set to: 0
 12353  0139F0  0E00               	movlw	0
 12354  0139F2  0100               	movlb	0	; () banked
 12355  0139F4  6F7C               	movwf	___fldiv@b& (0+255),b
 12356  0139F6  0E00               	movlw	0
 12357  0139F8  6F7D               	movwf	(___fldiv@b+1)& (0+255),b
 12358  0139FA  0E00               	movlw	0
 12359  0139FC  6F7E               	movwf	(___fldiv@b+2)& (0+255),b
 12360  0139FE  0E00               	movlw	0
 12361  013A00  6F7F               	movwf	(___fldiv@b+3)& (0+255),b
 12362                           
 12363                           ; BSR set to: 0
 12364  013A02  0100               	movlb	0	; () banked
 12365  013A04  0E80               	movlw	128
 12366  013A06  137E               	iorwf	(___fldiv@b+2)& (0+255),f,b
 12367  013A08  0E7F               	movlw	127
 12368  013A0A  137F               	iorwf	(___fldiv@b+3)& (0+255),f,b
 12369                           
 12370                           ; BSR set to: 0
 12371  013A0C  C07C  F07C         	movff	___fldiv@b,?___fldiv
 12372  013A10  C07D  F07D         	movff	___fldiv@b+1,?___fldiv+1
 12373  013A14  C07E  F07E         	movff	___fldiv@b+2,?___fldiv+2
 12374  013A18  C07F  F07F         	movff	___fldiv@b+3,?___fldiv+3
 12375                           
 12376                           ; BSR set to: 0
 12377  013A1C  0012               	return	
 12378  013A1E                     l6399:
 12379                           
 12380                           ; BSR set to: 0
 12381  013A1E  0100               	movlb	0	; () banked
 12382  013A20  5193               	movf	___fldiv@bexp& (0+255),w,b
 12383  013A22  0100               	movlb	0	; () banked
 12384  013A24  A4D8               	btfss	status,2,c
 12385  013A26  D012               	goto	l6407
 12386                           
 12387                           ; BSR set to: 0
 12388  013A28  0E00               	movlw	0
 12389  013A2A  0100               	movlb	0	; () banked
 12390  013A2C  6F7C               	movwf	___fldiv@b& (0+255),b
 12391  013A2E  0E00               	movlw	0
 12392  013A30  6F7D               	movwf	(___fldiv@b+1)& (0+255),b
 12393  013A32  0E00               	movlw	0
 12394  013A34  6F7E               	movwf	(___fldiv@b+2)& (0+255),b
 12395  013A36  0E00               	movlw	0
 12396  013A38  6F7F               	movwf	(___fldiv@b+3)& (0+255),b
 12397                           
 12398                           ; BSR set to: 0
 12399  013A3A  C07C  F07C         	movff	___fldiv@b,?___fldiv
 12400  013A3E  C07D  F07D         	movff	___fldiv@b+1,?___fldiv+1
 12401  013A42  C07E  F07E         	movff	___fldiv@b+2,?___fldiv+2
 12402  013A46  C07F  F07F         	movff	___fldiv@b+3,?___fldiv+3
 12403                           
 12404                           ; BSR set to: 0
 12405  013A4A  0012               	return	
 12406  013A4C                     l6407:
 12407                           
 12408                           ; BSR set to: 0
 12409  013A4C  0100               	movlb	0	; () banked
 12410  013A4E  5194               	movf	___fldiv@aexp& (0+255),w,b
 12411  013A50  0100               	movlb	0	; () banked
 12412  013A52  6F84               	movwf	??___fldiv& (0+255),b
 12413  013A54  6B85               	clrf	(??___fldiv+1)& (0+255),b
 12414  013A56  0100               	movlb	0	; () banked
 12415  013A58  1F84               	comf	??___fldiv& (0+255),f,b
 12416  013A5A  1F85               	comf	(??___fldiv+1)& (0+255),f,b
 12417  013A5C  4B84               	infsnz	??___fldiv& (0+255),f,b
 12418  013A5E  2B85               	incf	(??___fldiv+1)& (0+255),f,b
 12419  013A60  0100               	movlb	0	; () banked
 12420  013A62  5193               	movf	___fldiv@bexp& (0+255),w,b
 12421  013A64  0100               	movlb	0	; () banked
 12422  013A66  6F86               	movwf	(??___fldiv+2)& (0+255),b
 12423  013A68  6B87               	clrf	(??___fldiv+3)& (0+255),b
 12424  013A6A  0100               	movlb	0	; () banked
 12425  013A6C  5184               	movf	??___fldiv& (0+255),w,b
 12426  013A6E  0100               	movlb	0	; () banked
 12427  013A70  2786               	addwf	(??___fldiv+2)& (0+255),f,b
 12428  013A72  0100               	movlb	0	; () banked
 12429  013A74  5185               	movf	(??___fldiv+1)& (0+255),w,b
 12430  013A76  0100               	movlb	0	; () banked
 12431  013A78  2387               	addwfc	(??___fldiv+3)& (0+255),f,b
 12432  013A7A  0E7F               	movlw	127
 12433  013A7C  0100               	movlb	0	; () banked
 12434  013A7E  2586               	addwf	(??___fldiv+2)& (0+255),w,b
 12435  013A80  0100               	movlb	0	; () banked
 12436  013A82  6F8D               	movwf	___fldiv@new_exp& (0+255),b
 12437  013A84  0E00               	movlw	0
 12438  013A86  0100               	movlb	0	; () banked
 12439  013A88  2187               	addwfc	(??___fldiv+3)& (0+255),w,b
 12440  013A8A  0100               	movlb	0	; () banked
 12441  013A8C  6F8E               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12442                           
 12443                           ; BSR set to: 0
 12444  013A8E  C07C  F089         	movff	___fldiv@b,___fldiv@rem
 12445  013A92  C07D  F08A         	movff	___fldiv@b+1,___fldiv@rem+1
 12446  013A96  C07E  F08B         	movff	___fldiv@b+2,___fldiv@rem+2
 12447  013A9A  C07F  F08C         	movff	___fldiv@b+3,___fldiv@rem+3
 12448                           
 12449                           ; BSR set to: 0
 12450  013A9E  0E00               	movlw	0
 12451  013AA0  0100               	movlb	0	; () banked
 12452  013AA2  6F7C               	movwf	___fldiv@b& (0+255),b
 12453  013AA4  0E00               	movlw	0
 12454  013AA6  6F7D               	movwf	(___fldiv@b+1)& (0+255),b
 12455  013AA8  0E00               	movlw	0
 12456  013AAA  6F7E               	movwf	(___fldiv@b+2)& (0+255),b
 12457  013AAC  0E00               	movlw	0
 12458  013AAE  6F7F               	movwf	(___fldiv@b+3)& (0+255),b
 12459                           
 12460                           ; BSR set to: 0
 12461  013AB0  0E00               	movlw	0
 12462  013AB2  0100               	movlb	0	; () banked
 12463  013AB4  6F8F               	movwf	___fldiv@grs& (0+255),b
 12464  013AB6  0E00               	movlw	0
 12465  013AB8  6F90               	movwf	(___fldiv@grs+1)& (0+255),b
 12466  013ABA  0E00               	movlw	0
 12467  013ABC  6F91               	movwf	(___fldiv@grs+2)& (0+255),b
 12468  013ABE  0E00               	movlw	0
 12469  013AC0  6F92               	movwf	(___fldiv@grs+3)& (0+255),b
 12470                           
 12471                           ; BSR set to: 0
 12472  013AC2  0E00               	movlw	0
 12473  013AC4  0100               	movlb	0	; () banked
 12474  013AC6  6F94               	movwf	___fldiv@aexp& (0+255),b
 12475  013AC8  D042               	goto	l1461
 12476  013ACA                     l6417:
 12477                           
 12478                           ; BSR set to: 0
 12479  013ACA  0100               	movlb	0	; () banked
 12480  013ACC  5194               	movf	___fldiv@aexp& (0+255),w,b
 12481  013ACE  0100               	movlb	0	; () banked
 12482  013AD0  B4D8               	btfsc	status,2,c
 12483  013AD2  D017               	goto	l6425
 12484                           
 12485                           ; BSR set to: 0
 12486  013AD4  0100               	movlb	0	; () banked
 12487  013AD6  90D8               	bcf	status,0,c
 12488  013AD8  3789               	rlcf	___fldiv@rem& (0+255),f,b
 12489  013ADA  378A               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 12490  013ADC  378B               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 12491  013ADE  378C               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 12492  013AE0  0100               	movlb	0	; () banked
 12493  013AE2  90D8               	bcf	status,0,c
 12494  013AE4  377C               	rlcf	___fldiv@b& (0+255),f,b
 12495  013AE6  377D               	rlcf	(___fldiv@b+1)& (0+255),f,b
 12496  013AE8  377E               	rlcf	(___fldiv@b+2)& (0+255),f,b
 12497  013AEA  377F               	rlcf	(___fldiv@b+3)& (0+255),f,b
 12498                           
 12499                           ; BSR set to: 0
 12500  013AEC  0100               	movlb	0	; () banked
 12501  013AEE  AF92               	btfss	(___fldiv@grs+3)& (0+255),7,b
 12502  013AF0  D002               	goto	l1464
 12503                           
 12504                           ; BSR set to: 0
 12505  013AF2  0100               	movlb	0	; () banked
 12506  013AF4  817C               	bsf	___fldiv@b& (0+255),0,b
 12507  013AF6                     l1464:
 12508                           
 12509                           ; BSR set to: 0
 12510  013AF6  0100               	movlb	0	; () banked
 12511  013AF8  90D8               	bcf	status,0,c
 12512  013AFA  378F               	rlcf	___fldiv@grs& (0+255),f,b
 12513  013AFC  3790               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 12514  013AFE  3791               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 12515  013B00  3792               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 12516  013B02                     l6425:
 12517                           
 12518                           ; BSR set to: 0
 12519  013B02  0100               	movlb	0	; () banked
 12520  013B04  5180               	movf	___fldiv@a& (0+255),w,b
 12521  013B06  0100               	movlb	0	; () banked
 12522  013B08  5D89               	subwf	___fldiv@rem& (0+255),w,b
 12523  013B0A  0100               	movlb	0	; () banked
 12524  013B0C  5181               	movf	(___fldiv@a+1)& (0+255),w,b
 12525  013B0E  0100               	movlb	0	; () banked
 12526  013B10  598A               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 12527  013B12  0100               	movlb	0	; () banked
 12528  013B14  5182               	movf	(___fldiv@a+2)& (0+255),w,b
 12529  013B16  0100               	movlb	0	; () banked
 12530  013B18  598B               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 12531  013B1A  0100               	movlb	0	; () banked
 12532  013B1C  5183               	movf	(___fldiv@a+3)& (0+255),w,b
 12533  013B1E  0100               	movlb	0	; () banked
 12534  013B20  598C               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 12535  013B22  A0D8               	btfss	status,0,c
 12536  013B24  D012               	goto	l6431
 12537                           
 12538                           ; BSR set to: 0
 12539  013B26  0100               	movlb	0	; () banked
 12540  013B28  8D92               	bsf	(___fldiv@grs+3)& (0+255),6,b
 12541                           
 12542                           ; BSR set to: 0
 12543  013B2A  0100               	movlb	0	; () banked
 12544  013B2C  5180               	movf	___fldiv@a& (0+255),w,b
 12545  013B2E  0100               	movlb	0	; () banked
 12546  013B30  5F89               	subwf	___fldiv@rem& (0+255),f,b
 12547  013B32  0100               	movlb	0	; () banked
 12548  013B34  5181               	movf	(___fldiv@a+1)& (0+255),w,b
 12549  013B36  0100               	movlb	0	; () banked
 12550  013B38  5B8A               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 12551  013B3A  0100               	movlb	0	; () banked
 12552  013B3C  5182               	movf	(___fldiv@a+2)& (0+255),w,b
 12553  013B3E  0100               	movlb	0	; () banked
 12554  013B40  5B8B               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 12555  013B42  0100               	movlb	0	; () banked
 12556  013B44  5183               	movf	(___fldiv@a+3)& (0+255),w,b
 12557  013B46  0100               	movlb	0	; () banked
 12558  013B48  5B8C               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 12559  013B4A                     l6431:
 12560                           
 12561                           ; BSR set to: 0
 12562  013B4A  0100               	movlb	0	; () banked
 12563  013B4C  2B94               	incf	___fldiv@aexp& (0+255),f,b
 12564  013B4E                     l1461:
 12565                           
 12566                           ; BSR set to: 0
 12567  013B4E  0E19               	movlw	25
 12568  013B50  0100               	movlb	0	; () banked
 12569  013B52  6594               	cpfsgt	___fldiv@aexp& (0+255),b
 12570  013B54  D7BA               	goto	l6417
 12571                           
 12572                           ; BSR set to: 0
 12573                           
 12574                           ; BSR set to: 0
 12575  013B56  0100               	movlb	0	; () banked
 12576  013B58  5189               	movf	___fldiv@rem& (0+255),w,b
 12577  013B5A  0100               	movlb	0	; () banked
 12578  013B5C  118A               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 12579  013B5E  0100               	movlb	0	; () banked
 12580  013B60  118B               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 12581  013B62  0100               	movlb	0	; () banked
 12582  013B64  118C               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 12583  013B66  B4D8               	btfsc	status,2,c
 12584  013B68  D018               	goto	l6443
 12585                           
 12586                           ; BSR set to: 0
 12587  013B6A  0100               	movlb	0	; () banked
 12588  013B6C  818F               	bsf	___fldiv@grs& (0+255),0,b
 12589                           
 12590                           ; BSR set to: 0
 12591  013B6E  D015               	goto	l6443
 12592  013B70                     l6437:
 12593                           
 12594                           ; BSR set to: 0
 12595  013B70  0100               	movlb	0	; () banked
 12596  013B72  90D8               	bcf	status,0,c
 12597  013B74  377C               	rlcf	___fldiv@b& (0+255),f,b
 12598  013B76  377D               	rlcf	(___fldiv@b+1)& (0+255),f,b
 12599  013B78  377E               	rlcf	(___fldiv@b+2)& (0+255),f,b
 12600  013B7A  377F               	rlcf	(___fldiv@b+3)& (0+255),f,b
 12601                           
 12602                           ; BSR set to: 0
 12603  013B7C  0100               	movlb	0	; () banked
 12604  013B7E  AF92               	btfss	(___fldiv@grs+3)& (0+255),7,b
 12605  013B80  D002               	goto	l1470
 12606                           
 12607                           ; BSR set to: 0
 12608  013B82  0100               	movlb	0	; () banked
 12609  013B84  817C               	bsf	___fldiv@b& (0+255),0,b
 12610  013B86                     l1470:
 12611                           
 12612                           ; BSR set to: 0
 12613  013B86  0100               	movlb	0	; () banked
 12614  013B88  90D8               	bcf	status,0,c
 12615  013B8A  378F               	rlcf	___fldiv@grs& (0+255),f,b
 12616  013B8C  3790               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 12617  013B8E  3791               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 12618  013B90  3792               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 12619  013B92  0100               	movlb	0	; () banked
 12620  013B94  078D               	decf	___fldiv@new_exp& (0+255),f,b
 12621  013B96  A0D8               	btfss	status,0,c
 12622  013B98  078E               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 12623  013B9A                     l6443:
 12624                           
 12625                           ; BSR set to: 0
 12626  013B9A  0100               	movlb	0	; () banked
 12627  013B9C  AF7E               	btfss	(___fldiv@b+2)& (0+255),7,b
 12628  013B9E  D7E8               	goto	l6437
 12629                           
 12630                           ; BSR set to: 0
 12631                           
 12632                           ; BSR set to: 0
 12633  013BA0  0E00               	movlw	0
 12634  013BA2  0100               	movlb	0	; () banked
 12635  013BA4  6F94               	movwf	___fldiv@aexp& (0+255),b
 12636                           
 12637                           ; BSR set to: 0
 12638  013BA6  0100               	movlb	0	; () banked
 12639  013BA8  AF92               	btfss	(___fldiv@grs+3)& (0+255),7,b
 12640  013BAA  D024               	goto	l1472
 12641                           
 12642                           ; BSR set to: 0
 12643  013BAC  0EFF               	movlw	255
 12644  013BAE  0100               	movlb	0	; () banked
 12645  013BB0  158F               	andwf	___fldiv@grs& (0+255),w,b
 12646  013BB2  0100               	movlb	0	; () banked
 12647  013BB4  6F84               	movwf	??___fldiv& (0+255),b
 12648  013BB6  0EFF               	movlw	255
 12649  013BB8  0100               	movlb	0	; () banked
 12650  013BBA  1590               	andwf	(___fldiv@grs+1)& (0+255),w,b
 12651  013BBC  0100               	movlb	0	; () banked
 12652  013BBE  6F85               	movwf	(??___fldiv+1)& (0+255),b
 12653  013BC0  0EFF               	movlw	255
 12654  013BC2  0100               	movlb	0	; () banked
 12655  013BC4  1591               	andwf	(___fldiv@grs+2)& (0+255),w,b
 12656  013BC6  0100               	movlb	0	; () banked
 12657  013BC8  6F86               	movwf	(??___fldiv+2)& (0+255),b
 12658  013BCA  0E7F               	movlw	127
 12659  013BCC  0100               	movlb	0	; () banked
 12660  013BCE  1592               	andwf	(___fldiv@grs+3)& (0+255),w,b
 12661  013BD0  0100               	movlb	0	; () banked
 12662  013BD2  6F87               	movwf	(??___fldiv+3)& (0+255),b
 12663  013BD4  0100               	movlb	0	; () banked
 12664  013BD6  5184               	movf	??___fldiv& (0+255),w,b
 12665  013BD8  0100               	movlb	0	; () banked
 12666  013BDA  1185               	iorwf	(??___fldiv+1)& (0+255),w,b
 12667  013BDC  0100               	movlb	0	; () banked
 12668  013BDE  1186               	iorwf	(??___fldiv+2)& (0+255),w,b
 12669  013BE0  0100               	movlb	0	; () banked
 12670  013BE2  1187               	iorwf	(??___fldiv+3)& (0+255),w,b
 12671  013BE4  A4D8               	btfss	status,2,c
 12672  013BE6  D003               	goto	l6453
 12673                           
 12674                           ; BSR set to: 0
 12675                           
 12676                           ; BSR set to: 0
 12677  013BE8  0100               	movlb	0	; () banked
 12678  013BEA  A17C               	btfss	___fldiv@b& (0+255),0,b
 12679  013BEC  D003               	goto	l1472
 12680  013BEE                     l6453:
 12681                           
 12682                           ; BSR set to: 0
 12683  013BEE  0E01               	movlw	1
 12684  013BF0  0100               	movlb	0	; () banked
 12685  013BF2  6F94               	movwf	___fldiv@aexp& (0+255),b
 12686  013BF4                     l1472:
 12687                           
 12688                           ; BSR set to: 0
 12689  013BF4  0100               	movlb	0	; () banked
 12690  013BF6  5194               	movf	___fldiv@aexp& (0+255),w,b
 12691  013BF8  0100               	movlb	0	; () banked
 12692  013BFA  B4D8               	btfsc	status,2,c
 12693  013BFC  D023               	goto	l6463
 12694                           
 12695                           ; BSR set to: 0
 12696  013BFE  0E01               	movlw	1
 12697  013C00  0100               	movlb	0	; () banked
 12698  013C02  277C               	addwf	___fldiv@b& (0+255),f,b
 12699  013C04  0E00               	movlw	0
 12700  013C06  237D               	addwfc	(___fldiv@b+1)& (0+255),f,b
 12701  013C08  237E               	addwfc	(___fldiv@b+2)& (0+255),f,b
 12702  013C0A  237F               	addwfc	(___fldiv@b+3)& (0+255),f,b
 12703                           
 12704                           ; BSR set to: 0
 12705  013C0C  0100               	movlb	0	; () banked
 12706  013C0E  A17F               	btfss	(___fldiv@b+3)& (0+255),0,b
 12707  013C10  D019               	goto	l6463
 12708                           
 12709                           ; BSR set to: 0
 12710  013C12  C07C  F084         	movff	___fldiv@b,??___fldiv
 12711  013C16  C07D  F085         	movff	___fldiv@b+1,??___fldiv+1
 12712  013C1A  C07E  F086         	movff	___fldiv@b+2,??___fldiv+2
 12713  013C1E  C07F  F087         	movff	___fldiv@b+3,??___fldiv+3
 12714  013C22  0100               	movlb	0	; () banked
 12715  013C24  3587               	rlcf	(??___fldiv+3)& (0+255),w,b
 12716  013C26  3387               	rrcf	(??___fldiv+3)& (0+255),f,b
 12717  013C28  3386               	rrcf	(??___fldiv+2)& (0+255),f,b
 12718  013C2A  3385               	rrcf	(??___fldiv+1)& (0+255),f,b
 12719  013C2C  3384               	rrcf	??___fldiv& (0+255),f,b
 12720  013C2E  C084  F07C         	movff	??___fldiv,___fldiv@b
 12721  013C32  C085  F07D         	movff	??___fldiv+1,___fldiv@b+1
 12722  013C36  C086  F07E         	movff	??___fldiv+2,___fldiv@b+2
 12723  013C3A  C087  F07F         	movff	??___fldiv+3,___fldiv@b+3
 12724                           
 12725                           ; BSR set to: 0
 12726  013C3E  0100               	movlb	0	; () banked
 12727  013C40  4B8D               	infsnz	___fldiv@new_exp& (0+255),f,b
 12728  013C42  2B8E               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 12729  013C44                     l6463:
 12730                           
 12731                           ; BSR set to: 0
 12732  013C44  0100               	movlb	0	; () banked
 12733  013C46  BF8E               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 12734  013C48  D014               	goto	l6467
 12735  013C4A  0100               	movlb	0	; () banked
 12736  013C4C  518E               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 12737  013C4E  E104               	bnz	u8070
 12738  013C50  0100               	movlb	0	; () banked
 12739  013C52  298D               	incf	___fldiv@new_exp& (0+255),w,b
 12740  013C54  A0D8               	btfss	status,0,c
 12741  013C56  D00D               	goto	l6467
 12742  013C58                     u8070:
 12743                           
 12744                           ; BSR set to: 0
 12745  013C58  0E00               	movlw	0
 12746  013C5A  0100               	movlb	0	; () banked
 12747  013C5C  6F8E               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12748  013C5E  698D               	setf	___fldiv@new_exp& (0+255),b
 12749  013C60  0E00               	movlw	0
 12750  013C62  0100               	movlb	0	; () banked
 12751  013C64  6F7C               	movwf	___fldiv@b& (0+255),b
 12752  013C66  0E00               	movlw	0
 12753  013C68  6F7D               	movwf	(___fldiv@b+1)& (0+255),b
 12754  013C6A  0E00               	movlw	0
 12755  013C6C  6F7E               	movwf	(___fldiv@b+2)& (0+255),b
 12756  013C6E  0E00               	movlw	0
 12757  013C70  6F7F               	movwf	(___fldiv@b+3)& (0+255),b
 12758  013C72                     l6467:
 12759                           
 12760                           ; BSR set to: 0
 12761  013C72  0100               	movlb	0	; () banked
 12762  013C74  BF8E               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 12763  013C76  D007               	goto	l6469
 12764  013C78  0100               	movlb	0	; () banked
 12765  013C7A  518E               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 12766  013C7C  E115               	bnz	l6471
 12767  013C7E  0100               	movlb	0	; () banked
 12768  013C80  058D               	decf	___fldiv@new_exp& (0+255),w,b
 12769  013C82  B0D8               	btfsc	status,0,c
 12770  013C84  D011               	goto	l6471
 12771  013C86                     l6469:
 12772                           
 12773                           ; BSR set to: 0
 12774  013C86  0E00               	movlw	0
 12775  013C88  0100               	movlb	0	; () banked
 12776  013C8A  6F8E               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12777  013C8C  0E00               	movlw	0
 12778  013C8E  6F8D               	movwf	___fldiv@new_exp& (0+255),b
 12779  013C90  0E00               	movlw	0
 12780  013C92  0100               	movlb	0	; () banked
 12781  013C94  6F7C               	movwf	___fldiv@b& (0+255),b
 12782  013C96  0E00               	movlw	0
 12783  013C98  6F7D               	movwf	(___fldiv@b+1)& (0+255),b
 12784  013C9A  0E00               	movlw	0
 12785  013C9C  6F7E               	movwf	(___fldiv@b+2)& (0+255),b
 12786  013C9E  0E00               	movlw	0
 12787  013CA0  6F7F               	movwf	(___fldiv@b+3)& (0+255),b
 12788  013CA2  0E00               	movlw	0
 12789  013CA4  0100               	movlb	0	; () banked
 12790  013CA6  6F88               	movwf	___fldiv@sign& (0+255),b
 12791  013CA8                     l6471:
 12792                           
 12793                           ; BSR set to: 0
 12794  013CA8  C08D  F093         	movff	___fldiv@new_exp,___fldiv@bexp
 12795                           
 12796                           ; BSR set to: 0
 12797  013CAC  0100               	movlb	0	; () banked
 12798  013CAE  A193               	btfss	___fldiv@bexp& (0+255),0,b
 12799  013CB0  D003               	goto	l6477
 12800                           
 12801                           ; BSR set to: 0
 12802  013CB2  0100               	movlb	0	; () banked
 12803  013CB4  8F7E               	bsf	(___fldiv@b+2)& (0+255),7,b
 12804  013CB6  D002               	goto	l6479
 12805  013CB8                     l6477:
 12806                           
 12807                           ; BSR set to: 0
 12808  013CB8  0100               	movlb	0	; () banked
 12809  013CBA  9F7E               	bcf	(___fldiv@b+2)& (0+255),7,b
 12810  013CBC                     l6479:
 12811                           
 12812                           ; BSR set to: 0
 12813  013CBC  0100               	movlb	0	; () banked
 12814  013CBE  90D8               	bcf	status,0,c
 12815  013CC0  3193               	rrcf	___fldiv@bexp& (0+255),w,b
 12816  013CC2  0100               	movlb	0	; () banked
 12817  013CC4  6F7F               	movwf	(___fldiv@b+3)& (0+255),b
 12818                           
 12819                           ; BSR set to: 0
 12820  013CC6  0100               	movlb	0	; () banked
 12821  013CC8  5188               	movf	___fldiv@sign& (0+255),w,b
 12822  013CCA  0100               	movlb	0	; () banked
 12823  013CCC  137F               	iorwf	(___fldiv@b+3)& (0+255),f,b
 12824                           
 12825                           ; BSR set to: 0
 12826  013CCE  C07C  F07C         	movff	___fldiv@b,?___fldiv
 12827  013CD2  C07D  F07D         	movff	___fldiv@b+1,?___fldiv+1
 12828  013CD6  C07E  F07E         	movff	___fldiv@b+2,?___fldiv+2
 12829  013CDA  C07F  F07F         	movff	___fldiv@b+3,?___fldiv+3
 12830  013CDE  0012               	return	
 12831  013CE0                     __end_of___fldiv:
 12832                           	opt stack 0
 12833                           tblptru	equ	0xFF8
 12834                           tblptrh	equ	0xFF7
 12835                           tblptrl	equ	0xFF6
 12836                           tablat	equ	0xFF5
 12837                           prodh	equ	0xFF4
 12838                           prodl	equ	0xFF3
 12839                           intcon	equ	0xFF2
 12840                           postinc0	equ	0xFEE
 12841                           wreg	equ	0xFE8
 12842                           indf2	equ	0xFDF
 12843                           postinc2	equ	0xFDE
 12844                           fsr2h	equ	0xFDA
 12845                           fsr2l	equ	0xFD9
 12846                           status	equ	0xFD8
 12847                           
 12848 ;; *************** function _LCD_write_message *****************
 12849 ;; Defined at:
 12850 ;;		line 178 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 12851 ;; Parameters:    Size  Location     Type
 12852 ;;  buffer          2   31[BANK0 ] PTR const unsigned char 
 12853 ;;		 -> STR_13(14), STR_12(8), STR_11(21), STR_10(5), 
 12854 ;;		 -> STR_8(2), STR_7(5), STR_6(4), STR_5(12), 
 12855 ;;		 -> STR_4(21), STR_3(21), STR_2(21), STR_1(21), 
 12856 ;; Auto vars:     Size  Location     Type
 12857 ;;		None
 12858 ;; Return value:  Size  Location     Type
 12859 ;;		None               void
 12860 ;; Registers used:
 12861 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12862 ;; Tracked objects:
 12863 ;;		On entry : 0/0
 12864 ;;		On exit  : 0/0
 12865 ;;		Unchanged: 0/0
 12866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12867 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12870 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12871 ;;Total ram usage:        2 bytes
 12872 ;; Hardware stack levels used:    1
 12873 ;; Hardware stack levels required when called:    8
 12874 ;; This function calls:
 12875 ;;		_LCD_write_char
 12876 ;; This function is called by:
 12877 ;;		_main
 12878 ;;		_LCD_Handler
 12879 ;;		_board_initialization
 12880 ;; This function uses a non-reentrant model
 12881 ;;
 12882                           
 12883                           	psect	text26
 12884  015CE0                     __ptext26:
 12885                           	opt stack 0
 12886  015CE0                     _LCD_write_message:
 12887                           	opt stack 21
 12888                           
 12889                           ;src\LCD_44780.c: 181: while(*buffer) {
 12890                           
 12891                           ; BSR set to: 0
 12892                           ;incstack = 0
 12893  015CE0  D00D               	goto	l8097
 12894  015CE2                     l8093:
 12895                           
 12896                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
 12897  015CE2  C07F  FFF6         	movff	LCD_write_message@buffer,tblptrl
 12898  015CE6  C080  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 12899  015CEA                     	if	0	;tblptru may be non-zero
 12900  015CEA                     	endif
 12901  015CEA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12902  015CEA  0E00               	movlw	low (__mediumconst shr (0+16))
 12903  015CEC  6EF8               	movwf	tblptru,c
 12904  015CEE                     	endif
 12905  015CEE  0008               	tblrd		*
 12906  015CF0  50F5               	movf	tablat,w,c
 12907  015CF2  ECB4  F0AC         	call	_LCD_write_char
 12908                           
 12909                           ;src\LCD_44780.c: 186: buffer++;
 12910  015CF6  0100               	movlb	0	; () banked
 12911  015CF8  4B7F               	infsnz	LCD_write_message@buffer& (0+255),f,b
 12912  015CFA  2B80               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
 12913  015CFC                     l8097:
 12914  015CFC  C07F  FFF6         	movff	LCD_write_message@buffer,tblptrl
 12915  015D00  C080  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 12916  015D04                     	if	0	;tblptru may be non-zero
 12917  015D04                     	endif
 12918  015D04                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12919  015D04  0E00               	movlw	low (__mediumconst shr (0+16))
 12920  015D06  6EF8               	movwf	tblptru,c
 12921  015D08                     	endif
 12922  015D08  0008               	tblrd		*
 12923  015D0A  50F5               	movf	tablat,w,c
 12924  015D0C  0900               	iorlw	0
 12925  015D0E  B4D8               	btfsc	status,2,c
 12926  015D10  0012               	return	
 12927  015D12  D7E7               	goto	l8093
 12928  015D14                     __end_of_LCD_write_message:
 12929                           	opt stack 0
 12930                           tblptru	equ	0xFF8
 12931                           tblptrh	equ	0xFF7
 12932                           tblptrl	equ	0xFF6
 12933                           tablat	equ	0xFF5
 12934                           prodh	equ	0xFF4
 12935                           prodl	equ	0xFF3
 12936                           intcon	equ	0xFF2
 12937                           postinc0	equ	0xFEE
 12938                           wreg	equ	0xFE8
 12939                           indf2	equ	0xFDF
 12940                           postinc2	equ	0xFDE
 12941                           fsr2h	equ	0xFDA
 12942                           fsr2l	equ	0xFD9
 12943                           status	equ	0xFD8
 12944                           
 12945 ;; *************** function _LCD_write_integer *****************
 12946 ;; Defined at:
 12947 ;;		line 210 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 12948 ;; Parameters:    Size  Location     Type
 12949 ;;  value           2   38[BANK0 ] int 
 12950 ;;  number_of_di    1   40[BANK0 ] unsigned char 
 12951 ;;  zero_cleanin    1   41[BANK0 ] unsigned char 
 12952 ;; Auto vars:     Size  Location     Type
 12953 ;;  convertedInt    6   47[BANK0 ] unsigned char [6]
 12954 ;;  index           1   53[BANK0 ] unsigned char 
 12955 ;; Return value:  Size  Location     Type
 12956 ;;		None               void
 12957 ;; Registers used:
 12958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12959 ;; Tracked objects:
 12960 ;;		On entry : 0/0
 12961 ;;		On exit  : 0/0
 12962 ;;		Unchanged: 0/0
 12963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12964 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12965 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12966 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12967 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12968 ;;Total ram usage:       16 bytes
 12969 ;; Hardware stack levels used:    1
 12970 ;; Hardware stack levels required when called:    9
 12971 ;; This function calls:
 12972 ;;		_LCD_write_string
 12973 ;;		_itoa
 12974 ;; This function is called by:
 12975 ;;		_LCD_Handler
 12976 ;; This function uses a non-reentrant model
 12977 ;;
 12978                           
 12979                           	psect	text27
 12980  014708                     __ptext27:
 12981                           	opt stack 0
 12982  014708                     _LCD_write_integer:
 12983                           	opt stack 20
 12984                           
 12985                           ;src\LCD_44780.c: 213: unsigned char convertedInt [6] = {0,0,0,0,0,0};
 12986                           
 12987                           ;incstack = 0
 12988  014708  EE20  F008         	lfsr	2,LCD_write_integer@F17272
 12989  01470C  EE10  F08F         	lfsr	1,LCD_write_integer@convertedInt
 12990  014710  0E05               	movlw	5
 12991  014712                     u10561:
 12992  014712  CFDB FFE3          	movff	plusw2,plusw1
 12993  014716  06E8               	decf	wreg,f,c
 12994  014718  E2FC               	bc	u10561
 12995                           
 12996                           ;src\LCD_44780.c: 216: unsigned char index;
 12997                           ;src\LCD_44780.c: 224: itoa ((unsigned char*) convertedInt, value,10);
 12998  01471A  0E8F               	movlw	low LCD_write_integer@convertedInt
 12999  01471C  0100               	movlb	0	; () banked
 13000  01471E  6F7E               	movwf	itoa@buf& (0+255),b
 13001  014720  0E00               	movlw	high LCD_write_integer@convertedInt
 13002  014722  0100               	movlb	0	; () banked
 13003  014724  6F7F               	movwf	(itoa@buf+1)& (0+255),b
 13004  014726  C086  F080         	movff	LCD_write_integer@value,itoa@val
 13005  01472A  C087  F081         	movff	LCD_write_integer@value+1,itoa@val+1
 13006  01472E  0E00               	movlw	0
 13007  014730  0100               	movlb	0	; () banked
 13008  014732  6F83               	movwf	(itoa@base+1)& (0+255),b
 13009  014734  0E0A               	movlw	10
 13010  014736  6F82               	movwf	itoa@base& (0+255),b
 13011  014738  ECBA  F0AD         	call	_itoa	;wreg free
 13012                           
 13013                           ;src\LCD_44780.c: 228: if (number_of_digits >0 ) {
 13014  01473C  0100               	movlb	0	; () banked
 13015  01473E  5188               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13016  014740  0100               	movlb	0	; () banked
 13017  014742  B4D8               	btfsc	status,2,c
 13018  014744  D0B8               	goto	l8129
 13019                           
 13020                           ; BSR set to: 0
 13021                           ;src\LCD_44780.c: 230: convertedInt[number_of_digits] = '\0';
 13022  014746  0100               	movlb	0	; () banked
 13023  014748  5188               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13024  01474A  0D01               	mullw	1
 13025  01474C  0E8F               	movlw	low LCD_write_integer@convertedInt
 13026  01474E  24F3               	addwf	prodl,w,c
 13027  014750  6ED9               	movwf	fsr2l,c
 13028  014752  0E00               	movlw	high LCD_write_integer@convertedInt
 13029  014754  20F4               	addwfc	prodh,w,c
 13030  014756  6EDA               	movwf	fsr2h,c
 13031  014758  0E00               	movlw	0
 13032  01475A  6EDF               	movwf	indf2,c
 13033                           
 13034                           ;src\LCD_44780.c: 234: while (!(convertedInt[number_of_digits-1] <= '9' && convertedInt[
      +                          number_of_digits-1] >= '0')){
 13035  01475C  D070               	goto	l8125
 13036  01475E                     l8107:
 13037                           
 13038                           ; BSR set to: 0
 13039                           ;src\LCD_44780.c: 236: for (index = number_of_digits-1; index > 0; index--){
 13040  01475E  0100               	movlb	0	; () banked
 13041  014760  0588               	decf	LCD_write_integer@number_of_digits& (0+255),w,b
 13042  014762  0100               	movlb	0	; () banked
 13043  014764  6F95               	movwf	LCD_write_integer@index& (0+255),b
 13044  014766                     l8109:
 13045                           
 13046                           ; BSR set to: 0
 13047  014766  0100               	movlb	0	; () banked
 13048  014768  5195               	movf	LCD_write_integer@index& (0+255),w,b
 13049  01476A  0100               	movlb	0	; () banked
 13050  01476C  B4D8               	btfsc	status,2,c
 13051  01476E  D067               	goto	l8125
 13052                           
 13053                           ; BSR set to: 0
 13054                           ;src\LCD_44780.c: 237: convertedInt[index] = convertedInt[index-1];
 13055                           
 13056                           ; BSR set to: 0
 13057                           
 13058                           ; BSR set to: 0
 13059  014770  0EFF               	movlw	255
 13060  014772  0100               	movlb	0	; () banked
 13061  014774  6F8A               	movwf	??_LCD_write_integer& (0+255),b
 13062  014776  0EFF               	movlw	255
 13063  014778  0100               	movlb	0	; () banked
 13064  01477A  6F8B               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13065  01477C  0100               	movlb	0	; () banked
 13066  01477E  5195               	movf	LCD_write_integer@index& (0+255),w,b
 13067  014780  0100               	movlb	0	; () banked
 13068  014782  6F8C               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13069  014784  6B8D               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13070  014786  0100               	movlb	0	; () banked
 13071  014788  518A               	movf	??_LCD_write_integer& (0+255),w,b
 13072  01478A  0100               	movlb	0	; () banked
 13073  01478C  278C               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13074  01478E  0100               	movlb	0	; () banked
 13075  014790  518B               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13076  014792  0100               	movlb	0	; () banked
 13077  014794  238D               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13078  014796  0E8F               	movlw	low LCD_write_integer@convertedInt
 13079  014798  0100               	movlb	0	; () banked
 13080  01479A  258C               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13081  01479C  6ED9               	movwf	fsr2l,c
 13082  01479E  0E00               	movlw	high LCD_write_integer@convertedInt
 13083  0147A0  0100               	movlb	0	; () banked
 13084  0147A2  218D               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13085  0147A4  6EDA               	movwf	fsr2h,c
 13086  0147A6  0100               	movlb	0	; () banked
 13087  0147A8  5195               	movf	LCD_write_integer@index& (0+255),w,b
 13088  0147AA  0D01               	mullw	1
 13089  0147AC  0E8F               	movlw	low LCD_write_integer@convertedInt
 13090  0147AE  24F3               	addwf	prodl,w,c
 13091  0147B0  6EE1               	movwf	fsr1l,c
 13092  0147B2  0E00               	movlw	high LCD_write_integer@convertedInt
 13093  0147B4  20F4               	addwfc	prodh,w,c
 13094  0147B6  6EE2               	movwf	fsr1h,c
 13095  0147B8  CFDF FFE7          	movff	indf2,indf1
 13096                           
 13097                           ; BSR set to: 0
 13098                           ;src\LCD_44780.c: 239: if (zero_cleaning == 0x01) {
 13099  0147BC  0100               	movlb	0	; () banked
 13100  0147BE  0589               	decf	LCD_write_integer@zero_cleaning& (0+255),w,b
 13101  0147C0  A4D8               	btfss	status,2,c
 13102  0147C2  D01D               	goto	l8119
 13103                           
 13104                           ; BSR set to: 0
 13105                           ;src\LCD_44780.c: 240: convertedInt[index-1] = ' ';
 13106  0147C4  0EFF               	movlw	255
 13107  0147C6  0100               	movlb	0	; () banked
 13108  0147C8  6F8A               	movwf	??_LCD_write_integer& (0+255),b
 13109  0147CA  0EFF               	movlw	255
 13110  0147CC  0100               	movlb	0	; () banked
 13111  0147CE  6F8B               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13112  0147D0  0100               	movlb	0	; () banked
 13113  0147D2  5195               	movf	LCD_write_integer@index& (0+255),w,b
 13114  0147D4  0100               	movlb	0	; () banked
 13115  0147D6  6F8C               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13116  0147D8  6B8D               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13117  0147DA  0100               	movlb	0	; () banked
 13118  0147DC  518A               	movf	??_LCD_write_integer& (0+255),w,b
 13119  0147DE  0100               	movlb	0	; () banked
 13120  0147E0  278C               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13121  0147E2  0100               	movlb	0	; () banked
 13122  0147E4  518B               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13123  0147E6  0100               	movlb	0	; () banked
 13124  0147E8  238D               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13125  0147EA  0E8F               	movlw	low LCD_write_integer@convertedInt
 13126  0147EC  0100               	movlb	0	; () banked
 13127  0147EE  258C               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13128  0147F0  6ED9               	movwf	fsr2l,c
 13129  0147F2  0E00               	movlw	high LCD_write_integer@convertedInt
 13130  0147F4  0100               	movlb	0	; () banked
 13131  0147F6  218D               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13132  0147F8  6EDA               	movwf	fsr2h,c
 13133  0147FA  0E20               	movlw	32
 13134  0147FC  D01C               	goto	L14
 13135  0147FE                     l8119:
 13136                           
 13137                           ; BSR set to: 0
 13138                           ;src\LCD_44780.c: 242: convertedInt[index-1] = '0';
 13139  0147FE  0EFF               	movlw	255
 13140  014800  0100               	movlb	0	; () banked
 13141  014802  6F8A               	movwf	??_LCD_write_integer& (0+255),b
 13142  014804  0EFF               	movlw	255
 13143  014806  0100               	movlb	0	; () banked
 13144  014808  6F8B               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13145  01480A  0100               	movlb	0	; () banked
 13146  01480C  5195               	movf	LCD_write_integer@index& (0+255),w,b
 13147  01480E  0100               	movlb	0	; () banked
 13148  014810  6F8C               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13149  014812  6B8D               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13150  014814  0100               	movlb	0	; () banked
 13151  014816  518A               	movf	??_LCD_write_integer& (0+255),w,b
 13152  014818  0100               	movlb	0	; () banked
 13153  01481A  278C               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13154  01481C  0100               	movlb	0	; () banked
 13155  01481E  518B               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13156  014820  0100               	movlb	0	; () banked
 13157  014822  238D               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13158  014824  0E8F               	movlw	low LCD_write_integer@convertedInt
 13159  014826  0100               	movlb	0	; () banked
 13160  014828  258C               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13161  01482A  6ED9               	movwf	fsr2l,c
 13162  01482C  0E00               	movlw	high LCD_write_integer@convertedInt
 13163  01482E  0100               	movlb	0	; () banked
 13164  014830  218D               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13165  014832  6EDA               	movwf	fsr2h,c
 13166  014834  0E30               	movlw	48
 13167  014836                     L14:
 13168  014836  6EDF               	movwf	indf2,c
 13169                           
 13170                           ; BSR set to: 0
 13171                           
 13172                           ; BSR set to: 0
 13173  014838  0100               	movlb	0	; () banked
 13174  01483A  0795               	decf	LCD_write_integer@index& (0+255),f,b
 13175  01483C  D794               	goto	l8109
 13176  01483E                     l8125:
 13177                           
 13178                           ; BSR set to: 0
 13179  01483E  0EFF               	movlw	255
 13180  014840  0100               	movlb	0	; () banked
 13181  014842  6F8A               	movwf	??_LCD_write_integer& (0+255),b
 13182  014844  0EFF               	movlw	255
 13183  014846  0100               	movlb	0	; () banked
 13184  014848  6F8B               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13185  01484A  0100               	movlb	0	; () banked
 13186  01484C  5188               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13187  01484E  0100               	movlb	0	; () banked
 13188  014850  6F8C               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13189  014852  6B8D               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13190  014854  0100               	movlb	0	; () banked
 13191  014856  518A               	movf	??_LCD_write_integer& (0+255),w,b
 13192  014858  0100               	movlb	0	; () banked
 13193  01485A  278C               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13194  01485C  0100               	movlb	0	; () banked
 13195  01485E  518B               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13196  014860  0100               	movlb	0	; () banked
 13197  014862  238D               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13198  014864  0E8F               	movlw	low LCD_write_integer@convertedInt
 13199  014866  0100               	movlb	0	; () banked
 13200  014868  258C               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13201  01486A  6ED9               	movwf	fsr2l,c
 13202  01486C  0E00               	movlw	high LCD_write_integer@convertedInt
 13203  01486E  0100               	movlb	0	; () banked
 13204  014870  218D               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13205  014872  6EDA               	movwf	fsr2h,c
 13206  014874  0E3A               	movlw	58
 13207  014876  60DF               	cpfslt	indf2,c
 13208  014878  D772               	goto	l8107
 13209                           
 13210                           ; BSR set to: 0
 13211  01487A  0EFF               	movlw	255
 13212  01487C  0100               	movlb	0	; () banked
 13213  01487E  6F8A               	movwf	??_LCD_write_integer& (0+255),b
 13214  014880  0EFF               	movlw	255
 13215  014882  0100               	movlb	0	; () banked
 13216  014884  6F8B               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13217  014886  0100               	movlb	0	; () banked
 13218  014888  5188               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13219  01488A  0100               	movlb	0	; () banked
 13220  01488C  6F8C               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13221  01488E  6B8D               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13222  014890  0100               	movlb	0	; () banked
 13223  014892  518A               	movf	??_LCD_write_integer& (0+255),w,b
 13224  014894  0100               	movlb	0	; () banked
 13225  014896  278C               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13226  014898  0100               	movlb	0	; () banked
 13227  01489A  518B               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13228  01489C  0100               	movlb	0	; () banked
 13229  01489E  238D               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13230  0148A0  0E8F               	movlw	low LCD_write_integer@convertedInt
 13231  0148A2  0100               	movlb	0	; () banked
 13232  0148A4  258C               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13233  0148A6  6ED9               	movwf	fsr2l,c
 13234  0148A8  0E00               	movlw	high LCD_write_integer@convertedInt
 13235  0148AA  0100               	movlb	0	; () banked
 13236  0148AC  218D               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13237  0148AE  6EDA               	movwf	fsr2h,c
 13238  0148B0  0E2F               	movlw	47
 13239  0148B2  64DF               	cpfsgt	indf2,c
 13240  0148B4  D754               	goto	l8107
 13241  0148B6                     l8129:
 13242                           
 13243                           ; BSR set to: 0
 13244                           ;src\LCD_44780.c: 243: }
 13245                           ;src\LCD_44780.c: 245: }
 13246                           ;src\LCD_44780.c: 246: }
 13247                           ;src\LCD_44780.c: 247: }
 13248                           ;src\LCD_44780.c: 249: LCD_write_string (convertedInt);
 13249  0148B6  0E8F               	movlw	low LCD_write_integer@convertedInt
 13250  0148B8  0100               	movlb	0	; () banked
 13251  0148BA  6F7F               	movwf	LCD_write_string@buffer& (0+255),b
 13252  0148BC  0E00               	movlw	high LCD_write_integer@convertedInt
 13253  0148BE  0100               	movlb	0	; () banked
 13254  0148C0  6F80               	movwf	(LCD_write_string@buffer+1)& (0+255),b
 13255  0148C2  ECD1  F0AE         	call	_LCD_write_string	;wreg free
 13256  0148C6  0012               	return		;funcret
 13257  0148C8                     __end_of_LCD_write_integer:
 13258                           	opt stack 0
 13259                           tblptru	equ	0xFF8
 13260                           tblptrh	equ	0xFF7
 13261                           tblptrl	equ	0xFF6
 13262                           tablat	equ	0xFF5
 13263                           prodh	equ	0xFF4
 13264                           prodl	equ	0xFF3
 13265                           intcon	equ	0xFF2
 13266                           postinc0	equ	0xFEE
 13267                           wreg	equ	0xFE8
 13268                           indf1	equ	0xFE7
 13269                           plusw1	equ	0xFE3
 13270                           fsr1h	equ	0xFE2
 13271                           fsr1l	equ	0xFE1
 13272                           indf2	equ	0xFDF
 13273                           postinc2	equ	0xFDE
 13274                           plusw2	equ	0xFDB
 13275                           fsr2h	equ	0xFDA
 13276                           fsr2l	equ	0xFD9
 13277                           status	equ	0xFD8
 13278                           
 13279 ;; *************** function _itoa *****************
 13280 ;; Defined at:
 13281 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\itoa.c"
 13282 ;; Parameters:    Size  Location     Type
 13283 ;;  buf             2   30[BANK0 ] PTR unsigned char 
 13284 ;;		 -> LCD_write_integer@convertedInt(6), 
 13285 ;;  val             2   32[BANK0 ] int 
 13286 ;;  base            2   34[BANK0 ] int 
 13287 ;; Auto vars:     Size  Location     Type
 13288 ;;  cp              2   36[BANK0 ] PTR unsigned char 
 13289 ;;		 -> LCD_write_integer@convertedInt(6), 
 13290 ;; Return value:  Size  Location     Type
 13291 ;;                  2   30[BANK0 ] PTR unsigned char 
 13292 ;; Registers used:
 13293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13294 ;; Tracked objects:
 13295 ;;		On entry : 0/0
 13296 ;;		On exit  : 0/0
 13297 ;;		Unchanged: 0/0
 13298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13299 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13300 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13302 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13303 ;;Total ram usage:        8 bytes
 13304 ;; Hardware stack levels used:    1
 13305 ;; Hardware stack levels required when called:    5
 13306 ;; This function calls:
 13307 ;;		_utoa
 13308 ;; This function is called by:
 13309 ;;		_LCD_write_integer
 13310 ;; This function uses a non-reentrant model
 13311 ;;
 13312                           
 13313                           	psect	text28
 13314  015B74                     __ptext28:
 13315                           	opt stack 0
 13316  015B74                     _itoa:
 13317                           	opt stack 23
 13318                           
 13319                           ;incstack = 0
 13320  015B74  C07E  F084         	movff	itoa@buf,itoa@cp
 13321  015B78  C07F  F085         	movff	itoa@buf+1,itoa@cp+1
 13322  015B7C  0100               	movlb	0	; () banked
 13323  015B7E  AF81               	btfss	(itoa@val+1)& (0+255),7,b
 13324  015B80  D00E               	goto	l5401
 13325                           
 13326                           ; BSR set to: 0
 13327  015B82  C07E  FFD9         	movff	itoa@buf,fsr2l
 13328  015B86  C07F  FFDA         	movff	itoa@buf+1,fsr2h
 13329  015B8A  0E2D               	movlw	45
 13330  015B8C  6EDF               	movwf	indf2,c
 13331                           
 13332                           ; BSR set to: 0
 13333  015B8E  0100               	movlb	0	; () banked
 13334  015B90  4B7E               	infsnz	itoa@buf& (0+255),f,b
 13335  015B92  2B7F               	incf	(itoa@buf+1)& (0+255),f,b
 13336                           
 13337                           ; BSR set to: 0
 13338  015B94  0100               	movlb	0	; () banked
 13339  015B96  6D80               	negf	itoa@val& (0+255),b
 13340  015B98  1F81               	comf	(itoa@val+1)& (0+255),f,b
 13341  015B9A  B0D8               	btfsc	status,0,c
 13342  015B9C  2B81               	incf	(itoa@val+1)& (0+255),f,b
 13343  015B9E                     l5401:
 13344                           
 13345                           ; BSR set to: 0
 13346  015B9E  C07E  F075         	movff	itoa@buf,utoa@buf
 13347  015BA2  C07F  F076         	movff	itoa@buf+1,utoa@buf+1
 13348  015BA6  C080  F077         	movff	itoa@val,utoa@val
 13349  015BAA  C081  F078         	movff	itoa@val+1,utoa@val+1
 13350  015BAE  C082  F079         	movff	itoa@base,utoa@base
 13351  015BB2  C083  F07A         	movff	itoa@base+1,utoa@base+1
 13352  015BB6  ECA7  F0AA         	call	_utoa	;wreg free
 13353  015BBA  0012               	return	
 13354  015BBC                     __end_of_itoa:
 13355                           	opt stack 0
 13356                           tblptru	equ	0xFF8
 13357                           tblptrh	equ	0xFF7
 13358                           tblptrl	equ	0xFF6
 13359                           tablat	equ	0xFF5
 13360                           prodh	equ	0xFF4
 13361                           prodl	equ	0xFF3
 13362                           intcon	equ	0xFF2
 13363                           postinc0	equ	0xFEE
 13364                           wreg	equ	0xFE8
 13365                           indf1	equ	0xFE7
 13366                           plusw1	equ	0xFE3
 13367                           fsr1h	equ	0xFE2
 13368                           fsr1l	equ	0xFE1
 13369                           indf2	equ	0xFDF
 13370                           postinc2	equ	0xFDE
 13371                           plusw2	equ	0xFDB
 13372                           fsr2h	equ	0xFDA
 13373                           fsr2l	equ	0xFD9
 13374                           status	equ	0xFD8
 13375                           
 13376 ;; *************** function _utoa *****************
 13377 ;; Defined at:
 13378 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\itoa.c"
 13379 ;; Parameters:    Size  Location     Type
 13380 ;;  buf             2   21[BANK0 ] PTR unsigned char 
 13381 ;;		 -> LCD_write_integer@convertedInt(6), 
 13382 ;;  val             2   23[BANK0 ] unsigned int 
 13383 ;;  base            2   25[BANK0 ] int 
 13384 ;; Auto vars:     Size  Location     Type
 13385 ;;  v               2   27[BANK0 ] unsigned int 
 13386 ;;  c               1   29[BANK0 ] unsigned char 
 13387 ;; Return value:  Size  Location     Type
 13388 ;;                  2   21[BANK0 ] PTR unsigned char 
 13389 ;; Registers used:
 13390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13391 ;; Tracked objects:
 13392 ;;		On entry : 0/0
 13393 ;;		On exit  : 0/0
 13394 ;;		Unchanged: 0/0
 13395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13396 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13397 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13399 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13400 ;;Total ram usage:        9 bytes
 13401 ;; Hardware stack levels used:    1
 13402 ;; Hardware stack levels required when called:    4
 13403 ;; This function calls:
 13404 ;;		___lwdiv
 13405 ;;		___lwmod
 13406 ;; This function is called by:
 13407 ;;		_itoa
 13408 ;; This function uses a non-reentrant model
 13409 ;;
 13410                           
 13411                           	psect	text29
 13412  01554E                     __ptext29:
 13413                           	opt stack 0
 13414  01554E                     _utoa:
 13415                           	opt stack 23
 13416                           
 13417                           ;incstack = 0
 13418  01554E  C077  F07B         	movff	utoa@val,utoa@v
 13419  015552  C078  F07C         	movff	utoa@val+1,utoa@v+1
 13420  015556                     l4943:
 13421  015556  C07B  F06E         	movff	utoa@v,___lwdiv@dividend
 13422  01555A  C07C  F06F         	movff	utoa@v+1,___lwdiv@dividend+1
 13423  01555E  C079  F070         	movff	utoa@base,___lwdiv@divisor
 13424  015562  C07A  F071         	movff	utoa@base+1,___lwdiv@divisor+1
 13425  015566  ECFF  F0AC         	call	___lwdiv	;wreg free
 13426  01556A  C06E  F07B         	movff	?___lwdiv,utoa@v
 13427  01556E  C06F  F07C         	movff	?___lwdiv+1,utoa@v+1
 13428  015572  0100               	movlb	0	; () banked
 13429  015574  4B75               	infsnz	utoa@buf& (0+255),f,b
 13430  015576  2B76               	incf	(utoa@buf+1)& (0+255),f,b
 13431                           
 13432                           ; BSR set to: 0
 13433  015578  0100               	movlb	0	; () banked
 13434  01557A  517B               	movf	utoa@v& (0+255),w,b
 13435  01557C  0100               	movlb	0	; () banked
 13436  01557E  117C               	iorwf	(utoa@v+1)& (0+255),w,b
 13437  015580  A4D8               	btfss	status,2,c
 13438  015582  D7E9               	goto	l4943
 13439                           
 13440                           ; BSR set to: 0
 13441                           
 13442                           ; BSR set to: 0
 13443  015584  C075  FFD9         	movff	utoa@buf,fsr2l
 13444  015588  C076  FFDA         	movff	utoa@buf+1,fsr2h
 13445  01558C  0E00               	movlw	0
 13446  01558E  6EDF               	movwf	indf2,c
 13447                           
 13448                           ; BSR set to: 0
 13449  015590  0100               	movlb	0	; () banked
 13450  015592  0775               	decf	utoa@buf& (0+255),f,b
 13451  015594  A0D8               	btfss	status,0,c
 13452  015596  0776               	decf	(utoa@buf+1)& (0+255),f,b
 13453  015598                     l4953:
 13454                           
 13455                           ; BSR set to: 0
 13456  015598  C077  F06E         	movff	utoa@val,___lwmod@dividend
 13457  01559C  C078  F06F         	movff	utoa@val+1,___lwmod@dividend+1
 13458  0155A0  C079  F070         	movff	utoa@base,___lwmod@divisor
 13459  0155A4  C07A  F071         	movff	utoa@base+1,___lwmod@divisor+1
 13460  0155A8  EC3B  F0AD         	call	___lwmod	;wreg free
 13461  0155AC  0100               	movlb	0	; () banked
 13462  0155AE  516E               	movf	?___lwmod& (0+255),w,b
 13463  0155B0  0100               	movlb	0	; () banked
 13464  0155B2  6F7D               	movwf	utoa@c& (0+255),b
 13465                           
 13466                           ; BSR set to: 0
 13467  0155B4  C077  F06E         	movff	utoa@val,___lwdiv@dividend
 13468  0155B8  C078  F06F         	movff	utoa@val+1,___lwdiv@dividend+1
 13469  0155BC  C079  F070         	movff	utoa@base,___lwdiv@divisor
 13470  0155C0  C07A  F071         	movff	utoa@base+1,___lwdiv@divisor+1
 13471  0155C4  ECFF  F0AC         	call	___lwdiv	;wreg free
 13472  0155C8  C06E  F077         	movff	?___lwdiv,utoa@val
 13473  0155CC  C06F  F078         	movff	?___lwdiv+1,utoa@val+1
 13474  0155D0  0E09               	movlw	9
 13475  0155D2  0100               	movlb	0	; () banked
 13476  0155D4  657D               	cpfsgt	utoa@c& (0+255),b
 13477  0155D6  D003               	goto	l1285
 13478                           
 13479                           ; BSR set to: 0
 13480  0155D8  0E07               	movlw	7
 13481  0155DA  0100               	movlb	0	; () banked
 13482  0155DC  277D               	addwf	utoa@c& (0+255),f,b
 13483  0155DE                     l1285:
 13484                           
 13485                           ; BSR set to: 0
 13486  0155DE  0E30               	movlw	48
 13487  0155E0  0100               	movlb	0	; () banked
 13488  0155E2  277D               	addwf	utoa@c& (0+255),f,b
 13489                           
 13490                           ; BSR set to: 0
 13491  0155E4  C075  FFD9         	movff	utoa@buf,fsr2l
 13492  0155E8  C076  FFDA         	movff	utoa@buf+1,fsr2h
 13493  0155EC  C07D  FFDF         	movff	utoa@c,indf2
 13494                           
 13495                           ; BSR set to: 0
 13496  0155F0  0100               	movlb	0	; () banked
 13497  0155F2  0775               	decf	utoa@buf& (0+255),f,b
 13498  0155F4  A0D8               	btfss	status,0,c
 13499  0155F6  0776               	decf	(utoa@buf+1)& (0+255),f,b
 13500                           
 13501                           ; BSR set to: 0
 13502  0155F8  0100               	movlb	0	; () banked
 13503  0155FA  5177               	movf	utoa@val& (0+255),w,b
 13504  0155FC  0100               	movlb	0	; () banked
 13505  0155FE  1178               	iorwf	(utoa@val+1)& (0+255),w,b
 13506  015600  A4D8               	btfss	status,2,c
 13507  015602  D7CA               	goto	l4953
 13508                           
 13509                           ; BSR set to: 0
 13510                           ;	Return value of _utoa is never used
 13511                           
 13512                           ; BSR set to: 0
 13513  015604  0100               	movlb	0	; () banked
 13514  015606  4B75               	infsnz	utoa@buf& (0+255),f,b
 13515  015608  2B76               	incf	(utoa@buf+1)& (0+255),f,b
 13516  01560A  0012               	return	
 13517  01560C                     __end_of_utoa:
 13518                           	opt stack 0
 13519                           tblptru	equ	0xFF8
 13520                           tblptrh	equ	0xFF7
 13521                           tblptrl	equ	0xFF6
 13522                           tablat	equ	0xFF5
 13523                           prodh	equ	0xFF4
 13524                           prodl	equ	0xFF3
 13525                           intcon	equ	0xFF2
 13526                           postinc0	equ	0xFEE
 13527                           wreg	equ	0xFE8
 13528                           indf1	equ	0xFE7
 13529                           plusw1	equ	0xFE3
 13530                           fsr1h	equ	0xFE2
 13531                           fsr1l	equ	0xFE1
 13532                           indf2	equ	0xFDF
 13533                           postinc2	equ	0xFDE
 13534                           plusw2	equ	0xFDB
 13535                           fsr2h	equ	0xFDA
 13536                           fsr2l	equ	0xFD9
 13537                           status	equ	0xFD8
 13538                           
 13539 ;; *************** function ___lwmod *****************
 13540 ;; Defined at:
 13541 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 13542 ;; Parameters:    Size  Location     Type
 13543 ;;  dividend        2   14[BANK0 ] unsigned int 
 13544 ;;  divisor         2   16[BANK0 ] unsigned int 
 13545 ;; Auto vars:     Size  Location     Type
 13546 ;;  counter         1   18[BANK0 ] unsigned char 
 13547 ;; Return value:  Size  Location     Type
 13548 ;;                  2   14[BANK0 ] unsigned int 
 13549 ;; Registers used:
 13550 ;;		wreg, status,2, status,0
 13551 ;; Tracked objects:
 13552 ;;		On entry : 0/0
 13553 ;;		On exit  : 0/0
 13554 ;;		Unchanged: 0/0
 13555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13556 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13557 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13559 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13560 ;;Total ram usage:        5 bytes
 13561 ;; Hardware stack levels used:    1
 13562 ;; Hardware stack levels required when called:    3
 13563 ;; This function calls:
 13564 ;;		Nothing
 13565 ;; This function is called by:
 13566 ;;		_utoa
 13567 ;; This function uses a non-reentrant model
 13568 ;;
 13569                           
 13570                           	psect	text30
 13571  015A76                     __ptext30:
 13572                           	opt stack 0
 13573  015A76                     ___lwmod:
 13574                           	opt stack 23
 13575                           
 13576                           ; BSR set to: 0
 13577                           ;incstack = 0
 13578  015A76  0100               	movlb	0	; () banked
 13579  015A78  5170               	movf	___lwmod@divisor& (0+255),w,b
 13580  015A7A  0100               	movlb	0	; () banked
 13581  015A7C  1171               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 13582  015A7E  B4D8               	btfsc	status,2,c
 13583  015A80  D026               	goto	l1374
 13584                           
 13585                           ; BSR set to: 0
 13586  015A82  0E01               	movlw	1
 13587  015A84  0100               	movlb	0	; () banked
 13588  015A86  6F72               	movwf	___lwmod@counter& (0+255),b
 13589  015A88  D006               	goto	l4501
 13590  015A8A                     l4499:
 13591                           
 13592                           ; BSR set to: 0
 13593  015A8A  0100               	movlb	0	; () banked
 13594  015A8C  90D8               	bcf	status,0,c
 13595  015A8E  3770               	rlcf	___lwmod@divisor& (0+255),f,b
 13596  015A90  3771               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 13597  015A92  0100               	movlb	0	; () banked
 13598  015A94  2B72               	incf	___lwmod@counter& (0+255),f,b
 13599  015A96                     l4501:
 13600                           
 13601                           ; BSR set to: 0
 13602  015A96  0100               	movlb	0	; () banked
 13603  015A98  AF71               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 13604  015A9A  D7F7               	goto	l4499
 13605  015A9C                     l4503:
 13606                           
 13607                           ; BSR set to: 0
 13608  015A9C  0100               	movlb	0	; () banked
 13609  015A9E  5170               	movf	___lwmod@divisor& (0+255),w,b
 13610  015AA0  0100               	movlb	0	; () banked
 13611  015AA2  5D6E               	subwf	___lwmod@dividend& (0+255),w,b
 13612  015AA4  0100               	movlb	0	; () banked
 13613  015AA6  5171               	movf	(___lwmod@divisor+1)& (0+255),w,b
 13614  015AA8  0100               	movlb	0	; () banked
 13615  015AAA  596F               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 13616  015AAC  A0D8               	btfss	status,0,c
 13617  015AAE  D008               	goto	l4507
 13618                           
 13619                           ; BSR set to: 0
 13620  015AB0  0100               	movlb	0	; () banked
 13621  015AB2  5170               	movf	___lwmod@divisor& (0+255),w,b
 13622  015AB4  0100               	movlb	0	; () banked
 13623  015AB6  5F6E               	subwf	___lwmod@dividend& (0+255),f,b
 13624  015AB8  0100               	movlb	0	; () banked
 13625  015ABA  5171               	movf	(___lwmod@divisor+1)& (0+255),w,b
 13626  015ABC  0100               	movlb	0	; () banked
 13627  015ABE  5B6F               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 13628  015AC0                     l4507:
 13629                           
 13630                           ; BSR set to: 0
 13631  015AC0  0100               	movlb	0	; () banked
 13632  015AC2  90D8               	bcf	status,0,c
 13633  015AC4  3371               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 13634  015AC6  3370               	rrcf	___lwmod@divisor& (0+255),f,b
 13635                           
 13636                           ; BSR set to: 0
 13637  015AC8  0100               	movlb	0	; () banked
 13638  015ACA  2F72               	decfsz	___lwmod@counter& (0+255),f,b
 13639  015ACC  D7E7               	goto	l4503
 13640  015ACE                     l1374:
 13641                           
 13642                           ; BSR set to: 0
 13643  015ACE  C06E  F06E         	movff	___lwmod@dividend,?___lwmod
 13644  015AD2  C06F  F06F         	movff	___lwmod@dividend+1,?___lwmod+1
 13645                           
 13646                           ; BSR set to: 0
 13647  015AD6  0012               	return		;funcret
 13648  015AD8                     __end_of___lwmod:
 13649                           	opt stack 0
 13650                           tblptru	equ	0xFF8
 13651                           tblptrh	equ	0xFF7
 13652                           tblptrl	equ	0xFF6
 13653                           tablat	equ	0xFF5
 13654                           prodh	equ	0xFF4
 13655                           prodl	equ	0xFF3
 13656                           intcon	equ	0xFF2
 13657                           postinc0	equ	0xFEE
 13658                           wreg	equ	0xFE8
 13659                           indf1	equ	0xFE7
 13660                           plusw1	equ	0xFE3
 13661                           fsr1h	equ	0xFE2
 13662                           fsr1l	equ	0xFE1
 13663                           indf2	equ	0xFDF
 13664                           postinc2	equ	0xFDE
 13665                           plusw2	equ	0xFDB
 13666                           fsr2h	equ	0xFDA
 13667                           fsr2l	equ	0xFD9
 13668                           status	equ	0xFD8
 13669                           
 13670 ;; *************** function ___lwdiv *****************
 13671 ;; Defined at:
 13672 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 13673 ;; Parameters:    Size  Location     Type
 13674 ;;  dividend        2   14[BANK0 ] unsigned int 
 13675 ;;  divisor         2   16[BANK0 ] unsigned int 
 13676 ;; Auto vars:     Size  Location     Type
 13677 ;;  quotient        2   18[BANK0 ] unsigned int 
 13678 ;;  counter         1   20[BANK0 ] unsigned char 
 13679 ;; Return value:  Size  Location     Type
 13680 ;;                  2   14[BANK0 ] unsigned int 
 13681 ;; Registers used:
 13682 ;;		wreg, status,2, status,0
 13683 ;; Tracked objects:
 13684 ;;		On entry : 0/0
 13685 ;;		On exit  : 0/0
 13686 ;;		Unchanged: 0/0
 13687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13688 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13689 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13691 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13692 ;;Total ram usage:        7 bytes
 13693 ;; Hardware stack levels used:    1
 13694 ;; Hardware stack levels required when called:    3
 13695 ;; This function calls:
 13696 ;;		Nothing
 13697 ;; This function is called by:
 13698 ;;		_utoa
 13699 ;; This function uses a non-reentrant model
 13700 ;;
 13701                           
 13702                           	psect	text31
 13703  0159FE                     __ptext31:
 13704                           	opt stack 0
 13705  0159FE                     ___lwdiv:
 13706                           	opt stack 23
 13707                           
 13708                           ; BSR set to: 0
 13709                           ;incstack = 0
 13710  0159FE  0E00               	movlw	0
 13711  015A00  0100               	movlb	0	; () banked
 13712  015A02  6F73               	movwf	(___lwdiv@quotient+1)& (0+255),b
 13713  015A04  0E00               	movlw	0
 13714  015A06  6F72               	movwf	___lwdiv@quotient& (0+255),b
 13715                           
 13716                           ; BSR set to: 0
 13717  015A08  0100               	movlb	0	; () banked
 13718  015A0A  5170               	movf	___lwdiv@divisor& (0+255),w,b
 13719  015A0C  0100               	movlb	0	; () banked
 13720  015A0E  1171               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 13721  015A10  B4D8               	btfsc	status,2,c
 13722  015A12  D02C               	goto	l1364
 13723                           
 13724                           ; BSR set to: 0
 13725  015A14  0E01               	movlw	1
 13726  015A16  0100               	movlb	0	; () banked
 13727  015A18  6F74               	movwf	___lwdiv@counter& (0+255),b
 13728  015A1A  D006               	goto	l4481
 13729  015A1C                     l4479:
 13730                           
 13731                           ; BSR set to: 0
 13732  015A1C  0100               	movlb	0	; () banked
 13733  015A1E  90D8               	bcf	status,0,c
 13734  015A20  3770               	rlcf	___lwdiv@divisor& (0+255),f,b
 13735  015A22  3771               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 13736  015A24  0100               	movlb	0	; () banked
 13737  015A26  2B74               	incf	___lwdiv@counter& (0+255),f,b
 13738  015A28                     l4481:
 13739                           
 13740                           ; BSR set to: 0
 13741  015A28  0100               	movlb	0	; () banked
 13742  015A2A  AF71               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 13743  015A2C  D7F7               	goto	l4479
 13744  015A2E                     l4483:
 13745                           
 13746                           ; BSR set to: 0
 13747  015A2E  0100               	movlb	0	; () banked
 13748  015A30  90D8               	bcf	status,0,c
 13749  015A32  3772               	rlcf	___lwdiv@quotient& (0+255),f,b
 13750  015A34  3773               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 13751                           
 13752                           ; BSR set to: 0
 13753  015A36  0100               	movlb	0	; () banked
 13754  015A38  5170               	movf	___lwdiv@divisor& (0+255),w,b
 13755  015A3A  0100               	movlb	0	; () banked
 13756  015A3C  5D6E               	subwf	___lwdiv@dividend& (0+255),w,b
 13757  015A3E  0100               	movlb	0	; () banked
 13758  015A40  5171               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 13759  015A42  0100               	movlb	0	; () banked
 13760  015A44  596F               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 13761  015A46  A0D8               	btfss	status,0,c
 13762  015A48  D00A               	goto	l4491
 13763                           
 13764                           ; BSR set to: 0
 13765  015A4A  0100               	movlb	0	; () banked
 13766  015A4C  5170               	movf	___lwdiv@divisor& (0+255),w,b
 13767  015A4E  0100               	movlb	0	; () banked
 13768  015A50  5F6E               	subwf	___lwdiv@dividend& (0+255),f,b
 13769  015A52  0100               	movlb	0	; () banked
 13770  015A54  5171               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 13771  015A56  0100               	movlb	0	; () banked
 13772  015A58  5B6F               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 13773                           
 13774                           ; BSR set to: 0
 13775  015A5A  0100               	movlb	0	; () banked
 13776  015A5C  8172               	bsf	___lwdiv@quotient& (0+255),0,b
 13777  015A5E                     l4491:
 13778                           
 13779                           ; BSR set to: 0
 13780  015A5E  0100               	movlb	0	; () banked
 13781  015A60  90D8               	bcf	status,0,c
 13782  015A62  3371               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 13783  015A64  3370               	rrcf	___lwdiv@divisor& (0+255),f,b
 13784                           
 13785                           ; BSR set to: 0
 13786  015A66  0100               	movlb	0	; () banked
 13787  015A68  2F74               	decfsz	___lwdiv@counter& (0+255),f,b
 13788  015A6A  D7E1               	goto	l4483
 13789  015A6C                     l1364:
 13790                           
 13791                           ; BSR set to: 0
 13792  015A6C  C072  F06E         	movff	___lwdiv@quotient,?___lwdiv
 13793  015A70  C073  F06F         	movff	___lwdiv@quotient+1,?___lwdiv+1
 13794                           
 13795                           ; BSR set to: 0
 13796  015A74  0012               	return		;funcret
 13797  015A76                     __end_of___lwdiv:
 13798                           	opt stack 0
 13799                           tblptru	equ	0xFF8
 13800                           tblptrh	equ	0xFF7
 13801                           tblptrl	equ	0xFF6
 13802                           tablat	equ	0xFF5
 13803                           prodh	equ	0xFF4
 13804                           prodl	equ	0xFF3
 13805                           intcon	equ	0xFF2
 13806                           postinc0	equ	0xFEE
 13807                           wreg	equ	0xFE8
 13808                           indf1	equ	0xFE7
 13809                           plusw1	equ	0xFE3
 13810                           fsr1h	equ	0xFE2
 13811                           fsr1l	equ	0xFE1
 13812                           indf2	equ	0xFDF
 13813                           postinc2	equ	0xFDE
 13814                           plusw2	equ	0xFDB
 13815                           fsr2h	equ	0xFDA
 13816                           fsr2l	equ	0xFD9
 13817                           status	equ	0xFD8
 13818                           
 13819 ;; *************** function _LCD_write_string *****************
 13820 ;; Defined at:
 13821 ;;		line 194 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 13822 ;; Parameters:    Size  Location     Type
 13823 ;;  buffer          2   31[BANK0 ] PTR unsigned char 
 13824 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
 13825 ;; Auto vars:     Size  Location     Type
 13826 ;;		None
 13827 ;; Return value:  Size  Location     Type
 13828 ;;		None               void
 13829 ;; Registers used:
 13830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13831 ;; Tracked objects:
 13832 ;;		On entry : 0/0
 13833 ;;		On exit  : 0/0
 13834 ;;		Unchanged: 0/0
 13835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13836 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13839 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13840 ;;Total ram usage:        2 bytes
 13841 ;; Hardware stack levels used:    1
 13842 ;; Hardware stack levels required when called:    8
 13843 ;; This function calls:
 13844 ;;		_LCD_write_char
 13845 ;; This function is called by:
 13846 ;;		_LCD_write_integer
 13847 ;;		_LCD_Handler
 13848 ;; This function uses a non-reentrant model
 13849 ;;
 13850                           
 13851                           	psect	text32
 13852  015DA2                     __ptext32:
 13853                           	opt stack 0
 13854  015DA2                     _LCD_write_string:
 13855                           	opt stack 21
 13856                           
 13857                           ;src\LCD_44780.c: 197: while(*buffer){
 13858                           
 13859                           ; BSR set to: 0
 13860                           ;incstack = 0
 13861  015DA2  D00A               	goto	l7725
 13862  015DA4                     l7721:
 13863                           
 13864                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 13865  015DA4  C07F  FFD9         	movff	LCD_write_string@buffer,fsr2l
 13866  015DA8  C080  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 13867  015DAC  50DF               	movf	indf2,w,c
 13868  015DAE  ECB4  F0AC         	call	_LCD_write_char
 13869                           
 13870                           ;src\LCD_44780.c: 202: buffer++;
 13871  015DB2  0100               	movlb	0	; () banked
 13872  015DB4  4B7F               	infsnz	LCD_write_string@buffer& (0+255),f,b
 13873  015DB6  2B80               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 13874  015DB8                     l7725:
 13875  015DB8  C07F  FFD9         	movff	LCD_write_string@buffer,fsr2l
 13876  015DBC  C080  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 13877  015DC0  50DF               	movf	indf2,w,c
 13878  015DC2  B4D8               	btfsc	status,2,c
 13879  015DC4  0012               	return	
 13880  015DC6  D7EE               	goto	l7721
 13881  015DC8                     __end_of_LCD_write_string:
 13882                           	opt stack 0
 13883                           tblptru	equ	0xFF8
 13884                           tblptrh	equ	0xFF7
 13885                           tblptrl	equ	0xFF6
 13886                           tablat	equ	0xFF5
 13887                           prodh	equ	0xFF4
 13888                           prodl	equ	0xFF3
 13889                           intcon	equ	0xFF2
 13890                           postinc0	equ	0xFEE
 13891                           wreg	equ	0xFE8
 13892                           indf1	equ	0xFE7
 13893                           plusw1	equ	0xFE3
 13894                           fsr1h	equ	0xFE2
 13895                           fsr1l	equ	0xFE1
 13896                           indf2	equ	0xFDF
 13897                           postinc2	equ	0xFDE
 13898                           plusw2	equ	0xFDB
 13899                           fsr2h	equ	0xFDA
 13900                           fsr2l	equ	0xFD9
 13901                           status	equ	0xFD8
 13902                           
 13903 ;; *************** function _LCD_write_char *****************
 13904 ;; Defined at:
 13905 ;;		line 145 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 13906 ;; Parameters:    Size  Location     Type
 13907 ;;  value           1    wreg     unsigned char 
 13908 ;; Auto vars:     Size  Location     Type
 13909 ;;  value           1   30[BANK0 ] unsigned char 
 13910 ;;  D0              1   29[BANK0 ] unsigned char 
 13911 ;;  D1              1   28[BANK0 ] unsigned char 
 13912 ;;  D2              1   27[BANK0 ] unsigned char 
 13913 ;;  D3              1   26[BANK0 ] unsigned char 
 13914 ;; Return value:  Size  Location     Type
 13915 ;;		None               void
 13916 ;; Registers used:
 13917 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13918 ;; Tracked objects:
 13919 ;;		On entry : 0/0
 13920 ;;		On exit  : 0/0
 13921 ;;		Unchanged: 0/0
 13922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13924 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13926 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13927 ;;Total ram usage:        5 bytes
 13928 ;; Hardware stack levels used:    1
 13929 ;; Hardware stack levels required when called:    7
 13930 ;; This function calls:
 13931 ;;		_LCD_send_command
 13932 ;; This function is called by:
 13933 ;;		_LCD_write_message
 13934 ;;		_LCD_write_string
 13935 ;; This function uses a non-reentrant model
 13936 ;;
 13937                           
 13938                           	psect	text33
 13939  015968                     __ptext33:
 13940                           	opt stack 0
 13941  015968                     _LCD_write_char:
 13942                           	opt stack 21
 13943                           
 13944                           ;incstack = 0
 13945                           ;LCD_write_char@value stored from wreg
 13946  015968  0100               	movlb	0	; () banked
 13947  01596A  6F7E               	movwf	LCD_write_char@value& (0+255),b
 13948                           
 13949                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 13950                           ;src\LCD_44780.c: 149: LATEbits.LATE2 = 1;
 13951  01596C  848D               	bsf	3981,2,c	;volatile
 13952                           
 13953                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 13954  01596E  0100               	movlb	0	; () banked
 13955  015970  457E               	rlncf	LCD_write_char@value& (0+255),w,b
 13956  015972  0B01               	andlw	1
 13957  015974  0100               	movlb	0	; () banked
 13958  015976  6F7A               	movwf	LCD_write_char@D3& (0+255),b
 13959                           
 13960                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 13961  015978  0100               	movlb	0	; () banked
 13962  01597A  457E               	rlncf	LCD_write_char@value& (0+255),w,b
 13963  01597C  46E8               	rlncf	wreg,f,c
 13964  01597E  0B03               	andlw	3
 13965  015980  0B01               	andlw	1
 13966  015982  0100               	movlb	0	; () banked
 13967  015984  6F7B               	movwf	LCD_write_char@D2& (0+255),b
 13968                           
 13969                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 13970  015986  0100               	movlb	0	; () banked
 13971  015988  397E               	swapf	LCD_write_char@value& (0+255),w,b
 13972  01598A  42E8               	rrncf	wreg,f,c
 13973  01598C  0B07               	andlw	7
 13974  01598E  0B01               	andlw	1
 13975  015990  0100               	movlb	0	; () banked
 13976  015992  6F7C               	movwf	LCD_write_char@D1& (0+255),b
 13977                           
 13978                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 13979  015994  0100               	movlb	0	; () banked
 13980  015996  397E               	swapf	LCD_write_char@value& (0+255),w,b
 13981  015998  0B0F               	andlw	15
 13982  01599A  0B01               	andlw	1
 13983  01599C  0100               	movlb	0	; () banked
 13984  01599E  6F7D               	movwf	LCD_write_char@D0& (0+255),b
 13985                           
 13986                           ; BSR set to: 0
 13987                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 13988  0159A0  C07B  F076         	movff	LCD_write_char@D2,LCD_send_command@D2
 13989  0159A4  C07C  F077         	movff	LCD_write_char@D1,LCD_send_command@D1
 13990  0159A8  C07D  F078         	movff	LCD_write_char@D0,LCD_send_command@D0
 13991  0159AC  0100               	movlb	0	; () banked
 13992  0159AE  517A               	movf	LCD_write_char@D3& (0+255),w,b
 13993  0159B0  ECFF  F0AD         	call	_LCD_send_command
 13994                           
 13995                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 13996  0159B4  0100               	movlb	0	; () banked
 13997  0159B6  397E               	swapf	LCD_write_char@value& (0+255),w,b
 13998  0159B8  46E8               	rlncf	wreg,f,c
 13999  0159BA  0B1F               	andlw	31
 14000  0159BC  0B01               	andlw	1
 14001  0159BE  0100               	movlb	0	; () banked
 14002  0159C0  6F7A               	movwf	LCD_write_char@D3& (0+255),b
 14003                           
 14004                           ; BSR set to: 0
 14005                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 14006  0159C2  0100               	movlb	0	; () banked
 14007  0159C4  417E               	rrncf	LCD_write_char@value& (0+255),w,b
 14008  0159C6  42E8               	rrncf	wreg,f,c
 14009  0159C8  0B3F               	andlw	63
 14010  0159CA  0B01               	andlw	1
 14011  0159CC  0100               	movlb	0	; () banked
 14012  0159CE  6F7B               	movwf	LCD_write_char@D2& (0+255),b
 14013                           
 14014                           ; BSR set to: 0
 14015                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 14016  0159D0  0100               	movlb	0	; () banked
 14017  0159D2  90D8               	bcf	status,0,c
 14018  0159D4  317E               	rrcf	LCD_write_char@value& (0+255),w,b
 14019  0159D6  0B01               	andlw	1
 14020  0159D8  0100               	movlb	0	; () banked
 14021  0159DA  6F7C               	movwf	LCD_write_char@D1& (0+255),b
 14022                           
 14023                           ; BSR set to: 0
 14024                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 14025  0159DC  0100               	movlb	0	; () banked
 14026  0159DE  517E               	movf	LCD_write_char@value& (0+255),w,b
 14027  0159E0  0B01               	andlw	1
 14028  0159E2  0100               	movlb	0	; () banked
 14029  0159E4  6F7D               	movwf	LCD_write_char@D0& (0+255),b
 14030                           
 14031                           ; BSR set to: 0
 14032                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 14033  0159E6  C07B  F076         	movff	LCD_write_char@D2,LCD_send_command@D2
 14034  0159EA  C07C  F077         	movff	LCD_write_char@D1,LCD_send_command@D1
 14035  0159EE  C07D  F078         	movff	LCD_write_char@D0,LCD_send_command@D0
 14036  0159F2  0100               	movlb	0	; () banked
 14037  0159F4  517A               	movf	LCD_write_char@D3& (0+255),w,b
 14038  0159F6  ECFF  F0AD         	call	_LCD_send_command
 14039                           
 14040                           ;src\LCD_44780.c: 167: LATEbits.LATE2 = 0;
 14041  0159FA  948D               	bcf	3981,2,c	;volatile
 14042  0159FC  0012               	return		;funcret
 14043  0159FE                     __end_of_LCD_write_char:
 14044                           	opt stack 0
 14045                           tblptru	equ	0xFF8
 14046                           tblptrh	equ	0xFF7
 14047                           tblptrl	equ	0xFF6
 14048                           tablat	equ	0xFF5
 14049                           prodh	equ	0xFF4
 14050                           prodl	equ	0xFF3
 14051                           intcon	equ	0xFF2
 14052                           postinc0	equ	0xFEE
 14053                           wreg	equ	0xFE8
 14054                           indf1	equ	0xFE7
 14055                           plusw1	equ	0xFE3
 14056                           fsr1h	equ	0xFE2
 14057                           fsr1l	equ	0xFE1
 14058                           indf2	equ	0xFDF
 14059                           postinc2	equ	0xFDE
 14060                           plusw2	equ	0xFDB
 14061                           fsr2h	equ	0xFDA
 14062                           fsr2l	equ	0xFD9
 14063                           status	equ	0xFD8
 14064                           
 14065 ;; *************** function _LCD_initialize *****************
 14066 ;; Defined at:
 14067 ;;		line 283 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14068 ;; Parameters:    Size  Location     Type
 14069 ;;  quartz_frequ    1    wreg     unsigned char 
 14070 ;; Auto vars:     Size  Location     Type
 14071 ;;  quartz_frequ    1   28[BANK0 ] unsigned char 
 14072 ;; Return value:  Size  Location     Type
 14073 ;;		None               void
 14074 ;; Registers used:
 14075 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14076 ;; Tracked objects:
 14077 ;;		On entry : 0/0
 14078 ;;		On exit  : 0/0
 14079 ;;		Unchanged: 0/0
 14080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14082 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14084 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14085 ;;Total ram usage:        1 bytes
 14086 ;; Hardware stack levels used:    1
 14087 ;; Hardware stack levels required when called:    8
 14088 ;; This function calls:
 14089 ;;		_LCD_clear
 14090 ;;		_LCD_cursor
 14091 ;;		_LCD_send_command
 14092 ;;		_delay_ms
 14093 ;;		_delay_set_quartz
 14094 ;; This function is called by:
 14095 ;;		_main
 14096 ;;		_LCD_Handler
 14097 ;;		_board_initialization
 14098 ;; This function uses a non-reentrant model
 14099 ;;
 14100                           
 14101                           	psect	text34
 14102  014F00                     __ptext34:
 14103                           	opt stack 0
 14104  014F00                     _LCD_initialize:
 14105                           	opt stack 21
 14106                           
 14107                           ;incstack = 0
 14108                           ;LCD_initialize@quartz_frequency stored from wreg
 14109  014F00  0100               	movlb	0	; () banked
 14110  014F02  6F7C               	movwf	LCD_initialize@quartz_frequency& (0+255),b
 14111                           
 14112                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
 14113  014F04  0100               	movlb	0	; () banked
 14114  014F06  517C               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
 14115  014F08  EC3A  F0AF         	call	_delay_set_quartz
 14116                           
 14117                           ;src\LCD_44780.c: 287: LATEbits.LATE2 = 0x00;
 14118  014F0C  948D               	bcf	3981,2,c	;volatile
 14119                           
 14120                           ;src\LCD_44780.c: 288: LATCbits.LATC1 = 0x00;
 14121  014F0E  928B               	bcf	3979,1,c	;volatile
 14122                           
 14123                           ;src\LCD_44780.c: 289: LATCbits.LATC0 = 0x00;
 14124  014F10  908B               	bcf	3979,0,c	;volatile
 14125                           
 14126                           ;src\LCD_44780.c: 291: delay_ms (100);
 14127  014F12  0E00               	movlw	0
 14128  014F14  0100               	movlb	0	; () banked
 14129  014F16  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
 14130  014F18  0E64               	movlw	100
 14131  014F1A  6F74               	movwf	delay_ms@value_ms& (0+255),b
 14132  014F1C  EC1C  F0AE         	call	_delay_ms	;wreg free
 14133                           
 14134                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
 14135  014F20  0E00               	movlw	0
 14136  014F22  0100               	movlb	0	; () banked
 14137  014F24  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14138  014F26  0E01               	movlw	1
 14139  014F28  0100               	movlb	0	; () banked
 14140  014F2A  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14141  014F2C  0E01               	movlw	1
 14142  014F2E  0100               	movlb	0	; () banked
 14143  014F30  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14144  014F32  0E00               	movlw	0
 14145  014F34  ECFF  F0AD         	call	_LCD_send_command
 14146                           
 14147                           ;src\LCD_44780.c: 293: delay_ms (100);
 14148  014F38  0E00               	movlw	0
 14149  014F3A  0100               	movlb	0	; () banked
 14150  014F3C  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
 14151  014F3E  0E64               	movlw	100
 14152  014F40  6F74               	movwf	delay_ms@value_ms& (0+255),b
 14153  014F42  EC1C  F0AE         	call	_delay_ms	;wreg free
 14154                           
 14155                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
 14156  014F46  0E00               	movlw	0
 14157  014F48  0100               	movlb	0	; () banked
 14158  014F4A  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14159  014F4C  0E01               	movlw	1
 14160  014F4E  0100               	movlb	0	; () banked
 14161  014F50  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14162  014F52  0E01               	movlw	1
 14163  014F54  0100               	movlb	0	; () banked
 14164  014F56  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14165  014F58  0E00               	movlw	0
 14166  014F5A  ECFF  F0AD         	call	_LCD_send_command
 14167                           
 14168                           ;src\LCD_44780.c: 295: delay_ms (10);
 14169  014F5E  0E00               	movlw	0
 14170  014F60  0100               	movlb	0	; () banked
 14171  014F62  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
 14172  014F64  0E0A               	movlw	10
 14173  014F66  6F74               	movwf	delay_ms@value_ms& (0+255),b
 14174  014F68  EC1C  F0AE         	call	_delay_ms	;wreg free
 14175                           
 14176                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
 14177  014F6C  0E00               	movlw	0
 14178  014F6E  0100               	movlb	0	; () banked
 14179  014F70  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14180  014F72  0E01               	movlw	1
 14181  014F74  0100               	movlb	0	; () banked
 14182  014F76  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14183  014F78  0E01               	movlw	1
 14184  014F7A  0100               	movlb	0	; () banked
 14185  014F7C  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14186  014F7E  0E00               	movlw	0
 14187  014F80  ECFF  F0AD         	call	_LCD_send_command
 14188                           
 14189                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
 14190  014F84  0E00               	movlw	0
 14191  014F86  0100               	movlb	0	; () banked
 14192  014F88  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14193  014F8A  0E01               	movlw	1
 14194  014F8C  0100               	movlb	0	; () banked
 14195  014F8E  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14196  014F90  0E00               	movlw	0
 14197  014F92  0100               	movlb	0	; () banked
 14198  014F94  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14199  014F96  0E00               	movlw	0
 14200  014F98  ECFF  F0AD         	call	_LCD_send_command
 14201                           
 14202                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
 14203  014F9C  0E00               	movlw	0
 14204  014F9E  0100               	movlb	0	; () banked
 14205  014FA0  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14206  014FA2  0E01               	movlw	1
 14207  014FA4  0100               	movlb	0	; () banked
 14208  014FA6  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14209  014FA8  0E00               	movlw	0
 14210  014FAA  0100               	movlb	0	; () banked
 14211  014FAC  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14212  014FAE  0E00               	movlw	0
 14213  014FB0  ECFF  F0AD         	call	_LCD_send_command
 14214                           
 14215                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
 14216  014FB4  0E00               	movlw	0
 14217  014FB6  0100               	movlb	0	; () banked
 14218  014FB8  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14219  014FBA  0E00               	movlw	0
 14220  014FBC  0100               	movlb	0	; () banked
 14221  014FBE  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14222  014FC0  0E00               	movlw	0
 14223  014FC2  0100               	movlb	0	; () banked
 14224  014FC4  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14225  014FC6  0E01               	movlw	1
 14226  014FC8  ECFF  F0AD         	call	_LCD_send_command
 14227                           
 14228                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
 14229  014FCC  0E00               	movlw	0
 14230  014FCE  0100               	movlb	0	; () banked
 14231  014FD0  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14232  014FD2  0E00               	movlw	0
 14233  014FD4  0100               	movlb	0	; () banked
 14234  014FD6  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14235  014FD8  0E00               	movlw	0
 14236  014FDA  0100               	movlb	0	; () banked
 14237  014FDC  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14238  014FDE  0E00               	movlw	0
 14239  014FE0  ECFF  F0AD         	call	_LCD_send_command
 14240                           
 14241                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
 14242  014FE4  0E00               	movlw	0
 14243  014FE6  0100               	movlb	0	; () banked
 14244  014FE8  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14245  014FEA  0E00               	movlw	0
 14246  014FEC  0100               	movlb	0	; () banked
 14247  014FEE  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14248  014FF0  0E00               	movlw	0
 14249  014FF2  0100               	movlb	0	; () banked
 14250  014FF4  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14251  014FF6  0E01               	movlw	1
 14252  014FF8  ECFF  F0AD         	call	_LCD_send_command
 14253                           
 14254                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
 14255  014FFC  0E00               	movlw	0
 14256  014FFE  0100               	movlb	0	; () banked
 14257  015000  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14258  015002  0E00               	movlw	0
 14259  015004  0100               	movlb	0	; () banked
 14260  015006  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14261  015008  0E00               	movlw	0
 14262  01500A  0100               	movlb	0	; () banked
 14263  01500C  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14264  01500E  0E00               	movlw	0
 14265  015010  ECFF  F0AD         	call	_LCD_send_command
 14266                           
 14267                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
 14268  015014  0E00               	movlw	0
 14269  015016  0100               	movlb	0	; () banked
 14270  015018  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14271  01501A  0E00               	movlw	0
 14272  01501C  0100               	movlb	0	; () banked
 14273  01501E  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14274  015020  0E01               	movlw	1
 14275  015022  0100               	movlb	0	; () banked
 14276  015024  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14277  015026  0E00               	movlw	0
 14278  015028  ECFF  F0AD         	call	_LCD_send_command
 14279                           
 14280                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
 14281  01502C  0E00               	movlw	0
 14282  01502E  0100               	movlb	0	; () banked
 14283  015030  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14284  015032  0E00               	movlw	0
 14285  015034  0100               	movlb	0	; () banked
 14286  015036  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14287  015038  0E00               	movlw	0
 14288  01503A  0100               	movlb	0	; () banked
 14289  01503C  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14290  01503E  0E00               	movlw	0
 14291  015040  ECFF  F0AD         	call	_LCD_send_command
 14292                           
 14293                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
 14294  015044  0E01               	movlw	1
 14295  015046  0100               	movlb	0	; () banked
 14296  015048  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14297  01504A  0E01               	movlw	1
 14298  01504C  0100               	movlb	0	; () banked
 14299  01504E  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14300  015050  0E00               	movlw	0
 14301  015052  0100               	movlb	0	; () banked
 14302  015054  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14303  015056  0E00               	movlw	0
 14304  015058  ECFF  F0AD         	call	_LCD_send_command
 14305                           
 14306                           ;src\LCD_44780.c: 312: LCD_clear ();
 14307  01505C  ECA3  F0AE         	call	_LCD_clear	;wreg free
 14308                           
 14309                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
 14310  015060  0E00               	movlw	0
 14311  015062  0100               	movlb	0	; () banked
 14312  015064  6F7A               	movwf	LCD_cursor@blinking& (0+255),b
 14313  015066  0E00               	movlw	0
 14314  015068  EC8A  F0AE         	call	_LCD_cursor
 14315  01506C  0012               	return		;funcret
 14316  01506E                     __end_of_LCD_initialize:
 14317                           	opt stack 0
 14318                           tblptru	equ	0xFF8
 14319                           tblptrh	equ	0xFF7
 14320                           tblptrl	equ	0xFF6
 14321                           tablat	equ	0xFF5
 14322                           prodh	equ	0xFF4
 14323                           prodl	equ	0xFF3
 14324                           intcon	equ	0xFF2
 14325                           postinc0	equ	0xFEE
 14326                           wreg	equ	0xFE8
 14327                           indf1	equ	0xFE7
 14328                           plusw1	equ	0xFE3
 14329                           fsr1h	equ	0xFE2
 14330                           fsr1l	equ	0xFE1
 14331                           indf2	equ	0xFDF
 14332                           postinc2	equ	0xFDE
 14333                           plusw2	equ	0xFDB
 14334                           fsr2h	equ	0xFDA
 14335                           fsr2l	equ	0xFD9
 14336                           status	equ	0xFD8
 14337                           
 14338 ;; *************** function _delay_set_quartz *****************
 14339 ;; Defined at:
 14340 ;;		line 115 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 14341 ;; Parameters:    Size  Location     Type
 14342 ;;  frequency       1    wreg     unsigned char 
 14343 ;; Auto vars:     Size  Location     Type
 14344 ;;  frequency       1   14[BANK0 ] unsigned char 
 14345 ;; Return value:  Size  Location     Type
 14346 ;;		None               void
 14347 ;; Registers used:
 14348 ;;		wreg
 14349 ;; Tracked objects:
 14350 ;;		On entry : 0/0
 14351 ;;		On exit  : 0/0
 14352 ;;		Unchanged: 0/0
 14353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14355 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14357 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14358 ;;Total ram usage:        1 bytes
 14359 ;; Hardware stack levels used:    1
 14360 ;; Hardware stack levels required when called:    3
 14361 ;; This function calls:
 14362 ;;		Nothing
 14363 ;; This function is called by:
 14364 ;;		_LCD_initialize
 14365 ;; This function uses a non-reentrant model
 14366 ;;
 14367                           
 14368                           	psect	text35
 14369  015E74                     __ptext35:
 14370                           	opt stack 0
 14371  015E74                     _delay_set_quartz:
 14372                           	opt stack 25
 14373                           
 14374                           ;incstack = 0
 14375                           ;delay_set_quartz@frequency stored from wreg
 14376  015E74  0100               	movlb	0	; () banked
 14377  015E76  6F6E               	movwf	delay_set_quartz@frequency& (0+255),b
 14378                           
 14379                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
 14380  015E78  C06E  F0F1         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
 14381  015E7C  0012               	return		;funcret
 14382  015E7E                     __end_of_delay_set_quartz:
 14383                           	opt stack 0
 14384                           tblptru	equ	0xFF8
 14385                           tblptrh	equ	0xFF7
 14386                           tblptrl	equ	0xFF6
 14387                           tablat	equ	0xFF5
 14388                           prodh	equ	0xFF4
 14389                           prodl	equ	0xFF3
 14390                           intcon	equ	0xFF2
 14391                           postinc0	equ	0xFEE
 14392                           wreg	equ	0xFE8
 14393                           indf1	equ	0xFE7
 14394                           plusw1	equ	0xFE3
 14395                           fsr1h	equ	0xFE2
 14396                           fsr1l	equ	0xFE1
 14397                           indf2	equ	0xFDF
 14398                           postinc2	equ	0xFDE
 14399                           plusw2	equ	0xFDB
 14400                           fsr2h	equ	0xFDA
 14401                           fsr2l	equ	0xFD9
 14402                           status	equ	0xFD8
 14403                           
 14404 ;; *************** function _LCD_cursor *****************
 14405 ;; Defined at:
 14406 ;;		line 266 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14407 ;; Parameters:    Size  Location     Type
 14408 ;;  active          1    wreg     unsigned char 
 14409 ;;  blinking        1   26[BANK0 ] unsigned char 
 14410 ;; Auto vars:     Size  Location     Type
 14411 ;;  active          1   27[BANK0 ] unsigned char 
 14412 ;; Return value:  Size  Location     Type
 14413 ;;		None               void
 14414 ;; Registers used:
 14415 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14416 ;; Tracked objects:
 14417 ;;		On entry : 0/0
 14418 ;;		On exit  : 0/0
 14419 ;;		Unchanged: 0/0
 14420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14421 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14422 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14424 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14425 ;;Total ram usage:        2 bytes
 14426 ;; Hardware stack levels used:    1
 14427 ;; Hardware stack levels required when called:    7
 14428 ;; This function calls:
 14429 ;;		_LCD_send_command
 14430 ;; This function is called by:
 14431 ;;		_LCD_initialize
 14432 ;; This function uses a non-reentrant model
 14433 ;;
 14434                           
 14435                           	psect	text36
 14436  015D14                     __ptext36:
 14437                           	opt stack 0
 14438  015D14                     _LCD_cursor:
 14439                           	opt stack 21
 14440                           
 14441                           ;incstack = 0
 14442                           ;LCD_cursor@active stored from wreg
 14443  015D14  0100               	movlb	0	; () banked
 14444  015D16  6F7B               	movwf	LCD_cursor@active& (0+255),b
 14445                           
 14446                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
 14447  015D18  0E00               	movlw	0
 14448  015D1A  0100               	movlb	0	; () banked
 14449  015D1C  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14450  015D1E  0E00               	movlw	0
 14451  015D20  0100               	movlb	0	; () banked
 14452  015D22  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14453  015D24  0E00               	movlw	0
 14454  015D26  0100               	movlb	0	; () banked
 14455  015D28  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14456  015D2A  0E00               	movlw	0
 14457  015D2C  ECFF  F0AD         	call	_LCD_send_command
 14458                           
 14459                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
 14460  015D30  0E01               	movlw	1
 14461  015D32  0100               	movlb	0	; () banked
 14462  015D34  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14463  015D36  C07B  F077         	movff	LCD_cursor@active,LCD_send_command@D1
 14464  015D3A  C07A  F078         	movff	LCD_cursor@blinking,LCD_send_command@D0
 14465  015D3E  0E01               	movlw	1
 14466  015D40  ECFF  F0AD         	call	_LCD_send_command
 14467  015D44  0012               	return		;funcret
 14468  015D46                     __end_of_LCD_cursor:
 14469                           	opt stack 0
 14470                           tblptru	equ	0xFF8
 14471                           tblptrh	equ	0xFF7
 14472                           tblptrl	equ	0xFF6
 14473                           tablat	equ	0xFF5
 14474                           prodh	equ	0xFF4
 14475                           prodl	equ	0xFF3
 14476                           intcon	equ	0xFF2
 14477                           postinc0	equ	0xFEE
 14478                           wreg	equ	0xFE8
 14479                           indf1	equ	0xFE7
 14480                           plusw1	equ	0xFE3
 14481                           fsr1h	equ	0xFE2
 14482                           fsr1l	equ	0xFE1
 14483                           indf2	equ	0xFDF
 14484                           postinc2	equ	0xFDE
 14485                           plusw2	equ	0xFDB
 14486                           fsr2h	equ	0xFDA
 14487                           fsr2l	equ	0xFD9
 14488                           status	equ	0xFD8
 14489                           
 14490 ;; *************** function _LCD_clear *****************
 14491 ;; Defined at:
 14492 ;;		line 257 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14493 ;; Parameters:    Size  Location     Type
 14494 ;;		None
 14495 ;; Auto vars:     Size  Location     Type
 14496 ;;		None
 14497 ;; Return value:  Size  Location     Type
 14498 ;;		None               void
 14499 ;; Registers used:
 14500 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14501 ;; Tracked objects:
 14502 ;;		On entry : 0/0
 14503 ;;		On exit  : 0/0
 14504 ;;		Unchanged: 0/0
 14505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14510 ;;Total ram usage:        0 bytes
 14511 ;; Hardware stack levels used:    1
 14512 ;; Hardware stack levels required when called:    7
 14513 ;; This function calls:
 14514 ;;		_LCD_send_command
 14515 ;; This function is called by:
 14516 ;;		_LCD_initialize
 14517 ;;		_LCD_Handler
 14518 ;;		_board_initialization
 14519 ;; This function uses a non-reentrant model
 14520 ;;
 14521                           
 14522                           	psect	text37
 14523  015D46                     __ptext37:
 14524                           	opt stack 0
 14525  015D46                     _LCD_clear:
 14526                           	opt stack 21
 14527                           
 14528                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 14529                           
 14530                           ;incstack = 0
 14531  015D46  0E00               	movlw	0
 14532  015D48  0100               	movlb	0	; () banked
 14533  015D4A  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14534  015D4C  0E00               	movlw	0
 14535  015D4E  0100               	movlb	0	; () banked
 14536  015D50  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14537  015D52  0E00               	movlw	0
 14538  015D54  0100               	movlb	0	; () banked
 14539  015D56  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14540  015D58  0E00               	movlw	0
 14541  015D5A  ECFF  F0AD         	call	_LCD_send_command
 14542                           
 14543                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 14544  015D5E  0E00               	movlw	0
 14545  015D60  0100               	movlb	0	; () banked
 14546  015D62  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14547  015D64  0E00               	movlw	0
 14548  015D66  0100               	movlb	0	; () banked
 14549  015D68  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14550  015D6A  0E01               	movlw	1
 14551  015D6C  0100               	movlb	0	; () banked
 14552  015D6E  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14553  015D70  0E00               	movlw	0
 14554  015D72  ECFF  F0AD         	call	_LCD_send_command
 14555  015D76  0012               	return		;funcret
 14556  015D78                     __end_of_LCD_clear:
 14557                           	opt stack 0
 14558                           tblptru	equ	0xFF8
 14559                           tblptrh	equ	0xFF7
 14560                           tblptrl	equ	0xFF6
 14561                           tablat	equ	0xFF5
 14562                           prodh	equ	0xFF4
 14563                           prodl	equ	0xFF3
 14564                           intcon	equ	0xFF2
 14565                           postinc0	equ	0xFEE
 14566                           wreg	equ	0xFE8
 14567                           indf1	equ	0xFE7
 14568                           plusw1	equ	0xFE3
 14569                           fsr1h	equ	0xFE2
 14570                           fsr1l	equ	0xFE1
 14571                           indf2	equ	0xFDF
 14572                           postinc2	equ	0xFDE
 14573                           plusw2	equ	0xFDB
 14574                           fsr2h	equ	0xFDA
 14575                           fsr2l	equ	0xFD9
 14576                           status	equ	0xFD8
 14577                           
 14578 ;; *************** function _LCD_goto_line *****************
 14579 ;; Defined at:
 14580 ;;		line 111 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14581 ;; Parameters:    Size  Location     Type
 14582 ;;  line            1    wreg     unsigned char 
 14583 ;; Auto vars:     Size  Location     Type
 14584 ;;  line            1   26[BANK0 ] unsigned char 
 14585 ;; Return value:  Size  Location     Type
 14586 ;;		None               void
 14587 ;; Registers used:
 14588 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14589 ;; Tracked objects:
 14590 ;;		On entry : 0/0
 14591 ;;		On exit  : 0/0
 14592 ;;		Unchanged: 0/0
 14593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14595 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14597 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14598 ;;Total ram usage:        1 bytes
 14599 ;; Hardware stack levels used:    1
 14600 ;; Hardware stack levels required when called:    7
 14601 ;; This function calls:
 14602 ;;		_LCD_send_command
 14603 ;; This function is called by:
 14604 ;;		_main
 14605 ;;		_LCD_Handler
 14606 ;;		_board_initialization
 14607 ;;		_LCD_goto_xy
 14608 ;; This function uses a non-reentrant model
 14609 ;;
 14610                           
 14611                           	psect	text38
 14612  0152CC                     __ptext38:
 14613                           	opt stack 0
 14614  0152CC                     _LCD_goto_line:
 14615                           	opt stack 22
 14616                           
 14617                           ;incstack = 0
 14618                           ;LCD_goto_line@line stored from wreg
 14619  0152CC  0100               	movlb	0	; () banked
 14620  0152CE  6F7A               	movwf	LCD_goto_line@line& (0+255),b
 14621                           
 14622                           ;src\LCD_44780.c: 113: switch(line) {
 14623  0152D0  D064               	goto	l8089
 14624  0152D2                     l8081:
 14625  0152D2  0E00               	movlw	0
 14626  0152D4  0100               	movlb	0	; () banked
 14627  0152D6  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14628  0152D8  0E00               	movlw	0
 14629  0152DA  0100               	movlb	0	; () banked
 14630  0152DC  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14631  0152DE  0E00               	movlw	0
 14632  0152E0  0100               	movlb	0	; () banked
 14633  0152E2  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14634  0152E4  0E01               	movlw	1
 14635  0152E6  ECFF  F0AD         	call	_LCD_send_command
 14636                           
 14637                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 14638  0152EA  0E00               	movlw	0
 14639  0152EC  0100               	movlb	0	; () banked
 14640  0152EE  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14641  0152F0  0E00               	movlw	0
 14642  0152F2  0100               	movlb	0	; () banked
 14643  0152F4  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14644  0152F6  0E00               	movlw	0
 14645  0152F8  0100               	movlb	0	; () banked
 14646  0152FA  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14647  0152FC  0E00               	movlw	0
 14648  0152FE  ECFF  F0AD         	call	_LCD_send_command
 14649                           
 14650                           ;src\LCD_44780.c: 117: break;
 14651  015302  0012               	return	
 14652  015304                     l8083:
 14653  015304  0E01               	movlw	1
 14654  015306  0100               	movlb	0	; () banked
 14655  015308  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14656  01530A  0E00               	movlw	0
 14657  01530C  0100               	movlb	0	; () banked
 14658  01530E  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14659  015310  0E00               	movlw	0
 14660  015312  0100               	movlb	0	; () banked
 14661  015314  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14662  015316  0E01               	movlw	1
 14663  015318  ECFF  F0AD         	call	_LCD_send_command
 14664                           
 14665                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 14666  01531C  0E00               	movlw	0
 14667  01531E  0100               	movlb	0	; () banked
 14668  015320  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14669  015322  0E00               	movlw	0
 14670  015324  0100               	movlb	0	; () banked
 14671  015326  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14672  015328  0E00               	movlw	0
 14673  01532A  0100               	movlb	0	; () banked
 14674  01532C  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14675  01532E  0E00               	movlw	0
 14676  015330  ECFF  F0AD         	call	_LCD_send_command
 14677                           
 14678                           ;src\LCD_44780.c: 121: break;
 14679  015334  0012               	return	
 14680  015336                     l8085:
 14681  015336  0E00               	movlw	0
 14682  015338  0100               	movlb	0	; () banked
 14683  01533A  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14684  01533C  0E00               	movlw	0
 14685  01533E  0100               	movlb	0	; () banked
 14686  015340  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14687  015342  0E01               	movlw	1
 14688  015344  0100               	movlb	0	; () banked
 14689  015346  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14690  015348  0E01               	movlw	1
 14691  01534A  ECFF  F0AD         	call	_LCD_send_command
 14692                           
 14693                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 14694  01534E  0E01               	movlw	1
 14695  015350  0100               	movlb	0	; () banked
 14696  015352  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14697  015354  0E00               	movlw	0
 14698  015356  0100               	movlb	0	; () banked
 14699  015358  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14700  01535A  0E00               	movlw	0
 14701  01535C  0100               	movlb	0	; () banked
 14702  01535E  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14703  015360  0E00               	movlw	0
 14704  015362  ECFF  F0AD         	call	_LCD_send_command
 14705                           
 14706                           ;src\LCD_44780.c: 125: break;
 14707  015366  0012               	return	
 14708  015368                     l8087:
 14709  015368  0E01               	movlw	1
 14710  01536A  0100               	movlb	0	; () banked
 14711  01536C  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14712  01536E  0E00               	movlw	0
 14713  015370  0100               	movlb	0	; () banked
 14714  015372  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14715  015374  0E01               	movlw	1
 14716  015376  0100               	movlb	0	; () banked
 14717  015378  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14718  01537A  0E01               	movlw	1
 14719  01537C  ECFF  F0AD         	call	_LCD_send_command
 14720                           
 14721                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 14722  015380  0E01               	movlw	1
 14723  015382  0100               	movlb	0	; () banked
 14724  015384  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14725  015386  0E00               	movlw	0
 14726  015388  0100               	movlb	0	; () banked
 14727  01538A  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14728  01538C  0E00               	movlw	0
 14729  01538E  0100               	movlb	0	; () banked
 14730  015390  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14731  015392  0E00               	movlw	0
 14732  015394  ECFF  F0AD         	call	_LCD_send_command
 14733                           
 14734                           ;src\LCD_44780.c: 129: }
 14735  015398  0012               	return	
 14736  01539A                     l8089:
 14737  01539A  0100               	movlb	0	; () banked
 14738  01539C  517A               	movf	LCD_goto_line@line& (0+255),w,b
 14739                           
 14740                           ; Switch size 1, requested type "space"
 14741                           ; Number of cases is 4, Range of values is 1 to 4
 14742                           ; switch strategies available:
 14743                           ; Name         Instructions Cycles
 14744                           ; simple_byte           13     7 (average)
 14745                           ;	Chosen strategy is simple_byte
 14746  01539E  0A01               	xorlw	1	; case 1
 14747  0153A0  B4D8               	btfsc	status,2,c
 14748  0153A2  D797               	goto	l8081
 14749  0153A4  0A03               	xorlw	3	; case 2
 14750  0153A6  B4D8               	btfsc	status,2,c
 14751  0153A8  D7AD               	goto	l8083
 14752  0153AA  0A01               	xorlw	1	; case 3
 14753  0153AC  B4D8               	btfsc	status,2,c
 14754  0153AE  D7C3               	goto	l8085
 14755  0153B0  0A07               	xorlw	7	; case 4
 14756  0153B2  A4D8               	btfss	status,2,c
 14757  0153B4  0012               	return	
 14758  0153B6  D7D8               	goto	l8087
 14759  0153B8                     __end_of_LCD_goto_line:
 14760                           	opt stack 0
 14761                           tblptru	equ	0xFF8
 14762                           tblptrh	equ	0xFF7
 14763                           tblptrl	equ	0xFF6
 14764                           tablat	equ	0xFF5
 14765                           prodh	equ	0xFF4
 14766                           prodl	equ	0xFF3
 14767                           intcon	equ	0xFF2
 14768                           postinc0	equ	0xFEE
 14769                           wreg	equ	0xFE8
 14770                           indf1	equ	0xFE7
 14771                           plusw1	equ	0xFE3
 14772                           fsr1h	equ	0xFE2
 14773                           fsr1l	equ	0xFE1
 14774                           indf2	equ	0xFDF
 14775                           postinc2	equ	0xFDE
 14776                           plusw2	equ	0xFDB
 14777                           fsr2h	equ	0xFDA
 14778                           fsr2l	equ	0xFD9
 14779                           status	equ	0xFD8
 14780                           
 14781 ;; *************** function _LCD_send_command *****************
 14782 ;; Defined at:
 14783 ;;		line 61 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14784 ;; Parameters:    Size  Location     Type
 14785 ;;  D3              1    wreg     unsigned char 
 14786 ;;  D2              1   22[BANK0 ] unsigned char 
 14787 ;;  D1              1   23[BANK0 ] unsigned char 
 14788 ;;  D0              1   24[BANK0 ] unsigned char 
 14789 ;; Auto vars:     Size  Location     Type
 14790 ;;  D3              1   25[BANK0 ] unsigned char 
 14791 ;; Return value:  Size  Location     Type
 14792 ;;		None               void
 14793 ;; Registers used:
 14794 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14795 ;; Tracked objects:
 14796 ;;		On entry : 0/0
 14797 ;;		On exit  : 0/0
 14798 ;;		Unchanged: 0/0
 14799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14800 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14801 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14803 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14804 ;;Total ram usage:        4 bytes
 14805 ;; Hardware stack levels used:    1
 14806 ;; Hardware stack levels required when called:    6
 14807 ;; This function calls:
 14808 ;;		_LCD_enable_pulse
 14809 ;; This function is called by:
 14810 ;;		_LCD_goto_line
 14811 ;;		_LCD_write_char
 14812 ;;		_LCD_clear
 14813 ;;		_LCD_cursor
 14814 ;;		_LCD_initialize
 14815 ;;		_LCD_home
 14816 ;;		_LCD_shift
 14817 ;;		_LCD_shift_cursor
 14818 ;; This function uses a non-reentrant model
 14819 ;;
 14820                           
 14821                           	psect	text39
 14822  015BFE                     __ptext39:
 14823                           	opt stack 0
 14824  015BFE                     _LCD_send_command:
 14825                           	opt stack 21
 14826                           
 14827                           ;incstack = 0
 14828                           ;LCD_send_command@D3 stored from wreg
 14829  015BFE  0100               	movlb	0	; () banked
 14830  015C00  6F79               	movwf	LCD_send_command@D3& (0+255),b
 14831                           
 14832                           ;src\LCD_44780.c: 63: LATCbits.LATC2 = D0;
 14833  015C02  0100               	movlb	0	; () banked
 14834  015C04  B178               	btfsc	LCD_send_command@D0& (0+255),0,b
 14835  015C06  D002               	bra	u9265
 14836  015C08  948B               	bcf	3979,2,c	;volatile
 14837  015C0A  D001               	bra	u9266
 14838  015C0C                     u9265:
 14839  015C0C  848B               	bsf	3979,2,c	;volatile
 14840  015C0E                     u9266:
 14841                           
 14842                           ;src\LCD_44780.c: 64: LATCbits.LATC3 = D1;
 14843  015C0E  0100               	movlb	0	; () banked
 14844  015C10  B177               	btfsc	LCD_send_command@D1& (0+255),0,b
 14845  015C12  D002               	bra	u9275
 14846  015C14  968B               	bcf	3979,3,c	;volatile
 14847  015C16  D001               	bra	u9276
 14848  015C18                     u9275:
 14849  015C18  868B               	bsf	3979,3,c	;volatile
 14850  015C1A                     u9276:
 14851                           
 14852                           ;src\LCD_44780.c: 65: LATDbits.LATD0 = D2;
 14853  015C1A  0100               	movlb	0	; () banked
 14854  015C1C  B176               	btfsc	LCD_send_command@D2& (0+255),0,b
 14855  015C1E  D002               	bra	u9285
 14856  015C20  908C               	bcf	3980,0,c	;volatile
 14857  015C22  D001               	bra	u9286
 14858  015C24                     u9285:
 14859  015C24  808C               	bsf	3980,0,c	;volatile
 14860  015C26                     u9286:
 14861                           
 14862                           ;src\LCD_44780.c: 66: LATDbits.LATD1 = D3;
 14863  015C26  0100               	movlb	0	; () banked
 14864  015C28  B179               	btfsc	LCD_send_command@D3& (0+255),0,b
 14865  015C2A  D002               	bra	u9295
 14866  015C2C  928C               	bcf	3980,1,c	;volatile
 14867  015C2E  D001               	bra	u9296
 14868  015C30                     u9295:
 14869  015C30  828C               	bsf	3980,1,c	;volatile
 14870  015C32                     u9296:
 14871                           
 14872                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 14873  015C32  ECF6  F0AE         	call	_LCD_enable_pulse	;wreg free
 14874  015C36  0012               	return		;funcret
 14875  015C38                     __end_of_LCD_send_command:
 14876                           	opt stack 0
 14877                           tblptru	equ	0xFF8
 14878                           tblptrh	equ	0xFF7
 14879                           tblptrl	equ	0xFF6
 14880                           tablat	equ	0xFF5
 14881                           prodh	equ	0xFF4
 14882                           prodl	equ	0xFF3
 14883                           intcon	equ	0xFF2
 14884                           postinc0	equ	0xFEE
 14885                           wreg	equ	0xFE8
 14886                           indf1	equ	0xFE7
 14887                           plusw1	equ	0xFE3
 14888                           fsr1h	equ	0xFE2
 14889                           fsr1l	equ	0xFE1
 14890                           indf2	equ	0xFDF
 14891                           postinc2	equ	0xFDE
 14892                           plusw2	equ	0xFDB
 14893                           fsr2h	equ	0xFDA
 14894                           fsr2l	equ	0xFD9
 14895                           status	equ	0xFD8
 14896                           
 14897 ;; *************** function _LCD_enable_pulse *****************
 14898 ;; Defined at:
 14899 ;;		line 49 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14900 ;; Parameters:    Size  Location     Type
 14901 ;;		None
 14902 ;; Auto vars:     Size  Location     Type
 14903 ;;		None
 14904 ;; Return value:  Size  Location     Type
 14905 ;;		None               void
 14906 ;; Registers used:
 14907 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14908 ;; Tracked objects:
 14909 ;;		On entry : 0/0
 14910 ;;		On exit  : 0/0
 14911 ;;		Unchanged: 0/0
 14912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14917 ;;Total ram usage:        0 bytes
 14918 ;; Hardware stack levels used:    1
 14919 ;; Hardware stack levels required when called:    5
 14920 ;; This function calls:
 14921 ;;		_delay_ms
 14922 ;; This function is called by:
 14923 ;;		_LCD_send_command
 14924 ;; This function uses a non-reentrant model
 14925 ;;
 14926                           
 14927                           	psect	text40
 14928  015DEC                     __ptext40:
 14929                           	opt stack 0
 14930  015DEC                     _LCD_enable_pulse:
 14931                           	opt stack 21
 14932                           
 14933                           ;src\LCD_44780.c: 51: LATCbits.LATC1 = 1;
 14934                           
 14935                           ;incstack = 0
 14936  015DEC  828B               	bsf	3979,1,c	;volatile
 14937                           
 14938                           ;src\LCD_44780.c: 52: delay_ms (1);
 14939  015DEE  0E00               	movlw	0
 14940  015DF0  0100               	movlb	0	; () banked
 14941  015DF2  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
 14942  015DF4  0E01               	movlw	1
 14943  015DF6  6F74               	movwf	delay_ms@value_ms& (0+255),b
 14944  015DF8  EC1C  F0AE         	call	_delay_ms	;wreg free
 14945                           
 14946                           ;src\LCD_44780.c: 53: LATCbits.LATC1 = 0;
 14947  015DFC  928B               	bcf	3979,1,c	;volatile
 14948                           
 14949                           ;src\LCD_44780.c: 54: delay_ms (1);
 14950  015DFE  0E00               	movlw	0
 14951  015E00  0100               	movlb	0	; () banked
 14952  015E02  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
 14953  015E04  0E01               	movlw	1
 14954  015E06  6F74               	movwf	delay_ms@value_ms& (0+255),b
 14955  015E08  EC1C  F0AE         	call	_delay_ms	;wreg free
 14956  015E0C  0012               	return		;funcret
 14957  015E0E                     __end_of_LCD_enable_pulse:
 14958                           	opt stack 0
 14959                           tblptru	equ	0xFF8
 14960                           tblptrh	equ	0xFF7
 14961                           tblptrl	equ	0xFF6
 14962                           tablat	equ	0xFF5
 14963                           prodh	equ	0xFF4
 14964                           prodl	equ	0xFF3
 14965                           intcon	equ	0xFF2
 14966                           postinc0	equ	0xFEE
 14967                           wreg	equ	0xFE8
 14968                           indf1	equ	0xFE7
 14969                           plusw1	equ	0xFE3
 14970                           fsr1h	equ	0xFE2
 14971                           fsr1l	equ	0xFE1
 14972                           indf2	equ	0xFDF
 14973                           postinc2	equ	0xFDE
 14974                           plusw2	equ	0xFDB
 14975                           fsr2h	equ	0xFDA
 14976                           fsr2l	equ	0xFD9
 14977                           status	equ	0xFD8
 14978                           
 14979 ;; *************** function _delay_ms *****************
 14980 ;; Defined at:
 14981 ;;		line 61 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 14982 ;; Parameters:    Size  Location     Type
 14983 ;;  value_ms        2   20[BANK0 ] unsigned int 
 14984 ;; Auto vars:     Size  Location     Type
 14985 ;;		None
 14986 ;; Return value:  Size  Location     Type
 14987 ;;		None               void
 14988 ;; Registers used:
 14989 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14990 ;; Tracked objects:
 14991 ;;		On entry : 0/0
 14992 ;;		On exit  : 0/0
 14993 ;;		Unchanged: 0/0
 14994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14995 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14998 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14999 ;;Total ram usage:        2 bytes
 15000 ;; Hardware stack levels used:    1
 15001 ;; Hardware stack levels required when called:    4
 15002 ;; This function calls:
 15003 ;;		___wmul
 15004 ;; This function is called by:
 15005 ;;		_LCD_enable_pulse
 15006 ;;		_LCD_initialize
 15007 ;;		_main
 15008 ;;		_LCD_Handler
 15009 ;;		_board_initialization
 15010 ;;		_delay_s
 15011 ;; This function uses a non-reentrant model
 15012 ;;
 15013                           
 15014                           	psect	text41
 15015  015C38                     __ptext41:
 15016                           	opt stack 0
 15017  015C38                     _delay_ms:
 15018                           	opt stack 26
 15019                           
 15020                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 15021                           
 15022                           ;incstack = 0
 15023  015C38  C0F1  F06E         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 15024  015C3C  0100               	movlb	0	; () banked
 15025  015C3E  6B6F               	clrf	(___wmul@multiplier+1)& (0+255),b
 15026  015C40  C074  F070         	movff	delay_ms@value_ms,___wmul@multiplicand
 15027  015C44  C075  F071         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 15028  015C48  EC55  F0AE         	call	___wmul	;wreg free
 15029  015C4C  C06E  F0E8         	movff	?___wmul,_clock_counter_reference	;volatile
 15030  015C50  C06F  F0E9         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 15031                           
 15032                           ;src\delay.c: 75: while (clock_counter_reference) {
 15033  015C54  D007               	goto	l577
 15034  015C56                     l7273:
 15035                           
 15036                           ;src\delay.c: 85: _delay(240);
 15037  015C56  0E50               	movlw	80
 15038  015C58                     u11237:
 15039  015C58  2EE8               	decfsz	wreg,f,c
 15040  015C5A  D7FE               	goto	u11237
 15041                           
 15042                           ;src\delay.c: 88: clock_counter_reference--;
 15043  015C5C  0100               	movlb	0	; () banked
 15044  015C5E  07E8               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 15045  015C60  A0D8               	btfss	status,0,c
 15046  015C62  07E9               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 15047  015C64                     l577:
 15048  015C64  0100               	movlb	0	; () banked
 15049  015C66  51E8               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 15050  015C68  0100               	movlb	0	; () banked
 15051  015C6A  11E9               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 15052  015C6C  B4D8               	btfsc	status,2,c
 15053  015C6E  0012               	return	
 15054  015C70  D7F2               	goto	l7273
 15055  015C72                     __end_of_delay_ms:
 15056                           	opt stack 0
 15057                           tblptru	equ	0xFF8
 15058                           tblptrh	equ	0xFF7
 15059                           tblptrl	equ	0xFF6
 15060                           tablat	equ	0xFF5
 15061                           prodh	equ	0xFF4
 15062                           prodl	equ	0xFF3
 15063                           intcon	equ	0xFF2
 15064                           postinc0	equ	0xFEE
 15065                           wreg	equ	0xFE8
 15066                           indf1	equ	0xFE7
 15067                           plusw1	equ	0xFE3
 15068                           fsr1h	equ	0xFE2
 15069                           fsr1l	equ	0xFE1
 15070                           indf2	equ	0xFDF
 15071                           postinc2	equ	0xFDE
 15072                           plusw2	equ	0xFDB
 15073                           fsr2h	equ	0xFDA
 15074                           fsr2l	equ	0xFD9
 15075                           status	equ	0xFD8
 15076                           
 15077 ;; *************** function ___wmul *****************
 15078 ;; Defined at:
 15079 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 15080 ;; Parameters:    Size  Location     Type
 15081 ;;  multiplier      2   14[BANK0 ] unsigned int 
 15082 ;;  multiplicand    2   16[BANK0 ] unsigned int 
 15083 ;; Auto vars:     Size  Location     Type
 15084 ;;  product         2   18[BANK0 ] unsigned int 
 15085 ;; Return value:  Size  Location     Type
 15086 ;;                  2   14[BANK0 ] unsigned int 
 15087 ;; Registers used:
 15088 ;;		wreg, status,2, status,0, prodl, prodh
 15089 ;; Tracked objects:
 15090 ;;		On entry : 0/0
 15091 ;;		On exit  : 0/0
 15092 ;;		Unchanged: 0/0
 15093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15094 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15095 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15097 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15098 ;;Total ram usage:        6 bytes
 15099 ;; Hardware stack levels used:    1
 15100 ;; Hardware stack levels required when called:    3
 15101 ;; This function calls:
 15102 ;;		Nothing
 15103 ;; This function is called by:
 15104 ;;		_delay_ms
 15105 ;;		_sprintf
 15106 ;; This function uses a non-reentrant model
 15107 ;;
 15108                           
 15109                           	psect	text42
 15110  015CAA                     __ptext42:
 15111                           	opt stack 0
 15112  015CAA                     ___wmul:
 15113                           	opt stack 26
 15114                           
 15115                           ; BSR set to: 0
 15116                           ;incstack = 0
 15117  015CAA  0100               	movlb	0	; () banked
 15118  015CAC  516E               	movf	___wmul@multiplier& (0+255),w,b
 15119  015CAE  0100               	movlb	0	; () banked
 15120  015CB0  0370               	mulwf	___wmul@multiplicand& (0+255),b
 15121  015CB2  CFF3 F072          	movff	prodl,___wmul@product
 15122  015CB6  CFF4 F073          	movff	prodh,___wmul@product+1
 15123  015CBA  0100               	movlb	0	; () banked
 15124  015CBC  516E               	movf	___wmul@multiplier& (0+255),w,b
 15125  015CBE  0100               	movlb	0	; () banked
 15126  015CC0  0371               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 15127  015CC2  50F3               	movf	prodl,w,c
 15128  015CC4  0100               	movlb	0	; () banked
 15129  015CC6  2773               	addwf	(___wmul@product+1)& (0+255),f,b
 15130  015CC8  0100               	movlb	0	; () banked
 15131  015CCA  516F               	movf	(___wmul@multiplier+1)& (0+255),w,b
 15132  015CCC  0100               	movlb	0	; () banked
 15133  015CCE  0370               	mulwf	___wmul@multiplicand& (0+255),b
 15134  015CD0  50F3               	movf	prodl,w,c
 15135  015CD2  0100               	movlb	0	; () banked
 15136  015CD4  2773               	addwf	(___wmul@product+1)& (0+255),f,b
 15137                           
 15138                           ; BSR set to: 0
 15139  015CD6  C072  F06E         	movff	___wmul@product,?___wmul
 15140  015CDA  C073  F06F         	movff	___wmul@product+1,?___wmul+1
 15141  015CDE  0012               	return	
 15142  015CE0                     __end_of___wmul:
 15143                           	opt stack 0
 15144                           tblptru	equ	0xFF8
 15145                           tblptrh	equ	0xFF7
 15146                           tblptrl	equ	0xFF6
 15147                           tablat	equ	0xFF5
 15148                           prodh	equ	0xFF4
 15149                           prodl	equ	0xFF3
 15150                           intcon	equ	0xFF2
 15151                           postinc0	equ	0xFEE
 15152                           wreg	equ	0xFE8
 15153                           indf1	equ	0xFE7
 15154                           plusw1	equ	0xFE3
 15155                           fsr1h	equ	0xFE2
 15156                           fsr1l	equ	0xFE1
 15157                           indf2	equ	0xFDF
 15158                           postinc2	equ	0xFDE
 15159                           plusw2	equ	0xFDB
 15160                           fsr2h	equ	0xFDA
 15161                           fsr2l	equ	0xFD9
 15162                           status	equ	0xFD8
 15163                           
 15164 ;; *************** function _Joystick_Polling *****************
 15165 ;; Defined at:
 15166 ;;		line 288 in file "RemoteCan.c"
 15167 ;; Parameters:    Size  Location     Type
 15168 ;;		None
 15169 ;; Auto vars:     Size  Location     Type
 15170 ;;  i               1   15[BANK0 ] unsigned char 
 15171 ;; Return value:  Size  Location     Type
 15172 ;;		None               void
 15173 ;; Registers used:
 15174 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15175 ;; Tracked objects:
 15176 ;;		On entry : 0/0
 15177 ;;		On exit  : 0/0
 15178 ;;		Unchanged: 0/0
 15179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15181 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15182 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15183 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15184 ;;Total ram usage:        2 bytes
 15185 ;; Hardware stack levels used:    1
 15186 ;; Hardware stack levels required when called:    3
 15187 ;; This function calls:
 15188 ;;		Nothing
 15189 ;; This function is called by:
 15190 ;;		_main
 15191 ;; This function uses a non-reentrant model
 15192 ;;
 15193                           
 15194                           	psect	text43
 15195  015AD8                     __ptext43:
 15196                           	opt stack 0
 15197  015AD8                     _Joystick_Polling:
 15198                           	opt stack 27
 15199                           
 15200                           ;RemoteCan.c: 289: for (unsigned char i = 0; i < 2; i++) {
 15201                           
 15202                           ; BSR set to: 0
 15203                           ;incstack = 0
 15204  015AD8  0E00               	movlw	0
 15205  015ADA  0100               	movlb	0	; () banked
 15206  015ADC  6F6F               	movwf	Joystick_Polling@i& (0+255),b
 15207  015ADE                     l6747:
 15208                           
 15209                           ; BSR set to: 0
 15210  015ADE  0E01               	movlw	1
 15211  015AE0  0100               	movlb	0	; () banked
 15212  015AE2  656F               	cpfsgt	Joystick_Polling@i& (0+255),b
 15213  015AE4  D001               	goto	l807
 15214  015AE6  0012               	return	
 15215  015AE8                     l807:
 15216                           
 15217                           ; BSR set to: 0
 15218                           ;RemoteCan.c: 290: ADCON0bits.GO = 1;
 15219  015AE8  82C2               	bsf	4034,1,c	;volatile
 15220  015AEA                     l809:
 15221  015AEA  B2C2               	btfsc	4034,1,c	;volatile
 15222  015AEC  D7FE               	goto	l809
 15223                           
 15224                           ;RemoteCan.c: 292: JoystickValues[i] = ADRESH;
 15225  015AEE  0100               	movlb	0	; () banked
 15226  015AF0  516F               	movf	Joystick_Polling@i& (0+255),w,b
 15227  015AF2  0D01               	mullw	1
 15228  015AF4  0EE4               	movlw	low _JoystickValues
 15229  015AF6  24F3               	addwf	prodl,w,c
 15230  015AF8  6ED9               	movwf	fsr2l,c
 15231  015AFA  0E00               	movlw	high _JoystickValues
 15232  015AFC  20F4               	addwfc	prodh,w,c
 15233  015AFE  6EDA               	movwf	fsr2h,c
 15234  015B00  CFC4 FFDF          	movff	4036,indf2	;volatile
 15235                           
 15236                           ; BSR set to: 0
 15237                           ;RemoteCan.c: 293: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 15238  015B04  A4C2               	btfss	4034,2,c	;volatile
 15239  015B06  D002               	goto	u8470
 15240  015B08  0E01               	movlw	1
 15241  015B0A  D001               	goto	u8476
 15242  015B0C                     u8470:
 15243  015B0C  0E00               	movlw	0
 15244  015B0E                     u8476:
 15245  015B0E  0AFF               	xorlw	255
 15246  015B10  0100               	movlb	0	; () banked
 15247  015B12  6F6E               	movwf	??_Joystick_Polling& (0+255),b
 15248  015B14  0100               	movlb	0	; () banked
 15249  015B16  476E               	rlncf	??_Joystick_Polling& (0+255),f,b
 15250  015B18  476E               	rlncf	??_Joystick_Polling& (0+255),f,b
 15251  015B1A  50C2               	movf	4034,w,c	;volatile
 15252  015B1C  0100               	movlb	0	; () banked
 15253  015B1E  196E               	xorwf	??_Joystick_Polling& (0+255),w,b
 15254  015B20  0BFB               	andlw	-5
 15255  015B22  196E               	xorwf	??_Joystick_Polling& (0+255),w,b
 15256  015B24  6EC2               	movwf	4034,c	;volatile
 15257                           
 15258                           ; BSR set to: 0
 15259  015B26  0100               	movlb	0	; () banked
 15260  015B28  2B6F               	incf	Joystick_Polling@i& (0+255),f,b
 15261  015B2A  D7D9               	goto	l6747
 15262  015B2C                     __end_of_Joystick_Polling:
 15263                           	opt stack 0
 15264                           tblptru	equ	0xFF8
 15265                           tblptrh	equ	0xFF7
 15266                           tblptrl	equ	0xFF6
 15267                           tablat	equ	0xFF5
 15268                           prodh	equ	0xFF4
 15269                           prodl	equ	0xFF3
 15270                           intcon	equ	0xFF2
 15271                           postinc0	equ	0xFEE
 15272                           wreg	equ	0xFE8
 15273                           indf1	equ	0xFE7
 15274                           plusw1	equ	0xFE3
 15275                           fsr1h	equ	0xFE2
 15276                           fsr1l	equ	0xFE1
 15277                           indf2	equ	0xFDF
 15278                           postinc2	equ	0xFDE
 15279                           plusw2	equ	0xFDB
 15280                           fsr2h	equ	0xFDA
 15281                           fsr2l	equ	0xFD9
 15282                           status	equ	0xFD8
 15283                           
 15284 ;; *************** function _CAN_interpreter *****************
 15285 ;; Defined at:
 15286 ;;		line 239 in file "RemoteCan.c"
 15287 ;; Parameters:    Size  Location     Type
 15288 ;;		None
 15289 ;; Auto vars:     Size  Location     Type
 15290 ;;		None
 15291 ;; Return value:  Size  Location     Type
 15292 ;;		None               void
 15293 ;; Registers used:
 15294 ;;		wreg, status,2, status,0
 15295 ;; Tracked objects:
 15296 ;;		On entry : 0/0
 15297 ;;		On exit  : 0/0
 15298 ;;		Unchanged: 0/0
 15299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15302 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15303 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15304 ;;Total ram usage:        4 bytes
 15305 ;; Hardware stack levels used:    1
 15306 ;; Hardware stack levels required when called:    3
 15307 ;; This function calls:
 15308 ;;		Nothing
 15309 ;; This function is called by:
 15310 ;;		_main
 15311 ;; This function uses a non-reentrant model
 15312 ;;
 15313                           
 15314                           	psect	text44
 15315  015782                     __ptext44:
 15316                           	opt stack 0
 15317  015782                     _CAN_interpreter:
 15318                           	opt stack 27
 15319                           
 15320                           ;RemoteCan.c: 241: if (id == 0b00000000010) {
 15321                           
 15322                           ; BSR set to: 0
 15323                           ;incstack = 0
 15324  015782  0E02               	movlw	2
 15325  015784  1812               	xorwf	_id,w,c	;volatile
 15326  015786  1013               	iorwf	_id+1,w,c	;volatile
 15327  015788  1014               	iorwf	_id+2,w,c	;volatile
 15328  01578A  1015               	iorwf	_id+3,w,c	;volatile
 15329  01578C  A4D8               	btfss	status,2,c
 15330  01578E  D015               	goto	l6775
 15331                           
 15332                           ;RemoteCan.c: 242: if (RTR_Flag == 1) {
 15333  015790  A447               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 15334  015792  D00C               	goto	l6765
 15335                           
 15336                           ;RemoteCan.c: 243: pr_time_4 = time_counter;
 15337  015794  C01A  F016         	movff	_time_counter,_pr_time_4	;volatile
 15338  015798  C01B  F017         	movff	_time_counter+1,_pr_time_4+1	;volatile
 15339  01579C  C01C  F018         	movff	_time_counter+2,_pr_time_4+2	;volatile
 15340  0157A0  C01D  F019         	movff	_time_counter+3,_pr_time_4+3	;volatile
 15341                           
 15342                           ;RemoteCan.c: 247: MotoreFlag = 1;
 15343  0157A4  8247               	bsf	_MotoreFlag/(0+8),_MotoreFlag& (0+7),c	;volatile
 15344                           
 15345                           ;RemoteCan.c: 248: AbsFlag = 0;
 15346  0157A6  9047               	bcf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 15347                           
 15348                           ;RemoteCan.c: 249: SterzoFlag = 0;
 15349  0157A8  9647               	bcf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 15350                           
 15351                           ;RemoteCan.c: 250: } else {
 15352  0157AA  D007               	goto	l6775
 15353  0157AC                     l6765:
 15354                           
 15355                           ;RemoteCan.c: 251: if (data[0] == 0x01) {
 15356  0157AC  0424               	decf	_data,w,c
 15357  0157AE  B4D8               	btfsc	status,2,c
 15358                           
 15359                           ;RemoteCan.c: 252: AbsFlag = 1;
 15360  0157B0  8047               	bsf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 15361                           
 15362                           ;RemoteCan.c: 254: }
 15363                           ;RemoteCan.c: 255: if (data[0] == 0x02) {
 15364  0157B2  0E02               	movlw	2
 15365  0157B4  1824               	xorwf	_data,w,c
 15366  0157B6  B4D8               	btfsc	status,2,c
 15367                           
 15368                           ;RemoteCan.c: 256: SterzoFlag = 1;
 15369  0157B8  8647               	bsf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 15370  0157BA                     l6775:
 15371                           
 15372                           ;RemoteCan.c: 262: }
 15373                           ;RemoteCan.c: 263: }
 15374                           ;RemoteCan.c: 265: if ((id == 0b00000000110)&&(RTR_Flag == 0)) {
 15375  0157BA  0E06               	movlw	6
 15376  0157BC  1812               	xorwf	_id,w,c	;volatile
 15377  0157BE  1013               	iorwf	_id+1,w,c	;volatile
 15378  0157C0  1014               	iorwf	_id+2,w,c	;volatile
 15379  0157C2  1015               	iorwf	_id+3,w,c	;volatile
 15380  0157C4  B4D8               	btfsc	status,2,c
 15381  0157C6  B447               	btfsc	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 15382  0157C8  D027               	goto	l6787
 15383                           
 15384                           ;RemoteCan.c: 266: left_speed = data_speed_rx[1];
 15385  0157CA  C002  F01E         	movff	_data_speed_rx+1,_left_speed
 15386  0157CE  6A1F               	clrf	_left_speed+1,c
 15387                           
 15388                           ;RemoteCan.c: 267: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 15389  0157D0  501E               	movf	_left_speed,w,c
 15390  0157D2  0100               	movlb	0	; () banked
 15391  0157D4  6F6E               	movwf	??_CAN_interpreter& (0+255),b
 15392  0157D6  5001               	movf	_data_speed_rx,w,c
 15393  0157D8  6E1E               	movwf	_left_speed,c
 15394  0157DA  C06E  F01F         	movff	??_CAN_interpreter,_left_speed+1
 15395                           
 15396                           ; BSR set to: 0
 15397                           ;RemoteCan.c: 268: right_speed = data_speed_rx[3];
 15398  0157DE  C004  F020         	movff	_data_speed_rx+3,_right_speed
 15399  0157E2  6A21               	clrf	_right_speed+1,c
 15400                           
 15401                           ;RemoteCan.c: 269: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 15402  0157E4  5020               	movf	_right_speed,w,c
 15403  0157E6  0100               	movlb	0	; () banked
 15404  0157E8  6F6E               	movwf	??_CAN_interpreter& (0+255),b
 15405  0157EA  5003               	movf	_data_speed_rx+2,w,c
 15406  0157EC  6E20               	movwf	_right_speed,c
 15407  0157EE  C06E  F021         	movff	??_CAN_interpreter,_right_speed+1
 15408                           
 15409                           ; BSR set to: 0
 15410                           ;RemoteCan.c: 270: actual_speed = (right_speed + left_speed) / 2;
 15411  0157F2  501E               	movf	_left_speed,w,c
 15412  0157F4  2420               	addwf	_right_speed,w,c
 15413  0157F6  0100               	movlb	0	; () banked
 15414  0157F8  6F6E               	movwf	??_CAN_interpreter& (0+255),b
 15415  0157FA  501F               	movf	_left_speed+1,w,c
 15416  0157FC  2021               	addwfc	_right_speed+1,w,c
 15417  0157FE  0100               	movlb	0	; () banked
 15418  015800  6F6F               	movwf	(??_CAN_interpreter+1)& (0+255),b
 15419  015802  90D8               	bcf	status,0,c
 15420  015804  0100               	movlb	0	; () banked
 15421  015806  316F               	rrcf	(??_CAN_interpreter+1)& (0+255),w,b
 15422  015808  0100               	movlb	0	; () banked
 15423  01580A  6F70               	movwf	(??_CAN_interpreter+2)& (0+255),b
 15424  01580C  0100               	movlb	0	; () banked
 15425  01580E  316E               	rrcf	??_CAN_interpreter& (0+255),w,b
 15426  015810  0100               	movlb	0	; () banked
 15427  015812  6FE6               	movwf	_actual_speed& (0+255),b
 15428  015814  C070  F0E7         	movff	??_CAN_interpreter+2,_actual_speed+1
 15429  015818                     l6787:
 15430                           
 15431                           ;RemoteCan.c: 271: }
 15432                           ;RemoteCan.c: 273: if (id == 0b00000001001) {
 15433  015818  0E09               	movlw	9
 15434  01581A  1812               	xorwf	_id,w,c	;volatile
 15435  01581C  1013               	iorwf	_id+1,w,c	;volatile
 15436  01581E  1014               	iorwf	_id+2,w,c	;volatile
 15437  015820  1015               	iorwf	_id+3,w,c	;volatile
 15438  015822  A4D8               	btfss	status,2,c
 15439  015824  0012               	return	
 15440                           
 15441                           ;RemoteCan.c: 274: battery = data[0];
 15442  015826  C024  F022         	movff	_data,_battery	;volatile
 15443  01582A  0012               	return	
 15444  01582C                     __end_of_CAN_interpreter:
 15445                           	opt stack 0
 15446                           tblptru	equ	0xFF8
 15447                           tblptrh	equ	0xFF7
 15448                           tblptrl	equ	0xFF6
 15449                           tablat	equ	0xFF5
 15450                           prodh	equ	0xFF4
 15451                           prodl	equ	0xFF3
 15452                           intcon	equ	0xFF2
 15453                           postinc0	equ	0xFEE
 15454                           wreg	equ	0xFE8
 15455                           indf1	equ	0xFE7
 15456                           plusw1	equ	0xFE3
 15457                           fsr1h	equ	0xFE2
 15458                           fsr1l	equ	0xFE1
 15459                           indf2	equ	0xFDF
 15460                           postinc2	equ	0xFDE
 15461                           plusw2	equ	0xFDB
 15462                           fsr2h	equ	0xFDA
 15463                           fsr2l	equ	0xFD9
 15464                           status	equ	0xFD8
 15465                           
 15466 ;; *************** function _CAN_Send *****************
 15467 ;; Defined at:
 15468 ;;		line 191 in file "RemoteCan.c"
 15469 ;; Parameters:    Size  Location     Type
 15470 ;;		None
 15471 ;; Auto vars:     Size  Location     Type
 15472 ;;		None
 15473 ;; Return value:  Size  Location     Type
 15474 ;;		None               void
 15475 ;; Registers used:
 15476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15477 ;; Tracked objects:
 15478 ;;		On entry : 0/0
 15479 ;;		On exit  : 0/0
 15480 ;;		Unchanged: 0/0
 15481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15486 ;;Total ram usage:        0 bytes
 15487 ;; Hardware stack levels used:    1
 15488 ;; Hardware stack levels required when called:    4
 15489 ;; This function calls:
 15490 ;;		_CANisTxReady
 15491 ;;		_CANsendMessage
 15492 ;; This function is called by:
 15493 ;;		_main
 15494 ;; This function uses a non-reentrant model
 15495 ;;
 15496                           
 15497                           	psect	text45
 15498  0156C8                     __ptext45:
 15499                           	opt stack 0
 15500  0156C8                     _CAN_Send:
 15501                           	opt stack 26
 15502  0156C8                     l6727:
 15503  0156C8  ECE4  F0AE         	call	_CANisTxReady	;wreg free
 15504  0156CC  06E8               	decf	wreg,f,c
 15505  0156CE  A4D8               	btfss	status,2,c
 15506  0156D0  D7FB               	goto	l6727
 15507                           
 15508                           ;RemoteCan.c: 193: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 15509  0156D2  0E05               	movlw	5
 15510  0156D4  0100               	movlb	0	; () banked
 15511  0156D6  6F6E               	movwf	CANsendMessage@identifier& (0+255),b
 15512  0156D8  0E00               	movlw	0
 15513  0156DA  6F6F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 15514  0156DC  0E00               	movlw	0
 15515  0156DE  6F70               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 15516  0156E0  0E00               	movlw	0
 15517  0156E2  6F71               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 15518  0156E4  0EF0               	movlw	low _data_steering
 15519  0156E6  0100               	movlb	0	; () banked
 15520  0156E8  6F72               	movwf	CANsendMessage@data& (0+255),b
 15521  0156EA  0E00               	movlw	high _data_steering
 15522  0156EC  0100               	movlb	0	; () banked
 15523  0156EE  6F73               	movwf	(CANsendMessage@data+1)& (0+255),b
 15524  0156F0  0E08               	movlw	8
 15525  0156F2  0100               	movlb	0	; () banked
 15526  0156F4  6F74               	movwf	CANsendMessage@dataLength& (0+255),b
 15527  0156F6  0EBC               	movlw	188
 15528  0156F8  0100               	movlb	0	; () banked
 15529  0156FA  6F75               	movwf	CANsendMessage@flags& (0+255),b
 15530  0156FC  ECCD  F089         	call	_CANsendMessage	;wreg free
 15531                           
 15532                           ;RemoteCan.c: 194: data_speed[0] = set_speed;
 15533  015700  C0EA  F0EF         	movff	_set_speed,_data_speed	;volatile
 15534                           
 15535                           ;RemoteCan.c: 195: data_speed[1] = (set_speed >> 8);
 15536  015704  0100               	movlb	0	; () banked
 15537  015706  51EB               	movf	(_set_speed+1)& (0+255),w,b	;volatile
 15538  015708  0100               	movlb	0	; () banked
 15539  01570A  6FF0               	movwf	(_data_speed+1)& (0+255),b
 15540                           
 15541                           ; BSR set to: 0
 15542                           ;RemoteCan.c: 196: data_speed[2] = dir;
 15543  01570C  C0EC  F0F1         	movff	_dir,_data_speed+2	;volatile
 15544  015710                     l6737:
 15545  015710  ECE4  F0AE         	call	_CANisTxReady	;wreg free
 15546  015714  06E8               	decf	wreg,f,c
 15547  015716  A4D8               	btfss	status,2,c
 15548  015718  D7FB               	goto	l6737
 15549                           
 15550                           ;RemoteCan.c: 198: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 15551  01571A  0E03               	movlw	3
 15552  01571C  0100               	movlb	0	; () banked
 15553  01571E  6F6E               	movwf	CANsendMessage@identifier& (0+255),b
 15554  015720  0E00               	movlw	0
 15555  015722  6F6F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 15556  015724  0E00               	movlw	0
 15557  015726  6F70               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 15558  015728  0E00               	movlw	0
 15559  01572A  6F71               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 15560  01572C  0EEF               	movlw	low _data_speed
 15561  01572E  0100               	movlb	0	; () banked
 15562  015730  6F72               	movwf	CANsendMessage@data& (0+255),b
 15563  015732  0E00               	movlw	high _data_speed
 15564  015734  0100               	movlb	0	; () banked
 15565  015736  6F73               	movwf	(CANsendMessage@data+1)& (0+255),b
 15566  015738  0E08               	movlw	8
 15567  01573A  0100               	movlb	0	; () banked
 15568  01573C  6F74               	movwf	CANsendMessage@dataLength& (0+255),b
 15569  01573E  0EBC               	movlw	188
 15570  015740  0100               	movlb	0	; () banked
 15571  015742  6F75               	movwf	CANsendMessage@flags& (0+255),b
 15572  015744  ECCD  F089         	call	_CANsendMessage	;wreg free
 15573  015748                     l6741:
 15574  015748  ECE4  F0AE         	call	_CANisTxReady	;wreg free
 15575  01574C  06E8               	decf	wreg,f,c
 15576  01574E  A4D8               	btfss	status,2,c
 15577  015750  D7FB               	goto	l6741
 15578                           
 15579                           ;RemoteCan.c: 200: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_1);
 15580  015752  0E04               	movlw	4
 15581  015754  0100               	movlb	0	; () banked
 15582  015756  6F6E               	movwf	CANsendMessage@identifier& (0+255),b
 15583  015758  0E00               	movlw	0
 15584  01575A  6F6F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 15585  01575C  0E00               	movlw	0
 15586  01575E  6F70               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 15587  015760  0E00               	movlw	0
 15588  015762  6F71               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 15589  015764  0EEE               	movlw	low _data_brake
 15590  015766  0100               	movlb	0	; () banked
 15591  015768  6F72               	movwf	CANsendMessage@data& (0+255),b
 15592  01576A  0E00               	movlw	high _data_brake
 15593  01576C  0100               	movlb	0	; () banked
 15594  01576E  6F73               	movwf	(CANsendMessage@data+1)& (0+255),b
 15595  015770  0E08               	movlw	8
 15596  015772  0100               	movlb	0	; () banked
 15597  015774  6F74               	movwf	CANsendMessage@dataLength& (0+255),b
 15598  015776  0EBD               	movlw	189
 15599  015778  0100               	movlb	0	; () banked
 15600  01577A  6F75               	movwf	CANsendMessage@flags& (0+255),b
 15601  01577C  ECCD  F089         	call	_CANsendMessage	;wreg free
 15602  015780  0012               	return		;funcret
 15603  015782                     __end_of_CAN_Send:
 15604                           	opt stack 0
 15605                           tblptru	equ	0xFF8
 15606                           tblptrh	equ	0xFF7
 15607                           tblptrl	equ	0xFF6
 15608                           tablat	equ	0xFF5
 15609                           prodh	equ	0xFF4
 15610                           prodl	equ	0xFF3
 15611                           intcon	equ	0xFF2
 15612                           postinc0	equ	0xFEE
 15613                           wreg	equ	0xFE8
 15614                           indf1	equ	0xFE7
 15615                           plusw1	equ	0xFE3
 15616                           fsr1h	equ	0xFE2
 15617                           fsr1l	equ	0xFE1
 15618                           indf2	equ	0xFDF
 15619                           postinc2	equ	0xFDE
 15620                           plusw2	equ	0xFDB
 15621                           fsr2h	equ	0xFDA
 15622                           fsr2l	equ	0xFD9
 15623                           status	equ	0xFD8
 15624                           
 15625 ;; *************** function _CANsendMessage *****************
 15626 ;; Defined at:
 15627 ;;		line 294 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 15628 ;; Parameters:    Size  Location     Type
 15629 ;;  identifier      4   14[BANK0 ] unsigned long 
 15630 ;;  data            2   18[BANK0 ] PTR unsigned char 
 15631 ;;		 -> data_speed(1), data_brake(1), data_steering(1), data(1), 
 15632 ;;  dataLength      1   20[BANK0 ] unsigned char 
 15633 ;;  flags           1   21[BANK0 ] enum E16909
 15634 ;; Auto vars:     Size  Location     Type
 15635 ;;  tamp            4   26[BANK0 ] unsigned long 
 15636 ;; Return value:  Size  Location     Type
 15637 ;;		None               void
 15638 ;; Registers used:
 15639 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15640 ;; Tracked objects:
 15641 ;;		On entry : 0/0
 15642 ;;		On exit  : 0/0
 15643 ;;		Unchanged: 0/0
 15644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15645 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15646 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15647 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15648 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15649 ;;Total ram usage:       16 bytes
 15650 ;; Hardware stack levels used:    1
 15651 ;; Hardware stack levels required when called:    3
 15652 ;; This function calls:
 15653 ;;		Nothing
 15654 ;; This function is called by:
 15655 ;;		_CAN_Send
 15656 ;;		_LCD_Handler
 15657 ;; This function uses a non-reentrant model
 15658 ;;
 15659                           
 15660                           	psect	text46
 15661  01139A                     __ptext46:
 15662                           	opt stack 0
 15663  01139A                     _CANsendMessage:
 15664                           	opt stack 26
 15665                           
 15666                           ;inc\CANlib.h: 296: unsigned long tamp;
 15667                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 15668                           
 15669                           ;incstack = 0
 15670  01139A  010F               	movlb	15	; () banked
 15671  01139C  B740               	btfsc	64,3,b	;volatile
 15672  01139E  D13F               	goto	l371
 15673                           
 15674                           ; BSR set to: 15
 15675                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 15676  0113A0  C074  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
 15677                           
 15678                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 15679  0113A4  0100               	movlb	0	; () banked
 15680  0113A6  AD75               	btfss	CANsendMessage@flags& (0+255),6,b
 15681  0113A8  D003               	goto	l372
 15682                           
 15683                           ; BSR set to: 0
 15684                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 15685  0113AA  010F               	movlb	15	; () banked
 15686  0113AC  8D45               	bsf	69,6,b	;volatile
 15687  0113AE  D002               	goto	l373
 15688  0113B0                     l372:
 15689                           
 15690                           ; BSR set to: 0
 15691                           ;inc\CANlib.h: 302: else
 15692                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 15693  0113B0  010F               	movlb	15	; () banked
 15694  0113B2  9D45               	bcf	69,6,b	;volatile
 15695  0113B4                     l373:
 15696                           
 15697                           ; BSR set to: 15
 15698                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 15699  0113B4  0100               	movlb	0	; () banked
 15700  0113B6  A775               	btfss	CANsendMessage@flags& (0+255),3,b
 15701  0113B8  D079               	goto	l374
 15702                           
 15703                           ; BSR set to: 0
 15704                           ;inc\CANlib.h: 306: {
 15705                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 15706  0113BA  0100               	movlb	0	; () banked
 15707  0113BC  516E               	movf	CANsendMessage@identifier& (0+255),w,b
 15708  0113BE  0100               	movlb	0	; () banked
 15709  0113C0  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 15710  0113C2  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15711  0113C4  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15712  0113C6  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15713                           
 15714                           ; BSR set to: 0
 15715                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 15716  0113C8  C07A  FF44         	movff	CANsendMessage@tamp,3908	;volatile
 15717                           
 15718                           ; BSR set to: 0
 15719                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 15720  0113CC  0E00               	movlw	0
 15721  0113CE  0100               	movlb	0	; () banked
 15722  0113D0  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
 15723  0113D2  0100               	movlb	0	; () banked
 15724  0113D4  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 15725  0113D6  0EFF               	movlw	255
 15726  0113D8  0100               	movlb	0	; () banked
 15727  0113DA  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 15728  0113DC  0100               	movlb	0	; () banked
 15729  0113DE  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 15730  0113E0  0E00               	movlw	0
 15731  0113E2  0100               	movlb	0	; () banked
 15732  0113E4  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 15733  0113E6  0100               	movlb	0	; () banked
 15734  0113E8  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 15735  0113EA  0E00               	movlw	0
 15736  0113EC  0100               	movlb	0	; () banked
 15737  0113EE  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 15738  0113F0  0100               	movlb	0	; () banked
 15739  0113F2  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 15740                           
 15741                           ; BSR set to: 0
 15742                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 15743  0113F4  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
 15744  0113F8  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 15745  0113FC  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 15746  011400  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 15747  011404  C077  F076         	movff	??_CANsendMessage+1,??_CANsendMessage
 15748  011408  C078  F077         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 15749  01140C  C079  F078         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 15750  011410  0100               	movlb	0	; () banked
 15751  011412  6B79               	clrf	(??_CANsendMessage+3)& (0+255),b
 15752  011414  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 15753  011418  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15754  01141C  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15755  011420  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15756                           
 15757                           ; BSR set to: 0
 15758                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 15759  011424  C07A  FF43         	movff	CANsendMessage@tamp,3907	;volatile
 15760                           
 15761                           ; BSR set to: 0
 15762                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 15763  011428  0E00               	movlw	0
 15764  01142A  010F               	movlb	15	; () banked
 15765  01142C  6F42               	movwf	66,b	;volatile
 15766                           
 15767                           ; BSR set to: 15
 15768                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 15769  01142E  010F               	movlb	15	; () banked
 15770  011430  8742               	bsf	66,3,b	;volatile
 15771                           
 15772                           ; BSR set to: 15
 15773                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 15774  011432  0100               	movlb	0	; () banked
 15775  011434  A170               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 15776  011436  D002               	goto	l375
 15777                           
 15778                           ; BSR set to: 0
 15779                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 15780  011438  010F               	movlb	15	; () banked
 15781  01143A  8142               	bsf	66,0,b	;volatile
 15782  01143C                     l375:
 15783                           
 15784                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 15785  01143C  0100               	movlb	0	; () banked
 15786  01143E  A370               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 15787  011440  D002               	goto	l376
 15788                           
 15789                           ; BSR set to: 0
 15790                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 15791  011442  010F               	movlb	15	; () banked
 15792  011444  8342               	bsf	66,1,b	;volatile
 15793  011446                     l376:
 15794                           
 15795                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 15796  011446  0100               	movlb	0	; () banked
 15797  011448  A570               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 15798  01144A  D002               	goto	l377
 15799                           
 15800                           ; BSR set to: 0
 15801                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 15802  01144C  010F               	movlb	15	; () banked
 15803  01144E  8B42               	bsf	66,5,b	;volatile
 15804  011450                     l377:
 15805                           
 15806                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 15807  011450  0100               	movlb	0	; () banked
 15808  011452  A770               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 15809  011454  D002               	goto	l378
 15810                           
 15811                           ; BSR set to: 0
 15812                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 15813  011456  010F               	movlb	15	; () banked
 15814  011458  8D42               	bsf	66,6,b	;volatile
 15815  01145A                     l378:
 15816                           
 15817                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 15818  01145A  0100               	movlb	0	; () banked
 15819  01145C  A970               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 15820  01145E  D002               	goto	l5841
 15821                           
 15822                           ; BSR set to: 0
 15823                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 15824  011460  010F               	movlb	15	; () banked
 15825  011462  8F42               	bsf	66,7,b	;volatile
 15826  011464                     l5841:
 15827                           
 15828                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 15829  011464  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
 15830  011468  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 15831  01146C  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 15832  011470  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 15833  011474  0E16               	movlw	22
 15834  011476  D006               	goto	u7130
 15835  011478                     u7135:
 15836  011478  0100               	movlb	0	; () banked
 15837  01147A  90D8               	bcf	status,0,c
 15838  01147C  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 15839  01147E  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 15840  011480  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 15841  011482  3376               	rrcf	??_CANsendMessage& (0+255),f,b
 15842  011484                     u7130:
 15843  011484  2EE8               	decfsz	wreg,f,c
 15844  011486  D7F8               	goto	u7135
 15845  011488  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 15846  01148C  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15847  011490  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15848  011494  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15849                           
 15850                           ; BSR set to: 0
 15851                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 15852  011498  0100               	movlb	0	; () banked
 15853  01149A  517A               	movf	CANsendMessage@tamp& (0+255),w,b
 15854  01149C  0100               	movlb	0	; () banked
 15855  01149E  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 15856  0114A0  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15857  0114A2  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15858  0114A4  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15859                           
 15860                           ; BSR set to: 0
 15861                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 15862  0114A6  C07A  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 15863                           
 15864                           ;inc\CANlib.h: 332: }
 15865  0114AA  D059               	goto	l5861
 15866  0114AC                     l374:
 15867                           
 15868                           ; BSR set to: 0
 15869                           ;inc\CANlib.h: 334: else
 15870                           ;inc\CANlib.h: 336: {
 15871                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 15872  0114AC  010F               	movlb	15	; () banked
 15873  0114AE  9742               	bcf	66,3,b	;volatile
 15874                           
 15875                           ; BSR set to: 15
 15876                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 15877  0114B0  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
 15878  0114B4  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 15879  0114B8  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 15880  0114BC  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 15881  0114C0  0E04               	movlw	4
 15882  0114C2  D006               	goto	u7140
 15883  0114C4                     u7145:
 15884  0114C4  0100               	movlb	0	; () banked
 15885  0114C6  90D8               	bcf	status,0,c
 15886  0114C8  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 15887  0114CA  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 15888  0114CC  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 15889  0114CE  3376               	rrcf	??_CANsendMessage& (0+255),f,b
 15890  0114D0                     u7140:
 15891  0114D0  2EE8               	decfsz	wreg,f,c
 15892  0114D2  D7F8               	goto	u7145
 15893  0114D4  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 15894  0114D8  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15895  0114DC  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15896  0114E0  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15897                           
 15898                           ; BSR set to: 0
 15899                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 15900  0114E4  0100               	movlb	0	; () banked
 15901  0114E6  517A               	movf	CANsendMessage@tamp& (0+255),w,b
 15902  0114E8  0100               	movlb	0	; () banked
 15903  0114EA  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 15904  0114EC  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15905  0114EE  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15906  0114F0  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15907                           
 15908                           ; BSR set to: 0
 15909                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 15910  0114F2  C07A  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 15911                           
 15912                           ; BSR set to: 0
 15913                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 15914  0114F6  0E07               	movlw	7
 15915  0114F8  0100               	movlb	0	; () banked
 15916  0114FA  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
 15917  0114FC  0100               	movlb	0	; () banked
 15918  0114FE  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 15919  011500  0E00               	movlw	0
 15920  011502  0100               	movlb	0	; () banked
 15921  011504  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 15922  011506  0100               	movlb	0	; () banked
 15923  011508  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 15924  01150A  0E00               	movlw	0
 15925  01150C  0100               	movlb	0	; () banked
 15926  01150E  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 15927  011510  0100               	movlb	0	; () banked
 15928  011512  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 15929  011514  0E00               	movlw	0
 15930  011516  0100               	movlb	0	; () banked
 15931  011518  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 15932  01151A  0100               	movlb	0	; () banked
 15933  01151C  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 15934                           
 15935                           ; BSR set to: 0
 15936                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 15937  01151E  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
 15938  011522  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 15939  011526  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 15940  01152A  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 15941  01152E  0E05               	movlw	5
 15942  011530                     u7155:
 15943  011530  90D8               	bcf	status,0,c
 15944  011532  0100               	movlb	0	; () banked
 15945  011534  3776               	rlcf	??_CANsendMessage& (0+255),f,b
 15946  011536  3777               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 15947  011538  3778               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 15948  01153A  3779               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 15949  01153C  2EE8               	decfsz	wreg,f,c
 15950  01153E  D7F8               	goto	u7155
 15951  011540  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 15952  011544  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15953  011548  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15954  01154C  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15955                           
 15956                           ; BSR set to: 0
 15957                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 15958  011550  010F               	movlb	15	; () banked
 15959  011552  5142               	movf	66,w,b	;volatile
 15960  011554  0B1F               	andlw	31
 15961  011556  010F               	movlb	15	; () banked
 15962  011558  6F42               	movwf	66,b	;volatile
 15963                           
 15964                           ; BSR set to: 15
 15965                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 15966  01155A  C07A  FF42         	movff	CANsendMessage@tamp,3906	;volatile
 15967  01155E                     l5861:
 15968                           
 15969                           ;inc\CANlib.h: 347: }
 15970                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 15971  01155E  0100               	movlb	0	; () banked
 15972  011560  A175               	btfss	CANsendMessage@flags& (0+255),0,b
 15973  011562  D003               	goto	l381
 15974                           
 15975                           ; BSR set to: 0
 15976                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 15977  011564  010F               	movlb	15	; () banked
 15978  011566  8140               	bsf	64,0,b	;volatile
 15979  011568  D002               	goto	l382
 15980  01156A                     l381:
 15981                           
 15982                           ; BSR set to: 0
 15983                           ;inc\CANlib.h: 351: else
 15984                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 15985  01156A  010F               	movlb	15	; () banked
 15986  01156C  9140               	bcf	64,0,b	;volatile
 15987  01156E                     l382:
 15988                           
 15989                           ; BSR set to: 15
 15990                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 15991  01156E  0100               	movlb	0	; () banked
 15992  011570  A375               	btfss	CANsendMessage@flags& (0+255),1,b
 15993  011572  D003               	goto	l383
 15994                           
 15995                           ; BSR set to: 0
 15996                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 15997  011574  010F               	movlb	15	; () banked
 15998  011576  8340               	bsf	64,1,b	;volatile
 15999  011578  D002               	goto	l5867
 16000  01157A                     l383:
 16001                           
 16002                           ; BSR set to: 0
 16003                           ;inc\CANlib.h: 355: else
 16004                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 16005  01157A  010F               	movlb	15	; () banked
 16006  01157C  9340               	bcf	64,1,b	;volatile
 16007  01157E                     l5867:
 16008                           
 16009                           ; BSR set to: 15
 16010                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 16011  01157E  C072  FFD9         	movff	CANsendMessage@data,fsr2l
 16012  011582  C073  FFDA         	movff	CANsendMessage@data+1,fsr2h
 16013  011586  50DF               	movf	indf2,w,c
 16014  011588  010F               	movlb	15	; () banked
 16015  01158A  6F46               	movwf	70,b	;volatile
 16016                           
 16017                           ; BSR set to: 15
 16018                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 16019  01158C  0100               	movlb	0	; () banked
 16020  01158E  EE20 F001          	lfsr	2,1
 16021  011592  5172               	movf	CANsendMessage@data& (0+255),w,b
 16022  011594  26D9               	addwf	fsr2l,f,c
 16023  011596  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16024  011598  22DA               	addwfc	fsr2h,f,c
 16025  01159A  50DF               	movf	indf2,w,c
 16026  01159C  010F               	movlb	15	; () banked
 16027  01159E  6F47               	movwf	71,b	;volatile
 16028                           
 16029                           ; BSR set to: 15
 16030                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 16031  0115A0  0100               	movlb	0	; () banked
 16032  0115A2  EE20 F002          	lfsr	2,2
 16033  0115A6  5172               	movf	CANsendMessage@data& (0+255),w,b
 16034  0115A8  26D9               	addwf	fsr2l,f,c
 16035  0115AA  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16036  0115AC  22DA               	addwfc	fsr2h,f,c
 16037  0115AE  50DF               	movf	indf2,w,c
 16038  0115B0  010F               	movlb	15	; () banked
 16039  0115B2  6F48               	movwf	72,b	;volatile
 16040                           
 16041                           ; BSR set to: 15
 16042                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 16043  0115B4  0100               	movlb	0	; () banked
 16044  0115B6  EE20 F003          	lfsr	2,3
 16045  0115BA  5172               	movf	CANsendMessage@data& (0+255),w,b
 16046  0115BC  26D9               	addwf	fsr2l,f,c
 16047  0115BE  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16048  0115C0  22DA               	addwfc	fsr2h,f,c
 16049  0115C2  50DF               	movf	indf2,w,c
 16050  0115C4  010F               	movlb	15	; () banked
 16051  0115C6  6F49               	movwf	73,b	;volatile
 16052                           
 16053                           ; BSR set to: 15
 16054                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 16055  0115C8  0100               	movlb	0	; () banked
 16056  0115CA  EE20 F004          	lfsr	2,4
 16057  0115CE  5172               	movf	CANsendMessage@data& (0+255),w,b
 16058  0115D0  26D9               	addwf	fsr2l,f,c
 16059  0115D2  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16060  0115D4  22DA               	addwfc	fsr2h,f,c
 16061  0115D6  50DF               	movf	indf2,w,c
 16062  0115D8  010F               	movlb	15	; () banked
 16063  0115DA  6F4A               	movwf	74,b	;volatile
 16064                           
 16065                           ; BSR set to: 15
 16066                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 16067  0115DC  0100               	movlb	0	; () banked
 16068  0115DE  EE20 F005          	lfsr	2,5
 16069  0115E2  5172               	movf	CANsendMessage@data& (0+255),w,b
 16070  0115E4  26D9               	addwf	fsr2l,f,c
 16071  0115E6  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16072  0115E8  22DA               	addwfc	fsr2h,f,c
 16073  0115EA  50DF               	movf	indf2,w,c
 16074  0115EC  010F               	movlb	15	; () banked
 16075  0115EE  6F4B               	movwf	75,b	;volatile
 16076                           
 16077                           ; BSR set to: 15
 16078                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 16079  0115F0  0100               	movlb	0	; () banked
 16080  0115F2  EE20 F006          	lfsr	2,6
 16081  0115F6  5172               	movf	CANsendMessage@data& (0+255),w,b
 16082  0115F8  26D9               	addwf	fsr2l,f,c
 16083  0115FA  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16084  0115FC  22DA               	addwfc	fsr2h,f,c
 16085  0115FE  50DF               	movf	indf2,w,c
 16086  011600  010F               	movlb	15	; () banked
 16087  011602  6F4C               	movwf	76,b	;volatile
 16088                           
 16089                           ; BSR set to: 15
 16090                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 16091  011604  0100               	movlb	0	; () banked
 16092  011606  EE20 F007          	lfsr	2,7
 16093  01160A  5172               	movf	CANsendMessage@data& (0+255),w,b
 16094  01160C  26D9               	addwf	fsr2l,f,c
 16095  01160E  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16096  011610  22DA               	addwfc	fsr2h,f,c
 16097  011612  50DF               	movf	indf2,w,c
 16098  011614  010F               	movlb	15	; () banked
 16099  011616  6F4D               	movwf	77,b	;volatile
 16100                           
 16101                           ; BSR set to: 15
 16102                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 16103  011618  010F               	movlb	15	; () banked
 16104  01161A  8740               	bsf	64,3,b	;volatile
 16105                           
 16106                           ; BSR set to: 15
 16107                           ;inc\CANlib.h: 368: return;
 16108  01161C  0012               	return	
 16109  01161E                     l371:
 16110                           
 16111                           ; BSR set to: 15
 16112                           ;inc\CANlib.h: 369: }
 16113                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 16114  01161E  010F               	movlb	15	; () banked
 16115  011620  B730               	btfsc	48,3,b	;volatile
 16116  011622  D13F               	goto	l386
 16117                           
 16118                           ; BSR set to: 15
 16119                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 16120  011624  C074  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
 16121                           
 16122                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 16123  011628  0100               	movlb	0	; () banked
 16124  01162A  AD75               	btfss	CANsendMessage@flags& (0+255),6,b
 16125  01162C  D003               	goto	l387
 16126                           
 16127                           ; BSR set to: 0
 16128                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 16129  01162E  010F               	movlb	15	; () banked
 16130  011630  8D35               	bsf	53,6,b	;volatile
 16131  011632  D002               	goto	l388
 16132  011634                     l387:
 16133                           
 16134                           ; BSR set to: 0
 16135                           ;inc\CANlib.h: 378: else
 16136                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 16137  011634  010F               	movlb	15	; () banked
 16138  011636  9D35               	bcf	53,6,b	;volatile
 16139  011638                     l388:
 16140                           
 16141                           ; BSR set to: 15
 16142                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 16143  011638  0100               	movlb	0	; () banked
 16144  01163A  A775               	btfss	CANsendMessage@flags& (0+255),3,b
 16145  01163C  D079               	goto	l389
 16146                           
 16147                           ; BSR set to: 0
 16148                           ;inc\CANlib.h: 382: {
 16149                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 16150  01163E  0100               	movlb	0	; () banked
 16151  011640  516E               	movf	CANsendMessage@identifier& (0+255),w,b
 16152  011642  0100               	movlb	0	; () banked
 16153  011644  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 16154  011646  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16155  011648  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16156  01164A  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16157                           
 16158                           ; BSR set to: 0
 16159                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 16160  01164C  C07A  FF34         	movff	CANsendMessage@tamp,3892	;volatile
 16161                           
 16162                           ; BSR set to: 0
 16163                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 16164  011650  0E00               	movlw	0
 16165  011652  0100               	movlb	0	; () banked
 16166  011654  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
 16167  011656  0100               	movlb	0	; () banked
 16168  011658  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 16169  01165A  0EFF               	movlw	255
 16170  01165C  0100               	movlb	0	; () banked
 16171  01165E  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16172  011660  0100               	movlb	0	; () banked
 16173  011662  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16174  011664  0E00               	movlw	0
 16175  011666  0100               	movlb	0	; () banked
 16176  011668  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16177  01166A  0100               	movlb	0	; () banked
 16178  01166C  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16179  01166E  0E00               	movlw	0
 16180  011670  0100               	movlb	0	; () banked
 16181  011672  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16182  011674  0100               	movlb	0	; () banked
 16183  011676  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16184                           
 16185                           ; BSR set to: 0
 16186                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 16187  011678  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
 16188  01167C  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 16189  011680  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 16190  011684  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 16191  011688  C077  F076         	movff	??_CANsendMessage+1,??_CANsendMessage
 16192  01168C  C078  F077         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 16193  011690  C079  F078         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 16194  011694  0100               	movlb	0	; () banked
 16195  011696  6B79               	clrf	(??_CANsendMessage+3)& (0+255),b
 16196  011698  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 16197  01169C  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16198  0116A0  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16199  0116A4  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16200                           
 16201                           ; BSR set to: 0
 16202                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 16203  0116A8  C07A  FF33         	movff	CANsendMessage@tamp,3891	;volatile
 16204                           
 16205                           ; BSR set to: 0
 16206                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 16207  0116AC  0E00               	movlw	0
 16208  0116AE  010F               	movlb	15	; () banked
 16209  0116B0  6F32               	movwf	50,b	;volatile
 16210                           
 16211                           ; BSR set to: 15
 16212                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 16213  0116B2  010F               	movlb	15	; () banked
 16214  0116B4  8732               	bsf	50,3,b	;volatile
 16215                           
 16216                           ; BSR set to: 15
 16217                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 16218  0116B6  0100               	movlb	0	; () banked
 16219  0116B8  A170               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 16220  0116BA  D002               	goto	l390
 16221                           
 16222                           ; BSR set to: 0
 16223                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 16224  0116BC  010F               	movlb	15	; () banked
 16225  0116BE  8132               	bsf	50,0,b	;volatile
 16226  0116C0                     l390:
 16227                           
 16228                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 16229  0116C0  0100               	movlb	0	; () banked
 16230  0116C2  A370               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 16231  0116C4  D002               	goto	l391
 16232                           
 16233                           ; BSR set to: 0
 16234                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 16235  0116C6  010F               	movlb	15	; () banked
 16236  0116C8  8332               	bsf	50,1,b	;volatile
 16237  0116CA                     l391:
 16238                           
 16239                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 16240  0116CA  0100               	movlb	0	; () banked
 16241  0116CC  A570               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 16242  0116CE  D002               	goto	l392
 16243                           
 16244                           ; BSR set to: 0
 16245                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 16246  0116D0  010F               	movlb	15	; () banked
 16247  0116D2  8B32               	bsf	50,5,b	;volatile
 16248  0116D4                     l392:
 16249                           
 16250                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 16251  0116D4  0100               	movlb	0	; () banked
 16252  0116D6  A770               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 16253  0116D8  D002               	goto	l393
 16254                           
 16255                           ; BSR set to: 0
 16256                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 16257  0116DA  010F               	movlb	15	; () banked
 16258  0116DC  8D32               	bsf	50,6,b	;volatile
 16259  0116DE                     l393:
 16260                           
 16261                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 16262  0116DE  0100               	movlb	0	; () banked
 16263  0116E0  A970               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 16264  0116E2  D002               	goto	l5917
 16265                           
 16266                           ; BSR set to: 0
 16267                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 16268  0116E4  010F               	movlb	15	; () banked
 16269  0116E6  8F32               	bsf	50,7,b	;volatile
 16270  0116E8                     l5917:
 16271                           
 16272                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 16273  0116E8  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
 16274  0116EC  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 16275  0116F0  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 16276  0116F4  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 16277  0116F8  0E16               	movlw	22
 16278  0116FA  D006               	goto	u7260
 16279  0116FC                     u7265:
 16280  0116FC  0100               	movlb	0	; () banked
 16281  0116FE  90D8               	bcf	status,0,c
 16282  011700  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 16283  011702  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 16284  011704  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 16285  011706  3376               	rrcf	??_CANsendMessage& (0+255),f,b
 16286  011708                     u7260:
 16287  011708  2EE8               	decfsz	wreg,f,c
 16288  01170A  D7F8               	goto	u7265
 16289  01170C  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 16290  011710  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16291  011714  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16292  011718  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16293                           
 16294                           ; BSR set to: 0
 16295                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 16296  01171C  0100               	movlb	0	; () banked
 16297  01171E  517A               	movf	CANsendMessage@tamp& (0+255),w,b
 16298  011720  0100               	movlb	0	; () banked
 16299  011722  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 16300  011724  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16301  011726  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16302  011728  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16303                           
 16304                           ; BSR set to: 0
 16305                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 16306  01172A  C07A  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 16307                           
 16308                           ;inc\CANlib.h: 407: }
 16309  01172E  D059               	goto	l5937
 16310  011730                     l389:
 16311                           
 16312                           ; BSR set to: 0
 16313                           ;inc\CANlib.h: 409: else
 16314                           ;inc\CANlib.h: 411: {
 16315                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 16316  011730  010F               	movlb	15	; () banked
 16317  011732  9732               	bcf	50,3,b	;volatile
 16318                           
 16319                           ; BSR set to: 15
 16320                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 16321  011734  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
 16322  011738  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 16323  01173C  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 16324  011740  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 16325  011744  0E04               	movlw	4
 16326  011746  D006               	goto	u7270
 16327  011748                     u7275:
 16328  011748  0100               	movlb	0	; () banked
 16329  01174A  90D8               	bcf	status,0,c
 16330  01174C  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 16331  01174E  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 16332  011750  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 16333  011752  3376               	rrcf	??_CANsendMessage& (0+255),f,b
 16334  011754                     u7270:
 16335  011754  2EE8               	decfsz	wreg,f,c
 16336  011756  D7F8               	goto	u7275
 16337  011758  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 16338  01175C  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16339  011760  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16340  011764  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16341                           
 16342                           ; BSR set to: 0
 16343                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 16344  011768  0100               	movlb	0	; () banked
 16345  01176A  517A               	movf	CANsendMessage@tamp& (0+255),w,b
 16346  01176C  0100               	movlb	0	; () banked
 16347  01176E  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 16348  011770  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16349  011772  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16350  011774  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16351                           
 16352                           ; BSR set to: 0
 16353                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 16354  011776  C07A  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 16355                           
 16356                           ; BSR set to: 0
 16357                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 16358  01177A  0E07               	movlw	7
 16359  01177C  0100               	movlb	0	; () banked
 16360  01177E  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
 16361  011780  0100               	movlb	0	; () banked
 16362  011782  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 16363  011784  0E00               	movlw	0
 16364  011786  0100               	movlb	0	; () banked
 16365  011788  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16366  01178A  0100               	movlb	0	; () banked
 16367  01178C  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16368  01178E  0E00               	movlw	0
 16369  011790  0100               	movlb	0	; () banked
 16370  011792  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16371  011794  0100               	movlb	0	; () banked
 16372  011796  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16373  011798  0E00               	movlw	0
 16374  01179A  0100               	movlb	0	; () banked
 16375  01179C  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16376  01179E  0100               	movlb	0	; () banked
 16377  0117A0  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16378                           
 16379                           ; BSR set to: 0
 16380                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 16381  0117A2  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
 16382  0117A6  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 16383  0117AA  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 16384  0117AE  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 16385  0117B2  0E05               	movlw	5
 16386  0117B4                     u7285:
 16387  0117B4  90D8               	bcf	status,0,c
 16388  0117B6  0100               	movlb	0	; () banked
 16389  0117B8  3776               	rlcf	??_CANsendMessage& (0+255),f,b
 16390  0117BA  3777               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 16391  0117BC  3778               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 16392  0117BE  3779               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 16393  0117C0  2EE8               	decfsz	wreg,f,c
 16394  0117C2  D7F8               	goto	u7285
 16395  0117C4  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 16396  0117C8  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16397  0117CC  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16398  0117D0  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16399                           
 16400                           ; BSR set to: 0
 16401                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 16402  0117D4  010F               	movlb	15	; () banked
 16403  0117D6  5132               	movf	50,w,b	;volatile
 16404  0117D8  0B1F               	andlw	31
 16405  0117DA  010F               	movlb	15	; () banked
 16406  0117DC  6F32               	movwf	50,b	;volatile
 16407                           
 16408                           ; BSR set to: 15
 16409                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 16410  0117DE  C07A  FF32         	movff	CANsendMessage@tamp,3890	;volatile
 16411  0117E2                     l5937:
 16412                           
 16413                           ;inc\CANlib.h: 422: }
 16414                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 16415  0117E2  0100               	movlb	0	; () banked
 16416  0117E4  A175               	btfss	CANsendMessage@flags& (0+255),0,b
 16417  0117E6  D003               	goto	l396
 16418                           
 16419                           ; BSR set to: 0
 16420                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 16421  0117E8  010F               	movlb	15	; () banked
 16422  0117EA  8130               	bsf	48,0,b	;volatile
 16423  0117EC  D002               	goto	l397
 16424  0117EE                     l396:
 16425                           
 16426                           ; BSR set to: 0
 16427                           ;inc\CANlib.h: 426: else
 16428                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 16429  0117EE  010F               	movlb	15	; () banked
 16430  0117F0  9130               	bcf	48,0,b	;volatile
 16431  0117F2                     l397:
 16432                           
 16433                           ; BSR set to: 15
 16434                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 16435  0117F2  0100               	movlb	0	; () banked
 16436  0117F4  A375               	btfss	CANsendMessage@flags& (0+255),1,b
 16437  0117F6  D003               	goto	l398
 16438                           
 16439                           ; BSR set to: 0
 16440                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 16441  0117F8  010F               	movlb	15	; () banked
 16442  0117FA  8330               	bsf	48,1,b	;volatile
 16443  0117FC  D002               	goto	l5943
 16444  0117FE                     l398:
 16445                           
 16446                           ; BSR set to: 0
 16447                           ;inc\CANlib.h: 430: else
 16448                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 16449  0117FE  010F               	movlb	15	; () banked
 16450  011800  9330               	bcf	48,1,b	;volatile
 16451  011802                     l5943:
 16452                           
 16453                           ; BSR set to: 15
 16454                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 16455  011802  C072  FFD9         	movff	CANsendMessage@data,fsr2l
 16456  011806  C073  FFDA         	movff	CANsendMessage@data+1,fsr2h
 16457  01180A  50DF               	movf	indf2,w,c
 16458  01180C  010F               	movlb	15	; () banked
 16459  01180E  6F36               	movwf	54,b	;volatile
 16460                           
 16461                           ; BSR set to: 15
 16462                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 16463  011810  0100               	movlb	0	; () banked
 16464  011812  EE20 F001          	lfsr	2,1
 16465  011816  5172               	movf	CANsendMessage@data& (0+255),w,b
 16466  011818  26D9               	addwf	fsr2l,f,c
 16467  01181A  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16468  01181C  22DA               	addwfc	fsr2h,f,c
 16469  01181E  50DF               	movf	indf2,w,c
 16470  011820  010F               	movlb	15	; () banked
 16471  011822  6F37               	movwf	55,b	;volatile
 16472                           
 16473                           ; BSR set to: 15
 16474                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 16475  011824  0100               	movlb	0	; () banked
 16476  011826  EE20 F002          	lfsr	2,2
 16477  01182A  5172               	movf	CANsendMessage@data& (0+255),w,b
 16478  01182C  26D9               	addwf	fsr2l,f,c
 16479  01182E  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16480  011830  22DA               	addwfc	fsr2h,f,c
 16481  011832  50DF               	movf	indf2,w,c
 16482  011834  010F               	movlb	15	; () banked
 16483  011836  6F38               	movwf	56,b	;volatile
 16484                           
 16485                           ; BSR set to: 15
 16486                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 16487  011838  0100               	movlb	0	; () banked
 16488  01183A  EE20 F003          	lfsr	2,3
 16489  01183E  5172               	movf	CANsendMessage@data& (0+255),w,b
 16490  011840  26D9               	addwf	fsr2l,f,c
 16491  011842  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16492  011844  22DA               	addwfc	fsr2h,f,c
 16493  011846  50DF               	movf	indf2,w,c
 16494  011848  010F               	movlb	15	; () banked
 16495  01184A  6F39               	movwf	57,b	;volatile
 16496                           
 16497                           ; BSR set to: 15
 16498                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 16499  01184C  0100               	movlb	0	; () banked
 16500  01184E  EE20 F004          	lfsr	2,4
 16501  011852  5172               	movf	CANsendMessage@data& (0+255),w,b
 16502  011854  26D9               	addwf	fsr2l,f,c
 16503  011856  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16504  011858  22DA               	addwfc	fsr2h,f,c
 16505  01185A  50DF               	movf	indf2,w,c
 16506  01185C  010F               	movlb	15	; () banked
 16507  01185E  6F3A               	movwf	58,b	;volatile
 16508                           
 16509                           ; BSR set to: 15
 16510                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 16511  011860  0100               	movlb	0	; () banked
 16512  011862  EE20 F005          	lfsr	2,5
 16513  011866  5172               	movf	CANsendMessage@data& (0+255),w,b
 16514  011868  26D9               	addwf	fsr2l,f,c
 16515  01186A  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16516  01186C  22DA               	addwfc	fsr2h,f,c
 16517  01186E  50DF               	movf	indf2,w,c
 16518  011870  010F               	movlb	15	; () banked
 16519  011872  6F3B               	movwf	59,b	;volatile
 16520                           
 16521                           ; BSR set to: 15
 16522                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 16523  011874  0100               	movlb	0	; () banked
 16524  011876  EE20 F006          	lfsr	2,6
 16525  01187A  5172               	movf	CANsendMessage@data& (0+255),w,b
 16526  01187C  26D9               	addwf	fsr2l,f,c
 16527  01187E  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16528  011880  22DA               	addwfc	fsr2h,f,c
 16529  011882  50DF               	movf	indf2,w,c
 16530  011884  010F               	movlb	15	; () banked
 16531  011886  6F3C               	movwf	60,b	;volatile
 16532                           
 16533                           ; BSR set to: 15
 16534                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 16535  011888  0100               	movlb	0	; () banked
 16536  01188A  EE20 F007          	lfsr	2,7
 16537  01188E  5172               	movf	CANsendMessage@data& (0+255),w,b
 16538  011890  26D9               	addwf	fsr2l,f,c
 16539  011892  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16540  011894  22DA               	addwfc	fsr2h,f,c
 16541  011896  50DF               	movf	indf2,w,c
 16542  011898  010F               	movlb	15	; () banked
 16543  01189A  6F3D               	movwf	61,b	;volatile
 16544                           
 16545                           ; BSR set to: 15
 16546                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 16547  01189C  010F               	movlb	15	; () banked
 16548  01189E  8730               	bsf	48,3,b	;volatile
 16549                           
 16550                           ; BSR set to: 15
 16551                           ;inc\CANlib.h: 444: return;
 16552  0118A0  0012               	return	
 16553  0118A2                     l386:
 16554                           
 16555                           ; BSR set to: 15
 16556                           ;inc\CANlib.h: 445: }
 16557                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 16558  0118A2  010F               	movlb	15	; () banked
 16559  0118A4  B720               	btfsc	32,3,b	;volatile
 16560  0118A6  0012               	return	
 16561                           
 16562                           ; BSR set to: 15
 16563                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 16564  0118A8  C074  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
 16565                           
 16566                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 16567  0118AC  0100               	movlb	0	; () banked
 16568  0118AE  AD75               	btfss	CANsendMessage@flags& (0+255),6,b
 16569  0118B0  D003               	goto	l401
 16570                           
 16571                           ; BSR set to: 0
 16572                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 16573  0118B2  010F               	movlb	15	; () banked
 16574  0118B4  8D25               	bsf	37,6,b	;volatile
 16575  0118B6  D002               	goto	l402
 16576  0118B8                     l401:
 16577                           
 16578                           ; BSR set to: 0
 16579                           ;inc\CANlib.h: 454: else
 16580                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 16581  0118B8  010F               	movlb	15	; () banked
 16582  0118BA  9D25               	bcf	37,6,b	;volatile
 16583  0118BC                     l402:
 16584                           
 16585                           ; BSR set to: 15
 16586                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 16587  0118BC  0100               	movlb	0	; () banked
 16588  0118BE  A775               	btfss	CANsendMessage@flags& (0+255),3,b
 16589  0118C0  D079               	goto	l403
 16590                           
 16591                           ; BSR set to: 0
 16592                           ;inc\CANlib.h: 458: {
 16593                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 16594  0118C2  0100               	movlb	0	; () banked
 16595  0118C4  516E               	movf	CANsendMessage@identifier& (0+255),w,b
 16596  0118C6  0100               	movlb	0	; () banked
 16597  0118C8  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 16598  0118CA  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16599  0118CC  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16600  0118CE  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16601                           
 16602                           ; BSR set to: 0
 16603                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 16604  0118D0  C07A  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 16605                           
 16606                           ; BSR set to: 0
 16607                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 16608  0118D4  0E00               	movlw	0
 16609  0118D6  0100               	movlb	0	; () banked
 16610  0118D8  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
 16611  0118DA  0100               	movlb	0	; () banked
 16612  0118DC  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 16613  0118DE  0EFF               	movlw	255
 16614  0118E0  0100               	movlb	0	; () banked
 16615  0118E2  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16616  0118E4  0100               	movlb	0	; () banked
 16617  0118E6  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16618  0118E8  0E00               	movlw	0
 16619  0118EA  0100               	movlb	0	; () banked
 16620  0118EC  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16621  0118EE  0100               	movlb	0	; () banked
 16622  0118F0  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16623  0118F2  0E00               	movlw	0
 16624  0118F4  0100               	movlb	0	; () banked
 16625  0118F6  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16626  0118F8  0100               	movlb	0	; () banked
 16627  0118FA  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16628                           
 16629                           ; BSR set to: 0
 16630                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 16631  0118FC  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
 16632  011900  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 16633  011904  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 16634  011908  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 16635  01190C  C077  F076         	movff	??_CANsendMessage+1,??_CANsendMessage
 16636  011910  C078  F077         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 16637  011914  C079  F078         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 16638  011918  0100               	movlb	0	; () banked
 16639  01191A  6B79               	clrf	(??_CANsendMessage+3)& (0+255),b
 16640  01191C  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 16641  011920  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16642  011924  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16643  011928  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16644                           
 16645                           ; BSR set to: 0
 16646                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 16647  01192C  C07A  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 16648                           
 16649                           ; BSR set to: 0
 16650                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 16651  011930  0E00               	movlw	0
 16652  011932  010F               	movlb	15	; () banked
 16653  011934  6F22               	movwf	34,b	;volatile
 16654                           
 16655                           ; BSR set to: 15
 16656                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 16657  011936  010F               	movlb	15	; () banked
 16658  011938  8722               	bsf	34,3,b	;volatile
 16659                           
 16660                           ; BSR set to: 15
 16661                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 16662  01193A  0100               	movlb	0	; () banked
 16663  01193C  A170               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 16664  01193E  D002               	goto	l404
 16665                           
 16666                           ; BSR set to: 0
 16667                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 16668  011940  010F               	movlb	15	; () banked
 16669  011942  8122               	bsf	34,0,b	;volatile
 16670  011944                     l404:
 16671                           
 16672                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 16673  011944  0100               	movlb	0	; () banked
 16674  011946  A370               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 16675  011948  D002               	goto	l405
 16676                           
 16677                           ; BSR set to: 0
 16678                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 16679  01194A  010F               	movlb	15	; () banked
 16680  01194C  8322               	bsf	34,1,b	;volatile
 16681  01194E                     l405:
 16682                           
 16683                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 16684  01194E  0100               	movlb	0	; () banked
 16685  011950  A570               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 16686  011952  D002               	goto	l406
 16687                           
 16688                           ; BSR set to: 0
 16689                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 16690  011954  010F               	movlb	15	; () banked
 16691  011956  8B22               	bsf	34,5,b	;volatile
 16692  011958                     l406:
 16693                           
 16694                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 16695  011958  0100               	movlb	0	; () banked
 16696  01195A  A770               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 16697  01195C  D002               	goto	l407
 16698                           
 16699                           ; BSR set to: 0
 16700                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 16701  01195E  010F               	movlb	15	; () banked
 16702  011960  8D22               	bsf	34,6,b	;volatile
 16703  011962                     l407:
 16704                           
 16705                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 16706  011962  0100               	movlb	0	; () banked
 16707  011964  A970               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 16708  011966  D002               	goto	l5993
 16709                           
 16710                           ; BSR set to: 0
 16711                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 16712  011968  010F               	movlb	15	; () banked
 16713  01196A  8F22               	bsf	34,7,b	;volatile
 16714  01196C                     l5993:
 16715                           
 16716                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 16717  01196C  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
 16718  011970  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 16719  011974  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 16720  011978  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 16721  01197C  0E16               	movlw	22
 16722  01197E  D006               	goto	u7390
 16723  011980                     u7395:
 16724  011980  0100               	movlb	0	; () banked
 16725  011982  90D8               	bcf	status,0,c
 16726  011984  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 16727  011986  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 16728  011988  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 16729  01198A  3376               	rrcf	??_CANsendMessage& (0+255),f,b
 16730  01198C                     u7390:
 16731  01198C  2EE8               	decfsz	wreg,f,c
 16732  01198E  D7F8               	goto	u7395
 16733  011990  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 16734  011994  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16735  011998  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16736  01199C  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16737                           
 16738                           ; BSR set to: 0
 16739                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 16740  0119A0  0100               	movlb	0	; () banked
 16741  0119A2  517A               	movf	CANsendMessage@tamp& (0+255),w,b
 16742  0119A4  0100               	movlb	0	; () banked
 16743  0119A6  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 16744  0119A8  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16745  0119AA  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16746  0119AC  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16747                           
 16748                           ; BSR set to: 0
 16749                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 16750  0119AE  C07A  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 16751                           
 16752                           ;inc\CANlib.h: 483: }
 16753  0119B2  D059               	goto	l6013
 16754  0119B4                     l403:
 16755                           
 16756                           ; BSR set to: 0
 16757                           ;inc\CANlib.h: 485: else
 16758                           ;inc\CANlib.h: 487: {
 16759                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 16760  0119B4  010F               	movlb	15	; () banked
 16761  0119B6  9722               	bcf	34,3,b	;volatile
 16762                           
 16763                           ; BSR set to: 15
 16764                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 16765  0119B8  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
 16766  0119BC  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 16767  0119C0  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 16768  0119C4  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 16769  0119C8  0E04               	movlw	4
 16770  0119CA  D006               	goto	u7400
 16771  0119CC                     u7405:
 16772  0119CC  0100               	movlb	0	; () banked
 16773  0119CE  90D8               	bcf	status,0,c
 16774  0119D0  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 16775  0119D2  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 16776  0119D4  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 16777  0119D6  3376               	rrcf	??_CANsendMessage& (0+255),f,b
 16778  0119D8                     u7400:
 16779  0119D8  2EE8               	decfsz	wreg,f,c
 16780  0119DA  D7F8               	goto	u7405
 16781  0119DC  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 16782  0119E0  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16783  0119E4  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16784  0119E8  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16785                           
 16786                           ; BSR set to: 0
 16787                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 16788  0119EC  0100               	movlb	0	; () banked
 16789  0119EE  517A               	movf	CANsendMessage@tamp& (0+255),w,b
 16790  0119F0  0100               	movlb	0	; () banked
 16791  0119F2  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 16792  0119F4  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16793  0119F6  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16794  0119F8  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16795                           
 16796                           ; BSR set to: 0
 16797                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 16798  0119FA  C07A  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 16799                           
 16800                           ; BSR set to: 0
 16801                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 16802  0119FE  0E07               	movlw	7
 16803  011A00  0100               	movlb	0	; () banked
 16804  011A02  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
 16805  011A04  0100               	movlb	0	; () banked
 16806  011A06  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 16807  011A08  0E00               	movlw	0
 16808  011A0A  0100               	movlb	0	; () banked
 16809  011A0C  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16810  011A0E  0100               	movlb	0	; () banked
 16811  011A10  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16812  011A12  0E00               	movlw	0
 16813  011A14  0100               	movlb	0	; () banked
 16814  011A16  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16815  011A18  0100               	movlb	0	; () banked
 16816  011A1A  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16817  011A1C  0E00               	movlw	0
 16818  011A1E  0100               	movlb	0	; () banked
 16819  011A20  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16820  011A22  0100               	movlb	0	; () banked
 16821  011A24  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16822                           
 16823                           ; BSR set to: 0
 16824                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 16825  011A26  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
 16826  011A2A  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 16827  011A2E  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 16828  011A32  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 16829  011A36  0E05               	movlw	5
 16830  011A38                     u7415:
 16831  011A38  90D8               	bcf	status,0,c
 16832  011A3A  0100               	movlb	0	; () banked
 16833  011A3C  3776               	rlcf	??_CANsendMessage& (0+255),f,b
 16834  011A3E  3777               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 16835  011A40  3778               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 16836  011A42  3779               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 16837  011A44  2EE8               	decfsz	wreg,f,c
 16838  011A46  D7F8               	goto	u7415
 16839  011A48  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 16840  011A4C  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16841  011A50  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16842  011A54  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16843                           
 16844                           ; BSR set to: 0
 16845                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 16846  011A58  010F               	movlb	15	; () banked
 16847  011A5A  5122               	movf	34,w,b	;volatile
 16848  011A5C  0B1F               	andlw	31
 16849  011A5E  010F               	movlb	15	; () banked
 16850  011A60  6F22               	movwf	34,b	;volatile
 16851                           
 16852                           ; BSR set to: 15
 16853                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 16854  011A62  C07A  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 16855  011A66                     l6013:
 16856                           
 16857                           ;inc\CANlib.h: 498: }
 16858                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 16859  011A66  0100               	movlb	0	; () banked
 16860  011A68  A175               	btfss	CANsendMessage@flags& (0+255),0,b
 16861  011A6A  D003               	goto	l410
 16862                           
 16863                           ; BSR set to: 0
 16864                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 16865  011A6C  010F               	movlb	15	; () banked
 16866  011A6E  8120               	bsf	32,0,b	;volatile
 16867  011A70  D002               	goto	l411
 16868  011A72                     l410:
 16869                           
 16870                           ; BSR set to: 0
 16871                           ;inc\CANlib.h: 502: else
 16872                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 16873  011A72  010F               	movlb	15	; () banked
 16874  011A74  9120               	bcf	32,0,b	;volatile
 16875  011A76                     l411:
 16876                           
 16877                           ; BSR set to: 15
 16878                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 16879  011A76  0100               	movlb	0	; () banked
 16880  011A78  A375               	btfss	CANsendMessage@flags& (0+255),1,b
 16881  011A7A  D003               	goto	l412
 16882                           
 16883                           ; BSR set to: 0
 16884                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 16885  011A7C  010F               	movlb	15	; () banked
 16886  011A7E  8320               	bsf	32,1,b	;volatile
 16887  011A80  D002               	goto	l6019
 16888  011A82                     l412:
 16889                           
 16890                           ; BSR set to: 0
 16891                           ;inc\CANlib.h: 506: else
 16892                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 16893  011A82  010F               	movlb	15	; () banked
 16894  011A84  9320               	bcf	32,1,b	;volatile
 16895  011A86                     l6019:
 16896                           
 16897                           ; BSR set to: 15
 16898                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 16899  011A86  C072  FFD9         	movff	CANsendMessage@data,fsr2l
 16900  011A8A  C073  FFDA         	movff	CANsendMessage@data+1,fsr2h
 16901  011A8E  50DF               	movf	indf2,w,c
 16902  011A90  010F               	movlb	15	; () banked
 16903  011A92  6F26               	movwf	38,b	;volatile
 16904                           
 16905                           ; BSR set to: 15
 16906                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 16907  011A94  0100               	movlb	0	; () banked
 16908  011A96  EE20 F001          	lfsr	2,1
 16909  011A9A  5172               	movf	CANsendMessage@data& (0+255),w,b
 16910  011A9C  26D9               	addwf	fsr2l,f,c
 16911  011A9E  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16912  011AA0  22DA               	addwfc	fsr2h,f,c
 16913  011AA2  50DF               	movf	indf2,w,c
 16914  011AA4  010F               	movlb	15	; () banked
 16915  011AA6  6F27               	movwf	39,b	;volatile
 16916                           
 16917                           ; BSR set to: 15
 16918                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 16919  011AA8  0100               	movlb	0	; () banked
 16920  011AAA  EE20 F002          	lfsr	2,2
 16921  011AAE  5172               	movf	CANsendMessage@data& (0+255),w,b
 16922  011AB0  26D9               	addwf	fsr2l,f,c
 16923  011AB2  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16924  011AB4  22DA               	addwfc	fsr2h,f,c
 16925  011AB6  50DF               	movf	indf2,w,c
 16926  011AB8  010F               	movlb	15	; () banked
 16927  011ABA  6F28               	movwf	40,b	;volatile
 16928                           
 16929                           ; BSR set to: 15
 16930                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 16931  011ABC  0100               	movlb	0	; () banked
 16932  011ABE  EE20 F003          	lfsr	2,3
 16933  011AC2  5172               	movf	CANsendMessage@data& (0+255),w,b
 16934  011AC4  26D9               	addwf	fsr2l,f,c
 16935  011AC6  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16936  011AC8  22DA               	addwfc	fsr2h,f,c
 16937  011ACA  50DF               	movf	indf2,w,c
 16938  011ACC  010F               	movlb	15	; () banked
 16939  011ACE  6F29               	movwf	41,b	;volatile
 16940                           
 16941                           ; BSR set to: 15
 16942                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 16943  011AD0  0100               	movlb	0	; () banked
 16944  011AD2  EE20 F004          	lfsr	2,4
 16945  011AD6  5172               	movf	CANsendMessage@data& (0+255),w,b
 16946  011AD8  26D9               	addwf	fsr2l,f,c
 16947  011ADA  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16948  011ADC  22DA               	addwfc	fsr2h,f,c
 16949  011ADE  50DF               	movf	indf2,w,c
 16950  011AE0  010F               	movlb	15	; () banked
 16951  011AE2  6F2A               	movwf	42,b	;volatile
 16952                           
 16953                           ; BSR set to: 15
 16954                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 16955  011AE4  0100               	movlb	0	; () banked
 16956  011AE6  EE20 F005          	lfsr	2,5
 16957  011AEA  5172               	movf	CANsendMessage@data& (0+255),w,b
 16958  011AEC  26D9               	addwf	fsr2l,f,c
 16959  011AEE  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16960  011AF0  22DA               	addwfc	fsr2h,f,c
 16961  011AF2  50DF               	movf	indf2,w,c
 16962  011AF4  010F               	movlb	15	; () banked
 16963  011AF6  6F2B               	movwf	43,b	;volatile
 16964                           
 16965                           ; BSR set to: 15
 16966                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 16967  011AF8  0100               	movlb	0	; () banked
 16968  011AFA  EE20 F006          	lfsr	2,6
 16969  011AFE  5172               	movf	CANsendMessage@data& (0+255),w,b
 16970  011B00  26D9               	addwf	fsr2l,f,c
 16971  011B02  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16972  011B04  22DA               	addwfc	fsr2h,f,c
 16973  011B06  50DF               	movf	indf2,w,c
 16974  011B08  010F               	movlb	15	; () banked
 16975  011B0A  6F2C               	movwf	44,b	;volatile
 16976                           
 16977                           ; BSR set to: 15
 16978                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 16979  011B0C  0100               	movlb	0	; () banked
 16980  011B0E  EE20 F007          	lfsr	2,7
 16981  011B12  5172               	movf	CANsendMessage@data& (0+255),w,b
 16982  011B14  26D9               	addwf	fsr2l,f,c
 16983  011B16  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16984  011B18  22DA               	addwfc	fsr2h,f,c
 16985  011B1A  50DF               	movf	indf2,w,c
 16986  011B1C  010F               	movlb	15	; () banked
 16987  011B1E  6F2D               	movwf	45,b	;volatile
 16988                           
 16989                           ; BSR set to: 15
 16990                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 16991  011B20  010F               	movlb	15	; () banked
 16992  011B22  8720               	bsf	32,3,b	;volatile
 16993                           
 16994                           ; BSR set to: 15
 16995                           ;inc\CANlib.h: 520: return;
 16996  011B24  0012               	return	
 16997  011B26                     __end_of_CANsendMessage:
 16998                           	opt stack 0
 16999                           tblptru	equ	0xFF8
 17000                           tblptrh	equ	0xFF7
 17001                           tblptrl	equ	0xFF6
 17002                           tablat	equ	0xFF5
 17003                           prodh	equ	0xFF4
 17004                           prodl	equ	0xFF3
 17005                           intcon	equ	0xFF2
 17006                           postinc0	equ	0xFEE
 17007                           wreg	equ	0xFE8
 17008                           indf1	equ	0xFE7
 17009                           plusw1	equ	0xFE3
 17010                           fsr1h	equ	0xFE2
 17011                           fsr1l	equ	0xFE1
 17012                           indf2	equ	0xFDF
 17013                           postinc2	equ	0xFDE
 17014                           plusw2	equ	0xFDB
 17015                           fsr2h	equ	0xFDA
 17016                           fsr2l	equ	0xFD9
 17017                           status	equ	0xFD8
 17018                           
 17019 ;; *************** function _CANisTxReady *****************
 17020 ;; Defined at:
 17021 ;;		line 1154 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 17022 ;; Parameters:    Size  Location     Type
 17023 ;;		None
 17024 ;; Auto vars:     Size  Location     Type
 17025 ;;		None
 17026 ;; Return value:  Size  Location     Type
 17027 ;;                  1    wreg      unsigned char 
 17028 ;; Registers used:
 17029 ;;		wreg, status,2
 17030 ;; Tracked objects:
 17031 ;;		On entry : 0/0
 17032 ;;		On exit  : 0/0
 17033 ;;		Unchanged: 0/0
 17034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17036 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17038 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17039 ;;Total ram usage:        1 bytes
 17040 ;; Hardware stack levels used:    1
 17041 ;; Hardware stack levels required when called:    3
 17042 ;; This function calls:
 17043 ;;		Nothing
 17044 ;; This function is called by:
 17045 ;;		_CAN_Send
 17046 ;;		_LCD_Handler
 17047 ;; This function uses a non-reentrant model
 17048 ;;
 17049                           
 17050                           	psect	text47
 17051  015DC8                     __ptext47:
 17052                           	opt stack 0
 17053  015DC8                     _CANisTxReady:
 17054                           	opt stack 26
 17055                           
 17056                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 17057                           
 17058                           ; BSR set to: 15
 17059                           ;incstack = 0
 17060  015DC8  0E01               	movlw	1
 17061  015DCA  0100               	movlb	0	; () banked
 17062  015DCC  6F6E               	movwf	_CANisTxReady$3227& (0+255),b
 17063                           
 17064                           ; BSR set to: 0
 17065  015DCE  010F               	movlb	15	; () banked
 17066  015DD0  A740               	btfss	64,3,b	;volatile
 17067  015DD2  D009               	goto	l564
 17068                           
 17069                           ; BSR set to: 15
 17070  015DD4  010F               	movlb	15	; () banked
 17071  015DD6  A730               	btfss	48,3,b	;volatile
 17072  015DD8  D006               	goto	l564
 17073                           
 17074                           ; BSR set to: 15
 17075  015DDA  010F               	movlb	15	; () banked
 17076  015DDC  A720               	btfss	32,3,b	;volatile
 17077  015DDE  D003               	goto	l564
 17078                           
 17079                           ; BSR set to: 15
 17080  015DE0  0E00               	movlw	0
 17081  015DE2  0100               	movlb	0	; () banked
 17082  015DE4  6F6E               	movwf	_CANisTxReady$3227& (0+255),b
 17083  015DE6                     l564:
 17084  015DE6  0100               	movlb	0	; () banked
 17085  015DE8  516E               	movf	_CANisTxReady$3227& (0+255),w,b
 17086  015DEA  0012               	return	
 17087  015DEC                     __end_of_CANisTxReady:
 17088                           	opt stack 0
 17089                           tblptru	equ	0xFF8
 17090                           tblptrh	equ	0xFF7
 17091                           tblptrl	equ	0xFF6
 17092                           tablat	equ	0xFF5
 17093                           prodh	equ	0xFF4
 17094                           prodl	equ	0xFF3
 17095                           intcon	equ	0xFF2
 17096                           postinc0	equ	0xFEE
 17097                           wreg	equ	0xFE8
 17098                           indf1	equ	0xFE7
 17099                           plusw1	equ	0xFE3
 17100                           fsr1h	equ	0xFE2
 17101                           fsr1l	equ	0xFE1
 17102                           indf2	equ	0xFDF
 17103                           postinc2	equ	0xFDE
 17104                           plusw2	equ	0xFDB
 17105                           fsr2h	equ	0xFDA
 17106                           fsr2l	equ	0xFD9
 17107                           status	equ	0xFD8
 17108                           
 17109 ;; *************** function _ISR_bassa *****************
 17110 ;; Defined at:
 17111 ;;		line 105 in file "RemoteCan.c"
 17112 ;; Parameters:    Size  Location     Type
 17113 ;;		None
 17114 ;; Auto vars:     Size  Location     Type
 17115 ;;		None
 17116 ;; Return value:  Size  Location     Type
 17117 ;;		None               void
 17118 ;; Registers used:
 17119 ;;		wreg, status,2, status,0
 17120 ;; Tracked objects:
 17121 ;;		On entry : 0/0
 17122 ;;		On exit  : 0/0
 17123 ;;		Unchanged: 0/0
 17124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17127 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17128 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17129 ;;Total ram usage:       17 bytes
 17130 ;; Hardware stack levels used:    1
 17131 ;; Hardware stack levels required when called:    2
 17132 ;; This function calls:
 17133 ;;		Nothing
 17134 ;; This function is called by:
 17135 ;;		Interrupt level 1
 17136 ;; This function uses a non-reentrant model
 17137 ;;
 17138                           
 17139                           	psect	intcodelo
 17140  000018                     __pintcodelo:
 17141                           	opt stack 0
 17142  000018                     _ISR_bassa:
 17143                           	opt stack 20
 17144                           
 17145                           ; BSR set to: 0
 17146                           ;incstack = 0
 17147  000018  8048               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 17148  00001A  CFD8 F025          	movff	status,??_ISR_bassa
 17149  00001E  CFE8 F026          	movff	wreg,??_ISR_bassa+1
 17150  000022  CFE0 F027          	movff	bsr,??_ISR_bassa+2
 17151  000026  CFFA F028          	movff	pclath,??_ISR_bassa+3
 17152  00002A  CFFB F029          	movff	pclatu,??_ISR_bassa+4
 17153  00002E  CFE9 F02A          	movff	fsr0l,??_ISR_bassa+5
 17154  000032  CFEA F02B          	movff	fsr0h,??_ISR_bassa+6
 17155  000036  CFE1 F02C          	movff	fsr1l,??_ISR_bassa+7
 17156  00003A  CFE2 F02D          	movff	fsr1h,??_ISR_bassa+8
 17157  00003E  CFD9 F02E          	movff	fsr2l,??_ISR_bassa+9
 17158  000042  CFDA F02F          	movff	fsr2h,??_ISR_bassa+10
 17159  000046  CFF3 F030          	movff	prodl,??_ISR_bassa+11
 17160  00004A  CFF4 F031          	movff	prodh,??_ISR_bassa+12
 17161  00004E  CFF6 F032          	movff	tblptrl,??_ISR_bassa+13
 17162  000052  CFF7 F033          	movff	tblptrh,??_ISR_bassa+14
 17163  000056  CFF8 F034          	movff	tblptru,??_ISR_bassa+15
 17164  00005A  CFF5 F035          	movff	tablat,??_ISR_bassa+16
 17165                           
 17166                           ;RemoteCan.c: 106: if (PIR2bits.TMR3IF == 1) {
 17167  00005E  A2A1               	btfss	4001,1,c	;volatile
 17168  000060  D00B               	goto	i1l743
 17169                           
 17170                           ;RemoteCan.c: 107: time_counter++;
 17171  000062  0E01               	movlw	1
 17172  000064  261A               	addwf	_time_counter,f,c	;volatile
 17173  000066  0E00               	movlw	0
 17174  000068  221B               	addwfc	_time_counter+1,f,c	;volatile
 17175  00006A  221C               	addwfc	_time_counter+2,f,c	;volatile
 17176  00006C  221D               	addwfc	_time_counter+3,f,c	;volatile
 17177                           
 17178                           ;RemoteCan.c: 108: TMR3H = 0x63;
 17179  00006E  0E63               	movlw	99
 17180  000070  6EB3               	movwf	4019,c	;volatile
 17181                           
 17182                           ;RemoteCan.c: 109: TMR3L = 0xC0;
 17183  000072  0EC0               	movlw	192
 17184  000074  6EB2               	movwf	4018,c	;volatile
 17185                           
 17186                           ;RemoteCan.c: 110: PIR2bits.TMR3IF = 0;
 17187  000076  92A1               	bcf	4001,1,c	;volatile
 17188  000078                     i1l743:
 17189  000078  C035  FFF5         	movff	??_ISR_bassa+16,tablat
 17190  00007C  C034  FFF8         	movff	??_ISR_bassa+15,tblptru
 17191  000080  C033  FFF7         	movff	??_ISR_bassa+14,tblptrh
 17192  000084  C032  FFF6         	movff	??_ISR_bassa+13,tblptrl
 17193  000088  C031  FFF4         	movff	??_ISR_bassa+12,prodh
 17194  00008C  C030  FFF3         	movff	??_ISR_bassa+11,prodl
 17195  000090  C02F  FFDA         	movff	??_ISR_bassa+10,fsr2h
 17196  000094  C02E  FFD9         	movff	??_ISR_bassa+9,fsr2l
 17197  000098  C02D  FFE2         	movff	??_ISR_bassa+8,fsr1h
 17198  00009C  C02C  FFE1         	movff	??_ISR_bassa+7,fsr1l
 17199  0000A0  C02B  FFEA         	movff	??_ISR_bassa+6,fsr0h
 17200  0000A4  C02A  FFE9         	movff	??_ISR_bassa+5,fsr0l
 17201  0000A8  C029  FFFB         	movff	??_ISR_bassa+4,pclatu
 17202  0000AC  C028  FFFA         	movff	??_ISR_bassa+3,pclath
 17203  0000B0  C027  FFE0         	movff	??_ISR_bassa+2,bsr
 17204  0000B4  C026  FFE8         	movff	??_ISR_bassa+1,wreg
 17205  0000B8  C025  FFD8         	movff	??_ISR_bassa,status
 17206  0000BC  9048               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 17207  0000BE  0010               	retfie	
 17208  0000C0                     __end_of_ISR_bassa:
 17209                           	opt stack 0
 17210                           pclatu	equ	0xFFB
 17211                           pclath	equ	0xFFA
 17212                           tblptru	equ	0xFF8
 17213                           tblptrh	equ	0xFF7
 17214                           tblptrl	equ	0xFF6
 17215                           tablat	equ	0xFF5
 17216                           prodh	equ	0xFF4
 17217                           prodl	equ	0xFF3
 17218                           intcon	equ	0xFF2
 17219                           postinc0	equ	0xFEE
 17220                           fsr0h	equ	0xFEA
 17221                           fsr0l	equ	0xFE9
 17222                           wreg	equ	0xFE8
 17223                           indf1	equ	0xFE7
 17224                           plusw1	equ	0xFE3
 17225                           fsr1h	equ	0xFE2
 17226                           fsr1l	equ	0xFE1
 17227                           bsr	equ	0xFE0
 17228                           indf2	equ	0xFDF
 17229                           postinc2	equ	0xFDE
 17230                           plusw2	equ	0xFDB
 17231                           fsr2h	equ	0xFDA
 17232                           fsr2l	equ	0xFD9
 17233                           status	equ	0xFD8
 17234                           
 17235 ;; *************** function _ISR_alta *****************
 17236 ;; Defined at:
 17237 ;;		line 72 in file "RemoteCan.c"
 17238 ;; Parameters:    Size  Location     Type
 17239 ;;		None
 17240 ;; Auto vars:     Size  Location     Type
 17241 ;;  i               1   33[COMRAM] unsigned char 
 17242 ;; Return value:  Size  Location     Type
 17243 ;;		None               void
 17244 ;; Registers used:
 17245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17246 ;; Tracked objects:
 17247 ;;		On entry : 0/0
 17248 ;;		On exit  : 0/0
 17249 ;;		Unchanged: 0/0
 17250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17252 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17253 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17254 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17255 ;;Total ram usage:       15 bytes
 17256 ;; Hardware stack levels used:    1
 17257 ;; Hardware stack levels required when called:    1
 17258 ;; This function calls:
 17259 ;;		_CANisRxReady
 17260 ;;		_CANreceiveMessage
 17261 ;;		i2_CANisTxReady
 17262 ;;		i2_CANsendMessage
 17263 ;; This function is called by:
 17264 ;;		Interrupt level 2
 17265 ;; This function uses a non-reentrant model
 17266 ;;
 17267                           
 17268                           	psect	intcode
 17269  000008                     __pintcode:
 17270                           	opt stack 0
 17271  000008                     _ISR_alta:
 17272                           	opt stack 20
 17273                           
 17274                           ;incstack = 0
 17275  000008  8248               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 17276  00000A  CFFA F060          	movff	pclath,??_ISR_alta
 17277  00000E  CFFB F061          	movff	pclatu,??_ISR_alta+1
 17278  000012  EF37  F0A8         	goto	int_func
 17279                           pclatu	equ	0xFFB
 17280                           pclath	equ	0xFFA
 17281                           tblptru	equ	0xFF8
 17282                           tblptrh	equ	0xFF7
 17283                           tblptrl	equ	0xFF6
 17284                           tablat	equ	0xFF5
 17285                           prodh	equ	0xFF4
 17286                           prodl	equ	0xFF3
 17287                           intcon	equ	0xFF2
 17288                           postinc0	equ	0xFEE
 17289                           fsr0h	equ	0xFEA
 17290                           fsr0l	equ	0xFE9
 17291                           wreg	equ	0xFE8
 17292                           indf1	equ	0xFE7
 17293                           plusw1	equ	0xFE3
 17294                           fsr1h	equ	0xFE2
 17295                           fsr1l	equ	0xFE1
 17296                           bsr	equ	0xFE0
 17297                           indf2	equ	0xFDF
 17298                           postinc2	equ	0xFDE
 17299                           plusw2	equ	0xFDB
 17300                           fsr2h	equ	0xFDA
 17301                           fsr2l	equ	0xFD9
 17302                           status	equ	0xFD8
 17303                           
 17304                           	psect	intcode_body
 17305  01506E                     __pintcode_body:
 17306                           	opt stack 20
 17307  01506E                     int_func:
 17308                           	opt stack 20
 17309  01506E  CFE9 F062          	movff	fsr0l,??_ISR_alta+2
 17310  015072  CFEA F063          	movff	fsr0h,??_ISR_alta+3
 17311  015076  CFE1 F064          	movff	fsr1l,??_ISR_alta+4
 17312  01507A  CFE2 F065          	movff	fsr1h,??_ISR_alta+5
 17313  01507E  CFD9 F066          	movff	fsr2l,??_ISR_alta+6
 17314  015082  CFDA F067          	movff	fsr2h,??_ISR_alta+7
 17315  015086  CFF3 F068          	movff	prodl,??_ISR_alta+8
 17316  01508A  CFF4 F069          	movff	prodh,??_ISR_alta+9
 17317  01508E  CFF6 F06A          	movff	tblptrl,??_ISR_alta+10
 17318  015092  CFF7 F06B          	movff	tblptrh,??_ISR_alta+11
 17319  015096  CFF8 F06C          	movff	tblptru,??_ISR_alta+12
 17320  01509A  CFF5 F06D          	movff	tablat,??_ISR_alta+13
 17321                           
 17322                           ;RemoteCan.c: 73: if ((PIR3bits.RXB1IF == 1) || (PIR3bits.RXB0IF == 1)) {
 17323  01509E  A2A4               	btfss	4004,1,c	;volatile
 17324  0150A0  B0A4               	btfsc	4004,0,c	;volatile
 17325  0150A2  D001               	goto	i2l8535
 17326  0150A4  D06F               	goto	i2l739
 17327  0150A6                     i2l8535:
 17328                           
 17329                           ;RemoteCan.c: 74: if (CANisRxReady()) {
 17330  0150A6  EC2F  F0AF         	call	_CANisRxReady	;wreg free
 17331  0150AA  0900               	iorlw	0
 17332  0150AC  B4D8               	btfsc	status,2,c
 17333  0150AE  D066               	goto	i2l8579
 17334                           
 17335                           ;RemoteCan.c: 75: CANreceiveMessage(&msg);
 17336  0150B0  0E00               	movlw	low _msg
 17337  0150B2  6E36               	movwf	CANreceiveMessage@msg,c
 17338  0150B4  0E01               	movlw	high _msg
 17339  0150B6  6E37               	movwf	CANreceiveMessage@msg+1,c
 17340  0150B8  EC68  F093         	call	_CANreceiveMessage	;wreg free
 17341                           
 17342                           ;RemoteCan.c: 76: RTR_Flag = msg.RTR;
 17343  0150BC  0101               	movlb	1	; () banked
 17344  0150BE  A10E               	btfss	(_msg+14)& (0+255),0,b
 17345  0150C0  D002               	goto	i2u1104_40
 17346  0150C2  8447               	bsf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 17347  0150C4  D001               	goto	i2l8541
 17348  0150C6                     i2u1104_40:
 17349  0150C6  9447               	bcf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 17350  0150C8                     i2l8541:
 17351                           
 17352                           ;RemoteCan.c: 77: id = msg.identifier;
 17353  0150C8  C100  F012         	movff	_msg,_id	;volatile
 17354  0150CC  C101  F013         	movff	_msg+1,_id+1	;volatile
 17355  0150D0  C102  F014         	movff	_msg+2,_id+2	;volatile
 17356  0150D4  C103  F015         	movff	_msg+3,_id+3	;volatile
 17357                           
 17358                           ;RemoteCan.c: 78: newMessageCan = 1;
 17359  0150D8  8847               	bsf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
 17360                           
 17361                           ;RemoteCan.c: 79: if(id == 0b00000000110){
 17362  0150DA  0E06               	movlw	6
 17363  0150DC  1812               	xorwf	_id,w,c	;volatile
 17364  0150DE  1013               	iorwf	_id+1,w,c	;volatile
 17365  0150E0  1014               	iorwf	_id+2,w,c	;volatile
 17366  0150E2  1015               	iorwf	_id+3,w,c	;volatile
 17367  0150E4  A4D8               	btfss	status,2,c
 17368  0150E6  D01A               	goto	i2l8559
 17369                           
 17370                           ;RemoteCan.c: 80: for (unsigned char i = 0; i < 8; i++) {
 17371  0150E8  0E00               	movlw	0
 17372  0150EA  6E46               	movwf	ISR_alta@i,c
 17373  0150EC                     i2l8549:
 17374  0150EC  0E07               	movlw	7
 17375  0150EE  6446               	cpfsgt	ISR_alta@i,c
 17376  0150F0  D001               	goto	i2l8553
 17377  0150F2  D014               	goto	i2l8559
 17378  0150F4                     i2l8553:
 17379                           
 17380                           ;RemoteCan.c: 81: data_speed_rx[i] = msg.data[i];
 17381  0150F4  5046               	movf	ISR_alta@i,w,c
 17382  0150F6  0D01               	mullw	1
 17383  0150F8  0E04               	movlw	low (_msg+4)
 17384  0150FA  24F3               	addwf	prodl,w,c
 17385  0150FC  6ED9               	movwf	fsr2l,c
 17386  0150FE  0E01               	movlw	high (_msg+4)
 17387  015100  20F4               	addwfc	prodh,w,c
 17388  015102  6EDA               	movwf	fsr2h,c
 17389  015104  5046               	movf	ISR_alta@i,w,c
 17390  015106  0D01               	mullw	1
 17391  015108  0E01               	movlw	low _data_speed_rx
 17392  01510A  24F3               	addwf	prodl,w,c
 17393  01510C  6EE1               	movwf	fsr1l,c
 17394  01510E  0E00               	movlw	high _data_speed_rx
 17395  015110  20F4               	addwfc	prodh,w,c
 17396  015112  6EE2               	movwf	fsr1h,c
 17397  015114  CFDF FFE7          	movff	indf2,indf1
 17398  015118  2A46               	incf	ISR_alta@i,f,c
 17399  01511A  D7E8               	goto	i2l8549
 17400  01511C                     i2l8559:
 17401                           
 17402                           ;RemoteCan.c: 82: }
 17403                           ;RemoteCan.c: 83: }
 17404                           ;RemoteCan.c: 84: if (id == 0b00000000010) {
 17405  01511C  0E02               	movlw	2
 17406  01511E  1812               	xorwf	_id,w,c	;volatile
 17407  015120  1013               	iorwf	_id+1,w,c	;volatile
 17408  015122  1014               	iorwf	_id+2,w,c	;volatile
 17409  015124  1015               	iorwf	_id+3,w,c	;volatile
 17410  015126  B4D8               	btfsc	status,2,c
 17411                           
 17412                           ;RemoteCan.c: 85: if (RTR_Flag == 1) {
 17413  015128  A447               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 17414  01512A  D028               	goto	i2l8579
 17415                           
 17416                           ;RemoteCan.c: 86: pr_time_4 = time_counter;
 17417  01512C  C01A  F016         	movff	_time_counter,_pr_time_4	;volatile
 17418  015130  C01B  F017         	movff	_time_counter+1,_pr_time_4+1	;volatile
 17419  015134  C01C  F018         	movff	_time_counter+2,_pr_time_4+2	;volatile
 17420  015138  C01D  F019         	movff	_time_counter+3,_pr_time_4+3	;volatile
 17421                           
 17422                           ;RemoteCan.c: 87: data[0] = 0x03;
 17423  01513C  0E03               	movlw	3
 17424  01513E  6E24               	movwf	_data,c
 17425                           
 17426                           ;RemoteCan.c: 88: _delay((unsigned long)((10)*(16000000/4000000.0)));
 17427  015140  0E0D               	movlw	13
 17428  015142                     i2u1124_47:
 17429  015142  2EE8               	decfsz	wreg,f,c
 17430  015144  D7FE               	goto	i2u1124_47
 17431  015146  F000               	nop	
 17432  015148                     i2l8569:
 17433  015148  EC07  F0AF         	call	i2_CANisTxReady	;wreg free
 17434  01514C  06E8               	decf	wreg,f,c
 17435  01514E  A4D8               	btfss	status,2,c
 17436  015150  D7FB               	goto	i2l8569
 17437                           
 17438                           ;RemoteCan.c: 90: CANsendMessage(0b00000000010, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL
      +                          _TX_FRAME & CAN_TX_PRIORITY_0);
 17439  015152  0E02               	movlw	2
 17440  015154  6E36               	movwf	i2CANsendMessage@identifier,c
 17441  015156  0E00               	movlw	0
 17442  015158  6E37               	movwf	i2CANsendMessage@identifier+1,c
 17443  01515A  0E00               	movlw	0
 17444  01515C  6E38               	movwf	i2CANsendMessage@identifier+2,c
 17445  01515E  0E00               	movlw	0
 17446  015160  6E39               	movwf	i2CANsendMessage@identifier+3,c
 17447  015162  0E24               	movlw	low _data
 17448  015164  6E3A               	movwf	i2CANsendMessage@data,c
 17449  015166  0E00               	movlw	high _data
 17450  015168  6E3B               	movwf	i2CANsendMessage@data+1,c
 17451  01516A  0E08               	movlw	8
 17452  01516C  6E3C               	movwf	i2CANsendMessage@dataLength,c
 17453  01516E  0EBC               	movlw	188
 17454  015170  6E3D               	movwf	i2CANsendMessage@flags,c
 17455  015172  EC93  F08D         	call	i2_CANsendMessage	;wreg free
 17456                           
 17457                           ;RemoteCan.c: 91: MotoreFlag = 1;
 17458  015176  8247               	bsf	_MotoreFlag/(0+8),_MotoreFlag& (0+7),c	;volatile
 17459                           
 17460                           ;RemoteCan.c: 92: AbsFlag = 0;
 17461  015178  9047               	bcf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 17462                           
 17463                           ;RemoteCan.c: 93: SterzoFlag = 0;
 17464  01517A  9647               	bcf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 17465  01517C                     i2l8579:
 17466                           
 17467                           ;RemoteCan.c: 94: }
 17468                           ;RemoteCan.c: 96: }
 17469                           ;RemoteCan.c: 97: }
 17470                           ;RemoteCan.c: 98: PIR3bits.RXB1IF = 0;
 17471  01517C  92A4               	bcf	4004,1,c	;volatile
 17472                           
 17473                           ;RemoteCan.c: 99: PIR3bits.RXB0IF = 0;
 17474  01517E  90A4               	bcf	4004,0,c	;volatile
 17475                           
 17476                           ;RemoteCan.c: 100: LATDbits.LATD2 = 1;
 17477  015180  848C               	bsf	3980,2,c	;volatile
 17478                           
 17479                           ;RemoteCan.c: 101: LATDbits.LATD3 = 1;
 17480  015182  868C               	bsf	3980,3,c	;volatile
 17481  015184                     i2l739:
 17482  015184  C06D  FFF5         	movff	??_ISR_alta+13,tablat
 17483  015188  C06C  FFF8         	movff	??_ISR_alta+12,tblptru
 17484  01518C  C06B  FFF7         	movff	??_ISR_alta+11,tblptrh
 17485  015190  C06A  FFF6         	movff	??_ISR_alta+10,tblptrl
 17486  015194  C069  FFF4         	movff	??_ISR_alta+9,prodh
 17487  015198  C068  FFF3         	movff	??_ISR_alta+8,prodl
 17488  01519C  C067  FFDA         	movff	??_ISR_alta+7,fsr2h
 17489  0151A0  C066  FFD9         	movff	??_ISR_alta+6,fsr2l
 17490  0151A4  C065  FFE2         	movff	??_ISR_alta+5,fsr1h
 17491  0151A8  C064  FFE1         	movff	??_ISR_alta+4,fsr1l
 17492  0151AC  C063  FFEA         	movff	??_ISR_alta+3,fsr0h
 17493  0151B0  C062  FFE9         	movff	??_ISR_alta+2,fsr0l
 17494  0151B4  C061  FFFB         	movff	??_ISR_alta+1,pclatu
 17495  0151B8  C060  FFFA         	movff	??_ISR_alta,pclath
 17496  0151BC  9248               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 17497  0151BE  0011               	retfie		f
 17498  0151C0                     __end_of_ISR_alta:
 17499                           	opt stack 0
 17500                           pclatu	equ	0xFFB
 17501                           pclath	equ	0xFFA
 17502                           tblptru	equ	0xFF8
 17503                           tblptrh	equ	0xFF7
 17504                           tblptrl	equ	0xFF6
 17505                           tablat	equ	0xFF5
 17506                           prodh	equ	0xFF4
 17507                           prodl	equ	0xFF3
 17508                           intcon	equ	0xFF2
 17509                           postinc0	equ	0xFEE
 17510                           fsr0h	equ	0xFEA
 17511                           fsr0l	equ	0xFE9
 17512                           wreg	equ	0xFE8
 17513                           indf1	equ	0xFE7
 17514                           plusw1	equ	0xFE3
 17515                           fsr1h	equ	0xFE2
 17516                           fsr1l	equ	0xFE1
 17517                           bsr	equ	0xFE0
 17518                           indf2	equ	0xFDF
 17519                           postinc2	equ	0xFDE
 17520                           plusw2	equ	0xFDB
 17521                           fsr2h	equ	0xFDA
 17522                           fsr2l	equ	0xFD9
 17523                           status	equ	0xFD8
 17524                           
 17525 ;; *************** function i2_CANsendMessage *****************
 17526 ;; Defined at:
 17527 ;;		line 294 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 17528 ;; Parameters:    Size  Location     Type
 17529 ;;  identifier      4   17[COMRAM] unsigned long 
 17530 ;;  data            2   21[COMRAM] PTR unsigned char 
 17531 ;;		 -> data_speed(1), data_brake(1), data_steering(1), data(1), 
 17532 ;;  dataLength      1   23[COMRAM] unsigned char 
 17533 ;;  flags           1   24[COMRAM] enum E16909
 17534 ;; Auto vars:     Size  Location     Type
 17535 ;;  CANsendMessa    4   29[COMRAM] unsigned long 
 17536 ;; Return value:  Size  Location     Type
 17537 ;;		None               void
 17538 ;; Registers used:
 17539 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17540 ;; Tracked objects:
 17541 ;;		On entry : 0/0
 17542 ;;		On exit  : 0/0
 17543 ;;		Unchanged: 0/0
 17544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17545 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17546 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17547 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17548 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17549 ;;Total ram usage:       16 bytes
 17550 ;; Hardware stack levels used:    1
 17551 ;; This function calls:
 17552 ;;		Nothing
 17553 ;; This function is called by:
 17554 ;;		_ISR_alta
 17555 ;; This function uses a non-reentrant model
 17556 ;;
 17557                           
 17558                           	psect	text50
 17559  011B26                     __ptext50:
 17560                           	opt stack 0
 17561  011B26                     i2_CANsendMessage:
 17562                           	opt stack 20
 17563                           
 17564                           ;inc\CANlib.h: 296: unsigned long tamp;
 17565                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 17566                           
 17567                           ;incstack = 0
 17568  011B26  010F               	movlb	15	; () banked
 17569  011B28  B740               	btfsc	64,3,b	;volatile
 17570  011B2A  D115               	goto	i2l371
 17571                           
 17572                           ; BSR set to: 15
 17573                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 17574  011B2C  C03C  FF45         	movff	i2CANsendMessage@dataLength,3909	;volatile
 17575                           
 17576                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 17577  011B30  AC3D               	btfss	i2CANsendMessage@flags,6,c
 17578  011B32  D003               	goto	i2l372
 17579                           
 17580                           ; BSR set to: 15
 17581                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 17582  011B34  010F               	movlb	15	; () banked
 17583  011B36  8D45               	bsf	69,6,b	;volatile
 17584  011B38  D002               	goto	i2l373
 17585  011B3A                     i2l372:
 17586                           
 17587                           ; BSR set to: 15
 17588                           ;inc\CANlib.h: 302: else
 17589                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 17590  011B3A  010F               	movlb	15	; () banked
 17591  011B3C  9D45               	bcf	69,6,b	;volatile
 17592  011B3E                     i2l373:
 17593                           
 17594                           ; BSR set to: 15
 17595                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 17596  011B3E  A63D               	btfss	i2CANsendMessage@flags,3,c
 17597  011B40  D066               	goto	i2l374
 17598                           
 17599                           ; BSR set to: 15
 17600                           ;inc\CANlib.h: 306: {
 17601                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 17602  011B42  5036               	movf	i2CANsendMessage@identifier,w,c
 17603  011B44  6E42               	movwf	i2CANsendMessage@tamp,c
 17604  011B46  6A43               	clrf	i2CANsendMessage@tamp+1,c
 17605  011B48  6A44               	clrf	i2CANsendMessage@tamp+2,c
 17606  011B4A  6A45               	clrf	i2CANsendMessage@tamp+3,c
 17607                           
 17608                           ; BSR set to: 15
 17609                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 17610  011B4C  C042  FF44         	movff	i2CANsendMessage@tamp,3908	;volatile
 17611                           
 17612                           ; BSR set to: 15
 17613                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 17614  011B50  0E00               	movlw	0
 17615  011B52  1436               	andwf	i2CANsendMessage@identifier,w,c
 17616  011B54  6E42               	movwf	i2CANsendMessage@tamp,c
 17617  011B56  0EFF               	movlw	255
 17618  011B58  1437               	andwf	i2CANsendMessage@identifier+1,w,c
 17619  011B5A  6E43               	movwf	i2CANsendMessage@tamp+1,c
 17620  011B5C  0E00               	movlw	0
 17621  011B5E  1438               	andwf	i2CANsendMessage@identifier+2,w,c
 17622  011B60  6E44               	movwf	i2CANsendMessage@tamp+2,c
 17623  011B62  0E00               	movlw	0
 17624  011B64  1439               	andwf	i2CANsendMessage@identifier+3,w,c
 17625  011B66  6E45               	movwf	i2CANsendMessage@tamp+3,c
 17626                           
 17627                           ; BSR set to: 15
 17628                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 17629  011B68  C042  F03E         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 17630  011B6C  C043  F03F         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 17631  011B70  C044  F040         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 17632  011B74  C045  F041         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 17633  011B78  C03F  F03E         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 17634  011B7C  C040  F03F         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 17635  011B80  C041  F040         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 17636  011B84  6A41               	clrf	??i2_CANsendMessage+3,c
 17637  011B86  C03E  F042         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17638  011B8A  C03F  F043         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17639  011B8E  C040  F044         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17640  011B92  C041  F045         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17641                           
 17642                           ; BSR set to: 15
 17643                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 17644  011B96  C042  FF43         	movff	i2CANsendMessage@tamp,3907	;volatile
 17645                           
 17646                           ; BSR set to: 15
 17647                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 17648  011B9A  0E00               	movlw	0
 17649  011B9C  010F               	movlb	15	; () banked
 17650  011B9E  6F42               	movwf	66,b	;volatile
 17651                           
 17652                           ; BSR set to: 15
 17653                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 17654  011BA0  010F               	movlb	15	; () banked
 17655  011BA2  8742               	bsf	66,3,b	;volatile
 17656                           
 17657                           ; BSR set to: 15
 17658                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 17659  011BA4  A038               	btfss	i2CANsendMessage@identifier+2,0,c
 17660  011BA6  D002               	goto	i2l375
 17661                           
 17662                           ; BSR set to: 15
 17663                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 17664  011BA8  010F               	movlb	15	; () banked
 17665  011BAA  8142               	bsf	66,0,b	;volatile
 17666  011BAC                     i2l375:
 17667                           
 17668                           ; BSR set to: 15
 17669                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 17670  011BAC  A238               	btfss	i2CANsendMessage@identifier+2,1,c
 17671  011BAE  D002               	goto	i2l376
 17672                           
 17673                           ; BSR set to: 15
 17674                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 17675  011BB0  010F               	movlb	15	; () banked
 17676  011BB2  8342               	bsf	66,1,b	;volatile
 17677  011BB4                     i2l376:
 17678                           
 17679                           ; BSR set to: 15
 17680                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 17681  011BB4  A438               	btfss	i2CANsendMessage@identifier+2,2,c
 17682  011BB6  D002               	goto	i2l377
 17683                           
 17684                           ; BSR set to: 15
 17685                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 17686  011BB8  010F               	movlb	15	; () banked
 17687  011BBA  8B42               	bsf	66,5,b	;volatile
 17688  011BBC                     i2l377:
 17689                           
 17690                           ; BSR set to: 15
 17691                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 17692  011BBC  A638               	btfss	i2CANsendMessage@identifier+2,3,c
 17693  011BBE  D002               	goto	i2l378
 17694                           
 17695                           ; BSR set to: 15
 17696                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 17697  011BC0  010F               	movlb	15	; () banked
 17698  011BC2  8D42               	bsf	66,6,b	;volatile
 17699  011BC4                     i2l378:
 17700                           
 17701                           ; BSR set to: 15
 17702                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 17703  011BC4  A838               	btfss	i2CANsendMessage@identifier+2,4,c
 17704  011BC6  D002               	goto	i2l6869
 17705                           
 17706                           ; BSR set to: 15
 17707                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 17708  011BC8  010F               	movlb	15	; () banked
 17709  011BCA  8F42               	bsf	66,7,b	;volatile
 17710  011BCC                     i2l6869:
 17711                           
 17712                           ; BSR set to: 15
 17713                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 17714  011BCC  C036  F03E         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 17715  011BD0  C037  F03F         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 17716  011BD4  C038  F040         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 17717  011BD8  C039  F041         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 17718  011BDC  0E16               	movlw	22
 17719  011BDE  D005               	goto	i2u867_40
 17720  011BE0                     i2u867_45:
 17721  011BE0  90D8               	bcf	status,0,c
 17722  011BE2  3241               	rrcf	??i2_CANsendMessage+3,f,c
 17723  011BE4  3240               	rrcf	??i2_CANsendMessage+2,f,c
 17724  011BE6  323F               	rrcf	??i2_CANsendMessage+1,f,c
 17725  011BE8  323E               	rrcf	??i2_CANsendMessage,f,c
 17726  011BEA                     i2u867_40:
 17727  011BEA  2EE8               	decfsz	wreg,f,c
 17728  011BEC  D7F9               	goto	i2u867_45
 17729  011BEE  C03E  F042         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17730  011BF2  C03F  F043         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17731  011BF6  C040  F044         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17732  011BFA  C041  F045         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17733                           
 17734                           ; BSR set to: 15
 17735                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 17736  011BFE  5042               	movf	i2CANsendMessage@tamp,w,c
 17737  011C00  6E42               	movwf	i2CANsendMessage@tamp,c
 17738  011C02  6A43               	clrf	i2CANsendMessage@tamp+1,c
 17739  011C04  6A44               	clrf	i2CANsendMessage@tamp+2,c
 17740  011C06  6A45               	clrf	i2CANsendMessage@tamp+3,c
 17741                           
 17742                           ; BSR set to: 15
 17743                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 17744  011C08  C042  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 17745                           
 17746                           ;inc\CANlib.h: 332: }
 17747  011C0C  D04D               	goto	i2l6889
 17748  011C0E                     i2l374:
 17749                           
 17750                           ; BSR set to: 15
 17751                           ;inc\CANlib.h: 334: else
 17752                           ;inc\CANlib.h: 336: {
 17753                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 17754  011C0E  010F               	movlb	15	; () banked
 17755  011C10  9742               	bcf	66,3,b	;volatile
 17756                           
 17757                           ; BSR set to: 15
 17758                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 17759  011C12  C036  F03E         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 17760  011C16  C037  F03F         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 17761  011C1A  C038  F040         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 17762  011C1E  C039  F041         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 17763  011C22  0E04               	movlw	4
 17764  011C24  D005               	goto	i2u868_40
 17765  011C26                     i2u868_45:
 17766  011C26  90D8               	bcf	status,0,c
 17767  011C28  3241               	rrcf	??i2_CANsendMessage+3,f,c
 17768  011C2A  3240               	rrcf	??i2_CANsendMessage+2,f,c
 17769  011C2C  323F               	rrcf	??i2_CANsendMessage+1,f,c
 17770  011C2E  323E               	rrcf	??i2_CANsendMessage,f,c
 17771  011C30                     i2u868_40:
 17772  011C30  2EE8               	decfsz	wreg,f,c
 17773  011C32  D7F9               	goto	i2u868_45
 17774  011C34  C03E  F042         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17775  011C38  C03F  F043         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17776  011C3C  C040  F044         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17777  011C40  C041  F045         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17778                           
 17779                           ; BSR set to: 15
 17780                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 17781  011C44  5042               	movf	i2CANsendMessage@tamp,w,c
 17782  011C46  6E42               	movwf	i2CANsendMessage@tamp,c
 17783  011C48  6A43               	clrf	i2CANsendMessage@tamp+1,c
 17784  011C4A  6A44               	clrf	i2CANsendMessage@tamp+2,c
 17785  011C4C  6A45               	clrf	i2CANsendMessage@tamp+3,c
 17786                           
 17787                           ; BSR set to: 15
 17788                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 17789  011C4E  C042  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 17790                           
 17791                           ; BSR set to: 15
 17792                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 17793  011C52  0E07               	movlw	7
 17794  011C54  1436               	andwf	i2CANsendMessage@identifier,w,c
 17795  011C56  6E42               	movwf	i2CANsendMessage@tamp,c
 17796  011C58  0E00               	movlw	0
 17797  011C5A  1437               	andwf	i2CANsendMessage@identifier+1,w,c
 17798  011C5C  6E43               	movwf	i2CANsendMessage@tamp+1,c
 17799  011C5E  0E00               	movlw	0
 17800  011C60  1438               	andwf	i2CANsendMessage@identifier+2,w,c
 17801  011C62  6E44               	movwf	i2CANsendMessage@tamp+2,c
 17802  011C64  0E00               	movlw	0
 17803  011C66  1439               	andwf	i2CANsendMessage@identifier+3,w,c
 17804  011C68  6E45               	movwf	i2CANsendMessage@tamp+3,c
 17805                           
 17806                           ; BSR set to: 15
 17807                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 17808  011C6A  C042  F03E         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 17809  011C6E  C043  F03F         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 17810  011C72  C044  F040         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 17811  011C76  C045  F041         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 17812  011C7A  0E05               	movlw	5
 17813  011C7C                     i2u869_45:
 17814  011C7C  90D8               	bcf	status,0,c
 17815  011C7E  363E               	rlcf	??i2_CANsendMessage,f,c
 17816  011C80  363F               	rlcf	??i2_CANsendMessage+1,f,c
 17817  011C82  3640               	rlcf	??i2_CANsendMessage+2,f,c
 17818  011C84  3641               	rlcf	??i2_CANsendMessage+3,f,c
 17819  011C86  2EE8               	decfsz	wreg,f,c
 17820  011C88  D7F9               	goto	i2u869_45
 17821  011C8A  C03E  F042         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17822  011C8E  C03F  F043         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17823  011C92  C040  F044         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17824  011C96  C041  F045         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17825                           
 17826                           ; BSR set to: 15
 17827                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 17828  011C9A  010F               	movlb	15	; () banked
 17829  011C9C  5142               	movf	66,w,b	;volatile
 17830  011C9E  0B1F               	andlw	31
 17831  011CA0  010F               	movlb	15	; () banked
 17832  011CA2  6F42               	movwf	66,b	;volatile
 17833                           
 17834                           ; BSR set to: 15
 17835                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 17836  011CA4  C042  FF42         	movff	i2CANsendMessage@tamp,3906	;volatile
 17837  011CA8                     i2l6889:
 17838                           
 17839                           ; BSR set to: 15
 17840                           ;inc\CANlib.h: 347: }
 17841                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 17842  011CA8  A03D               	btfss	i2CANsendMessage@flags,0,c
 17843  011CAA  D003               	goto	i2l381
 17844                           
 17845                           ; BSR set to: 15
 17846                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 17847  011CAC  010F               	movlb	15	; () banked
 17848  011CAE  8140               	bsf	64,0,b	;volatile
 17849  011CB0  D002               	goto	i2l382
 17850  011CB2                     i2l381:
 17851                           
 17852                           ; BSR set to: 15
 17853                           ;inc\CANlib.h: 351: else
 17854                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 17855  011CB2  010F               	movlb	15	; () banked
 17856  011CB4  9140               	bcf	64,0,b	;volatile
 17857  011CB6                     i2l382:
 17858                           
 17859                           ; BSR set to: 15
 17860                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 17861  011CB6  A23D               	btfss	i2CANsendMessage@flags,1,c
 17862  011CB8  D003               	goto	i2l383
 17863                           
 17864                           ; BSR set to: 15
 17865                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 17866  011CBA  010F               	movlb	15	; () banked
 17867  011CBC  8340               	bsf	64,1,b	;volatile
 17868  011CBE  D002               	goto	i2l6895
 17869  011CC0                     i2l383:
 17870                           
 17871                           ; BSR set to: 15
 17872                           ;inc\CANlib.h: 355: else
 17873                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 17874  011CC0  010F               	movlb	15	; () banked
 17875  011CC2  9340               	bcf	64,1,b	;volatile
 17876  011CC4                     i2l6895:
 17877                           
 17878                           ; BSR set to: 15
 17879                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 17880  011CC4  C03A  FFD9         	movff	i2CANsendMessage@data,fsr2l
 17881  011CC8  C03B  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 17882  011CCC  50DF               	movf	indf2,w,c
 17883  011CCE  010F               	movlb	15	; () banked
 17884  011CD0  6F46               	movwf	70,b	;volatile
 17885                           
 17886                           ; BSR set to: 15
 17887                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 17888  011CD2  EE20 F001          	lfsr	2,1
 17889  011CD6  503A               	movf	i2CANsendMessage@data,w,c
 17890  011CD8  26D9               	addwf	fsr2l,f,c
 17891  011CDA  503B               	movf	i2CANsendMessage@data+1,w,c
 17892  011CDC  22DA               	addwfc	fsr2h,f,c
 17893  011CDE  50DF               	movf	indf2,w,c
 17894  011CE0  010F               	movlb	15	; () banked
 17895  011CE2  6F47               	movwf	71,b	;volatile
 17896                           
 17897                           ; BSR set to: 15
 17898                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 17899  011CE4  EE20 F002          	lfsr	2,2
 17900  011CE8  503A               	movf	i2CANsendMessage@data,w,c
 17901  011CEA  26D9               	addwf	fsr2l,f,c
 17902  011CEC  503B               	movf	i2CANsendMessage@data+1,w,c
 17903  011CEE  22DA               	addwfc	fsr2h,f,c
 17904  011CF0  50DF               	movf	indf2,w,c
 17905  011CF2  010F               	movlb	15	; () banked
 17906  011CF4  6F48               	movwf	72,b	;volatile
 17907                           
 17908                           ; BSR set to: 15
 17909                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 17910  011CF6  EE20 F003          	lfsr	2,3
 17911  011CFA  503A               	movf	i2CANsendMessage@data,w,c
 17912  011CFC  26D9               	addwf	fsr2l,f,c
 17913  011CFE  503B               	movf	i2CANsendMessage@data+1,w,c
 17914  011D00  22DA               	addwfc	fsr2h,f,c
 17915  011D02  50DF               	movf	indf2,w,c
 17916  011D04  010F               	movlb	15	; () banked
 17917  011D06  6F49               	movwf	73,b	;volatile
 17918                           
 17919                           ; BSR set to: 15
 17920                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 17921  011D08  EE20 F004          	lfsr	2,4
 17922  011D0C  503A               	movf	i2CANsendMessage@data,w,c
 17923  011D0E  26D9               	addwf	fsr2l,f,c
 17924  011D10  503B               	movf	i2CANsendMessage@data+1,w,c
 17925  011D12  22DA               	addwfc	fsr2h,f,c
 17926  011D14  50DF               	movf	indf2,w,c
 17927  011D16  010F               	movlb	15	; () banked
 17928  011D18  6F4A               	movwf	74,b	;volatile
 17929                           
 17930                           ; BSR set to: 15
 17931                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 17932  011D1A  EE20 F005          	lfsr	2,5
 17933  011D1E  503A               	movf	i2CANsendMessage@data,w,c
 17934  011D20  26D9               	addwf	fsr2l,f,c
 17935  011D22  503B               	movf	i2CANsendMessage@data+1,w,c
 17936  011D24  22DA               	addwfc	fsr2h,f,c
 17937  011D26  50DF               	movf	indf2,w,c
 17938  011D28  010F               	movlb	15	; () banked
 17939  011D2A  6F4B               	movwf	75,b	;volatile
 17940                           
 17941                           ; BSR set to: 15
 17942                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 17943  011D2C  EE20 F006          	lfsr	2,6
 17944  011D30  503A               	movf	i2CANsendMessage@data,w,c
 17945  011D32  26D9               	addwf	fsr2l,f,c
 17946  011D34  503B               	movf	i2CANsendMessage@data+1,w,c
 17947  011D36  22DA               	addwfc	fsr2h,f,c
 17948  011D38  50DF               	movf	indf2,w,c
 17949  011D3A  010F               	movlb	15	; () banked
 17950  011D3C  6F4C               	movwf	76,b	;volatile
 17951                           
 17952                           ; BSR set to: 15
 17953                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 17954  011D3E  EE20 F007          	lfsr	2,7
 17955  011D42  503A               	movf	i2CANsendMessage@data,w,c
 17956  011D44  26D9               	addwf	fsr2l,f,c
 17957  011D46  503B               	movf	i2CANsendMessage@data+1,w,c
 17958  011D48  22DA               	addwfc	fsr2h,f,c
 17959  011D4A  50DF               	movf	indf2,w,c
 17960  011D4C  010F               	movlb	15	; () banked
 17961  011D4E  6F4D               	movwf	77,b	;volatile
 17962                           
 17963                           ; BSR set to: 15
 17964                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 17965  011D50  010F               	movlb	15	; () banked
 17966  011D52  8740               	bsf	64,3,b	;volatile
 17967                           
 17968                           ; BSR set to: 15
 17969                           ;inc\CANlib.h: 368: return;
 17970  011D54  0012               	return	
 17971  011D56                     i2l371:
 17972                           
 17973                           ; BSR set to: 15
 17974                           ;inc\CANlib.h: 369: }
 17975                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 17976  011D56  010F               	movlb	15	; () banked
 17977  011D58  B730               	btfsc	48,3,b	;volatile
 17978  011D5A  D115               	goto	i2l386
 17979                           
 17980                           ; BSR set to: 15
 17981                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 17982  011D5C  C03C  FF35         	movff	i2CANsendMessage@dataLength,3893	;volatile
 17983                           
 17984                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 17985  011D60  AC3D               	btfss	i2CANsendMessage@flags,6,c
 17986  011D62  D003               	goto	i2l387
 17987                           
 17988                           ; BSR set to: 15
 17989                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 17990  011D64  010F               	movlb	15	; () banked
 17991  011D66  8D35               	bsf	53,6,b	;volatile
 17992  011D68  D002               	goto	i2l388
 17993  011D6A                     i2l387:
 17994                           
 17995                           ; BSR set to: 15
 17996                           ;inc\CANlib.h: 378: else
 17997                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 17998  011D6A  010F               	movlb	15	; () banked
 17999  011D6C  9D35               	bcf	53,6,b	;volatile
 18000  011D6E                     i2l388:
 18001                           
 18002                           ; BSR set to: 15
 18003                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 18004  011D6E  A63D               	btfss	i2CANsendMessage@flags,3,c
 18005  011D70  D066               	goto	i2l389
 18006                           
 18007                           ; BSR set to: 15
 18008                           ;inc\CANlib.h: 382: {
 18009                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 18010  011D72  5036               	movf	i2CANsendMessage@identifier,w,c
 18011  011D74  6E42               	movwf	i2CANsendMessage@tamp,c
 18012  011D76  6A43               	clrf	i2CANsendMessage@tamp+1,c
 18013  011D78  6A44               	clrf	i2CANsendMessage@tamp+2,c
 18014  011D7A  6A45               	clrf	i2CANsendMessage@tamp+3,c
 18015                           
 18016                           ; BSR set to: 15
 18017                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 18018  011D7C  C042  FF34         	movff	i2CANsendMessage@tamp,3892	;volatile
 18019                           
 18020                           ; BSR set to: 15
 18021                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 18022  011D80  0E00               	movlw	0
 18023  011D82  1436               	andwf	i2CANsendMessage@identifier,w,c
 18024  011D84  6E42               	movwf	i2CANsendMessage@tamp,c
 18025  011D86  0EFF               	movlw	255
 18026  011D88  1437               	andwf	i2CANsendMessage@identifier+1,w,c
 18027  011D8A  6E43               	movwf	i2CANsendMessage@tamp+1,c
 18028  011D8C  0E00               	movlw	0
 18029  011D8E  1438               	andwf	i2CANsendMessage@identifier+2,w,c
 18030  011D90  6E44               	movwf	i2CANsendMessage@tamp+2,c
 18031  011D92  0E00               	movlw	0
 18032  011D94  1439               	andwf	i2CANsendMessage@identifier+3,w,c
 18033  011D96  6E45               	movwf	i2CANsendMessage@tamp+3,c
 18034                           
 18035                           ; BSR set to: 15
 18036                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 18037  011D98  C042  F03E         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 18038  011D9C  C043  F03F         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 18039  011DA0  C044  F040         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 18040  011DA4  C045  F041         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 18041  011DA8  C03F  F03E         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 18042  011DAC  C040  F03F         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 18043  011DB0  C041  F040         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 18044  011DB4  6A41               	clrf	??i2_CANsendMessage+3,c
 18045  011DB6  C03E  F042         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18046  011DBA  C03F  F043         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18047  011DBE  C040  F044         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18048  011DC2  C041  F045         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18049                           
 18050                           ; BSR set to: 15
 18051                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 18052  011DC6  C042  FF33         	movff	i2CANsendMessage@tamp,3891	;volatile
 18053                           
 18054                           ; BSR set to: 15
 18055                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 18056  011DCA  0E00               	movlw	0
 18057  011DCC  010F               	movlb	15	; () banked
 18058  011DCE  6F32               	movwf	50,b	;volatile
 18059                           
 18060                           ; BSR set to: 15
 18061                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 18062  011DD0  010F               	movlb	15	; () banked
 18063  011DD2  8732               	bsf	50,3,b	;volatile
 18064                           
 18065                           ; BSR set to: 15
 18066                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 18067  011DD4  A038               	btfss	i2CANsendMessage@identifier+2,0,c
 18068  011DD6  D002               	goto	i2l390
 18069                           
 18070                           ; BSR set to: 15
 18071                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 18072  011DD8  010F               	movlb	15	; () banked
 18073  011DDA  8132               	bsf	50,0,b	;volatile
 18074  011DDC                     i2l390:
 18075                           
 18076                           ; BSR set to: 15
 18077                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 18078  011DDC  A238               	btfss	i2CANsendMessage@identifier+2,1,c
 18079  011DDE  D002               	goto	i2l391
 18080                           
 18081                           ; BSR set to: 15
 18082                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 18083  011DE0  010F               	movlb	15	; () banked
 18084  011DE2  8332               	bsf	50,1,b	;volatile
 18085  011DE4                     i2l391:
 18086                           
 18087                           ; BSR set to: 15
 18088                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 18089  011DE4  A438               	btfss	i2CANsendMessage@identifier+2,2,c
 18090  011DE6  D002               	goto	i2l392
 18091                           
 18092                           ; BSR set to: 15
 18093                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 18094  011DE8  010F               	movlb	15	; () banked
 18095  011DEA  8B32               	bsf	50,5,b	;volatile
 18096  011DEC                     i2l392:
 18097                           
 18098                           ; BSR set to: 15
 18099                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 18100  011DEC  A638               	btfss	i2CANsendMessage@identifier+2,3,c
 18101  011DEE  D002               	goto	i2l393
 18102                           
 18103                           ; BSR set to: 15
 18104                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 18105  011DF0  010F               	movlb	15	; () banked
 18106  011DF2  8D32               	bsf	50,6,b	;volatile
 18107  011DF4                     i2l393:
 18108                           
 18109                           ; BSR set to: 15
 18110                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 18111  011DF4  A838               	btfss	i2CANsendMessage@identifier+2,4,c
 18112  011DF6  D002               	goto	i2l6945
 18113                           
 18114                           ; BSR set to: 15
 18115                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 18116  011DF8  010F               	movlb	15	; () banked
 18117  011DFA  8F32               	bsf	50,7,b	;volatile
 18118  011DFC                     i2l6945:
 18119                           
 18120                           ; BSR set to: 15
 18121                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 18122  011DFC  C036  F03E         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 18123  011E00  C037  F03F         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 18124  011E04  C038  F040         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 18125  011E08  C039  F041         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 18126  011E0C  0E16               	movlw	22
 18127  011E0E  D005               	goto	i2u880_40
 18128  011E10                     i2u880_45:
 18129  011E10  90D8               	bcf	status,0,c
 18130  011E12  3241               	rrcf	??i2_CANsendMessage+3,f,c
 18131  011E14  3240               	rrcf	??i2_CANsendMessage+2,f,c
 18132  011E16  323F               	rrcf	??i2_CANsendMessage+1,f,c
 18133  011E18  323E               	rrcf	??i2_CANsendMessage,f,c
 18134  011E1A                     i2u880_40:
 18135  011E1A  2EE8               	decfsz	wreg,f,c
 18136  011E1C  D7F9               	goto	i2u880_45
 18137  011E1E  C03E  F042         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18138  011E22  C03F  F043         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18139  011E26  C040  F044         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18140  011E2A  C041  F045         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18141                           
 18142                           ; BSR set to: 15
 18143                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 18144  011E2E  5042               	movf	i2CANsendMessage@tamp,w,c
 18145  011E30  6E42               	movwf	i2CANsendMessage@tamp,c
 18146  011E32  6A43               	clrf	i2CANsendMessage@tamp+1,c
 18147  011E34  6A44               	clrf	i2CANsendMessage@tamp+2,c
 18148  011E36  6A45               	clrf	i2CANsendMessage@tamp+3,c
 18149                           
 18150                           ; BSR set to: 15
 18151                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 18152  011E38  C042  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 18153                           
 18154                           ;inc\CANlib.h: 407: }
 18155  011E3C  D04D               	goto	i2l6965
 18156  011E3E                     i2l389:
 18157                           
 18158                           ; BSR set to: 15
 18159                           ;inc\CANlib.h: 409: else
 18160                           ;inc\CANlib.h: 411: {
 18161                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 18162  011E3E  010F               	movlb	15	; () banked
 18163  011E40  9732               	bcf	50,3,b	;volatile
 18164                           
 18165                           ; BSR set to: 15
 18166                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 18167  011E42  C036  F03E         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 18168  011E46  C037  F03F         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 18169  011E4A  C038  F040         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 18170  011E4E  C039  F041         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 18171  011E52  0E04               	movlw	4
 18172  011E54  D005               	goto	i2u881_40
 18173  011E56                     i2u881_45:
 18174  011E56  90D8               	bcf	status,0,c
 18175  011E58  3241               	rrcf	??i2_CANsendMessage+3,f,c
 18176  011E5A  3240               	rrcf	??i2_CANsendMessage+2,f,c
 18177  011E5C  323F               	rrcf	??i2_CANsendMessage+1,f,c
 18178  011E5E  323E               	rrcf	??i2_CANsendMessage,f,c
 18179  011E60                     i2u881_40:
 18180  011E60  2EE8               	decfsz	wreg,f,c
 18181  011E62  D7F9               	goto	i2u881_45
 18182  011E64  C03E  F042         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18183  011E68  C03F  F043         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18184  011E6C  C040  F044         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18185  011E70  C041  F045         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18186                           
 18187                           ; BSR set to: 15
 18188                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 18189  011E74  5042               	movf	i2CANsendMessage@tamp,w,c
 18190  011E76  6E42               	movwf	i2CANsendMessage@tamp,c
 18191  011E78  6A43               	clrf	i2CANsendMessage@tamp+1,c
 18192  011E7A  6A44               	clrf	i2CANsendMessage@tamp+2,c
 18193  011E7C  6A45               	clrf	i2CANsendMessage@tamp+3,c
 18194                           
 18195                           ; BSR set to: 15
 18196                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 18197  011E7E  C042  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 18198                           
 18199                           ; BSR set to: 15
 18200                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 18201  011E82  0E07               	movlw	7
 18202  011E84  1436               	andwf	i2CANsendMessage@identifier,w,c
 18203  011E86  6E42               	movwf	i2CANsendMessage@tamp,c
 18204  011E88  0E00               	movlw	0
 18205  011E8A  1437               	andwf	i2CANsendMessage@identifier+1,w,c
 18206  011E8C  6E43               	movwf	i2CANsendMessage@tamp+1,c
 18207  011E8E  0E00               	movlw	0
 18208  011E90  1438               	andwf	i2CANsendMessage@identifier+2,w,c
 18209  011E92  6E44               	movwf	i2CANsendMessage@tamp+2,c
 18210  011E94  0E00               	movlw	0
 18211  011E96  1439               	andwf	i2CANsendMessage@identifier+3,w,c
 18212  011E98  6E45               	movwf	i2CANsendMessage@tamp+3,c
 18213                           
 18214                           ; BSR set to: 15
 18215                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 18216  011E9A  C042  F03E         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 18217  011E9E  C043  F03F         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 18218  011EA2  C044  F040         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 18219  011EA6  C045  F041         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 18220  011EAA  0E05               	movlw	5
 18221  011EAC                     i2u882_45:
 18222  011EAC  90D8               	bcf	status,0,c
 18223  011EAE  363E               	rlcf	??i2_CANsendMessage,f,c
 18224  011EB0  363F               	rlcf	??i2_CANsendMessage+1,f,c
 18225  011EB2  3640               	rlcf	??i2_CANsendMessage+2,f,c
 18226  011EB4  3641               	rlcf	??i2_CANsendMessage+3,f,c
 18227  011EB6  2EE8               	decfsz	wreg,f,c
 18228  011EB8  D7F9               	goto	i2u882_45
 18229  011EBA  C03E  F042         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18230  011EBE  C03F  F043         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18231  011EC2  C040  F044         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18232  011EC6  C041  F045         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18233                           
 18234                           ; BSR set to: 15
 18235                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 18236  011ECA  010F               	movlb	15	; () banked
 18237  011ECC  5132               	movf	50,w,b	;volatile
 18238  011ECE  0B1F               	andlw	31
 18239  011ED0  010F               	movlb	15	; () banked
 18240  011ED2  6F32               	movwf	50,b	;volatile
 18241                           
 18242                           ; BSR set to: 15
 18243                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 18244  011ED4  C042  FF32         	movff	i2CANsendMessage@tamp,3890	;volatile
 18245  011ED8                     i2l6965:
 18246                           
 18247                           ; BSR set to: 15
 18248                           ;inc\CANlib.h: 422: }
 18249                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 18250  011ED8  A03D               	btfss	i2CANsendMessage@flags,0,c
 18251  011EDA  D003               	goto	i2l396
 18252                           
 18253                           ; BSR set to: 15
 18254                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 18255  011EDC  010F               	movlb	15	; () banked
 18256  011EDE  8130               	bsf	48,0,b	;volatile
 18257  011EE0  D002               	goto	i2l397
 18258  011EE2                     i2l396:
 18259                           
 18260                           ; BSR set to: 15
 18261                           ;inc\CANlib.h: 426: else
 18262                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 18263  011EE2  010F               	movlb	15	; () banked
 18264  011EE4  9130               	bcf	48,0,b	;volatile
 18265  011EE6                     i2l397:
 18266                           
 18267                           ; BSR set to: 15
 18268                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 18269  011EE6  A23D               	btfss	i2CANsendMessage@flags,1,c
 18270  011EE8  D003               	goto	i2l398
 18271                           
 18272                           ; BSR set to: 15
 18273                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 18274  011EEA  010F               	movlb	15	; () banked
 18275  011EEC  8330               	bsf	48,1,b	;volatile
 18276  011EEE  D002               	goto	i2l6971
 18277  011EF0                     i2l398:
 18278                           
 18279                           ; BSR set to: 15
 18280                           ;inc\CANlib.h: 430: else
 18281                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 18282  011EF0  010F               	movlb	15	; () banked
 18283  011EF2  9330               	bcf	48,1,b	;volatile
 18284  011EF4                     i2l6971:
 18285                           
 18286                           ; BSR set to: 15
 18287                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 18288  011EF4  C03A  FFD9         	movff	i2CANsendMessage@data,fsr2l
 18289  011EF8  C03B  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 18290  011EFC  50DF               	movf	indf2,w,c
 18291  011EFE  010F               	movlb	15	; () banked
 18292  011F00  6F36               	movwf	54,b	;volatile
 18293                           
 18294                           ; BSR set to: 15
 18295                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 18296  011F02  EE20 F001          	lfsr	2,1
 18297  011F06  503A               	movf	i2CANsendMessage@data,w,c
 18298  011F08  26D9               	addwf	fsr2l,f,c
 18299  011F0A  503B               	movf	i2CANsendMessage@data+1,w,c
 18300  011F0C  22DA               	addwfc	fsr2h,f,c
 18301  011F0E  50DF               	movf	indf2,w,c
 18302  011F10  010F               	movlb	15	; () banked
 18303  011F12  6F37               	movwf	55,b	;volatile
 18304                           
 18305                           ; BSR set to: 15
 18306                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 18307  011F14  EE20 F002          	lfsr	2,2
 18308  011F18  503A               	movf	i2CANsendMessage@data,w,c
 18309  011F1A  26D9               	addwf	fsr2l,f,c
 18310  011F1C  503B               	movf	i2CANsendMessage@data+1,w,c
 18311  011F1E  22DA               	addwfc	fsr2h,f,c
 18312  011F20  50DF               	movf	indf2,w,c
 18313  011F22  010F               	movlb	15	; () banked
 18314  011F24  6F38               	movwf	56,b	;volatile
 18315                           
 18316                           ; BSR set to: 15
 18317                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 18318  011F26  EE20 F003          	lfsr	2,3
 18319  011F2A  503A               	movf	i2CANsendMessage@data,w,c
 18320  011F2C  26D9               	addwf	fsr2l,f,c
 18321  011F2E  503B               	movf	i2CANsendMessage@data+1,w,c
 18322  011F30  22DA               	addwfc	fsr2h,f,c
 18323  011F32  50DF               	movf	indf2,w,c
 18324  011F34  010F               	movlb	15	; () banked
 18325  011F36  6F39               	movwf	57,b	;volatile
 18326                           
 18327                           ; BSR set to: 15
 18328                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 18329  011F38  EE20 F004          	lfsr	2,4
 18330  011F3C  503A               	movf	i2CANsendMessage@data,w,c
 18331  011F3E  26D9               	addwf	fsr2l,f,c
 18332  011F40  503B               	movf	i2CANsendMessage@data+1,w,c
 18333  011F42  22DA               	addwfc	fsr2h,f,c
 18334  011F44  50DF               	movf	indf2,w,c
 18335  011F46  010F               	movlb	15	; () banked
 18336  011F48  6F3A               	movwf	58,b	;volatile
 18337                           
 18338                           ; BSR set to: 15
 18339                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 18340  011F4A  EE20 F005          	lfsr	2,5
 18341  011F4E  503A               	movf	i2CANsendMessage@data,w,c
 18342  011F50  26D9               	addwf	fsr2l,f,c
 18343  011F52  503B               	movf	i2CANsendMessage@data+1,w,c
 18344  011F54  22DA               	addwfc	fsr2h,f,c
 18345  011F56  50DF               	movf	indf2,w,c
 18346  011F58  010F               	movlb	15	; () banked
 18347  011F5A  6F3B               	movwf	59,b	;volatile
 18348                           
 18349                           ; BSR set to: 15
 18350                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 18351  011F5C  EE20 F006          	lfsr	2,6
 18352  011F60  503A               	movf	i2CANsendMessage@data,w,c
 18353  011F62  26D9               	addwf	fsr2l,f,c
 18354  011F64  503B               	movf	i2CANsendMessage@data+1,w,c
 18355  011F66  22DA               	addwfc	fsr2h,f,c
 18356  011F68  50DF               	movf	indf2,w,c
 18357  011F6A  010F               	movlb	15	; () banked
 18358  011F6C  6F3C               	movwf	60,b	;volatile
 18359                           
 18360                           ; BSR set to: 15
 18361                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 18362  011F6E  EE20 F007          	lfsr	2,7
 18363  011F72  503A               	movf	i2CANsendMessage@data,w,c
 18364  011F74  26D9               	addwf	fsr2l,f,c
 18365  011F76  503B               	movf	i2CANsendMessage@data+1,w,c
 18366  011F78  22DA               	addwfc	fsr2h,f,c
 18367  011F7A  50DF               	movf	indf2,w,c
 18368  011F7C  010F               	movlb	15	; () banked
 18369  011F7E  6F3D               	movwf	61,b	;volatile
 18370                           
 18371                           ; BSR set to: 15
 18372                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 18373  011F80  010F               	movlb	15	; () banked
 18374  011F82  8730               	bsf	48,3,b	;volatile
 18375                           
 18376                           ; BSR set to: 15
 18377                           ;inc\CANlib.h: 444: return;
 18378  011F84  0012               	return	
 18379  011F86                     i2l386:
 18380                           
 18381                           ; BSR set to: 15
 18382                           ;inc\CANlib.h: 445: }
 18383                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 18384  011F86  010F               	movlb	15	; () banked
 18385  011F88  B720               	btfsc	32,3,b	;volatile
 18386  011F8A  0012               	return	
 18387                           
 18388                           ; BSR set to: 15
 18389                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 18390  011F8C  C03C  FF25         	movff	i2CANsendMessage@dataLength,3877	;volatile
 18391                           
 18392                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 18393  011F90  AC3D               	btfss	i2CANsendMessage@flags,6,c
 18394  011F92  D003               	goto	i2l401
 18395                           
 18396                           ; BSR set to: 15
 18397                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 18398  011F94  010F               	movlb	15	; () banked
 18399  011F96  8D25               	bsf	37,6,b	;volatile
 18400  011F98  D002               	goto	i2l402
 18401  011F9A                     i2l401:
 18402                           
 18403                           ; BSR set to: 15
 18404                           ;inc\CANlib.h: 454: else
 18405                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 18406  011F9A  010F               	movlb	15	; () banked
 18407  011F9C  9D25               	bcf	37,6,b	;volatile
 18408  011F9E                     i2l402:
 18409                           
 18410                           ; BSR set to: 15
 18411                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 18412  011F9E  A63D               	btfss	i2CANsendMessage@flags,3,c
 18413  011FA0  D066               	goto	i2l403
 18414                           
 18415                           ; BSR set to: 15
 18416                           ;inc\CANlib.h: 458: {
 18417                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 18418  011FA2  5036               	movf	i2CANsendMessage@identifier,w,c
 18419  011FA4  6E42               	movwf	i2CANsendMessage@tamp,c
 18420  011FA6  6A43               	clrf	i2CANsendMessage@tamp+1,c
 18421  011FA8  6A44               	clrf	i2CANsendMessage@tamp+2,c
 18422  011FAA  6A45               	clrf	i2CANsendMessage@tamp+3,c
 18423                           
 18424                           ; BSR set to: 15
 18425                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 18426  011FAC  C042  FF24         	movff	i2CANsendMessage@tamp,3876	;volatile
 18427                           
 18428                           ; BSR set to: 15
 18429                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 18430  011FB0  0E00               	movlw	0
 18431  011FB2  1436               	andwf	i2CANsendMessage@identifier,w,c
 18432  011FB4  6E42               	movwf	i2CANsendMessage@tamp,c
 18433  011FB6  0EFF               	movlw	255
 18434  011FB8  1437               	andwf	i2CANsendMessage@identifier+1,w,c
 18435  011FBA  6E43               	movwf	i2CANsendMessage@tamp+1,c
 18436  011FBC  0E00               	movlw	0
 18437  011FBE  1438               	andwf	i2CANsendMessage@identifier+2,w,c
 18438  011FC0  6E44               	movwf	i2CANsendMessage@tamp+2,c
 18439  011FC2  0E00               	movlw	0
 18440  011FC4  1439               	andwf	i2CANsendMessage@identifier+3,w,c
 18441  011FC6  6E45               	movwf	i2CANsendMessage@tamp+3,c
 18442                           
 18443                           ; BSR set to: 15
 18444                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 18445  011FC8  C042  F03E         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 18446  011FCC  C043  F03F         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 18447  011FD0  C044  F040         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 18448  011FD4  C045  F041         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 18449  011FD8  C03F  F03E         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 18450  011FDC  C040  F03F         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 18451  011FE0  C041  F040         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 18452  011FE4  6A41               	clrf	??i2_CANsendMessage+3,c
 18453  011FE6  C03E  F042         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18454  011FEA  C03F  F043         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18455  011FEE  C040  F044         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18456  011FF2  C041  F045         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18457                           
 18458                           ; BSR set to: 15
 18459                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 18460  011FF6  C042  FF23         	movff	i2CANsendMessage@tamp,3875	;volatile
 18461                           
 18462                           ; BSR set to: 15
 18463                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 18464  011FFA  0E00               	movlw	0
 18465  011FFC  010F               	movlb	15	; () banked
 18466  011FFE  6F22               	movwf	34,b	;volatile
 18467                           
 18468                           ; BSR set to: 15
 18469                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 18470  012000  010F               	movlb	15	; () banked
 18471  012002  8722               	bsf	34,3,b	;volatile
 18472                           
 18473                           ; BSR set to: 15
 18474                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 18475  012004  A038               	btfss	i2CANsendMessage@identifier+2,0,c
 18476  012006  D002               	goto	i2l404
 18477                           
 18478                           ; BSR set to: 15
 18479                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 18480  012008  010F               	movlb	15	; () banked
 18481  01200A  8122               	bsf	34,0,b	;volatile
 18482  01200C                     i2l404:
 18483                           
 18484                           ; BSR set to: 15
 18485                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 18486  01200C  A238               	btfss	i2CANsendMessage@identifier+2,1,c
 18487  01200E  D002               	goto	i2l405
 18488                           
 18489                           ; BSR set to: 15
 18490                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 18491  012010  010F               	movlb	15	; () banked
 18492  012012  8322               	bsf	34,1,b	;volatile
 18493  012014                     i2l405:
 18494                           
 18495                           ; BSR set to: 15
 18496                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 18497  012014  A438               	btfss	i2CANsendMessage@identifier+2,2,c
 18498  012016  D002               	goto	i2l406
 18499                           
 18500                           ; BSR set to: 15
 18501                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 18502  012018  010F               	movlb	15	; () banked
 18503  01201A  8B22               	bsf	34,5,b	;volatile
 18504  01201C                     i2l406:
 18505                           
 18506                           ; BSR set to: 15
 18507                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 18508  01201C  A638               	btfss	i2CANsendMessage@identifier+2,3,c
 18509  01201E  D002               	goto	i2l407
 18510                           
 18511                           ; BSR set to: 15
 18512                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 18513  012020  010F               	movlb	15	; () banked
 18514  012022  8D22               	bsf	34,6,b	;volatile
 18515  012024                     i2l407:
 18516                           
 18517                           ; BSR set to: 15
 18518                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 18519  012024  A838               	btfss	i2CANsendMessage@identifier+2,4,c
 18520  012026  D002               	goto	i2l7021
 18521                           
 18522                           ; BSR set to: 15
 18523                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 18524  012028  010F               	movlb	15	; () banked
 18525  01202A  8F22               	bsf	34,7,b	;volatile
 18526  01202C                     i2l7021:
 18527                           
 18528                           ; BSR set to: 15
 18529                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 18530  01202C  C036  F03E         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 18531  012030  C037  F03F         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 18532  012034  C038  F040         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 18533  012038  C039  F041         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 18534  01203C  0E16               	movlw	22
 18535  01203E  D005               	goto	i2u893_40
 18536  012040                     i2u893_45:
 18537  012040  90D8               	bcf	status,0,c
 18538  012042  3241               	rrcf	??i2_CANsendMessage+3,f,c
 18539  012044  3240               	rrcf	??i2_CANsendMessage+2,f,c
 18540  012046  323F               	rrcf	??i2_CANsendMessage+1,f,c
 18541  012048  323E               	rrcf	??i2_CANsendMessage,f,c
 18542  01204A                     i2u893_40:
 18543  01204A  2EE8               	decfsz	wreg,f,c
 18544  01204C  D7F9               	goto	i2u893_45
 18545  01204E  C03E  F042         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18546  012052  C03F  F043         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18547  012056  C040  F044         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18548  01205A  C041  F045         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18549                           
 18550                           ; BSR set to: 15
 18551                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 18552  01205E  5042               	movf	i2CANsendMessage@tamp,w,c
 18553  012060  6E42               	movwf	i2CANsendMessage@tamp,c
 18554  012062  6A43               	clrf	i2CANsendMessage@tamp+1,c
 18555  012064  6A44               	clrf	i2CANsendMessage@tamp+2,c
 18556  012066  6A45               	clrf	i2CANsendMessage@tamp+3,c
 18557                           
 18558                           ; BSR set to: 15
 18559                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 18560  012068  C042  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 18561                           
 18562                           ;inc\CANlib.h: 483: }
 18563  01206C  D04D               	goto	i2l7041
 18564  01206E                     i2l403:
 18565                           
 18566                           ; BSR set to: 15
 18567                           ;inc\CANlib.h: 485: else
 18568                           ;inc\CANlib.h: 487: {
 18569                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 18570  01206E  010F               	movlb	15	; () banked
 18571  012070  9722               	bcf	34,3,b	;volatile
 18572                           
 18573                           ; BSR set to: 15
 18574                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 18575  012072  C036  F03E         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 18576  012076  C037  F03F         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 18577  01207A  C038  F040         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 18578  01207E  C039  F041         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 18579  012082  0E04               	movlw	4
 18580  012084  D005               	goto	i2u894_40
 18581  012086                     i2u894_45:
 18582  012086  90D8               	bcf	status,0,c
 18583  012088  3241               	rrcf	??i2_CANsendMessage+3,f,c
 18584  01208A  3240               	rrcf	??i2_CANsendMessage+2,f,c
 18585  01208C  323F               	rrcf	??i2_CANsendMessage+1,f,c
 18586  01208E  323E               	rrcf	??i2_CANsendMessage,f,c
 18587  012090                     i2u894_40:
 18588  012090  2EE8               	decfsz	wreg,f,c
 18589  012092  D7F9               	goto	i2u894_45
 18590  012094  C03E  F042         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18591  012098  C03F  F043         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18592  01209C  C040  F044         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18593  0120A0  C041  F045         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18594                           
 18595                           ; BSR set to: 15
 18596                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 18597  0120A4  5042               	movf	i2CANsendMessage@tamp,w,c
 18598  0120A6  6E42               	movwf	i2CANsendMessage@tamp,c
 18599  0120A8  6A43               	clrf	i2CANsendMessage@tamp+1,c
 18600  0120AA  6A44               	clrf	i2CANsendMessage@tamp+2,c
 18601  0120AC  6A45               	clrf	i2CANsendMessage@tamp+3,c
 18602                           
 18603                           ; BSR set to: 15
 18604                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 18605  0120AE  C042  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 18606                           
 18607                           ; BSR set to: 15
 18608                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 18609  0120B2  0E07               	movlw	7
 18610  0120B4  1436               	andwf	i2CANsendMessage@identifier,w,c
 18611  0120B6  6E42               	movwf	i2CANsendMessage@tamp,c
 18612  0120B8  0E00               	movlw	0
 18613  0120BA  1437               	andwf	i2CANsendMessage@identifier+1,w,c
 18614  0120BC  6E43               	movwf	i2CANsendMessage@tamp+1,c
 18615  0120BE  0E00               	movlw	0
 18616  0120C0  1438               	andwf	i2CANsendMessage@identifier+2,w,c
 18617  0120C2  6E44               	movwf	i2CANsendMessage@tamp+2,c
 18618  0120C4  0E00               	movlw	0
 18619  0120C6  1439               	andwf	i2CANsendMessage@identifier+3,w,c
 18620  0120C8  6E45               	movwf	i2CANsendMessage@tamp+3,c
 18621                           
 18622                           ; BSR set to: 15
 18623                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 18624  0120CA  C042  F03E         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 18625  0120CE  C043  F03F         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 18626  0120D2  C044  F040         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 18627  0120D6  C045  F041         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 18628  0120DA  0E05               	movlw	5
 18629  0120DC                     i2u895_45:
 18630  0120DC  90D8               	bcf	status,0,c
 18631  0120DE  363E               	rlcf	??i2_CANsendMessage,f,c
 18632  0120E0  363F               	rlcf	??i2_CANsendMessage+1,f,c
 18633  0120E2  3640               	rlcf	??i2_CANsendMessage+2,f,c
 18634  0120E4  3641               	rlcf	??i2_CANsendMessage+3,f,c
 18635  0120E6  2EE8               	decfsz	wreg,f,c
 18636  0120E8  D7F9               	goto	i2u895_45
 18637  0120EA  C03E  F042         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18638  0120EE  C03F  F043         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18639  0120F2  C040  F044         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18640  0120F6  C041  F045         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18641                           
 18642                           ; BSR set to: 15
 18643                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 18644  0120FA  010F               	movlb	15	; () banked
 18645  0120FC  5122               	movf	34,w,b	;volatile
 18646  0120FE  0B1F               	andlw	31
 18647  012100  010F               	movlb	15	; () banked
 18648  012102  6F22               	movwf	34,b	;volatile
 18649                           
 18650                           ; BSR set to: 15
 18651                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 18652  012104  C042  FF22         	movff	i2CANsendMessage@tamp,3874	;volatile
 18653  012108                     i2l7041:
 18654                           
 18655                           ; BSR set to: 15
 18656                           ;inc\CANlib.h: 498: }
 18657                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 18658  012108  A03D               	btfss	i2CANsendMessage@flags,0,c
 18659  01210A  D003               	goto	i2l410
 18660                           
 18661                           ; BSR set to: 15
 18662                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 18663  01210C  010F               	movlb	15	; () banked
 18664  01210E  8120               	bsf	32,0,b	;volatile
 18665  012110  D002               	goto	i2l411
 18666  012112                     i2l410:
 18667                           
 18668                           ; BSR set to: 15
 18669                           ;inc\CANlib.h: 502: else
 18670                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 18671  012112  010F               	movlb	15	; () banked
 18672  012114  9120               	bcf	32,0,b	;volatile
 18673  012116                     i2l411:
 18674                           
 18675                           ; BSR set to: 15
 18676                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 18677  012116  A23D               	btfss	i2CANsendMessage@flags,1,c
 18678  012118  D003               	goto	i2l412
 18679                           
 18680                           ; BSR set to: 15
 18681                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 18682  01211A  010F               	movlb	15	; () banked
 18683  01211C  8320               	bsf	32,1,b	;volatile
 18684  01211E  D002               	goto	i2l7047
 18685  012120                     i2l412:
 18686                           
 18687                           ; BSR set to: 15
 18688                           ;inc\CANlib.h: 506: else
 18689                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 18690  012120  010F               	movlb	15	; () banked
 18691  012122  9320               	bcf	32,1,b	;volatile
 18692  012124                     i2l7047:
 18693                           
 18694                           ; BSR set to: 15
 18695                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 18696  012124  C03A  FFD9         	movff	i2CANsendMessage@data,fsr2l
 18697  012128  C03B  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 18698  01212C  50DF               	movf	indf2,w,c
 18699  01212E  010F               	movlb	15	; () banked
 18700  012130  6F26               	movwf	38,b	;volatile
 18701                           
 18702                           ; BSR set to: 15
 18703                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 18704  012132  EE20 F001          	lfsr	2,1
 18705  012136  503A               	movf	i2CANsendMessage@data,w,c
 18706  012138  26D9               	addwf	fsr2l,f,c
 18707  01213A  503B               	movf	i2CANsendMessage@data+1,w,c
 18708  01213C  22DA               	addwfc	fsr2h,f,c
 18709  01213E  50DF               	movf	indf2,w,c
 18710  012140  010F               	movlb	15	; () banked
 18711  012142  6F27               	movwf	39,b	;volatile
 18712                           
 18713                           ; BSR set to: 15
 18714                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 18715  012144  EE20 F002          	lfsr	2,2
 18716  012148  503A               	movf	i2CANsendMessage@data,w,c
 18717  01214A  26D9               	addwf	fsr2l,f,c
 18718  01214C  503B               	movf	i2CANsendMessage@data+1,w,c
 18719  01214E  22DA               	addwfc	fsr2h,f,c
 18720  012150  50DF               	movf	indf2,w,c
 18721  012152  010F               	movlb	15	; () banked
 18722  012154  6F28               	movwf	40,b	;volatile
 18723                           
 18724                           ; BSR set to: 15
 18725                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 18726  012156  EE20 F003          	lfsr	2,3
 18727  01215A  503A               	movf	i2CANsendMessage@data,w,c
 18728  01215C  26D9               	addwf	fsr2l,f,c
 18729  01215E  503B               	movf	i2CANsendMessage@data+1,w,c
 18730  012160  22DA               	addwfc	fsr2h,f,c
 18731  012162  50DF               	movf	indf2,w,c
 18732  012164  010F               	movlb	15	; () banked
 18733  012166  6F29               	movwf	41,b	;volatile
 18734                           
 18735                           ; BSR set to: 15
 18736                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 18737  012168  EE20 F004          	lfsr	2,4
 18738  01216C  503A               	movf	i2CANsendMessage@data,w,c
 18739  01216E  26D9               	addwf	fsr2l,f,c
 18740  012170  503B               	movf	i2CANsendMessage@data+1,w,c
 18741  012172  22DA               	addwfc	fsr2h,f,c
 18742  012174  50DF               	movf	indf2,w,c
 18743  012176  010F               	movlb	15	; () banked
 18744  012178  6F2A               	movwf	42,b	;volatile
 18745                           
 18746                           ; BSR set to: 15
 18747                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 18748  01217A  EE20 F005          	lfsr	2,5
 18749  01217E  503A               	movf	i2CANsendMessage@data,w,c
 18750  012180  26D9               	addwf	fsr2l,f,c
 18751  012182  503B               	movf	i2CANsendMessage@data+1,w,c
 18752  012184  22DA               	addwfc	fsr2h,f,c
 18753  012186  50DF               	movf	indf2,w,c
 18754  012188  010F               	movlb	15	; () banked
 18755  01218A  6F2B               	movwf	43,b	;volatile
 18756                           
 18757                           ; BSR set to: 15
 18758                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 18759  01218C  EE20 F006          	lfsr	2,6
 18760  012190  503A               	movf	i2CANsendMessage@data,w,c
 18761  012192  26D9               	addwf	fsr2l,f,c
 18762  012194  503B               	movf	i2CANsendMessage@data+1,w,c
 18763  012196  22DA               	addwfc	fsr2h,f,c
 18764  012198  50DF               	movf	indf2,w,c
 18765  01219A  010F               	movlb	15	; () banked
 18766  01219C  6F2C               	movwf	44,b	;volatile
 18767                           
 18768                           ; BSR set to: 15
 18769                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 18770  01219E  EE20 F007          	lfsr	2,7
 18771  0121A2  503A               	movf	i2CANsendMessage@data,w,c
 18772  0121A4  26D9               	addwf	fsr2l,f,c
 18773  0121A6  503B               	movf	i2CANsendMessage@data+1,w,c
 18774  0121A8  22DA               	addwfc	fsr2h,f,c
 18775  0121AA  50DF               	movf	indf2,w,c
 18776  0121AC  010F               	movlb	15	; () banked
 18777  0121AE  6F2D               	movwf	45,b	;volatile
 18778                           
 18779                           ; BSR set to: 15
 18780                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 18781  0121B0  010F               	movlb	15	; () banked
 18782  0121B2  8720               	bsf	32,3,b	;volatile
 18783                           
 18784                           ; BSR set to: 15
 18785                           ;inc\CANlib.h: 520: return;
 18786  0121B4  0012               	return	
 18787  0121B6                     __end_ofi2_CANsendMessage:
 18788                           	opt stack 0
 18789                           pclatu	equ	0xFFB
 18790                           pclath	equ	0xFFA
 18791                           tblptru	equ	0xFF8
 18792                           tblptrh	equ	0xFF7
 18793                           tblptrl	equ	0xFF6
 18794                           tablat	equ	0xFF5
 18795                           prodh	equ	0xFF4
 18796                           prodl	equ	0xFF3
 18797                           intcon	equ	0xFF2
 18798                           postinc0	equ	0xFEE
 18799                           fsr0h	equ	0xFEA
 18800                           fsr0l	equ	0xFE9
 18801                           wreg	equ	0xFE8
 18802                           indf1	equ	0xFE7
 18803                           plusw1	equ	0xFE3
 18804                           fsr1h	equ	0xFE2
 18805                           fsr1l	equ	0xFE1
 18806                           bsr	equ	0xFE0
 18807                           indf2	equ	0xFDF
 18808                           postinc2	equ	0xFDE
 18809                           plusw2	equ	0xFDB
 18810                           fsr2h	equ	0xFDA
 18811                           fsr2l	equ	0xFD9
 18812                           status	equ	0xFD8
 18813                           
 18814 ;; *************** function i2_CANisTxReady *****************
 18815 ;; Defined at:
 18816 ;;		line 1154 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 18817 ;; Parameters:    Size  Location     Type
 18818 ;;		None
 18819 ;; Auto vars:     Size  Location     Type
 18820 ;;		None
 18821 ;; Return value:  Size  Location     Type
 18822 ;;                  1    wreg      unsigned char 
 18823 ;; Registers used:
 18824 ;;		wreg, status,2
 18825 ;; Tracked objects:
 18826 ;;		On entry : 0/0
 18827 ;;		On exit  : 0/0
 18828 ;;		Unchanged: 0/0
 18829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18831 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18833 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18834 ;;Total ram usage:        1 bytes
 18835 ;; Hardware stack levels used:    1
 18836 ;; This function calls:
 18837 ;;		Nothing
 18838 ;; This function is called by:
 18839 ;;		_ISR_alta
 18840 ;; This function uses a non-reentrant model
 18841 ;;
 18842                           
 18843                           	psect	text51
 18844  015E0E                     __ptext51:
 18845                           	opt stack 0
 18846  015E0E                     i2_CANisTxReady:
 18847                           	opt stack 20
 18848                           
 18849                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 18850                           
 18851                           ; BSR set to: 15
 18852                           ;incstack = 0
 18853  015E0E  0E01               	movlw	1
 18854  015E10  6E36               	movwf	i2_CANisTxReady$3227,c
 18855  015E12  010F               	movlb	15	; () banked
 18856  015E14  A740               	btfss	64,3,b	;volatile
 18857  015E16  D008               	goto	i2l564
 18858                           
 18859                           ; BSR set to: 15
 18860  015E18  010F               	movlb	15	; () banked
 18861  015E1A  A730               	btfss	48,3,b	;volatile
 18862  015E1C  D005               	goto	i2l564
 18863                           
 18864                           ; BSR set to: 15
 18865  015E1E  010F               	movlb	15	; () banked
 18866  015E20  A720               	btfss	32,3,b	;volatile
 18867  015E22  D002               	goto	i2l564
 18868                           
 18869                           ; BSR set to: 15
 18870  015E24  0E00               	movlw	0
 18871  015E26  6E36               	movwf	i2_CANisTxReady$3227,c
 18872  015E28                     i2l564:
 18873                           
 18874                           ; BSR set to: 15
 18875  015E28  5036               	movf	i2_CANisTxReady$3227,w,c
 18876  015E2A  0012               	return	
 18877  015E2C                     __end_ofi2_CANisTxReady:
 18878                           	opt stack 0
 18879                           pclatu	equ	0xFFB
 18880                           pclath	equ	0xFFA
 18881                           tblptru	equ	0xFF8
 18882                           tblptrh	equ	0xFF7
 18883                           tblptrl	equ	0xFF6
 18884                           tablat	equ	0xFF5
 18885                           prodh	equ	0xFF4
 18886                           prodl	equ	0xFF3
 18887                           intcon	equ	0xFF2
 18888                           postinc0	equ	0xFEE
 18889                           fsr0h	equ	0xFEA
 18890                           fsr0l	equ	0xFE9
 18891                           wreg	equ	0xFE8
 18892                           indf1	equ	0xFE7
 18893                           plusw1	equ	0xFE3
 18894                           fsr1h	equ	0xFE2
 18895                           fsr1l	equ	0xFE1
 18896                           bsr	equ	0xFE0
 18897                           indf2	equ	0xFDF
 18898                           postinc2	equ	0xFDE
 18899                           plusw2	equ	0xFDB
 18900                           fsr2h	equ	0xFDA
 18901                           fsr2l	equ	0xFD9
 18902                           status	equ	0xFD8
 18903                           
 18904 ;; *************** function _CANreceiveMessage *****************
 18905 ;; Defined at:
 18906 ;;		line 528 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 18907 ;; Parameters:    Size  Location     Type
 18908 ;;  msg             2   17[COMRAM] PTR struct .
 18909 ;;		 -> msg(15), 
 18910 ;; Auto vars:     Size  Location     Type
 18911 ;;  tamp            1   28[COMRAM] unsigned char 
 18912 ;;  error           1   27[COMRAM] unsigned char 
 18913 ;; Return value:  Size  Location     Type
 18914 ;;                  1    wreg      unsigned char 
 18915 ;; Registers used:
 18916 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18917 ;; Tracked objects:
 18918 ;;		On entry : 0/0
 18919 ;;		On exit  : 0/0
 18920 ;;		Unchanged: 0/0
 18921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18922 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18923 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18924 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18925 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18926 ;;Total ram usage:       12 bytes
 18927 ;; Hardware stack levels used:    1
 18928 ;; This function calls:
 18929 ;;		Nothing
 18930 ;; This function is called by:
 18931 ;;		_ISR_alta
 18932 ;; This function uses a non-reentrant model
 18933 ;;
 18934                           
 18935                           	psect	text52
 18936  0126D0                     __ptext52:
 18937                           	opt stack 0
 18938  0126D0                     _CANreceiveMessage:
 18939                           	opt stack 20
 18940                           
 18941                           ;inc\CANlib.h: 530: BYTE tamp;
 18942                           ;inc\CANlib.h: 531: BYTE error = 0;
 18943                           
 18944                           ; BSR set to: 15
 18945                           ;incstack = 0
 18946  0126D0  0E00               	movlw	0
 18947  0126D2  6E40               	movwf	CANreceiveMessage@error,c
 18948                           
 18949                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 18950  0126D4  BE74               	btfsc	3956,7,c	;volatile
 18951                           
 18952                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 18953  0126D6  8040               	bsf	CANreceiveMessage@error,0,c
 18954                           
 18955                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 18956  0126D8  BC74               	btfsc	3956,6,c	;volatile
 18957                           
 18958                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 18959  0126DA  8240               	bsf	CANreceiveMessage@error,1,c
 18960                           
 18961                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 18962  0126DC  010F               	movlb	15	; () banked
 18963  0126DE  AF50               	btfss	80,7,b	;volatile
 18964  0126E0  D143               	goto	i2l418
 18965                           
 18966                           ; BSR set to: 15
 18967                           ;inc\CANlib.h: 541: {
 18968                           ;inc\CANlib.h: 542: msg->identifier = 0;
 18969  0126E2  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 18970  0126E6  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 18971  0126EA  6ADE               	clrf	postinc2,c
 18972  0126EC  6ADE               	clrf	postinc2,c
 18973  0126EE  6ADE               	clrf	postinc2,c
 18974  0126F0  6ADD               	clrf	postdec2,c
 18975                           
 18976                           ; BSR set to: 15
 18977                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 18978  0126F2  EE20 F004          	lfsr	2,4
 18979  0126F6  5036               	movf	CANreceiveMessage@msg,w,c
 18980  0126F8  26D9               	addwf	fsr2l,f,c
 18981  0126FA  5037               	movf	CANreceiveMessage@msg+1,w,c
 18982  0126FC  22DA               	addwfc	fsr2h,f,c
 18983  0126FE  CF56 FFDF          	movff	3926,indf2	;volatile
 18984                           
 18985                           ; BSR set to: 15
 18986                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 18987  012702  EE20 F005          	lfsr	2,5
 18988  012706  5036               	movf	CANreceiveMessage@msg,w,c
 18989  012708  26D9               	addwf	fsr2l,f,c
 18990  01270A  5037               	movf	CANreceiveMessage@msg+1,w,c
 18991  01270C  22DA               	addwfc	fsr2h,f,c
 18992  01270E  CF57 FFDF          	movff	3927,indf2	;volatile
 18993                           
 18994                           ; BSR set to: 15
 18995                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 18996  012712  EE20 F006          	lfsr	2,6
 18997  012716  5036               	movf	CANreceiveMessage@msg,w,c
 18998  012718  26D9               	addwf	fsr2l,f,c
 18999  01271A  5037               	movf	CANreceiveMessage@msg+1,w,c
 19000  01271C  22DA               	addwfc	fsr2h,f,c
 19001  01271E  CF58 FFDF          	movff	3928,indf2	;volatile
 19002                           
 19003                           ; BSR set to: 15
 19004                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 19005  012722  EE20 F007          	lfsr	2,7
 19006  012726  5036               	movf	CANreceiveMessage@msg,w,c
 19007  012728  26D9               	addwf	fsr2l,f,c
 19008  01272A  5037               	movf	CANreceiveMessage@msg+1,w,c
 19009  01272C  22DA               	addwfc	fsr2h,f,c
 19010  01272E  CF59 FFDF          	movff	3929,indf2	;volatile
 19011                           
 19012                           ; BSR set to: 15
 19013                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 19014  012732  EE20 F008          	lfsr	2,8
 19015  012736  5036               	movf	CANreceiveMessage@msg,w,c
 19016  012738  26D9               	addwf	fsr2l,f,c
 19017  01273A  5037               	movf	CANreceiveMessage@msg+1,w,c
 19018  01273C  22DA               	addwfc	fsr2h,f,c
 19019  01273E  CF5A FFDF          	movff	3930,indf2	;volatile
 19020                           
 19021                           ; BSR set to: 15
 19022                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 19023  012742  EE20 F009          	lfsr	2,9
 19024  012746  5036               	movf	CANreceiveMessage@msg,w,c
 19025  012748  26D9               	addwf	fsr2l,f,c
 19026  01274A  5037               	movf	CANreceiveMessage@msg+1,w,c
 19027  01274C  22DA               	addwfc	fsr2h,f,c
 19028  01274E  CF5B FFDF          	movff	3931,indf2	;volatile
 19029                           
 19030                           ; BSR set to: 15
 19031                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 19032  012752  EE20 F00A          	lfsr	2,10
 19033  012756  5036               	movf	CANreceiveMessage@msg,w,c
 19034  012758  26D9               	addwf	fsr2l,f,c
 19035  01275A  5037               	movf	CANreceiveMessage@msg+1,w,c
 19036  01275C  22DA               	addwfc	fsr2h,f,c
 19037  01275E  CF5C FFDF          	movff	3932,indf2	;volatile
 19038                           
 19039                           ; BSR set to: 15
 19040                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 19041  012762  EE20 F00B          	lfsr	2,11
 19042  012766  5036               	movf	CANreceiveMessage@msg,w,c
 19043  012768  26D9               	addwf	fsr2l,f,c
 19044  01276A  5037               	movf	CANreceiveMessage@msg+1,w,c
 19045  01276C  22DA               	addwfc	fsr2h,f,c
 19046  01276E  CF5D FFDF          	movff	3933,indf2	;volatile
 19047                           
 19048                           ; BSR set to: 15
 19049                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 19050  012772  EE20 F00E          	lfsr	2,14
 19051  012776  5036               	movf	CANreceiveMessage@msg,w,c
 19052  012778  26D9               	addwf	fsr2l,f,c
 19053  01277A  5037               	movf	CANreceiveMessage@msg+1,w,c
 19054  01277C  22DA               	addwfc	fsr2h,f,c
 19055  01277E  010F               	movlb	15	; () banked
 19056  012780  AD55               	btfss	85,6,b	;volatile
 19057  012782  D002               	goto	i2u813_40
 19058  012784  0E01               	movlw	1
 19059  012786  D001               	goto	i2u813_46
 19060  012788                     i2u813_40:
 19061  012788  0E00               	movlw	0
 19062  01278A                     i2u813_46:
 19063  01278A  6EDF               	movwf	indf2,c
 19064                           
 19065                           ; BSR set to: 15
 19066                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 19067  01278C  EE20 F00D          	lfsr	2,13
 19068  012790  5036               	movf	CANreceiveMessage@msg,w,c
 19069  012792  26D9               	addwf	fsr2l,f,c
 19070  012794  5037               	movf	CANreceiveMessage@msg+1,w,c
 19071  012796  22DA               	addwfc	fsr2h,f,c
 19072  012798  010F               	movlb	15	; () banked
 19073  01279A  5155               	movf	85,w,b	;volatile
 19074  01279C  0B0F               	andlw	15
 19075  01279E  6EDF               	movwf	indf2,c
 19076                           
 19077                           ; BSR set to: 15
 19078                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 19079  0127A0  EE20 F00C          	lfsr	2,12
 19080  0127A4  5036               	movf	CANreceiveMessage@msg,w,c
 19081  0127A6  26D9               	addwf	fsr2l,f,c
 19082  0127A8  5037               	movf	CANreceiveMessage@msg+1,w,c
 19083  0127AA  22DA               	addwfc	fsr2h,f,c
 19084  0127AC  010F               	movlb	15	; () banked
 19085  0127AE  A752               	btfss	82,3,b	;volatile
 19086  0127B0  D002               	goto	i2u814_40
 19087  0127B2  0E01               	movlw	1
 19088  0127B4  D001               	goto	i2u814_46
 19089  0127B6                     i2u814_40:
 19090  0127B6  0E00               	movlw	0
 19091  0127B8                     i2u814_46:
 19092  0127B8  6EDF               	movwf	indf2,c
 19093                           
 19094                           ; BSR set to: 15
 19095                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 19096  0127BA  010F               	movlb	15	; () banked
 19097  0127BC  B752               	btfsc	82,3,b	;volatile
 19098  0127BE  D044               	goto	i2l6531
 19099                           
 19100                           ; BSR set to: 15
 19101                           ;inc\CANlib.h: 559: {
 19102                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 19103  0127C0  CF51 F038          	movff	3921,??_CANreceiveMessage	;volatile
 19104  0127C4  6A39               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19105  0127C6  6A3A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19106  0127C8  6A3B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19107  0127CA  0E03               	movlw	3
 19108  0127CC                     i2u816_45:
 19109  0127CC  90D8               	bcf	status,0,c
 19110  0127CE  3638               	rlcf	??_CANreceiveMessage,f,c
 19111  0127D0  3639               	rlcf	??_CANreceiveMessage+1,f,c
 19112  0127D2  363A               	rlcf	??_CANreceiveMessage+2,f,c
 19113  0127D4  363B               	rlcf	??_CANreceiveMessage+3,f,c
 19114  0127D6  2EE8               	decfsz	wreg,f,c
 19115  0127D8  D7F9               	goto	i2u816_45
 19116  0127DA  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19117  0127DE  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19118  0127E2  C038  FFDE         	movff	??_CANreceiveMessage,postinc2
 19119  0127E6  C039  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 19120  0127EA  C03A  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 19121  0127EE  C03B  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 19122                           
 19123                           ; BSR set to: 15
 19124                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 19125  0127F2  010F               	movlb	15	; () banked
 19126  0127F4  3952               	swapf	82,w,b	;volatile
 19127  0127F6  42E8               	rrncf	wreg,f,c
 19128  0127F8  0B07               	andlw	7
 19129  0127FA  0B07               	andlw	7
 19130  0127FC  6E41               	movwf	CANreceiveMessage@tamp,c
 19131                           
 19132                           ; BSR set to: 15
 19133                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 19134  0127FE  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19135  012802  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19136  012806  CFDE F038          	movff	postinc2,??_CANreceiveMessage
 19137  01280A  CFDE F039          	movff	postinc2,??_CANreceiveMessage+1
 19138  01280E  CFDE F03A          	movff	postinc2,??_CANreceiveMessage+2
 19139  012812  CFDE F03B          	movff	postinc2,??_CANreceiveMessage+3
 19140  012816  5041               	movf	CANreceiveMessage@tamp,w,c
 19141  012818  2438               	addwf	??_CANreceiveMessage,w,c
 19142  01281A  6E3C               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 19143  01281C  0E00               	movlw	0
 19144  01281E  2039               	addwfc	??_CANreceiveMessage+1,w,c
 19145  012820  6E3D               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 19146  012822  0E00               	movlw	0
 19147  012824  203A               	addwfc	??_CANreceiveMessage+2,w,c
 19148  012826  6E3E               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 19149  012828  0E00               	movlw	0
 19150  01282A  203B               	addwfc	??_CANreceiveMessage+3,w,c
 19151  01282C  6E3F               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 19152  01282E  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19153  012832  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19154  012836  C03C  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 19155  01283A  C03D  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 19156  01283E  C03E  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 19157  012842  C03F  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 19158                           
 19159                           ;inc\CANlib.h: 563: }
 19160  012846  D08D               	goto	i2l6557
 19161  012848                     i2l6531:
 19162                           
 19163                           ; BSR set to: 15
 19164                           ;inc\CANlib.h: 564: else
 19165                           ;inc\CANlib.h: 565: {
 19166                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 19167  012848  CF54 F038          	movff	3924,??_CANreceiveMessage	;volatile
 19168  01284C  6A39               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19169  01284E  6A3A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19170  012850  6A3B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19171  012852  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19172  012856  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19173  01285A  C038  FFDE         	movff	??_CANreceiveMessage,postinc2
 19174  01285E  C039  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 19175  012862  C03A  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 19176  012866  C03B  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 19177                           
 19178                           ; BSR set to: 15
 19179                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 19180  01286A  CF53 F038          	movff	3923,??_CANreceiveMessage	;volatile
 19181  01286E  6A39               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19182  012870  6A3A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19183  012872  6A3B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19184  012874  C03A  F03B         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 19185  012878  C039  F03A         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 19186  01287C  C038  F039         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 19187  012880  6A38               	clrf	??_CANreceiveMessage,c
 19188  012882  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19189  012886  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19190  01288A  5038               	movf	??_CANreceiveMessage,w,c
 19191  01288C  26DE               	addwf	postinc2,f,c
 19192  01288E  5039               	movf	??_CANreceiveMessage+1,w,c
 19193  012890  22DE               	addwfc	postinc2,f,c
 19194  012892  503A               	movf	??_CANreceiveMessage+2,w,c
 19195  012894  22DE               	addwfc	postinc2,f,c
 19196  012896  503B               	movf	??_CANreceiveMessage+3,w,c
 19197  012898  22DE               	addwfc	postinc2,f,c
 19198                           
 19199                           ; BSR set to: 15
 19200                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 19201  01289A  010F               	movlb	15	; () banked
 19202  01289C  A152               	btfss	82,0,b	;volatile
 19203  01289E  D00C               	goto	i2l6539
 19204                           
 19205                           ; BSR set to: 15
 19206                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 19207  0128A0  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19208  0128A4  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19209  0128A8  0E00               	movlw	0
 19210  0128AA  12DE               	iorwf	postinc2,f,c
 19211  0128AC  0E00               	movlw	0
 19212  0128AE  12DE               	iorwf	postinc2,f,c
 19213  0128B0  0E01               	movlw	1
 19214  0128B2  12DE               	iorwf	postinc2,f,c
 19215  0128B4  0E00               	movlw	0
 19216  0128B6  12DE               	iorwf	postinc2,f,c
 19217  0128B8                     i2l6539:
 19218                           
 19219                           ; BSR set to: 15
 19220                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 19221  0128B8  010F               	movlb	15	; () banked
 19222  0128BA  A352               	btfss	82,1,b	;volatile
 19223  0128BC  D00C               	goto	i2l6543
 19224                           
 19225                           ; BSR set to: 15
 19226                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 19227  0128BE  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19228  0128C2  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19229  0128C6  0E00               	movlw	0
 19230  0128C8  12DE               	iorwf	postinc2,f,c
 19231  0128CA  0E00               	movlw	0
 19232  0128CC  12DE               	iorwf	postinc2,f,c
 19233  0128CE  0E02               	movlw	2
 19234  0128D0  12DE               	iorwf	postinc2,f,c
 19235  0128D2  0E00               	movlw	0
 19236  0128D4  12DE               	iorwf	postinc2,f,c
 19237  0128D6                     i2l6543:
 19238                           
 19239                           ; BSR set to: 15
 19240                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 19241  0128D6  010F               	movlb	15	; () banked
 19242  0128D8  AB52               	btfss	82,5,b	;volatile
 19243  0128DA  D00C               	goto	i2l6547
 19244                           
 19245                           ; BSR set to: 15
 19246                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 19247  0128DC  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19248  0128E0  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19249  0128E4  0E00               	movlw	0
 19250  0128E6  12DE               	iorwf	postinc2,f,c
 19251  0128E8  0E00               	movlw	0
 19252  0128EA  12DE               	iorwf	postinc2,f,c
 19253  0128EC  0E04               	movlw	4
 19254  0128EE  12DE               	iorwf	postinc2,f,c
 19255  0128F0  0E00               	movlw	0
 19256  0128F2  12DE               	iorwf	postinc2,f,c
 19257  0128F4                     i2l6547:
 19258                           
 19259                           ; BSR set to: 15
 19260                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 19261  0128F4  010F               	movlb	15	; () banked
 19262  0128F6  AD52               	btfss	82,6,b	;volatile
 19263  0128F8  D00C               	goto	i2l6551
 19264                           
 19265                           ; BSR set to: 15
 19266                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 19267  0128FA  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19268  0128FE  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19269  012902  0E00               	movlw	0
 19270  012904  12DE               	iorwf	postinc2,f,c
 19271  012906  0E00               	movlw	0
 19272  012908  12DE               	iorwf	postinc2,f,c
 19273  01290A  0E08               	movlw	8
 19274  01290C  12DE               	iorwf	postinc2,f,c
 19275  01290E  0E00               	movlw	0
 19276  012910  12DE               	iorwf	postinc2,f,c
 19277  012912                     i2l6551:
 19278                           
 19279                           ; BSR set to: 15
 19280                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 19281  012912  010F               	movlb	15	; () banked
 19282  012914  AF52               	btfss	82,7,b	;volatile
 19283  012916  D00C               	goto	i2l6555
 19284                           
 19285                           ; BSR set to: 15
 19286                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 19287  012918  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19288  01291C  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19289  012920  0E00               	movlw	0
 19290  012922  12DE               	iorwf	postinc2,f,c
 19291  012924  0E00               	movlw	0
 19292  012926  12DE               	iorwf	postinc2,f,c
 19293  012928  0E10               	movlw	16
 19294  01292A  12DE               	iorwf	postinc2,f,c
 19295  01292C  0E00               	movlw	0
 19296  01292E  12DE               	iorwf	postinc2,f,c
 19297  012930                     i2l6555:
 19298                           
 19299                           ; BSR set to: 15
 19300                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 19301  012930  CF51 F038          	movff	3921,??_CANreceiveMessage	;volatile
 19302  012934  6A39               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19303  012936  6A3A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19304  012938  6A3B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19305  01293A  0E15               	movlw	21
 19306  01293C                     i2u822_45:
 19307  01293C  90D8               	bcf	status,0,c
 19308  01293E  3638               	rlcf	??_CANreceiveMessage,f,c
 19309  012940  3639               	rlcf	??_CANreceiveMessage+1,f,c
 19310  012942  363A               	rlcf	??_CANreceiveMessage+2,f,c
 19311  012944  363B               	rlcf	??_CANreceiveMessage+3,f,c
 19312  012946  2EE8               	decfsz	wreg,f,c
 19313  012948  D7F9               	goto	i2u822_45
 19314  01294A  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19315  01294E  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19316  012952  5038               	movf	??_CANreceiveMessage,w,c
 19317  012954  12DE               	iorwf	postinc2,f,c
 19318  012956  5039               	movf	??_CANreceiveMessage+1,w,c
 19319  012958  12DE               	iorwf	postinc2,f,c
 19320  01295A  503A               	movf	??_CANreceiveMessage+2,w,c
 19321  01295C  12DE               	iorwf	postinc2,f,c
 19322  01295E  503B               	movf	??_CANreceiveMessage+3,w,c
 19323  012960  12DE               	iorwf	postinc2,f,c
 19324  012962                     i2l6557:
 19325                           
 19326                           ; BSR set to: 15
 19327                           ;inc\CANlib.h: 581: }
 19328                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 19329  012962  010F               	movlb	15	; () banked
 19330  012964  9F50               	bcf	80,7,b	;volatile
 19331                           
 19332                           ; BSR set to: 15
 19333                           ;inc\CANlib.h: 584: return (error);
 19334                           ;	Return value of _CANreceiveMessage is never used
 19335  012966  0012               	return	
 19336  012968                     i2l418:
 19337                           
 19338                           ; BSR set to: 15
 19339                           ;inc\CANlib.h: 585: }
 19340                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 19341  012968  AE60               	btfss	3936,7,c	;volatile
 19342  01296A  0012               	return	
 19343                           
 19344                           ; BSR set to: 15
 19345                           ;inc\CANlib.h: 588: {
 19346                           ;inc\CANlib.h: 589: msg->identifier = 0;
 19347  01296C  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19348  012970  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19349  012974  6ADE               	clrf	postinc2,c
 19350  012976  6ADE               	clrf	postinc2,c
 19351  012978  6ADE               	clrf	postinc2,c
 19352  01297A  6ADD               	clrf	postdec2,c
 19353                           
 19354                           ; BSR set to: 15
 19355                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 19356  01297C  EE20 F004          	lfsr	2,4
 19357  012980  5036               	movf	CANreceiveMessage@msg,w,c
 19358  012982  26D9               	addwf	fsr2l,f,c
 19359  012984  5037               	movf	CANreceiveMessage@msg+1,w,c
 19360  012986  22DA               	addwfc	fsr2h,f,c
 19361  012988  CF66 FFDF          	movff	3942,indf2	;volatile
 19362                           
 19363                           ; BSR set to: 15
 19364                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 19365  01298C  EE20 F005          	lfsr	2,5
 19366  012990  5036               	movf	CANreceiveMessage@msg,w,c
 19367  012992  26D9               	addwf	fsr2l,f,c
 19368  012994  5037               	movf	CANreceiveMessage@msg+1,w,c
 19369  012996  22DA               	addwfc	fsr2h,f,c
 19370  012998  CF67 FFDF          	movff	3943,indf2	;volatile
 19371                           
 19372                           ; BSR set to: 15
 19373                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 19374  01299C  EE20 F006          	lfsr	2,6
 19375  0129A0  5036               	movf	CANreceiveMessage@msg,w,c
 19376  0129A2  26D9               	addwf	fsr2l,f,c
 19377  0129A4  5037               	movf	CANreceiveMessage@msg+1,w,c
 19378  0129A6  22DA               	addwfc	fsr2h,f,c
 19379  0129A8  CF68 FFDF          	movff	3944,indf2	;volatile
 19380                           
 19381                           ; BSR set to: 15
 19382                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 19383  0129AC  EE20 F007          	lfsr	2,7
 19384  0129B0  5036               	movf	CANreceiveMessage@msg,w,c
 19385  0129B2  26D9               	addwf	fsr2l,f,c
 19386  0129B4  5037               	movf	CANreceiveMessage@msg+1,w,c
 19387  0129B6  22DA               	addwfc	fsr2h,f,c
 19388  0129B8  CF69 FFDF          	movff	3945,indf2	;volatile
 19389                           
 19390                           ; BSR set to: 15
 19391                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 19392  0129BC  EE20 F008          	lfsr	2,8
 19393  0129C0  5036               	movf	CANreceiveMessage@msg,w,c
 19394  0129C2  26D9               	addwf	fsr2l,f,c
 19395  0129C4  5037               	movf	CANreceiveMessage@msg+1,w,c
 19396  0129C6  22DA               	addwfc	fsr2h,f,c
 19397  0129C8  CF6A FFDF          	movff	3946,indf2	;volatile
 19398                           
 19399                           ; BSR set to: 15
 19400                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 19401  0129CC  EE20 F009          	lfsr	2,9
 19402  0129D0  5036               	movf	CANreceiveMessage@msg,w,c
 19403  0129D2  26D9               	addwf	fsr2l,f,c
 19404  0129D4  5037               	movf	CANreceiveMessage@msg+1,w,c
 19405  0129D6  22DA               	addwfc	fsr2h,f,c
 19406  0129D8  CF6B FFDF          	movff	3947,indf2	;volatile
 19407                           
 19408                           ; BSR set to: 15
 19409                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 19410  0129DC  EE20 F00A          	lfsr	2,10
 19411  0129E0  5036               	movf	CANreceiveMessage@msg,w,c
 19412  0129E2  26D9               	addwf	fsr2l,f,c
 19413  0129E4  5037               	movf	CANreceiveMessage@msg+1,w,c
 19414  0129E6  22DA               	addwfc	fsr2h,f,c
 19415  0129E8  CF6C FFDF          	movff	3948,indf2	;volatile
 19416                           
 19417                           ; BSR set to: 15
 19418                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 19419  0129EC  EE20 F00B          	lfsr	2,11
 19420  0129F0  5036               	movf	CANreceiveMessage@msg,w,c
 19421  0129F2  26D9               	addwf	fsr2l,f,c
 19422  0129F4  5037               	movf	CANreceiveMessage@msg+1,w,c
 19423  0129F6  22DA               	addwfc	fsr2h,f,c
 19424  0129F8  CF6D FFDF          	movff	3949,indf2	;volatile
 19425                           
 19426                           ; BSR set to: 15
 19427                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 19428  0129FC  EE20 F00E          	lfsr	2,14
 19429  012A00  5036               	movf	CANreceiveMessage@msg,w,c
 19430  012A02  26D9               	addwf	fsr2l,f,c
 19431  012A04  5037               	movf	CANreceiveMessage@msg+1,w,c
 19432  012A06  22DA               	addwfc	fsr2h,f,c
 19433  012A08  AC65               	btfss	3941,6,c	;volatile
 19434  012A0A  D002               	goto	i2u824_40
 19435  012A0C  0E01               	movlw	1
 19436  012A0E  D001               	goto	i2u824_46
 19437  012A10                     i2u824_40:
 19438  012A10  0E00               	movlw	0
 19439  012A12                     i2u824_46:
 19440  012A12  6EDF               	movwf	indf2,c
 19441                           
 19442                           ; BSR set to: 15
 19443                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 19444  012A14  EE20 F00D          	lfsr	2,13
 19445  012A18  5036               	movf	CANreceiveMessage@msg,w,c
 19446  012A1A  26D9               	addwf	fsr2l,f,c
 19447  012A1C  5037               	movf	CANreceiveMessage@msg+1,w,c
 19448  012A1E  22DA               	addwfc	fsr2h,f,c
 19449  012A20  5065               	movf	3941,w,c	;volatile
 19450  012A22  0B0F               	andlw	15
 19451  012A24  6EDF               	movwf	indf2,c
 19452                           
 19453                           ; BSR set to: 15
 19454                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 19455  012A26  EE20 F00C          	lfsr	2,12
 19456  012A2A  5036               	movf	CANreceiveMessage@msg,w,c
 19457  012A2C  26D9               	addwf	fsr2l,f,c
 19458  012A2E  5037               	movf	CANreceiveMessage@msg+1,w,c
 19459  012A30  22DA               	addwfc	fsr2h,f,c
 19460  012A32  A662               	btfss	3938,3,c	;volatile
 19461  012A34  D002               	goto	i2u825_40
 19462  012A36  0E01               	movlw	1
 19463  012A38  D001               	goto	i2u825_46
 19464  012A3A                     i2u825_40:
 19465  012A3A  0E00               	movlw	0
 19466  012A3C                     i2u825_46:
 19467  012A3C  6EDF               	movwf	indf2,c
 19468                           
 19469                           ; BSR set to: 15
 19470                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 19471  012A3E  B662               	btfsc	3938,3,c	;volatile
 19472  012A40  D043               	goto	i2l6593
 19473                           
 19474                           ; BSR set to: 15
 19475                           ;inc\CANlib.h: 606: {
 19476                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 19477  012A42  CF61 F038          	movff	3937,??_CANreceiveMessage	;volatile
 19478  012A46  6A39               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19479  012A48  6A3A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19480  012A4A  6A3B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19481  012A4C  0E03               	movlw	3
 19482  012A4E                     i2u827_45:
 19483  012A4E  90D8               	bcf	status,0,c
 19484  012A50  3638               	rlcf	??_CANreceiveMessage,f,c
 19485  012A52  3639               	rlcf	??_CANreceiveMessage+1,f,c
 19486  012A54  363A               	rlcf	??_CANreceiveMessage+2,f,c
 19487  012A56  363B               	rlcf	??_CANreceiveMessage+3,f,c
 19488  012A58  2EE8               	decfsz	wreg,f,c
 19489  012A5A  D7F9               	goto	i2u827_45
 19490  012A5C  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19491  012A60  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19492  012A64  C038  FFDE         	movff	??_CANreceiveMessage,postinc2
 19493  012A68  C039  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 19494  012A6C  C03A  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 19495  012A70  C03B  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 19496                           
 19497                           ; BSR set to: 15
 19498                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 19499  012A74  3862               	swapf	3938,w,c	;volatile
 19500  012A76  42E8               	rrncf	wreg,f,c
 19501  012A78  0B07               	andlw	7
 19502  012A7A  0B07               	andlw	7
 19503  012A7C  6E41               	movwf	CANreceiveMessage@tamp,c
 19504                           
 19505                           ; BSR set to: 15
 19506                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 19507  012A7E  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19508  012A82  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19509  012A86  CFDE F038          	movff	postinc2,??_CANreceiveMessage
 19510  012A8A  CFDE F039          	movff	postinc2,??_CANreceiveMessage+1
 19511  012A8E  CFDE F03A          	movff	postinc2,??_CANreceiveMessage+2
 19512  012A92  CFDE F03B          	movff	postinc2,??_CANreceiveMessage+3
 19513  012A96  5041               	movf	CANreceiveMessage@tamp,w,c
 19514  012A98  2438               	addwf	??_CANreceiveMessage,w,c
 19515  012A9A  6E3C               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 19516  012A9C  0E00               	movlw	0
 19517  012A9E  2039               	addwfc	??_CANreceiveMessage+1,w,c
 19518  012AA0  6E3D               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 19519  012AA2  0E00               	movlw	0
 19520  012AA4  203A               	addwfc	??_CANreceiveMessage+2,w,c
 19521  012AA6  6E3E               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 19522  012AA8  0E00               	movlw	0
 19523  012AAA  203B               	addwfc	??_CANreceiveMessage+3,w,c
 19524  012AAC  6E3F               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 19525  012AAE  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19526  012AB2  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19527  012AB6  C03C  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 19528  012ABA  C03D  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 19529  012ABE  C03E  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 19530  012AC2  C03F  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 19531                           
 19532                           ;inc\CANlib.h: 610: }
 19533  012AC6  D088               	goto	i2l6619
 19534  012AC8                     i2l6593:
 19535                           
 19536                           ; BSR set to: 15
 19537                           ;inc\CANlib.h: 611: else
 19538                           ;inc\CANlib.h: 612: {
 19539                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 19540  012AC8  CF64 F038          	movff	3940,??_CANreceiveMessage	;volatile
 19541  012ACC  6A39               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19542  012ACE  6A3A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19543  012AD0  6A3B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19544  012AD2  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19545  012AD6  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19546  012ADA  C038  FFDE         	movff	??_CANreceiveMessage,postinc2
 19547  012ADE  C039  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 19548  012AE2  C03A  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 19549  012AE6  C03B  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 19550                           
 19551                           ; BSR set to: 15
 19552                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 19553  012AEA  CF63 F038          	movff	3939,??_CANreceiveMessage	;volatile
 19554  012AEE  6A39               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19555  012AF0  6A3A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19556  012AF2  6A3B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19557  012AF4  C03A  F03B         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 19558  012AF8  C039  F03A         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 19559  012AFC  C038  F039         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 19560  012B00  6A38               	clrf	??_CANreceiveMessage,c
 19561  012B02  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19562  012B06  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19563  012B0A  5038               	movf	??_CANreceiveMessage,w,c
 19564  012B0C  26DE               	addwf	postinc2,f,c
 19565  012B0E  5039               	movf	??_CANreceiveMessage+1,w,c
 19566  012B10  22DE               	addwfc	postinc2,f,c
 19567  012B12  503A               	movf	??_CANreceiveMessage+2,w,c
 19568  012B14  22DE               	addwfc	postinc2,f,c
 19569  012B16  503B               	movf	??_CANreceiveMessage+3,w,c
 19570  012B18  22DE               	addwfc	postinc2,f,c
 19571                           
 19572                           ; BSR set to: 15
 19573                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 19574  012B1A  A062               	btfss	3938,0,c	;volatile
 19575  012B1C  D00C               	goto	i2l6601
 19576                           
 19577                           ; BSR set to: 15
 19578                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 19579  012B1E  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19580  012B22  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19581  012B26  0E00               	movlw	0
 19582  012B28  12DE               	iorwf	postinc2,f,c
 19583  012B2A  0E00               	movlw	0
 19584  012B2C  12DE               	iorwf	postinc2,f,c
 19585  012B2E  0E01               	movlw	1
 19586  012B30  12DE               	iorwf	postinc2,f,c
 19587  012B32  0E00               	movlw	0
 19588  012B34  12DE               	iorwf	postinc2,f,c
 19589  012B36                     i2l6601:
 19590                           
 19591                           ; BSR set to: 15
 19592                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 19593  012B36  A262               	btfss	3938,1,c	;volatile
 19594  012B38  D00C               	goto	i2l6605
 19595                           
 19596                           ; BSR set to: 15
 19597                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 19598  012B3A  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19599  012B3E  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19600  012B42  0E00               	movlw	0
 19601  012B44  12DE               	iorwf	postinc2,f,c
 19602  012B46  0E00               	movlw	0
 19603  012B48  12DE               	iorwf	postinc2,f,c
 19604  012B4A  0E02               	movlw	2
 19605  012B4C  12DE               	iorwf	postinc2,f,c
 19606  012B4E  0E00               	movlw	0
 19607  012B50  12DE               	iorwf	postinc2,f,c
 19608  012B52                     i2l6605:
 19609                           
 19610                           ; BSR set to: 15
 19611                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 19612  012B52  AA62               	btfss	3938,5,c	;volatile
 19613  012B54  D00C               	goto	i2l6609
 19614                           
 19615                           ; BSR set to: 15
 19616                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 19617  012B56  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19618  012B5A  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19619  012B5E  0E00               	movlw	0
 19620  012B60  12DE               	iorwf	postinc2,f,c
 19621  012B62  0E00               	movlw	0
 19622  012B64  12DE               	iorwf	postinc2,f,c
 19623  012B66  0E04               	movlw	4
 19624  012B68  12DE               	iorwf	postinc2,f,c
 19625  012B6A  0E00               	movlw	0
 19626  012B6C  12DE               	iorwf	postinc2,f,c
 19627  012B6E                     i2l6609:
 19628                           
 19629                           ; BSR set to: 15
 19630                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 19631  012B6E  AC62               	btfss	3938,6,c	;volatile
 19632  012B70  D00C               	goto	i2l6613
 19633                           
 19634                           ; BSR set to: 15
 19635                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 19636  012B72  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19637  012B76  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19638  012B7A  0E00               	movlw	0
 19639  012B7C  12DE               	iorwf	postinc2,f,c
 19640  012B7E  0E00               	movlw	0
 19641  012B80  12DE               	iorwf	postinc2,f,c
 19642  012B82  0E08               	movlw	8
 19643  012B84  12DE               	iorwf	postinc2,f,c
 19644  012B86  0E00               	movlw	0
 19645  012B88  12DE               	iorwf	postinc2,f,c
 19646  012B8A                     i2l6613:
 19647                           
 19648                           ; BSR set to: 15
 19649                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 19650  012B8A  AE62               	btfss	3938,7,c	;volatile
 19651  012B8C  D00C               	goto	i2l6617
 19652                           
 19653                           ; BSR set to: 15
 19654                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 19655  012B8E  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19656  012B92  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19657  012B96  0E00               	movlw	0
 19658  012B98  12DE               	iorwf	postinc2,f,c
 19659  012B9A  0E00               	movlw	0
 19660  012B9C  12DE               	iorwf	postinc2,f,c
 19661  012B9E  0E10               	movlw	16
 19662  012BA0  12DE               	iorwf	postinc2,f,c
 19663  012BA2  0E00               	movlw	0
 19664  012BA4  12DE               	iorwf	postinc2,f,c
 19665  012BA6                     i2l6617:
 19666                           
 19667                           ; BSR set to: 15
 19668                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 19669  012BA6  CF61 F038          	movff	3937,??_CANreceiveMessage	;volatile
 19670  012BAA  6A39               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19671  012BAC  6A3A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19672  012BAE  6A3B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19673  012BB0  0E15               	movlw	21
 19674  012BB2                     i2u833_45:
 19675  012BB2  90D8               	bcf	status,0,c
 19676  012BB4  3638               	rlcf	??_CANreceiveMessage,f,c
 19677  012BB6  3639               	rlcf	??_CANreceiveMessage+1,f,c
 19678  012BB8  363A               	rlcf	??_CANreceiveMessage+2,f,c
 19679  012BBA  363B               	rlcf	??_CANreceiveMessage+3,f,c
 19680  012BBC  2EE8               	decfsz	wreg,f,c
 19681  012BBE  D7F9               	goto	i2u833_45
 19682  012BC0  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19683  012BC4  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19684  012BC8  5038               	movf	??_CANreceiveMessage,w,c
 19685  012BCA  12DE               	iorwf	postinc2,f,c
 19686  012BCC  5039               	movf	??_CANreceiveMessage+1,w,c
 19687  012BCE  12DE               	iorwf	postinc2,f,c
 19688  012BD0  503A               	movf	??_CANreceiveMessage+2,w,c
 19689  012BD2  12DE               	iorwf	postinc2,f,c
 19690  012BD4  503B               	movf	??_CANreceiveMessage+3,w,c
 19691  012BD6  12DE               	iorwf	postinc2,f,c
 19692  012BD8                     i2l6619:
 19693                           
 19694                           ; BSR set to: 15
 19695                           ;inc\CANlib.h: 629: }
 19696                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 19697  012BD8  9E60               	bcf	3936,7,c	;volatile
 19698                           
 19699                           ; BSR set to: 15
 19700                           ;inc\CANlib.h: 632: return (error);
 19701                           ;	Return value of _CANreceiveMessage is never used
 19702  012BDA  0012               	return	
 19703  012BDC                     __end_of_CANreceiveMessage:
 19704                           	opt stack 0
 19705                           pclatu	equ	0xFFB
 19706                           pclath	equ	0xFFA
 19707                           tblptru	equ	0xFF8
 19708                           tblptrh	equ	0xFF7
 19709                           tblptrl	equ	0xFF6
 19710                           tablat	equ	0xFF5
 19711                           prodh	equ	0xFF4
 19712                           prodl	equ	0xFF3
 19713                           intcon	equ	0xFF2
 19714                           postinc0	equ	0xFEE
 19715                           fsr0h	equ	0xFEA
 19716                           fsr0l	equ	0xFE9
 19717                           wreg	equ	0xFE8
 19718                           indf1	equ	0xFE7
 19719                           plusw1	equ	0xFE3
 19720                           fsr1h	equ	0xFE2
 19721                           fsr1l	equ	0xFE1
 19722                           bsr	equ	0xFE0
 19723                           indf2	equ	0xFDF
 19724                           postinc2	equ	0xFDE
 19725                           postdec2	equ	0xFDD
 19726                           plusw2	equ	0xFDB
 19727                           fsr2h	equ	0xFDA
 19728                           fsr2l	equ	0xFD9
 19729                           status	equ	0xFD8
 19730                           
 19731 ;; *************** function _CANisRxReady *****************
 19732 ;; Defined at:
 19733 ;;		line 1163 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 19734 ;; Parameters:    Size  Location     Type
 19735 ;;		None
 19736 ;; Auto vars:     Size  Location     Type
 19737 ;;		None
 19738 ;; Return value:  Size  Location     Type
 19739 ;;                  1    wreg      unsigned char 
 19740 ;; Registers used:
 19741 ;;		wreg, status,2
 19742 ;; Tracked objects:
 19743 ;;		On entry : 0/0
 19744 ;;		On exit  : 0/0
 19745 ;;		Unchanged: 0/0
 19746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19748 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19750 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19751 ;;Total ram usage:        1 bytes
 19752 ;; Hardware stack levels used:    1
 19753 ;; This function calls:
 19754 ;;		Nothing
 19755 ;; This function is called by:
 19756 ;;		_ISR_alta
 19757 ;; This function uses a non-reentrant model
 19758 ;;
 19759                           
 19760                           	psect	text53
 19761  015E5E                     __ptext53:
 19762                           	opt stack 0
 19763  015E5E                     _CANisRxReady:
 19764                           	opt stack 20
 19765                           
 19766                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
 19767                           
 19768                           ; BSR set to: 15
 19769                           ;incstack = 0
 19770  015E5E  0E01               	movlw	1
 19771  015E60  6E36               	movwf	_CANisRxReady$3229,c
 19772  015E62  BE60               	btfsc	3936,7,c	;volatile
 19773  015E64  D005               	goto	i2l569
 19774  015E66  010F               	movlb	15	; () banked
 19775  015E68  BF50               	btfsc	80,7,b	;volatile
 19776  015E6A  D002               	goto	i2l569
 19777                           
 19778                           ; BSR set to: 15
 19779  015E6C  0E00               	movlw	0
 19780  015E6E  6E36               	movwf	_CANisRxReady$3229,c
 19781  015E70                     i2l569:
 19782  015E70  5036               	movf	_CANisRxReady$3229,w,c
 19783  015E72  0012               	return	
 19784  015E74                     __end_of_CANisRxReady:
 19785                           	opt stack 0
 19786                           pclatu	equ	0xFFB
 19787                           pclath	equ	0xFFA
 19788                           tblptru	equ	0xFF8
 19789                           tblptrh	equ	0xFF7
 19790                           tblptrl	equ	0xFF6
 19791                           tablat	equ	0xFF5
 19792                           prodh	equ	0xFF4
 19793                           prodl	equ	0xFF3
 19794                           intcon	equ	0xFF2
 19795                           postinc0	equ	0xFEE
 19796                           fsr0h	equ	0xFEA
 19797                           fsr0l	equ	0xFE9
 19798                           wreg	equ	0xFE8
 19799                           indf1	equ	0xFE7
 19800                           plusw1	equ	0xFE3
 19801                           fsr1h	equ	0xFE2
 19802                           fsr1l	equ	0xFE1
 19803                           bsr	equ	0xFE0
 19804                           indf2	equ	0xFDF
 19805                           postinc2	equ	0xFDE
 19806                           postdec2	equ	0xFDD
 19807                           plusw2	equ	0xFDB
 19808                           fsr2h	equ	0xFDA
 19809                           fsr2l	equ	0xFD9
 19810                           status	equ	0xFD8
 19811                           pclatu	equ	0xFFB
 19812                           pclath	equ	0xFFA
 19813                           tblptru	equ	0xFF8
 19814                           tblptrh	equ	0xFF7
 19815                           tblptrl	equ	0xFF6
 19816                           tablat	equ	0xFF5
 19817                           prodh	equ	0xFF4
 19818                           prodl	equ	0xFF3
 19819                           intcon	equ	0xFF2
 19820                           postinc0	equ	0xFEE
 19821                           fsr0h	equ	0xFEA
 19822                           fsr0l	equ	0xFE9
 19823                           wreg	equ	0xFE8
 19824                           indf1	equ	0xFE7
 19825                           plusw1	equ	0xFE3
 19826                           fsr1h	equ	0xFE2
 19827                           fsr1l	equ	0xFE1
 19828                           bsr	equ	0xFE0
 19829                           indf2	equ	0xFDF
 19830                           postinc2	equ	0xFDE
 19831                           postdec2	equ	0xFDD
 19832                           plusw2	equ	0xFDB
 19833                           fsr2h	equ	0xFDA
 19834                           fsr2l	equ	0xFD9
 19835                           status	equ	0xFD8
 19836                           
 19837                           	psect	rparam
 19838  0000                     pclatu	equ	0xFFB
 19839                           pclath	equ	0xFFA
 19840                           tblptru	equ	0xFF8
 19841                           tblptrh	equ	0xFF7
 19842                           tblptrl	equ	0xFF6
 19843                           tablat	equ	0xFF5
 19844                           prodh	equ	0xFF4
 19845                           prodl	equ	0xFF3
 19846                           intcon	equ	0xFF2
 19847                           postinc0	equ	0xFEE
 19848                           fsr0h	equ	0xFEA
 19849                           fsr0l	equ	0xFE9
 19850                           wreg	equ	0xFE8
 19851                           indf1	equ	0xFE7
 19852                           plusw1	equ	0xFE3
 19853                           fsr1h	equ	0xFE2
 19854                           fsr1l	equ	0xFE1
 19855                           bsr	equ	0xFE0
 19856                           indf2	equ	0xFDF
 19857                           postinc2	equ	0xFDE
 19858                           postdec2	equ	0xFDD
 19859                           plusw2	equ	0xFDB
 19860                           fsr2h	equ	0xFDA
 19861                           fsr2l	equ	0xFD9
 19862                           status	equ	0xFD8
 19863                           
 19864                           	psect	temp
 19865  000048                     btemp:
 19866                           	opt stack 0
 19867  000048                     	ds	1
 19868  0000                     int$flags	set	btemp
 19869                           pclatu	equ	0xFFB
 19870                           pclath	equ	0xFFA
 19871                           tblptru	equ	0xFF8
 19872                           tblptrh	equ	0xFF7
 19873                           tblptrl	equ	0xFF6
 19874                           tablat	equ	0xFF5
 19875                           prodh	equ	0xFF4
 19876                           prodl	equ	0xFF3
 19877                           intcon	equ	0xFF2
 19878                           postinc0	equ	0xFEE
 19879                           fsr0h	equ	0xFEA
 19880                           fsr0l	equ	0xFE9
 19881                           wreg	equ	0xFE8
 19882                           indf1	equ	0xFE7
 19883                           plusw1	equ	0xFE3
 19884                           fsr1h	equ	0xFE2
 19885                           fsr1l	equ	0xFE1
 19886                           bsr	equ	0xFE0
 19887                           indf2	equ	0xFDF
 19888                           postinc2	equ	0xFDE
 19889                           postdec2	equ	0xFDD
 19890                           plusw2	equ	0xFDB
 19891                           fsr2h	equ	0xFDA
 19892                           fsr2l	equ	0xFD9
 19893                           status	equ	0xFD8


Data Sizes:
    Strings     125
    Constant    144
    Data        1
    BSS         96
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      71
    BANK0           160    112     146
    BANK1           256     25      52
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_9(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_13(CODE[14]), STR_12(CODE[8]), STR_11(CODE[21]), STR_10(CODE[5]), 
		 -> STR_8(CODE[2]), STR_7(CODE[5]), STR_6(CODE[4]), STR_5(CODE[12]), 
		 -> STR_4(CODE[21]), STR_3(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 1
		 -> data_speed(BANK0[1]), data_brake(BANK0[1]), data_steering(BANK0[1]), data(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->i2_CANsendMessage

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _board_initialization->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _LCD_Handler->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___awdiv->___awmod
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    ___fldiv->___xxtofl
    _LCD_write_message->_LCD_write_char
    _LCD_write_integer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_write_string->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul
    _CAN_Send->_CANsendMessage

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_alta in BANK3

    None.

Critical Paths under _ISR_bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_alta in BANK4

    None.

Critical Paths under _ISR_bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_alta in BANK5

    None.

Critical Paths under _ISR_bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_alta in BANK6

    None.

Critical Paths under _ISR_bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_alta in BANK7

    None.

Critical Paths under _ISR_bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_alta in BANK8

    None.

Critical Paths under _ISR_bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_alta in BANK9

    None.

Critical Paths under _ISR_bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_alta in BANK10

    None.

Critical Paths under _ISR_bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_alta in BANK11

    None.

Critical Paths under _ISR_bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_alta in BANK12

    None.

Critical Paths under _ISR_bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  250131
                                            104 BANK0      8     8      0
                           _CAN_Send
                    _CAN_interpreter
                   _Joystick_Polling
                        _LCD_Handler
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                 _PWR_Button_Polling
                            ___flmul
                            ___fltol
                           ___xxtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   64106
                      _CANInitialize
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             28 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             14 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             14 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWR_Button_Polling                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0  126795
                       _CANisTxReady
                     _CANsendMessage
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_integer
                  _LCD_write_message
                   _LCD_write_string
                            ___fldiv
                           ___xxtofl
                           _delay_ms
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   41239
                                             94 BANK0     10     2      8
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    9426
                                             53 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             14 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    9147
                                             53 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    4925
                                             28 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             14 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             20 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                             14 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                             14 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     861
                                             14 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                             14 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                             14 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     799
                                             62 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3697
                                             86 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3364
                                             66 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     142
                                             14 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     728
                                             14 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1305
                                             28 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_write_message                                    2     0      2   10443
                                             31 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_integer                                   16    12      4   12206
                                             38 BANK0     16    12      4
                   _LCD_write_string
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    1554
                                             30 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1199
                                             21 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     287
                                             14 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     418
                                             14 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9673
                                             31 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (3) _LCD_write_char                                       5     5      0    9454
                                             26 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   28412
                                             28 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    9073
                                             26 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    8934
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    8965
                                             26 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (4) _LCD_send_command                                     4     1      3    8934
                                             22 BANK0      4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (5) _LCD_enable_pulse                                     0     0      0    1418
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1418
                                             20 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             14 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     2     2      0      68
                                             14 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _CAN_interpreter                                      4     4      0       0
                                             14 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _CAN_Send                                             0     0      0    3339
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    3315
                                             14 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR_alta                                           15    15      0    3558
                                             33 COMRAM     1     1      0
                                              0 BANK0     14    14      0
                       _CANisRxReady
                  _CANreceiveMessage
                     i2_CANisTxReady
                   i2_CANsendMessage
 ---------------------------------------------------------------------------------
 (11) i2_CANsendMessage                                   16     8      8    2243
                                             17 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (11) i2_CANisTxReady                                      1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _CANreceiveMessage                                  12    10      2    1137
                                             17 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (11) _CANisRxReady                                        1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_Send
     _CANisTxReady
     _CANsendMessage
   _CAN_interpreter
   _Joystick_Polling
   _LCD_Handler
     _CANisTxReady
     _CANsendMessage
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_integer
       _LCD_write_string
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _delay_ms
       ___wmul
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_initialize
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_cursor
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
     _delay_ms
       ___wmul
     _delay_set_quartz
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _PWR_Button_Polling
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___xxtofl
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _delay_ms
       ___wmul
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   i2_CANisTxReady
   i2_CANsendMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     19      34       7       20.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     70      92       5       91.3%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     22      47       1       75.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10D      20        0.0%
DATA                 0      0     10D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Mar 28 17:08:11 2016

                     ___fldiv@aexp 0094                       ___fldiv@bexp 0093  
        __size_of_delay_set_quartz 000A               __end_of_CANSetFilter 0B06  
                     ?_LCD_Handler 0025                       ___fldiv@sign 0088  
                     ___awdiv@sign 0079                                 _id 0012  
                               bsr 000FE0                ___wmul@multiplicand 0070  
                      __CFG_BORV$3 000000                       __CFG_CP0$OFF 000000  
                     __CFG_CP1$OFF 000000                       __CFG_CP2$OFF 000000  
                     __CFG_CP3$OFF 000000                        __CFG_OSC$HS 000000  
                     __CFG_CP4$OFF 000000                       __CFG_CP5$OFF 000000  
                              l401 18B8                                l410 1A72  
                              l402 18BC                                l411 1A76  
                              l403 19B4                                l412 1A82  
                              l404 1944                                l500 075A  
                              l405 194E                                l501 0766  
                              l406 1958                                l510 0872  
                              l407 1962                                l511 0876  
                              l520 0982                                l512 0882  
                              l504 0842                                l440 3EDA  
                              l521 098E                                l505 0846  
                              l441 3EDE                                l530 0A9A  
                              l522 0992                                l506 0852  
                              l442 3EEA                                l371 161E  
                              l531 0A9E                                l523 099E  
                              l515 095E                                l507 0856  
                              l451 3FF2                                l443 3EEE  
                              l372 13B0                                l532 0AAA  
                              l516 0962                                l508 0862  
                              l452 3FF6                                l444 3EFA  
                              l381 156A                                l373 13B4  
                              l533 0AAE                                l517 096E  
                              l509 0866                                l453 4002  
                              l445 3EFE                                l390 16C0  
                              l382 156E                                l374 14AC  
                              l534 0ABA                                l526 0A7A  
                              l518 0972                                l454 4006  
                              l446 3F0A                                l366 45FE  
                              l391 16CA                                l383 157A  
                              l375 143C                                l527 0A7E  
                              l519 097E                                l471 04F0  
                              l455 4012                                l447 3F0E  
                              l367 4608                                l392 16D4  
                              l376 1446                                l528 0A8A  
                              l472 04F4                                l456 4016  
                              l448 3F1A                                l393 16DE  
                              l377 1450                                l529 0A8E  
                              l473 0500                                l457 4022  
                              l386 18A2                                l378 145A  
                              l802 5E34                                l490 064A  
                              l482 060A                                l474 0504  
                              l458 4026                                l387 1634  
                              l483 060E                                l475 0510  
                              l459 4032                                l564 5DE6  
                              l396 17EE                                l388 1638  
                              l484 061A                                l476 0514  
                              l397 17F2                                l389 1730  
                              l493 0726                                l485 061E  
                              l477 0520                                l398 17FE  
                              l494 072A                                l486 062A  
                              l478 0524                                l807 5AE8  
                              l495 0736                                l487 062E  
                              l479 0530                                l496 073A  
                              l488 063A                                l752 369E  
                              l809 5AEA                                l577 5C64  
                              l497 0746                                l489 063E  
                              l498 074A                                l499 0756  
                              l893 10FA               ??_PWR_Button_Polling 006E  
                     __CFG_CPB$OFF 000000                       __CFG_CPD$OFF 000000  
                      ?_LCD_cursor 007A                                _dir 00EC  
                              _msg 0100                                _str 010F  
                     ___awmod@sign 0073                                prod 000FF3  
                              wreg 000FE8                       ___flmul@aexp 0089  
                     ___flmul@bexp 008E                       ___flmul@sign 0088  
                     ___flmul@temp 0093                       ___flmul@prod 008F  
                     __CFG_LVP$OFF 000000             __size_of_LCD_goto_line 00EC  
                     ___fltol@exp1 00A7                       __CFG_WDT$OFF 000000  
                             l1118 4D6C                               l1222 4A54  
                             l1311 56B6                               l1215 4990  
                             l1128 4BA6                               l1216 49D4  
                             l1321 5956                               l1500 3442  
                             l1405 2DBC                               l1422 2F30  
                             l1406 2DB0                               l1431 2FC4  
                             l1407 2D7C                               l1520 446A  
                             l1513 43BE                               l1364 5A6C  
                             l1508 34E6                               l1285 55DE  
                             l1461 3B4E                               l1374 5ACE  
                             l1470 3B86                               l1527 44C6  
                             l1472 3BF4                               l1464 3AF6  
                             l1528 44DE                               l1491 3138  
                             l5007 3E4E                               l5033 3F1E  
                             l1498 33D4                               l5107 0176  
                             l6013 1A66                               l4501 5A96  
                             l5213 057A                               l5125 0230  
                             l4503 5A9C                               l5207 0534  
                             l5143 02EA                               l5039 3F64  
                             l5401 5B9E                               l5241 064E  
                             l5161 03A4                               l5065 4036  
                             l6019 1A86                               l4507 5AC0  
                             l5315 08CC                               l5309 0886  
                             l5343 09A2                               l5247 0694  
                             l4481 5A28                               l5281 07B0  
                             l5089 00BE                               l4491 5A5E  
                             l4483 5A2E                               l5275 076A  
                             l5179 045E                               l8005 563A  
                             l5349 09E8                               l4479 5A1C  
                             l6431 3B4A                               l6407 3A4C  
                             l8007 564A                               l6425 3B02  
                             l6417 3ACA                               l7313 2BFA  
                             l8017 56A4                               l8009 5650  
                             l8033 5944                               l8025 58EA  
                             l5377 0ABE                               l5801 4614  
                             l4499 5A8A                               l8107 475E  
                             l6443 3B9A                               l6363 3962  
                             l7403 2DA0                               l7331 2C54  
                             l7323 2C28                               l8027 58FA  
                             l8051 43FE                               l8043 43CE  
                             l8211 0C24                               l8203 0BE0  
                             l5803 4658                               l8109 4766  
                             l8125 483E                               l6453 3BEE  
                             l6437 3B70                               l6357 393E  
                             l7421 2E1E                               l7413 2DE0  
                             l8029 5900                               l8061 44A8  
                             l8053 440E                               l8221 0C76  
                             l8205 0C0A                               l4943 5556  
                             l8119 47FE                               l6471 3CA8  
                             l6463 3C44                               l6383 39C0  
                             l6367 396C                               l7423 2E24  
                             l7431 2E40                               l7343 2C8C  
                             l7319 2C1E                               l8063 44B8  
                             l8055 444C                               l5841 1464  
                             l7273 5C56                               l8081 52D2  
                             l4953 5598                               l8129 48B6  
                             l6377 399C                               l7505 3072  
                             l7441 2F10                               l7337 2C68  
                             l8049 43F6                               l7521 30C6  
                             l8321 10FE                               l8083 5304  
                             l6467 3C72                               l6387 39CA  
                             l7427 2E2E                               l7355 2CC0  
                             l7347 2C96                               l8075 4530  
                             l7523 30CC                               l7515 30A2  
                             l8315 10C8                               l8307 10A0  
                             l8251 0DC6                               l5917 16E8  
                             l5861 155E                               l6741 5748  
                             l8085 5336                               l8093 5CE2  
                             l6477 3CB8                               l6469 3C86  
                             l7701 5878                               l7621 34B8  
                             l7541 3126                               l7533 30FC  
                             l7525 30DE                               l8333 1190  
                             l8317 10DC                               l8309 10AE  
                             l8261 0E6A                               l8253 0E02  
                             l8245 0D7E                               l8237 0CFA  
                             l8181 0B30                               l4973 5E50  
                             l5943 1802                               l6727 56C8  
                             l8087 5368                               l6479 3CBC  
                             l6399 3A1E                               l7455 2F78  
                             l7703 587E                               l7711 58B0  
                             l7631 3506                               l7623 34CC  
                             l7607 343C                               l8351 12AC  
                             l8343 1284                               l8255 0E18  
                             l8175 0B16                               l4991 3D98  
                             l5937 17E2                               l6737 5710  
                             l8089 539A                               l7721 5DA4  
                             l8097 5CFC                               l7449 2F62  
                             l7465 2F98                               l7385 2CFC  
                             l7633 3510                               l7617 3492  
                             l7545 314C                               l8345 1292  
                             l8329 112E                               l8281 0F84  
                             l8265 0E9C                               l8249 0DB0  
                             l8353 12BA                               l8193 0BB0  
                             l5867 157E                               l6747 5ADE  
                             l7475 2FBE                               l7459 2F84  
                             l7467 2F9E                               l7715 58C4  
                             l7707 58A2                               l7539 3120  
                             l8371 1364                               l8363 1308  
                             l8275 0F06                               l8195 0BCA  
                             l5795 45F6                               l6765 57AC  
                             l7725 5DB8                               l7493 304E  
                             l7485 301A                               l7397 2D90  
                             l7661 54EC                               l7653 54C2  
                             l7549 3160                               l7741 4224  
                             l8293 0FD0                               l8189 0B66  
                             l8373 136A                               l5797 460C  
                             l6775 57BA                               l7399 2D96  
                             l7815 493C                               l7671 5522  
                             l7663 54F2                               l7647 54AC  
                             l7591 33BE                               l8367 1338  
                             l8359 12E0                               l8279 0F7E  
                             l8199 0BDA                               l8375 138C  
                             l8631 368E                               l5993 196C  
                             l7497 305A                               l7489 302C  
                             l7905 4D22                               l7809 4902  
                             l8297 0FFC                               l8641 36B8  
                             l8625 3676                               l6787 5818  
                             l7499 305E                               l7915 4D52  
                             l7659 54E0                               l7675 5530  
                             l7691 5848                               l7763 2346  
                             l8299 1004                               l8467 4D7E  
                             l8651 37A0                               l8619 35E0  
                             l7933 4B02                               l7917 4D62  
                             l7909 4D36                               l7845 4A0A  
                             l7597 33E8                               l7749 431C  
                             l7781 25CC                               l7773 244A  
                             l8493 4E6E                               l8661 382E  
                             l8629 3688                               l7943 4BF2  
                             l7951 5C98                               l7871 4C42  
                             l7855 4A3A                               l7679 5544  
                             l7695 5858                               l8495 4E80  
                             l8655 3824                               l8639 36AC  
                             l7937 4B54                               l7929 4AB4  
                             l7961 51E6                               l7865 4C1C  
                             l7857 4A4A                               l7849 4A1E  
                             l7769 2418                               l8497 4E90  
                             l8593 3552                               l7699 586C  
                             l7787 269E                               l8667 38A6  
                             l7981 5268                               l7893 4CEA  
                             l7885 4C96                               l7991 529E  
                             l7799 5D98                               l7977 5254  
                             l7995 52BA                               l7987 5284  
                             l7989 5294                               STR_1 FFAB  
                             STR_2 FF96                               STR_3 FF81  
                             STR_4 FFAB                               STR_5 FFCE  
                             STR_6 FFF8                               STR_7 FFEE  
                             STR_8 FFFC                               STR_9 FFDA  
                             _LATA 000F89                               _LATB 000F8A  
                             _LATC 000F8B                               _LATD 000F8C  
                             _LATE 000F8D                               u6200 078A  
                             u6120 066E                               u6040 0554  
                             u6205 077E                               u6125 0662  
                             u6045 0548                               u5510 3D14  
                             u7130 1484                               u5515 3D08  
                             u7140 14D0                               u5525 3D74  
                             u5550 3DCA                               u7135 1478  
                             u7400 19D8                               u6440 0ADE  
                             u6360 09C2                               u6280 08A6  
                             u5720 4056                               u5640 3F3E  
                             u7145 14C4                               u7155 1530  
                             u5555 3DBE                               u7260 1708  
                             u7405 19CC                               u6445 0AD2  
                             u6365 09B6                               u6285 089A  
                             u5805 0152                               u5725 404A  
                             u5645 3F32                               u5565 3E2A  
                             u7270 1754                               u8070 3C58  
                             u5910 0320                               u5830 01AC  
                             u5750 003A                               u7415 1A38  
                             u8400 5E42                               u7265 16FC  
                             u7275 1748                               u5915 0314  
                             u5835 01A0                               u5755 002E  
                             u7285 17B4                               u5925 0380  
                             u5845 020C                               u5765 009A  
                             u7390 198C                               u5950 03DA  
                             u5870 0266                               u5790 00F2  
                             u8415 5E44                               u9400 2D5E  
                             u9410 2D60                               u7395 1980  
                             u5955 03CE                               u5875 025A  
                             u5795 00E6                               u5965 043A  
                             u5885 02C6                               u8470 5B0C  
                             u9265 5C0C                               u9266 5C0E  
                             u9275 5C18                               u8476 5B0E  
                             u9276 5C1A                               u9285 5C24  
                             u9286 5C26                               u9390 2D46  
                             u9295 5C30                               u9296 5C32  
                             u9850 34A6                               u9770 3360  
                             u9775 3354                __size_of_CANSetMask 039E  
                             _data 0024                               _main 352A  
                             _itoa 5B74          __size_of_LCD_send_command 003A  
                             fsr0h 000FEA                               fsr1h 000FE2  
                             fsr0l 000FE9                               fsr2h 000FDA  
                             indf1 000FE7                               fsr1l 000FE1  
                             indf2 000FDF                               fsr2l 000FD9  
                             btemp 0048                               _utoa 554E  
                             pclat 000FFA                               prodh 000FF4  
                             prodl 000FF3                               start 00C0  
                    __CFG_IESO$OFF 000000                    ___fldiv@new_exp 008D  
               __size_of_LCD_clear 0032                   __end_of_CAN_Send 5782  
                     _sprintf$4193 011B                      __CFG_MCLRE$ON 000000  
                     ___param_bank 000010           __end_of_LCD_enable_pulse 5E0E  
                 _CANOperationMode 5E48            __size_of_LCD_initialize 016E  
       __size_of_CANreceiveMessage 050C                      ___fltol@sign1 00A6  
                  __end_of___fladd 3084                              ?_main 0025  
                  __end_of___fldiv 3CE0                              ?_itoa 007E  
                  __end_of___awdiv 554E                    __end_of___flneg 5CAA  
                            STR_10 FFF3                              STR_11 FFAB  
                            STR_12 FFE6                              STR_13 FFC0  
                  __end_of___awmod 58CE                    __end_of___flmul 352A  
                  __end_of___flsub 5B74                    __end_of___fltol 52CC  
                  __end_of___lldiv 56C8                              u10101 48DE  
                            ?_utoa 0075                              u10121 4918  
                            u10330 5206                              u11210 3892  
                            u11130 3644                              u11220 390A  
                            u11140 365C                              u10335 51FA  
                            u11146 365E                    ___awdiv@divisor 0076  
                            u11237 5C58                              u10561 4712  
                  __end_of___llmod 5968                              u10850 10F2  
                            _T3CON 000FB1                    __end_of___lwdiv 5A76  
                  __end_of___lwmod 5AD8                              i2l401 1F9A  
                            i2l410 2112                              i2l402 1F9E  
                            i2l411 2116                              i2l403 206E  
                            i2l412 2120                              i2l404 200C  
                            i2l405 2014                              i2l406 201C  
                            i2l407 2024                              i1l743 0078  
                            i2l418 2968                              i2l371 1D56  
                            i2l372 1B3A                              i2l381 1CB2  
                            i2l373 1B3E                              i2l390 1DDC  
                            i2l382 1CB6                              i2l374 1C0E  
                            i2l391 1DE4                              i2l383 1CC0  
                            i2l375 1BAC                              i2l392 1DEC  
                            i2l376 1BB4                              i2l393 1DF4  
                            i2l377 1BBC                              i2l386 1F86  
                            i2l378 1BC4                              i2l387 1D6A  
                            i2l564 5E28                              i2l396 1EE2  
                            i2l388 1D6E                              i2l397 1EE6  
                            i2l389 1E3E                              i2l398 1EF0  
                            i2l569 5E70                              i2l739 5184  
                  ___awdiv@counter 0078                              _TMR3H 000FB3  
                            _TMR3L 000FB2                  _CANisRxReady$3229 0036  
                            _TRISA 000F92                              _TRISB 000F93  
                            _TRISC 000F94                              _TRISD 000F95  
                            _TRISE 000F96                      __CFG_PWRT$OFF 000000  
                    __CFG_WRT0$OFF 000000                      __CFG_WRT1$OFF 000000  
                    __CFG_WRT2$OFF 000000                      __CFG_WRT3$OFF 000000  
                    __CFG_WRT4$OFF 000000                 __size_of_ISR_bassa 00A8  
                    __CFG_WRT5$OFF 000000                     __CFG_EBTR0$OFF 000000  
                   __CFG_FCMEN$OFF 000000                     __CFG_EBTR1$OFF 000000  
               CANInitialize@flags 0080                     __CFG_EBTR2$OFF 000000  
                   __CFG_EBTR3$OFF 000000                     __CFG_EBTR4$OFF 000000  
                 __end_of_ISR_alta 51C0                     __CFG_EBTR5$OFF 000000  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                     __CFG_EBTRB$OFF 000000  
                  __end_of_dpowers FF81                              _scale 21B6  
                  __end_of_isdigit 5DA2                     __pbitbssCOMRAM 0238  
             __end_of_CANisRxReady 5E74                              tablat 000FF5  
             __end_of_CANisTxReady 5DEC                              plusw1 000FE3  
                            plusw2 000FDB                              utoa@c 007D  
                            utoa@v 007B                              status 000FD8  
                  __end_of_sprintf 139A                __size_of_LCD_cursor 0032  
                  __initialization 5BBC                       __end_of_main 3920  
                     __end_of_itoa 5BBC      __size_of_board_initialization 00D8  
                    _LCD_goto_line 52CC                       __end_of_utoa 560C  
                ?_Joystick_Polling 0025                 ??_Joystick_Polling 006E  
                ?_LCD_write_string 007F                             ??_main 00C8  
                           ??_itoa 0084                             ??_utoa 007B  
        __size_ofi2_CANsendMessage 0690                      __activetblptr 000003  
                   _JoystickValues 00E4                 ??_LCD_write_string 0081  
             __size_of__tdiv_to_l_ 019E                  _CANisTxReady$3227 006E  
         __size_of_CAN_interpreter 00AA                  __end_of_LCD_clear 5D78  
            i2CANsendMessage@flags 003D             LCD_write_string@buffer 007F  
                           _ADCON1 000FC1                             _CANCON 000F6F  
                 ___llmod@dividend 006E                             ?_scale 0095  
                           _ADRESH 000FC4                   ___awdiv@dividend 0074  
                  __CFG_BBSIZ$1024 000000                             i2l7021 202C  
                           i2l7041 2108                             i2l7047 2124  
                           i2l6601 2B36                             i2l6531 2848  
                           i2l6613 2B8A                             i2l6605 2B52  
                           i2l6551 2912                             i2l6543 28D6  
                           i2l6617 2BA6                             i2l6609 2B6E  
                           i2l6619 2BD8                             i2l6555 2930  
                           i2l6547 28F4                             i2l6539 28B8  
                           i2l6557 2962                             i2l6593 2AC8  
                           i2l8541 50C8                             i2l8535 50A6  
                           i2l6945 1DFC                             i2l8553 50F4  
                           i2l6971 1EF4                             i2l6965 1ED8  
                           i2l6869 1BCC                             i2l8549 50EC  
                           i2l6895 1CC4                             i2l8559 511C  
                           i2l6889 1CA8                             i2l8569 5148  
                           i2l8579 517C                             _RXB0D0 000F66  
                           _RXB0D1 000F67                             _RXB0D2 000F68  
                           _RXB0D3 000F69                             _RXB0D4 000F6A  
                           _RXB1D0 000F56                             _RXB0D5 000F6B  
                           _RXB1D1 000F57                             _RXB0D6 000F6C  
                           _RXB1D2 000F58                             _RXB0D7 000F6D  
                           _RXB1D3 000F59                             _RXB1D4 000F5A  
                           _RXB1D5 000F5B                             _RXB1D6 000F5C  
                           _RXB1D7 000F5D                             _TXB0D0 000F46  
                           _TXB0D1 000F47                             _TXB0D2 000F48  
                           _TXB0D3 000F49                             _TXB1D0 000F36  
                           _TXB0D4 000F4A                             _TXB1D1 000F37  
                           _TXB0D5 000F4B                             _TXB1D2 000F38  
                           _TXB0D6 000F4C                             _TXB1D3 000F39  
                           _TXB0D7 000F4D                             _TXB2D0 000F26  
                           _TXB1D4 000F3A                             _TXB2D1 000F27  
                           _TXB1D5 000F3B                             _TXB2D2 000F28  
                           _TXB1D6 000F3C                             _TXB2D3 000F29  
                           _TXB1D7 000F3D                             _TXB2D4 000F2A  
                           _TXB2D5 000F2B                             _TXB2D6 000F2C  
                           _TXB2D7 000F2D                 CANsendMessage@data 0072  
               CANsendMessage@tamp 007A                   __end_of___xxtofl 4542  
                  _switch_position 00ED                   __end_of_delay_ms 5C72  
            __size_of_CANSetFilter 0B06                     __CFG_XINST$OFF 000000  
                __end_of_ISR_bassa 00C0                   __end_of__powers_ FF59  
                       _MotoreFlag 0239                     ?_LCD_goto_line 0025  
                           ___flge 4A66                          ??___fladd 00AA  
                 _delay_set_quartz 5E74                             ___wmul 5CAA  
                        ??___fldiv 0084                          ??___awdiv 0078  
                        ??___flneg 0072                     __CFG_STVREN$ON 000000  
                        ??___awmod 0072                          ??___flmul 0084  
                        ??___flsub 00BE                          ??___fltol 00A2  
                        ??___lldiv 0076                          ??___llmod 0076  
                        ??___lwdiv 0072                       ??_CANSetMask 0073  
                        ??___lwmod 0072            __size_of_LCD_write_char 0096  
                           _fround 407E     LCD_initialize@quartz_frequency 007C  
                           clear_0 5BC2                             clear_1 5BCE  
                           clear_2 5BDC                   ___awdiv@quotient 007A  
                  ___awmod@divisor 0070               __size_of_LCD_Handler 0182  
                  ___awmod@counter 0072                    __CFG_BOREN$BOHW 000000  
                _JoystickConstants 00D0                             itoa@cp 0084  
                        ??_isdigit 006E                       __mediumconst FEF0  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8                          ?_CAN_Send 0025  
                        ??_sprintf 00C6                       _CANSetFilter 0000  
                       ___flge@ff1 006E                         ___flge@ff2 0072  
                     ___xxtofl@arg 0078                       ___xxtofl@exp 0077  
                     ___xxtofl@val 006E                         __accesstop 0060  
          __end_of__initialization 5BF4                 __end_of_CANSetMask 407E  
                  __CFG_PBADEN$OFF 000000                         _SterzoFlag 023B  
                       ___flneg@f1 006E                   _LCD_send_command 5BFE  
                    ___rparam_used 000001  LCD_write_integer@number_of_digits 0088  
                       ___fltol@f1 009E                     __pcstackCOMRAM 0025  
                     __pidataBANK0 5E7E                          ?_ISR_alta 0025  
                    __end_of_scale 26D0                     _LCD_initialize 4F00  
                _LCD_write_integer 4708                  _LCD_write_message 5CE0  
            CANSetFilter@numBuffer 0077                 ?_LCD_write_integer 0086  
           LCD_write_integer@index 0095                 ?_LCD_write_message 007F  
                       __div_to_l_ 4BF6                       ??_LCD_cursor 007B  
           LCD_write_integer@value 0086      LCD_write_integer@convertedInt 008F  
                    _newMessageCan 023C                       _actual_speed 00E6  
            __size_of_CANisRxReady 0016              __size_of_CANisTxReady 0024  
                       ??_CAN_Send 007E                ??_LCD_write_integer 008A  
                  __div_to_l_@exp1 007B                ??_LCD_write_message 0081  
                  __div_to_l_@cntr 007A                            ??_scale 0099  
                  __div_to_l_@quot 0076           __end_of_CANOperationMode 5E5E  
                       __pbssBANK0 00D0                         __pbssBANK1 0100  
                ??_CAN_interpreter 006E                         _data_brake 00EE  
          __size_of_CANsendMessage 078C                         _data_speed 00EF  
                    __div_to_l_@f1 006E                      __div_to_l_@f2 0072  
                  ??_LCD_goto_line 007A                 __end_of_LCD_cursor 5D46  
           __end_of_LCD_initialize 506E                            ?___flge 006E  
                          ?___wmul 006E                         ??_ISR_alta 0060  
        __end_of_LCD_write_integer 48C8          __end_of_LCD_write_message 5D14  
                ?_LCD_enable_pulse 0025                            ?_fround 0095  
                     _CANisRxReady 5E5E                            _CANSTAT 000F6E  
               ??_LCD_enable_pulse 0076                       _CANisTxReady 5DC8  
                        ISR_alta@i 0046                            _BRGCON1 000F70  
                          _BRGCON2 000F71                            _BRGCON3 000F72  
                 i2_CANsendMessage 1B26        __size_of_PWR_Button_Polling 001C  
                        ?___xxtofl 006E            __size_ofi2_CANisTxReady 001E  
           __size_of_CANInitialize 01C6                   LCD_cursor@active 007B  
                        ?_delay_ms 0074                            _RXB0DLC 000F65  
                          _RXB1DLC 000F55                            _RXB0CON 000F60  
                          _RXB1CON 000F50                            _TXB0DLC 000F45  
                          _TXB1DLC 000F35                            _TXB2DLC 000F25  
              CANsendMessage@flags 0075                            _AbsFlag 0238  
                __end_of__npowers_ FF25                            __Hparam 0000  
                       _left_speed 001E                         _scale$4192 0099  
                          __Lparam 0000                   delay_ms@value_ms 0074  
                  ?_LCD_initialize 0025                    __size_of___flge 0190  
                          ___fladd 2BDC                            ___fldiv 3920  
                          ___awdiv 5490                            ___flneg 5C72  
                          ___awmod 582C                            ___flmul 3084  
                          ___flsub 5B2C                            ___fltol 51C0  
                          ___lldiv 560C                    __size_of___wmul 0036  
                   _LCD_write_char 5968                            ___llmod 58CE  
                          ___lwdiv 59FE                            ___lwmod 5A76  
             CANInitialize@propSeg 0085                            __pcinit 5BBC  
                          _battery 0022                    __size_of_fround 02F6  
                          __ramtop 0D00                LCD_write_char@value 007E  
                          __ptext0 352A                            __ptext1 53B8  
                          __ptext2 4542                            __ptext3 3CE0  
                          __ptext4 0000                            __ptext5 5E48  
                          __ptext6 5E2C                            __ptext7 4D7E  
                          __ptext8 0B06                            __ptext9 21B6  
                      ?__div_to_l_ 006E                   LCD_write_char@D0 007D  
                 LCD_write_char@D1 007C                   LCD_write_char@D2 007B  
                 LCD_write_char@D3 007A                            _dpowers FF59  
                          _isdigit 5D78                         ??___xxtofl 0072  
                 ___awmod@dividend 006E                         ??_delay_ms 0076  
           CANreceiveMessage@error 0040       __end_of_board_initialization 5490  
        __size_of_Joystick_Polling 0054           __end_of_delay_set_quartz 5E7E  
                          _sprintf 0B06                     __pintcode_body 506E  
                        _LCD_clear 5D46               end_of_initialization 5BF4  
        __size_of_LCD_write_string 0026                            itoa@buf 007E  
                          itoa@val 0080                            int_func 506E  
                        i2u1104_40 50C6                          i2u1124_47 5142  
                    _CANInitialize 4542                    ___lldiv@divisor 0072  
               LCD_cursor@blinking 007A                    ___lldiv@counter 007A  
           __end_of_LCD_write_char 59FE                            postdec2 000FDD  
                          postinc0 000FEE                            postinc2 000FDE  
       __size_of_LCD_write_integer 01C0         __size_of_LCD_write_message 0034  
                          utoa@buf 0075                     __tdiv_to_l_@f1 006E  
                   __tdiv_to_l_@f2 0072                            utoa@val 0077  
                        _ISR_bassa 0018                      ??__tdiv_to_l_ 0076  
                        _PORTAbits 000F80                          _PORTBbits 000F81  
                   CANSetMask@mask 006E                          _PORTDbits 000F83  
                   CANSetMask@tamp 0078           __end_of_LCD_send_command 5C38  
                   CANSetMask@type 0072                        ___fladd@grs 00B5  
                    ___xxtofl@sign 0076                        ___fldiv@grs 008F  
                      ___fldiv@rem 0089                         ?_LCD_clear 0025  
                __size_of_CAN_Send 00BA            _clock_counter_reference 00E8  
                      ___flmul@grs 008A                     _CANsendMessage 139A  
                 CANInitialize@BRP 007F                   CANInitialize@SJW 007E  
                   ?_CANInitialize 007C                __size_of__div_to_l_ 0188  
          LCD_write_integer@F17272 0008                    ?_LCD_write_char 0025  
                    ??_LCD_Handler 00C8                     __end_of___flge 4BF6  
                       ?_ISR_bassa 0025                     __end_of___wmul 5CE0  
                __size_of_ISR_alta 51B8                     __end_of_fround 4374  
                  _CAN_interpreter 5782                     i2_CANisTxReady 5E0E  
              start_initialization 5BBC                __end_of__tdiv_to_l_ 4A66  
              CANSetMask@numBuffer 0077                      _data_speed_rx 0001  
           __end_of_CANsendMessage 1B26                  ?_CANOperationMode 0025  
                    _data_steering 00F0         i2CANsendMessage@dataLength 003C  
             i2CANsendMessage@data 003A                 ??_CANOperationMode 006E  
             i2CANsendMessage@tamp 0042                    ___llmod@divisor 0072  
         __end_ofi2_CANsendMessage 21B6         CANInitialize@FilterConfig1 0086  
       CANInitialize@FilterConfig2 0087                    ___llmod@counter 0076  
                         ??___flge 0076               _board_initialization 53B8  
                         ??___wmul 0072                        __pdataBANK0 00F1  
                 __CFG_LPT1OSC$OFF 000000                           ??_fround 0099  
           __end_ofi2_CANisTxReady 5E2C                      sprintf@tmpval 0129  
                        ___fladd@a 00A6                          ___fladd@b 00A2  
           CANInitialize@phaseSeg1 007C             CANInitialize@phaseSeg2 007D  
                       fround@prec 00A1                __end_of_LCD_Handler 4F00  
                        ___fldiv@a 0080                          ___fldiv@b 007C  
                        ___flmul@a 0080                          ___flmul@b 007C  
                      __pbssCOMRAM 0001                          ___flsub@a 00BA  
                        ___flsub@b 00B6                      __pcstackBANK0 0060  
                    __pcstackBANK1 011B                        _BRGCON2bits 000F71  
                      _BRGCON3bits 000F72                   _Joystick_Polling 5AD8  
                __size_of___xxtofl 01CE          __size_of_LCD_enable_pulse 0022  
                     _isdigit$3772 006F         i2CANsendMessage@identifier 0036  
                __size_of_delay_ms 003A                        ??_LCD_clear 007A  
                  ?_CANsendMessage 006E            LCD_write_message@buffer 007F  
                 _LCD_write_string 5DA2                    ??_CANInitialize 0081  
                      sprintf@flag 0121                        sprintf@fval 012F  
                      sprintf@prec 012D                   ??_LCD_initialize 007C  
               CANSetFilter@filter 006E          delay_set_quartz@frequency 006E  
                 ___lwdiv@dividend 006E                 LCD_send_command@D0 0078  
               LCD_send_command@D1 0077                 LCD_send_command@D2 0076  
               LCD_send_command@D3 0079              __end_of_LCD_goto_line 53B8  
            ?_board_initialization 0025                          __pintcode 0008  
                    __pmediumconst FEF0                           ?___fladd 00A2  
                         ?___fldiv 007C                           ?___awdiv 0074  
                         ?___flneg 006E                           ?___awmod 006E  
                         ?___flmul 007C            __end_of_CAN_interpreter 582C  
                         ?___flsub 00B6                           ?___fltol 009E  
                         ?___lldiv 006E                           ?___llmod 006E  
                        __npowers_ FEF1                           ?___lwdiv 006E  
                         ?___lwmod 006E                        ??_ISR_bassa 0025  
                      __pintcodelo 0018         __end_of_PWR_Button_Polling 5E48  
                  ?i2_CANisTxReady 0025                        __tdiv_to_l_ 48C8  
                     ??__div_to_l_ 0076                        _COMSTATbits 000F74  
                         ?_isdigit 0025                           _CAN_Send 56C8  
                 ___lwdiv@quotient 0072                           ?_sprintf 00BE  
                   __size_of_scale 051A                  ?_delay_set_quartz 0025  
            CANreceiveMessage@tamp 0041                 ??_delay_set_quartz 006E  
                   ___wmul@product 0072                           _LATCbits 000F8B  
                         _LATDbits 000F8C                           _LATEbits 000F8D  
                         _IPR2bits 000FA2       _delay_quartz_frequency_value 00F1  
                         _IPR3bits 000FA5                           _PIE2bits 000FA0  
                         _PIE3bits 000FA3                 __end_of__div_to_l_ 4D7E  
                         _PIR2bits 000FA1                           _PIR3bits 000FA4  
                         i2u813_40 2788                           i2u813_46 278A  
                         i2u814_40 27B6                           i2u822_45 293C  
                         i2u814_46 27B8                           i2u824_40 2A10  
                         i2u816_45 27CC                           i2u824_46 2A12  
                         i2u825_40 2A3A                           i2u833_45 2BB2  
                         i2u825_46 2A3C                           i2u827_45 2A4E  
                         i2u880_40 1E1A                           i2u880_45 1E10  
                         i2u881_40 1E60                           _RXB0EIDH 000F63  
                         _RXB0EIDL 000F64                           i2u881_45 1E56  
                         i2u882_45 1EAC                           i2u867_40 1BEA  
                         _RXB1EIDH 000F53                          _pr_time_1 00D8  
                        _pr_time_2 00DC                           _RXB1EIDL 000F54  
                        _pr_time_3 00E0                           i2u867_45 1BE0  
                        _pr_time_4 0016                           i2u868_40 1C30  
                         i2u868_45 1C26                           i2u893_40 204A  
                         i2u893_45 2040                           i2u869_45 1C7C  
                         i2u894_40 2090                          _set_speed 00EA  
                         i2u894_45 2086                           _RCONbits 000FD0  
                         i2u895_45 20DC                   __CFG_WDTPS$32768 000000  
                         _RXB0SIDH 000F61                           _RXB0SIDL 000F62  
                         _RXF0EIDH 000F02                           _RXB1SIDH 000F51  
                         _RXF0EIDL 000F03                           _RXB1SIDL 000F52  
                         _RXF1EIDH 000F06                           _RXF1EIDL 000F07  
                         _RXF2EIDH 000F0A                           _RXF2EIDL 000F0B  
                         _RXF3EIDH 000F0E                           _RXF3EIDL 000F0F  
                         _RXF4EIDH 000F12                           _RXF4EIDL 000F13  
                         _RXF5EIDH 000F16                           _RXF5EIDL 000F17  
                         _RXF0SIDH 000F00                           _RXF0SIDL 000F01  
                         _TXB0EIDH 000F43                           _RXF1SIDH 000F04  
                         _TXB0EIDL 000F44                           _RXF1SIDL 000F05  
                         _TXB1EIDH 000F33                           _RXF2SIDH 000F08  
                         _TXB1EIDL 000F34                           _RXF2SIDL 000F09  
                         _ISR_alta 0008                           _TXB2EIDH 000F23  
                         _RXF3SIDH 000F0C                           _TXB2EIDL 000F24  
                         _RXF3SIDL 000F0D                           _RXF4SIDH 000F10  
                         _RXF4SIDL 000F11                           _RXF5SIDH 000F14  
                         _RXF5SIDL 000F15                           _RXM0EIDH 000F1A  
                         _RXM0EIDL 000F1B                           _TXB0SIDH 000F41  
                         _RXM1EIDH 000F1E                           _TXB0SIDL 000F42  
                         _RXM1EIDL 000F1F                           _TXB1SIDH 000F31  
                         _TXB1SIDL 000F32                           _TXB2SIDH 000F21  
                         _TXB2SIDL 000F22                        _LCD_Handler 4D7E  
                         _RXM0SIDH 000F18                           _RXM0SIDL 000F19  
                         _RXM1SIDH 000F1C                           _RXM1SIDL 000F1D  
                         _RXERRCNT 000F75     LCD_write_integer@zero_cleaning 0089  
                         _TXERRCNT 000F76                         _ADCON0bits 000FC2  
                       _ADCON2bits 000FC0                  ___wmul@multiplier 006E  
                         _RTR_Flag 023A                  ?_LCD_send_command 0076  
                 _actual_speed_kmh 000E                 ??_LCD_send_command 0079  
                    ?_CANSetFilter 006E                         _CANCONbits 000F6F  
                 ??_LCD_write_char 007A                  LCD_goto_line@line 007A  
                         __Hrparam 0000                       _RXB0SIDLbits 000F62  
           ??_board_initialization 0088                           __Lrparam 0000  
                     _RXB1SIDLbits 000F52                   ?_CAN_interpreter 0025  
                 __size_of___fladd 04A8                         _CANSetMask 3CE0  
                 __size_of___fldiv 03C0                   __size_of___awdiv 00BE  
                 __size_of___flneg 0038                   __size_of___awmod 00A2  
                 __size_of___flmul 04A6                   __size_of___flsub 0048  
                 __size_of___fltol 010C                   __size_of___lldiv 00BC  
                 __size_of___llmod 009A                   __size_of___lwdiv 0078  
                 __size_of___lwmod 0062                        _fround$4190 009D  
                      _fround$4191 0099                         sprintf@exp 0127  
                       sprintf@val 0123                           ___xxtofl 4374  
                     _RXF0SIDLbits 000F01                   __size_of_isdigit 002A  
                         _delay_ms 5C38                    ___lwdiv@divisor 0070  
                     _RXF1SIDLbits 000F05                    ___lwdiv@counter 0074  
                   ??_CANSetFilter 0073                   _LCD_enable_pulse 5DEC  
                         __ptext10 5D78                           __ptext11 407E  
                         __ptext20 51C0                           __ptext12 3084  
                         __ptext21 5B2C                           __ptext13 582C  
                         __ptext30 5A76                           __ptext22 2BDC  
                         __ptext14 5490                           __ptext31 59FE  
                         __ptext23 5C72                           __ptext15 48C8  
                         __ptext40 5DEC                           __ptext32 5DA2  
                         __ptext24 4A66                           __ptext16 4BF6  
                         __ptext41 5C38                           __ptext33 5968  
                         __ptext25 3920                           __ptext17 4374  
                         __ptext50 1B26                           __ptext42 5CAA  
                         __ptext34 4F00                           __ptext26 5CE0  
                         __ptext18 58CE                           __ptext51 5E0E  
                         __ptext43 5AD8                           __ptext35 5E74  
                         __ptext27 4708                           __ptext19 560C  
                         __ptext52 26D0                           __ptext44 5782  
                         __ptext36 5D14                           __ptext28 5B74  
                         __ptext53 5E5E                           __ptext45 56C8  
                         __ptext37 5D46                           __ptext29 554E  
                         __ptext46 139A                           __ptext38 52CC  
                         __ptext47 5DC8                           __ptext39 5BFE  
                     _RXF2SIDLbits 000F09                           __powers_ FF25  
                     _RXF3SIDLbits 000F0D                   __size_of_sprintf 0894  
                     _RXF4SIDLbits 000F11                       _RXF5SIDLbits 000F15  
         CANsendMessage@dataLength 0074                      __size_of_main 03F6  
                    __size_of_itoa 0048                      __size_of_utoa 00BE  
                ?i2_CANsendMessage 0036               CANreceiveMessage@msg 0036  
              i2_CANisTxReady$3227 0036                       _TXB0SIDLbits 000F42  
                Joystick_Polling@i 006F                 ??i2_CANsendMessage 003E  
                     _TXB1SIDLbits 000F32                           _wait_low 023E  
         __end_of_Joystick_Polling 5B2C                       _TXB2SIDLbits 000F22  
                         int$flags 0048          __size_of_CANOperationMode 0016  
                    ?_CANisRxReady 0025                      ?_CANisTxReady 0025  
         __end_of_LCD_write_string 5DC8                        _RXB0DLCbits 000F65  
                      _RXB1DLCbits 000F55                       _RXM0SIDLbits 000F19  
                      _RXB0CONbits 000F60                         _LCD_cursor 5D14  
                      _RXB1CONbits 000F50                  _CANreceiveMessage 26D0  
                     _RXM1SIDLbits 000F1D                         _INTCONbits 000FF2  
                     _set_steering 0023                   ??_CANsendMessage 0076  
               ?_CANreceiveMessage 0036                           itoa@base 0082  
                         isdigit@c 0070                           scale@scl 009D  
         CANsendMessage@identifier 006E                       _time_counter 001A  
                         intlevel1 0000                           intlevel2 0000  
                        sprintf@ap 011F                   __tdiv_to_l_@exp1 007E  
                        sprintf@sp 00BE                   __tdiv_to_l_@cntr 007D  
                 CANSetFilter@tamp 0078                   __tdiv_to_l_@quot 0079  
                 CANSetFilter@type 0072                ??_CANreceiveMessage 0038  
                 ___lwmod@dividend 006E                   ___lldiv@dividend 006E  
                      _TXB0DLCbits 000F45                        _right_speed 0020  
                      _TXB1DLCbits 000F35                        _TXB0CONbits 000F40  
                      _TXB2DLCbits 000F25                        _TXB1CONbits 000F30  
                      _TXB2CONbits 000F20                   ??i2_CANisTxReady 0036  
             CANOperationMode@mode 006E                     ??_CANisRxReady 0036  
                      ?_CANSetMask 006E                     ??_CANisTxReady 006E  
                     ?__tdiv_to_l_ 006E          __end_of_CANreceiveMessage 2BDC  
                         utoa@base 0079                           sprintf@c 0133  
                         sprintf@f 00C0                   ___lldiv@quotient 0076  
                  ___lwmod@divisor 0070                    ___lwmod@counter 0072  
                    ___fladd@signs 00B2                 _PWR_Button_Polling 5E2C  
                     ___fladd@aexp 00B3                       ___fladd@bexp 00B4  
            __end_of_CANInitialize 4708                ?_PWR_Button_Polling 0025  
                     _power_switch 023D  
