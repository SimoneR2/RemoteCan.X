

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Mar 26 16:42:08 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    66                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    67                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    68  0000                     
    69                           	psect	idataBANK0
    70  0153AE                     __pidataBANK0:
    71                           	opt stack 0
    72                           
    73                           ;initializer for _delay_quartz_frequency_value
    74  0153AE  10                 	db	16
    75                           
    76                           	psect	mediumconst
    77  00FEDC                     __pmediumconst:
    78                           	opt stack 0
    79  00FEDC  00                 	db	0
    80  00FEDD                     __npowers_:
    81                           	opt stack 0
    82  00FEDD  0000               	dw	0
    83  00FEDF  3F80               	dw	16256
    84  00FEE1  CCCD               	dw	52429
    85  00FEE3  3DCC               	dw	15820
    86  00FEE5  D70A               	dw	55050
    87  00FEE7  3C23               	dw	15395
    88  00FEE9  126F               	dw	4719
    89  00FEEB  3A83               	dw	14979
    90  00FEED  B717               	dw	46871
    91  00FEEF  38D1               	dw	14545
    92  00FEF1  C5AC               	dw	50604
    93  00FEF3  3727               	dw	14119
    94  00FEF5  37BD               	dw	14269
    95  00FEF7  3586               	dw	13702
    96  00FEF9  BF95               	dw	49045
    97  00FEFB  33D6               	dw	13270
    98  00FEFD  CC77               	dw	52343
    99  00FEFF  322B               	dw	12843
   100  00FF01  705F               	dw	28767
   101  00FF03  3089               	dw	12425
   102  00FF05  E6FF               	dw	59135
   103  00FF07  2EDB               	dw	11995
   104  00FF09  E508               	dw	58632
   105  00FF0B  1E3C               	dw	7740
   106  00FF0D  4260               	dw	16992
   107  00FF0F  0DA2               	dw	3490
   108  00FF11                     __end_of__npowers_:
   109                           	opt stack 0
   110  00FF11                     __powers_:
   111                           	opt stack 0
   112  00FF11  0000               	dw	0
   113  00FF13  3F80               	dw	16256
   114  00FF15  0000               	dw	0
   115  00FF17  4120               	dw	16672
   116  00FF19  0000               	dw	0
   117  00FF1B  42C8               	dw	17096
   118  00FF1D  0000               	dw	0
   119  00FF1F  447A               	dw	17530
   120  00FF21  4000               	dw	16384
   121  00FF23  461C               	dw	17948
   122  00FF25  5000               	dw	20480
   123  00FF27  47C3               	dw	18371
   124  00FF29  2400               	dw	9216
   125  00FF2B  4974               	dw	18804
   126  00FF2D  9680               	dw	38528
   127  00FF2F  4B18               	dw	19224
   128  00FF31  BC20               	dw	48160
   129  00FF33  4CBE               	dw	19646
   130  00FF35  6B28               	dw	27432
   131  00FF37  4E6E               	dw	20078
   132  00FF39  02F9               	dw	761
   133  00FF3B  5015               	dw	20501
   134  00FF3D  78EC               	dw	30956
   135  00FF3F  60AD               	dw	24749
   136  00FF41  F2CA               	dw	62154
   137  00FF43  7149               	dw	29001
   138  00FF45                     __end_of__powers_:
   139                           	opt stack 0
   140  00FF45                     _dpowers:
   141                           	opt stack 0
   142  00FF45  0001               	dw	1
   143  00FF47  0000               	dw	0
   144  00FF49  000A               	dw	10
   145  00FF4B  0000               	dw	0
   146  00FF4D  0064               	dw	100
   147  00FF4F  0000               	dw	0
   148  00FF51  03E8               	dw	1000
   149  00FF53  0000               	dw	0
   150  00FF55  2710               	dw	10000
   151  00FF57  0000               	dw	0
   152  00FF59  86A0               	dw	34464
   153  00FF5B  0001               	dw	1
   154  00FF5D  4240               	dw	16960
   155  00FF5F  000F               	dw	15
   156  00FF61  9680               	dw	38528
   157  00FF63  0098               	dw	152
   158  00FF65  E100               	dw	57600
   159  00FF67  05F5               	dw	1525
   160  00FF69  CA00               	dw	51712
   161  00FF6B  3B9A               	dw	15258
   162  00FF6D                     __end_of_dpowers:
   163                           	opt stack 0
   164  0000                     _RXB1CON	set	3920
   165  0000                     _RXB1CONbits	set	3920
   166  0000                     _RXB1D0	set	3926
   167  0000                     _RXB1D1	set	3927
   168  0000                     _RXB1D2	set	3928
   169  0000                     _RXB1D3	set	3929
   170  0000                     _RXB1D4	set	3930
   171  0000                     _RXB1D5	set	3931
   172  0000                     _RXB1D6	set	3932
   173  0000                     _RXB1D7	set	3933
   174  0000                     _RXB1DLC	set	3925
   175  0000                     _RXB1DLCbits	set	3925
   176  0000                     _RXB1EIDH	set	3923
   177  0000                     _RXB1EIDL	set	3924
   178  0000                     _RXB1SIDH	set	3921
   179  0000                     _RXB1SIDL	set	3922
   180  0000                     _RXB1SIDLbits	set	3922
   181  0000                     _RXF0EIDH	set	3842
   182  0000                     _RXF0EIDL	set	3843
   183  0000                     _RXF0SIDH	set	3840
   184  0000                     _RXF0SIDL	set	3841
   185  0000                     _RXF0SIDLbits	set	3841
   186  0000                     _RXF1EIDH	set	3846
   187  0000                     _RXF1EIDL	set	3847
   188  0000                     _RXF1SIDH	set	3844
   189  0000                     _RXF1SIDL	set	3845
   190  0000                     _RXF1SIDLbits	set	3845
   191  0000                     _RXF2EIDH	set	3850
   192  0000                     _RXF2EIDL	set	3851
   193  0000                     _RXF2SIDH	set	3848
   194  0000                     _RXF2SIDL	set	3849
   195  0000                     _RXF2SIDLbits	set	3849
   196  0000                     _RXF3EIDH	set	3854
   197  0000                     _RXF3EIDL	set	3855
   198  0000                     _RXF3SIDH	set	3852
   199  0000                     _RXF3SIDL	set	3853
   200  0000                     _RXF3SIDLbits	set	3853
   201  0000                     _RXF4EIDH	set	3858
   202  0000                     _RXF4EIDL	set	3859
   203  0000                     _RXF4SIDH	set	3856
   204  0000                     _RXF4SIDL	set	3857
   205  0000                     _RXF4SIDLbits	set	3857
   206  0000                     _RXF5EIDH	set	3862
   207  0000                     _RXF5EIDL	set	3863
   208  0000                     _RXF5SIDH	set	3860
   209  0000                     _RXF5SIDL	set	3861
   210  0000                     _RXF5SIDLbits	set	3861
   211  0000                     _RXM0EIDH	set	3866
   212  0000                     _RXM0EIDL	set	3867
   213  0000                     _RXM0SIDH	set	3864
   214  0000                     _RXM0SIDL	set	3865
   215  0000                     _RXM0SIDLbits	set	3865
   216  0000                     _RXM1EIDH	set	3870
   217  0000                     _RXM1EIDL	set	3871
   218  0000                     _RXM1SIDH	set	3868
   219  0000                     _RXM1SIDL	set	3869
   220  0000                     _RXM1SIDLbits	set	3869
   221  0000                     _TXB0CONbits	set	3904
   222  0000                     _TXB0D0	set	3910
   223  0000                     _TXB0D1	set	3911
   224  0000                     _TXB0D2	set	3912
   225  0000                     _TXB0D3	set	3913
   226  0000                     _TXB0D4	set	3914
   227  0000                     _TXB0D5	set	3915
   228  0000                     _TXB0D6	set	3916
   229  0000                     _TXB0D7	set	3917
   230  0000                     _TXB0DLC	set	3909
   231  0000                     _TXB0DLCbits	set	3909
   232  0000                     _TXB0EIDH	set	3907
   233  0000                     _TXB0EIDL	set	3908
   234  0000                     _TXB0SIDH	set	3905
   235  0000                     _TXB0SIDL	set	3906
   236  0000                     _TXB0SIDLbits	set	3906
   237  0000                     _TXB1CONbits	set	3888
   238  0000                     _TXB1D0	set	3894
   239  0000                     _TXB1D1	set	3895
   240  0000                     _TXB1D2	set	3896
   241  0000                     _TXB1D3	set	3897
   242  0000                     _TXB1D4	set	3898
   243  0000                     _TXB1D5	set	3899
   244  0000                     _TXB1D6	set	3900
   245  0000                     _TXB1D7	set	3901
   246  0000                     _TXB1DLC	set	3893
   247  0000                     _TXB1DLCbits	set	3893
   248  0000                     _TXB1EIDH	set	3891
   249  0000                     _TXB1EIDL	set	3892
   250  0000                     _TXB1SIDH	set	3889
   251  0000                     _TXB1SIDL	set	3890
   252  0000                     _TXB1SIDLbits	set	3890
   253  0000                     _TXB2CONbits	set	3872
   254  0000                     _TXB2D0	set	3878
   255  0000                     _TXB2D1	set	3879
   256  0000                     _TXB2D2	set	3880
   257  0000                     _TXB2D3	set	3881
   258  0000                     _TXB2D4	set	3882
   259  0000                     _TXB2D5	set	3883
   260  0000                     _TXB2D6	set	3884
   261  0000                     _TXB2D7	set	3885
   262  0000                     _TXB2DLC	set	3877
   263  0000                     _TXB2DLCbits	set	3877
   264  0000                     _TXB2EIDH	set	3875
   265  0000                     _TXB2EIDL	set	3876
   266  0000                     _TXB2SIDH	set	3873
   267  0000                     _TXB2SIDL	set	3874
   268  0000                     _TXB2SIDLbits	set	3874
   269  0000                     _ADCON0bits	set	4034
   270  0000                     _ADCON1	set	4033
   271  0000                     _ADCON2bits	set	4032
   272  0000                     _ADRESH	set	4036
   273  0000                     _BRGCON1	set	3952
   274  0000                     _BRGCON2	set	3953
   275  0000                     _BRGCON2bits	set	3953
   276  0000                     _BRGCON3	set	3954
   277  0000                     _BRGCON3bits	set	3954
   278  0000                     _CANCON	set	3951
   279  0000                     _CANCONbits	set	3951
   280  0000                     _CANSTAT	set	3950
   281  0000                     _COMSTATbits	set	3956
   282  0000                     _INTCONbits	set	4082
   283  0000                     _IPR2bits	set	4002
   284  0000                     _IPR3bits	set	4005
   285  0000                     _LATA	set	3977
   286  0000                     _LATB	set	3978
   287  0000                     _LATC	set	3979
   288  0000                     _LATCbits	set	3979
   289  0000                     _LATD	set	3980
   290  0000                     _LATDbits	set	3980
   291  0000                     _LATE	set	3981
   292  0000                     _LATEbits	set	3981
   293  0000                     _PIE2bits	set	4000
   294  0000                     _PIE3bits	set	4003
   295  0000                     _PIR2bits	set	4001
   296  0000                     _PIR3bits	set	4004
   297  0000                     _PORTAbits	set	3968
   298  0000                     _PORTBbits	set	3969
   299  0000                     _PORTDbits	set	3971
   300  0000                     _RCONbits	set	4048
   301  0000                     _RXB0CON	set	3936
   302  0000                     _RXB0CONbits	set	3936
   303  0000                     _RXB0D0	set	3942
   304  0000                     _RXB0D1	set	3943
   305  0000                     _RXB0D2	set	3944
   306  0000                     _RXB0D3	set	3945
   307  0000                     _RXB0D4	set	3946
   308  0000                     _RXB0D5	set	3947
   309  0000                     _RXB0D6	set	3948
   310  0000                     _RXB0D7	set	3949
   311  0000                     _RXB0DLC	set	3941
   312  0000                     _RXB0DLCbits	set	3941
   313  0000                     _RXB0EIDH	set	3939
   314  0000                     _RXB0EIDL	set	3940
   315  0000                     _RXB0SIDH	set	3937
   316  0000                     _RXB0SIDL	set	3938
   317  0000                     _RXB0SIDLbits	set	3938
   318  0000                     _RXERRCNT	set	3957
   319  0000                     _T3CON	set	4017
   320  0000                     _TMR3H	set	4019
   321  0000                     _TMR3L	set	4018
   322  0000                     _TRISA	set	3986
   323  0000                     _TRISB	set	3987
   324  0000                     _TRISC	set	3988
   325  0000                     _TRISD	set	3989
   326  0000                     _TRISE	set	3990
   327  0000                     _TXERRCNT	set	3958
   328  00FF6D                     STR_3:
   329  00FF6D  54                 	db	84	;'T'
   330  00FF6E  75                 	db	117	;'u'
   331  00FF6F  72                 	db	114	;'r'
   332  00FF70  6E                 	db	110	;'n'
   333  00FF71  20                 	db	32
   334  00FF72  74                 	db	116	;'t'
   335  00FF73  68                 	db	104	;'h'
   336  00FF74  65                 	db	101	;'e'
   337  00FF75  20                 	db	32
   338  00FF76  73                 	db	115	;'s'
   339  00FF77  77                 	db	119	;'w'
   340  00FF78  69                 	db	105	;'i'
   341  00FF79  74                 	db	116	;'t'
   342  00FF7A  63                 	db	99	;'c'
   343  00FF7B  68                 	db	104	;'h'
   344  00FF7C  20                 	db	32
   345  00FF7D  4F                 	db	79	;'O'
   346  00FF7E  4E                 	db	78	;'N'
   347  00FF7F  21                 	db	33
   348  00FF80  20                 	db	32
   349  00FF81  00                 	db	0
   350  00FF82                     STR_2:
   351  00FF82  3D                 	db	61	;'='
   352  00FF83  3D                 	db	61	;'='
   353  00FF84  3E                 	db	62	;'>'
   354  00FF85  20                 	db	32
   355  00FF86  56                 	db	86	;'V'
   356  00FF87  45                 	db	69	;'E'
   357  00FF88  48                 	db	72	;'H'
   358  00FF89  49                 	db	73	;'I'
   359  00FF8A  43                 	db	67	;'C'
   360  00FF8B  4C                 	db	76	;'L'
   361  00FF8C  45                 	db	69	;'E'
   362  00FF8D  20                 	db	32
   363  00FF8E  20                 	db	32
   364  00FF8F  4F                 	db	79	;'O'
   365  00FF90  46                 	db	70	;'F'
   366  00FF91  46                 	db	70	;'F'
   367  00FF92  20                 	db	32
   368  00FF93  3C                 	db	60	;'<'
   369  00FF94  3D                 	db	61	;'='
   370  00FF95  3D                 	db	61	;'='
   371  00FF96  00                 	db	0
   372  00FF97                     STR_5:
   373  00FF97  3D                 	db	61	;'='
   374  00FF98  3D                 	db	61	;'='
   375  00FF99  3D                 	db	61	;'='
   376  00FF9A  20                 	db	32
   377  00FF9B  56                 	db	86	;'V'
   378  00FF9C  45                 	db	69	;'E'
   379  00FF9D  48                 	db	72	;'H'
   380  00FF9E  49                 	db	73	;'I'
   381  00FF9F  43                 	db	67	;'C'
   382  00FFA0  4C                 	db	76	;'L'
   383  00FFA1  45                 	db	69	;'E'
   384  00FFA2  20                 	db	32
   385  00FFA3  44                 	db	68	;'D'
   386  00FFA4  41                 	db	65	;'A'
   387  00FFA5  54                 	db	84	;'T'
   388  00FFA6  41                 	db	65	;'A'
   389  00FFA7  20                 	db	32
   390  00FFA8  3D                 	db	61	;'='
   391  00FFA9  3D                 	db	61	;'='
   392  00FFAA  3D                 	db	61	;'='
   393  00FFAB  00                 	db	0
   394  00FFAC                     STR_1:
   395  00FFAC  3D                 	db	61	;'='
   396  00FFAD  3D                 	db	61	;'='
   397  00FFAE  3D                 	db	61	;'='
   398  00FFAF  3D                 	db	61	;'='
   399  00FFB0  3D                 	db	61	;'='
   400  00FFB1  3D                 	db	61	;'='
   401  00FFB2  3D                 	db	61	;'='
   402  00FFB3  3D                 	db	61	;'='
   403  00FFB4  3D                 	db	61	;'='
   404  00FFB5  3D                 	db	61	;'='
   405  00FFB6  3D                 	db	61	;'='
   406  00FFB7  3D                 	db	61	;'='
   407  00FFB8  3D                 	db	61	;'='
   408  00FFB9  3D                 	db	61	;'='
   409  00FFBA  3D                 	db	61	;'='
   410  00FFBB  3D                 	db	61	;'='
   411  00FFBC  3D                 	db	61	;'='
   412  00FFBD  3D                 	db	61	;'='
   413  00FFBE  3D                 	db	61	;'='
   414  00FFBF  3D                 	db	61	;'='
   415  00FFC0  00                 	db	0
   416  00FFC1                     STR_14:
   417  00FFC1  68                 	db	104	;'h'
   418  00FFC2  6F                 	db	111	;'o'
   419  00FFC3  6C                 	db	108	;'l'
   420  00FFC4  61                 	db	97	;'a'
   421  00FFC5  20                 	db	32
   422  00FFC6  6D                 	db	109	;'m'
   423  00FFC7  75                 	db	117	;'u'
   424  00FFC8  63                 	db	99	;'c'
   425  00FFC9  68                 	db	104	;'h'
   426  00FFCA  61                 	db	97	;'a'
   427  00FFCB  63                 	db	99	;'c'
   428  00FFCC  68                 	db	104	;'h'
   429  00FFCD  6F                 	db	111	;'o'
   430  00FFCE  00                 	db	0
   431  00FFCF                     STR_6:
   432  00FFCF  44                 	db	68	;'D'
   433  00FFD0  69                 	db	105	;'i'
   434  00FFD1  72                 	db	114	;'r'
   435  00FFD2  65                 	db	101	;'e'
   436  00FFD3  63                 	db	99	;'c'
   437  00FFD4  74                 	db	116	;'t'
   438  00FFD5  69                 	db	105	;'i'
   439  00FFD6  6F                 	db	111	;'o'
   440  00FFD7  6E                 	db	110	;'n'
   441  00FFD8  3A                 	db	58	;':'
   442  00FFD9  20                 	db	32
   443  00FFDA  00                 	db	0
   444  00FFDB                     STR_10:
   445  00FFDB  53                 	db	83	;'S'
   446  00FFDC  70                 	db	112	;'p'
   447  00FFDD  65                 	db	101	;'e'
   448  00FFDE  65                 	db	101	;'e'
   449  00FFDF  64                 	db	100	;'d'
   450  00FFE0  3A                 	db	58	;':'
   451  00FFE1  20                 	db	32
   452  00FFE2  25                 	db	37
   453  00FFE3  2E                 	db	46
   454  00FFE4  33                 	db	51	;'3'
   455  00FFE5  66                 	db	102	;'f'
   456  00FFE6  00                 	db	0
   457  00FFE7                     STR_13:
   458  00FFE7  57                 	db	87	;'W'
   459  00FFE8  61                 	db	97	;'a'
   460  00FFE9  69                 	db	105	;'i'
   461  00FFEA  74                 	db	116	;'t'
   462  00FFEB  2E                 	db	46
   463  00FFEC  2E                 	db	46
   464  00FFED  2E                 	db	46
   465  00FFEE  00                 	db	0
   466  00FFEF                     STR_8:
   467  00FFEF  42                 	db	66	;'B'
   468  00FFF0  4B                 	db	75	;'K'
   469  00FFF1  57                 	db	87	;'W'
   470  00FFF2  44                 	db	68	;'D'
   471  00FFF3  00                 	db	0
   472  00FFF4                     STR_11:
   473  00FFF4  4B                 	db	75	;'K'
   474  00FFF5  6D                 	db	109	;'m'
   475  00FFF6  2F                 	db	47
   476  00FFF7  68                 	db	104	;'h'
   477  00FFF8  00                 	db	0
   478  00FFF9                     STR_7:
   479  00FFF9  46                 	db	70	;'F'
   480  00FFFA  57                 	db	87	;'W'
   481  00FFFB  44                 	db	68	;'D'
   482  00FFFC  00                 	db	0
   483  00FFFD                     STR_9:
   484  00FFFD  50                 	db	80	;'P'
   485  00FFFE  00                 	db	0
   486  0000                     
   487                           ; #config settings
   488  00FFFF  00                 	db	0	; dummy byte at the end
   489  0000                     
   490                           	psect	cinit
   491  0150F8                     __pcinit:
   492                           	opt stack 0
   493  0150F8                     start_initialization:
   494                           	opt stack 0
   495  0150F8                     __initialization:
   496                           	opt stack 0
   497                           
   498                           ; Clear objects allocated to BANK1 (12 bytes)
   499  0150F8  EE01  F021         	lfsr	0,__pbssBANK1
   500  0150FC  0E0C               	movlw	12
   501  0150FE                     clear_0:
   502  0150FE  6AEE               	clrf	postinc0,c
   503  015100  06E8               	decf	wreg,f,c
   504  015102  E1FD               	bnz	clear_0
   505                           
   506                           ; Clear objects allocated to BANK0 (39 bytes)
   507  015104  EE00  F0C8         	lfsr	0,__pbssBANK0
   508  015108  0E27               	movlw	39
   509  01510A                     clear_1:
   510  01510A  6AEE               	clrf	postinc0,c
   511  01510C  06E8               	decf	wreg,f,c
   512  01510E  E1FD               	bnz	clear_1
   513                           
   514                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   515  015110  6A47               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   516                           
   517                           ; Clear objects allocated to COMRAM (40 bytes)
   518  015112  EE00  F001         	lfsr	0,__pbssCOMRAM
   519  015116  0E28               	movlw	40
   520  015118                     clear_2:
   521  015118  6AEE               	clrf	postinc0,c
   522  01511A  06E8               	decf	wreg,f,c
   523  01511C  E1FD               	bnz	clear_2
   524                           
   525                           ; Initialize objects allocated to BANK0 (1 bytes)
   526                           ; load TBLPTR registers with __pidataBANK0
   527  01511E  0EAE               	movlw	low __pidataBANK0
   528  015120  6EF6               	movwf	tblptrl,c
   529  015122  0E53               	movlw	high __pidataBANK0
   530  015124  6EF7               	movwf	tblptrh,c
   531  015126  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   532  015128  6EF8               	movwf	tblptru,c
   533  01512A  0009               	tblrd		*+	;fetch initializer
   534  01512C  CFF5 F0EF          	movff	tablat,__pdataBANK0
   535  015130                     end_of_initialization:
   536                           	opt stack 0
   537  015130                     __end_of__initialization:
   538                           	opt stack 0
   539  015130  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   540  015132  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   541  015134  0100               	movlb	0
   542  015136  EF4D  F097         	goto	_main	;jump to C main() function
   543                           tblptru	equ	0xFF8
   544                           tblptrh	equ	0xFF7
   545                           tblptrl	equ	0xFF6
   546                           tablat	equ	0xFF5
   547                           postinc0	equ	0xFEE
   548                           wreg	equ	0xFE8
   549                           
   550                           	psect	bitbssCOMRAM
   551  000238                     __pbitbssCOMRAM:
   552                           	opt stack 0
   553  000238                     _AbsFlag:
   554                           	opt stack 0
   555  000238                     	ds	1
   556  000239                     _MotoreFlag:
   557                           	opt stack 0
   558  000239                     	ds	1
   559  00023A                     _RTR_Flag:
   560                           	opt stack 0
   561  00023A                     	ds	1
   562  00023B                     _SterzoFlag:
   563                           	opt stack 0
   564  00023B                     	ds	1
   565  00023C                     _newMessageCan:
   566                           	opt stack 0
   567  00023C                     	ds	1
   568  00023D                     _power_switch:
   569                           	opt stack 0
   570  00023D                     	ds	1
   571  00023E                     _wait_low:
   572                           	opt stack 0
   573  00023E                     	ds	1
   574                           tblptru	equ	0xFF8
   575                           tblptrh	equ	0xFF7
   576                           tblptrl	equ	0xFF6
   577                           tablat	equ	0xFF5
   578                           postinc0	equ	0xFEE
   579                           wreg	equ	0xFE8
   580                           
   581                           	psect	bssCOMRAM
   582  000001                     __pbssCOMRAM:
   583                           	opt stack 0
   584  000001                     LCD_write_integer@F17272:
   585                           	opt stack 0
   586  000001                     	ds	6
   587  000007                     _actual_speed:
   588                           	opt stack 0
   589  000007                     	ds	4
   590  00000B                     _id:
   591                           	opt stack 0
   592  00000B                     	ds	4
   593  00000F                     _pr_time_4:
   594                           	opt stack 0
   595  00000F                     	ds	4
   596  000013                     _left_speed:
   597                           	opt stack 0
   598  000013                     	ds	2
   599  000015                     _right_speed:
   600                           	opt stack 0
   601  000015                     	ds	2
   602  000017                     _battery:
   603                           	opt stack 0
   604  000017                     	ds	1
   605  000018                     _set_steering:
   606                           	opt stack 0
   607  000018                     	ds	1
   608  000019                     _msg:
   609                           	opt stack 0
   610  000019                     	ds	15
   611  000028                     _data:
   612                           	opt stack 0
   613  000028                     	ds	1
   614                           tblptru	equ	0xFF8
   615                           tblptrh	equ	0xFF7
   616                           tblptrl	equ	0xFF6
   617                           tablat	equ	0xFF5
   618                           postinc0	equ	0xFEE
   619                           wreg	equ	0xFE8
   620                           
   621                           	psect	bssBANK0
   622  0000C8                     __pbssBANK0:
   623                           	opt stack 0
   624  0000C8                     _JoystickConstants:
   625                           	opt stack 0
   626  0000C8                     	ds	8
   627  0000D0                     _actual_speed_kmh:
   628                           	opt stack 0
   629  0000D0                     	ds	4
   630  0000D4                     _pr_time_1:
   631                           	opt stack 0
   632  0000D4                     	ds	4
   633  0000D8                     _pr_time_2:
   634                           	opt stack 0
   635  0000D8                     	ds	4
   636  0000DC                     _pr_time_3:
   637                           	opt stack 0
   638  0000DC                     	ds	4
   639  0000E0                     _time_counter:
   640                           	opt stack 0
   641  0000E0                     	ds	4
   642  0000E4                     _JoystickValues:
   643                           	opt stack 0
   644  0000E4                     	ds	2
   645  0000E6                     _clock_counter_reference:
   646                           	opt stack 0
   647  0000E6                     	ds	2
   648  0000E8                     _set_speed:
   649                           	opt stack 0
   650  0000E8                     	ds	2
   651  0000EA                     _dir:
   652                           	opt stack 0
   653  0000EA                     	ds	1
   654  0000EB                     _switch_position:
   655                           	opt stack 0
   656  0000EB                     	ds	1
   657  0000EC                     _data_brake:
   658                           	opt stack 0
   659  0000EC                     	ds	1
   660  0000ED                     _data_speed:
   661                           	opt stack 0
   662  0000ED                     	ds	1
   663  0000EE                     _data_steering:
   664                           	opt stack 0
   665  0000EE                     	ds	1
   666                           tblptru	equ	0xFF8
   667                           tblptrh	equ	0xFF7
   668                           tblptrl	equ	0xFF6
   669                           tablat	equ	0xFF5
   670                           postinc0	equ	0xFEE
   671                           wreg	equ	0xFE8
   672                           
   673                           	psect	dataBANK0
   674  0000EF                     __pdataBANK0:
   675                           	opt stack 0
   676  0000EF                     _delay_quartz_frequency_value:
   677                           	opt stack 0
   678  0000EF                     	ds	1
   679                           tblptru	equ	0xFF8
   680                           tblptrh	equ	0xFF7
   681                           tblptrl	equ	0xFF6
   682                           tablat	equ	0xFF5
   683                           postinc0	equ	0xFEE
   684                           wreg	equ	0xFE8
   685                           
   686                           	psect	bssBANK1
   687  000121                     __pbssBANK1:
   688                           	opt stack 0
   689  000121                     _str:
   690                           	opt stack 0
   691  000121                     	ds	12
   692                           tblptru	equ	0xFF8
   693                           tblptrh	equ	0xFF7
   694                           tblptrl	equ	0xFF6
   695                           tablat	equ	0xFF5
   696                           postinc0	equ	0xFEE
   697                           wreg	equ	0xFE8
   698                           
   699                           	psect	cstackBANK1
   700  000100                     __pcstackBANK1:
   701                           	opt stack 0
   702  000100                     _sprintf$4193:
   703                           	opt stack 0
   704                           
   705                           ; 4 bytes @ 0x0
   706  000100                     	ds	4
   707  000104                     sprintf@ap:
   708                           	opt stack 0
   709                           
   710                           ; 2 bytes @ 0x4
   711  000104                     	ds	2
   712  000106                     sprintf@flag:
   713                           	opt stack 0
   714                           
   715                           ; 2 bytes @ 0x6
   716  000106                     	ds	2
   717  000108                     sprintf@val:
   718                           	opt stack 0
   719                           
   720                           ; 4 bytes @ 0x8
   721  000108                     	ds	4
   722  00010C                     sprintf@exp:
   723                           	opt stack 0
   724                           
   725                           ; 2 bytes @ 0xC
   726  00010C                     	ds	2
   727  00010E                     sprintf@tmpval:
   728                           	opt stack 0
   729                           
   730                           ; 4 bytes @ 0xE
   731  00010E                     	ds	4
   732  000112                     sprintf@prec:
   733                           	opt stack 0
   734                           
   735                           ; 2 bytes @ 0x12
   736  000112                     	ds	2
   737  000114                     sprintf@fval:
   738                           	opt stack 0
   739                           
   740                           ; 4 bytes @ 0x14
   741  000114                     	ds	4
   742  000118                     sprintf@c:
   743                           	opt stack 0
   744                           
   745                           ; 1 bytes @ 0x18
   746  000118                     	ds	1
   747  000119                     ??_main:
   748                           
   749                           ; 0 bytes @ 0x19
   750  000119                     	ds	8
   751                           tblptru	equ	0xFF8
   752                           tblptrh	equ	0xFF7
   753                           tblptrl	equ	0xFF6
   754                           tablat	equ	0xFF5
   755                           postinc0	equ	0xFEE
   756                           wreg	equ	0xFE8
   757                           
   758                           	psect	cstackBANK0
   759  000060                     __pcstackBANK0:
   760                           	opt stack 0
   761  000060                     ??_ISR_alta:
   762                           
   763                           ; 0 bytes @ 0x0
   764  000060                     	ds	14
   765  00006E                     ??_Joystick_Polling:
   766  00006E                     ??_isdigit:
   767  00006E                     ?___wmul:
   768                           	opt stack 0
   769  00006E                     ?___awmod:
   770                           	opt stack 0
   771  00006E                     ?__tdiv_to_l_:
   772                           	opt stack 0
   773  00006E                     ?__div_to_l_:
   774                           	opt stack 0
   775  00006E                     ?___fldiv:
   776                           	opt stack 0
   777  00006E                     ?___flneg:
   778                           	opt stack 0
   779  00006E                     ?___lldiv:
   780                           	opt stack 0
   781  00006E                     ?___llmod:
   782                           	opt stack 0
   783  00006E                     ?___xxtofl:
   784                           	opt stack 0
   785  00006E                     CANOperationMode@mode:
   786                           	opt stack 0
   787  00006E                     _CANisTxReady$3227:
   788                           	opt stack 0
   789  00006E                     delay_set_quartz@frequency:
   790                           	opt stack 0
   791  00006E                     LCD_backlight@active:
   792                           	opt stack 0
   793  00006E                     ___wmul@multiplier:
   794                           	opt stack 0
   795  00006E                     ___awmod@dividend:
   796                           	opt stack 0
   797  00006E                     CANsendMessage@identifier:
   798                           	opt stack 0
   799  00006E                     CANSetMask@mask:
   800                           	opt stack 0
   801  00006E                     CANSetFilter@filter:
   802                           	opt stack 0
   803  00006E                     __div_to_l_@f1:
   804                           	opt stack 0
   805  00006E                     ___flge@ff1:
   806                           	opt stack 0
   807  00006E                     ___flneg@f1:
   808                           	opt stack 0
   809  00006E                     __tdiv_to_l_@f1:
   810                           	opt stack 0
   811  00006E                     ___lldiv@dividend:
   812                           	opt stack 0
   813  00006E                     ___llmod@dividend:
   814                           	opt stack 0
   815  00006E                     ___fldiv@b:
   816                           	opt stack 0
   817  00006E                     ___xxtofl@val:
   818                           	opt stack 0
   819                           
   820                           ; 4 bytes @ 0xE
   821  00006E                     	ds	1
   822  00006F                     Joystick_Polling@i:
   823                           	opt stack 0
   824  00006F                     _isdigit$3772:
   825                           	opt stack 0
   826                           
   827                           ; 1 bytes @ 0xF
   828  00006F                     	ds	1
   829  000070                     isdigit@c:
   830                           	opt stack 0
   831  000070                     ___wmul@multiplicand:
   832                           	opt stack 0
   833  000070                     ___awmod@divisor:
   834                           	opt stack 0
   835                           
   836                           ; 2 bytes @ 0x10
   837  000070                     	ds	2
   838  000072                     ??___xxtofl:
   839  000072                     CANSetMask@type:
   840                           	opt stack 0
   841  000072                     CANSetFilter@type:
   842                           	opt stack 0
   843  000072                     ___awmod@counter:
   844                           	opt stack 0
   845  000072                     CANsendMessage@data:
   846                           	opt stack 0
   847  000072                     ___wmul@product:
   848                           	opt stack 0
   849  000072                     __div_to_l_@f2:
   850                           	opt stack 0
   851  000072                     ___flge@ff2:
   852                           	opt stack 0
   853  000072                     __tdiv_to_l_@f2:
   854                           	opt stack 0
   855  000072                     ___lldiv@divisor:
   856                           	opt stack 0
   857  000072                     ___llmod@divisor:
   858                           	opt stack 0
   859  000072                     ___fldiv@a:
   860                           	opt stack 0
   861                           
   862                           ; 4 bytes @ 0x12
   863  000072                     	ds	1
   864  000073                     ??_CANSetMask:
   865  000073                     ??_CANSetFilter:
   866  000073                     ___awmod@sign:
   867                           	opt stack 0
   868                           
   869                           ; 1 bytes @ 0x13
   870  000073                     	ds	1
   871  000074                     ?___awdiv:
   872                           	opt stack 0
   873  000074                     CANsendMessage@dataLength:
   874                           	opt stack 0
   875  000074                     delay_ms@value_ms:
   876                           	opt stack 0
   877  000074                     ___awdiv@dividend:
   878                           	opt stack 0
   879                           
   880                           ; 2 bytes @ 0x14
   881  000074                     	ds	1
   882  000075                     CANsendMessage@flags:
   883                           	opt stack 0
   884                           
   885                           ; 1 bytes @ 0x15
   886  000075                     	ds	1
   887  000076                     ??__tdiv_to_l_:
   888  000076                     ??___fldiv:
   889  000076                     ??_CANsendMessage:
   890  000076                     ??___flge:
   891  000076                     LCD_send_command@D2:
   892                           	opt stack 0
   893  000076                     ___llmod@counter:
   894                           	opt stack 0
   895  000076                     ___xxtofl@sign:
   896                           	opt stack 0
   897  000076                     ___awdiv@divisor:
   898                           	opt stack 0
   899  000076                     __div_to_l_@quot:
   900                           	opt stack 0
   901  000076                     ___lldiv@quotient:
   902                           	opt stack 0
   903                           
   904                           ; 4 bytes @ 0x16
   905  000076                     	ds	1
   906  000077                     CANSetMask@numBuffer:
   907                           	opt stack 0
   908  000077                     CANSetFilter@numBuffer:
   909                           	opt stack 0
   910  000077                     LCD_send_command@D1:
   911                           	opt stack 0
   912  000077                     ___xxtofl@exp:
   913                           	opt stack 0
   914                           
   915                           ; 1 bytes @ 0x17
   916  000077                     	ds	1
   917  000078                     LCD_send_command@D0:
   918                           	opt stack 0
   919  000078                     ___awdiv@counter:
   920                           	opt stack 0
   921  000078                     CANSetMask@tamp:
   922                           	opt stack 0
   923  000078                     CANSetFilter@tamp:
   924                           	opt stack 0
   925  000078                     ___xxtofl@arg:
   926                           	opt stack 0
   927                           
   928                           ; 4 bytes @ 0x18
   929  000078                     	ds	1
   930  000079                     LCD_send_command@D3:
   931                           	opt stack 0
   932  000079                     ___awdiv@sign:
   933                           	opt stack 0
   934  000079                     __tdiv_to_l_@quot:
   935                           	opt stack 0
   936                           
   937                           ; 4 bytes @ 0x19
   938  000079                     	ds	1
   939  00007A                     LCD_goto_line@line:
   940                           	opt stack 0
   941  00007A                     LCD_write_char@D3:
   942                           	opt stack 0
   943  00007A                     LCD_cursor@blinking:
   944                           	opt stack 0
   945  00007A                     __div_to_l_@cntr:
   946                           	opt stack 0
   947  00007A                     ___lldiv@counter:
   948                           	opt stack 0
   949  00007A                     ___fldiv@sign:
   950                           	opt stack 0
   951  00007A                     ___awdiv@quotient:
   952                           	opt stack 0
   953  00007A                     CANsendMessage@tamp:
   954                           	opt stack 0
   955                           
   956                           ; 4 bytes @ 0x1A
   957  00007A                     	ds	1
   958  00007B                     LCD_write_char@D2:
   959                           	opt stack 0
   960  00007B                     LCD_cursor@active:
   961                           	opt stack 0
   962  00007B                     __div_to_l_@exp1:
   963                           	opt stack 0
   964  00007B                     ___fldiv@rem:
   965                           	opt stack 0
   966                           
   967                           ; 4 bytes @ 0x1B
   968  00007B                     	ds	1
   969  00007C                     ?___flmul:
   970                           	opt stack 0
   971  00007C                     CANInitialize@phaseSeg1:
   972                           	opt stack 0
   973  00007C                     LCD_write_char@D1:
   974                           	opt stack 0
   975  00007C                     LCD_initialize@quartz_frequency:
   976                           	opt stack 0
   977  00007C                     ___flmul@b:
   978                           	opt stack 0
   979                           
   980                           ; 4 bytes @ 0x1C
   981  00007C                     	ds	1
   982  00007D                     CANInitialize@phaseSeg2:
   983                           	opt stack 0
   984  00007D                     LCD_write_char@D0:
   985                           	opt stack 0
   986  00007D                     __tdiv_to_l_@cntr:
   987                           	opt stack 0
   988                           
   989                           ; 1 bytes @ 0x1D
   990  00007D                     	ds	1
   991  00007E                     ??_CAN_interpreter:
   992  00007E                     CANInitialize@SJW:
   993                           	opt stack 0
   994  00007E                     LCD_write_char@value:
   995                           	opt stack 0
   996  00007E                     __tdiv_to_l_@exp1:
   997                           	opt stack 0
   998                           
   999                           ; 1 bytes @ 0x1E
  1000  00007E                     	ds	1
  1001  00007F                     CANInitialize@BRP:
  1002                           	opt stack 0
  1003  00007F                     LCD_write_message@buffer:
  1004                           	opt stack 0
  1005  00007F                     LCD_write_string@buffer:
  1006                           	opt stack 0
  1007  00007F                     ___fldiv@new_exp:
  1008                           	opt stack 0
  1009                           
  1010                           ; 2 bytes @ 0x1F
  1011  00007F                     	ds	1
  1012  000080                     CANInitialize@flags:
  1013                           	opt stack 0
  1014  000080                     ___flmul@a:
  1015                           	opt stack 0
  1016                           
  1017                           ; 4 bytes @ 0x20
  1018  000080                     	ds	1
  1019  000081                     ??_CANInitialize:
  1020  000081                     ___fldiv@grs:
  1021                           	opt stack 0
  1022                           
  1023                           ; 4 bytes @ 0x21
  1024  000081                     	ds	3
  1025  000084                     ??___flmul:
  1026                           
  1027                           ; 0 bytes @ 0x24
  1028  000084                     	ds	1
  1029  000085                     CANInitialize@propSeg:
  1030                           	opt stack 0
  1031  000085                     ___fldiv@bexp:
  1032                           	opt stack 0
  1033                           
  1034                           ; 1 bytes @ 0x25
  1035  000085                     	ds	1
  1036  000086                     CANInitialize@FilterConfig1:
  1037                           	opt stack 0
  1038  000086                     ___fldiv@aexp:
  1039                           	opt stack 0
  1040                           
  1041                           ; 1 bytes @ 0x26
  1042  000086                     	ds	1
  1043  000087                     CANInitialize@FilterConfig2:
  1044                           	opt stack 0
  1045                           
  1046                           ; 1 bytes @ 0x27
  1047  000087                     	ds	1
  1048  000088                     ___flmul@sign:
  1049                           	opt stack 0
  1050                           
  1051                           ; 1 bytes @ 0x28
  1052  000088                     	ds	1
  1053  000089                     ___flmul@aexp:
  1054                           	opt stack 0
  1055                           
  1056                           ; 1 bytes @ 0x29
  1057  000089                     	ds	1
  1058  00008A                     ___flmul@grs:
  1059                           	opt stack 0
  1060                           
  1061                           ; 4 bytes @ 0x2A
  1062  00008A                     	ds	4
  1063  00008E                     ___flmul@bexp:
  1064                           	opt stack 0
  1065                           
  1066                           ; 1 bytes @ 0x2E
  1067  00008E                     	ds	1
  1068  00008F                     ___flmul@prod:
  1069                           	opt stack 0
  1070                           
  1071                           ; 4 bytes @ 0x2F
  1072  00008F                     	ds	4
  1073  000093                     ___flmul@temp:
  1074                           	opt stack 0
  1075                           
  1076                           ; 2 bytes @ 0x33
  1077  000093                     	ds	2
  1078  000095                     ?_fround:
  1079                           	opt stack 0
  1080  000095                     ?_scale:
  1081                           	opt stack 0
  1082                           
  1083                           ; 4 bytes @ 0x35
  1084  000095                     	ds	4
  1085  000099                     _fround$4191:
  1086                           	opt stack 0
  1087  000099                     _scale$4192:
  1088                           	opt stack 0
  1089                           
  1090                           ; 4 bytes @ 0x39
  1091  000099                     	ds	4
  1092  00009D                     scale@scl:
  1093                           	opt stack 0
  1094  00009D                     _fround$4190:
  1095                           	opt stack 0
  1096                           
  1097                           ; 4 bytes @ 0x3D
  1098  00009D                     	ds	1
  1099  00009E                     ?___fltol:
  1100                           	opt stack 0
  1101  00009E                     ___fltol@f1:
  1102                           	opt stack 0
  1103                           
  1104                           ; 4 bytes @ 0x3E
  1105  00009E                     	ds	3
  1106  0000A1                     fround@prec:
  1107                           	opt stack 0
  1108                           
  1109                           ; 1 bytes @ 0x41
  1110  0000A1                     	ds	1
  1111  0000A2                     ??___fltol:
  1112  0000A2                     ?___fladd:
  1113                           	opt stack 0
  1114  0000A2                     ___fladd@b:
  1115                           	opt stack 0
  1116                           
  1117                           ; 4 bytes @ 0x42
  1118  0000A2                     	ds	4
  1119  0000A6                     ___fltol@sign1:
  1120                           	opt stack 0
  1121  0000A6                     ___fladd@a:
  1122                           	opt stack 0
  1123                           
  1124                           ; 4 bytes @ 0x46
  1125  0000A6                     	ds	1
  1126  0000A7                     ___fltol@exp1:
  1127                           	opt stack 0
  1128                           
  1129                           ; 1 bytes @ 0x47
  1130  0000A7                     	ds	3
  1131  0000AA                     ??___fladd:
  1132                           
  1133                           ; 0 bytes @ 0x4A
  1134  0000AA                     	ds	8
  1135  0000B2                     ___fladd@signs:
  1136                           	opt stack 0
  1137                           
  1138                           ; 1 bytes @ 0x52
  1139  0000B2                     	ds	1
  1140  0000B3                     ___fladd@aexp:
  1141                           	opt stack 0
  1142                           
  1143                           ; 1 bytes @ 0x53
  1144  0000B3                     	ds	1
  1145  0000B4                     ___fladd@bexp:
  1146                           	opt stack 0
  1147                           
  1148                           ; 1 bytes @ 0x54
  1149  0000B4                     	ds	1
  1150  0000B5                     ___fladd@grs:
  1151                           	opt stack 0
  1152                           
  1153                           ; 1 bytes @ 0x55
  1154  0000B5                     	ds	1
  1155  0000B6                     ?___flsub:
  1156                           	opt stack 0
  1157  0000B6                     ___flsub@b:
  1158                           	opt stack 0
  1159                           
  1160                           ; 4 bytes @ 0x56
  1161  0000B6                     	ds	4
  1162  0000BA                     ___flsub@a:
  1163                           	opt stack 0
  1164                           
  1165                           ; 4 bytes @ 0x5A
  1166  0000BA                     	ds	4
  1167  0000BE                     ?_sprintf:
  1168                           	opt stack 0
  1169  0000BE                     sprintf@sp:
  1170                           	opt stack 0
  1171                           
  1172                           ; 2 bytes @ 0x5E
  1173  0000BE                     	ds	2
  1174  0000C0                     sprintf@f:
  1175                           	opt stack 0
  1176                           
  1177                           ; 2 bytes @ 0x60
  1178  0000C0                     	ds	6
  1179  0000C6                     ??_sprintf:
  1180                           
  1181                           ; 0 bytes @ 0x66
  1182  0000C6                     	ds	2
  1183  0000C8                     tblptru	equ	0xFF8
  1184                           tblptrh	equ	0xFF7
  1185                           tblptrl	equ	0xFF6
  1186                           tablat	equ	0xFF5
  1187                           postinc0	equ	0xFEE
  1188                           wreg	equ	0xFE8
  1189                           
  1190                           ; 0 bytes @ 0x68
  1191                           
  1192                           	psect	cstackCOMRAM
  1193  000029                     __pcstackCOMRAM:
  1194                           	opt stack 0
  1195  000029                     ??_ISR_bassa:
  1196  000029                     
  1197                           ; 1 bytes @ 0x0
  1198  000029                     	ds	17
  1199  00003A                     _CANisRxReady$3229:
  1200                           	opt stack 0
  1201  00003A                     CANreceiveMessage@msg:
  1202                           	opt stack 0
  1203                           
  1204                           ; 2 bytes @ 0x11
  1205  00003A                     	ds	2
  1206  00003C                     ??_CANreceiveMessage:
  1207                           
  1208                           ; 0 bytes @ 0x13
  1209  00003C                     	ds	8
  1210  000044                     CANreceiveMessage@error:
  1211                           	opt stack 0
  1212                           
  1213                           ; 1 bytes @ 0x1B
  1214  000044                     	ds	1
  1215  000045                     CANreceiveMessage@tamp:
  1216                           	opt stack 0
  1217                           
  1218                           ; 1 bytes @ 0x1C
  1219  000045                     	ds	1
  1220  000046                     ISR_alta@i:
  1221                           	opt stack 0
  1222                           
  1223                           ; 1 bytes @ 0x1D
  1224  000046                     	ds	1
  1225                           tblptru	equ	0xFF8
  1226                           tblptrh	equ	0xFF7
  1227                           tblptrl	equ	0xFF6
  1228                           tablat	equ	0xFF5
  1229                           postinc0	equ	0xFEE
  1230                           wreg	equ	0xFE8
  1231                           
  1232 ;;
  1233 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1234 ;;
  1235 ;; *************** function _main *****************
  1236 ;; Defined at:
  1237 ;;		line 97 in file "RemoteCan.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;		None
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;		None
  1242 ;; Return value:  Size  Location     Type
  1243 ;;		None               void
  1244 ;; Registers used:
  1245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1253 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1254 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1255 ;;Total ram usage:        8 bytes
  1256 ;; Hardware stack levels required when called:   10
  1257 ;; This function calls:
  1258 ;;		_CAN_Send
  1259 ;;		_CAN_interpreter
  1260 ;;		_Joystick_Polling
  1261 ;;		_LCD_Handler
  1262 ;;		_LCD_clear
  1263 ;;		_LCD_goto_line
  1264 ;;		_LCD_write_message
  1265 ;;		_PWR_Button_Polling
  1266 ;;		___flmul
  1267 ;;		___fltol
  1268 ;;		___xxtofl
  1269 ;;		_board_initialization
  1270 ;;		_delay_ms
  1271 ;; This function is called by:
  1272 ;;		Startup code after reset
  1273 ;; This function uses a non-reentrant model
  1274 ;;
  1275                           
  1276                           	psect	text0
  1277  012E9A                     __ptext0:
  1278                           	opt stack 0
  1279  012E9A                     _main:
  1280                           	opt stack 21
  1281                           
  1282                           ;RemoteCan.c: 98: board_initialization();
  1283                           
  1284                           ;incstack = 0
  1285  012E9A  EC5A  F0A5         	call	_board_initialization	;wreg free
  1286  012E9E                     l8748:
  1287                           
  1288                           ;RemoteCan.c: 103: PWR_Button_Polling();
  1289  012E9E  ECA5  F0A9         	call	_PWR_Button_Polling	;wreg free
  1290                           
  1291                           ;RemoteCan.c: 104: if (power_switch == 0) {
  1292  012EA2  BA47               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1293  012EA4  D0A4               	goto	l8780
  1294                           
  1295                           ;RemoteCan.c: 105: dir = 0;
  1296  012EA6  0E00               	movlw	0
  1297  012EA8  0100               	movlb	0	; () banked
  1298  012EAA  6FEA               	movwf	_dir& (0+255),b	;volatile
  1299                           
  1300                           ;RemoteCan.c: 106: set_speed = 0;
  1301  012EAC  0E00               	movlw	0
  1302  012EAE  0100               	movlb	0	; () banked
  1303  012EB0  6FE9               	movwf	(_set_speed+1)& (0+255),b	;volatile
  1304  012EB2  0E00               	movlw	0
  1305  012EB4  6FE8               	movwf	_set_speed& (0+255),b	;volatile
  1306                           
  1307                           ;RemoteCan.c: 107: data_steering [0] = 90;
  1308  012EB6  0E5A               	movlw	90
  1309  012EB8  0100               	movlb	0	; () banked
  1310  012EBA  6FEE               	movwf	_data_steering& (0+255),b
  1311                           
  1312                           ;RemoteCan.c: 108: data_brake [0] = 0;
  1313  012EBC  0E00               	movlw	0
  1314  012EBE  0100               	movlb	0	; () banked
  1315  012EC0  6FEC               	movwf	_data_brake& (0+255),b
  1316                           
  1317                           ;RemoteCan.c: 109: data_brake [1] = 1;
  1318  012EC2  0E01               	movlw	1
  1319  012EC4  0100               	movlb	0	; () banked
  1320  012EC6  6FED               	movwf	(_data_brake+1)& (0+255),b
  1321                           
  1322                           ; BSR set to: 0
  1323                           ;RemoteCan.c: 110: CAN_Send();
  1324  012EC8  EC46  F0A7         	call	_CAN_Send	;wreg free
  1325                           
  1326                           ;RemoteCan.c: 111: while (power_switch == 0) {
  1327  012ECC  D08D               	goto	l8778
  1328  012ECE                     l8756:
  1329                           
  1330                           ;RemoteCan.c: 112: LCD_clear();
  1331  012ECE  EC41  F0A9         	call	_LCD_clear	;wreg free
  1332                           
  1333                           ;RemoteCan.c: 113: delay_ms(10);
  1334  012ED2  0E00               	movlw	0
  1335  012ED4  0100               	movlb	0	; () banked
  1336  012ED6  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1337  012ED8  0E0A               	movlw	10
  1338  012EDA  6F74               	movwf	delay_ms@value_ms& (0+255),b
  1339  012EDC  ECBA  F0A8         	call	_delay_ms	;wreg free
  1340                           
  1341                           ;RemoteCan.c: 114: LCD_goto_line(1);
  1342  012EE0  0E01               	movlw	1
  1343  012EE2  ECE4  F0A4         	call	_LCD_goto_line
  1344                           
  1345                           ;RemoteCan.c: 115: LCD_write_message("====================");
  1346  012EE6  0EAC               	movlw	low STR_1
  1347  012EE8  0100               	movlb	0	; () banked
  1348  012EEA  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  1349  012EEC  0EFF               	movlw	high STR_1
  1350  012EEE  0100               	movlb	0	; () banked
  1351  012EF0  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1352  012EF2  EC0E  F0A9         	call	_LCD_write_message	;wreg free
  1353                           
  1354                           ;RemoteCan.c: 116: LCD_goto_line(2);
  1355  012EF6  0E02               	movlw	2
  1356  012EF8  ECE4  F0A4         	call	_LCD_goto_line
  1357                           
  1358                           ;RemoteCan.c: 117: LCD_write_message("==> VEHICLE  OFF <==");
  1359  012EFC  0E82               	movlw	low STR_2
  1360  012EFE  0100               	movlb	0	; () banked
  1361  012F00  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  1362  012F02  0EFF               	movlw	high STR_2
  1363  012F04  0100               	movlb	0	; () banked
  1364  012F06  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1365  012F08  EC0E  F0A9         	call	_LCD_write_message	;wreg free
  1366                           
  1367                           ;RemoteCan.c: 118: LCD_goto_line(3);
  1368  012F0C  0E03               	movlw	3
  1369  012F0E  ECE4  F0A4         	call	_LCD_goto_line
  1370                           
  1371                           ;RemoteCan.c: 119: LCD_write_message("Turn the switch ON! ");
  1372  012F12  0E6D               	movlw	low STR_3
  1373  012F14  0100               	movlb	0	; () banked
  1374  012F16  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  1375  012F18  0EFF               	movlw	high STR_3
  1376  012F1A  0100               	movlb	0	; () banked
  1377  012F1C  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1378  012F1E  EC0E  F0A9         	call	_LCD_write_message	;wreg free
  1379                           
  1380                           ;RemoteCan.c: 120: LCD_goto_line(4);
  1381  012F22  0E04               	movlw	4
  1382  012F24  ECE4  F0A4         	call	_LCD_goto_line
  1383                           
  1384                           ;RemoteCan.c: 121: LCD_write_message("====================");
  1385  012F28  0EAC               	movlw	low STR_1
  1386  012F2A  0100               	movlb	0	; () banked
  1387  012F2C  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  1388  012F2E  0EFF               	movlw	high STR_1
  1389  012F30  0100               	movlb	0	; () banked
  1390  012F32  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1391  012F34  EC0E  F0A9         	call	_LCD_write_message	;wreg free
  1392                           
  1393                           ;RemoteCan.c: 122: if ((time_counter - pr_time_1) >= 30) {
  1394  012F38  C0D4  F119         	movff	_pr_time_1,??_main	;volatile
  1395  012F3C  C0D5  F11A         	movff	_pr_time_1+1,??_main+1	;volatile
  1396  012F40  C0D6  F11B         	movff	_pr_time_1+2,??_main+2	;volatile
  1397  012F44  C0D7  F11C         	movff	_pr_time_1+3,??_main+3	;volatile
  1398  012F48  0101               	movlb	1	; () banked
  1399  012F4A  1F19               	comf	??_main& (0+255),f,b
  1400  012F4C  1F1A               	comf	(??_main+1)& (0+255),f,b
  1401  012F4E  1F1B               	comf	(??_main+2)& (0+255),f,b
  1402  012F50  1F1C               	comf	(??_main+3)& (0+255),f,b
  1403  012F52  2B19               	incf	??_main& (0+255),f,b
  1404  012F54  0E00               	movlw	0
  1405  012F56  231A               	addwfc	(??_main+1)& (0+255),f,b
  1406  012F58  231B               	addwfc	(??_main+2)& (0+255),f,b
  1407  012F5A  231C               	addwfc	(??_main+3)& (0+255),f,b
  1408  012F5C  0100               	movlb	0	; () banked
  1409  012F5E  51E0               	movf	_time_counter& (0+255),w,b	;volatile
  1410  012F60  0101               	movlb	1	; () banked
  1411  012F62  2519               	addwf	??_main& (0+255),w,b
  1412  012F64  0101               	movlb	1	; () banked
  1413  012F66  6F1D               	movwf	(??_main+4)& (0+255),b
  1414  012F68  0100               	movlb	0	; () banked
  1415  012F6A  51E1               	movf	(_time_counter+1)& (0+255),w,b	;volatile
  1416  012F6C  0101               	movlb	1	; () banked
  1417  012F6E  211A               	addwfc	(??_main+1)& (0+255),w,b
  1418  012F70  0101               	movlb	1	; () banked
  1419  012F72  6F1E               	movwf	(??_main+5)& (0+255),b
  1420  012F74  0100               	movlb	0	; () banked
  1421  012F76  51E2               	movf	(_time_counter+2)& (0+255),w,b	;volatile
  1422  012F78  0101               	movlb	1	; () banked
  1423  012F7A  211B               	addwfc	(??_main+2)& (0+255),w,b
  1424  012F7C  0101               	movlb	1	; () banked
  1425  012F7E  6F1F               	movwf	(??_main+6)& (0+255),b
  1426  012F80  0100               	movlb	0	; () banked
  1427  012F82  51E3               	movf	(_time_counter+3)& (0+255),w,b	;volatile
  1428  012F84  0101               	movlb	1	; () banked
  1429  012F86  211C               	addwfc	(??_main+3)& (0+255),w,b
  1430  012F88  0101               	movlb	1	; () banked
  1431  012F8A  6F20               	movwf	(??_main+7)& (0+255),b
  1432  012F8C  0101               	movlb	1	; () banked
  1433  012F8E  5120               	movf	(??_main+7)& (0+255),w,b
  1434  012F90  0101               	movlb	1	; () banked
  1435  012F92  111F               	iorwf	(??_main+6)& (0+255),w,b
  1436  012F94  0101               	movlb	1	; () banked
  1437  012F96  111E               	iorwf	(??_main+5)& (0+255),w,b
  1438  012F98  E105               	bnz	u11760
  1439  012F9A  0E1E               	movlw	30
  1440  012F9C  0101               	movlb	1	; () banked
  1441  012F9E  5D1D               	subwf	(??_main+4)& (0+255),w,b
  1442  012FA0  A0D8               	btfss	status,0,c
  1443  012FA2  D019               	goto	l8774
  1444  012FA4                     u11760:
  1445                           
  1446                           ; BSR set to: 1
  1447                           ;RemoteCan.c: 123: pr_time_1 = time_counter;
  1448  012FA4  C0E0  F0D4         	movff	_time_counter,_pr_time_1	;volatile
  1449  012FA8  C0E1  F0D5         	movff	_time_counter+1,_pr_time_1+1	;volatile
  1450  012FAC  C0E2  F0D6         	movff	_time_counter+2,_pr_time_1+2	;volatile
  1451  012FB0  C0E3  F0D7         	movff	_time_counter+3,_pr_time_1+3	;volatile
  1452                           
  1453                           ; BSR set to: 1
  1454                           ;RemoteCan.c: 124: PORTDbits.RD7 = ~PORTDbits.RD7;
  1455  012FB4  AE83               	btfss	3971,7,c	;volatile
  1456  012FB6  D002               	goto	u11770
  1457  012FB8  0E01               	movlw	1
  1458  012FBA  D001               	goto	u11776
  1459  012FBC                     u11770:
  1460  012FBC  0E00               	movlw	0
  1461  012FBE                     u11776:
  1462  012FBE  0AFF               	xorlw	255
  1463  012FC0  0101               	movlb	1	; () banked
  1464  012FC2  6F19               	movwf	??_main& (0+255),b
  1465  012FC4  0101               	movlb	1	; () banked
  1466  012FC6  3319               	rrcf	??_main& (0+255),f,b
  1467  012FC8  3319               	rrcf	??_main& (0+255),f,b
  1468  012FCA  5083               	movf	3971,w,c	;volatile
  1469  012FCC  0101               	movlb	1	; () banked
  1470  012FCE  1919               	xorwf	??_main& (0+255),w,b
  1471  012FD0  0B7F               	andlw	-129
  1472  012FD2  1919               	xorwf	??_main& (0+255),w,b
  1473  012FD4  6E83               	movwf	3971,c	;volatile
  1474  012FD6                     l8774:
  1475                           
  1476                           ; BSR set to: 1
  1477                           ;RemoteCan.c: 125: }
  1478                           ;RemoteCan.c: 126: PWR_Button_Polling();
  1479  012FD6  ECA5  F0A9         	call	_PWR_Button_Polling	;wreg free
  1480                           
  1481                           ;RemoteCan.c: 127: delay_ms(300);
  1482  012FDA  0E01               	movlw	1
  1483  012FDC  0100               	movlb	0	; () banked
  1484  012FDE  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1485  012FE0  0E2C               	movlw	44
  1486  012FE2  6F74               	movwf	delay_ms@value_ms& (0+255),b
  1487  012FE4  ECBA  F0A8         	call	_delay_ms	;wreg free
  1488  012FE8                     l8778:
  1489  012FE8  AA47               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1490  012FEA  D771               	goto	l8756
  1491                           
  1492                           ;RemoteCan.c: 128: }
  1493                           ;RemoteCan.c: 129: PORTDbits.RD7 = 0;
  1494  012FEC  9E83               	bcf	3971,7,c	;volatile
  1495  012FEE                     l8780:
  1496                           
  1497                           ;RemoteCan.c: 130: }
  1498                           ;RemoteCan.c: 132: Joystick_Polling();
  1499  012FEE  EC2E  F0A8         	call	_Joystick_Polling	;wreg free
  1500                           
  1501                           ;RemoteCan.c: 135: if (PORTAbits.RA2 == 1) {
  1502  012FF2  A480               	btfss	3968,2,c	;volatile
  1503  012FF4  D004               	goto	l744
  1504                           
  1505                           ;RemoteCan.c: 136: switch_position = 0;
  1506  012FF6  0E00               	movlw	0
  1507  012FF8  0100               	movlb	0	; () banked
  1508  012FFA  6FEB               	movwf	_switch_position& (0+255),b	;volatile
  1509                           
  1510                           ;RemoteCan.c: 137: } else {
  1511  012FFC  D00D               	goto	l8790
  1512  012FFE                     l744:
  1513                           
  1514                           ;RemoteCan.c: 138: if (PORTAbits.RA3 == 0) {
  1515  012FFE  B680               	btfsc	3968,3,c	;volatile
  1516  013000  D005               	goto	l8788
  1517                           
  1518                           ;RemoteCan.c: 139: switch_position = 1;
  1519  013002  0E01               	movlw	1
  1520  013004  0100               	movlb	0	; () banked
  1521  013006  6FEB               	movwf	_switch_position& (0+255),b	;volatile
  1522                           
  1523                           ;RemoteCan.c: 140: dir = 0;
  1524  013008  0E00               	movlw	0
  1525  01300A  D004               	goto	L1
  1526  01300C                     l8788:
  1527                           
  1528                           ;RemoteCan.c: 142: switch_position = 2;
  1529  01300C  0E02               	movlw	2
  1530  01300E  0100               	movlb	0	; () banked
  1531  013010  6FEB               	movwf	_switch_position& (0+255),b	;volatile
  1532                           
  1533                           ;RemoteCan.c: 143: dir = 1;
  1534  013012  0E01               	movlw	1
  1535  013014                     L1:
  1536  013014  0100               	movlb	0	; () banked
  1537  013016  6FEA               	movwf	_dir& (0+255),b	;volatile
  1538  013018                     l8790:
  1539                           
  1540                           ; BSR set to: 0
  1541                           ;RemoteCan.c: 144: }
  1542                           ;RemoteCan.c: 145: }
  1543                           ;RemoteCan.c: 147: data_steering [0] = (JoystickValues[0])*(JoystickConstants[0]);
  1544  013018  C0C8  F080         	movff	_JoystickConstants,___flmul@a	;volatile
  1545  01301C  C0C9  F081         	movff	_JoystickConstants+1,___flmul@a+1	;volatile
  1546  013020  C0CA  F082         	movff	_JoystickConstants+2,___flmul@a+2	;volatile
  1547  013024  C0CB  F083         	movff	_JoystickConstants+3,___flmul@a+3	;volatile
  1548  013028  0100               	movlb	0	; () banked
  1549  01302A  51E4               	movf	_JoystickValues& (0+255),w,b	;volatile
  1550  01302C  0100               	movlb	0	; () banked
  1551  01302E  6F6E               	movwf	___xxtofl@val& (0+255),b
  1552  013030  6B6F               	clrf	(___xxtofl@val+1)& (0+255),b
  1553  013032  6B70               	clrf	(___xxtofl@val+2)& (0+255),b
  1554  013034  6B71               	clrf	(___xxtofl@val+3)& (0+255),b
  1555  013036  0E00               	movlw	0
  1556  013038  EC72  F09E         	call	___xxtofl
  1557  01303C  C06E  F07C         	movff	?___xxtofl,___flmul@b
  1558  013040  C06F  F07D         	movff	?___xxtofl+1,___flmul@b+1
  1559  013044  C070  F07E         	movff	?___xxtofl+2,___flmul@b+2
  1560  013048  C071  F07F         	movff	?___xxtofl+3,___flmul@b+3
  1561  01304C  ECFA  F094         	call	___flmul	;wreg free
  1562  013050  C07C  F09E         	movff	?___flmul,___fltol@f1
  1563  013054  C07D  F09F         	movff	?___flmul+1,___fltol@f1+1
  1564  013058  C07E  F0A0         	movff	?___flmul+2,___fltol@f1+2
  1565  01305C  C07F  F0A1         	movff	?___flmul+3,___fltol@f1+3
  1566  013060  ECDB  F0A3         	call	___fltol	;wreg free
  1567  013064  0100               	movlb	0	; () banked
  1568  013066  519E               	movf	?___fltol& (0+255),w,b
  1569  013068  0100               	movlb	0	; () banked
  1570  01306A  6FEE               	movwf	_data_steering& (0+255),b
  1571                           
  1572                           ; BSR set to: 0
  1573                           ;RemoteCan.c: 148: if (switch_position != 0) {
  1574  01306C  0100               	movlb	0	; () banked
  1575  01306E  51EB               	movf	_switch_position& (0+255),w,b	;volatile
  1576  013070  B4D8               	btfsc	status,2,c
  1577  013072  D088               	goto	l8804
  1578                           
  1579                           ; BSR set to: 0
  1580                           ;RemoteCan.c: 149: if (JoystickValues[1] > 132) {
  1581  013074  0E84               	movlw	132
  1582  013076  0100               	movlb	0	; () banked
  1583  013078  65E5               	cpfsgt	(_JoystickValues+1)& (0+255),b	;volatile
  1584  01307A  D042               	goto	l8800
  1585                           
  1586                           ; BSR set to: 0
  1587                           ;RemoteCan.c: 150: set_speed = (JoystickValues[1] - 130)*(JoystickConstants[1]);
  1588  01307C  C0CC  F080         	movff	_JoystickConstants+4,___flmul@a	;volatile
  1589  013080  C0CD  F081         	movff	_JoystickConstants+5,___flmul@a+1	;volatile
  1590  013084  C0CE  F082         	movff	_JoystickConstants+6,___flmul@a+2	;volatile
  1591  013088  C0CF  F083         	movff	_JoystickConstants+7,___flmul@a+3	;volatile
  1592  01308C  0E7E               	movlw	126
  1593  01308E  0101               	movlb	1	; () banked
  1594  013090  6F19               	movwf	??_main& (0+255),b
  1595  013092  0EFF               	movlw	255
  1596  013094  0101               	movlb	1	; () banked
  1597  013096  6F1A               	movwf	(??_main+1)& (0+255),b
  1598  013098  0100               	movlb	0	; () banked
  1599  01309A  51E5               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  1600  01309C  0101               	movlb	1	; () banked
  1601  01309E  6F1B               	movwf	(??_main+2)& (0+255),b
  1602  0130A0  6B1C               	clrf	(??_main+3)& (0+255),b
  1603  0130A2  0101               	movlb	1	; () banked
  1604  0130A4  5119               	movf	??_main& (0+255),w,b
  1605  0130A6  0101               	movlb	1	; () banked
  1606  0130A8  271B               	addwf	(??_main+2)& (0+255),f,b
  1607  0130AA  0101               	movlb	1	; () banked
  1608  0130AC  511A               	movf	(??_main+1)& (0+255),w,b
  1609  0130AE  0101               	movlb	1	; () banked
  1610  0130B0  231C               	addwfc	(??_main+3)& (0+255),f,b
  1611  0130B2  C11B  F06E         	movff	??_main+2,___xxtofl@val
  1612  0130B6  C11C  F06F         	movff	??_main+3,___xxtofl@val+1
  1613  0130BA  0100               	movlb	0	; () banked
  1614  0130BC  0E00               	movlw	0
  1615  0130BE  BF6F               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1616  0130C0  0EFF               	movlw	-1
  1617  0130C2  6F70               	movwf	(___xxtofl@val+2)& (0+255),b
  1618  0130C4  6F71               	movwf	(___xxtofl@val+3)& (0+255),b
  1619  0130C6  0E01               	movlw	1
  1620  0130C8  EC72  F09E         	call	___xxtofl
  1621  0130CC  C06E  F07C         	movff	?___xxtofl,___flmul@b
  1622  0130D0  C06F  F07D         	movff	?___xxtofl+1,___flmul@b+1
  1623  0130D4  C070  F07E         	movff	?___xxtofl+2,___flmul@b+2
  1624  0130D8  C071  F07F         	movff	?___xxtofl+3,___flmul@b+3
  1625  0130DC  ECFA  F094         	call	___flmul	;wreg free
  1626  0130E0  C07C  F09E         	movff	?___flmul,___fltol@f1
  1627  0130E4  C07D  F09F         	movff	?___flmul+1,___fltol@f1+1
  1628  0130E8  C07E  F0A0         	movff	?___flmul+2,___fltol@f1+2
  1629  0130EC  C07F  F0A1         	movff	?___flmul+3,___fltol@f1+3
  1630  0130F0  ECDB  F0A3         	call	___fltol	;wreg free
  1631  0130F4  C09E  F0E8         	movff	?___fltol,_set_speed	;volatile
  1632  0130F8  C09F  F0E9         	movff	?___fltol+1,_set_speed+1	;volatile
  1633                           
  1634                           ;RemoteCan.c: 151: data_brake [0] = 0;
  1635  0130FC  0E00               	movlw	0
  1636  0130FE  D040               	goto	L2
  1637  013100                     l8800:
  1638                           
  1639                           ; BSR set to: 0
  1640                           ;RemoteCan.c: 153: set_speed = 0;
  1641  013100  0E00               	movlw	0
  1642  013102  0100               	movlb	0	; () banked
  1643  013104  6FE9               	movwf	(_set_speed+1)& (0+255),b	;volatile
  1644  013106  0E00               	movlw	0
  1645  013108  6FE8               	movwf	_set_speed& (0+255),b	;volatile
  1646                           
  1647                           ; BSR set to: 0
  1648                           ;RemoteCan.c: 154: data_brake [0] = ((130 - JoystickValues[1]))*(1.9);
  1649  01310A  0E33               	movlw	51
  1650  01310C  0100               	movlb	0	; () banked
  1651  01310E  6F80               	movwf	___flmul@a& (0+255),b
  1652  013110  0E33               	movlw	51
  1653  013112  6F81               	movwf	(___flmul@a+1)& (0+255),b
  1654  013114  0EF3               	movlw	243
  1655  013116  6F82               	movwf	(___flmul@a+2)& (0+255),b
  1656  013118  0E3F               	movlw	63
  1657  01311A  6F83               	movwf	(___flmul@a+3)& (0+255),b
  1658  01311C  0100               	movlb	0	; () banked
  1659  01311E  51E5               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  1660  013120  0101               	movlb	1	; () banked
  1661  013122  6F19               	movwf	??_main& (0+255),b
  1662  013124  6B1A               	clrf	(??_main+1)& (0+255),b
  1663  013126  0101               	movlb	1	; () banked
  1664  013128  1F19               	comf	??_main& (0+255),f,b
  1665  01312A  1F1A               	comf	(??_main+1)& (0+255),f,b
  1666  01312C  4B19               	infsnz	??_main& (0+255),f,b
  1667  01312E  2B1A               	incf	(??_main+1)& (0+255),f,b
  1668  013130  0E82               	movlw	130
  1669  013132  0101               	movlb	1	; () banked
  1670  013134  2719               	addwf	??_main& (0+255),f,b
  1671  013136  0E00               	movlw	0
  1672  013138  231A               	addwfc	(??_main+1)& (0+255),f,b
  1673  01313A  C119  F06E         	movff	??_main,___xxtofl@val
  1674  01313E  C11A  F06F         	movff	??_main+1,___xxtofl@val+1
  1675  013142  0100               	movlb	0	; () banked
  1676  013144  0E00               	movlw	0
  1677  013146  BF6F               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1678  013148  0EFF               	movlw	-1
  1679  01314A  6F70               	movwf	(___xxtofl@val+2)& (0+255),b
  1680  01314C  6F71               	movwf	(___xxtofl@val+3)& (0+255),b
  1681  01314E  0E01               	movlw	1
  1682  013150  EC72  F09E         	call	___xxtofl
  1683  013154  C06E  F07C         	movff	?___xxtofl,___flmul@b
  1684  013158  C06F  F07D         	movff	?___xxtofl+1,___flmul@b+1
  1685  01315C  C070  F07E         	movff	?___xxtofl+2,___flmul@b+2
  1686  013160  C071  F07F         	movff	?___xxtofl+3,___flmul@b+3
  1687  013164  ECFA  F094         	call	___flmul	;wreg free
  1688  013168  C07C  F09E         	movff	?___flmul,___fltol@f1
  1689  01316C  C07D  F09F         	movff	?___flmul+1,___fltol@f1+1
  1690  013170  C07E  F0A0         	movff	?___flmul+2,___fltol@f1+2
  1691  013174  C07F  F0A1         	movff	?___flmul+3,___fltol@f1+3
  1692  013178  ECDB  F0A3         	call	___fltol	;wreg free
  1693  01317C  0100               	movlb	0	; () banked
  1694  01317E  519E               	movf	?___fltol& (0+255),w,b
  1695  013180                     L2:
  1696  013180  0100               	movlb	0	; () banked
  1697  013182  6FEC               	movwf	_data_brake& (0+255),b
  1698  013184                     l8804:
  1699                           
  1700                           ; BSR set to: 0
  1701                           ;RemoteCan.c: 155: }
  1702                           ;RemoteCan.c: 156: }
  1703                           ;RemoteCan.c: 158: if (newMessageCan == 1) {
  1704  013184  A847               	btfss	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  1705  013186  D003               	goto	l8810
  1706                           
  1707                           ; BSR set to: 0
  1708                           ;RemoteCan.c: 159: CAN_interpreter();
  1709  013188  EC61  F0A4         	call	_CAN_interpreter	;wreg free
  1710                           
  1711                           ;RemoteCan.c: 160: newMessageCan = 0;
  1712  01318C  9847               	bcf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  1713  01318E                     l8810:
  1714                           
  1715                           ;RemoteCan.c: 161: }
  1716                           ;RemoteCan.c: 163: if ((time_counter - pr_time_2) >= 2) {
  1717  01318E  C0D8  F119         	movff	_pr_time_2,??_main	;volatile
  1718  013192  C0D9  F11A         	movff	_pr_time_2+1,??_main+1	;volatile
  1719  013196  C0DA  F11B         	movff	_pr_time_2+2,??_main+2	;volatile
  1720  01319A  C0DB  F11C         	movff	_pr_time_2+3,??_main+3	;volatile
  1721  01319E  0101               	movlb	1	; () banked
  1722  0131A0  1F19               	comf	??_main& (0+255),f,b
  1723  0131A2  1F1A               	comf	(??_main+1)& (0+255),f,b
  1724  0131A4  1F1B               	comf	(??_main+2)& (0+255),f,b
  1725  0131A6  1F1C               	comf	(??_main+3)& (0+255),f,b
  1726  0131A8  2B19               	incf	??_main& (0+255),f,b
  1727  0131AA  0E00               	movlw	0
  1728  0131AC  231A               	addwfc	(??_main+1)& (0+255),f,b
  1729  0131AE  231B               	addwfc	(??_main+2)& (0+255),f,b
  1730  0131B0  231C               	addwfc	(??_main+3)& (0+255),f,b
  1731  0131B2  0100               	movlb	0	; () banked
  1732  0131B4  51E0               	movf	_time_counter& (0+255),w,b	;volatile
  1733  0131B6  0101               	movlb	1	; () banked
  1734  0131B8  2519               	addwf	??_main& (0+255),w,b
  1735  0131BA  0101               	movlb	1	; () banked
  1736  0131BC  6F1D               	movwf	(??_main+4)& (0+255),b
  1737  0131BE  0100               	movlb	0	; () banked
  1738  0131C0  51E1               	movf	(_time_counter+1)& (0+255),w,b	;volatile
  1739  0131C2  0101               	movlb	1	; () banked
  1740  0131C4  211A               	addwfc	(??_main+1)& (0+255),w,b
  1741  0131C6  0101               	movlb	1	; () banked
  1742  0131C8  6F1E               	movwf	(??_main+5)& (0+255),b
  1743  0131CA  0100               	movlb	0	; () banked
  1744  0131CC  51E2               	movf	(_time_counter+2)& (0+255),w,b	;volatile
  1745  0131CE  0101               	movlb	1	; () banked
  1746  0131D0  211B               	addwfc	(??_main+2)& (0+255),w,b
  1747  0131D2  0101               	movlb	1	; () banked
  1748  0131D4  6F1F               	movwf	(??_main+6)& (0+255),b
  1749  0131D6  0100               	movlb	0	; () banked
  1750  0131D8  51E3               	movf	(_time_counter+3)& (0+255),w,b	;volatile
  1751  0131DA  0101               	movlb	1	; () banked
  1752  0131DC  211C               	addwfc	(??_main+3)& (0+255),w,b
  1753  0131DE  0101               	movlb	1	; () banked
  1754  0131E0  6F20               	movwf	(??_main+7)& (0+255),b
  1755  0131E2  0101               	movlb	1	; () banked
  1756  0131E4  5120               	movf	(??_main+7)& (0+255),w,b
  1757  0131E6  0101               	movlb	1	; () banked
  1758  0131E8  111F               	iorwf	(??_main+6)& (0+255),w,b
  1759  0131EA  0101               	movlb	1	; () banked
  1760  0131EC  111E               	iorwf	(??_main+5)& (0+255),w,b
  1761  0131EE  E105               	bnz	u11840
  1762  0131F0  0E02               	movlw	2
  1763  0131F2  0101               	movlb	1	; () banked
  1764  0131F4  5D1D               	subwf	(??_main+4)& (0+255),w,b
  1765  0131F6  A0D8               	btfss	status,0,c
  1766  0131F8  D00A               	goto	l8816
  1767  0131FA                     u11840:
  1768                           
  1769                           ; BSR set to: 1
  1770                           ;RemoteCan.c: 164: pr_time_2 = time_counter;
  1771  0131FA  C0E0  F0D8         	movff	_time_counter,_pr_time_2	;volatile
  1772  0131FE  C0E1  F0D9         	movff	_time_counter+1,_pr_time_2+1	;volatile
  1773  013202  C0E2  F0DA         	movff	_time_counter+2,_pr_time_2+2	;volatile
  1774  013206  C0E3  F0DB         	movff	_time_counter+3,_pr_time_2+3	;volatile
  1775                           
  1776                           ; BSR set to: 1
  1777                           ;RemoteCan.c: 165: CAN_Send();
  1778  01320A  EC46  F0A7         	call	_CAN_Send	;wreg free
  1779  01320E                     l8816:
  1780                           
  1781                           ;RemoteCan.c: 166: }
  1782                           ;RemoteCan.c: 168: if ((time_counter - pr_time_3) >= 50) {
  1783  01320E  C0DC  F119         	movff	_pr_time_3,??_main	;volatile
  1784  013212  C0DD  F11A         	movff	_pr_time_3+1,??_main+1	;volatile
  1785  013216  C0DE  F11B         	movff	_pr_time_3+2,??_main+2	;volatile
  1786  01321A  C0DF  F11C         	movff	_pr_time_3+3,??_main+3	;volatile
  1787  01321E  0101               	movlb	1	; () banked
  1788  013220  1F19               	comf	??_main& (0+255),f,b
  1789  013222  1F1A               	comf	(??_main+1)& (0+255),f,b
  1790  013224  1F1B               	comf	(??_main+2)& (0+255),f,b
  1791  013226  1F1C               	comf	(??_main+3)& (0+255),f,b
  1792  013228  2B19               	incf	??_main& (0+255),f,b
  1793  01322A  0E00               	movlw	0
  1794  01322C  231A               	addwfc	(??_main+1)& (0+255),f,b
  1795  01322E  231B               	addwfc	(??_main+2)& (0+255),f,b
  1796  013230  231C               	addwfc	(??_main+3)& (0+255),f,b
  1797  013232  0100               	movlb	0	; () banked
  1798  013234  51E0               	movf	_time_counter& (0+255),w,b	;volatile
  1799  013236  0101               	movlb	1	; () banked
  1800  013238  2519               	addwf	??_main& (0+255),w,b
  1801  01323A  0101               	movlb	1	; () banked
  1802  01323C  6F1D               	movwf	(??_main+4)& (0+255),b
  1803  01323E  0100               	movlb	0	; () banked
  1804  013240  51E1               	movf	(_time_counter+1)& (0+255),w,b	;volatile
  1805  013242  0101               	movlb	1	; () banked
  1806  013244  211A               	addwfc	(??_main+1)& (0+255),w,b
  1807  013246  0101               	movlb	1	; () banked
  1808  013248  6F1E               	movwf	(??_main+5)& (0+255),b
  1809  01324A  0100               	movlb	0	; () banked
  1810  01324C  51E2               	movf	(_time_counter+2)& (0+255),w,b	;volatile
  1811  01324E  0101               	movlb	1	; () banked
  1812  013250  211B               	addwfc	(??_main+2)& (0+255),w,b
  1813  013252  0101               	movlb	1	; () banked
  1814  013254  6F1F               	movwf	(??_main+6)& (0+255),b
  1815  013256  0100               	movlb	0	; () banked
  1816  013258  51E3               	movf	(_time_counter+3)& (0+255),w,b	;volatile
  1817  01325A  0101               	movlb	1	; () banked
  1818  01325C  211C               	addwfc	(??_main+3)& (0+255),w,b
  1819  01325E  0101               	movlb	1	; () banked
  1820  013260  6F20               	movwf	(??_main+7)& (0+255),b
  1821  013262  0101               	movlb	1	; () banked
  1822  013264  5120               	movf	(??_main+7)& (0+255),w,b
  1823  013266  0101               	movlb	1	; () banked
  1824  013268  111F               	iorwf	(??_main+6)& (0+255),w,b
  1825  01326A  0101               	movlb	1	; () banked
  1826  01326C  111E               	iorwf	(??_main+5)& (0+255),w,b
  1827  01326E  E105               	bnz	u11850
  1828  013270  0E32               	movlw	50
  1829  013272  0101               	movlb	1	; () banked
  1830  013274  5D1D               	subwf	(??_main+4)& (0+255),w,b
  1831  013276  A0D8               	btfss	status,0,c
  1832  013278  D612               	goto	l8748
  1833  01327A                     u11850:
  1834                           
  1835                           ; BSR set to: 1
  1836                           ;RemoteCan.c: 169: pr_time_3 = time_counter;
  1837  01327A  C0E0  F0DC         	movff	_time_counter,_pr_time_3	;volatile
  1838  01327E  C0E1  F0DD         	movff	_time_counter+1,_pr_time_3+1	;volatile
  1839  013282  C0E2  F0DE         	movff	_time_counter+2,_pr_time_3+2	;volatile
  1840  013286  C0E3  F0DF         	movff	_time_counter+3,_pr_time_3+3	;volatile
  1841                           
  1842                           ; BSR set to: 1
  1843                           ;RemoteCan.c: 170: LCD_Handler();
  1844  01328A  EC4E  F0A3         	call	_LCD_Handler	;wreg free
  1845  01328E  D607               	goto	l8748
  1846  013290                     __end_of_main:
  1847                           	opt stack 0
  1848                           tblptru	equ	0xFF8
  1849                           tblptrh	equ	0xFF7
  1850                           tblptrl	equ	0xFF6
  1851                           tablat	equ	0xFF5
  1852                           postinc0	equ	0xFEE
  1853                           wreg	equ	0xFE8
  1854                           status	equ	0xFD8
  1855                           
  1856 ;; *************** function _board_initialization *****************
  1857 ;; Defined at:
  1858 ;;		line 276 in file "RemoteCan.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;		None
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;		None
  1863 ;; Return value:  Size  Location     Type
  1864 ;;		None               void
  1865 ;; Registers used:
  1866 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1876 ;;Total ram usage:        0 bytes
  1877 ;; Hardware stack levels used:    1
  1878 ;; Hardware stack levels required when called:    9
  1879 ;; This function calls:
  1880 ;;		_CANInitialize
  1881 ;;		_LCD_backlight
  1882 ;;		_LCD_clear
  1883 ;;		_LCD_goto_line
  1884 ;;		_LCD_initialize
  1885 ;;		_LCD_write_message
  1886 ;;		_delay_ms
  1887 ;; This function is called by:
  1888 ;;		_main
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           	psect	text1
  1893  014AB4                     __ptext1:
  1894                           	opt stack 0
  1895  014AB4                     _board_initialization:
  1896                           	opt stack 21
  1897                           
  1898                           ;RemoteCan.c: 278: LATA = 0x00;
  1899                           
  1900                           ;incstack = 0
  1901  014AB4  0E00               	movlw	0
  1902  014AB6  6E89               	movwf	3977,c	;volatile
  1903                           
  1904                           ;RemoteCan.c: 279: TRISA = 0b00001111;
  1905  014AB8  0E0F               	movlw	15
  1906  014ABA  6E92               	movwf	3986,c	;volatile
  1907                           
  1908                           ;RemoteCan.c: 280: LATB = 0x00;
  1909  014ABC  0E00               	movlw	0
  1910  014ABE  6E8A               	movwf	3978,c	;volatile
  1911                           
  1912                           ;RemoteCan.c: 281: TRISB = 0b11111011;
  1913  014AC0  0EFB               	movlw	251
  1914  014AC2  6E93               	movwf	3987,c	;volatile
  1915                           
  1916                           ;RemoteCan.c: 282: LATC = 0x00;
  1917  014AC4  0E00               	movlw	0
  1918  014AC6  6E8B               	movwf	3979,c	;volatile
  1919                           
  1920                           ;RemoteCan.c: 283: TRISC = 0b10110000;
  1921  014AC8  0EB0               	movlw	176
  1922  014ACA  6E94               	movwf	3988,c	;volatile
  1923                           
  1924                           ;RemoteCan.c: 284: LATD = 0x00;
  1925  014ACC  0E00               	movlw	0
  1926  014ACE  6E8C               	movwf	3980,c	;volatile
  1927                           
  1928                           ;RemoteCan.c: 285: TRISD = 0x00;
  1929  014AD0  0E00               	movlw	0
  1930  014AD2  6E95               	movwf	3989,c	;volatile
  1931                           
  1932                           ;RemoteCan.c: 286: LATE = 0x00;
  1933  014AD4  0E00               	movlw	0
  1934  014AD6  6E8D               	movwf	3981,c	;volatile
  1935                           
  1936                           ;RemoteCan.c: 287: TRISE = 0x00;
  1937  014AD8  0E00               	movlw	0
  1938  014ADA  6E96               	movwf	3990,c	;volatile
  1939                           
  1940                           ;RemoteCan.c: 289: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_
      +                          SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  1941  014ADC  0E06               	movlw	6
  1942  014ADE  0100               	movlb	0	; () banked
  1943  014AE0  6F7C               	movwf	CANInitialize@phaseSeg1& (0+255),b
  1944  014AE2  0E05               	movlw	5
  1945  014AE4  0100               	movlb	0	; () banked
  1946  014AE6  6F7D               	movwf	CANInitialize@phaseSeg2& (0+255),b
  1947  014AE8  0E01               	movlw	1
  1948  014AEA  0100               	movlb	0	; () banked
  1949  014AEC  6F7E               	movwf	CANInitialize@SJW& (0+255),b
  1950  014AEE  0E03               	movlw	3
  1951  014AF0  0100               	movlb	0	; () banked
  1952  014AF2  6F7F               	movwf	CANInitialize@BRP& (0+255),b
  1953  014AF4  0E9D               	movlw	157
  1954  014AF6  0100               	movlb	0	; () banked
  1955  014AF8  6F80               	movwf	CANInitialize@flags& (0+255),b
  1956  014AFA  0E04               	movlw	4
  1957  014AFC  EC59  F09F         	call	_CANInitialize
  1958                           
  1959                           ;RemoteCan.c: 293: PIR2bits.TMR3IF = 0;
  1960  014B00  92A1               	bcf	4001,1,c	;volatile
  1961                           
  1962                           ;RemoteCan.c: 294: PIR3bits.RXB1IF = 0;
  1963  014B02  92A4               	bcf	4004,1,c	;volatile
  1964                           
  1965                           ;RemoteCan.c: 295: PIR3bits.RXB0IF = 0;
  1966  014B04  90A4               	bcf	4004,0,c	;volatile
  1967                           
  1968                           ;RemoteCan.c: 298: RCONbits.IPEN = 1;
  1969  014B06  8ED0               	bsf	4048,7,c	;volatile
  1970                           
  1971                           ;RemoteCan.c: 299: IPR3bits.RXB1IP = 1;
  1972  014B08  82A5               	bsf	4005,1,c	;volatile
  1973                           
  1974                           ;RemoteCan.c: 300: IPR3bits.RXB0IP = 1;
  1975  014B0A  80A5               	bsf	4005,0,c	;volatile
  1976                           
  1977                           ;RemoteCan.c: 301: IPR2bits.TMR3IP = 0;
  1978  014B0C  92A2               	bcf	4002,1,c	;volatile
  1979                           
  1980                           ;RemoteCan.c: 304: ADCON1 = 0b00001101;
  1981  014B0E  0E0D               	movlw	13
  1982  014B10  6EC1               	movwf	4033,c	;volatile
  1983                           
  1984                           ;RemoteCan.c: 305: ADCON0bits.CHS2 = 0;
  1985  014B12  98C2               	bcf	4034,4,c	;volatile
  1986                           
  1987                           ;RemoteCan.c: 306: ADCON0bits.CHS1 = 0;
  1988  014B14  96C2               	bcf	4034,3,c	;volatile
  1989                           
  1990                           ;RemoteCan.c: 307: ADCON0bits.CHS0 = 0;
  1991  014B16  94C2               	bcf	4034,2,c	;volatile
  1992                           
  1993                           ;RemoteCan.c: 308: ADCON2bits.ACQT2 = 1;
  1994  014B18  8AC0               	bsf	4032,5,c	;volatile
  1995                           
  1996                           ;RemoteCan.c: 309: ADCON2bits.ACQT1 = 1;
  1997  014B1A  88C0               	bsf	4032,4,c	;volatile
  1998                           
  1999                           ;RemoteCan.c: 310: ADCON2bits.ACQT0 = 0;
  2000  014B1C  96C0               	bcf	4032,3,c	;volatile
  2001                           
  2002                           ;RemoteCan.c: 311: ADCON2bits.ADCS2 = 1;
  2003  014B1E  84C0               	bsf	4032,2,c	;volatile
  2004                           
  2005                           ;RemoteCan.c: 312: ADCON2bits.ADCS1 = 0;
  2006  014B20  92C0               	bcf	4032,1,c	;volatile
  2007                           
  2008                           ;RemoteCan.c: 313: ADCON2bits.ADCS0 = 1;
  2009  014B22  80C0               	bsf	4032,0,c	;volatile
  2010                           
  2011                           ;RemoteCan.c: 314: ADCON2bits.ADFM = 0;
  2012  014B24  9EC0               	bcf	4032,7,c	;volatile
  2013                           
  2014                           ;RemoteCan.c: 315: ADCON0bits.ADON = 1;
  2015  014B26  80C2               	bsf	4034,0,c	;volatile
  2016                           
  2017                           ;RemoteCan.c: 318: LCD_initialize(16);
  2018  014B28  0E10               	movlw	16
  2019  014B2A  EC97  F0A2         	call	_LCD_initialize
  2020                           
  2021                           ;RemoteCan.c: 319: LCD_backlight(0);
  2022  014B2E  0E00               	movlw	0
  2023  014B30  ECC9  F0A9         	call	_LCD_backlight
  2024                           
  2025                           ;RemoteCan.c: 320: LCD_clear();
  2026  014B34  EC41  F0A9         	call	_LCD_clear	;wreg free
  2027                           
  2028                           ;RemoteCan.c: 321: LCD_goto_line(1);
  2029  014B38  0E01               	movlw	1
  2030  014B3A  ECE4  F0A4         	call	_LCD_goto_line
  2031                           
  2032                           ;RemoteCan.c: 323: LCD_write_message("Wait...");
  2033  014B3E  0EE7               	movlw	low STR_13
  2034  014B40  0100               	movlb	0	; () banked
  2035  014B42  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  2036  014B44  0EFF               	movlw	high STR_13
  2037  014B46  0100               	movlb	0	; () banked
  2038  014B48  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2039  014B4A  EC0E  F0A9         	call	_LCD_write_message	;wreg free
  2040                           
  2041                           ;RemoteCan.c: 324: LCD_goto_line(2);
  2042  014B4E  0E02               	movlw	2
  2043  014B50  ECE4  F0A4         	call	_LCD_goto_line
  2044                           
  2045                           ;RemoteCan.c: 325: LCD_write_message("hola muchacho");
  2046  014B54  0EC1               	movlw	low STR_14
  2047  014B56  0100               	movlb	0	; () banked
  2048  014B58  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  2049  014B5A  0EFF               	movlw	high STR_14
  2050  014B5C  0100               	movlb	0	; () banked
  2051  014B5E  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2052  014B60  EC0E  F0A9         	call	_LCD_write_message	;wreg free
  2053                           
  2054                           ;RemoteCan.c: 326: delay_ms(300);
  2055  014B64  0E01               	movlw	1
  2056  014B66  0100               	movlb	0	; () banked
  2057  014B68  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2058  014B6A  0E2C               	movlw	44
  2059  014B6C  6F74               	movwf	delay_ms@value_ms& (0+255),b
  2060  014B6E  ECBA  F0A8         	call	_delay_ms	;wreg free
  2061                           
  2062                           ;RemoteCan.c: 328: PORTDbits.RD2 = 0;
  2063  014B72  9483               	bcf	3971,2,c	;volatile
  2064                           
  2065                           ;RemoteCan.c: 329: PORTDbits.RD3 = 0;
  2066  014B74  9683               	bcf	3971,3,c	;volatile
  2067                           
  2068                           ;RemoteCan.c: 332: TMR3H = 0x63;
  2069  014B76  0E63               	movlw	99
  2070  014B78  6EB3               	movwf	4019,c	;volatile
  2071                           
  2072                           ;RemoteCan.c: 333: TMR3L = 0xC0;
  2073  014B7A  0EC0               	movlw	192
  2074  014B7C  6EB2               	movwf	4018,c	;volatile
  2075                           
  2076                           ;RemoteCan.c: 336: PIE3bits.RXB1IE = 1;
  2077  014B7E  82A3               	bsf	4003,1,c	;volatile
  2078                           
  2079                           ;RemoteCan.c: 337: PIE3bits.RXB0IE = 1;
  2080  014B80  80A3               	bsf	4003,0,c	;volatile
  2081                           
  2082                           ;RemoteCan.c: 338: PIE2bits.TMR3IE = 1;
  2083  014B82  82A0               	bsf	4000,1,c	;volatile
  2084                           
  2085                           ;RemoteCan.c: 341: T3CON = 0x01;
  2086  014B84  0E01               	movlw	1
  2087  014B86  6EB1               	movwf	4017,c	;volatile
  2088                           
  2089                           ;RemoteCan.c: 342: LCD_clear();
  2090  014B88  EC41  F0A9         	call	_LCD_clear	;wreg free
  2091                           
  2092                           ;RemoteCan.c: 343: INTCONbits.GIEH = 1;
  2093  014B8C  8EF2               	bsf	intcon,7,c	;volatile
  2094                           
  2095                           ;RemoteCan.c: 344: INTCONbits.GIEL = 1;
  2096  014B8E  8CF2               	bsf	intcon,6,c	;volatile
  2097  014B90  0012               	return		;funcret
  2098  014B92                     __end_of_board_initialization:
  2099                           	opt stack 0
  2100                           tblptru	equ	0xFF8
  2101                           tblptrh	equ	0xFF7
  2102                           tblptrl	equ	0xFF6
  2103                           tablat	equ	0xFF5
  2104                           intcon	equ	0xFF2
  2105                           postinc0	equ	0xFEE
  2106                           wreg	equ	0xFE8
  2107                           status	equ	0xFD8
  2108                           
  2109 ;; *************** function _LCD_initialize *****************
  2110 ;; Defined at:
  2111 ;;		line 283 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  2112 ;; Parameters:    Size  Location     Type
  2113 ;;  quartz_frequ    1    wreg     unsigned char 
  2114 ;; Auto vars:     Size  Location     Type
  2115 ;;  quartz_frequ    1   28[BANK0 ] unsigned char 
  2116 ;; Return value:  Size  Location     Type
  2117 ;;		None               void
  2118 ;; Registers used:
  2119 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2120 ;; Tracked objects:
  2121 ;;		On entry : 0/0
  2122 ;;		On exit  : 0/0
  2123 ;;		Unchanged: 0/0
  2124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2126 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2128 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2129 ;;Total ram usage:        1 bytes
  2130 ;; Hardware stack levels used:    1
  2131 ;; Hardware stack levels required when called:    8
  2132 ;; This function calls:
  2133 ;;		_LCD_clear
  2134 ;;		_LCD_cursor
  2135 ;;		_LCD_send_command
  2136 ;;		_delay_ms
  2137 ;;		_delay_set_quartz
  2138 ;; This function is called by:
  2139 ;;		_board_initialization
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           	psect	text2
  2144  01452E                     __ptext2:
  2145                           	opt stack 0
  2146  01452E                     _LCD_initialize:
  2147                           	opt stack 21
  2148                           
  2149                           ;incstack = 0
  2150                           ;LCD_initialize@quartz_frequency stored from wreg
  2151  01452E  0100               	movlb	0	; () banked
  2152  014530  6F7C               	movwf	LCD_initialize@quartz_frequency& (0+255),b
  2153                           
  2154                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
  2155  014532  0100               	movlb	0	; () banked
  2156  014534  517C               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
  2157  014536  ECD2  F0A9         	call	_delay_set_quartz
  2158                           
  2159                           ;src\LCD_44780.c: 287: LATEbits.LATE2 = 0x00;
  2160  01453A  948D               	bcf	3981,2,c	;volatile
  2161                           
  2162                           ;src\LCD_44780.c: 288: LATCbits.LATC1 = 0x00;
  2163  01453C  928B               	bcf	3979,1,c	;volatile
  2164                           
  2165                           ;src\LCD_44780.c: 289: LATCbits.LATC0 = 0x00;
  2166  01453E  908B               	bcf	3979,0,c	;volatile
  2167                           
  2168                           ;src\LCD_44780.c: 291: delay_ms (100);
  2169  014540  0E00               	movlw	0
  2170  014542  0100               	movlb	0	; () banked
  2171  014544  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2172  014546  0E64               	movlw	100
  2173  014548  6F74               	movwf	delay_ms@value_ms& (0+255),b
  2174  01454A  ECBA  F0A8         	call	_delay_ms	;wreg free
  2175                           
  2176                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
  2177  01454E  0E00               	movlw	0
  2178  014550  0100               	movlb	0	; () banked
  2179  014552  6F76               	movwf	LCD_send_command@D2& (0+255),b
  2180  014554  0E01               	movlw	1
  2181  014556  0100               	movlb	0	; () banked
  2182  014558  6F77               	movwf	LCD_send_command@D1& (0+255),b
  2183  01455A  0E01               	movlw	1
  2184  01455C  0100               	movlb	0	; () banked
  2185  01455E  6F78               	movwf	LCD_send_command@D0& (0+255),b
  2186  014560  0E00               	movlw	0
  2187  014562  EC9D  F0A8         	call	_LCD_send_command
  2188                           
  2189                           ;src\LCD_44780.c: 293: delay_ms (100);
  2190  014566  0E00               	movlw	0
  2191  014568  0100               	movlb	0	; () banked
  2192  01456A  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2193  01456C  0E64               	movlw	100
  2194  01456E  6F74               	movwf	delay_ms@value_ms& (0+255),b
  2195  014570  ECBA  F0A8         	call	_delay_ms	;wreg free
  2196                           
  2197                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
  2198  014574  0E00               	movlw	0
  2199  014576  0100               	movlb	0	; () banked
  2200  014578  6F76               	movwf	LCD_send_command@D2& (0+255),b
  2201  01457A  0E01               	movlw	1
  2202  01457C  0100               	movlb	0	; () banked
  2203  01457E  6F77               	movwf	LCD_send_command@D1& (0+255),b
  2204  014580  0E01               	movlw	1
  2205  014582  0100               	movlb	0	; () banked
  2206  014584  6F78               	movwf	LCD_send_command@D0& (0+255),b
  2207  014586  0E00               	movlw	0
  2208  014588  EC9D  F0A8         	call	_LCD_send_command
  2209                           
  2210                           ;src\LCD_44780.c: 295: delay_ms (10);
  2211  01458C  0E00               	movlw	0
  2212  01458E  0100               	movlb	0	; () banked
  2213  014590  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2214  014592  0E0A               	movlw	10
  2215  014594  6F74               	movwf	delay_ms@value_ms& (0+255),b
  2216  014596  ECBA  F0A8         	call	_delay_ms	;wreg free
  2217                           
  2218                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
  2219  01459A  0E00               	movlw	0
  2220  01459C  0100               	movlb	0	; () banked
  2221  01459E  6F76               	movwf	LCD_send_command@D2& (0+255),b
  2222  0145A0  0E01               	movlw	1
  2223  0145A2  0100               	movlb	0	; () banked
  2224  0145A4  6F77               	movwf	LCD_send_command@D1& (0+255),b
  2225  0145A6  0E01               	movlw	1
  2226  0145A8  0100               	movlb	0	; () banked
  2227  0145AA  6F78               	movwf	LCD_send_command@D0& (0+255),b
  2228  0145AC  0E00               	movlw	0
  2229  0145AE  EC9D  F0A8         	call	_LCD_send_command
  2230                           
  2231                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
  2232  0145B2  0E00               	movlw	0
  2233  0145B4  0100               	movlb	0	; () banked
  2234  0145B6  6F76               	movwf	LCD_send_command@D2& (0+255),b
  2235  0145B8  0E01               	movlw	1
  2236  0145BA  0100               	movlb	0	; () banked
  2237  0145BC  6F77               	movwf	LCD_send_command@D1& (0+255),b
  2238  0145BE  0E00               	movlw	0
  2239  0145C0  0100               	movlb	0	; () banked
  2240  0145C2  6F78               	movwf	LCD_send_command@D0& (0+255),b
  2241  0145C4  0E00               	movlw	0
  2242  0145C6  EC9D  F0A8         	call	_LCD_send_command
  2243                           
  2244                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
  2245  0145CA  0E00               	movlw	0
  2246  0145CC  0100               	movlb	0	; () banked
  2247  0145CE  6F76               	movwf	LCD_send_command@D2& (0+255),b
  2248  0145D0  0E01               	movlw	1
  2249  0145D2  0100               	movlb	0	; () banked
  2250  0145D4  6F77               	movwf	LCD_send_command@D1& (0+255),b
  2251  0145D6  0E00               	movlw	0
  2252  0145D8  0100               	movlb	0	; () banked
  2253  0145DA  6F78               	movwf	LCD_send_command@D0& (0+255),b
  2254  0145DC  0E00               	movlw	0
  2255  0145DE  EC9D  F0A8         	call	_LCD_send_command
  2256                           
  2257                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
  2258  0145E2  0E00               	movlw	0
  2259  0145E4  0100               	movlb	0	; () banked
  2260  0145E6  6F76               	movwf	LCD_send_command@D2& (0+255),b
  2261  0145E8  0E00               	movlw	0
  2262  0145EA  0100               	movlb	0	; () banked
  2263  0145EC  6F77               	movwf	LCD_send_command@D1& (0+255),b
  2264  0145EE  0E00               	movlw	0
  2265  0145F0  0100               	movlb	0	; () banked
  2266  0145F2  6F78               	movwf	LCD_send_command@D0& (0+255),b
  2267  0145F4  0E01               	movlw	1
  2268  0145F6  EC9D  F0A8         	call	_LCD_send_command
  2269                           
  2270                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
  2271  0145FA  0E00               	movlw	0
  2272  0145FC  0100               	movlb	0	; () banked
  2273  0145FE  6F76               	movwf	LCD_send_command@D2& (0+255),b
  2274  014600  0E00               	movlw	0
  2275  014602  0100               	movlb	0	; () banked
  2276  014604  6F77               	movwf	LCD_send_command@D1& (0+255),b
  2277  014606  0E00               	movlw	0
  2278  014608  0100               	movlb	0	; () banked
  2279  01460A  6F78               	movwf	LCD_send_command@D0& (0+255),b
  2280  01460C  0E00               	movlw	0
  2281  01460E  EC9D  F0A8         	call	_LCD_send_command
  2282                           
  2283                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
  2284  014612  0E00               	movlw	0
  2285  014614  0100               	movlb	0	; () banked
  2286  014616  6F76               	movwf	LCD_send_command@D2& (0+255),b
  2287  014618  0E00               	movlw	0
  2288  01461A  0100               	movlb	0	; () banked
  2289  01461C  6F77               	movwf	LCD_send_command@D1& (0+255),b
  2290  01461E  0E00               	movlw	0
  2291  014620  0100               	movlb	0	; () banked
  2292  014622  6F78               	movwf	LCD_send_command@D0& (0+255),b
  2293  014624  0E01               	movlw	1
  2294  014626  EC9D  F0A8         	call	_LCD_send_command
  2295                           
  2296                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
  2297  01462A  0E00               	movlw	0
  2298  01462C  0100               	movlb	0	; () banked
  2299  01462E  6F76               	movwf	LCD_send_command@D2& (0+255),b
  2300  014630  0E00               	movlw	0
  2301  014632  0100               	movlb	0	; () banked
  2302  014634  6F77               	movwf	LCD_send_command@D1& (0+255),b
  2303  014636  0E00               	movlw	0
  2304  014638  0100               	movlb	0	; () banked
  2305  01463A  6F78               	movwf	LCD_send_command@D0& (0+255),b
  2306  01463C  0E00               	movlw	0
  2307  01463E  EC9D  F0A8         	call	_LCD_send_command
  2308                           
  2309                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
  2310  014642  0E00               	movlw	0
  2311  014644  0100               	movlb	0	; () banked
  2312  014646  6F76               	movwf	LCD_send_command@D2& (0+255),b
  2313  014648  0E00               	movlw	0
  2314  01464A  0100               	movlb	0	; () banked
  2315  01464C  6F77               	movwf	LCD_send_command@D1& (0+255),b
  2316  01464E  0E01               	movlw	1
  2317  014650  0100               	movlb	0	; () banked
  2318  014652  6F78               	movwf	LCD_send_command@D0& (0+255),b
  2319  014654  0E00               	movlw	0
  2320  014656  EC9D  F0A8         	call	_LCD_send_command
  2321                           
  2322                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
  2323  01465A  0E00               	movlw	0
  2324  01465C  0100               	movlb	0	; () banked
  2325  01465E  6F76               	movwf	LCD_send_command@D2& (0+255),b
  2326  014660  0E00               	movlw	0
  2327  014662  0100               	movlb	0	; () banked
  2328  014664  6F77               	movwf	LCD_send_command@D1& (0+255),b
  2329  014666  0E00               	movlw	0
  2330  014668  0100               	movlb	0	; () banked
  2331  01466A  6F78               	movwf	LCD_send_command@D0& (0+255),b
  2332  01466C  0E00               	movlw	0
  2333  01466E  EC9D  F0A8         	call	_LCD_send_command
  2334                           
  2335                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
  2336  014672  0E01               	movlw	1
  2337  014674  0100               	movlb	0	; () banked
  2338  014676  6F76               	movwf	LCD_send_command@D2& (0+255),b
  2339  014678  0E01               	movlw	1
  2340  01467A  0100               	movlb	0	; () banked
  2341  01467C  6F77               	movwf	LCD_send_command@D1& (0+255),b
  2342  01467E  0E00               	movlw	0
  2343  014680  0100               	movlb	0	; () banked
  2344  014682  6F78               	movwf	LCD_send_command@D0& (0+255),b
  2345  014684  0E00               	movlw	0
  2346  014686  EC9D  F0A8         	call	_LCD_send_command
  2347                           
  2348                           ;src\LCD_44780.c: 312: LCD_clear ();
  2349  01468A  EC41  F0A9         	call	_LCD_clear	;wreg free
  2350                           
  2351                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
  2352  01468E  0E00               	movlw	0
  2353  014690  0100               	movlb	0	; () banked
  2354  014692  6F7A               	movwf	LCD_cursor@blinking& (0+255),b
  2355  014694  0E00               	movlw	0
  2356  014696  EC28  F0A9         	call	_LCD_cursor
  2357  01469A  0012               	return		;funcret
  2358  01469C                     __end_of_LCD_initialize:
  2359                           	opt stack 0
  2360                           tblptru	equ	0xFF8
  2361                           tblptrh	equ	0xFF7
  2362                           tblptrl	equ	0xFF6
  2363                           tablat	equ	0xFF5
  2364                           intcon	equ	0xFF2
  2365                           postinc0	equ	0xFEE
  2366                           wreg	equ	0xFE8
  2367                           status	equ	0xFD8
  2368                           
  2369 ;; *************** function _delay_set_quartz *****************
  2370 ;; Defined at:
  2371 ;;		line 115 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;  frequency       1    wreg     unsigned char 
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;  frequency       1   14[BANK0 ] unsigned char 
  2376 ;; Return value:  Size  Location     Type
  2377 ;;		None               void
  2378 ;; Registers used:
  2379 ;;		wreg
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2386 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2388 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2389 ;;Total ram usage:        1 bytes
  2390 ;; Hardware stack levels used:    1
  2391 ;; Hardware stack levels required when called:    3
  2392 ;; This function calls:
  2393 ;;		Nothing
  2394 ;; This function is called by:
  2395 ;;		_LCD_initialize
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           	psect	text3
  2400  0153A4                     __ptext3:
  2401                           	opt stack 0
  2402  0153A4                     _delay_set_quartz:
  2403                           	opt stack 25
  2404                           
  2405                           ;incstack = 0
  2406                           ;delay_set_quartz@frequency stored from wreg
  2407  0153A4  0100               	movlb	0	; () banked
  2408  0153A6  6F6E               	movwf	delay_set_quartz@frequency& (0+255),b
  2409                           
  2410                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
  2411  0153A8  C06E  F0EF         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
  2412  0153AC  0012               	return		;funcret
  2413  0153AE                     __end_of_delay_set_quartz:
  2414                           	opt stack 0
  2415                           tblptru	equ	0xFF8
  2416                           tblptrh	equ	0xFF7
  2417                           tblptrl	equ	0xFF6
  2418                           tablat	equ	0xFF5
  2419                           intcon	equ	0xFF2
  2420                           postinc0	equ	0xFEE
  2421                           wreg	equ	0xFE8
  2422                           status	equ	0xFD8
  2423                           
  2424 ;; *************** function _LCD_cursor *****************
  2425 ;; Defined at:
  2426 ;;		line 266 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  2427 ;; Parameters:    Size  Location     Type
  2428 ;;  active          1    wreg     unsigned char 
  2429 ;;  blinking        1   26[BANK0 ] unsigned char 
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;  active          1   27[BANK0 ] unsigned char 
  2432 ;; Return value:  Size  Location     Type
  2433 ;;		None               void
  2434 ;; Registers used:
  2435 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2436 ;; Tracked objects:
  2437 ;;		On entry : 0/0
  2438 ;;		On exit  : 0/0
  2439 ;;		Unchanged: 0/0
  2440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2441 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2442 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2444 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2445 ;;Total ram usage:        2 bytes
  2446 ;; Hardware stack levels used:    1
  2447 ;; Hardware stack levels required when called:    7
  2448 ;; This function calls:
  2449 ;;		_LCD_send_command
  2450 ;; This function is called by:
  2451 ;;		_LCD_initialize
  2452 ;; This function uses a non-reentrant model
  2453 ;;
  2454                           
  2455                           	psect	text4
  2456  015250                     __ptext4:
  2457                           	opt stack 0
  2458  015250                     _LCD_cursor:
  2459                           	opt stack 21
  2460                           
  2461                           ;incstack = 0
  2462                           ;LCD_cursor@active stored from wreg
  2463  015250  0100               	movlb	0	; () banked
  2464  015252  6F7B               	movwf	LCD_cursor@active& (0+255),b
  2465                           
  2466                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
  2467  015254  0E00               	movlw	0
  2468  015256  0100               	movlb	0	; () banked
  2469  015258  6F76               	movwf	LCD_send_command@D2& (0+255),b
  2470  01525A  0E00               	movlw	0
  2471  01525C  0100               	movlb	0	; () banked
  2472  01525E  6F77               	movwf	LCD_send_command@D1& (0+255),b
  2473  015260  0E00               	movlw	0
  2474  015262  0100               	movlb	0	; () banked
  2475  015264  6F78               	movwf	LCD_send_command@D0& (0+255),b
  2476  015266  0E00               	movlw	0
  2477  015268  EC9D  F0A8         	call	_LCD_send_command
  2478                           
  2479                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
  2480  01526C  0E01               	movlw	1
  2481  01526E  0100               	movlb	0	; () banked
  2482  015270  6F76               	movwf	LCD_send_command@D2& (0+255),b
  2483  015272  C07B  F077         	movff	LCD_cursor@active,LCD_send_command@D1
  2484  015276  C07A  F078         	movff	LCD_cursor@blinking,LCD_send_command@D0
  2485  01527A  0E01               	movlw	1
  2486  01527C  EC9D  F0A8         	call	_LCD_send_command
  2487  015280  0012               	return		;funcret
  2488  015282                     __end_of_LCD_cursor:
  2489                           	opt stack 0
  2490                           tblptru	equ	0xFF8
  2491                           tblptrh	equ	0xFF7
  2492                           tblptrl	equ	0xFF6
  2493                           tablat	equ	0xFF5
  2494                           intcon	equ	0xFF2
  2495                           postinc0	equ	0xFEE
  2496                           wreg	equ	0xFE8
  2497                           status	equ	0xFD8
  2498                           
  2499 ;; *************** function _LCD_backlight *****************
  2500 ;; Defined at:
  2501 ;;		line 275 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;  active          1    wreg     unsigned char 
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;  active          1   14[BANK0 ] unsigned char 
  2506 ;; Return value:  Size  Location     Type
  2507 ;;		None               void
  2508 ;; Registers used:
  2509 ;;		wreg
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2516 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2518 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2519 ;;Total ram usage:        1 bytes
  2520 ;; Hardware stack levels used:    1
  2521 ;; Hardware stack levels required when called:    3
  2522 ;; This function calls:
  2523 ;;		Nothing
  2524 ;; This function is called by:
  2525 ;;		_board_initialization
  2526 ;; This function uses a non-reentrant model
  2527 ;;
  2528                           
  2529                           	psect	text5
  2530  015392                     __ptext5:
  2531                           	opt stack 0
  2532  015392                     _LCD_backlight:
  2533                           	opt stack 26
  2534                           
  2535                           ;incstack = 0
  2536                           ;LCD_backlight@active stored from wreg
  2537  015392  0100               	movlb	0	; () banked
  2538  015394  6F6E               	movwf	LCD_backlight@active& (0+255),b
  2539                           
  2540                           ;src\LCD_44780.c: 277: LATCbits.LATC4 = active;
  2541  015396  0100               	movlb	0	; () banked
  2542  015398  B16E               	btfsc	LCD_backlight@active& (0+255),0,b
  2543  01539A  D002               	bra	u10835
  2544  01539C  988B               	bcf	3979,4,c	;volatile
  2545  01539E  D001               	bra	u10836
  2546  0153A0                     u10835:
  2547  0153A0  888B               	bsf	3979,4,c	;volatile
  2548  0153A2                     u10836:
  2549  0153A2  0012               	return		;funcret
  2550  0153A4                     __end_of_LCD_backlight:
  2551                           	opt stack 0
  2552                           tblptru	equ	0xFF8
  2553                           tblptrh	equ	0xFF7
  2554                           tblptrl	equ	0xFF6
  2555                           tablat	equ	0xFF5
  2556                           intcon	equ	0xFF2
  2557                           postinc0	equ	0xFEE
  2558                           wreg	equ	0xFE8
  2559                           status	equ	0xFD8
  2560                           
  2561 ;; *************** function _CANInitialize *****************
  2562 ;; Defined at:
  2563 ;;		line 219 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;  propSeg         1    wreg     unsigned char 
  2566 ;;  phaseSeg1       1   28[BANK0 ] unsigned char 
  2567 ;;  phaseSeg2       1   29[BANK0 ] unsigned char 
  2568 ;;  SJW             1   30[BANK0 ] unsigned char 
  2569 ;;  BRP             1   31[BANK0 ] unsigned char 
  2570 ;;  flags           1   32[BANK0 ] enum E16887
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;  propSeg         1   37[BANK0 ] unsigned char 
  2573 ;;  FilterConfig    1   39[BANK0 ] unsigned char 
  2574 ;;  FilterConfig    1   38[BANK0 ] unsigned char 
  2575 ;; Return value:  Size  Location     Type
  2576 ;;		None               void
  2577 ;; Registers used:
  2578 ;;		wreg, status,2, status,0, cstack
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2584 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2585 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2586 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2587 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2588 ;;Total ram usage:       12 bytes
  2589 ;; Hardware stack levels used:    1
  2590 ;; Hardware stack levels required when called:    4
  2591 ;; This function calls:
  2592 ;;		_CANOperationMode
  2593 ;;		_CANSetFilter
  2594 ;;		_CANSetMask
  2595 ;; This function is called by:
  2596 ;;		_board_initialization
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599                           
  2600                           	psect	text6
  2601  013EB2                     __ptext6:
  2602                           	opt stack 0
  2603  013EB2                     _CANInitialize:
  2604                           	opt stack 25
  2605                           
  2606                           ;incstack = 0
  2607                           ;CANInitialize@propSeg stored from wreg
  2608  013EB2  0100               	movlb	0	; () banked
  2609  013EB4  6F85               	movwf	CANInitialize@propSeg& (0+255),b
  2610                           
  2611                           ;inc\CANlib.h: 221: BYTE FilterConfig1;
  2612                           ;inc\CANlib.h: 222: BYTE FilterConfig2;
  2613                           ;inc\CANlib.h: 224: CANOperationMode(CAN_OP_MODE_CONFIG);
  2614  013EB6  0E80               	movlw	128
  2615  013EB8  ECB3  F0A9         	call	_CANOperationMode
  2616                           
  2617                           ;inc\CANlib.h: 226: BRGCON1 = 0x00;
  2618  013EBC  0E00               	movlw	0
  2619  013EBE  6E70               	movwf	3952,c	;volatile
  2620                           
  2621                           ;inc\CANlib.h: 227: BRGCON2 = 0x00;
  2622  013EC0  0E00               	movlw	0
  2623  013EC2  6E71               	movwf	3953,c	;volatile
  2624                           
  2625                           ;inc\CANlib.h: 228: BRGCON3 = 0x00;
  2626  013EC4  0E00               	movlw	0
  2627  013EC6  6E72               	movwf	3954,c	;volatile
  2628                           
  2629                           ;inc\CANlib.h: 230: SJW= SJW << 6;
  2630  013EC8  0100               	movlb	0	; () banked
  2631  013ECA  417E               	rrncf	CANInitialize@SJW& (0+255),w,b
  2632  013ECC  42E8               	rrncf	wreg,f,c
  2633  013ECE  0BC0               	andlw	192
  2634  013ED0  0100               	movlb	0	; () banked
  2635  013ED2  6F7E               	movwf	CANInitialize@SJW& (0+255),b
  2636                           
  2637                           ; BSR set to: 0
  2638                           ;inc\CANlib.h: 231: BRGCON1 |= SJW;
  2639  013ED4  0100               	movlb	0	; () banked
  2640  013ED6  517E               	movf	CANInitialize@SJW& (0+255),w,b
  2641  013ED8  1270               	iorwf	3952,f,c	;volatile
  2642                           
  2643                           ; BSR set to: 0
  2644                           ;inc\CANlib.h: 232: BRGCON1 |= BRP;
  2645  013EDA  0100               	movlb	0	; () banked
  2646  013EDC  517F               	movf	CANInitialize@BRP& (0+255),w,b
  2647  013EDE  1270               	iorwf	3952,f,c	;volatile
  2648                           
  2649                           ; BSR set to: 0
  2650                           ;inc\CANlib.h: 234: BRGCON2 |= propSeg;
  2651  013EE0  0100               	movlb	0	; () banked
  2652  013EE2  5185               	movf	CANInitialize@propSeg& (0+255),w,b
  2653  013EE4  1271               	iorwf	3953,f,c	;volatile
  2654                           
  2655                           ; BSR set to: 0
  2656                           ;inc\CANlib.h: 235: phaseSeg1 = phaseSeg1 <<3;
  2657  013EE6  0100               	movlb	0	; () banked
  2658  013EE8  397C               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  2659  013EEA  42E8               	rrncf	wreg,f,c
  2660  013EEC  0BF8               	andlw	248
  2661  013EEE  0100               	movlb	0	; () banked
  2662  013EF0  6F7C               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2663                           
  2664                           ; BSR set to: 0
  2665                           ;inc\CANlib.h: 236: BRGCON2 |= phaseSeg1;
  2666  013EF2  0100               	movlb	0	; () banked
  2667  013EF4  517C               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  2668  013EF6  1271               	iorwf	3953,f,c	;volatile
  2669                           
  2670                           ; BSR set to: 0
  2671                           ;inc\CANlib.h: 238: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  2672  013EF8  0100               	movlb	0	; () banked
  2673  013EFA  A580               	btfss	CANInitialize@flags& (0+255),2,b
  2674                           
  2675                           ; BSR set to: 0
  2676                           ;inc\CANlib.h: 239: BRGCON2bits.SAM= 1;
  2677  013EFC  8C71               	bsf	3953,6,c	;volatile
  2678                           
  2679                           ; BSR set to: 0
  2680                           ;inc\CANlib.h: 241: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  2681  013EFE  0100               	movlb	0	; () banked
  2682  013F00  B180               	btfsc	CANInitialize@flags& (0+255),0,b
  2683                           
  2684                           ; BSR set to: 0
  2685                           ;inc\CANlib.h: 242: BRGCON2bits.SEG2PHTS = 1;
  2686  013F02  8E71               	bsf	3953,7,c	;volatile
  2687                           
  2688                           ; BSR set to: 0
  2689                           ;inc\CANlib.h: 244: BRGCON3 |= phaseSeg2;
  2690                           
  2691                           ; BSR set to: 0
  2692  013F04  0100               	movlb	0	; () banked
  2693  013F06  517D               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  2694  013F08  1272               	iorwf	3954,f,c	;volatile
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;inc\CANlib.h: 246: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  2698  013F0A  0100               	movlb	0	; () banked
  2699  013F0C  B380               	btfsc	CANInitialize@flags& (0+255),1,b
  2700                           
  2701                           ; BSR set to: 0
  2702                           ;inc\CANlib.h: 247: BRGCON3bits.WAKFIL = 1;
  2703  013F0E  8C72               	bsf	3954,6,c	;volatile
  2704                           
  2705                           ; BSR set to: 0
  2706                           ;inc\CANlib.h: 252: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  2707                           
  2708                           ; BSR set to: 0
  2709  013F10  0100               	movlb	0	; () banked
  2710  013F12  5180               	movf	CANInitialize@flags& (0+255),w,b
  2711  013F14  0B60               	andlw	96
  2712  013F16  6E60               	movwf	3936,c	;volatile
  2713                           
  2714                           ;inc\CANlib.h: 253: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  2715  013F18  0100               	movlb	0	; () banked
  2716  013F1A  5180               	movf	CANInitialize@flags& (0+255),w,b
  2717  013F1C  0B10               	andlw	16
  2718  013F1E  0AFF               	xorlw	255
  2719  013F20  B4D8               	btfsc	status,2,c
  2720                           
  2721                           ; BSR set to: 0
  2722                           ;inc\CANlib.h: 254: RXB0CONbits.RXB0DBEN = 1;
  2723  013F22  8460               	bsf	3936,2,c	;volatile
  2724                           
  2725                           ; BSR set to: 0
  2726                           ;inc\CANlib.h: 256: RXB1CON = RXB0CON;
  2727  013F24  CF60 FF50          	movff	3936,3920	;volatile
  2728                           
  2729                           ; BSR set to: 0
  2730                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  2731  013F28  0E00               	movlw	0
  2732  013F2A  0100               	movlb	0	; () banked
  2733  013F2C  6F6E               	movwf	CANSetMask@mask& (0+255),b
  2734  013F2E  0E00               	movlw	0
  2735  013F30  6F6F               	movwf	(CANSetMask@mask+1)& (0+255),b
  2736  013F32  0E00               	movlw	0
  2737  013F34  6F70               	movwf	(CANSetMask@mask+2)& (0+255),b
  2738  013F36  0E00               	movlw	0
  2739  013F38  6F71               	movwf	(CANSetMask@mask+3)& (0+255),b
  2740  013F3A  0EF7               	movlw	247
  2741  013F3C  0100               	movlb	0	; () banked
  2742  013F3E  6F72               	movwf	CANSetMask@type& (0+255),b
  2743  013F40  0E01               	movlw	1
  2744  013F42  EC28  F09B         	call	_CANSetMask
  2745                           
  2746                           ;inc\CANlib.h: 261: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  2747  013F46  0E00               	movlw	0
  2748  013F48  0100               	movlb	0	; () banked
  2749  013F4A  6F6E               	movwf	CANSetMask@mask& (0+255),b
  2750  013F4C  0E00               	movlw	0
  2751  013F4E  6F6F               	movwf	(CANSetMask@mask+1)& (0+255),b
  2752  013F50  0E00               	movlw	0
  2753  013F52  6F70               	movwf	(CANSetMask@mask+2)& (0+255),b
  2754  013F54  0E00               	movlw	0
  2755  013F56  6F71               	movwf	(CANSetMask@mask+3)& (0+255),b
  2756  013F58  0EF7               	movlw	247
  2757  013F5A  0100               	movlb	0	; () banked
  2758  013F5C  6F72               	movwf	CANSetMask@type& (0+255),b
  2759  013F5E  0E02               	movlw	2
  2760  013F60  EC28  F09B         	call	_CANSetMask
  2761                           
  2762                           ;inc\CANlib.h: 264: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  2763  013F64  D00F               	goto	l7800
  2764  013F66                     l7794:
  2765                           
  2766                           ;inc\CANlib.h: 267: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  2767  013F66  0EF7               	movlw	247
  2768  013F68  0100               	movlb	0	; () banked
  2769  013F6A  6F86               	movwf	CANInitialize@FilterConfig1& (0+255),b
  2770  013F6C  D007               	goto	l7796
  2771  013F6E                     l366:
  2772                           
  2773                           ; BSR set to: 0
  2774                           ;inc\CANlib.h: 272: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2775  013F6E  0100               	movlb	0	; () banked
  2776  013F70  6986               	setf	CANInitialize@FilterConfig1& (0+255),b
  2777                           
  2778                           ;inc\CANlib.h: 273: FilterConfig2 = CAN_CONFIG_STD_MSG;
  2779  013F72  0100               	movlb	0	; () banked
  2780  013F74  6987               	setf	CANInitialize@FilterConfig2& (0+255),b
  2781                           
  2782                           ;inc\CANlib.h: 274: break;
  2783  013F76  D028               	goto	l7802
  2784  013F78                     l367:
  2785                           
  2786                           ; BSR set to: 0
  2787                           ;inc\CANlib.h: 276: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2788  013F78  0100               	movlb	0	; () banked
  2789  013F7A  6986               	setf	CANInitialize@FilterConfig1& (0+255),b
  2790  013F7C                     l7796:
  2791                           
  2792                           ; BSR set to: 0
  2793                           ;inc\CANlib.h: 277: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  2794  013F7C  0EF7               	movlw	247
  2795  013F7E  0100               	movlb	0	; () banked
  2796  013F80  6F87               	movwf	CANInitialize@FilterConfig2& (0+255),b
  2797                           
  2798                           ; BSR set to: 0
  2799                           ;inc\CANlib.h: 279: }
  2800                           
  2801                           ;inc\CANlib.h: 278: break;
  2802  013F82  D022               	goto	l7802
  2803  013F84                     l7800:
  2804  013F84  0E9F               	movlw	159
  2805  013F86  0100               	movlb	0	; () banked
  2806  013F88  6F81               	movwf	??_CANInitialize& (0+255),b
  2807  013F8A  0EFF               	movlw	255
  2808  013F8C  0100               	movlb	0	; () banked
  2809  013F8E  6F82               	movwf	(??_CANInitialize+1)& (0+255),b
  2810  013F90  0100               	movlb	0	; () banked
  2811  013F92  5180               	movf	CANInitialize@flags& (0+255),w,b
  2812  013F94  0B60               	andlw	96
  2813  013F96  0100               	movlb	0	; () banked
  2814  013F98  6F83               	movwf	(??_CANInitialize+2)& (0+255),b
  2815  013F9A  6B84               	clrf	(??_CANInitialize+3)& (0+255),b
  2816  013F9C  0100               	movlb	0	; () banked
  2817  013F9E  5181               	movf	??_CANInitialize& (0+255),w,b
  2818  013FA0  0100               	movlb	0	; () banked
  2819  013FA2  1383               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  2820  013FA4  0100               	movlb	0	; () banked
  2821  013FA6  5182               	movf	(??_CANInitialize+1)& (0+255),w,b
  2822  013FA8  0100               	movlb	0	; () banked
  2823  013FAA  1384               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  2824                           
  2825                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2826                           ; Switch size 1, requested type "space"
  2827                           ; Number of cases is 1, Range of values is 0 to 0
  2828                           ; switch strategies available:
  2829                           ; Name         Instructions Cycles
  2830                           ; simple_byte            4     3 (average)
  2831                           ;	Chosen strategy is simple_byte
  2832  013FAC  0100               	movlb	0	; () banked
  2833  013FAE  5184               	movf	(??_CANInitialize+3)& (0+255),w,b
  2834  013FB0  0A00               	xorlw	0	; case 0
  2835  013FB2  A4D8               	btfss	status,2,c
  2836  013FB4  D7E1               	goto	l367
  2837                           
  2838                           ; BSR set to: 0
  2839                           ; Switch size 1, requested type "space"
  2840                           ; Number of cases is 2, Range of values is 191 to 223
  2841                           ; switch strategies available:
  2842                           ; Name         Instructions Cycles
  2843                           ; simple_byte            7     4 (average)
  2844                           ;	Chosen strategy is simple_byte
  2845  013FB6  0100               	movlb	0	; () banked
  2846  013FB8  5183               	movf	(??_CANInitialize+2)& (0+255),w,b
  2847  013FBA  0ABF               	xorlw	191	; case 191
  2848  013FBC  B4D8               	btfsc	status,2,c
  2849  013FBE  D7D7               	goto	l366
  2850  013FC0  0A60               	xorlw	96	; case 223
  2851  013FC2  B4D8               	btfsc	status,2,c
  2852  013FC4  D7D0               	goto	l7794
  2853  013FC6  D7D8               	goto	l367
  2854  013FC8                     l7802:
  2855                           
  2856                           ; BSR set to: 0
  2857                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  2858  013FC8  0E00               	movlw	0
  2859  013FCA  0100               	movlb	0	; () banked
  2860  013FCC  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2861  013FCE  0E00               	movlw	0
  2862  013FD0  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2863  013FD2  0E00               	movlw	0
  2864  013FD4  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2865  013FD6  0E00               	movlw	0
  2866  013FD8  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2867  013FDA  C086  F072         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2868  013FDE  0E00               	movlw	0
  2869  013FE0  EC00  F080         	call	_CANSetFilter
  2870                           
  2871                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  2872  013FE4  0E00               	movlw	0
  2873  013FE6  0100               	movlb	0	; () banked
  2874  013FE8  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2875  013FEA  0E00               	movlw	0
  2876  013FEC  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2877  013FEE  0E00               	movlw	0
  2878  013FF0  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2879  013FF2  0E00               	movlw	0
  2880  013FF4  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2881  013FF6  C086  F072         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2882  013FFA  0E01               	movlw	1
  2883  013FFC  EC00  F080         	call	_CANSetFilter
  2884                           
  2885                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  2886  014000  0E00               	movlw	0
  2887  014002  0100               	movlb	0	; () banked
  2888  014004  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2889  014006  0E00               	movlw	0
  2890  014008  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2891  01400A  0E00               	movlw	0
  2892  01400C  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2893  01400E  0E00               	movlw	0
  2894  014010  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2895  014012  C087  F072         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2896  014016  0E02               	movlw	2
  2897  014018  EC00  F080         	call	_CANSetFilter
  2898                           
  2899                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  2900  01401C  0E00               	movlw	0
  2901  01401E  0100               	movlb	0	; () banked
  2902  014020  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2903  014022  0E00               	movlw	0
  2904  014024  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2905  014026  0E00               	movlw	0
  2906  014028  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2907  01402A  0E00               	movlw	0
  2908  01402C  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2909  01402E  C087  F072         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2910  014032  0E03               	movlw	3
  2911  014034  EC00  F080         	call	_CANSetFilter
  2912                           
  2913                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  2914  014038  0E00               	movlw	0
  2915  01403A  0100               	movlb	0	; () banked
  2916  01403C  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2917  01403E  0E00               	movlw	0
  2918  014040  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2919  014042  0E00               	movlw	0
  2920  014044  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2921  014046  0E00               	movlw	0
  2922  014048  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2923  01404A  C087  F072         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2924  01404E  0E04               	movlw	4
  2925  014050  EC00  F080         	call	_CANSetFilter
  2926                           
  2927                           ;inc\CANlib.h: 286: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  2928  014054  0E00               	movlw	0
  2929  014056  0100               	movlb	0	; () banked
  2930  014058  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2931  01405A  0E00               	movlw	0
  2932  01405C  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2933  01405E  0E00               	movlw	0
  2934  014060  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2935  014062  0E00               	movlw	0
  2936  014064  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2937  014066  C087  F072         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2938  01406A  0E05               	movlw	5
  2939  01406C  EC00  F080         	call	_CANSetFilter
  2940                           
  2941                           ;inc\CANlib.h: 288: CANOperationMode(CAN_OP_MODE_NORMAL);
  2942  014070  0E00               	movlw	0
  2943  014072  ECB3  F0A9         	call	_CANOperationMode
  2944  014076  0012               	return		;funcret
  2945  014078                     __end_of_CANInitialize:
  2946                           	opt stack 0
  2947                           tblptru	equ	0xFF8
  2948                           tblptrh	equ	0xFF7
  2949                           tblptrl	equ	0xFF6
  2950                           tablat	equ	0xFF5
  2951                           intcon	equ	0xFF2
  2952                           postinc0	equ	0xFEE
  2953                           wreg	equ	0xFE8
  2954                           status	equ	0xFD8
  2955                           
  2956 ;; *************** function _CANSetMask *****************
  2957 ;; Defined at:
  2958 ;;		line 641 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2959 ;; Parameters:    Size  Location     Type
  2960 ;;  numBuffer       1    wreg     enum E16921
  2961 ;;  mask            4   14[BANK0 ] unsigned long 
  2962 ;;  type            1   18[BANK0 ] enum E16887
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;  numBuffer       1   23[BANK0 ] enum E16921
  2965 ;;  tamp            4   24[BANK0 ] unsigned long 
  2966 ;; Return value:  Size  Location     Type
  2967 ;;		None               void
  2968 ;; Registers used:
  2969 ;;		wreg, status,2, status,0
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2975 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2976 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2977 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2978 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2979 ;;Total ram usage:       14 bytes
  2980 ;; Hardware stack levels used:    1
  2981 ;; Hardware stack levels required when called:    3
  2982 ;; This function calls:
  2983 ;;		Nothing
  2984 ;; This function is called by:
  2985 ;;		_CANInitialize
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989                           	psect	text7
  2990  013650                     __ptext7:
  2991                           	opt stack 0
  2992  013650                     _CANSetMask:
  2993                           	opt stack 25
  2994                           
  2995                           ;incstack = 0
  2996                           ;CANSetMask@numBuffer stored from wreg
  2997  013650  0100               	movlb	0	; () banked
  2998  013652  6F77               	movwf	CANSetMask@numBuffer& (0+255),b
  2999                           
  3000                           ;inc\CANlib.h: 644: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3001  013654  0100               	movlb	0	; () banked
  3002  013656  0577               	decf	CANSetMask@numBuffer& (0+255),w,b
  3003  013658  A4D8               	btfss	status,2,c
  3004  01365A  D056               	goto	l6992
  3005                           
  3006                           ; BSR set to: 0
  3007  01365C  0100               	movlb	0	; () banked
  3008  01365E  2972               	incf	CANSetMask@type& (0+255),w,b
  3009  013660  A4D8               	btfss	status,2,c
  3010  013662  D052               	goto	l6992
  3011                           
  3012                           ; BSR set to: 0
  3013                           ;inc\CANlib.h: 645: {
  3014                           ;inc\CANlib.h: 646: tamp = (mask >> 3);
  3015  013664  C06E  F073         	movff	CANSetMask@mask,??_CANSetMask
  3016  013668  C06F  F074         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3017  01366C  C070  F075         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3018  013670  C071  F076         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3019  013674  0E04               	movlw	4
  3020  013676  D006               	goto	u8870
  3021  013678                     u8875:
  3022  013678  0100               	movlb	0	; () banked
  3023  01367A  90D8               	bcf	status,0,c
  3024  01367C  3376               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3025  01367E  3375               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3026  013680  3374               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3027  013682  3373               	rrcf	??_CANSetMask& (0+255),f,b
  3028  013684                     u8870:
  3029  013684  2EE8               	decfsz	wreg,f,c
  3030  013686  D7F8               	goto	u8875
  3031  013688  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  3032  01368C  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3033  013690  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3034  013694  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3035                           
  3036                           ; BSR set to: 0
  3037                           ;inc\CANlib.h: 647: tamp = tamp & 0x000000FF;
  3038  013698  0100               	movlb	0	; () banked
  3039  01369A  5178               	movf	CANSetMask@tamp& (0+255),w,b
  3040  01369C  0100               	movlb	0	; () banked
  3041  01369E  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3042  0136A0  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3043  0136A2  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3044  0136A4  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3045                           
  3046                           ; BSR set to: 0
  3047                           ;inc\CANlib.h: 648: RXM0SIDH = (unsigned char) tamp;
  3048  0136A6  C078  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3049                           
  3050                           ; BSR set to: 0
  3051                           ;inc\CANlib.h: 650: tamp = mask & 0x00000007;
  3052  0136AA  0E07               	movlw	7
  3053  0136AC  0100               	movlb	0	; () banked
  3054  0136AE  156E               	andwf	CANSetMask@mask& (0+255),w,b
  3055  0136B0  0100               	movlb	0	; () banked
  3056  0136B2  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3057  0136B4  0E00               	movlw	0
  3058  0136B6  0100               	movlb	0	; () banked
  3059  0136B8  156F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3060  0136BA  0100               	movlb	0	; () banked
  3061  0136BC  6F79               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3062  0136BE  0E00               	movlw	0
  3063  0136C0  0100               	movlb	0	; () banked
  3064  0136C2  1570               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3065  0136C4  0100               	movlb	0	; () banked
  3066  0136C6  6F7A               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3067  0136C8  0E00               	movlw	0
  3068  0136CA  0100               	movlb	0	; () banked
  3069  0136CC  1571               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3070  0136CE  0100               	movlb	0	; () banked
  3071  0136D0  6F7B               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3072                           
  3073                           ; BSR set to: 0
  3074                           ;inc\CANlib.h: 651: tamp = tamp << 5;
  3075  0136D2  C078  F073         	movff	CANSetMask@tamp,??_CANSetMask
  3076  0136D6  C079  F074         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3077  0136DA  C07A  F075         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3078  0136DE  C07B  F076         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3079  0136E2  0E05               	movlw	5
  3080  0136E4                     u8885:
  3081  0136E4  90D8               	bcf	status,0,c
  3082  0136E6  0100               	movlb	0	; () banked
  3083  0136E8  3773               	rlcf	??_CANSetMask& (0+255),f,b
  3084  0136EA  3774               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3085  0136EC  3775               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3086  0136EE  3776               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3087  0136F0  2EE8               	decfsz	wreg,f,c
  3088  0136F2  D7F8               	goto	u8885
  3089  0136F4  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  3090  0136F8  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3091  0136FC  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3092  013700  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3093                           
  3094                           ; BSR set to: 0
  3095                           ;inc\CANlib.h: 652: RXM0SIDL = (unsigned char) tamp;
  3096  013704  C078  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3097  013708                     l6992:
  3098                           
  3099                           ; BSR set to: 0
  3100                           ;inc\CANlib.h: 653: }
  3101                           ;inc\CANlib.h: 655: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3102  013708  0E02               	movlw	2
  3103  01370A  0100               	movlb	0	; () banked
  3104  01370C  1977               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3105  01370E  A4D8               	btfss	status,2,c
  3106  013710  D056               	goto	l7008
  3107                           
  3108                           ; BSR set to: 0
  3109  013712  0100               	movlb	0	; () banked
  3110  013714  2972               	incf	CANSetMask@type& (0+255),w,b
  3111  013716  A4D8               	btfss	status,2,c
  3112  013718  D052               	goto	l7008
  3113                           
  3114                           ; BSR set to: 0
  3115                           ;inc\CANlib.h: 656: {
  3116                           ;inc\CANlib.h: 657: tamp = (mask >> 3);
  3117  01371A  C06E  F073         	movff	CANSetMask@mask,??_CANSetMask
  3118  01371E  C06F  F074         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3119  013722  C070  F075         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3120  013726  C071  F076         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3121  01372A  0E04               	movlw	4
  3122  01372C  D006               	goto	u8910
  3123  01372E                     u8915:
  3124  01372E  0100               	movlb	0	; () banked
  3125  013730  90D8               	bcf	status,0,c
  3126  013732  3376               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3127  013734  3375               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3128  013736  3374               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3129  013738  3373               	rrcf	??_CANSetMask& (0+255),f,b
  3130  01373A                     u8910:
  3131  01373A  2EE8               	decfsz	wreg,f,c
  3132  01373C  D7F8               	goto	u8915
  3133  01373E  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  3134  013742  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3135  013746  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3136  01374A  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3137                           
  3138                           ; BSR set to: 0
  3139                           ;inc\CANlib.h: 658: tamp = tamp & 0x000000FF;
  3140  01374E  0100               	movlb	0	; () banked
  3141  013750  5178               	movf	CANSetMask@tamp& (0+255),w,b
  3142  013752  0100               	movlb	0	; () banked
  3143  013754  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3144  013756  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3145  013758  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3146  01375A  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3147                           
  3148                           ; BSR set to: 0
  3149                           ;inc\CANlib.h: 659: RXM1SIDH = (unsigned char) tamp;
  3150  01375C  C078  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3151                           
  3152                           ; BSR set to: 0
  3153                           ;inc\CANlib.h: 661: tamp = mask & 0x00000007;
  3154  013760  0E07               	movlw	7
  3155  013762  0100               	movlb	0	; () banked
  3156  013764  156E               	andwf	CANSetMask@mask& (0+255),w,b
  3157  013766  0100               	movlb	0	; () banked
  3158  013768  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3159  01376A  0E00               	movlw	0
  3160  01376C  0100               	movlb	0	; () banked
  3161  01376E  156F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3162  013770  0100               	movlb	0	; () banked
  3163  013772  6F79               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3164  013774  0E00               	movlw	0
  3165  013776  0100               	movlb	0	; () banked
  3166  013778  1570               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3167  01377A  0100               	movlb	0	; () banked
  3168  01377C  6F7A               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3169  01377E  0E00               	movlw	0
  3170  013780  0100               	movlb	0	; () banked
  3171  013782  1571               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3172  013784  0100               	movlb	0	; () banked
  3173  013786  6F7B               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;inc\CANlib.h: 662: tamp = tamp << 5;
  3177  013788  C078  F073         	movff	CANSetMask@tamp,??_CANSetMask
  3178  01378C  C079  F074         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3179  013790  C07A  F075         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3180  013794  C07B  F076         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3181  013798  0E05               	movlw	5
  3182  01379A                     u8925:
  3183  01379A  90D8               	bcf	status,0,c
  3184  01379C  0100               	movlb	0	; () banked
  3185  01379E  3773               	rlcf	??_CANSetMask& (0+255),f,b
  3186  0137A0  3774               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3187  0137A2  3775               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3188  0137A4  3776               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3189  0137A6  2EE8               	decfsz	wreg,f,c
  3190  0137A8  D7F8               	goto	u8925
  3191  0137AA  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  3192  0137AE  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3193  0137B2  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3194  0137B6  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3195                           
  3196                           ; BSR set to: 0
  3197                           ;inc\CANlib.h: 663: RXM1SIDL = (unsigned char) tamp;
  3198  0137BA  C078  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  3199  0137BE                     l7008:
  3200                           
  3201                           ; BSR set to: 0
  3202                           ;inc\CANlib.h: 664: }
  3203                           ;inc\CANlib.h: 666: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  3204  0137BE  0100               	movlb	0	; () banked
  3205  0137C0  0577               	decf	CANSetMask@numBuffer& (0+255),w,b
  3206  0137C2  A4D8               	btfss	status,2,c
  3207  0137C4  D087               	goto	l7040
  3208                           
  3209                           ; BSR set to: 0
  3210  0137C6  0EF7               	movlw	247
  3211  0137C8  0100               	movlb	0	; () banked
  3212  0137CA  1972               	xorwf	CANSetMask@type& (0+255),w,b
  3213  0137CC  A4D8               	btfss	status,2,c
  3214  0137CE  D082               	goto	l7040
  3215                           
  3216                           ; BSR set to: 0
  3217                           ;inc\CANlib.h: 667: {
  3218                           ;inc\CANlib.h: 668: tamp = mask & 0x000000FF;
  3219  0137D0  0100               	movlb	0	; () banked
  3220  0137D2  516E               	movf	CANSetMask@mask& (0+255),w,b
  3221  0137D4  0100               	movlb	0	; () banked
  3222  0137D6  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3223  0137D8  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3224  0137DA  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3225  0137DC  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3226                           
  3227                           ; BSR set to: 0
  3228                           ;inc\CANlib.h: 669: RXM0EIDL = (unsigned char) tamp;
  3229  0137DE  C078  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  3230                           
  3231                           ; BSR set to: 0
  3232                           ;inc\CANlib.h: 671: tamp = mask & 0x0000FF00;
  3233  0137E2  0E00               	movlw	0
  3234  0137E4  0100               	movlb	0	; () banked
  3235  0137E6  156E               	andwf	CANSetMask@mask& (0+255),w,b
  3236  0137E8  0100               	movlb	0	; () banked
  3237  0137EA  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3238  0137EC  0EFF               	movlw	255
  3239  0137EE  0100               	movlb	0	; () banked
  3240  0137F0  156F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3241  0137F2  0100               	movlb	0	; () banked
  3242  0137F4  6F79               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3243  0137F6  0E00               	movlw	0
  3244  0137F8  0100               	movlb	0	; () banked
  3245  0137FA  1570               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3246  0137FC  0100               	movlb	0	; () banked
  3247  0137FE  6F7A               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3248  013800  0E00               	movlw	0
  3249  013802  0100               	movlb	0	; () banked
  3250  013804  1571               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3251  013806  0100               	movlb	0	; () banked
  3252  013808  6F7B               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;inc\CANlib.h: 672: tamp = tamp >> 8;
  3256  01380A  C078  F073         	movff	CANSetMask@tamp,??_CANSetMask
  3257  01380E  C079  F074         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3258  013812  C07A  F075         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3259  013816  C07B  F076         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3260  01381A  C074  F073         	movff	??_CANSetMask+1,??_CANSetMask
  3261  01381E  C075  F074         	movff	??_CANSetMask+2,??_CANSetMask+1
  3262  013822  C076  F075         	movff	??_CANSetMask+3,??_CANSetMask+2
  3263  013826  0100               	movlb	0	; () banked
  3264  013828  6B76               	clrf	(??_CANSetMask+3)& (0+255),b
  3265  01382A  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  3266  01382E  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3267  013832  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3268  013836  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3269                           
  3270                           ; BSR set to: 0
  3271                           ;inc\CANlib.h: 673: RXM0EIDH = (unsigned char) tamp;
  3272  01383A  C078  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  3273                           
  3274                           ; BSR set to: 0
  3275                           ;inc\CANlib.h: 675: if (mask & 0x00010000)
  3276  01383E  0100               	movlb	0	; () banked
  3277  013840  A170               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3278  013842  D003               	goto	l440
  3279                           
  3280                           ; BSR set to: 0
  3281                           ;inc\CANlib.h: 676: RXM0SIDLbits.EID16 = 0x01;
  3282  013844  010F               	movlb	15	; () banked
  3283  013846  8119               	bsf	25,0,b	;volatile
  3284  013848  D002               	goto	l441
  3285  01384A                     l440:
  3286                           
  3287                           ; BSR set to: 0
  3288                           ;inc\CANlib.h: 677: else
  3289                           ;inc\CANlib.h: 678: RXM0SIDLbits.EID16 = 0x00;
  3290  01384A  010F               	movlb	15	; () banked
  3291  01384C  9119               	bcf	25,0,b	;volatile
  3292  01384E                     l441:
  3293                           
  3294                           ; BSR set to: 15
  3295                           ;inc\CANlib.h: 680: if (mask & 0x00020000)
  3296  01384E  0100               	movlb	0	; () banked
  3297  013850  A370               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3298  013852  D003               	goto	l442
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;inc\CANlib.h: 681: RXM0SIDLbits.EID17 = 0x01;
  3302  013854  010F               	movlb	15	; () banked
  3303  013856  8319               	bsf	25,1,b	;volatile
  3304  013858  D002               	goto	l443
  3305  01385A                     l442:
  3306                           
  3307                           ; BSR set to: 0
  3308                           ;inc\CANlib.h: 682: else
  3309                           ;inc\CANlib.h: 683: RXM0SIDLbits.EID17 = 0x00;
  3310  01385A  010F               	movlb	15	; () banked
  3311  01385C  9319               	bcf	25,1,b	;volatile
  3312  01385E                     l443:
  3313                           
  3314                           ; BSR set to: 15
  3315                           ;inc\CANlib.h: 685: if (mask & 0x00040000)
  3316  01385E  0100               	movlb	0	; () banked
  3317  013860  A570               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3318  013862  D003               	goto	l444
  3319                           
  3320                           ; BSR set to: 0
  3321                           ;inc\CANlib.h: 686: RXM0SIDLbits.SID0 = 0x01;
  3322  013864  010F               	movlb	15	; () banked
  3323  013866  8B19               	bsf	25,5,b	;volatile
  3324  013868  D002               	goto	l445
  3325  01386A                     l444:
  3326                           
  3327                           ; BSR set to: 0
  3328                           ;inc\CANlib.h: 687: else
  3329                           ;inc\CANlib.h: 688: RXM0SIDLbits.SID0 = 0x00;
  3330  01386A  010F               	movlb	15	; () banked
  3331  01386C  9B19               	bcf	25,5,b	;volatile
  3332  01386E                     l445:
  3333                           
  3334                           ; BSR set to: 15
  3335                           ;inc\CANlib.h: 690: if (mask & 0x00080000)
  3336  01386E  0100               	movlb	0	; () banked
  3337  013870  A770               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3338  013872  D003               	goto	l446
  3339                           
  3340                           ; BSR set to: 0
  3341                           ;inc\CANlib.h: 691: RXM0SIDLbits.SID1 = 0x01;
  3342  013874  010F               	movlb	15	; () banked
  3343  013876  8D19               	bsf	25,6,b	;volatile
  3344  013878  D002               	goto	l447
  3345  01387A                     l446:
  3346                           
  3347                           ; BSR set to: 0
  3348                           ;inc\CANlib.h: 692: else
  3349                           ;inc\CANlib.h: 693: RXM0SIDLbits.SID1 = 0x00;
  3350  01387A  010F               	movlb	15	; () banked
  3351  01387C  9D19               	bcf	25,6,b	;volatile
  3352  01387E                     l447:
  3353                           
  3354                           ; BSR set to: 15
  3355                           ;inc\CANlib.h: 695: if (mask & 0x00100000)
  3356  01387E  0100               	movlb	0	; () banked
  3357  013880  A970               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3358  013882  D003               	goto	l448
  3359                           
  3360                           ; BSR set to: 0
  3361                           ;inc\CANlib.h: 696: RXM0SIDLbits.SID2 = 0x01 ;
  3362  013884  010F               	movlb	15	; () banked
  3363  013886  8F19               	bsf	25,7,b	;volatile
  3364  013888  D002               	goto	l7034
  3365  01388A                     l448:
  3366                           
  3367                           ; BSR set to: 0
  3368                           ;inc\CANlib.h: 697: else
  3369                           ;inc\CANlib.h: 698: RXM0SIDLbits.SID2 = 0x00 ;
  3370  01388A  010F               	movlb	15	; () banked
  3371  01388C  9F19               	bcf	25,7,b	;volatile
  3372  01388E                     l7034:
  3373                           
  3374                           ; BSR set to: 15
  3375                           ;inc\CANlib.h: 700: tamp = (mask >> 21);
  3376  01388E  C06E  F073         	movff	CANSetMask@mask,??_CANSetMask
  3377  013892  C06F  F074         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3378  013896  C070  F075         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3379  01389A  C071  F076         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3380  01389E  0E16               	movlw	22
  3381  0138A0  D006               	goto	u9000
  3382  0138A2                     u9005:
  3383  0138A2  0100               	movlb	0	; () banked
  3384  0138A4  90D8               	bcf	status,0,c
  3385  0138A6  3376               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3386  0138A8  3375               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3387  0138AA  3374               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3388  0138AC  3373               	rrcf	??_CANSetMask& (0+255),f,b
  3389  0138AE                     u9000:
  3390  0138AE  2EE8               	decfsz	wreg,f,c
  3391  0138B0  D7F8               	goto	u9005
  3392  0138B2  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  3393  0138B6  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3394  0138BA  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3395  0138BE  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;inc\CANlib.h: 701: tamp = tamp & 0x000000FF;
  3399  0138C2  0100               	movlb	0	; () banked
  3400  0138C4  5178               	movf	CANSetMask@tamp& (0+255),w,b
  3401  0138C6  0100               	movlb	0	; () banked
  3402  0138C8  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3403  0138CA  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3404  0138CC  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3405  0138CE  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3406                           
  3407                           ; BSR set to: 0
  3408                           ;inc\CANlib.h: 702: RXM0SIDH = (unsigned char) tamp;
  3409  0138D0  C078  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3410  0138D4                     l7040:
  3411                           
  3412                           ; BSR set to: 0
  3413                           ;inc\CANlib.h: 703: }
  3414                           ;inc\CANlib.h: 705: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  3415  0138D4  0E02               	movlw	2
  3416  0138D6  0100               	movlb	0	; () banked
  3417  0138D8  1977               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3418  0138DA  A4D8               	btfss	status,2,c
  3419  0138DC  0012               	return	
  3420                           
  3421                           ; BSR set to: 0
  3422  0138DE  0EF7               	movlw	247
  3423  0138E0  0100               	movlb	0	; () banked
  3424  0138E2  1972               	xorwf	CANSetMask@type& (0+255),w,b
  3425  0138E4  A4D8               	btfss	status,2,c
  3426  0138E6  0012               	return	
  3427                           
  3428                           ; BSR set to: 0
  3429                           ;inc\CANlib.h: 706: {
  3430                           ;inc\CANlib.h: 707: tamp = mask & 0x000000FF;
  3431  0138E8  0100               	movlb	0	; () banked
  3432  0138EA  516E               	movf	CANSetMask@mask& (0+255),w,b
  3433  0138EC  0100               	movlb	0	; () banked
  3434  0138EE  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3435  0138F0  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3436  0138F2  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3437  0138F4  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;inc\CANlib.h: 708: RXM1EIDL = (unsigned char) tamp;
  3441  0138F6  C078  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  3442                           
  3443                           ; BSR set to: 0
  3444                           ;inc\CANlib.h: 710: tamp = mask & 0x0000FF00;
  3445  0138FA  0E00               	movlw	0
  3446  0138FC  0100               	movlb	0	; () banked
  3447  0138FE  156E               	andwf	CANSetMask@mask& (0+255),w,b
  3448  013900  0100               	movlb	0	; () banked
  3449  013902  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3450  013904  0EFF               	movlw	255
  3451  013906  0100               	movlb	0	; () banked
  3452  013908  156F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3453  01390A  0100               	movlb	0	; () banked
  3454  01390C  6F79               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3455  01390E  0E00               	movlw	0
  3456  013910  0100               	movlb	0	; () banked
  3457  013912  1570               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3458  013914  0100               	movlb	0	; () banked
  3459  013916  6F7A               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3460  013918  0E00               	movlw	0
  3461  01391A  0100               	movlb	0	; () banked
  3462  01391C  1571               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3463  01391E  0100               	movlb	0	; () banked
  3464  013920  6F7B               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3465                           
  3466                           ; BSR set to: 0
  3467                           ;inc\CANlib.h: 711: tamp = tamp >> 8;
  3468  013922  C078  F073         	movff	CANSetMask@tamp,??_CANSetMask
  3469  013926  C079  F074         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3470  01392A  C07A  F075         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3471  01392E  C07B  F076         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3472  013932  C074  F073         	movff	??_CANSetMask+1,??_CANSetMask
  3473  013936  C075  F074         	movff	??_CANSetMask+2,??_CANSetMask+1
  3474  01393A  C076  F075         	movff	??_CANSetMask+3,??_CANSetMask+2
  3475  01393E  0100               	movlb	0	; () banked
  3476  013940  6B76               	clrf	(??_CANSetMask+3)& (0+255),b
  3477  013942  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  3478  013946  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3479  01394A  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3480  01394E  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3481                           
  3482                           ; BSR set to: 0
  3483                           ;inc\CANlib.h: 712: RXM1EIDH = (unsigned char) tamp;
  3484  013952  C078  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  3485                           
  3486                           ; BSR set to: 0
  3487                           ;inc\CANlib.h: 714: if (mask & 0x00010000)
  3488  013956  0100               	movlb	0	; () banked
  3489  013958  A170               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3490  01395A  D003               	goto	l451
  3491                           
  3492                           ; BSR set to: 0
  3493                           ;inc\CANlib.h: 715: RXM1SIDLbits.EID16 = 0x01;
  3494  01395C  010F               	movlb	15	; () banked
  3495  01395E  811D               	bsf	29,0,b	;volatile
  3496  013960  D002               	goto	l452
  3497  013962                     l451:
  3498                           
  3499                           ; BSR set to: 0
  3500                           ;inc\CANlib.h: 716: else
  3501                           ;inc\CANlib.h: 717: RXM1SIDLbits.EID16 = 0x00;
  3502  013962  010F               	movlb	15	; () banked
  3503  013964  911D               	bcf	29,0,b	;volatile
  3504  013966                     l452:
  3505                           
  3506                           ; BSR set to: 15
  3507                           ;inc\CANlib.h: 719: if (mask & 0x00020000)
  3508  013966  0100               	movlb	0	; () banked
  3509  013968  A370               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3510  01396A  D003               	goto	l453
  3511                           
  3512                           ; BSR set to: 0
  3513                           ;inc\CANlib.h: 720: RXM1SIDLbits.EID17 = 0x01;
  3514  01396C  010F               	movlb	15	; () banked
  3515  01396E  831D               	bsf	29,1,b	;volatile
  3516  013970  D002               	goto	l454
  3517  013972                     l453:
  3518                           
  3519                           ; BSR set to: 0
  3520                           ;inc\CANlib.h: 721: else
  3521                           ;inc\CANlib.h: 722: RXM1SIDLbits.EID17 = 0x00;
  3522  013972  010F               	movlb	15	; () banked
  3523  013974  931D               	bcf	29,1,b	;volatile
  3524  013976                     l454:
  3525                           
  3526                           ; BSR set to: 15
  3527                           ;inc\CANlib.h: 724: if (mask & 0x00040000)
  3528  013976  0100               	movlb	0	; () banked
  3529  013978  A570               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3530  01397A  D003               	goto	l455
  3531                           
  3532                           ; BSR set to: 0
  3533                           ;inc\CANlib.h: 725: RXM1SIDLbits.SID0 = 0x01;
  3534  01397C  010F               	movlb	15	; () banked
  3535  01397E  8B1D               	bsf	29,5,b	;volatile
  3536  013980  D002               	goto	l456
  3537  013982                     l455:
  3538                           
  3539                           ; BSR set to: 0
  3540                           ;inc\CANlib.h: 726: else
  3541                           ;inc\CANlib.h: 727: RXM1SIDLbits.SID0 = 0x00;
  3542  013982  010F               	movlb	15	; () banked
  3543  013984  9B1D               	bcf	29,5,b	;volatile
  3544  013986                     l456:
  3545                           
  3546                           ; BSR set to: 15
  3547                           ;inc\CANlib.h: 729: if (mask & 0x00080000)
  3548  013986  0100               	movlb	0	; () banked
  3549  013988  A770               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3550  01398A  D003               	goto	l457
  3551                           
  3552                           ; BSR set to: 0
  3553                           ;inc\CANlib.h: 730: RXM1SIDLbits.SID1 = 0x01;
  3554  01398C  010F               	movlb	15	; () banked
  3555  01398E  8D1D               	bsf	29,6,b	;volatile
  3556  013990  D002               	goto	l458
  3557  013992                     l457:
  3558                           
  3559                           ; BSR set to: 0
  3560                           ;inc\CANlib.h: 731: else
  3561                           ;inc\CANlib.h: 732: RXM1SIDLbits.SID1 = 0x00;
  3562  013992  010F               	movlb	15	; () banked
  3563  013994  9D1D               	bcf	29,6,b	;volatile
  3564  013996                     l458:
  3565                           
  3566                           ; BSR set to: 15
  3567                           ;inc\CANlib.h: 734: if (mask & 0x00100000)
  3568  013996  0100               	movlb	0	; () banked
  3569  013998  A970               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3570  01399A  D003               	goto	l459
  3571                           
  3572                           ; BSR set to: 0
  3573                           ;inc\CANlib.h: 735: RXM1SIDLbits.SID2 = 0x01 ;
  3574  01399C  010F               	movlb	15	; () banked
  3575  01399E  8F1D               	bsf	29,7,b	;volatile
  3576  0139A0  D002               	goto	l7066
  3577  0139A2                     l459:
  3578                           
  3579                           ; BSR set to: 0
  3580                           ;inc\CANlib.h: 736: else
  3581                           ;inc\CANlib.h: 737: RXM1SIDLbits.SID2 = 0x00 ;
  3582  0139A2  010F               	movlb	15	; () banked
  3583  0139A4  9F1D               	bcf	29,7,b	;volatile
  3584  0139A6                     l7066:
  3585                           
  3586                           ; BSR set to: 15
  3587                           ;inc\CANlib.h: 739: tamp = (mask >> 21);
  3588  0139A6  C06E  F073         	movff	CANSetMask@mask,??_CANSetMask
  3589  0139AA  C06F  F074         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3590  0139AE  C070  F075         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3591  0139B2  C071  F076         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3592  0139B6  0E16               	movlw	22
  3593  0139B8  D006               	goto	u9080
  3594  0139BA                     u9085:
  3595  0139BA  0100               	movlb	0	; () banked
  3596  0139BC  90D8               	bcf	status,0,c
  3597  0139BE  3376               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3598  0139C0  3375               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3599  0139C2  3374               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3600  0139C4  3373               	rrcf	??_CANSetMask& (0+255),f,b
  3601  0139C6                     u9080:
  3602  0139C6  2EE8               	decfsz	wreg,f,c
  3603  0139C8  D7F8               	goto	u9085
  3604  0139CA  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  3605  0139CE  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3606  0139D2  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3607  0139D6  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3608                           
  3609                           ; BSR set to: 0
  3610                           ;inc\CANlib.h: 740: tamp = tamp & 0x000000FF;
  3611  0139DA  0100               	movlb	0	; () banked
  3612  0139DC  5178               	movf	CANSetMask@tamp& (0+255),w,b
  3613  0139DE  0100               	movlb	0	; () banked
  3614  0139E0  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3615  0139E2  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3616  0139E4  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3617  0139E6  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3618                           
  3619                           ; BSR set to: 0
  3620                           ;inc\CANlib.h: 741: RXM1SIDH = (unsigned char) tamp;
  3621  0139E8  C078  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3622  0139EC  0012               	return	
  3623  0139EE                     __end_of_CANSetMask:
  3624                           	opt stack 0
  3625                           tblptru	equ	0xFF8
  3626                           tblptrh	equ	0xFF7
  3627                           tblptrl	equ	0xFF6
  3628                           tablat	equ	0xFF5
  3629                           intcon	equ	0xFF2
  3630                           postinc0	equ	0xFEE
  3631                           wreg	equ	0xFE8
  3632                           status	equ	0xFD8
  3633                           
  3634 ;; *************** function _CANSetFilter *****************
  3635 ;; Defined at:
  3636 ;;		line 749 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;  numBuffer       1    wreg     enum E16924
  3639 ;;  filter          4   14[BANK0 ] unsigned long 
  3640 ;;  type            1   18[BANK0 ] enum E16887
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;  numBuffer       1   23[BANK0 ] enum E16924
  3643 ;;  tamp            4   24[BANK0 ] unsigned long 
  3644 ;; Return value:  Size  Location     Type
  3645 ;;		None               void
  3646 ;; Registers used:
  3647 ;;		wreg, status,2, status,0
  3648 ;; Tracked objects:
  3649 ;;		On entry : 0/0
  3650 ;;		On exit  : 0/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3653 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3654 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3655 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3656 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3657 ;;Total ram usage:       14 bytes
  3658 ;; Hardware stack levels used:    1
  3659 ;; Hardware stack levels required when called:    3
  3660 ;; This function calls:
  3661 ;;		Nothing
  3662 ;; This function is called by:
  3663 ;;		_CANInitialize
  3664 ;; This function uses a non-reentrant model
  3665 ;;
  3666                           
  3667                           	psect	text8
  3668  010000                     __ptext8:
  3669                           	opt stack 0
  3670  010000                     _CANSetFilter:
  3671                           	opt stack 25
  3672                           
  3673                           ; BSR set to: 0
  3674                           ;incstack = 0
  3675                           ;CANSetFilter@numBuffer stored from wreg
  3676  010000  0100               	movlb	0	; () banked
  3677  010002  6F77               	movwf	CANSetFilter@numBuffer& (0+255),b
  3678                           
  3679                           ;inc\CANlib.h: 751: unsigned long tamp;
  3680                           ;inc\CANlib.h: 753: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  3681  010004  0100               	movlb	0	; () banked
  3682  010006  5177               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3683  010008  0100               	movlb	0	; () banked
  3684  01000A  A4D8               	btfss	status,2,c
  3685  01000C  D058               	goto	l7090
  3686                           
  3687                           ; BSR set to: 0
  3688  01000E  0100               	movlb	0	; () banked
  3689  010010  2972               	incf	CANSetFilter@type& (0+255),w,b
  3690  010012  A4D8               	btfss	status,2,c
  3691  010014  D054               	goto	l7090
  3692                           
  3693                           ; BSR set to: 0
  3694                           ;inc\CANlib.h: 754: {
  3695                           ;inc\CANlib.h: 755: RXF0SIDLbits.EXIDEN = 0x00;
  3696  010016  010F               	movlb	15	; () banked
  3697  010018  9701               	bcf	1,3,b	;volatile
  3698                           
  3699                           ; BSR set to: 15
  3700                           ;inc\CANlib.h: 757: tamp = (filter >> 3);
  3701  01001A  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  3702  01001E  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3703  010022  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3704  010026  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3705  01002A  0E04               	movlw	4
  3706  01002C  D006               	goto	u9110
  3707  01002E                     u9115:
  3708  01002E  0100               	movlb	0	; () banked
  3709  010030  90D8               	bcf	status,0,c
  3710  010032  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3711  010034  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3712  010036  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3713  010038  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  3714  01003A                     u9110:
  3715  01003A  2EE8               	decfsz	wreg,f,c
  3716  01003C  D7F8               	goto	u9115
  3717  01003E  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3718  010042  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3719  010046  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3720  01004A  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3721                           
  3722                           ; BSR set to: 0
  3723                           ;inc\CANlib.h: 758: tamp = tamp & 0x000000FF;
  3724  01004E  0100               	movlb	0	; () banked
  3725  010050  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  3726  010052  0100               	movlb	0	; () banked
  3727  010054  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3728  010056  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3729  010058  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3730  01005A  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3731                           
  3732                           ; BSR set to: 0
  3733                           ;inc\CANlib.h: 759: RXF0SIDH = (unsigned char) tamp;
  3734  01005C  C078  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3735                           
  3736                           ; BSR set to: 0
  3737                           ;inc\CANlib.h: 761: tamp = filter & 0x00000007;
  3738  010060  0E07               	movlw	7
  3739  010062  0100               	movlb	0	; () banked
  3740  010064  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3741  010066  0100               	movlb	0	; () banked
  3742  010068  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3743  01006A  0E00               	movlw	0
  3744  01006C  0100               	movlb	0	; () banked
  3745  01006E  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3746  010070  0100               	movlb	0	; () banked
  3747  010072  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3748  010074  0E00               	movlw	0
  3749  010076  0100               	movlb	0	; () banked
  3750  010078  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3751  01007A  0100               	movlb	0	; () banked
  3752  01007C  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3753  01007E  0E00               	movlw	0
  3754  010080  0100               	movlb	0	; () banked
  3755  010082  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3756  010084  0100               	movlb	0	; () banked
  3757  010086  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3758                           
  3759                           ; BSR set to: 0
  3760                           ;inc\CANlib.h: 762: tamp = tamp << 5;
  3761  010088  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  3762  01008C  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3763  010090  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3764  010094  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3765  010098  0E05               	movlw	5
  3766  01009A                     u9125:
  3767  01009A  90D8               	bcf	status,0,c
  3768  01009C  0100               	movlb	0	; () banked
  3769  01009E  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  3770  0100A0  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3771  0100A2  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3772  0100A4  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3773  0100A6  2EE8               	decfsz	wreg,f,c
  3774  0100A8  D7F8               	goto	u9125
  3775  0100AA  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3776  0100AE  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3777  0100B2  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3778  0100B6  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3779                           
  3780                           ; BSR set to: 0
  3781                           ;inc\CANlib.h: 763: RXF0SIDL = (unsigned char) tamp;
  3782  0100BA  C078  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  3783  0100BE                     l7090:
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;inc\CANlib.h: 764: }
  3787                           ;inc\CANlib.h: 766: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  3788  0100BE  0100               	movlb	0	; () banked
  3789  0100C0  0577               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3790  0100C2  A4D8               	btfss	status,2,c
  3791  0100C4  D058               	goto	l7108
  3792                           
  3793                           ; BSR set to: 0
  3794  0100C6  0100               	movlb	0	; () banked
  3795  0100C8  2972               	incf	CANSetFilter@type& (0+255),w,b
  3796  0100CA  A4D8               	btfss	status,2,c
  3797  0100CC  D054               	goto	l7108
  3798                           
  3799                           ; BSR set to: 0
  3800                           ;inc\CANlib.h: 767: {
  3801                           ;inc\CANlib.h: 768: RXF1SIDLbits.EXIDEN = 0x00;
  3802  0100CE  010F               	movlb	15	; () banked
  3803  0100D0  9705               	bcf	5,3,b	;volatile
  3804                           
  3805                           ; BSR set to: 15
  3806                           ;inc\CANlib.h: 770: tamp = (filter >> 3);
  3807  0100D2  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  3808  0100D6  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3809  0100DA  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3810  0100DE  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3811  0100E2  0E04               	movlw	4
  3812  0100E4  D006               	goto	u9150
  3813  0100E6                     u9155:
  3814  0100E6  0100               	movlb	0	; () banked
  3815  0100E8  90D8               	bcf	status,0,c
  3816  0100EA  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3817  0100EC  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3818  0100EE  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3819  0100F0  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  3820  0100F2                     u9150:
  3821  0100F2  2EE8               	decfsz	wreg,f,c
  3822  0100F4  D7F8               	goto	u9155
  3823  0100F6  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3824  0100FA  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3825  0100FE  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3826  010102  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3827                           
  3828                           ; BSR set to: 0
  3829                           ;inc\CANlib.h: 771: tamp = tamp & 0x000000FF;
  3830  010106  0100               	movlb	0	; () banked
  3831  010108  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  3832  01010A  0100               	movlb	0	; () banked
  3833  01010C  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3834  01010E  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3835  010110  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3836  010112  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3837                           
  3838                           ; BSR set to: 0
  3839                           ;inc\CANlib.h: 772: RXF1SIDH = (unsigned char) tamp;
  3840  010114  C078  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  3841                           
  3842                           ; BSR set to: 0
  3843                           ;inc\CANlib.h: 774: tamp = filter & 0x00000007;
  3844  010118  0E07               	movlw	7
  3845  01011A  0100               	movlb	0	; () banked
  3846  01011C  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3847  01011E  0100               	movlb	0	; () banked
  3848  010120  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3849  010122  0E00               	movlw	0
  3850  010124  0100               	movlb	0	; () banked
  3851  010126  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3852  010128  0100               	movlb	0	; () banked
  3853  01012A  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3854  01012C  0E00               	movlw	0
  3855  01012E  0100               	movlb	0	; () banked
  3856  010130  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3857  010132  0100               	movlb	0	; () banked
  3858  010134  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3859  010136  0E00               	movlw	0
  3860  010138  0100               	movlb	0	; () banked
  3861  01013A  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3862  01013C  0100               	movlb	0	; () banked
  3863  01013E  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3864                           
  3865                           ; BSR set to: 0
  3866                           ;inc\CANlib.h: 775: tamp = tamp << 5;
  3867  010140  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  3868  010144  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3869  010148  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3870  01014C  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3871  010150  0E05               	movlw	5
  3872  010152                     u9165:
  3873  010152  90D8               	bcf	status,0,c
  3874  010154  0100               	movlb	0	; () banked
  3875  010156  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  3876  010158  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3877  01015A  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3878  01015C  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3879  01015E  2EE8               	decfsz	wreg,f,c
  3880  010160  D7F8               	goto	u9165
  3881  010162  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3882  010166  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3883  01016A  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3884  01016E  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3885                           
  3886                           ; BSR set to: 0
  3887                           ;inc\CANlib.h: 776: RXF1SIDL = (unsigned char) tamp;
  3888  010172  C078  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  3889  010176                     l7108:
  3890                           
  3891                           ; BSR set to: 0
  3892                           ;inc\CANlib.h: 777: }
  3893                           ;inc\CANlib.h: 779: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  3894  010176  0E02               	movlw	2
  3895  010178  0100               	movlb	0	; () banked
  3896  01017A  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3897  01017C  A4D8               	btfss	status,2,c
  3898  01017E  D058               	goto	l7126
  3899                           
  3900                           ; BSR set to: 0
  3901  010180  0100               	movlb	0	; () banked
  3902  010182  2972               	incf	CANSetFilter@type& (0+255),w,b
  3903  010184  A4D8               	btfss	status,2,c
  3904  010186  D054               	goto	l7126
  3905                           
  3906                           ; BSR set to: 0
  3907                           ;inc\CANlib.h: 780: {
  3908                           ;inc\CANlib.h: 781: RXF2SIDLbits.EXIDEN = 0x00;
  3909  010188  010F               	movlb	15	; () banked
  3910  01018A  9709               	bcf	9,3,b	;volatile
  3911                           
  3912                           ; BSR set to: 15
  3913                           ;inc\CANlib.h: 783: tamp = (filter >> 3);
  3914  01018C  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  3915  010190  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3916  010194  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3917  010198  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3918  01019C  0E04               	movlw	4
  3919  01019E  D006               	goto	u9190
  3920  0101A0                     u9195:
  3921  0101A0  0100               	movlb	0	; () banked
  3922  0101A2  90D8               	bcf	status,0,c
  3923  0101A4  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3924  0101A6  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3925  0101A8  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3926  0101AA  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  3927  0101AC                     u9190:
  3928  0101AC  2EE8               	decfsz	wreg,f,c
  3929  0101AE  D7F8               	goto	u9195
  3930  0101B0  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3931  0101B4  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3932  0101B8  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3933  0101BC  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3934                           
  3935                           ; BSR set to: 0
  3936                           ;inc\CANlib.h: 784: tamp = tamp & 0x000000FF;
  3937  0101C0  0100               	movlb	0	; () banked
  3938  0101C2  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  3939  0101C4  0100               	movlb	0	; () banked
  3940  0101C6  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3941  0101C8  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3942  0101CA  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3943  0101CC  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3944                           
  3945                           ; BSR set to: 0
  3946                           ;inc\CANlib.h: 785: RXF2SIDH = (unsigned char) tamp;
  3947  0101CE  C078  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  3948                           
  3949                           ; BSR set to: 0
  3950                           ;inc\CANlib.h: 787: tamp = filter & 0x00000007;
  3951  0101D2  0E07               	movlw	7
  3952  0101D4  0100               	movlb	0	; () banked
  3953  0101D6  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3954  0101D8  0100               	movlb	0	; () banked
  3955  0101DA  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3956  0101DC  0E00               	movlw	0
  3957  0101DE  0100               	movlb	0	; () banked
  3958  0101E0  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3959  0101E2  0100               	movlb	0	; () banked
  3960  0101E4  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3961  0101E6  0E00               	movlw	0
  3962  0101E8  0100               	movlb	0	; () banked
  3963  0101EA  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3964  0101EC  0100               	movlb	0	; () banked
  3965  0101EE  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3966  0101F0  0E00               	movlw	0
  3967  0101F2  0100               	movlb	0	; () banked
  3968  0101F4  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3969  0101F6  0100               	movlb	0	; () banked
  3970  0101F8  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3971                           
  3972                           ; BSR set to: 0
  3973                           ;inc\CANlib.h: 788: tamp = tamp << 5;
  3974  0101FA  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  3975  0101FE  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3976  010202  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3977  010206  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3978  01020A  0E05               	movlw	5
  3979  01020C                     u9205:
  3980  01020C  90D8               	bcf	status,0,c
  3981  01020E  0100               	movlb	0	; () banked
  3982  010210  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  3983  010212  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3984  010214  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3985  010216  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3986  010218  2EE8               	decfsz	wreg,f,c
  3987  01021A  D7F8               	goto	u9205
  3988  01021C  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3989  010220  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3990  010224  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3991  010228  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3992                           
  3993                           ; BSR set to: 0
  3994                           ;inc\CANlib.h: 789: RXF2SIDL = (unsigned char) tamp;
  3995  01022C  C078  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  3996  010230                     l7126:
  3997                           
  3998                           ; BSR set to: 0
  3999                           ;inc\CANlib.h: 790: }
  4000                           ;inc\CANlib.h: 792: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4001  010230  0E03               	movlw	3
  4002  010232  0100               	movlb	0	; () banked
  4003  010234  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4004  010236  A4D8               	btfss	status,2,c
  4005  010238  D058               	goto	l7144
  4006                           
  4007                           ; BSR set to: 0
  4008  01023A  0100               	movlb	0	; () banked
  4009  01023C  2972               	incf	CANSetFilter@type& (0+255),w,b
  4010  01023E  A4D8               	btfss	status,2,c
  4011  010240  D054               	goto	l7144
  4012                           
  4013                           ; BSR set to: 0
  4014                           ;inc\CANlib.h: 793: {
  4015                           ;inc\CANlib.h: 794: RXF3SIDLbits.EXIDEN = 0x00;
  4016  010242  010F               	movlb	15	; () banked
  4017  010244  970D               	bcf	13,3,b	;volatile
  4018                           
  4019                           ; BSR set to: 15
  4020                           ;inc\CANlib.h: 796: tamp = (filter >> 3);
  4021  010246  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4022  01024A  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4023  01024E  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4024  010252  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4025  010256  0E04               	movlw	4
  4026  010258  D006               	goto	u9230
  4027  01025A                     u9235:
  4028  01025A  0100               	movlb	0	; () banked
  4029  01025C  90D8               	bcf	status,0,c
  4030  01025E  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4031  010260  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4032  010262  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4033  010264  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4034  010266                     u9230:
  4035  010266  2EE8               	decfsz	wreg,f,c
  4036  010268  D7F8               	goto	u9235
  4037  01026A  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4038  01026E  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4039  010272  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4040  010276  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4041                           
  4042                           ; BSR set to: 0
  4043                           ;inc\CANlib.h: 797: tamp = tamp & 0x000000FF;
  4044  01027A  0100               	movlb	0	; () banked
  4045  01027C  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4046  01027E  0100               	movlb	0	; () banked
  4047  010280  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4048  010282  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4049  010284  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4050  010286  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4051                           
  4052                           ; BSR set to: 0
  4053                           ;inc\CANlib.h: 798: RXF3SIDH = (unsigned char) tamp;
  4054  010288  C078  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4055                           
  4056                           ; BSR set to: 0
  4057                           ;inc\CANlib.h: 800: tamp = filter & 0x00000007;
  4058  01028C  0E07               	movlw	7
  4059  01028E  0100               	movlb	0	; () banked
  4060  010290  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4061  010292  0100               	movlb	0	; () banked
  4062  010294  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4063  010296  0E00               	movlw	0
  4064  010298  0100               	movlb	0	; () banked
  4065  01029A  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4066  01029C  0100               	movlb	0	; () banked
  4067  01029E  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4068  0102A0  0E00               	movlw	0
  4069  0102A2  0100               	movlb	0	; () banked
  4070  0102A4  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4071  0102A6  0100               	movlb	0	; () banked
  4072  0102A8  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4073  0102AA  0E00               	movlw	0
  4074  0102AC  0100               	movlb	0	; () banked
  4075  0102AE  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4076  0102B0  0100               	movlb	0	; () banked
  4077  0102B2  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4078                           
  4079                           ; BSR set to: 0
  4080                           ;inc\CANlib.h: 801: tamp = tamp << 5;
  4081  0102B4  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4082  0102B8  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4083  0102BC  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4084  0102C0  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4085  0102C4  0E05               	movlw	5
  4086  0102C6                     u9245:
  4087  0102C6  90D8               	bcf	status,0,c
  4088  0102C8  0100               	movlb	0	; () banked
  4089  0102CA  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  4090  0102CC  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4091  0102CE  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4092  0102D0  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4093  0102D2  2EE8               	decfsz	wreg,f,c
  4094  0102D4  D7F8               	goto	u9245
  4095  0102D6  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4096  0102DA  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4097  0102DE  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4098  0102E2  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4099                           
  4100                           ; BSR set to: 0
  4101                           ;inc\CANlib.h: 802: RXF3SIDL = (unsigned char) tamp;
  4102  0102E6  C078  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4103  0102EA                     l7144:
  4104                           
  4105                           ; BSR set to: 0
  4106                           ;inc\CANlib.h: 803: }
  4107                           ;inc\CANlib.h: 805: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4108  0102EA  0E04               	movlw	4
  4109  0102EC  0100               	movlb	0	; () banked
  4110  0102EE  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4111  0102F0  A4D8               	btfss	status,2,c
  4112  0102F2  D058               	goto	l7162
  4113                           
  4114                           ; BSR set to: 0
  4115  0102F4  0100               	movlb	0	; () banked
  4116  0102F6  2972               	incf	CANSetFilter@type& (0+255),w,b
  4117  0102F8  A4D8               	btfss	status,2,c
  4118  0102FA  D054               	goto	l7162
  4119                           
  4120                           ; BSR set to: 0
  4121                           ;inc\CANlib.h: 806: {
  4122                           ;inc\CANlib.h: 807: RXF4SIDLbits.EXIDEN = 0x00;
  4123  0102FC  010F               	movlb	15	; () banked
  4124  0102FE  9711               	bcf	17,3,b	;volatile
  4125                           
  4126                           ; BSR set to: 15
  4127                           ;inc\CANlib.h: 809: tamp = (filter >> 3);
  4128  010300  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4129  010304  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4130  010308  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4131  01030C  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4132  010310  0E04               	movlw	4
  4133  010312  D006               	goto	u9270
  4134  010314                     u9275:
  4135  010314  0100               	movlb	0	; () banked
  4136  010316  90D8               	bcf	status,0,c
  4137  010318  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4138  01031A  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4139  01031C  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4140  01031E  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4141  010320                     u9270:
  4142  010320  2EE8               	decfsz	wreg,f,c
  4143  010322  D7F8               	goto	u9275
  4144  010324  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4145  010328  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4146  01032C  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4147  010330  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;inc\CANlib.h: 810: tamp = tamp & 0x000000FF;
  4151  010334  0100               	movlb	0	; () banked
  4152  010336  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4153  010338  0100               	movlb	0	; () banked
  4154  01033A  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4155  01033C  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4156  01033E  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4157  010340  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4158                           
  4159                           ; BSR set to: 0
  4160                           ;inc\CANlib.h: 811: RXF4SIDH = (unsigned char) tamp;
  4161  010342  C078  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4162                           
  4163                           ; BSR set to: 0
  4164                           ;inc\CANlib.h: 813: tamp = filter & 0x00000007;
  4165  010346  0E07               	movlw	7
  4166  010348  0100               	movlb	0	; () banked
  4167  01034A  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4168  01034C  0100               	movlb	0	; () banked
  4169  01034E  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4170  010350  0E00               	movlw	0
  4171  010352  0100               	movlb	0	; () banked
  4172  010354  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4173  010356  0100               	movlb	0	; () banked
  4174  010358  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4175  01035A  0E00               	movlw	0
  4176  01035C  0100               	movlb	0	; () banked
  4177  01035E  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4178  010360  0100               	movlb	0	; () banked
  4179  010362  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4180  010364  0E00               	movlw	0
  4181  010366  0100               	movlb	0	; () banked
  4182  010368  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4183  01036A  0100               	movlb	0	; () banked
  4184  01036C  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4185                           
  4186                           ; BSR set to: 0
  4187                           ;inc\CANlib.h: 814: tamp = tamp << 5;
  4188  01036E  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4189  010372  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4190  010376  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4191  01037A  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4192  01037E  0E05               	movlw	5
  4193  010380                     u9285:
  4194  010380  90D8               	bcf	status,0,c
  4195  010382  0100               	movlb	0	; () banked
  4196  010384  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  4197  010386  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4198  010388  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4199  01038A  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4200  01038C  2EE8               	decfsz	wreg,f,c
  4201  01038E  D7F8               	goto	u9285
  4202  010390  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4203  010394  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4204  010398  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4205  01039C  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4206                           
  4207                           ; BSR set to: 0
  4208                           ;inc\CANlib.h: 815: RXF4SIDL = (unsigned char) tamp;
  4209  0103A0  C078  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  4210  0103A4                     l7162:
  4211                           
  4212                           ; BSR set to: 0
  4213                           ;inc\CANlib.h: 816: }
  4214                           ;inc\CANlib.h: 818: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  4215  0103A4  0E05               	movlw	5
  4216  0103A6  0100               	movlb	0	; () banked
  4217  0103A8  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4218  0103AA  A4D8               	btfss	status,2,c
  4219  0103AC  D058               	goto	l7180
  4220                           
  4221                           ; BSR set to: 0
  4222  0103AE  0100               	movlb	0	; () banked
  4223  0103B0  2972               	incf	CANSetFilter@type& (0+255),w,b
  4224  0103B2  A4D8               	btfss	status,2,c
  4225  0103B4  D054               	goto	l7180
  4226                           
  4227                           ; BSR set to: 0
  4228                           ;inc\CANlib.h: 819: {
  4229                           ;inc\CANlib.h: 820: RXF5SIDLbits.EXIDEN = 0x00;
  4230  0103B6  010F               	movlb	15	; () banked
  4231  0103B8  9715               	bcf	21,3,b	;volatile
  4232                           
  4233                           ; BSR set to: 15
  4234                           ;inc\CANlib.h: 822: tamp = (filter >> 3);
  4235  0103BA  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4236  0103BE  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4237  0103C2  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4238  0103C6  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4239  0103CA  0E04               	movlw	4
  4240  0103CC  D006               	goto	u9310
  4241  0103CE                     u9315:
  4242  0103CE  0100               	movlb	0	; () banked
  4243  0103D0  90D8               	bcf	status,0,c
  4244  0103D2  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4245  0103D4  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4246  0103D6  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4247  0103D8  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4248  0103DA                     u9310:
  4249  0103DA  2EE8               	decfsz	wreg,f,c
  4250  0103DC  D7F8               	goto	u9315
  4251  0103DE  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4252  0103E2  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4253  0103E6  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4254  0103EA  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;inc\CANlib.h: 823: tamp = tamp & 0x000000FF;
  4258  0103EE  0100               	movlb	0	; () banked
  4259  0103F0  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4260  0103F2  0100               	movlb	0	; () banked
  4261  0103F4  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4262  0103F6  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4263  0103F8  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4264  0103FA  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4265                           
  4266                           ; BSR set to: 0
  4267                           ;inc\CANlib.h: 824: RXF5SIDH = (unsigned char) tamp;
  4268  0103FC  C078  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4269                           
  4270                           ; BSR set to: 0
  4271                           ;inc\CANlib.h: 826: tamp = filter & 0x00000007;
  4272  010400  0E07               	movlw	7
  4273  010402  0100               	movlb	0	; () banked
  4274  010404  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4275  010406  0100               	movlb	0	; () banked
  4276  010408  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4277  01040A  0E00               	movlw	0
  4278  01040C  0100               	movlb	0	; () banked
  4279  01040E  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4280  010410  0100               	movlb	0	; () banked
  4281  010412  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4282  010414  0E00               	movlw	0
  4283  010416  0100               	movlb	0	; () banked
  4284  010418  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4285  01041A  0100               	movlb	0	; () banked
  4286  01041C  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4287  01041E  0E00               	movlw	0
  4288  010420  0100               	movlb	0	; () banked
  4289  010422  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4290  010424  0100               	movlb	0	; () banked
  4291  010426  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4292                           
  4293                           ; BSR set to: 0
  4294                           ;inc\CANlib.h: 827: tamp = tamp << 5;
  4295  010428  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4296  01042C  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4297  010430  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4298  010434  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4299  010438  0E05               	movlw	5
  4300  01043A                     u9325:
  4301  01043A  90D8               	bcf	status,0,c
  4302  01043C  0100               	movlb	0	; () banked
  4303  01043E  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  4304  010440  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4305  010442  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4306  010444  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4307  010446  2EE8               	decfsz	wreg,f,c
  4308  010448  D7F8               	goto	u9325
  4309  01044A  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4310  01044E  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4311  010452  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4312  010456  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;inc\CANlib.h: 828: RXF5SIDL = (unsigned char) tamp;
  4316  01045A  C078  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  4317  01045E                     l7180:
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;inc\CANlib.h: 829: }
  4321                           ;inc\CANlib.h: 832: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  4322  01045E  0100               	movlb	0	; () banked
  4323  010460  5177               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4324  010462  0100               	movlb	0	; () banked
  4325  010464  A4D8               	btfss	status,2,c
  4326  010466  D089               	goto	l7214
  4327                           
  4328                           ; BSR set to: 0
  4329  010468  0EF7               	movlw	247
  4330  01046A  0100               	movlb	0	; () banked
  4331  01046C  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  4332  01046E  A4D8               	btfss	status,2,c
  4333  010470  D084               	goto	l7214
  4334                           
  4335                           ; BSR set to: 0
  4336                           ;inc\CANlib.h: 833: {
  4337                           ;inc\CANlib.h: 834: RXF0SIDLbits.EXIDEN = 0x01;
  4338  010472  010F               	movlb	15	; () banked
  4339  010474  8701               	bsf	1,3,b	;volatile
  4340                           
  4341                           ; BSR set to: 15
  4342                           ;inc\CANlib.h: 836: tamp = filter & 0x000000FF;
  4343  010476  0100               	movlb	0	; () banked
  4344  010478  516E               	movf	CANSetFilter@filter& (0+255),w,b
  4345  01047A  0100               	movlb	0	; () banked
  4346  01047C  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4347  01047E  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4348  010480  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4349  010482  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4350                           
  4351                           ; BSR set to: 0
  4352                           ;inc\CANlib.h: 837: RXF0EIDL = (unsigned char) tamp;
  4353  010484  C078  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  4354                           
  4355                           ; BSR set to: 0
  4356                           ;inc\CANlib.h: 839: tamp = filter & 0x0000FF00;
  4357  010488  0E00               	movlw	0
  4358  01048A  0100               	movlb	0	; () banked
  4359  01048C  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4360  01048E  0100               	movlb	0	; () banked
  4361  010490  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4362  010492  0EFF               	movlw	255
  4363  010494  0100               	movlb	0	; () banked
  4364  010496  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4365  010498  0100               	movlb	0	; () banked
  4366  01049A  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4367  01049C  0E00               	movlw	0
  4368  01049E  0100               	movlb	0	; () banked
  4369  0104A0  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4370  0104A2  0100               	movlb	0	; () banked
  4371  0104A4  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4372  0104A6  0E00               	movlw	0
  4373  0104A8  0100               	movlb	0	; () banked
  4374  0104AA  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4375  0104AC  0100               	movlb	0	; () banked
  4376  0104AE  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;inc\CANlib.h: 840: tamp = tamp >> 8;
  4380  0104B0  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4381  0104B4  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4382  0104B8  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4383  0104BC  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4384  0104C0  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  4385  0104C4  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4386  0104C8  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4387  0104CC  0100               	movlb	0	; () banked
  4388  0104CE  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  4389  0104D0  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4390  0104D4  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4391  0104D8  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4392  0104DC  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4393                           
  4394                           ; BSR set to: 0
  4395                           ;inc\CANlib.h: 841: RXF0EIDH = (unsigned char) tamp;
  4396  0104E0  C078  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  4397                           
  4398                           ; BSR set to: 0
  4399                           ;inc\CANlib.h: 843: if (filter & 0x00010000)
  4400  0104E4  0100               	movlb	0	; () banked
  4401  0104E6  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4402  0104E8  D003               	goto	l471
  4403                           
  4404                           ; BSR set to: 0
  4405                           ;inc\CANlib.h: 844: RXF0SIDLbits.EID16 = 0x01;
  4406  0104EA  010F               	movlb	15	; () banked
  4407  0104EC  8101               	bsf	1,0,b	;volatile
  4408  0104EE  D002               	goto	l472
  4409  0104F0                     l471:
  4410                           
  4411                           ; BSR set to: 0
  4412                           ;inc\CANlib.h: 845: else
  4413                           ;inc\CANlib.h: 846: RXF0SIDLbits.EID16 = 0x00;
  4414  0104F0  010F               	movlb	15	; () banked
  4415  0104F2  9101               	bcf	1,0,b	;volatile
  4416  0104F4                     l472:
  4417                           
  4418                           ; BSR set to: 15
  4419                           ;inc\CANlib.h: 848: if (filter & 0x00020000)
  4420  0104F4  0100               	movlb	0	; () banked
  4421  0104F6  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4422  0104F8  D003               	goto	l473
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;inc\CANlib.h: 849: RXF0SIDLbits.EID17 = 0x01;
  4426  0104FA  010F               	movlb	15	; () banked
  4427  0104FC  8301               	bsf	1,1,b	;volatile
  4428  0104FE  D002               	goto	l474
  4429  010500                     l473:
  4430                           
  4431                           ; BSR set to: 0
  4432                           ;inc\CANlib.h: 850: else
  4433                           ;inc\CANlib.h: 851: RXF0SIDLbits.EID17 = 0x00;
  4434  010500  010F               	movlb	15	; () banked
  4435  010502  9301               	bcf	1,1,b	;volatile
  4436  010504                     l474:
  4437                           
  4438                           ; BSR set to: 15
  4439                           ;inc\CANlib.h: 853: if (filter & 0x00040000)
  4440  010504  0100               	movlb	0	; () banked
  4441  010506  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4442  010508  D003               	goto	l475
  4443                           
  4444                           ; BSR set to: 0
  4445                           ;inc\CANlib.h: 854: RXF0SIDLbits.SID0 = 0x01;
  4446  01050A  010F               	movlb	15	; () banked
  4447  01050C  8B01               	bsf	1,5,b	;volatile
  4448  01050E  D002               	goto	l476
  4449  010510                     l475:
  4450                           
  4451                           ; BSR set to: 0
  4452                           ;inc\CANlib.h: 855: else
  4453                           ;inc\CANlib.h: 856: RXF0SIDLbits.SID0 = 0x00;
  4454  010510  010F               	movlb	15	; () banked
  4455  010512  9B01               	bcf	1,5,b	;volatile
  4456  010514                     l476:
  4457                           
  4458                           ; BSR set to: 15
  4459                           ;inc\CANlib.h: 858: if (filter & 0x00080000)
  4460  010514  0100               	movlb	0	; () banked
  4461  010516  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4462  010518  D003               	goto	l477
  4463                           
  4464                           ; BSR set to: 0
  4465                           ;inc\CANlib.h: 859: RXF0SIDLbits.SID1 = 0x01;
  4466  01051A  010F               	movlb	15	; () banked
  4467  01051C  8D01               	bsf	1,6,b	;volatile
  4468  01051E  D002               	goto	l478
  4469  010520                     l477:
  4470                           
  4471                           ; BSR set to: 0
  4472                           ;inc\CANlib.h: 860: else
  4473                           ;inc\CANlib.h: 861: RXF0SIDLbits.SID1 = 0x00;
  4474  010520  010F               	movlb	15	; () banked
  4475  010522  9D01               	bcf	1,6,b	;volatile
  4476  010524                     l478:
  4477                           
  4478                           ; BSR set to: 15
  4479                           ;inc\CANlib.h: 863: if (filter & 0x00100000)
  4480  010524  0100               	movlb	0	; () banked
  4481  010526  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4482  010528  D003               	goto	l479
  4483                           
  4484                           ; BSR set to: 0
  4485                           ;inc\CANlib.h: 864: RXF0SIDLbits.SID2 = 0x01 ;
  4486  01052A  010F               	movlb	15	; () banked
  4487  01052C  8F01               	bsf	1,7,b	;volatile
  4488  01052E  D002               	goto	l7208
  4489  010530                     l479:
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;inc\CANlib.h: 865: else
  4493                           ;inc\CANlib.h: 866: RXF0SIDLbits.SID2 = 0x00 ;
  4494  010530  010F               	movlb	15	; () banked
  4495  010532  9F01               	bcf	1,7,b	;volatile
  4496  010534                     l7208:
  4497                           
  4498                           ; BSR set to: 15
  4499                           ;inc\CANlib.h: 868: tamp = (filter >> 21);
  4500  010534  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4501  010538  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4502  01053C  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4503  010540  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4504  010544  0E16               	movlw	22
  4505  010546  D006               	goto	u9400
  4506  010548                     u9405:
  4507  010548  0100               	movlb	0	; () banked
  4508  01054A  90D8               	bcf	status,0,c
  4509  01054C  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4510  01054E  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4511  010550  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4512  010552  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4513  010554                     u9400:
  4514  010554  2EE8               	decfsz	wreg,f,c
  4515  010556  D7F8               	goto	u9405
  4516  010558  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4517  01055C  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4518  010560  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4519  010564  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4520                           
  4521                           ; BSR set to: 0
  4522                           ;inc\CANlib.h: 869: tamp = tamp & 0x000000FF;
  4523  010568  0100               	movlb	0	; () banked
  4524  01056A  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4525  01056C  0100               	movlb	0	; () banked
  4526  01056E  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4527  010570  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4528  010572  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4529  010574  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4530                           
  4531                           ; BSR set to: 0
  4532                           ;inc\CANlib.h: 870: RXF0SIDH = (unsigned char) tamp;
  4533  010576  C078  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4534  01057A                     l7214:
  4535                           
  4536                           ; BSR set to: 0
  4537                           ;inc\CANlib.h: 871: }
  4538                           ;inc\CANlib.h: 873: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  4539  01057A  0100               	movlb	0	; () banked
  4540  01057C  0577               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4541  01057E  A4D8               	btfss	status,2,c
  4542  010580  D089               	goto	l7248
  4543                           
  4544                           ; BSR set to: 0
  4545  010582  0EF7               	movlw	247
  4546  010584  0100               	movlb	0	; () banked
  4547  010586  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  4548  010588  A4D8               	btfss	status,2,c
  4549  01058A  D084               	goto	l7248
  4550                           
  4551                           ; BSR set to: 0
  4552                           ;inc\CANlib.h: 874: {
  4553                           ;inc\CANlib.h: 875: RXF1SIDLbits.EXIDEN = 0x01;
  4554  01058C  010F               	movlb	15	; () banked
  4555  01058E  8705               	bsf	5,3,b	;volatile
  4556                           
  4557                           ; BSR set to: 15
  4558                           ;inc\CANlib.h: 877: tamp = filter & 0x000000FF;
  4559  010590  0100               	movlb	0	; () banked
  4560  010592  516E               	movf	CANSetFilter@filter& (0+255),w,b
  4561  010594  0100               	movlb	0	; () banked
  4562  010596  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4563  010598  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4564  01059A  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4565  01059C  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4566                           
  4567                           ; BSR set to: 0
  4568                           ;inc\CANlib.h: 878: RXF1EIDL = (unsigned char) tamp;
  4569  01059E  C078  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  4570                           
  4571                           ; BSR set to: 0
  4572                           ;inc\CANlib.h: 880: tamp = filter & 0x0000FF00;
  4573  0105A2  0E00               	movlw	0
  4574  0105A4  0100               	movlb	0	; () banked
  4575  0105A6  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4576  0105A8  0100               	movlb	0	; () banked
  4577  0105AA  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4578  0105AC  0EFF               	movlw	255
  4579  0105AE  0100               	movlb	0	; () banked
  4580  0105B0  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4581  0105B2  0100               	movlb	0	; () banked
  4582  0105B4  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4583  0105B6  0E00               	movlw	0
  4584  0105B8  0100               	movlb	0	; () banked
  4585  0105BA  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4586  0105BC  0100               	movlb	0	; () banked
  4587  0105BE  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4588  0105C0  0E00               	movlw	0
  4589  0105C2  0100               	movlb	0	; () banked
  4590  0105C4  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4591  0105C6  0100               	movlb	0	; () banked
  4592  0105C8  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4593                           
  4594                           ; BSR set to: 0
  4595                           ;inc\CANlib.h: 881: tamp = tamp >> 8;
  4596  0105CA  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4597  0105CE  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4598  0105D2  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4599  0105D6  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4600  0105DA  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  4601  0105DE  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4602  0105E2  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4603  0105E6  0100               	movlb	0	; () banked
  4604  0105E8  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  4605  0105EA  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4606  0105EE  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4607  0105F2  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4608  0105F6  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4609                           
  4610                           ; BSR set to: 0
  4611                           ;inc\CANlib.h: 882: RXF1EIDH = (unsigned char) tamp;
  4612  0105FA  C078  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  4613                           
  4614                           ; BSR set to: 0
  4615                           ;inc\CANlib.h: 884: if (filter & 0x00010000)
  4616  0105FE  0100               	movlb	0	; () banked
  4617  010600  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4618  010602  D003               	goto	l482
  4619                           
  4620                           ; BSR set to: 0
  4621                           ;inc\CANlib.h: 885: RXF1SIDLbits.EID16 = 0x01;
  4622  010604  010F               	movlb	15	; () banked
  4623  010606  8105               	bsf	5,0,b	;volatile
  4624  010608  D002               	goto	l483
  4625  01060A                     l482:
  4626                           
  4627                           ; BSR set to: 0
  4628                           ;inc\CANlib.h: 886: else
  4629                           ;inc\CANlib.h: 887: RXF1SIDLbits.EID16 = 0x00;
  4630  01060A  010F               	movlb	15	; () banked
  4631  01060C  9105               	bcf	5,0,b	;volatile
  4632  01060E                     l483:
  4633                           
  4634                           ; BSR set to: 15
  4635                           ;inc\CANlib.h: 889: if (filter & 0x00020000)
  4636  01060E  0100               	movlb	0	; () banked
  4637  010610  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4638  010612  D003               	goto	l484
  4639                           
  4640                           ; BSR set to: 0
  4641                           ;inc\CANlib.h: 890: RXF1SIDLbits.EID17 = 0x01;
  4642  010614  010F               	movlb	15	; () banked
  4643  010616  8305               	bsf	5,1,b	;volatile
  4644  010618  D002               	goto	l485
  4645  01061A                     l484:
  4646                           
  4647                           ; BSR set to: 0
  4648                           ;inc\CANlib.h: 891: else
  4649                           ;inc\CANlib.h: 892: RXF1SIDLbits.EID17 = 0x00;
  4650  01061A  010F               	movlb	15	; () banked
  4651  01061C  9305               	bcf	5,1,b	;volatile
  4652  01061E                     l485:
  4653                           
  4654                           ; BSR set to: 15
  4655                           ;inc\CANlib.h: 894: if (filter & 0x00040000)
  4656  01061E  0100               	movlb	0	; () banked
  4657  010620  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4658  010622  D003               	goto	l486
  4659                           
  4660                           ; BSR set to: 0
  4661                           ;inc\CANlib.h: 895: RXF1SIDLbits.SID0 = 0x01;
  4662  010624  010F               	movlb	15	; () banked
  4663  010626  8B05               	bsf	5,5,b	;volatile
  4664  010628  D002               	goto	l487
  4665  01062A                     l486:
  4666                           
  4667                           ; BSR set to: 0
  4668                           ;inc\CANlib.h: 896: else
  4669                           ;inc\CANlib.h: 897: RXF1SIDLbits.SID0 = 0x00;
  4670  01062A  010F               	movlb	15	; () banked
  4671  01062C  9B05               	bcf	5,5,b	;volatile
  4672  01062E                     l487:
  4673                           
  4674                           ; BSR set to: 15
  4675                           ;inc\CANlib.h: 899: if (filter & 0x00080000)
  4676  01062E  0100               	movlb	0	; () banked
  4677  010630  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4678  010632  D003               	goto	l488
  4679                           
  4680                           ; BSR set to: 0
  4681                           ;inc\CANlib.h: 900: RXF1SIDLbits.SID1 = 0x01;
  4682  010634  010F               	movlb	15	; () banked
  4683  010636  8D05               	bsf	5,6,b	;volatile
  4684  010638  D002               	goto	l489
  4685  01063A                     l488:
  4686                           
  4687                           ; BSR set to: 0
  4688                           ;inc\CANlib.h: 901: else
  4689                           ;inc\CANlib.h: 902: RXF1SIDLbits.SID1 = 0x00;
  4690  01063A  010F               	movlb	15	; () banked
  4691  01063C  9D05               	bcf	5,6,b	;volatile
  4692  01063E                     l489:
  4693                           
  4694                           ; BSR set to: 15
  4695                           ;inc\CANlib.h: 904: if (filter & 0x00100000)
  4696  01063E  0100               	movlb	0	; () banked
  4697  010640  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4698  010642  D003               	goto	l490
  4699                           
  4700                           ; BSR set to: 0
  4701                           ;inc\CANlib.h: 905: RXF1SIDLbits.SID2 = 0x01 ;
  4702  010644  010F               	movlb	15	; () banked
  4703  010646  8F05               	bsf	5,7,b	;volatile
  4704  010648  D002               	goto	l7242
  4705  01064A                     l490:
  4706                           
  4707                           ; BSR set to: 0
  4708                           ;inc\CANlib.h: 906: else
  4709                           ;inc\CANlib.h: 907: RXF1SIDLbits.SID2 = 0x00 ;
  4710  01064A  010F               	movlb	15	; () banked
  4711  01064C  9F05               	bcf	5,7,b	;volatile
  4712  01064E                     l7242:
  4713                           
  4714                           ; BSR set to: 15
  4715                           ;inc\CANlib.h: 909: tamp = (filter >> 21);
  4716  01064E  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4717  010652  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4718  010656  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4719  01065A  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4720  01065E  0E16               	movlw	22
  4721  010660  D006               	goto	u9480
  4722  010662                     u9485:
  4723  010662  0100               	movlb	0	; () banked
  4724  010664  90D8               	bcf	status,0,c
  4725  010666  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4726  010668  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4727  01066A  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4728  01066C  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4729  01066E                     u9480:
  4730  01066E  2EE8               	decfsz	wreg,f,c
  4731  010670  D7F8               	goto	u9485
  4732  010672  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4733  010676  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4734  01067A  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4735  01067E  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4736                           
  4737                           ; BSR set to: 0
  4738                           ;inc\CANlib.h: 910: tamp = tamp & 0x000000FF;
  4739  010682  0100               	movlb	0	; () banked
  4740  010684  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4741  010686  0100               	movlb	0	; () banked
  4742  010688  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4743  01068A  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4744  01068C  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4745  01068E  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4746                           
  4747                           ; BSR set to: 0
  4748                           ;inc\CANlib.h: 911: RXF1SIDH = (unsigned char) tamp;
  4749  010690  C078  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4750  010694                     l7248:
  4751                           
  4752                           ; BSR set to: 0
  4753                           ;inc\CANlib.h: 912: }
  4754                           ;inc\CANlib.h: 915: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  4755  010694  0E02               	movlw	2
  4756  010696  0100               	movlb	0	; () banked
  4757  010698  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4758  01069A  A4D8               	btfss	status,2,c
  4759  01069C  D089               	goto	l7282
  4760                           
  4761                           ; BSR set to: 0
  4762  01069E  0EF7               	movlw	247
  4763  0106A0  0100               	movlb	0	; () banked
  4764  0106A2  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  4765  0106A4  A4D8               	btfss	status,2,c
  4766  0106A6  D084               	goto	l7282
  4767                           
  4768                           ; BSR set to: 0
  4769                           ;inc\CANlib.h: 916: {
  4770                           ;inc\CANlib.h: 917: RXF2SIDLbits.EXIDEN = 0x01;
  4771  0106A8  010F               	movlb	15	; () banked
  4772  0106AA  8709               	bsf	9,3,b	;volatile
  4773                           
  4774                           ; BSR set to: 15
  4775                           ;inc\CANlib.h: 919: tamp = filter & 0x000000FF;
  4776  0106AC  0100               	movlb	0	; () banked
  4777  0106AE  516E               	movf	CANSetFilter@filter& (0+255),w,b
  4778  0106B0  0100               	movlb	0	; () banked
  4779  0106B2  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4780  0106B4  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4781  0106B6  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4782  0106B8  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4783                           
  4784                           ; BSR set to: 0
  4785                           ;inc\CANlib.h: 920: RXF2EIDL = (unsigned char) tamp;
  4786  0106BA  C078  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  4787                           
  4788                           ; BSR set to: 0
  4789                           ;inc\CANlib.h: 922: tamp = filter & 0x0000FF00;
  4790  0106BE  0E00               	movlw	0
  4791  0106C0  0100               	movlb	0	; () banked
  4792  0106C2  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4793  0106C4  0100               	movlb	0	; () banked
  4794  0106C6  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4795  0106C8  0EFF               	movlw	255
  4796  0106CA  0100               	movlb	0	; () banked
  4797  0106CC  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4798  0106CE  0100               	movlb	0	; () banked
  4799  0106D0  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4800  0106D2  0E00               	movlw	0
  4801  0106D4  0100               	movlb	0	; () banked
  4802  0106D6  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4803  0106D8  0100               	movlb	0	; () banked
  4804  0106DA  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4805  0106DC  0E00               	movlw	0
  4806  0106DE  0100               	movlb	0	; () banked
  4807  0106E0  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4808  0106E2  0100               	movlb	0	; () banked
  4809  0106E4  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4810                           
  4811                           ; BSR set to: 0
  4812                           ;inc\CANlib.h: 923: tamp = tamp >> 8;
  4813  0106E6  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4814  0106EA  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4815  0106EE  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4816  0106F2  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4817  0106F6  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  4818  0106FA  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4819  0106FE  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4820  010702  0100               	movlb	0	; () banked
  4821  010704  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  4822  010706  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4823  01070A  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4824  01070E  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4825  010712  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4826                           
  4827                           ; BSR set to: 0
  4828                           ;inc\CANlib.h: 924: RXF2EIDH = (unsigned char) tamp;
  4829  010716  C078  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  4830                           
  4831                           ; BSR set to: 0
  4832                           ;inc\CANlib.h: 926: if (filter & 0x00010000)
  4833  01071A  0100               	movlb	0	; () banked
  4834  01071C  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4835  01071E  D003               	goto	l493
  4836                           
  4837                           ; BSR set to: 0
  4838                           ;inc\CANlib.h: 927: RXF2SIDLbits.EID16 = 0x01;
  4839  010720  010F               	movlb	15	; () banked
  4840  010722  8109               	bsf	9,0,b	;volatile
  4841  010724  D002               	goto	l494
  4842  010726                     l493:
  4843                           
  4844                           ; BSR set to: 0
  4845                           ;inc\CANlib.h: 928: else
  4846                           ;inc\CANlib.h: 929: RXF2SIDLbits.EID16 = 0x00;
  4847  010726  010F               	movlb	15	; () banked
  4848  010728  9109               	bcf	9,0,b	;volatile
  4849  01072A                     l494:
  4850                           
  4851                           ; BSR set to: 15
  4852                           ;inc\CANlib.h: 931: if (filter & 0x00020000)
  4853  01072A  0100               	movlb	0	; () banked
  4854  01072C  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4855  01072E  D003               	goto	l495
  4856                           
  4857                           ; BSR set to: 0
  4858                           ;inc\CANlib.h: 932: RXF2SIDLbits.EID17 = 0x01;
  4859  010730  010F               	movlb	15	; () banked
  4860  010732  8309               	bsf	9,1,b	;volatile
  4861  010734  D002               	goto	l496
  4862  010736                     l495:
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;inc\CANlib.h: 933: else
  4866                           ;inc\CANlib.h: 934: RXF2SIDLbits.EID17 = 0x00;
  4867  010736  010F               	movlb	15	; () banked
  4868  010738  9309               	bcf	9,1,b	;volatile
  4869  01073A                     l496:
  4870                           
  4871                           ; BSR set to: 15
  4872                           ;inc\CANlib.h: 936: if (filter & 0x00040000)
  4873  01073A  0100               	movlb	0	; () banked
  4874  01073C  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4875  01073E  D003               	goto	l497
  4876                           
  4877                           ; BSR set to: 0
  4878                           ;inc\CANlib.h: 937: RXF2SIDLbits.SID0 = 0x01;
  4879  010740  010F               	movlb	15	; () banked
  4880  010742  8B09               	bsf	9,5,b	;volatile
  4881  010744  D002               	goto	l498
  4882  010746                     l497:
  4883                           
  4884                           ; BSR set to: 0
  4885                           ;inc\CANlib.h: 938: else
  4886                           ;inc\CANlib.h: 939: RXF2SIDLbits.SID0 = 0x00;
  4887  010746  010F               	movlb	15	; () banked
  4888  010748  9B09               	bcf	9,5,b	;volatile
  4889  01074A                     l498:
  4890                           
  4891                           ; BSR set to: 15
  4892                           ;inc\CANlib.h: 941: if (filter & 0x00080000)
  4893  01074A  0100               	movlb	0	; () banked
  4894  01074C  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4895  01074E  D003               	goto	l499
  4896                           
  4897                           ; BSR set to: 0
  4898                           ;inc\CANlib.h: 942: RXF2SIDLbits.SID1 = 0x01;
  4899  010750  010F               	movlb	15	; () banked
  4900  010752  8D09               	bsf	9,6,b	;volatile
  4901  010754  D002               	goto	l500
  4902  010756                     l499:
  4903                           
  4904                           ; BSR set to: 0
  4905                           ;inc\CANlib.h: 943: else
  4906                           ;inc\CANlib.h: 944: RXF2SIDLbits.SID1 = 0x00;
  4907  010756  010F               	movlb	15	; () banked
  4908  010758  9D09               	bcf	9,6,b	;volatile
  4909  01075A                     l500:
  4910                           
  4911                           ; BSR set to: 15
  4912                           ;inc\CANlib.h: 946: if (filter & 0x00100000)
  4913  01075A  0100               	movlb	0	; () banked
  4914  01075C  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4915  01075E  D003               	goto	l501
  4916                           
  4917                           ; BSR set to: 0
  4918                           ;inc\CANlib.h: 947: RXF2SIDLbits.SID2 = 0x01 ;
  4919  010760  010F               	movlb	15	; () banked
  4920  010762  8F09               	bsf	9,7,b	;volatile
  4921  010764  D002               	goto	l7276
  4922  010766                     l501:
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;inc\CANlib.h: 948: else
  4926                           ;inc\CANlib.h: 949: RXF2SIDLbits.SID2 = 0x00 ;
  4927  010766  010F               	movlb	15	; () banked
  4928  010768  9F09               	bcf	9,7,b	;volatile
  4929  01076A                     l7276:
  4930                           
  4931                           ; BSR set to: 15
  4932                           ;inc\CANlib.h: 951: tamp = (filter >> 21);
  4933  01076A  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4934  01076E  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4935  010772  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4936  010776  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4937  01077A  0E16               	movlw	22
  4938  01077C  D006               	goto	u9560
  4939  01077E                     u9565:
  4940  01077E  0100               	movlb	0	; () banked
  4941  010780  90D8               	bcf	status,0,c
  4942  010782  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4943  010784  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4944  010786  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4945  010788  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4946  01078A                     u9560:
  4947  01078A  2EE8               	decfsz	wreg,f,c
  4948  01078C  D7F8               	goto	u9565
  4949  01078E  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4950  010792  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4951  010796  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4952  01079A  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;inc\CANlib.h: 952: tamp = tamp & 0x000000FF;
  4956  01079E  0100               	movlb	0	; () banked
  4957  0107A0  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4958  0107A2  0100               	movlb	0	; () banked
  4959  0107A4  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4960  0107A6  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4961  0107A8  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4962  0107AA  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4963                           
  4964                           ; BSR set to: 0
  4965                           ;inc\CANlib.h: 953: RXF2SIDH = (unsigned char) tamp;
  4966  0107AC  C078  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4967  0107B0                     l7282:
  4968                           
  4969                           ; BSR set to: 0
  4970                           ;inc\CANlib.h: 954: }
  4971                           ;inc\CANlib.h: 956: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  4972  0107B0  0E03               	movlw	3
  4973  0107B2  0100               	movlb	0	; () banked
  4974  0107B4  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4975  0107B6  A4D8               	btfss	status,2,c
  4976  0107B8  D089               	goto	l7316
  4977                           
  4978                           ; BSR set to: 0
  4979  0107BA  0EF7               	movlw	247
  4980  0107BC  0100               	movlb	0	; () banked
  4981  0107BE  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  4982  0107C0  A4D8               	btfss	status,2,c
  4983  0107C2  D084               	goto	l7316
  4984                           
  4985                           ; BSR set to: 0
  4986                           ;inc\CANlib.h: 957: {
  4987                           ;inc\CANlib.h: 958: RXF3SIDLbits.EXIDEN = 0x01;
  4988  0107C4  010F               	movlb	15	; () banked
  4989  0107C6  870D               	bsf	13,3,b	;volatile
  4990                           
  4991                           ; BSR set to: 15
  4992                           ;inc\CANlib.h: 960: tamp = filter & 0x000000FF;
  4993  0107C8  0100               	movlb	0	; () banked
  4994  0107CA  516E               	movf	CANSetFilter@filter& (0+255),w,b
  4995  0107CC  0100               	movlb	0	; () banked
  4996  0107CE  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4997  0107D0  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4998  0107D2  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4999  0107D4  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5000                           
  5001                           ; BSR set to: 0
  5002                           ;inc\CANlib.h: 961: RXF3EIDL = (unsigned char) tamp;
  5003  0107D6  C078  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5004                           
  5005                           ; BSR set to: 0
  5006                           ;inc\CANlib.h: 963: tamp = filter & 0x0000FF00;
  5007  0107DA  0E00               	movlw	0
  5008  0107DC  0100               	movlb	0	; () banked
  5009  0107DE  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  5010  0107E0  0100               	movlb	0	; () banked
  5011  0107E2  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5012  0107E4  0EFF               	movlw	255
  5013  0107E6  0100               	movlb	0	; () banked
  5014  0107E8  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5015  0107EA  0100               	movlb	0	; () banked
  5016  0107EC  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5017  0107EE  0E00               	movlw	0
  5018  0107F0  0100               	movlb	0	; () banked
  5019  0107F2  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5020  0107F4  0100               	movlb	0	; () banked
  5021  0107F6  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5022  0107F8  0E00               	movlw	0
  5023  0107FA  0100               	movlb	0	; () banked
  5024  0107FC  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5025  0107FE  0100               	movlb	0	; () banked
  5026  010800  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5027                           
  5028                           ; BSR set to: 0
  5029                           ;inc\CANlib.h: 964: tamp = tamp >> 8;
  5030  010802  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  5031  010806  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5032  01080A  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5033  01080E  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5034  010812  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  5035  010816  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5036  01081A  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5037  01081E  0100               	movlb	0	; () banked
  5038  010820  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  5039  010822  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  5040  010826  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5041  01082A  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5042  01082E  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5043                           
  5044                           ; BSR set to: 0
  5045                           ;inc\CANlib.h: 965: RXF3EIDH = (unsigned char) tamp;
  5046  010832  C078  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5047                           
  5048                           ; BSR set to: 0
  5049                           ;inc\CANlib.h: 967: if (filter & 0x00010000)
  5050  010836  0100               	movlb	0	; () banked
  5051  010838  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5052  01083A  D003               	goto	l504
  5053                           
  5054                           ; BSR set to: 0
  5055                           ;inc\CANlib.h: 968: RXF3SIDLbits.EID16 = 0x01;
  5056  01083C  010F               	movlb	15	; () banked
  5057  01083E  810D               	bsf	13,0,b	;volatile
  5058  010840  D002               	goto	l505
  5059  010842                     l504:
  5060                           
  5061                           ; BSR set to: 0
  5062                           ;inc\CANlib.h: 969: else
  5063                           ;inc\CANlib.h: 970: RXF3SIDLbits.EID16 = 0x00;
  5064  010842  010F               	movlb	15	; () banked
  5065  010844  910D               	bcf	13,0,b	;volatile
  5066  010846                     l505:
  5067                           
  5068                           ; BSR set to: 15
  5069                           ;inc\CANlib.h: 972: if (filter & 0x00020000)
  5070  010846  0100               	movlb	0	; () banked
  5071  010848  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5072  01084A  D003               	goto	l506
  5073                           
  5074                           ; BSR set to: 0
  5075                           ;inc\CANlib.h: 973: RXF3SIDLbits.EID17 = 0x01;
  5076  01084C  010F               	movlb	15	; () banked
  5077  01084E  830D               	bsf	13,1,b	;volatile
  5078  010850  D002               	goto	l507
  5079  010852                     l506:
  5080                           
  5081                           ; BSR set to: 0
  5082                           ;inc\CANlib.h: 974: else
  5083                           ;inc\CANlib.h: 975: RXF3SIDLbits.EID17 = 0x00;
  5084  010852  010F               	movlb	15	; () banked
  5085  010854  930D               	bcf	13,1,b	;volatile
  5086  010856                     l507:
  5087                           
  5088                           ; BSR set to: 15
  5089                           ;inc\CANlib.h: 977: if (filter & 0x00040000)
  5090  010856  0100               	movlb	0	; () banked
  5091  010858  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5092  01085A  D003               	goto	l508
  5093                           
  5094                           ; BSR set to: 0
  5095                           ;inc\CANlib.h: 978: RXF3SIDLbits.SID0 = 0x01;
  5096  01085C  010F               	movlb	15	; () banked
  5097  01085E  8B0D               	bsf	13,5,b	;volatile
  5098  010860  D002               	goto	l509
  5099  010862                     l508:
  5100                           
  5101                           ; BSR set to: 0
  5102                           ;inc\CANlib.h: 979: else
  5103                           ;inc\CANlib.h: 980: RXF3SIDLbits.SID0 = 0x00;
  5104  010862  010F               	movlb	15	; () banked
  5105  010864  9B0D               	bcf	13,5,b	;volatile
  5106  010866                     l509:
  5107                           
  5108                           ; BSR set to: 15
  5109                           ;inc\CANlib.h: 982: if (filter & 0x00080000)
  5110  010866  0100               	movlb	0	; () banked
  5111  010868  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5112  01086A  D003               	goto	l510
  5113                           
  5114                           ; BSR set to: 0
  5115                           ;inc\CANlib.h: 983: RXF3SIDLbits.SID1 = 0x01;
  5116  01086C  010F               	movlb	15	; () banked
  5117  01086E  8D0D               	bsf	13,6,b	;volatile
  5118  010870  D002               	goto	l511
  5119  010872                     l510:
  5120                           
  5121                           ; BSR set to: 0
  5122                           ;inc\CANlib.h: 984: else
  5123                           ;inc\CANlib.h: 985: RXF3SIDLbits.SID1 = 0x00;
  5124  010872  010F               	movlb	15	; () banked
  5125  010874  9D0D               	bcf	13,6,b	;volatile
  5126  010876                     l511:
  5127                           
  5128                           ; BSR set to: 15
  5129                           ;inc\CANlib.h: 987: if (filter & 0x00100000)
  5130  010876  0100               	movlb	0	; () banked
  5131  010878  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5132  01087A  D003               	goto	l512
  5133                           
  5134                           ; BSR set to: 0
  5135                           ;inc\CANlib.h: 988: RXF3SIDLbits.SID2 = 0x01 ;
  5136  01087C  010F               	movlb	15	; () banked
  5137  01087E  8F0D               	bsf	13,7,b	;volatile
  5138  010880  D002               	goto	l7310
  5139  010882                     l512:
  5140                           
  5141                           ; BSR set to: 0
  5142                           ;inc\CANlib.h: 989: else
  5143                           ;inc\CANlib.h: 990: RXF3SIDLbits.SID2 = 0x00 ;
  5144  010882  010F               	movlb	15	; () banked
  5145  010884  9F0D               	bcf	13,7,b	;volatile
  5146  010886                     l7310:
  5147                           
  5148                           ; BSR set to: 15
  5149                           ;inc\CANlib.h: 992: tamp = (filter >> 21);
  5150  010886  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  5151  01088A  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5152  01088E  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5153  010892  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5154  010896  0E16               	movlw	22
  5155  010898  D006               	goto	u9640
  5156  01089A                     u9645:
  5157  01089A  0100               	movlb	0	; () banked
  5158  01089C  90D8               	bcf	status,0,c
  5159  01089E  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5160  0108A0  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5161  0108A2  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5162  0108A4  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  5163  0108A6                     u9640:
  5164  0108A6  2EE8               	decfsz	wreg,f,c
  5165  0108A8  D7F8               	goto	u9645
  5166  0108AA  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  5167  0108AE  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5168  0108B2  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5169  0108B6  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5170                           
  5171                           ; BSR set to: 0
  5172                           ;inc\CANlib.h: 993: tamp = tamp & 0x000000FF;
  5173  0108BA  0100               	movlb	0	; () banked
  5174  0108BC  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  5175  0108BE  0100               	movlb	0	; () banked
  5176  0108C0  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5177  0108C2  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5178  0108C4  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5179  0108C6  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5180                           
  5181                           ; BSR set to: 0
  5182                           ;inc\CANlib.h: 994: RXF3SIDH = (unsigned char) tamp;
  5183  0108C8  C078  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5184  0108CC                     l7316:
  5185                           
  5186                           ; BSR set to: 0
  5187                           ;inc\CANlib.h: 995: }
  5188                           ;inc\CANlib.h: 997: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  5189  0108CC  0E04               	movlw	4
  5190  0108CE  0100               	movlb	0	; () banked
  5191  0108D0  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5192  0108D2  A4D8               	btfss	status,2,c
  5193  0108D4  D089               	goto	l7350
  5194                           
  5195                           ; BSR set to: 0
  5196  0108D6  0EF7               	movlw	247
  5197  0108D8  0100               	movlb	0	; () banked
  5198  0108DA  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  5199  0108DC  A4D8               	btfss	status,2,c
  5200  0108DE  D084               	goto	l7350
  5201                           
  5202                           ; BSR set to: 0
  5203                           ;inc\CANlib.h: 998: {
  5204                           ;inc\CANlib.h: 999: RXF4SIDLbits.EXIDEN = 0x01;
  5205  0108E0  010F               	movlb	15	; () banked
  5206  0108E2  8711               	bsf	17,3,b	;volatile
  5207                           
  5208                           ; BSR set to: 15
  5209                           ;inc\CANlib.h: 1001: tamp = filter & 0x000000FF;
  5210  0108E4  0100               	movlb	0	; () banked
  5211  0108E6  516E               	movf	CANSetFilter@filter& (0+255),w,b
  5212  0108E8  0100               	movlb	0	; () banked
  5213  0108EA  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5214  0108EC  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5215  0108EE  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5216  0108F0  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5217                           
  5218                           ; BSR set to: 0
  5219                           ;inc\CANlib.h: 1002: RXF4EIDL = (unsigned char) tamp;
  5220  0108F2  C078  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  5221                           
  5222                           ; BSR set to: 0
  5223                           ;inc\CANlib.h: 1004: tamp = filter & 0x0000FF00;
  5224  0108F6  0E00               	movlw	0
  5225  0108F8  0100               	movlb	0	; () banked
  5226  0108FA  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  5227  0108FC  0100               	movlb	0	; () banked
  5228  0108FE  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5229  010900  0EFF               	movlw	255
  5230  010902  0100               	movlb	0	; () banked
  5231  010904  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5232  010906  0100               	movlb	0	; () banked
  5233  010908  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5234  01090A  0E00               	movlw	0
  5235  01090C  0100               	movlb	0	; () banked
  5236  01090E  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5237  010910  0100               	movlb	0	; () banked
  5238  010912  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5239  010914  0E00               	movlw	0
  5240  010916  0100               	movlb	0	; () banked
  5241  010918  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5242  01091A  0100               	movlb	0	; () banked
  5243  01091C  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5244                           
  5245                           ; BSR set to: 0
  5246                           ;inc\CANlib.h: 1005: tamp = tamp >> 8;
  5247  01091E  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  5248  010922  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5249  010926  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5250  01092A  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5251  01092E  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  5252  010932  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5253  010936  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5254  01093A  0100               	movlb	0	; () banked
  5255  01093C  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  5256  01093E  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  5257  010942  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5258  010946  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5259  01094A  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5260                           
  5261                           ; BSR set to: 0
  5262                           ;inc\CANlib.h: 1006: RXF4EIDH = (unsigned char) tamp;
  5263  01094E  C078  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  5264                           
  5265                           ; BSR set to: 0
  5266                           ;inc\CANlib.h: 1008: if (filter & 0x00010000)
  5267  010952  0100               	movlb	0	; () banked
  5268  010954  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5269  010956  D003               	goto	l515
  5270                           
  5271                           ; BSR set to: 0
  5272                           ;inc\CANlib.h: 1009: RXF4SIDLbits.EID16 = 0x01;
  5273  010958  010F               	movlb	15	; () banked
  5274  01095A  8111               	bsf	17,0,b	;volatile
  5275  01095C  D002               	goto	l516
  5276  01095E                     l515:
  5277                           
  5278                           ; BSR set to: 0
  5279                           ;inc\CANlib.h: 1010: else
  5280                           ;inc\CANlib.h: 1011: RXF4SIDLbits.EID16 = 0x00;
  5281  01095E  010F               	movlb	15	; () banked
  5282  010960  9111               	bcf	17,0,b	;volatile
  5283  010962                     l516:
  5284                           
  5285                           ; BSR set to: 15
  5286                           ;inc\CANlib.h: 1013: if (filter & 0x00020000)
  5287  010962  0100               	movlb	0	; () banked
  5288  010964  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5289  010966  D003               	goto	l517
  5290                           
  5291                           ; BSR set to: 0
  5292                           ;inc\CANlib.h: 1014: RXF4SIDLbits.EID17 = 0x01;
  5293  010968  010F               	movlb	15	; () banked
  5294  01096A  8311               	bsf	17,1,b	;volatile
  5295  01096C  D002               	goto	l518
  5296  01096E                     l517:
  5297                           
  5298                           ; BSR set to: 0
  5299                           ;inc\CANlib.h: 1015: else
  5300                           ;inc\CANlib.h: 1016: RXF4SIDLbits.EID17 = 0x00;
  5301  01096E  010F               	movlb	15	; () banked
  5302  010970  9311               	bcf	17,1,b	;volatile
  5303  010972                     l518:
  5304                           
  5305                           ; BSR set to: 15
  5306                           ;inc\CANlib.h: 1018: if (filter & 0x00040000)
  5307  010972  0100               	movlb	0	; () banked
  5308  010974  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5309  010976  D003               	goto	l519
  5310                           
  5311                           ; BSR set to: 0
  5312                           ;inc\CANlib.h: 1019: RXF4SIDLbits.SID0 = 0x01;
  5313  010978  010F               	movlb	15	; () banked
  5314  01097A  8B11               	bsf	17,5,b	;volatile
  5315  01097C  D002               	goto	l520
  5316  01097E                     l519:
  5317                           
  5318                           ; BSR set to: 0
  5319                           ;inc\CANlib.h: 1020: else
  5320                           ;inc\CANlib.h: 1021: RXF4SIDLbits.SID0 = 0x00;
  5321  01097E  010F               	movlb	15	; () banked
  5322  010980  9B11               	bcf	17,5,b	;volatile
  5323  010982                     l520:
  5324                           
  5325                           ; BSR set to: 15
  5326                           ;inc\CANlib.h: 1023: if (filter & 0x00080000)
  5327  010982  0100               	movlb	0	; () banked
  5328  010984  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5329  010986  D003               	goto	l521
  5330                           
  5331                           ; BSR set to: 0
  5332                           ;inc\CANlib.h: 1024: RXF4SIDLbits.SID1 = 0x01;
  5333  010988  010F               	movlb	15	; () banked
  5334  01098A  8D11               	bsf	17,6,b	;volatile
  5335  01098C  D002               	goto	l522
  5336  01098E                     l521:
  5337                           
  5338                           ; BSR set to: 0
  5339                           ;inc\CANlib.h: 1025: else
  5340                           ;inc\CANlib.h: 1026: RXF4SIDLbits.SID1 = 0x00;
  5341  01098E  010F               	movlb	15	; () banked
  5342  010990  9D11               	bcf	17,6,b	;volatile
  5343  010992                     l522:
  5344                           
  5345                           ; BSR set to: 15
  5346                           ;inc\CANlib.h: 1028: if (filter & 0x00100000)
  5347  010992  0100               	movlb	0	; () banked
  5348  010994  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5349  010996  D003               	goto	l523
  5350                           
  5351                           ; BSR set to: 0
  5352                           ;inc\CANlib.h: 1029: RXF4SIDLbits.SID2 = 0x01 ;
  5353  010998  010F               	movlb	15	; () banked
  5354  01099A  8F11               	bsf	17,7,b	;volatile
  5355  01099C  D002               	goto	l7344
  5356  01099E                     l523:
  5357                           
  5358                           ; BSR set to: 0
  5359                           ;inc\CANlib.h: 1030: else
  5360                           ;inc\CANlib.h: 1031: RXF4SIDLbits.SID2 = 0x00 ;
  5361  01099E  010F               	movlb	15	; () banked
  5362  0109A0  9F11               	bcf	17,7,b	;volatile
  5363  0109A2                     l7344:
  5364                           
  5365                           ; BSR set to: 15
  5366                           ;inc\CANlib.h: 1033: tamp = (filter >> 21);
  5367  0109A2  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  5368  0109A6  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5369  0109AA  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5370  0109AE  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5371  0109B2  0E16               	movlw	22
  5372  0109B4  D006               	goto	u9720
  5373  0109B6                     u9725:
  5374  0109B6  0100               	movlb	0	; () banked
  5375  0109B8  90D8               	bcf	status,0,c
  5376  0109BA  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5377  0109BC  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5378  0109BE  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5379  0109C0  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  5380  0109C2                     u9720:
  5381  0109C2  2EE8               	decfsz	wreg,f,c
  5382  0109C4  D7F8               	goto	u9725
  5383  0109C6  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  5384  0109CA  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5385  0109CE  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5386  0109D2  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5387                           
  5388                           ; BSR set to: 0
  5389                           ;inc\CANlib.h: 1034: tamp = tamp & 0x000000FF;
  5390  0109D6  0100               	movlb	0	; () banked
  5391  0109D8  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  5392  0109DA  0100               	movlb	0	; () banked
  5393  0109DC  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5394  0109DE  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5395  0109E0  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5396  0109E2  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5397                           
  5398                           ; BSR set to: 0
  5399                           ;inc\CANlib.h: 1035: RXF4SIDH = (unsigned char) tamp;
  5400  0109E4  C078  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5401  0109E8                     l7350:
  5402                           
  5403                           ; BSR set to: 0
  5404                           ;inc\CANlib.h: 1036: }
  5405                           ;inc\CANlib.h: 1038: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  5406  0109E8  0E05               	movlw	5
  5407  0109EA  0100               	movlb	0	; () banked
  5408  0109EC  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5409  0109EE  A4D8               	btfss	status,2,c
  5410  0109F0  0012               	return	
  5411                           
  5412                           ; BSR set to: 0
  5413  0109F2  0EF7               	movlw	247
  5414  0109F4  0100               	movlb	0	; () banked
  5415  0109F6  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  5416  0109F8  A4D8               	btfss	status,2,c
  5417  0109FA  0012               	return	
  5418                           
  5419                           ; BSR set to: 0
  5420                           ;inc\CANlib.h: 1039: {
  5421                           ;inc\CANlib.h: 1040: RXF5SIDLbits.EXIDEN = 0x01;
  5422  0109FC  010F               	movlb	15	; () banked
  5423  0109FE  8715               	bsf	21,3,b	;volatile
  5424                           
  5425                           ; BSR set to: 15
  5426                           ;inc\CANlib.h: 1042: tamp = filter & 0x000000FF;
  5427  010A00  0100               	movlb	0	; () banked
  5428  010A02  516E               	movf	CANSetFilter@filter& (0+255),w,b
  5429  010A04  0100               	movlb	0	; () banked
  5430  010A06  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5431  010A08  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5432  010A0A  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5433  010A0C  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5434                           
  5435                           ; BSR set to: 0
  5436                           ;inc\CANlib.h: 1043: RXF5EIDL = (unsigned char) tamp;
  5437  010A0E  C078  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  5438                           
  5439                           ; BSR set to: 0
  5440                           ;inc\CANlib.h: 1045: tamp = filter & 0x0000FF00;
  5441  010A12  0E00               	movlw	0
  5442  010A14  0100               	movlb	0	; () banked
  5443  010A16  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  5444  010A18  0100               	movlb	0	; () banked
  5445  010A1A  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5446  010A1C  0EFF               	movlw	255
  5447  010A1E  0100               	movlb	0	; () banked
  5448  010A20  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5449  010A22  0100               	movlb	0	; () banked
  5450  010A24  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5451  010A26  0E00               	movlw	0
  5452  010A28  0100               	movlb	0	; () banked
  5453  010A2A  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5454  010A2C  0100               	movlb	0	; () banked
  5455  010A2E  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5456  010A30  0E00               	movlw	0
  5457  010A32  0100               	movlb	0	; () banked
  5458  010A34  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5459  010A36  0100               	movlb	0	; () banked
  5460  010A38  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5461                           
  5462                           ; BSR set to: 0
  5463                           ;inc\CANlib.h: 1046: tamp = tamp >> 8;
  5464  010A3A  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  5465  010A3E  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5466  010A42  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5467  010A46  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5468  010A4A  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  5469  010A4E  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5470  010A52  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5471  010A56  0100               	movlb	0	; () banked
  5472  010A58  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  5473  010A5A  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  5474  010A5E  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5475  010A62  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5476  010A66  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5477                           
  5478                           ; BSR set to: 0
  5479                           ;inc\CANlib.h: 1047: RXF5EIDH = (unsigned char) tamp;
  5480  010A6A  C078  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  5481                           
  5482                           ; BSR set to: 0
  5483                           ;inc\CANlib.h: 1049: if (filter & 0x00010000)
  5484  010A6E  0100               	movlb	0	; () banked
  5485  010A70  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5486  010A72  D003               	goto	l526
  5487                           
  5488                           ; BSR set to: 0
  5489                           ;inc\CANlib.h: 1050: RXF5SIDLbits.EID16 = 0x01;
  5490  010A74  010F               	movlb	15	; () banked
  5491  010A76  8115               	bsf	21,0,b	;volatile
  5492  010A78  D002               	goto	l527
  5493  010A7A                     l526:
  5494                           
  5495                           ; BSR set to: 0
  5496                           ;inc\CANlib.h: 1051: else
  5497                           ;inc\CANlib.h: 1052: RXF5SIDLbits.EID16 = 0x00;
  5498  010A7A  010F               	movlb	15	; () banked
  5499  010A7C  9115               	bcf	21,0,b	;volatile
  5500  010A7E                     l527:
  5501                           
  5502                           ; BSR set to: 15
  5503                           ;inc\CANlib.h: 1054: if (filter & 0x00020000)
  5504  010A7E  0100               	movlb	0	; () banked
  5505  010A80  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5506  010A82  D003               	goto	l528
  5507                           
  5508                           ; BSR set to: 0
  5509                           ;inc\CANlib.h: 1055: RXF5SIDLbits.EID17 = 0x01;
  5510  010A84  010F               	movlb	15	; () banked
  5511  010A86  8315               	bsf	21,1,b	;volatile
  5512  010A88  D002               	goto	l529
  5513  010A8A                     l528:
  5514                           
  5515                           ; BSR set to: 0
  5516                           ;inc\CANlib.h: 1056: else
  5517                           ;inc\CANlib.h: 1057: RXF5SIDLbits.EID17 = 0x00;
  5518  010A8A  010F               	movlb	15	; () banked
  5519  010A8C  9315               	bcf	21,1,b	;volatile
  5520  010A8E                     l529:
  5521                           
  5522                           ; BSR set to: 15
  5523                           ;inc\CANlib.h: 1059: if (filter & 0x00040000)
  5524  010A8E  0100               	movlb	0	; () banked
  5525  010A90  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5526  010A92  D003               	goto	l530
  5527                           
  5528                           ; BSR set to: 0
  5529                           ;inc\CANlib.h: 1060: RXF5SIDLbits.SID0 = 0x01;
  5530  010A94  010F               	movlb	15	; () banked
  5531  010A96  8B15               	bsf	21,5,b	;volatile
  5532  010A98  D002               	goto	l531
  5533  010A9A                     l530:
  5534                           
  5535                           ; BSR set to: 0
  5536                           ;inc\CANlib.h: 1061: else
  5537                           ;inc\CANlib.h: 1062: RXF5SIDLbits.SID0 = 0x00;
  5538  010A9A  010F               	movlb	15	; () banked
  5539  010A9C  9B15               	bcf	21,5,b	;volatile
  5540  010A9E                     l531:
  5541                           
  5542                           ; BSR set to: 15
  5543                           ;inc\CANlib.h: 1064: if (filter & 0x00080000)
  5544  010A9E  0100               	movlb	0	; () banked
  5545  010AA0  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5546  010AA2  D003               	goto	l532
  5547                           
  5548                           ; BSR set to: 0
  5549                           ;inc\CANlib.h: 1065: RXF5SIDLbits.SID1 = 0x01;
  5550  010AA4  010F               	movlb	15	; () banked
  5551  010AA6  8D15               	bsf	21,6,b	;volatile
  5552  010AA8  D002               	goto	l533
  5553  010AAA                     l532:
  5554                           
  5555                           ; BSR set to: 0
  5556                           ;inc\CANlib.h: 1066: else
  5557                           ;inc\CANlib.h: 1067: RXF5SIDLbits.SID1 = 0x00;
  5558  010AAA  010F               	movlb	15	; () banked
  5559  010AAC  9D15               	bcf	21,6,b	;volatile
  5560  010AAE                     l533:
  5561                           
  5562                           ; BSR set to: 15
  5563                           ;inc\CANlib.h: 1069: if (filter & 0x00100000)
  5564  010AAE  0100               	movlb	0	; () banked
  5565  010AB0  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5566  010AB2  D003               	goto	l534
  5567                           
  5568                           ; BSR set to: 0
  5569                           ;inc\CANlib.h: 1070: RXF5SIDLbits.SID2 = 0x01 ;
  5570  010AB4  010F               	movlb	15	; () banked
  5571  010AB6  8F15               	bsf	21,7,b	;volatile
  5572  010AB8  D002               	goto	l7378
  5573  010ABA                     l534:
  5574                           
  5575                           ; BSR set to: 0
  5576                           ;inc\CANlib.h: 1071: else
  5577                           ;inc\CANlib.h: 1072: RXF5SIDLbits.SID2 = 0x00 ;
  5578  010ABA  010F               	movlb	15	; () banked
  5579  010ABC  9F15               	bcf	21,7,b	;volatile
  5580  010ABE                     l7378:
  5581                           
  5582                           ; BSR set to: 15
  5583                           ;inc\CANlib.h: 1074: tamp = (filter >> 21);
  5584  010ABE  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  5585  010AC2  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5586  010AC6  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5587  010ACA  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5588  010ACE  0E16               	movlw	22
  5589  010AD0  D006               	goto	u9800
  5590  010AD2                     u9805:
  5591  010AD2  0100               	movlb	0	; () banked
  5592  010AD4  90D8               	bcf	status,0,c
  5593  010AD6  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5594  010AD8  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5595  010ADA  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5596  010ADC  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  5597  010ADE                     u9800:
  5598  010ADE  2EE8               	decfsz	wreg,f,c
  5599  010AE0  D7F8               	goto	u9805
  5600  010AE2  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  5601  010AE6  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5602  010AEA  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5603  010AEE  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5604                           
  5605                           ; BSR set to: 0
  5606                           ;inc\CANlib.h: 1075: tamp = tamp & 0x000000FF;
  5607  010AF2  0100               	movlb	0	; () banked
  5608  010AF4  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  5609  010AF6  0100               	movlb	0	; () banked
  5610  010AF8  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5611  010AFA  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5612  010AFC  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5613  010AFE  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5614                           
  5615                           ; BSR set to: 0
  5616                           ;inc\CANlib.h: 1076: RXF5SIDH = (unsigned char) tamp;
  5617  010B00  C078  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5618  010B04  0012               	return	
  5619  010B06                     __end_of_CANSetFilter:
  5620                           	opt stack 0
  5621                           tblptru	equ	0xFF8
  5622                           tblptrh	equ	0xFF7
  5623                           tblptrl	equ	0xFF6
  5624                           tablat	equ	0xFF5
  5625                           intcon	equ	0xFF2
  5626                           postinc0	equ	0xFEE
  5627                           wreg	equ	0xFE8
  5628                           status	equ	0xFD8
  5629                           
  5630 ;; *************** function _CANOperationMode *****************
  5631 ;; Defined at:
  5632 ;;		line 207 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  5633 ;; Parameters:    Size  Location     Type
  5634 ;;  mode            1    wreg     enum E16881
  5635 ;; Auto vars:     Size  Location     Type
  5636 ;;  mode            1   14[BANK0 ] enum E16881
  5637 ;; Return value:  Size  Location     Type
  5638 ;;		None               void
  5639 ;; Registers used:
  5640 ;;		wreg, status,2, status,0
  5641 ;; Tracked objects:
  5642 ;;		On entry : 0/0
  5643 ;;		On exit  : 0/0
  5644 ;;		Unchanged: 0/0
  5645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5647 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5649 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5650 ;;Total ram usage:        1 bytes
  5651 ;; Hardware stack levels used:    1
  5652 ;; Hardware stack levels required when called:    3
  5653 ;; This function calls:
  5654 ;;		Nothing
  5655 ;; This function is called by:
  5656 ;;		_CANInitialize
  5657 ;; This function uses a non-reentrant model
  5658 ;;
  5659                           
  5660                           	psect	text9
  5661  015366                     __ptext9:
  5662                           	opt stack 0
  5663  015366                     _CANOperationMode:
  5664                           	opt stack 25
  5665                           
  5666                           ; BSR set to: 0
  5667                           ;incstack = 0
  5668                           ;CANOperationMode@mode stored from wreg
  5669  015366  0100               	movlb	0	; () banked
  5670  015368  6F6E               	movwf	CANOperationMode@mode& (0+255),b
  5671                           
  5672                           ;inc\CANlib.h: 209: CANCON = mode;
  5673  01536A  C06E  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  5674  01536E                     l6974:
  5675  01536E  506E               	movf	3950,w,c	;volatile
  5676  015370  0BE0               	andlw	224
  5677  015372  0100               	movlb	0	; () banked
  5678  015374  196E               	xorwf	CANOperationMode@mode& (0+255),w,b
  5679  015376  B4D8               	btfsc	status,2,c
  5680  015378  0012               	return	
  5681  01537A  D7F9               	goto	l6974
  5682  01537C                     __end_of_CANOperationMode:
  5683                           	opt stack 0
  5684                           tblptru	equ	0xFF8
  5685                           tblptrh	equ	0xFF7
  5686                           tblptrl	equ	0xFF6
  5687                           tablat	equ	0xFF5
  5688                           intcon	equ	0xFF2
  5689                           postinc0	equ	0xFEE
  5690                           wreg	equ	0xFE8
  5691                           status	equ	0xFD8
  5692                           
  5693 ;; *************** function _PWR_Button_Polling *****************
  5694 ;; Defined at:
  5695 ;;		line 257 in file "RemoteCan.c"
  5696 ;; Parameters:    Size  Location     Type
  5697 ;;		None
  5698 ;; Auto vars:     Size  Location     Type
  5699 ;;		None
  5700 ;; Return value:  Size  Location     Type
  5701 ;;		None               void
  5702 ;; Registers used:
  5703 ;;		None
  5704 ;; Tracked objects:
  5705 ;;		On entry : 0/0
  5706 ;;		On exit  : 0/0
  5707 ;;		Unchanged: 0/0
  5708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5713 ;;Total ram usage:        0 bytes
  5714 ;; Hardware stack levels used:    1
  5715 ;; Hardware stack levels required when called:    3
  5716 ;; This function calls:
  5717 ;;		Nothing
  5718 ;; This function is called by:
  5719 ;;		_main
  5720 ;; This function uses a non-reentrant model
  5721 ;;
  5722                           
  5723                           	psect	text10
  5724  01534A                     __ptext10:
  5725                           	opt stack 0
  5726  01534A                     _PWR_Button_Polling:
  5727                           	opt stack 27
  5728                           
  5729                           ;RemoteCan.c: 258: if ((PORTBbits.RB5 == 0) || (wait_low == 0)) {
  5730                           
  5731                           ; BSR set to: 0
  5732                           ;incstack = 0
  5733  01534A  AA81               	btfss	3969,5,c	;volatile
  5734  01534C  D002               	goto	l785
  5735  01534E  BC47               	btfsc	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  5736  015350  0012               	return	
  5737  015352                     l785:
  5738                           
  5739                           ;RemoteCan.c: 259: wait_low = 0;
  5740  015352  9C47               	bcf	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  5741                           
  5742                           ;RemoteCan.c: 260: if (PORTBbits.RB5 == 1) {
  5743  015354  AA81               	btfss	3969,5,c	;volatile
  5744  015356  0012               	return	
  5745                           
  5746                           ;RemoteCan.c: 261: power_switch = ~power_switch;
  5747  015358  BA47               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5748  01535A  D002               	goto	u11430
  5749  01535C  8A47               	bsf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5750  01535E  D001               	goto	u11445
  5751  015360                     u11430:
  5752  015360  9A47               	bcf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5753  015362                     u11445:
  5754                           
  5755                           ;RemoteCan.c: 262: wait_low = 1;
  5756  015362  8C47               	bsf	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  5757  015364  0012               	return	
  5758  015366                     __end_of_PWR_Button_Polling:
  5759                           	opt stack 0
  5760                           tblptru	equ	0xFF8
  5761                           tblptrh	equ	0xFF7
  5762                           tblptrl	equ	0xFF6
  5763                           tablat	equ	0xFF5
  5764                           intcon	equ	0xFF2
  5765                           postinc0	equ	0xFEE
  5766                           wreg	equ	0xFE8
  5767                           status	equ	0xFD8
  5768                           
  5769 ;; *************** function _LCD_Handler *****************
  5770 ;; Defined at:
  5771 ;;		line 189 in file "RemoteCan.c"
  5772 ;; Parameters:    Size  Location     Type
  5773 ;;		None
  5774 ;; Auto vars:     Size  Location     Type
  5775 ;;		None
  5776 ;; Return value:  Size  Location     Type
  5777 ;;		None               void
  5778 ;; Registers used:
  5779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5780 ;; Tracked objects:
  5781 ;;		On entry : 0/0
  5782 ;;		On exit  : 0/0
  5783 ;;		Unchanged: 0/0
  5784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5789 ;;Total ram usage:        0 bytes
  5790 ;; Hardware stack levels used:    1
  5791 ;; Hardware stack levels required when called:    9
  5792 ;; This function calls:
  5793 ;;		_LCD_clear
  5794 ;;		_LCD_goto_line
  5795 ;;		_LCD_write_message
  5796 ;;		_LCD_write_string
  5797 ;;		___fldiv
  5798 ;;		_sprintf
  5799 ;; This function is called by:
  5800 ;;		_main
  5801 ;; This function uses a non-reentrant model
  5802 ;;
  5803                           
  5804                           	psect	text11
  5805  01469C                     __ptext11:
  5806                           	opt stack 0
  5807  01469C                     _LCD_Handler:
  5808                           	opt stack 21
  5809                           
  5810                           ;RemoteCan.c: 190: actual_speed_kmh = actual_speed / 278;
  5811                           
  5812                           ;incstack = 0
  5813  01469C  C007  F06E         	movff	_actual_speed,___fldiv@b
  5814  0146A0  C008  F06F         	movff	_actual_speed+1,___fldiv@b+1
  5815  0146A4  C009  F070         	movff	_actual_speed+2,___fldiv@b+2
  5816  0146A8  C00A  F071         	movff	_actual_speed+3,___fldiv@b+3
  5817  0146AC  0E00               	movlw	0
  5818  0146AE  0100               	movlb	0	; () banked
  5819  0146B0  6F72               	movwf	___fldiv@a& (0+255),b
  5820  0146B2  0E00               	movlw	0
  5821  0146B4  6F73               	movwf	(___fldiv@a+1)& (0+255),b
  5822  0146B6  0E8B               	movlw	139
  5823  0146B8  6F74               	movwf	(___fldiv@a+2)& (0+255),b
  5824  0146BA  0E43               	movlw	67
  5825  0146BC  6F75               	movwf	(___fldiv@a+3)& (0+255),b
  5826  0146BE  EC48  F099         	call	___fldiv	;wreg free
  5827  0146C2  C06E  F0D0         	movff	?___fldiv,_actual_speed_kmh
  5828  0146C6  C06F  F0D1         	movff	?___fldiv+1,_actual_speed_kmh+1
  5829  0146CA  C070  F0D2         	movff	?___fldiv+2,_actual_speed_kmh+2
  5830  0146CE  C071  F0D3         	movff	?___fldiv+3,_actual_speed_kmh+3
  5831                           
  5832                           ;RemoteCan.c: 192: LCD_clear();
  5833  0146D2  EC41  F0A9         	call	_LCD_clear	;wreg free
  5834                           
  5835                           ;RemoteCan.c: 193: LCD_goto_line(1);
  5836  0146D6  0E01               	movlw	1
  5837  0146D8  ECE4  F0A4         	call	_LCD_goto_line
  5838                           
  5839                           ;RemoteCan.c: 194: LCD_write_message("=== VEHICLE DATA ===");
  5840  0146DC  0E97               	movlw	low STR_5
  5841  0146DE  0100               	movlb	0	; () banked
  5842  0146E0  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  5843  0146E2  0EFF               	movlw	high STR_5
  5844  0146E4  0100               	movlb	0	; () banked
  5845  0146E6  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5846  0146E8  EC0E  F0A9         	call	_LCD_write_message	;wreg free
  5847                           
  5848                           ;RemoteCan.c: 196: LCD_goto_line(2);
  5849  0146EC  0E02               	movlw	2
  5850  0146EE  ECE4  F0A4         	call	_LCD_goto_line
  5851                           
  5852                           ;RemoteCan.c: 197: LCD_write_message("Direction: ");
  5853  0146F2  0ECF               	movlw	low STR_6
  5854  0146F4  0100               	movlb	0	; () banked
  5855  0146F6  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  5856  0146F8  0EFF               	movlw	high STR_6
  5857  0146FA  0100               	movlb	0	; () banked
  5858  0146FC  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5859  0146FE  EC0E  F0A9         	call	_LCD_write_message	;wreg free
  5860                           
  5861                           ;RemoteCan.c: 198: if (switch_position != 0) {
  5862  014702  0100               	movlb	0	; () banked
  5863  014704  51EB               	movf	_switch_position& (0+255),w,b	;volatile
  5864  014706  B4D8               	btfsc	status,2,c
  5865  014708  D016               	goto	l8652
  5866                           
  5867                           ; BSR set to: 0
  5868                           ;RemoteCan.c: 199: if (dir == 0) {
  5869  01470A  0100               	movlb	0	; () banked
  5870  01470C  51EA               	movf	_dir& (0+255),w,b	;volatile
  5871  01470E  A4D8               	btfss	status,2,c
  5872  014710  D009               	goto	l8650
  5873                           
  5874                           ; BSR set to: 0
  5875                           ;RemoteCan.c: 200: LCD_write_message("FWD");
  5876  014712  0EF9               	movlw	low STR_7
  5877  014714  0100               	movlb	0	; () banked
  5878  014716  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  5879  014718  0EFF               	movlw	high STR_7
  5880  01471A  0100               	movlb	0	; () banked
  5881  01471C  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5882  01471E  EC0E  F0A9         	call	_LCD_write_message	;wreg free
  5883                           
  5884                           ;RemoteCan.c: 201: } else {
  5885  014722  D011               	goto	l8654
  5886  014724                     l8650:
  5887                           
  5888                           ;RemoteCan.c: 202: LCD_write_message("BKWD");
  5889  014724  0EEF               	movlw	low STR_8
  5890  014726  0100               	movlb	0	; () banked
  5891  014728  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  5892  01472A  0EFF               	movlw	high STR_8
  5893  01472C  0100               	movlb	0	; () banked
  5894  01472E  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5895  014730  EC0E  F0A9         	call	_LCD_write_message	;wreg free
  5896                           
  5897                           ;RemoteCan.c: 203: }
  5898                           ;RemoteCan.c: 204: } else {
  5899  014734  D008               	goto	l8654
  5900  014736                     l8652:
  5901                           
  5902                           ;RemoteCan.c: 206: LCD_write_message("P");
  5903  014736  0EFD               	movlw	low STR_9
  5904  014738  0100               	movlb	0	; () banked
  5905  01473A  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  5906  01473C  0EFF               	movlw	high STR_9
  5907  01473E  0100               	movlb	0	; () banked
  5908  014740  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5909  014742  EC0E  F0A9         	call	_LCD_write_message	;wreg free
  5910  014746                     l8654:
  5911                           
  5912                           ;RemoteCan.c: 207: }
  5913                           ;RemoteCan.c: 209: LCD_goto_line(3);
  5914  014746  0E03               	movlw	3
  5915  014748  ECE4  F0A4         	call	_LCD_goto_line
  5916                           
  5917                           ;RemoteCan.c: 210: sprintf(str, "Speed: %.3f", actual_speed_kmh);
  5918  01474C  0E21               	movlw	low _str
  5919  01474E  0100               	movlb	0	; () banked
  5920  014750  6FBE               	movwf	sprintf@sp& (0+255),b
  5921  014752  0E01               	movlw	high _str
  5922  014754  0100               	movlb	0	; () banked
  5923  014756  6FBF               	movwf	(sprintf@sp+1)& (0+255),b
  5924  014758  0EDB               	movlw	low STR_10
  5925  01475A  0100               	movlb	0	; () banked
  5926  01475C  6FC0               	movwf	sprintf@f& (0+255),b
  5927  01475E  0EFF               	movlw	high STR_10
  5928  014760  0100               	movlb	0	; () banked
  5929  014762  6FC1               	movwf	(sprintf@f+1)& (0+255),b
  5930  014764  C0D0  F0C2         	movff	_actual_speed_kmh,?_sprintf+4
  5931  014768  C0D1  F0C3         	movff	_actual_speed_kmh+1,?_sprintf+5
  5932  01476C  C0D2  F0C4         	movff	_actual_speed_kmh+2,?_sprintf+6
  5933  014770  C0D3  F0C5         	movff	_actual_speed_kmh+3,?_sprintf+7
  5934  014774  EC83  F085         	call	_sprintf	;wreg free
  5935                           
  5936                           ;RemoteCan.c: 211: str[11] = '\0';
  5937  014778  0E00               	movlw	0
  5938  01477A  0101               	movlb	1	; () banked
  5939  01477C  6F2C               	movwf	(_str+11)& (0+255),b
  5940                           
  5941                           ; BSR set to: 1
  5942                           ;RemoteCan.c: 212: LCD_write_string(str);
  5943  01477E  0E21               	movlw	low _str
  5944  014780  0100               	movlb	0	; () banked
  5945  014782  6F7F               	movwf	LCD_write_string@buffer& (0+255),b
  5946  014784  0E01               	movlw	high _str
  5947  014786  0100               	movlb	0	; () banked
  5948  014788  6F80               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  5949  01478A  EC6F  F0A9         	call	_LCD_write_string	;wreg free
  5950                           
  5951                           ;RemoteCan.c: 213: LCD_write_message("Km/h");
  5952  01478E  0EF4               	movlw	low STR_11
  5953  014790  0100               	movlb	0	; () banked
  5954  014792  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  5955  014794  0EFF               	movlw	high STR_11
  5956  014796  0100               	movlb	0	; () banked
  5957  014798  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5958  01479A  EC0E  F0A9         	call	_LCD_write_message	;wreg free
  5959                           
  5960                           ;RemoteCan.c: 214: LCD_goto_line(4);
  5961  01479E  0E04               	movlw	4
  5962  0147A0  ECE4  F0A4         	call	_LCD_goto_line
  5963                           
  5964                           ;RemoteCan.c: 215: LCD_write_message("====================");
  5965  0147A4  0EAC               	movlw	low STR_1
  5966  0147A6  0100               	movlb	0	; () banked
  5967  0147A8  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  5968  0147AA  0EFF               	movlw	high STR_1
  5969  0147AC  0100               	movlb	0	; () banked
  5970  0147AE  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5971  0147B0  EC0E  F0A9         	call	_LCD_write_message	;wreg free
  5972  0147B4  0012               	return		;funcret
  5973  0147B6                     __end_of_LCD_Handler:
  5974                           	opt stack 0
  5975                           tblptru	equ	0xFF8
  5976                           tblptrh	equ	0xFF7
  5977                           tblptrl	equ	0xFF6
  5978                           tablat	equ	0xFF5
  5979                           intcon	equ	0xFF2
  5980                           postinc0	equ	0xFEE
  5981                           wreg	equ	0xFE8
  5982                           status	equ	0xFD8
  5983                           
  5984 ;; *************** function _sprintf *****************
  5985 ;; Defined at:
  5986 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;  sp              2   94[BANK0 ] PTR unsigned char 
  5989 ;;		 -> str(12), 
  5990 ;;  f               2   96[BANK0 ] PTR const unsigned char 
  5991 ;;		 -> STR_10(12), 
  5992 ;; Auto vars:     Size  Location     Type
  5993 ;;  fval            4   20[BANK1 ] PTR const unsigned char 
  5994 ;;  tmpval          4   14[BANK1 ] struct .
  5995 ;;  val             4    8[BANK1 ] unsigned long 
  5996 ;;  cp              3    0        PTR const unsigned char 
  5997 ;;  prec            2   18[BANK1 ] int 
  5998 ;;  exp             2   12[BANK1 ] int 
  5999 ;;  flag            2    6[BANK1 ] unsigned short 
  6000 ;;  ap              2    4[BANK1 ] PTR void [1]
  6001 ;;		 -> ?_sprintf(2), 
  6002 ;;  len             2    0        unsigned int 
  6003 ;;  width           2    0        int 
  6004 ;;  c               1   24[BANK1 ] char 
  6005 ;;  d               1    0        unsigned char 
  6006 ;; Return value:  Size  Location     Type
  6007 ;;                  2   94[BANK0 ] int 
  6008 ;; Registers used:
  6009 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6010 ;; Tracked objects:
  6011 ;;		On entry : 0/0
  6012 ;;		On exit  : 0/0
  6013 ;;		Unchanged: 0/0
  6014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6015 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6016 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0
  6017 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6018 ;;      Totals:         0      10      25       0       0       0       0       0       0       0       0       0       
      +0       0
  6019 ;;Total ram usage:       35 bytes
  6020 ;; Hardware stack levels used:    1
  6021 ;; Hardware stack levels required when called:    5
  6022 ;; This function calls:
  6023 ;;		___awdiv
  6024 ;;		___fladd
  6025 ;;		___flge
  6026 ;;		___flmul
  6027 ;;		___flneg
  6028 ;;		___flsub
  6029 ;;		___fltol
  6030 ;;		___lldiv
  6031 ;;		___llmod
  6032 ;;		___wmul
  6033 ;;		___xxtofl
  6034 ;;		__div_to_l_
  6035 ;;		__tdiv_to_l_
  6036 ;;		_fround
  6037 ;;		_isdigit
  6038 ;;		_scale
  6039 ;; This function is called by:
  6040 ;;		_LCD_Handler
  6041 ;; This function uses a non-reentrant model
  6042 ;;
  6043                           
  6044                           	psect	text12
  6045  010B06                     __ptext12:
  6046                           	opt stack 0
  6047  010B06                     _sprintf:
  6048                           	opt stack 24
  6049                           
  6050                           ;doprnt.c: 494: va_list ap;
  6051                           ;doprnt.c: 499: signed char c;
  6052                           ;doprnt.c: 501: int width;
  6053                           ;doprnt.c: 504: int prec;
  6054                           ;doprnt.c: 508: unsigned short flag;
  6055                           ;doprnt.c: 515: char d;
  6056                           ;doprnt.c: 516: double fval;
  6057                           ;doprnt.c: 517: int exp;
  6058                           ;doprnt.c: 523: union {
  6059                           ;doprnt.c: 524: unsigned long vd;
  6060                           ;doprnt.c: 525: double integ;
  6061                           ;doprnt.c: 526: } tmpval;
  6062                           ;doprnt.c: 528: unsigned long val;
  6063                           ;doprnt.c: 529: unsigned len;
  6064                           ;doprnt.c: 530: const char * cp;
  6065                           ;doprnt.c: 533: *ap = __va_start();
  6066                           
  6067                           ;incstack = 0
  6068  010B06  0EC2               	movlw	low (?_sprintf+4)
  6069  010B08  0101               	movlb	1	; () banked
  6070  010B0A  6F04               	movwf	sprintf@ap& (0+255),b
  6071  010B0C  0E00               	movlw	high (?_sprintf+4)
  6072  010B0E  0101               	movlb	1	; () banked
  6073  010B10  6F05               	movwf	(sprintf@ap+1)& (0+255),b
  6074                           
  6075                           ;doprnt.c: 536: while(c = *f++) {
  6076  010B12  EFB5  F089         	goto	l8322
  6077  010B16                     l8124:
  6078                           
  6079                           ; BSR set to: 1
  6080                           ;doprnt.c: 538: if(c != '%')
  6081  010B16  0E25               	movlw	37
  6082  010B18  0101               	movlb	1	; () banked
  6083  010B1A  1918               	xorwf	sprintf@c& (0+255),w,b
  6084  010B1C  B4D8               	btfsc	status,2,c
  6085  010B1E  D008               	goto	l8130
  6086                           
  6087                           ; BSR set to: 1
  6088                           ;doprnt.c: 540: {
  6089                           ;doprnt.c: 541: ((*sp++ = (c)));
  6090  010B20  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  6091  010B24  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  6092  010B28  C118  FFDF         	movff	sprintf@c,indf2
  6093  010B2C  EFB2  F089         	goto	l8320
  6094  010B30                     l8130:
  6095                           
  6096                           ;doprnt.c: 543: }
  6097                           ;doprnt.c: 548: flag = 0;
  6098  010B30  0E00               	movlw	0
  6099  010B32  0101               	movlb	1	; () banked
  6100  010B34  6F07               	movwf	(sprintf@flag+1)& (0+255),b
  6101  010B36  0E00               	movlw	0
  6102  010B38  6F06               	movwf	sprintf@flag& (0+255),b
  6103                           
  6104                           ; BSR set to: 1
  6105                           ;doprnt.c: 611: if(*f == '.') {
  6106  010B3A  C0C0  FFF6         	movff	sprintf@f,tblptrl
  6107  010B3E  C0C1  FFF7         	movff	sprintf@f+1,tblptrh
  6108  010B42                     	if	0	;tblptru may be non-zero
  6109  010B42                     	endif
  6110  010B42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6111  010B42  0E00               	movlw	low (__mediumconst shr (0+16))
  6112  010B44  6EF8               	movwf	tblptru,c
  6113  010B46                     	endif
  6114  010B46  0008               	tblrd		*
  6115  010B48  50F5               	movf	tablat,w,c
  6116  010B4A  0A2E               	xorlw	46
  6117  010B4C  A4D8               	btfss	status,2,c
  6118  010B4E  D03D               	goto	l8144
  6119                           
  6120                           ; BSR set to: 1
  6121                           ;doprnt.c: 612: flag |= 0x4000;
  6122  010B50  0101               	movlb	1	; () banked
  6123  010B52  8D07               	bsf	(sprintf@flag+1)& (0+255),6,b
  6124                           
  6125                           ;doprnt.c: 613: f++;
  6126  010B54  0100               	movlb	0	; () banked
  6127  010B56  4BC0               	infsnz	sprintf@f& (0+255),f,b
  6128  010B58  2BC1               	incf	(sprintf@f+1)& (0+255),f,b
  6129                           
  6130                           ; BSR set to: 0
  6131                           ;doprnt.c: 620: {
  6132                           ;doprnt.c: 621: prec = 0;
  6133  010B5A  0E00               	movlw	0
  6134  010B5C  0101               	movlb	1	; () banked
  6135  010B5E  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  6136  010B60  0E00               	movlw	0
  6137  010B62  6F12               	movwf	sprintf@prec& (0+255),b
  6138                           
  6139                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  6140  010B64  D025               	goto	l8142
  6141  010B66                     l8138:
  6142                           
  6143                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  6144  010B66  C112  F06E         	movff	sprintf@prec,___wmul@multiplier
  6145  010B6A  C113  F06F         	movff	sprintf@prec+1,___wmul@multiplier+1
  6146  010B6E  0E00               	movlw	0
  6147  010B70  0100               	movlb	0	; () banked
  6148  010B72  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6149  010B74  0E0A               	movlw	10
  6150  010B76  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6151  010B78  ECF3  F0A8         	call	___wmul	;wreg free
  6152  010B7C  C0C0  FFF6         	movff	sprintf@f,tblptrl
  6153  010B80  C0C1  FFF7         	movff	sprintf@f+1,tblptrh
  6154  010B84                     	if	0	;tblptru may be non-zero
  6155  010B84                     	endif
  6156  010B84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6157  010B84  0E00               	movlw	low (__mediumconst shr (0+16))
  6158  010B86  6EF8               	movwf	tblptru,c
  6159  010B88                     	endif
  6160  010B88  0008               	tblrd		*
  6161  010B8A  50F5               	movf	tablat,w,c
  6162  010B8C  0100               	movlb	0	; () banked
  6163  010B8E  276E               	addwf	?___wmul& (0+255),f,b
  6164  010B90  0E00               	movlw	0
  6165  010B92  0100               	movlb	0	; () banked
  6166  010B94  236F               	addwfc	(?___wmul+1)& (0+255),f,b
  6167  010B96  0ED0               	movlw	208
  6168  010B98  0100               	movlb	0	; () banked
  6169  010B9A  256E               	addwf	?___wmul& (0+255),w,b
  6170  010B9C  0101               	movlb	1	; () banked
  6171  010B9E  6F12               	movwf	sprintf@prec& (0+255),b
  6172  010BA0  0EFF               	movlw	255
  6173  010BA2  0100               	movlb	0	; () banked
  6174  010BA4  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6175  010BA6  0101               	movlb	1	; () banked
  6176  010BA8  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  6177                           
  6178                           ; BSR set to: 1
  6179  010BAA  0100               	movlb	0	; () banked
  6180  010BAC  4BC0               	infsnz	sprintf@f& (0+255),f,b
  6181  010BAE  2BC1               	incf	(sprintf@f+1)& (0+255),f,b
  6182  010BB0                     l8142:
  6183  010BB0  C0C0  FFF6         	movff	sprintf@f,tblptrl
  6184  010BB4  C0C1  FFF7         	movff	sprintf@f+1,tblptrh
  6185  010BB8                     	if	0	;tblptru may be non-zero
  6186  010BB8                     	endif
  6187  010BB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6188  010BB8  0E00               	movlw	low (__mediumconst shr (0+16))
  6189  010BBA  6EF8               	movwf	tblptru,c
  6190  010BBC                     	endif
  6191  010BBC  0008               	tblrd		*
  6192  010BBE  50F5               	movf	tablat,w,c
  6193  010BC0  EC5A  F0A9         	call	_isdigit
  6194  010BC4  A0D8               	btfss	status,0,c
  6195  010BC6  D00C               	goto	l8152
  6196  010BC8  D7CE               	goto	l8138
  6197  010BCA                     l8144:
  6198                           
  6199                           ;doprnt.c: 626: prec = 0;
  6200  010BCA  0E00               	movlw	0
  6201  010BCC  0101               	movlb	1	; () banked
  6202  010BCE  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  6203  010BD0  0E00               	movlw	0
  6204  010BD2  6F12               	movwf	sprintf@prec& (0+255),b
  6205                           
  6206                           ; BSR set to: 1
  6207                           ;doprnt.c: 628: flag |= 0x1000;
  6208  010BD4  0101               	movlb	1	; () banked
  6209  010BD6  8907               	bsf	(sprintf@flag+1)& (0+255),4,b
  6210                           
  6211                           ; BSR set to: 1
  6212                           ;doprnt.c: 630: }
  6213                           ;doprnt.c: 635: switch(c = *f++) {
  6214  010BD8  D003               	goto	l8152
  6215  010BDA                     l8148:
  6216                           
  6217                           ; BSR set to: 1
  6218                           ;doprnt.c: 663: flag |= 0x400;
  6219  010BDA  0101               	movlb	1	; () banked
  6220  010BDC  8507               	bsf	(sprintf@flag+1)& (0+255),2,b
  6221                           
  6222                           ;doprnt.c: 664: break;
  6223  010BDE  D015               	goto	l8154
  6224  010BE0                     l8152:
  6225  010BE0  C0C0  FFF6         	movff	sprintf@f,tblptrl
  6226  010BE4  C0C1  FFF7         	movff	sprintf@f+1,tblptrh
  6227  010BE8  0100               	movlb	0	; () banked
  6228  010BEA  4BC0               	infsnz	sprintf@f& (0+255),f,b
  6229  010BEC  2BC1               	incf	(sprintf@f+1)& (0+255),f,b
  6230  010BEE                     	if	0	;tblptru may be non-zero
  6231  010BEE                     	endif
  6232  010BEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6233  010BEE  0E00               	movlw	low (__mediumconst shr (0+16))
  6234  010BF0  6EF8               	movwf	tblptru,c
  6235  010BF2                     	endif
  6236  010BF2  0008               	tblrd		*
  6237  010BF4  CFF5 F118          	movff	tablat,sprintf@c
  6238  010BF8  0101               	movlb	1	; () banked
  6239  010BFA  5118               	movf	sprintf@c& (0+255),w,b
  6240                           
  6241                           ; Switch size 1, requested type "space"
  6242                           ; Number of cases is 2, Range of values is 0 to 102
  6243                           ; switch strategies available:
  6244                           ; Name         Instructions Cycles
  6245                           ; simple_byte            7     4 (average)
  6246                           ;	Chosen strategy is simple_byte
  6247  010BFC  0A00               	xorlw	0	; case 0
  6248  010BFE  B4D8               	btfsc	status,2,c
  6249  010C00  D3C5               	goto	l8324
  6250  010C02  0A66               	xorlw	102	; case 102
  6251  010C04  B4D8               	btfsc	status,2,c
  6252  010C06  D7E9               	goto	l8148
  6253  010C08  D3B0               	goto	l8322
  6254  010C0A                     l8154:
  6255                           
  6256                           ; BSR set to: 1
  6257                           ;doprnt.c: 825: if(flag & (0x700)) {
  6258  010C0A  0E07               	movlw	7
  6259  010C0C  0101               	movlb	1	; () banked
  6260  010C0E  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  6261  010C10  B4D8               	btfsc	status,2,c
  6262  010C12  D353               	goto	l8302
  6263                           
  6264                           ; BSR set to: 1
  6265                           ;doprnt.c: 827: if(flag & 0x1000)
  6266  010C14  0101               	movlb	1	; () banked
  6267  010C16  A907               	btfss	(sprintf@flag+1)& (0+255),4,b
  6268  010C18  D005               	goto	l8160
  6269                           
  6270                           ; BSR set to: 1
  6271                           ;doprnt.c: 829: prec = 6;
  6272  010C1A  0E00               	movlw	0
  6273  010C1C  0101               	movlb	1	; () banked
  6274  010C1E  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  6275  010C20  0E06               	movlw	6
  6276  010C22  6F12               	movwf	sprintf@prec& (0+255),b
  6277  010C24                     l8160:
  6278                           
  6279                           ; BSR set to: 1
  6280                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  6281  010C24  C104  FFD9         	movff	sprintf@ap,fsr2l
  6282  010C28  C105  FFDA         	movff	sprintf@ap+1,fsr2h
  6283  010C2C  CFDE F114          	movff	postinc2,sprintf@fval
  6284  010C30  CFDE F115          	movff	postinc2,sprintf@fval+1
  6285  010C34  CFDE F116          	movff	postinc2,sprintf@fval+2
  6286  010C38  CFDE F117          	movff	postinc2,sprintf@fval+3
  6287                           
  6288                           ; BSR set to: 1
  6289  010C3C  0E04               	movlw	4
  6290  010C3E  0101               	movlb	1	; () banked
  6291  010C40  2704               	addwf	sprintf@ap& (0+255),f,b
  6292  010C42  0E00               	movlw	0
  6293  010C44  2305               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6294                           
  6295                           ; BSR set to: 1
  6296                           ;doprnt.c: 831: if(fval < 0.0) {
  6297  010C46  0101               	movlb	1	; () banked
  6298  010C48  AF17               	btfss	(sprintf@fval+3)& (0+255),7,b
  6299  010C4A  D015               	goto	l8170
  6300                           
  6301                           ; BSR set to: 1
  6302                           ;doprnt.c: 832: fval = -fval;
  6303  010C4C  C114  F06E         	movff	sprintf@fval,___flneg@f1
  6304  010C50  C115  F06F         	movff	sprintf@fval+1,___flneg@f1+1
  6305  010C54  C116  F070         	movff	sprintf@fval+2,___flneg@f1+2
  6306  010C58  C117  F071         	movff	sprintf@fval+3,___flneg@f1+3
  6307  010C5C  ECD7  F0A8         	call	___flneg	;wreg free
  6308  010C60  C06E  F114         	movff	?___flneg,sprintf@fval
  6309  010C64  C06F  F115         	movff	?___flneg+1,sprintf@fval+1
  6310  010C68  C070  F116         	movff	?___flneg+2,sprintf@fval+2
  6311  010C6C  C071  F117         	movff	?___flneg+3,sprintf@fval+3
  6312                           
  6313                           ;doprnt.c: 833: flag |= 0x03;
  6314  010C70  0E03               	movlw	3
  6315  010C72  0101               	movlb	1	; () banked
  6316  010C74  1306               	iorwf	sprintf@flag& (0+255),f,b
  6317  010C76                     l8170:
  6318                           
  6319                           ; BSR set to: 1
  6320                           ;doprnt.c: 834: }
  6321                           ;doprnt.c: 835: exp = 0;
  6322  010C76  0E00               	movlw	0
  6323  010C78  0101               	movlb	1	; () banked
  6324  010C7A  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  6325  010C7C  0E00               	movlw	0
  6326  010C7E  6F0C               	movwf	sprintf@exp& (0+255),b
  6327                           
  6328                           ; BSR set to: 1
  6329                           ;doprnt.c: 836: if( fval!=0) {
  6330  010C80  0101               	movlb	1	; () banked
  6331  010C82  5114               	movf	sprintf@fval& (0+255),w,b
  6332  010C84  0101               	movlb	1	; () banked
  6333  010C86  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6334  010C88  0101               	movlb	1	; () banked
  6335  010C8A  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6336  010C8C  0101               	movlb	1	; () banked
  6337  010C8E  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  6338  010C90  B4D8               	btfsc	status,2,c
  6339  010C92  D08E               	goto	l8198
  6340                           
  6341                           ; BSR set to: 1
  6342                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  6343  010C94  0101               	movlb	1	; () banked
  6344  010C96  3516               	rlcf	(sprintf@fval+2)& (0+255),w,b
  6345  010C98  3517               	rlcf	(sprintf@fval+3)& (0+255),w,b
  6346  010C9A  0F82               	addlw	130
  6347  010C9C  0101               	movlb	1	; () banked
  6348  010C9E  6F0C               	movwf	sprintf@exp& (0+255),b
  6349  010CA0  0101               	movlb	1	; () banked
  6350  010CA2  6B0D               	clrf	(sprintf@exp+1)& (0+255),b
  6351  010CA4  0EFF               	movlw	255
  6352  010CA6  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  6353                           
  6354                           ; BSR set to: 1
  6355                           ;doprnt.c: 838: exp--;
  6356  010CA8  0101               	movlb	1	; () banked
  6357  010CAA  070C               	decf	sprintf@exp& (0+255),f,b
  6358  010CAC  A0D8               	btfss	status,0,c
  6359  010CAE  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  6360                           
  6361                           ; BSR set to: 1
  6362                           ;doprnt.c: 839: exp *= 3;
  6363  010CB0  C10C  F06E         	movff	sprintf@exp,___wmul@multiplier
  6364  010CB4  C10D  F06F         	movff	sprintf@exp+1,___wmul@multiplier+1
  6365  010CB8  0E00               	movlw	0
  6366  010CBA  0100               	movlb	0	; () banked
  6367  010CBC  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6368  010CBE  0E03               	movlw	3
  6369  010CC0  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6370  010CC2  ECF3  F0A8         	call	___wmul	;wreg free
  6371  010CC6  C06E  F10C         	movff	?___wmul,sprintf@exp
  6372  010CCA  C06F  F10D         	movff	?___wmul+1,sprintf@exp+1
  6373                           
  6374                           ;doprnt.c: 840: exp /= 10;
  6375  010CCE  C10C  F074         	movff	sprintf@exp,___awdiv@dividend
  6376  010CD2  C10D  F075         	movff	sprintf@exp+1,___awdiv@dividend+1
  6377  010CD6  0E00               	movlw	0
  6378  010CD8  0100               	movlb	0	; () banked
  6379  010CDA  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  6380  010CDC  0E0A               	movlw	10
  6381  010CDE  6F76               	movwf	___awdiv@divisor& (0+255),b
  6382  010CE0  EC38  F0A6         	call	___awdiv	;wreg free
  6383  010CE4  C074  F10C         	movff	?___awdiv,sprintf@exp
  6384  010CE8  C075  F10D         	movff	?___awdiv+1,sprintf@exp+1
  6385                           
  6386                           ;doprnt.c: 841: if(exp < 0)
  6387  010CEC  0101               	movlb	1	; () banked
  6388  010CEE  AF0D               	btfss	(sprintf@exp+1)& (0+255),7,b
  6389  010CF0  D004               	goto	l8186
  6390                           
  6391                           ; BSR set to: 1
  6392                           ;doprnt.c: 842: exp--;
  6393  010CF2  0101               	movlb	1	; () banked
  6394  010CF4  070C               	decf	sprintf@exp& (0+255),f,b
  6395  010CF6  A0D8               	btfss	status,0,c
  6396  010CF8  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  6397  010CFA                     l8186:
  6398                           
  6399                           ; BSR set to: 1
  6400                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  6401  010CFA  0101               	movlb	1	; () banked
  6402  010CFC  510C               	movf	sprintf@exp& (0+255),w,b
  6403  010CFE  0800               	sublw	0
  6404  010D00  EC93  F08D         	call	_scale
  6405  010D04  C095  F10E         	movff	?_scale,sprintf@tmpval
  6406  010D08  C096  F10F         	movff	?_scale+1,sprintf@tmpval+1
  6407  010D0C  C097  F110         	movff	?_scale+2,sprintf@tmpval+2
  6408  010D10  C098  F111         	movff	?_scale+3,sprintf@tmpval+3
  6409                           
  6410                           ;doprnt.c: 847: tmpval.integ *= fval;
  6411  010D14  C10E  F07C         	movff	sprintf@tmpval,___flmul@b
  6412  010D18  C10F  F07D         	movff	sprintf@tmpval+1,___flmul@b+1
  6413  010D1C  C110  F07E         	movff	sprintf@tmpval+2,___flmul@b+2
  6414  010D20  C111  F07F         	movff	sprintf@tmpval+3,___flmul@b+3
  6415  010D24  C114  F080         	movff	sprintf@fval,___flmul@a
  6416  010D28  C115  F081         	movff	sprintf@fval+1,___flmul@a+1
  6417  010D2C  C116  F082         	movff	sprintf@fval+2,___flmul@a+2
  6418  010D30  C117  F083         	movff	sprintf@fval+3,___flmul@a+3
  6419  010D34  ECFA  F094         	call	___flmul	;wreg free
  6420  010D38  C07C  F10E         	movff	?___flmul,sprintf@tmpval
  6421  010D3C  C07D  F10F         	movff	?___flmul+1,sprintf@tmpval+1
  6422  010D40  C07E  F110         	movff	?___flmul+2,sprintf@tmpval+2
  6423  010D44  C07F  F111         	movff	?___flmul+3,sprintf@tmpval+3
  6424                           
  6425                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  6426  010D48  C10E  F06E         	movff	sprintf@tmpval,___flge@ff1
  6427  010D4C  C10F  F06F         	movff	sprintf@tmpval+1,___flge@ff1+1
  6428  010D50  C110  F070         	movff	sprintf@tmpval+2,___flge@ff1+2
  6429  010D54  C111  F071         	movff	sprintf@tmpval+3,___flge@ff1+3
  6430  010D58  0E00               	movlw	0
  6431  010D5A  0100               	movlb	0	; () banked
  6432  010D5C  6F72               	movwf	___flge@ff2& (0+255),b
  6433  010D5E  0E00               	movlw	0
  6434  010D60  6F73               	movwf	(___flge@ff2+1)& (0+255),b
  6435  010D62  0E80               	movlw	128
  6436  010D64  6F74               	movwf	(___flge@ff2+2)& (0+255),b
  6437  010D66  0E3F               	movlw	63
  6438  010D68  6F75               	movwf	(___flge@ff2+3)& (0+255),b
  6439  010D6A  EC0B  F0A1         	call	___flge	;wreg free
  6440  010D6E  0100               	movlb	0	; () banked
  6441  010D70  B0D8               	btfsc	status,0,c
  6442  010D72  D005               	goto	l8194
  6443                           
  6444                           ; BSR set to: 0
  6445                           ;doprnt.c: 849: exp--;
  6446  010D74  0101               	movlb	1	; () banked
  6447  010D76  070C               	decf	sprintf@exp& (0+255),f,b
  6448  010D78  A0D8               	btfss	status,0,c
  6449  010D7A  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  6450  010D7C  D019               	goto	l8198
  6451  010D7E                     l8194:
  6452                           
  6453                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  6454  010D7E  C10E  F06E         	movff	sprintf@tmpval,___flge@ff1
  6455  010D82  C10F  F06F         	movff	sprintf@tmpval+1,___flge@ff1+1
  6456  010D86  C110  F070         	movff	sprintf@tmpval+2,___flge@ff1+2
  6457  010D8A  C111  F071         	movff	sprintf@tmpval+3,___flge@ff1+3
  6458  010D8E  0E00               	movlw	0
  6459  010D90  0100               	movlb	0	; () banked
  6460  010D92  6F72               	movwf	___flge@ff2& (0+255),b
  6461  010D94  0E00               	movlw	0
  6462  010D96  6F73               	movwf	(___flge@ff2+1)& (0+255),b
  6463  010D98  0E20               	movlw	32
  6464  010D9A  6F74               	movwf	(___flge@ff2+2)& (0+255),b
  6465  010D9C  0E41               	movlw	65
  6466  010D9E  6F75               	movwf	(___flge@ff2+3)& (0+255),b
  6467  010DA0  EC0B  F0A1         	call	___flge	;wreg free
  6468  010DA4  0100               	movlb	0	; () banked
  6469  010DA6  A0D8               	btfss	status,0,c
  6470  010DA8  D003               	goto	l8198
  6471                           
  6472                           ; BSR set to: 0
  6473                           ;doprnt.c: 851: exp++;
  6474  010DAA  0101               	movlb	1	; () banked
  6475  010DAC  4B0C               	infsnz	sprintf@exp& (0+255),f,b
  6476  010DAE  2B0D               	incf	(sprintf@exp+1)& (0+255),f,b
  6477  010DB0                     l8198:
  6478                           
  6479                           ;doprnt.c: 852: }
  6480                           ;doprnt.c: 1112: if(prec <= 12)
  6481  010DB0  0101               	movlb	1	; () banked
  6482  010DB2  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  6483  010DB4  D008               	goto	l8200
  6484  010DB6  0101               	movlb	1	; () banked
  6485  010DB8  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  6486  010DBA  E123               	bnz	l8202
  6487  010DBC  0E0D               	movlw	13
  6488  010DBE  0101               	movlb	1	; () banked
  6489  010DC0  5D12               	subwf	sprintf@prec& (0+255),w,b
  6490  010DC2  B0D8               	btfsc	status,0,c
  6491  010DC4  D01E               	goto	l8202
  6492  010DC6                     l8200:
  6493                           
  6494                           ; BSR set to: 1
  6495                           ;doprnt.c: 1113: fval += fround(prec);
  6496  010DC6  C114  F0A2         	movff	sprintf@fval,___fladd@b
  6497  010DCA  C115  F0A3         	movff	sprintf@fval+1,___fladd@b+1
  6498  010DCE  C116  F0A4         	movff	sprintf@fval+2,___fladd@b+2
  6499  010DD2  C117  F0A5         	movff	sprintf@fval+3,___fladd@b+3
  6500  010DD6  0101               	movlb	1	; () banked
  6501  010DD8  5112               	movf	sprintf@prec& (0+255),w,b
  6502  010DDA  ECF7  F09C         	call	_fround
  6503  010DDE  C095  F0A6         	movff	?_fround,___fladd@a
  6504  010DE2  C096  F0A7         	movff	?_fround+1,___fladd@a+1
  6505  010DE6  C097  F0A8         	movff	?_fround+2,___fladd@a+2
  6506  010DEA  C098  F0A9         	movff	?_fround+3,___fladd@a+3
  6507  010DEE  ECA6  F092         	call	___fladd	;wreg free
  6508  010DF2  C0A2  F114         	movff	?___fladd,sprintf@fval
  6509  010DF6  C0A3  F115         	movff	?___fladd+1,sprintf@fval+1
  6510  010DFA  C0A4  F116         	movff	?___fladd+2,sprintf@fval+2
  6511  010DFE  C0A5  F117         	movff	?___fladd+3,sprintf@fval+3
  6512  010E02                     l8202:
  6513                           
  6514                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  6515  010E02  0101               	movlb	1	; () banked
  6516  010E04  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6517  010E06  D008               	goto	l8204
  6518  010E08  0101               	movlb	1	; () banked
  6519  010E0A  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  6520  010E0C  E12E               	bnz	l8210
  6521  010E0E  0E0A               	movlw	10
  6522  010E10  0101               	movlb	1	; () banked
  6523  010E12  5D0C               	subwf	sprintf@exp& (0+255),w,b
  6524  010E14  B0D8               	btfsc	status,0,c
  6525  010E16  D029               	goto	l8210
  6526  010E18                     l8204:
  6527                           
  6528                           ; BSR set to: 1
  6529  010E18  0101               	movlb	1	; () banked
  6530  010E1A  5114               	movf	sprintf@fval& (0+255),w,b
  6531  010E1C  0101               	movlb	1	; () banked
  6532  010E1E  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6533  010E20  0101               	movlb	1	; () banked
  6534  010E22  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6535  010E24  0101               	movlb	1	; () banked
  6536  010E26  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  6537  010E28  B4D8               	btfsc	status,2,c
  6538  010E2A  D06D               	goto	l8224
  6539                           
  6540                           ; BSR set to: 1
  6541  010E2C  C114  F09E         	movff	sprintf@fval,___fltol@f1
  6542  010E30  C115  F09F         	movff	sprintf@fval+1,___fltol@f1+1
  6543  010E34  C116  F0A0         	movff	sprintf@fval+2,___fltol@f1+2
  6544  010E38  C117  F0A1         	movff	sprintf@fval+3,___fltol@f1+3
  6545  010E3C  ECDB  F0A3         	call	___fltol	;wreg free
  6546  010E40  0100               	movlb	0	; () banked
  6547  010E42  519E               	movf	?___fltol& (0+255),w,b
  6548  010E44  0100               	movlb	0	; () banked
  6549  010E46  119F               	iorwf	(?___fltol+1)& (0+255),w,b
  6550  010E48  0100               	movlb	0	; () banked
  6551  010E4A  11A0               	iorwf	(?___fltol+2)& (0+255),w,b
  6552  010E4C  0100               	movlb	0	; () banked
  6553  010E4E  11A1               	iorwf	(?___fltol+3)& (0+255),w,b
  6554  010E50  A4D8               	btfss	status,2,c
  6555  010E52  D059               	goto	l8224
  6556                           
  6557                           ; BSR set to: 0
  6558  010E54  0101               	movlb	1	; () banked
  6559  010E56  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6560  010E58  D056               	goto	l8224
  6561  010E5A  0101               	movlb	1	; () banked
  6562  010E5C  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  6563  010E5E  E105               	bnz	l8210
  6564  010E60  0E02               	movlw	2
  6565  010E62  0101               	movlb	1	; () banked
  6566  010E64  5D0C               	subwf	sprintf@exp& (0+255),w,b
  6567  010E66  A0D8               	btfss	status,0,c
  6568  010E68  D04E               	goto	l8224
  6569  010E6A                     l8210:
  6570                           
  6571                           ; BSR set to: 1
  6572                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  6573  010E6A  C10E  F06E         	movff	sprintf@tmpval,___flge@ff1
  6574  010E6E  C10F  F06F         	movff	sprintf@tmpval+1,___flge@ff1+1
  6575  010E72  C110  F070         	movff	sprintf@tmpval+2,___flge@ff1+2
  6576  010E76  C111  F071         	movff	sprintf@tmpval+3,___flge@ff1+3
  6577  010E7A  0E5F               	movlw	95
  6578  010E7C  0100               	movlb	0	; () banked
  6579  010E7E  6F72               	movwf	___flge@ff2& (0+255),b
  6580  010E80  0E70               	movlw	112
  6581  010E82  6F73               	movwf	(___flge@ff2+1)& (0+255),b
  6582  010E84  0E89               	movlw	137
  6583  010E86  6F74               	movwf	(___flge@ff2+2)& (0+255),b
  6584  010E88  0E40               	movlw	64
  6585  010E8A  6F75               	movwf	(___flge@ff2+3)& (0+255),b
  6586  010E8C  EC0B  F0A1         	call	___flge	;wreg free
  6587  010E90  0100               	movlb	0	; () banked
  6588  010E92  B0D8               	btfsc	status,0,c
  6589  010E94  D003               	goto	l8214
  6590                           
  6591                           ; BSR set to: 0
  6592                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  6593  010E96  0101               	movlb	1	; () banked
  6594  010E98  0EF7               	movlw	247
  6595  010E9A  D002               	goto	L3
  6596  010E9C                     l8214:
  6597                           
  6598                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  6599  010E9C  0101               	movlb	1	; () banked
  6600  010E9E  0EF8               	movlw	248
  6601  010EA0                     L3:
  6602  010EA0  270C               	addwf	sprintf@exp& (0+255),f,b
  6603  010EA2  0EFF               	movlw	255
  6604  010EA4  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  6605                           
  6606                           ; BSR set to: 1
  6607                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  6608                           
  6609                           ; BSR set to: 1
  6610  010EA6  0101               	movlb	1	; () banked
  6611  010EA8  510C               	movf	sprintf@exp& (0+255),w,b
  6612  010EAA  EC93  F08D         	call	_scale
  6613  010EAE  C095  F10E         	movff	?_scale,sprintf@tmpval
  6614  010EB2  C096  F10F         	movff	?_scale+1,sprintf@tmpval+1
  6615  010EB6  C097  F110         	movff	?_scale+2,sprintf@tmpval+2
  6616  010EBA  C098  F111         	movff	?_scale+3,sprintf@tmpval+3
  6617  010EBE  C114  F06E         	movff	sprintf@fval,__div_to_l_@f1
  6618  010EC2  C115  F06F         	movff	sprintf@fval+1,__div_to_l_@f1+1
  6619  010EC6  C116  F070         	movff	sprintf@fval+2,__div_to_l_@f1+2
  6620  010ECA  C117  F071         	movff	sprintf@fval+3,__div_to_l_@f1+3
  6621  010ECE  C10E  F072         	movff	sprintf@tmpval,__div_to_l_@f2
  6622  010ED2  C10F  F073         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  6623  010ED6  C110  F074         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  6624  010EDA  C111  F075         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  6625  010EDE  ECD3  F0A1         	call	__div_to_l_	;wreg free
  6626  010EE2  C06E  F108         	movff	?__div_to_l_,sprintf@val
  6627  010EE6  C06F  F109         	movff	?__div_to_l_+1,sprintf@val+1
  6628  010EEA  C070  F10A         	movff	?__div_to_l_+2,sprintf@val+2
  6629  010EEE  C071  F10B         	movff	?__div_to_l_+3,sprintf@val+3
  6630                           
  6631                           ;doprnt.c: 1129: fval = 0.0;
  6632  010EF2  0E00               	movlw	0
  6633  010EF4  0101               	movlb	1	; () banked
  6634  010EF6  6F14               	movwf	sprintf@fval& (0+255),b
  6635  010EF8  0E00               	movlw	0
  6636  010EFA  6F15               	movwf	(sprintf@fval+1)& (0+255),b
  6637  010EFC  0E00               	movlw	0
  6638  010EFE  6F16               	movwf	(sprintf@fval+2)& (0+255),b
  6639  010F00  0E00               	movlw	0
  6640  010F02  6F17               	movwf	(sprintf@fval+3)& (0+255),b
  6641                           
  6642                           ;doprnt.c: 1130: } else {
  6643  010F04  D03C               	goto	l8228
  6644  010F06                     l8224:
  6645                           
  6646                           ;doprnt.c: 1131: val = (unsigned long)fval;
  6647  010F06  C114  F09E         	movff	sprintf@fval,___fltol@f1
  6648  010F0A  C115  F09F         	movff	sprintf@fval+1,___fltol@f1+1
  6649  010F0E  C116  F0A0         	movff	sprintf@fval+2,___fltol@f1+2
  6650  010F12  C117  F0A1         	movff	sprintf@fval+3,___fltol@f1+3
  6651  010F16  ECDB  F0A3         	call	___fltol	;wreg free
  6652  010F1A  C09E  F108         	movff	?___fltol,sprintf@val
  6653  010F1E  C09F  F109         	movff	?___fltol+1,sprintf@val+1
  6654  010F22  C0A0  F10A         	movff	?___fltol+2,sprintf@val+2
  6655  010F26  C0A1  F10B         	movff	?___fltol+3,sprintf@val+3
  6656                           
  6657                           ;doprnt.c: 1132: fval -= (double)val;
  6658  010F2A  C114  F0B6         	movff	sprintf@fval,___flsub@b
  6659  010F2E  C115  F0B7         	movff	sprintf@fval+1,___flsub@b+1
  6660  010F32  C116  F0B8         	movff	sprintf@fval+2,___flsub@b+2
  6661  010F36  C117  F0B9         	movff	sprintf@fval+3,___flsub@b+3
  6662  010F3A  C108  F06E         	movff	sprintf@val,___xxtofl@val
  6663  010F3E  C109  F06F         	movff	sprintf@val+1,___xxtofl@val+1
  6664  010F42  C10A  F070         	movff	sprintf@val+2,___xxtofl@val+2
  6665  010F46  C10B  F071         	movff	sprintf@val+3,___xxtofl@val+3
  6666  010F4A  0E00               	movlw	0
  6667  010F4C  EC72  F09E         	call	___xxtofl
  6668  010F50  C06E  F0BA         	movff	?___xxtofl,___flsub@a
  6669  010F54  C06F  F0BB         	movff	?___xxtofl+1,___flsub@a+1
  6670  010F58  C070  F0BC         	movff	?___xxtofl+2,___flsub@a+2
  6671  010F5C  C071  F0BD         	movff	?___xxtofl+3,___flsub@a+3
  6672  010F60  EC58  F0A8         	call	___flsub	;wreg free
  6673  010F64  C0B6  F114         	movff	?___flsub,sprintf@fval
  6674  010F68  C0B7  F115         	movff	?___flsub+1,sprintf@fval+1
  6675  010F6C  C0B8  F116         	movff	?___flsub+2,sprintf@fval+2
  6676  010F70  C0B9  F117         	movff	?___flsub+3,sprintf@fval+3
  6677                           
  6678                           ;doprnt.c: 1133: exp = 0;
  6679  010F74  0E00               	movlw	0
  6680  010F76  0101               	movlb	1	; () banked
  6681  010F78  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  6682  010F7A  0E00               	movlw	0
  6683  010F7C  6F0C               	movwf	sprintf@exp& (0+255),b
  6684  010F7E                     l8228:
  6685                           
  6686                           ; BSR set to: 1
  6687                           ;doprnt.c: 1134: }
  6688                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  6689  010F7E  0E01               	movlw	1
  6690  010F80  0101               	movlb	1	; () banked
  6691  010F82  6F18               	movwf	sprintf@c& (0+255),b
  6692  010F84                     l8230:
  6693                           
  6694                           ; BSR set to: 1
  6695  010F84  0E0A               	movlw	10
  6696  010F86  0101               	movlb	1	; () banked
  6697  010F88  1918               	xorwf	sprintf@c& (0+255),w,b
  6698  010F8A  B4D8               	btfsc	status,2,c
  6699  010F8C  D021               	goto	l8242
  6700                           
  6701                           ; BSR set to: 1
  6702                           ;doprnt.c: 1137: if(val < dpowers[c])
  6703                           
  6704                           ; BSR set to: 1
  6705                           
  6706                           ; BSR set to: 1
  6707  010F8E  0101               	movlb	1	; () banked
  6708  010F90  5118               	movf	sprintf@c& (0+255),w,b
  6709  010F92  0D04               	mullw	4
  6710  010F94  0E45               	movlw	low _dpowers
  6711  010F96  24F3               	addwf	prodl,w,c
  6712  010F98  6EF6               	movwf	tblptrl,c
  6713  010F9A  0EFF               	movlw	high _dpowers
  6714  010F9C  20F4               	addwfc	prodh,w,c
  6715  010F9E  6EF7               	movwf	tblptrh,c
  6716  010FA0                     	if	1	;There are 3 active tblptr bytes
  6717  010FA0  6AF8               	clrf	tblptru,c
  6718  010FA2  0E00               	movlw	low (__mediumconst shr (0+16))
  6719  010FA4  22F8               	addwfc	tblptru,f,c
  6720  010FA6                     	endif
  6721  010FA6  0009               	tblrd		*+
  6722  010FA8  50F5               	movf	tablat,w,c
  6723  010FAA  0101               	movlb	1	; () banked
  6724  010FAC  5D08               	subwf	sprintf@val& (0+255),w,b
  6725  010FAE  0009               	tblrd		*+
  6726  010FB0  50F5               	movf	tablat,w,c
  6727  010FB2  0101               	movlb	1	; () banked
  6728  010FB4  5909               	subwfb	(sprintf@val+1)& (0+255),w,b
  6729  010FB6  0009               	tblrd		*+
  6730  010FB8  50F5               	movf	tablat,w,c
  6731  010FBA  0101               	movlb	1	; () banked
  6732  010FBC  590A               	subwfb	(sprintf@val+2)& (0+255),w,b
  6733  010FBE  0009               	tblrd		*+
  6734  010FC0  50F5               	movf	tablat,w,c
  6735  010FC2  0101               	movlb	1	; () banked
  6736  010FC4  590B               	subwfb	(sprintf@val+3)& (0+255),w,b
  6737  010FC6  A0D8               	btfss	status,0,c
  6738  010FC8  D003               	goto	l8242
  6739                           
  6740                           ; BSR set to: 1
  6741                           
  6742                           ; BSR set to: 1
  6743                           
  6744                           ; BSR set to: 1
  6745                           ;doprnt.c: 1138: break;
  6746  010FCA  0101               	movlb	1	; () banked
  6747  010FCC  2B18               	incf	sprintf@c& (0+255),f,b
  6748  010FCE  D7DA               	goto	l8230
  6749  010FD0                     l8242:
  6750                           
  6751                           ; BSR set to: 1
  6752                           ;doprnt.c: 1175: {
  6753                           ;doprnt.c: 1188: if(flag & 0x03)
  6754  010FD0  0E03               	movlw	3
  6755  010FD2  0101               	movlb	1	; () banked
  6756  010FD4  1506               	andwf	sprintf@flag& (0+255),w,b
  6757  010FD6  0100               	movlb	0	; () banked
  6758  010FD8  6FC6               	movwf	??_sprintf& (0+255),b
  6759  010FDA  0E00               	movlw	0
  6760  010FDC  0101               	movlb	1	; () banked
  6761  010FDE  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  6762  010FE0  0100               	movlb	0	; () banked
  6763  010FE2  6FC7               	movwf	(??_sprintf+1)& (0+255),b
  6764  010FE4  0100               	movlb	0	; () banked
  6765  010FE6  51C6               	movf	??_sprintf& (0+255),w,b
  6766  010FE8  0100               	movlb	0	; () banked
  6767  010FEA  11C7               	iorwf	(??_sprintf+1)& (0+255),w,b
  6768  010FEC  B4D8               	btfsc	status,2,c
  6769  010FEE  D058               	goto	l8256
  6770                           
  6771                           ; BSR set to: 0
  6772                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  6773  010FF0  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  6774  010FF4  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  6775  010FF8  0E2D               	movlw	45
  6776  010FFA  D050               	goto	L4
  6777  010FFC                     l8246:
  6778                           
  6779                           ; BSR set to: 0
  6780  010FFC  0100               	movlb	0	; () banked
  6781  010FFE  4BBE               	infsnz	sprintf@sp& (0+255),f,b
  6782  011000  2BBF               	incf	(sprintf@sp+1)& (0+255),f,b
  6783                           
  6784                           ; BSR set to: 0
  6785                           ;doprnt.c: 1195: }
  6786                           ;doprnt.c: 1196: while(c--) {
  6787  011002  D04E               	goto	l8256
  6788  011004                     l8248:
  6789                           
  6790                           ;doprnt.c: 1200: {
  6791                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  6792  011004  C108  F06E         	movff	sprintf@val,___lldiv@dividend
  6793  011008  C109  F06F         	movff	sprintf@val+1,___lldiv@dividend+1
  6794  01100C  C10A  F070         	movff	sprintf@val+2,___lldiv@dividend+2
  6795  011010  C10B  F071         	movff	sprintf@val+3,___lldiv@dividend+3
  6796  011014  0101               	movlb	1	; () banked
  6797  011016  5118               	movf	sprintf@c& (0+255),w,b
  6798  011018  0D04               	mullw	4
  6799  01101A  0E45               	movlw	low _dpowers
  6800  01101C  24F3               	addwf	prodl,w,c
  6801  01101E  6EF6               	movwf	tblptrl,c
  6802  011020  0EFF               	movlw	high _dpowers
  6803  011022  20F4               	addwfc	prodh,w,c
  6804  011024  6EF7               	movwf	tblptrh,c
  6805  011026                     	if	1	;There are 3 active tblptr bytes
  6806  011026  6AF8               	clrf	tblptru,c
  6807  011028  0E00               	movlw	low (__mediumconst shr (0+16))
  6808  01102A  22F8               	addwfc	tblptru,f,c
  6809  01102C                     	endif
  6810  01102C  0009               	tblrd		*+
  6811  01102E  CFF5 F072          	movff	tablat,___lldiv@divisor
  6812  011032  0009               	tblrd		*+
  6813  011034  CFF5 F073          	movff	tablat,___lldiv@divisor+1
  6814  011038  0009               	tblrd		*+
  6815  01103A  CFF5 F074          	movff	tablat,___lldiv@divisor+2
  6816  01103E  000A               	tblrd		*-
  6817  011040  CFF5 F075          	movff	tablat,___lldiv@divisor+3
  6818  011044  EC97  F0A6         	call	___lldiv	;wreg free
  6819  011048  C06E  F10E         	movff	?___lldiv,sprintf@tmpval
  6820  01104C  C06F  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  6821  011050  C070  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  6822  011054  C071  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  6823                           
  6824                           ;doprnt.c: 1202: tmpval.vd %= 10;
  6825  011058  C10E  F06E         	movff	sprintf@tmpval,___llmod@dividend
  6826  01105C  C10F  F06F         	movff	sprintf@tmpval+1,___llmod@dividend+1
  6827  011060  C110  F070         	movff	sprintf@tmpval+2,___llmod@dividend+2
  6828  011064  C111  F071         	movff	sprintf@tmpval+3,___llmod@dividend+3
  6829  011068  0E0A               	movlw	10
  6830  01106A  0100               	movlb	0	; () banked
  6831  01106C  6F72               	movwf	___llmod@divisor& (0+255),b
  6832  01106E  0E00               	movlw	0
  6833  011070  6F73               	movwf	(___llmod@divisor+1)& (0+255),b
  6834  011072  0E00               	movlw	0
  6835  011074  6F74               	movwf	(___llmod@divisor+2)& (0+255),b
  6836  011076  0E00               	movlw	0
  6837  011078  6F75               	movwf	(___llmod@divisor+3)& (0+255),b
  6838  01107A  EC96  F0A7         	call	___llmod	;wreg free
  6839  01107E  C06E  F10E         	movff	?___llmod,sprintf@tmpval
  6840  011082  C06F  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  6841  011086  C070  F110         	movff	?___llmod+2,sprintf@tmpval+2
  6842  01108A  C071  F111         	movff	?___llmod+3,sprintf@tmpval+3
  6843                           
  6844                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  6845  01108E  0101               	movlb	1	; () banked
  6846  011090  510E               	movf	sprintf@tmpval& (0+255),w,b
  6847  011092  0F30               	addlw	48
  6848  011094  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  6849  011098  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  6850  01109C                     L4:
  6851  01109C  6EDF               	movwf	indf2,c
  6852  01109E  D7AE               	goto	l8246
  6853  0110A0                     l8256:
  6854                           
  6855                           ; BSR set to: 0
  6856  0110A0  0101               	movlb	1	; () banked
  6857  0110A2  0718               	decf	sprintf@c& (0+255),f,b
  6858  0110A4  0101               	movlb	1	; () banked
  6859  0110A6  2918               	incf	sprintf@c& (0+255),w,b
  6860  0110A8  B4D8               	btfsc	status,2,c
  6861  0110AA  D00E               	goto	l8264
  6862  0110AC  D7AB               	goto	l8248
  6863  0110AE                     l8258:
  6864                           
  6865                           ; BSR set to: 1
  6866                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  6867  0110AE  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  6868  0110B2  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  6869  0110B6  0E30               	movlw	48
  6870  0110B8  6EDF               	movwf	indf2,c
  6871                           
  6872                           ; BSR set to: 1
  6873  0110BA  0100               	movlb	0	; () banked
  6874  0110BC  4BBE               	infsnz	sprintf@sp& (0+255),f,b
  6875  0110BE  2BBF               	incf	(sprintf@sp+1)& (0+255),f,b
  6876                           
  6877                           ; BSR set to: 0
  6878                           ;doprnt.c: 1209: exp--;
  6879  0110C0  0101               	movlb	1	; () banked
  6880  0110C2  070C               	decf	sprintf@exp& (0+255),f,b
  6881  0110C4  A0D8               	btfss	status,0,c
  6882  0110C6  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  6883  0110C8                     l8264:
  6884                           
  6885                           ; BSR set to: 1
  6886  0110C8  0101               	movlb	1	; () banked
  6887  0110CA  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6888  0110CC  D007               	goto	l8266
  6889  0110CE  0101               	movlb	1	; () banked
  6890  0110D0  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  6891  0110D2  E1ED               	bnz	l8258
  6892  0110D4  0101               	movlb	1	; () banked
  6893  0110D6  050C               	decf	sprintf@exp& (0+255),w,b
  6894  0110D8  B0D8               	btfsc	status,0,c
  6895  0110DA  D7E9               	goto	l8258
  6896  0110DC                     l8266:
  6897                           
  6898                           ; BSR set to: 1
  6899                           ;doprnt.c: 1210: }
  6900                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  6901  0110DC  0101               	movlb	1	; () banked
  6902  0110DE  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  6903  0110E0  D00C               	goto	l876
  6904  0110E2  0101               	movlb	1	; () banked
  6905  0110E4  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  6906  0110E6  E105               	bnz	u11060
  6907  0110E8  0E09               	movlw	9
  6908  0110EA  0101               	movlb	1	; () banked
  6909  0110EC  5D12               	subwf	sprintf@prec& (0+255),w,b
  6910  0110EE  A0D8               	btfss	status,0,c
  6911  0110F0  D004               	goto	l876
  6912  0110F2                     u11060:
  6913                           
  6914                           ; BSR set to: 1
  6915                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  6916  0110F2  0E08               	movlw	8
  6917  0110F4  0101               	movlb	1	; () banked
  6918  0110F6  6F18               	movwf	sprintf@c& (0+255),b
  6919  0110F8  D002               	goto	l8270
  6920  0110FA                     l876:
  6921                           
  6922                           ; BSR set to: 1
  6923                           ;doprnt.c: 1213: else
  6924                           ;doprnt.c: 1214: c = prec;
  6925  0110FA  C112  F118         	movff	sprintf@prec,sprintf@c
  6926  0110FE                     l8270:
  6927                           
  6928                           ; BSR set to: 1
  6929                           ;doprnt.c: 1215: prec -= c;
  6930  0110FE  0101               	movlb	1	; () banked
  6931  011100  5118               	movf	sprintf@c& (0+255),w,b
  6932  011102  0101               	movlb	1	; () banked
  6933  011104  5F12               	subwf	sprintf@prec& (0+255),f,b
  6934  011106  0E00               	movlw	0
  6935  011108  0101               	movlb	1	; () banked
  6936  01110A  BF18               	btfsc	sprintf@c& (0+255),7,b
  6937  01110C  0EFF               	movlw	255
  6938  01110E  0101               	movlb	1	; () banked
  6939  011110  5B13               	subwfb	(sprintf@prec+1)& (0+255),f,b
  6940                           
  6941                           ; BSR set to: 1
  6942                           ;doprnt.c: 1219: if(c)
  6943  011112  0101               	movlb	1	; () banked
  6944  011114  5118               	movf	sprintf@c& (0+255),w,b
  6945  011116  0101               	movlb	1	; () banked
  6946  011118  B4D8               	btfsc	status,2,c
  6947  01111A  D009               	goto	l8278
  6948                           
  6949                           ; BSR set to: 1
  6950                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  6951  01111C  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  6952  011120  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  6953  011124  0E2E               	movlw	46
  6954  011126  6EDF               	movwf	indf2,c
  6955                           
  6956                           ; BSR set to: 1
  6957  011128  0100               	movlb	0	; () banked
  6958  01112A  4BBE               	infsnz	sprintf@sp& (0+255),f,b
  6959  01112C  2BBF               	incf	(sprintf@sp+1)& (0+255),f,b
  6960  01112E                     l8278:
  6961                           
  6962                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  6963  01112E  0101               	movlb	1	; () banked
  6964  011130  5118               	movf	sprintf@c& (0+255),w,b
  6965  011132  EC93  F08D         	call	_scale
  6966  011136  C095  F100         	movff	?_scale,_sprintf$4193
  6967  01113A  C096  F101         	movff	?_scale+1,_sprintf$4193+1
  6968  01113E  C097  F102         	movff	?_scale+2,_sprintf$4193+2
  6969  011142  C098  F103         	movff	?_scale+3,_sprintf$4193+3
  6970                           
  6971                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  6972  011146  C114  F080         	movff	sprintf@fval,___flmul@a
  6973  01114A  C115  F081         	movff	sprintf@fval+1,___flmul@a+1
  6974  01114E  C116  F082         	movff	sprintf@fval+2,___flmul@a+2
  6975  011152  C117  F083         	movff	sprintf@fval+3,___flmul@a+3
  6976  011156  C100  F07C         	movff	_sprintf$4193,___flmul@b
  6977  01115A  C101  F07D         	movff	_sprintf$4193+1,___flmul@b+1
  6978  01115E  C102  F07E         	movff	_sprintf$4193+2,___flmul@b+2
  6979  011162  C103  F07F         	movff	_sprintf$4193+3,___flmul@b+3
  6980  011166  ECFA  F094         	call	___flmul	;wreg free
  6981  01116A  C07C  F09E         	movff	?___flmul,___fltol@f1
  6982  01116E  C07D  F09F         	movff	?___flmul+1,___fltol@f1+1
  6983  011172  C07E  F0A0         	movff	?___flmul+2,___fltol@f1+2
  6984  011176  C07F  F0A1         	movff	?___flmul+3,___fltol@f1+3
  6985  01117A  ECDB  F0A3         	call	___fltol	;wreg free
  6986  01117E  C09E  F108         	movff	?___fltol,sprintf@val
  6987  011182  C09F  F109         	movff	?___fltol+1,sprintf@val+1
  6988  011186  C0A0  F10A         	movff	?___fltol+2,sprintf@val+2
  6989  01118A  C0A1  F10B         	movff	?___fltol+3,sprintf@val+3
  6990                           
  6991                           ;doprnt.c: 1228: while(c--) {
  6992  01118E  D07A               	goto	l8292
  6993  011190                     l8282:
  6994                           
  6995                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  6996  011190  C108  F06E         	movff	sprintf@val,___lldiv@dividend
  6997  011194  C109  F06F         	movff	sprintf@val+1,___lldiv@dividend+1
  6998  011198  C10A  F070         	movff	sprintf@val+2,___lldiv@dividend+2
  6999  01119C  C10B  F071         	movff	sprintf@val+3,___lldiv@dividend+3
  7000  0111A0  0101               	movlb	1	; () banked
  7001  0111A2  5118               	movf	sprintf@c& (0+255),w,b
  7002  0111A4  0D04               	mullw	4
  7003  0111A6  0E45               	movlw	low _dpowers
  7004  0111A8  24F3               	addwf	prodl,w,c
  7005  0111AA  6EF6               	movwf	tblptrl,c
  7006  0111AC  0EFF               	movlw	high _dpowers
  7007  0111AE  20F4               	addwfc	prodh,w,c
  7008  0111B0  6EF7               	movwf	tblptrh,c
  7009  0111B2                     	if	1	;There are 3 active tblptr bytes
  7010  0111B2  6AF8               	clrf	tblptru,c
  7011  0111B4  0E00               	movlw	low (__mediumconst shr (0+16))
  7012  0111B6  22F8               	addwfc	tblptru,f,c
  7013  0111B8                     	endif
  7014  0111B8  0009               	tblrd		*+
  7015  0111BA  CFF5 F072          	movff	tablat,___lldiv@divisor
  7016  0111BE  0009               	tblrd		*+
  7017  0111C0  CFF5 F073          	movff	tablat,___lldiv@divisor+1
  7018  0111C4  0009               	tblrd		*+
  7019  0111C6  CFF5 F074          	movff	tablat,___lldiv@divisor+2
  7020  0111CA  000A               	tblrd		*-
  7021  0111CC  CFF5 F075          	movff	tablat,___lldiv@divisor+3
  7022  0111D0  EC97  F0A6         	call	___lldiv	;wreg free
  7023  0111D4  C06E  F10E         	movff	?___lldiv,sprintf@tmpval
  7024  0111D8  C06F  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  7025  0111DC  C070  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  7026  0111E0  C071  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  7027                           
  7028                           ;doprnt.c: 1230: tmpval.vd %= 10;
  7029  0111E4  C10E  F06E         	movff	sprintf@tmpval,___llmod@dividend
  7030  0111E8  C10F  F06F         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7031  0111EC  C110  F070         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7032  0111F0  C111  F071         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7033  0111F4  0E0A               	movlw	10
  7034  0111F6  0100               	movlb	0	; () banked
  7035  0111F8  6F72               	movwf	___llmod@divisor& (0+255),b
  7036  0111FA  0E00               	movlw	0
  7037  0111FC  6F73               	movwf	(___llmod@divisor+1)& (0+255),b
  7038  0111FE  0E00               	movlw	0
  7039  011200  6F74               	movwf	(___llmod@divisor+2)& (0+255),b
  7040  011202  0E00               	movlw	0
  7041  011204  6F75               	movwf	(___llmod@divisor+3)& (0+255),b
  7042  011206  EC96  F0A7         	call	___llmod	;wreg free
  7043  01120A  C06E  F10E         	movff	?___llmod,sprintf@tmpval
  7044  01120E  C06F  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  7045  011212  C070  F110         	movff	?___llmod+2,sprintf@tmpval+2
  7046  011216  C071  F111         	movff	?___llmod+3,sprintf@tmpval+3
  7047                           
  7048                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  7049  01121A  0101               	movlb	1	; () banked
  7050  01121C  510E               	movf	sprintf@tmpval& (0+255),w,b
  7051  01121E  0F30               	addlw	48
  7052  011220  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  7053  011224  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  7054  011228  6EDF               	movwf	indf2,c
  7055                           
  7056                           ; BSR set to: 1
  7057  01122A  0100               	movlb	0	; () banked
  7058  01122C  4BBE               	infsnz	sprintf@sp& (0+255),f,b
  7059  01122E  2BBF               	incf	(sprintf@sp+1)& (0+255),f,b
  7060                           
  7061                           ; BSR set to: 0
  7062                           ;doprnt.c: 1232: val %= dpowers[c];
  7063  011230  C108  F06E         	movff	sprintf@val,___llmod@dividend
  7064  011234  C109  F06F         	movff	sprintf@val+1,___llmod@dividend+1
  7065  011238  C10A  F070         	movff	sprintf@val+2,___llmod@dividend+2
  7066  01123C  C10B  F071         	movff	sprintf@val+3,___llmod@dividend+3
  7067  011240  0101               	movlb	1	; () banked
  7068  011242  5118               	movf	sprintf@c& (0+255),w,b
  7069  011244  0D04               	mullw	4
  7070  011246  0E45               	movlw	low _dpowers
  7071  011248  24F3               	addwf	prodl,w,c
  7072  01124A  6EF6               	movwf	tblptrl,c
  7073  01124C  0EFF               	movlw	high _dpowers
  7074  01124E  20F4               	addwfc	prodh,w,c
  7075  011250  6EF7               	movwf	tblptrh,c
  7076  011252                     	if	1	;There are 3 active tblptr bytes
  7077  011252  6AF8               	clrf	tblptru,c
  7078  011254  0E00               	movlw	low (__mediumconst shr (0+16))
  7079  011256  22F8               	addwfc	tblptru,f,c
  7080  011258                     	endif
  7081  011258  0009               	tblrd		*+
  7082  01125A  CFF5 F072          	movff	tablat,___llmod@divisor
  7083  01125E  0009               	tblrd		*+
  7084  011260  CFF5 F073          	movff	tablat,___llmod@divisor+1
  7085  011264  0009               	tblrd		*+
  7086  011266  CFF5 F074          	movff	tablat,___llmod@divisor+2
  7087  01126A  000A               	tblrd		*-
  7088  01126C  CFF5 F075          	movff	tablat,___llmod@divisor+3
  7089  011270  EC96  F0A7         	call	___llmod	;wreg free
  7090  011274  C06E  F108         	movff	?___llmod,sprintf@val
  7091  011278  C06F  F109         	movff	?___llmod+1,sprintf@val+1
  7092  01127C  C070  F10A         	movff	?___llmod+2,sprintf@val+2
  7093  011280  C071  F10B         	movff	?___llmod+3,sprintf@val+3
  7094  011284                     l8292:
  7095  011284  0101               	movlb	1	; () banked
  7096  011286  0718               	decf	sprintf@c& (0+255),f,b
  7097  011288  0101               	movlb	1	; () banked
  7098  01128A  2918               	incf	sprintf@c& (0+255),w,b
  7099  01128C  B4D8               	btfsc	status,2,c
  7100  01128E  D00E               	goto	l8300
  7101  011290  D77F               	goto	l8282
  7102  011292                     l8294:
  7103                           
  7104                           ; BSR set to: 1
  7105                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  7106  011292  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  7107  011296  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  7108  01129A  0E30               	movlw	48
  7109  01129C  6EDF               	movwf	indf2,c
  7110                           
  7111                           ; BSR set to: 1
  7112  01129E  0100               	movlb	0	; () banked
  7113  0112A0  4BBE               	infsnz	sprintf@sp& (0+255),f,b
  7114  0112A2  2BBF               	incf	(sprintf@sp+1)& (0+255),f,b
  7115                           
  7116                           ; BSR set to: 0
  7117                           ;doprnt.c: 1237: prec--;
  7118  0112A4  0101               	movlb	1	; () banked
  7119  0112A6  0712               	decf	sprintf@prec& (0+255),f,b
  7120  0112A8  A0D8               	btfss	status,0,c
  7121  0112AA  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  7122  0112AC                     l8300:
  7123                           
  7124                           ; BSR set to: 1
  7125  0112AC  0101               	movlb	1	; () banked
  7126  0112AE  5112               	movf	sprintf@prec& (0+255),w,b
  7127  0112B0  0101               	movlb	1	; () banked
  7128  0112B2  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7129  0112B4  B4D8               	btfsc	status,2,c
  7130  0112B6  D059               	goto	l8322
  7131  0112B8  D7EC               	goto	l8294
  7132  0112BA                     l8302:
  7133                           
  7134                           ; BSR set to: 1
  7135                           ;doprnt.c: 1246: }
  7136                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  7137  0112BA  0101               	movlb	1	; () banked
  7138  0112BC  5112               	movf	sprintf@prec& (0+255),w,b
  7139  0112BE  0101               	movlb	1	; () banked
  7140  0112C0  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7141  0112C2  A4D8               	btfss	status,2,c
  7142  0112C4  D00D               	goto	l8308
  7143                           
  7144                           ; BSR set to: 1
  7145  0112C6  0101               	movlb	1	; () banked
  7146  0112C8  5108               	movf	sprintf@val& (0+255),w,b
  7147  0112CA  0101               	movlb	1	; () banked
  7148  0112CC  1109               	iorwf	(sprintf@val+1)& (0+255),w,b
  7149  0112CE  0101               	movlb	1	; () banked
  7150  0112D0  110A               	iorwf	(sprintf@val+2)& (0+255),w,b
  7151  0112D2  0101               	movlb	1	; () banked
  7152  0112D4  110B               	iorwf	(sprintf@val+3)& (0+255),w,b
  7153  0112D6  A4D8               	btfss	status,2,c
  7154  0112D8  D003               	goto	l8308
  7155                           
  7156                           ; BSR set to: 1
  7157                           ;doprnt.c: 1291: prec++;
  7158  0112DA  0101               	movlb	1	; () banked
  7159  0112DC  4B12               	infsnz	sprintf@prec& (0+255),f,b
  7160  0112DE  2B13               	incf	(sprintf@prec+1)& (0+255),f,b
  7161  0112E0                     l8308:
  7162                           
  7163                           ; BSR set to: 1
  7164                           ;doprnt.c: 1339: if(c < prec)
  7165  0112E0  0E80               	movlw	128
  7166  0112E2  0101               	movlb	1	; () banked
  7167  0112E4  BF18               	btfsc	sprintf@c& (0+255),7,b
  7168  0112E6  0E7F               	movlw	127
  7169  0112E8  0100               	movlb	0	; () banked
  7170  0112EA  6FC6               	movwf	??_sprintf& (0+255),b
  7171  0112EC  0101               	movlb	1	; () banked
  7172  0112EE  5112               	movf	sprintf@prec& (0+255),w,b
  7173  0112F0  0101               	movlb	1	; () banked
  7174  0112F2  5D18               	subwf	sprintf@c& (0+255),w,b
  7175  0112F4  0101               	movlb	1	; () banked
  7176  0112F6  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  7177  0112F8  0A80               	xorlw	128
  7178  0112FA  0100               	movlb	0	; () banked
  7179  0112FC  59C6               	subwfb	??_sprintf& (0+255),w,b
  7180  0112FE  B0D8               	btfsc	status,0,c
  7181  011300  D003               	goto	l8312
  7182                           
  7183                           ; BSR set to: 0
  7184                           ;doprnt.c: 1340: c = prec;
  7185  011302  C112  F118         	movff	sprintf@prec,sprintf@c
  7186  011306  D018               	goto	l8316
  7187  011308                     l8312:
  7188                           
  7189                           ; BSR set to: 0
  7190                           ;doprnt.c: 1341: else if(prec < c)
  7191  011308  0101               	movlb	1	; () banked
  7192  01130A  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  7193  01130C  0A80               	xorlw	128
  7194  01130E  0100               	movlb	0	; () banked
  7195  011310  6FC6               	movwf	??_sprintf& (0+255),b
  7196  011312  0101               	movlb	1	; () banked
  7197  011314  5118               	movf	sprintf@c& (0+255),w,b
  7198  011316  0101               	movlb	1	; () banked
  7199  011318  5D12               	subwf	sprintf@prec& (0+255),w,b
  7200  01131A  0E80               	movlw	128
  7201  01131C  0101               	movlb	1	; () banked
  7202  01131E  BF18               	btfsc	sprintf@c& (0+255),7,b
  7203  011320  0E7F               	movlw	127
  7204  011322  0100               	movlb	0	; () banked
  7205  011324  59C6               	subwfb	??_sprintf& (0+255),w,b
  7206  011326  B0D8               	btfsc	status,0,c
  7207  011328  D007               	goto	l8316
  7208                           
  7209                           ; BSR set to: 0
  7210                           ;doprnt.c: 1342: prec = c;
  7211  01132A  0101               	movlb	1	; () banked
  7212  01132C  5118               	movf	sprintf@c& (0+255),w,b
  7213  01132E  0101               	movlb	1	; () banked
  7214  011330  6F12               	movwf	sprintf@prec& (0+255),b
  7215  011332  6B13               	clrf	(sprintf@prec+1)& (0+255),b
  7216  011334  BF12               	btfsc	sprintf@prec& (0+255),7,b
  7217  011336  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  7218  011338                     l8316:
  7219                           
  7220                           ;doprnt.c: 1422: {
  7221                           ;doprnt.c: 1438: if(flag & 0x03)
  7222  011338  0E03               	movlw	3
  7223  01133A  0101               	movlb	1	; () banked
  7224  01133C  1506               	andwf	sprintf@flag& (0+255),w,b
  7225  01133E  0100               	movlb	0	; () banked
  7226  011340  6FC6               	movwf	??_sprintf& (0+255),b
  7227  011342  0E00               	movlw	0
  7228  011344  0101               	movlb	1	; () banked
  7229  011346  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  7230  011348  0100               	movlb	0	; () banked
  7231  01134A  6FC7               	movwf	(??_sprintf+1)& (0+255),b
  7232  01134C  0100               	movlb	0	; () banked
  7233  01134E  51C6               	movf	??_sprintf& (0+255),w,b
  7234  011350  0100               	movlb	0	; () banked
  7235  011352  11C7               	iorwf	(??_sprintf+1)& (0+255),w,b
  7236  011354  B4D8               	btfsc	status,2,c
  7237  011356  D009               	goto	l8322
  7238                           
  7239                           ; BSR set to: 0
  7240                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  7241  011358  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  7242  01135C  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  7243  011360  0E2D               	movlw	45
  7244  011362  6EDF               	movwf	indf2,c
  7245  011364                     l8320:
  7246                           
  7247                           ; BSR set to: 0
  7248  011364  0100               	movlb	0	; () banked
  7249  011366  4BBE               	infsnz	sprintf@sp& (0+255),f,b
  7250  011368  2BBF               	incf	(sprintf@sp+1)& (0+255),f,b
  7251  01136A                     l8322:
  7252  01136A  C0C0  FFF6         	movff	sprintf@f,tblptrl
  7253  01136E  C0C1  FFF7         	movff	sprintf@f+1,tblptrh
  7254  011372  0100               	movlb	0	; () banked
  7255  011374  4BC0               	infsnz	sprintf@f& (0+255),f,b
  7256  011376  2BC1               	incf	(sprintf@f+1)& (0+255),f,b
  7257  011378                     	if	0	;tblptru may be non-zero
  7258  011378                     	endif
  7259  011378                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7260  011378  0E00               	movlw	low (__mediumconst shr (0+16))
  7261  01137A  6EF8               	movwf	tblptru,c
  7262  01137C                     	endif
  7263  01137C  0008               	tblrd		*
  7264  01137E  CFF5 F118          	movff	tablat,sprintf@c
  7265  011382  0101               	movlb	1	; () banked
  7266  011384  5118               	movf	sprintf@c& (0+255),w,b
  7267  011386  A4D8               	btfss	status,2,c
  7268  011388  EF8B  F085         	goto	l8124
  7269  01138C                     l8324:
  7270                           
  7271                           ; BSR set to: 1
  7272                           ;doprnt.c: 1538: *sp = 0;
  7273  01138C  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  7274  011390  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  7275  011394  0E00               	movlw	0
  7276  011396  6EDF               	movwf	indf2,c
  7277  011398  0012               	return	
  7278  01139A                     __end_of_sprintf:
  7279                           	opt stack 0
  7280                           tblptru	equ	0xFF8
  7281                           tblptrh	equ	0xFF7
  7282                           tblptrl	equ	0xFF6
  7283                           tablat	equ	0xFF5
  7284                           prodh	equ	0xFF4
  7285                           prodl	equ	0xFF3
  7286                           intcon	equ	0xFF2
  7287                           postinc0	equ	0xFEE
  7288                           wreg	equ	0xFE8
  7289                           indf2	equ	0xFDF
  7290                           postinc2	equ	0xFDE
  7291                           fsr2h	equ	0xFDA
  7292                           fsr2l	equ	0xFD9
  7293                           status	equ	0xFD8
  7294                           
  7295 ;; *************** function _scale *****************
  7296 ;; Defined at:
  7297 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  7298 ;; Parameters:    Size  Location     Type
  7299 ;;  scl             1    wreg     char 
  7300 ;; Auto vars:     Size  Location     Type
  7301 ;;  scl             1   61[BANK0 ] char 
  7302 ;; Return value:  Size  Location     Type
  7303 ;;                  4   53[BANK0 ] char 
  7304 ;; Registers used:
  7305 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7306 ;; Tracked objects:
  7307 ;;		On entry : 0/0
  7308 ;;		On exit  : 0/0
  7309 ;;		Unchanged: 0/0
  7310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7311 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7312 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7314 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7315 ;;Total ram usage:        9 bytes
  7316 ;; Hardware stack levels used:    1
  7317 ;; Hardware stack levels required when called:    4
  7318 ;; This function calls:
  7319 ;;		___awdiv
  7320 ;;		___awmod
  7321 ;;		___flmul
  7322 ;; This function is called by:
  7323 ;;		_sprintf
  7324 ;; This function uses a non-reentrant model
  7325 ;;
  7326                           
  7327                           	psect	text13
  7328  011B26                     __ptext13:
  7329                           	opt stack 0
  7330  011B26                     _scale:
  7331                           	opt stack 24
  7332                           
  7333                           ; BSR set to: 1
  7334                           ;incstack = 0
  7335                           ;scale@scl stored from wreg
  7336  011B26  0100               	movlb	0	; () banked
  7337  011B28  6F9D               	movwf	scale@scl& (0+255),b
  7338                           
  7339                           ;doprnt.c: 428: if(scl < 0) {
  7340  011B2A  0100               	movlb	0	; () banked
  7341  011B2C  AF9D               	btfss	scale@scl& (0+255),7,b
  7342  011B2E  D145               	goto	l7450
  7343                           
  7344                           ; BSR set to: 0
  7345                           ;doprnt.c: 429: scl = -scl;
  7346  011B30  0100               	movlb	0	; () banked
  7347  011B32  6D9D               	negf	scale@scl& (0+255),b
  7348                           
  7349                           ;doprnt.c: 430: if(scl>=110)
  7350  011B34  0100               	movlb	0	; () banked
  7351  011B36  519D               	movf	scale@scl& (0+255),w,b
  7352  011B38  0A80               	xorlw	128
  7353  011B3A  0F12               	addlw	-238
  7354  011B3C  A0D8               	btfss	status,0,c
  7355  011B3E  D0BB               	goto	l7440
  7356                           
  7357                           ; BSR set to: 0
  7358                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7359  011B40  0E00               	movlw	0
  7360  011B42  0100               	movlb	0	; () banked
  7361  011B44  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  7362  011B46  0E0A               	movlw	10
  7363  011B48  6F76               	movwf	___awdiv@divisor& (0+255),b
  7364  011B4A  0E00               	movlw	0
  7365  011B4C  0100               	movlb	0	; () banked
  7366  011B4E  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  7367  011B50  0E64               	movlw	100
  7368  011B52  6F70               	movwf	___awmod@divisor& (0+255),b
  7369  011B54  0100               	movlb	0	; () banked
  7370  011B56  519D               	movf	scale@scl& (0+255),w,b
  7371  011B58  0100               	movlb	0	; () banked
  7372  011B5A  6F6E               	movwf	___awmod@dividend& (0+255),b
  7373  011B5C  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  7374  011B5E  BF6E               	btfsc	___awmod@dividend& (0+255),7,b
  7375  011B60  076F               	decf	(___awmod@dividend+1)& (0+255),f,b
  7376  011B62  ECF5  F0A6         	call	___awmod	;wreg free
  7377  011B66  C06E  F074         	movff	?___awmod,___awdiv@dividend
  7378  011B6A  C06F  F075         	movff	?___awmod+1,___awdiv@dividend+1
  7379  011B6E  EC38  F0A6         	call	___awdiv	;wreg free
  7380  011B72  0100               	movlb	0	; () banked
  7381  011B74  90D8               	bcf	status,0,c
  7382  011B76  3774               	rlcf	?___awdiv& (0+255),f,b
  7383  011B78  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7384  011B7A  0100               	movlb	0	; () banked
  7385  011B7C  90D8               	bcf	status,0,c
  7386  011B7E  3774               	rlcf	?___awdiv& (0+255),f,b
  7387  011B80  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7388  011B82  0E24               	movlw	36
  7389  011B84  0100               	movlb	0	; () banked
  7390  011B86  2774               	addwf	?___awdiv& (0+255),f,b
  7391  011B88  0E00               	movlw	0
  7392  011B8A  0100               	movlb	0	; () banked
  7393  011B8C  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  7394  011B8E  0EDD               	movlw	low __npowers_
  7395  011B90  0100               	movlb	0	; () banked
  7396  011B92  2574               	addwf	?___awdiv& (0+255),w,b
  7397  011B94  6EF6               	movwf	tblptrl,c
  7398  011B96  0EFE               	movlw	high __npowers_
  7399  011B98  0100               	movlb	0	; () banked
  7400  011B9A  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  7401  011B9C  6EF7               	movwf	tblptrh,c
  7402  011B9E                     	if	1	;There are 3 active tblptr bytes
  7403  011B9E  6AF8               	clrf	tblptru,c
  7404  011BA0  0E00               	movlw	low (__mediumconst shr (0+16))
  7405  011BA2  22F8               	addwfc	tblptru,f,c
  7406  011BA4                     	endif
  7407  011BA4  0009               	tblrd		*+
  7408  011BA6  CFF5 F080          	movff	tablat,___flmul@a
  7409  011BAA  0009               	tblrd		*+
  7410  011BAC  CFF5 F081          	movff	tablat,___flmul@a+1
  7411  011BB0  0009               	tblrd		*+
  7412  011BB2  CFF5 F082          	movff	tablat,___flmul@a+2
  7413  011BB6  000A               	tblrd		*-
  7414  011BB8  CFF5 F083          	movff	tablat,___flmul@a+3
  7415  011BBC  0E00               	movlw	0
  7416  011BBE  0100               	movlb	0	; () banked
  7417  011BC0  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  7418  011BC2  0E64               	movlw	100
  7419  011BC4  6F76               	movwf	___awdiv@divisor& (0+255),b
  7420  011BC6  0100               	movlb	0	; () banked
  7421  011BC8  519D               	movf	scale@scl& (0+255),w,b
  7422  011BCA  0100               	movlb	0	; () banked
  7423  011BCC  6F74               	movwf	___awdiv@dividend& (0+255),b
  7424  011BCE  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
  7425  011BD0  BF74               	btfsc	___awdiv@dividend& (0+255),7,b
  7426  011BD2  0775               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7427  011BD4  EC38  F0A6         	call	___awdiv	;wreg free
  7428  011BD8  0100               	movlb	0	; () banked
  7429  011BDA  90D8               	bcf	status,0,c
  7430  011BDC  3774               	rlcf	?___awdiv& (0+255),f,b
  7431  011BDE  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7432  011BE0  0100               	movlb	0	; () banked
  7433  011BE2  90D8               	bcf	status,0,c
  7434  011BE4  3774               	rlcf	?___awdiv& (0+255),f,b
  7435  011BE6  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7436  011BE8  0E48               	movlw	72
  7437  011BEA  0100               	movlb	0	; () banked
  7438  011BEC  2774               	addwf	?___awdiv& (0+255),f,b
  7439  011BEE  0E00               	movlw	0
  7440  011BF0  0100               	movlb	0	; () banked
  7441  011BF2  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  7442  011BF4  0EDD               	movlw	low __npowers_
  7443  011BF6  0100               	movlb	0	; () banked
  7444  011BF8  2574               	addwf	?___awdiv& (0+255),w,b
  7445  011BFA  6EF6               	movwf	tblptrl,c
  7446  011BFC  0EFE               	movlw	high __npowers_
  7447  011BFE  0100               	movlb	0	; () banked
  7448  011C00  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  7449  011C02  6EF7               	movwf	tblptrh,c
  7450  011C04                     	if	1	;There are 3 active tblptr bytes
  7451  011C04  6AF8               	clrf	tblptru,c
  7452  011C06  0E00               	movlw	low (__mediumconst shr (0+16))
  7453  011C08  22F8               	addwfc	tblptru,f,c
  7454  011C0A                     	endif
  7455  011C0A  0009               	tblrd		*+
  7456  011C0C  CFF5 F07C          	movff	tablat,___flmul@b
  7457  011C10  0009               	tblrd		*+
  7458  011C12  CFF5 F07D          	movff	tablat,___flmul@b+1
  7459  011C16  0009               	tblrd		*+
  7460  011C18  CFF5 F07E          	movff	tablat,___flmul@b+2
  7461  011C1C  000A               	tblrd		*-
  7462  011C1E  CFF5 F07F          	movff	tablat,___flmul@b+3
  7463  011C22  ECFA  F094         	call	___flmul	;wreg free
  7464  011C26  C07C  F099         	movff	?___flmul,_scale$4192
  7465  011C2A  C07D  F09A         	movff	?___flmul+1,_scale$4192+1
  7466  011C2E  C07E  F09B         	movff	?___flmul+2,_scale$4192+2
  7467  011C32  C07F  F09C         	movff	?___flmul+3,_scale$4192+3
  7468                           
  7469                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7470  011C36  C099  F07C         	movff	_scale$4192,___flmul@b
  7471  011C3A  C09A  F07D         	movff	_scale$4192+1,___flmul@b+1
  7472  011C3E  C09B  F07E         	movff	_scale$4192+2,___flmul@b+2
  7473  011C42  C09C  F07F         	movff	_scale$4192+3,___flmul@b+3
  7474  011C46  0E00               	movlw	0
  7475  011C48  0100               	movlb	0	; () banked
  7476  011C4A  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  7477  011C4C  0E0A               	movlw	10
  7478  011C4E  6F70               	movwf	___awmod@divisor& (0+255),b
  7479  011C50  0100               	movlb	0	; () banked
  7480  011C52  519D               	movf	scale@scl& (0+255),w,b
  7481  011C54  0100               	movlb	0	; () banked
  7482  011C56  6F6E               	movwf	___awmod@dividend& (0+255),b
  7483  011C58  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  7484  011C5A  BF6E               	btfsc	___awmod@dividend& (0+255),7,b
  7485  011C5C  076F               	decf	(___awmod@dividend+1)& (0+255),f,b
  7486  011C5E  ECF5  F0A6         	call	___awmod	;wreg free
  7487  011C62  0100               	movlb	0	; () banked
  7488  011C64  90D8               	bcf	status,0,c
  7489  011C66  376E               	rlcf	?___awmod& (0+255),f,b
  7490  011C68  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7491  011C6A  0100               	movlb	0	; () banked
  7492  011C6C  90D8               	bcf	status,0,c
  7493  011C6E  376E               	rlcf	?___awmod& (0+255),f,b
  7494  011C70  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7495  011C72  0EDD               	movlw	low __npowers_
  7496  011C74  0100               	movlb	0	; () banked
  7497  011C76  256E               	addwf	?___awmod& (0+255),w,b
  7498  011C78  6EF6               	movwf	tblptrl,c
  7499  011C7A  0EFE               	movlw	high __npowers_
  7500  011C7C  0100               	movlb	0	; () banked
  7501  011C7E  216F               	addwfc	(?___awmod+1)& (0+255),w,b
  7502  011C80  6EF7               	movwf	tblptrh,c
  7503  011C82                     	if	1	;There are 3 active tblptr bytes
  7504  011C82  6AF8               	clrf	tblptru,c
  7505  011C84  0E00               	movlw	low (__mediumconst shr (0+16))
  7506  011C86  22F8               	addwfc	tblptru,f,c
  7507  011C88                     	endif
  7508  011C88  0009               	tblrd		*+
  7509  011C8A  CFF5 F080          	movff	tablat,___flmul@a
  7510  011C8E  0009               	tblrd		*+
  7511  011C90  CFF5 F081          	movff	tablat,___flmul@a+1
  7512  011C94  0009               	tblrd		*+
  7513  011C96  CFF5 F082          	movff	tablat,___flmul@a+2
  7514  011C9A  000A               	tblrd		*-
  7515  011C9C  CFF5 F083          	movff	tablat,___flmul@a+3
  7516  011CA0  ECFA  F094         	call	___flmul	;wreg free
  7517  011CA4  C07C  F095         	movff	?___flmul,?_scale
  7518  011CA8  C07D  F096         	movff	?___flmul+1,?_scale+1
  7519  011CAC  C07E  F097         	movff	?___flmul+2,?_scale+2
  7520  011CB0  C07F  F098         	movff	?___flmul+3,?_scale+3
  7521  011CB4  0012               	return	
  7522  011CB6                     l7440:
  7523                           
  7524                           ;doprnt.c: 432: else if(scl > 10)
  7525  011CB6  0100               	movlb	0	; () banked
  7526  011CB8  519D               	movf	scale@scl& (0+255),w,b
  7527  011CBA  0A80               	xorlw	128
  7528  011CBC  0F75               	addlw	-139
  7529  011CBE  A0D8               	btfss	status,0,c
  7530  011CC0  D063               	goto	l7446
  7531                           
  7532                           ; BSR set to: 0
  7533                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  7534  011CC2  0E00               	movlw	0
  7535  011CC4  0100               	movlb	0	; () banked
  7536  011CC6  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  7537  011CC8  0E0A               	movlw	10
  7538  011CCA  6F76               	movwf	___awdiv@divisor& (0+255),b
  7539  011CCC  0100               	movlb	0	; () banked
  7540  011CCE  519D               	movf	scale@scl& (0+255),w,b
  7541  011CD0  0100               	movlb	0	; () banked
  7542  011CD2  6F74               	movwf	___awdiv@dividend& (0+255),b
  7543  011CD4  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
  7544  011CD6  BF74               	btfsc	___awdiv@dividend& (0+255),7,b
  7545  011CD8  0775               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7546  011CDA  EC38  F0A6         	call	___awdiv	;wreg free
  7547  011CDE  0100               	movlb	0	; () banked
  7548  011CE0  90D8               	bcf	status,0,c
  7549  011CE2  3774               	rlcf	?___awdiv& (0+255),f,b
  7550  011CE4  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7551  011CE6  0100               	movlb	0	; () banked
  7552  011CE8  90D8               	bcf	status,0,c
  7553  011CEA  3774               	rlcf	?___awdiv& (0+255),f,b
  7554  011CEC  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7555  011CEE  0E24               	movlw	36
  7556  011CF0  0100               	movlb	0	; () banked
  7557  011CF2  2774               	addwf	?___awdiv& (0+255),f,b
  7558  011CF4  0E00               	movlw	0
  7559  011CF6  0100               	movlb	0	; () banked
  7560  011CF8  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  7561  011CFA  0EDD               	movlw	low __npowers_
  7562  011CFC  0100               	movlb	0	; () banked
  7563  011CFE  2574               	addwf	?___awdiv& (0+255),w,b
  7564  011D00  6EF6               	movwf	tblptrl,c
  7565  011D02  0EFE               	movlw	high __npowers_
  7566  011D04  0100               	movlb	0	; () banked
  7567  011D06  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  7568  011D08  6EF7               	movwf	tblptrh,c
  7569  011D0A                     	if	1	;There are 3 active tblptr bytes
  7570  011D0A  6AF8               	clrf	tblptru,c
  7571  011D0C  0E00               	movlw	low (__mediumconst shr (0+16))
  7572  011D0E  22F8               	addwfc	tblptru,f,c
  7573  011D10                     	endif
  7574  011D10  0009               	tblrd		*+
  7575  011D12  CFF5 F07C          	movff	tablat,___flmul@b
  7576  011D16  0009               	tblrd		*+
  7577  011D18  CFF5 F07D          	movff	tablat,___flmul@b+1
  7578  011D1C  0009               	tblrd		*+
  7579  011D1E  CFF5 F07E          	movff	tablat,___flmul@b+2
  7580  011D22  000A               	tblrd		*-
  7581  011D24  CFF5 F07F          	movff	tablat,___flmul@b+3
  7582  011D28  0E00               	movlw	0
  7583  011D2A  0100               	movlb	0	; () banked
  7584  011D2C  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  7585  011D2E  0E0A               	movlw	10
  7586  011D30  6F70               	movwf	___awmod@divisor& (0+255),b
  7587  011D32  0100               	movlb	0	; () banked
  7588  011D34  519D               	movf	scale@scl& (0+255),w,b
  7589  011D36  0100               	movlb	0	; () banked
  7590  011D38  6F6E               	movwf	___awmod@dividend& (0+255),b
  7591  011D3A  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  7592  011D3C  BF6E               	btfsc	___awmod@dividend& (0+255),7,b
  7593  011D3E  076F               	decf	(___awmod@dividend+1)& (0+255),f,b
  7594  011D40  ECF5  F0A6         	call	___awmod	;wreg free
  7595  011D44  0100               	movlb	0	; () banked
  7596  011D46  90D8               	bcf	status,0,c
  7597  011D48  376E               	rlcf	?___awmod& (0+255),f,b
  7598  011D4A  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7599  011D4C  0100               	movlb	0	; () banked
  7600  011D4E  90D8               	bcf	status,0,c
  7601  011D50  376E               	rlcf	?___awmod& (0+255),f,b
  7602  011D52  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7603  011D54  0EDD               	movlw	low __npowers_
  7604  011D56  0100               	movlb	0	; () banked
  7605  011D58  256E               	addwf	?___awmod& (0+255),w,b
  7606  011D5A  6EF6               	movwf	tblptrl,c
  7607  011D5C  0EFE               	movlw	high __npowers_
  7608  011D5E  0100               	movlb	0	; () banked
  7609  011D60  216F               	addwfc	(?___awmod+1)& (0+255),w,b
  7610  011D62  6EF7               	movwf	tblptrh,c
  7611  011D64                     	if	1	;There are 3 active tblptr bytes
  7612  011D64  6AF8               	clrf	tblptru,c
  7613  011D66  0E00               	movlw	low (__mediumconst shr (0+16))
  7614  011D68  22F8               	addwfc	tblptru,f,c
  7615  011D6A                     	endif
  7616  011D6A  0009               	tblrd		*+
  7617  011D6C  CFF5 F080          	movff	tablat,___flmul@a
  7618  011D70  0009               	tblrd		*+
  7619  011D72  CFF5 F081          	movff	tablat,___flmul@a+1
  7620  011D76  0009               	tblrd		*+
  7621  011D78  CFF5 F082          	movff	tablat,___flmul@a+2
  7622  011D7C  000A               	tblrd		*-
  7623  011D7E  CFF5 F083          	movff	tablat,___flmul@a+3
  7624  011D82  ECFA  F094         	call	___flmul	;wreg free
  7625  011D86  D78E               	goto	L5
  7626  011D88                     l7446:
  7627                           
  7628                           ;doprnt.c: 434: return _npowers_[scl];
  7629  011D88  0100               	movlb	0	; () banked
  7630  011D8A  519D               	movf	scale@scl& (0+255),w,b
  7631  011D8C  0D04               	mullw	4
  7632  011D8E  0EDD               	movlw	low __npowers_
  7633  011D90  24F3               	addwf	prodl,w,c
  7634  011D92  6EF6               	movwf	tblptrl,c
  7635  011D94  0EFE               	movlw	high __npowers_
  7636  011D96  20F4               	addwfc	prodh,w,c
  7637  011D98  6EF7               	movwf	tblptrh,c
  7638  011D9A                     	if	1	;There are 3 active tblptr bytes
  7639  011D9A  6AF8               	clrf	tblptru,c
  7640  011D9C  0E00               	movlw	low (__mediumconst shr (0+16))
  7641  011D9E  22F8               	addwfc	tblptru,f,c
  7642  011DA0                     	endif
  7643  011DA0  0009               	tblrd		*+
  7644  011DA2  CFF5 F095          	movff	tablat,?_scale
  7645  011DA6  0009               	tblrd		*+
  7646  011DA8  CFF5 F096          	movff	tablat,?_scale+1
  7647  011DAC  0009               	tblrd		*+
  7648  011DAE  CFF5 F097          	movff	tablat,?_scale+2
  7649  011DB2  000A               	tblrd		*-
  7650  011DB4  CFF5 F098          	movff	tablat,?_scale+3
  7651                           
  7652                           ; BSR set to: 0
  7653  011DB8  0012               	return	
  7654  011DBA                     l7450:
  7655                           
  7656                           ; BSR set to: 0
  7657                           ;doprnt.c: 435: }
  7658                           ;doprnt.c: 436: if(scl>=110)
  7659  011DBA  0100               	movlb	0	; () banked
  7660  011DBC  519D               	movf	scale@scl& (0+255),w,b
  7661  011DBE  0A80               	xorlw	128
  7662  011DC0  0F12               	addlw	-238
  7663  011DC2  A0D8               	btfss	status,0,c
  7664  011DC4  D0BB               	goto	l7458
  7665                           
  7666                           ; BSR set to: 0
  7667                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7668  011DC6  0E00               	movlw	0
  7669  011DC8  0100               	movlb	0	; () banked
  7670  011DCA  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  7671  011DCC  0E0A               	movlw	10
  7672  011DCE  6F76               	movwf	___awdiv@divisor& (0+255),b
  7673  011DD0  0E00               	movlw	0
  7674  011DD2  0100               	movlb	0	; () banked
  7675  011DD4  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  7676  011DD6  0E64               	movlw	100
  7677  011DD8  6F70               	movwf	___awmod@divisor& (0+255),b
  7678  011DDA  0100               	movlb	0	; () banked
  7679  011DDC  519D               	movf	scale@scl& (0+255),w,b
  7680  011DDE  0100               	movlb	0	; () banked
  7681  011DE0  6F6E               	movwf	___awmod@dividend& (0+255),b
  7682  011DE2  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  7683  011DE4  BF6E               	btfsc	___awmod@dividend& (0+255),7,b
  7684  011DE6  076F               	decf	(___awmod@dividend+1)& (0+255),f,b
  7685  011DE8  ECF5  F0A6         	call	___awmod	;wreg free
  7686  011DEC  C06E  F074         	movff	?___awmod,___awdiv@dividend
  7687  011DF0  C06F  F075         	movff	?___awmod+1,___awdiv@dividend+1
  7688  011DF4  EC38  F0A6         	call	___awdiv	;wreg free
  7689  011DF8  0100               	movlb	0	; () banked
  7690  011DFA  90D8               	bcf	status,0,c
  7691  011DFC  3774               	rlcf	?___awdiv& (0+255),f,b
  7692  011DFE  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7693  011E00  0100               	movlb	0	; () banked
  7694  011E02  90D8               	bcf	status,0,c
  7695  011E04  3774               	rlcf	?___awdiv& (0+255),f,b
  7696  011E06  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7697  011E08  0E24               	movlw	36
  7698  011E0A  0100               	movlb	0	; () banked
  7699  011E0C  2774               	addwf	?___awdiv& (0+255),f,b
  7700  011E0E  0E00               	movlw	0
  7701  011E10  0100               	movlb	0	; () banked
  7702  011E12  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  7703  011E14  0E11               	movlw	low __powers_
  7704  011E16  0100               	movlb	0	; () banked
  7705  011E18  2574               	addwf	?___awdiv& (0+255),w,b
  7706  011E1A  6EF6               	movwf	tblptrl,c
  7707  011E1C  0EFF               	movlw	high __powers_
  7708  011E1E  0100               	movlb	0	; () banked
  7709  011E20  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  7710  011E22  6EF7               	movwf	tblptrh,c
  7711  011E24                     	if	1	;There are 3 active tblptr bytes
  7712  011E24  6AF8               	clrf	tblptru,c
  7713  011E26  0E00               	movlw	low (__mediumconst shr (0+16))
  7714  011E28  22F8               	addwfc	tblptru,f,c
  7715  011E2A                     	endif
  7716  011E2A  0009               	tblrd		*+
  7717  011E2C  CFF5 F080          	movff	tablat,___flmul@a
  7718  011E30  0009               	tblrd		*+
  7719  011E32  CFF5 F081          	movff	tablat,___flmul@a+1
  7720  011E36  0009               	tblrd		*+
  7721  011E38  CFF5 F082          	movff	tablat,___flmul@a+2
  7722  011E3C  000A               	tblrd		*-
  7723  011E3E  CFF5 F083          	movff	tablat,___flmul@a+3
  7724  011E42  0E00               	movlw	0
  7725  011E44  0100               	movlb	0	; () banked
  7726  011E46  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  7727  011E48  0E64               	movlw	100
  7728  011E4A  6F76               	movwf	___awdiv@divisor& (0+255),b
  7729  011E4C  0100               	movlb	0	; () banked
  7730  011E4E  519D               	movf	scale@scl& (0+255),w,b
  7731  011E50  0100               	movlb	0	; () banked
  7732  011E52  6F74               	movwf	___awdiv@dividend& (0+255),b
  7733  011E54  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
  7734  011E56  BF74               	btfsc	___awdiv@dividend& (0+255),7,b
  7735  011E58  0775               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7736  011E5A  EC38  F0A6         	call	___awdiv	;wreg free
  7737  011E5E  0100               	movlb	0	; () banked
  7738  011E60  90D8               	bcf	status,0,c
  7739  011E62  3774               	rlcf	?___awdiv& (0+255),f,b
  7740  011E64  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7741  011E66  0100               	movlb	0	; () banked
  7742  011E68  90D8               	bcf	status,0,c
  7743  011E6A  3774               	rlcf	?___awdiv& (0+255),f,b
  7744  011E6C  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7745  011E6E  0E48               	movlw	72
  7746  011E70  0100               	movlb	0	; () banked
  7747  011E72  2774               	addwf	?___awdiv& (0+255),f,b
  7748  011E74  0E00               	movlw	0
  7749  011E76  0100               	movlb	0	; () banked
  7750  011E78  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  7751  011E7A  0E11               	movlw	low __powers_
  7752  011E7C  0100               	movlb	0	; () banked
  7753  011E7E  2574               	addwf	?___awdiv& (0+255),w,b
  7754  011E80  6EF6               	movwf	tblptrl,c
  7755  011E82  0EFF               	movlw	high __powers_
  7756  011E84  0100               	movlb	0	; () banked
  7757  011E86  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  7758  011E88  6EF7               	movwf	tblptrh,c
  7759  011E8A                     	if	1	;There are 3 active tblptr bytes
  7760  011E8A  6AF8               	clrf	tblptru,c
  7761  011E8C  0E00               	movlw	low (__mediumconst shr (0+16))
  7762  011E8E  22F8               	addwfc	tblptru,f,c
  7763  011E90                     	endif
  7764  011E90  0009               	tblrd		*+
  7765  011E92  CFF5 F07C          	movff	tablat,___flmul@b
  7766  011E96  0009               	tblrd		*+
  7767  011E98  CFF5 F07D          	movff	tablat,___flmul@b+1
  7768  011E9C  0009               	tblrd		*+
  7769  011E9E  CFF5 F07E          	movff	tablat,___flmul@b+2
  7770  011EA2  000A               	tblrd		*-
  7771  011EA4  CFF5 F07F          	movff	tablat,___flmul@b+3
  7772  011EA8  ECFA  F094         	call	___flmul	;wreg free
  7773  011EAC  C07C  F099         	movff	?___flmul,_scale$4192
  7774  011EB0  C07D  F09A         	movff	?___flmul+1,_scale$4192+1
  7775  011EB4  C07E  F09B         	movff	?___flmul+2,_scale$4192+2
  7776  011EB8  C07F  F09C         	movff	?___flmul+3,_scale$4192+3
  7777                           
  7778                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7779  011EBC  C099  F07C         	movff	_scale$4192,___flmul@b
  7780  011EC0  C09A  F07D         	movff	_scale$4192+1,___flmul@b+1
  7781  011EC4  C09B  F07E         	movff	_scale$4192+2,___flmul@b+2
  7782  011EC8  C09C  F07F         	movff	_scale$4192+3,___flmul@b+3
  7783  011ECC  0E00               	movlw	0
  7784  011ECE  0100               	movlb	0	; () banked
  7785  011ED0  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  7786  011ED2  0E0A               	movlw	10
  7787  011ED4  6F70               	movwf	___awmod@divisor& (0+255),b
  7788  011ED6  0100               	movlb	0	; () banked
  7789  011ED8  519D               	movf	scale@scl& (0+255),w,b
  7790  011EDA  0100               	movlb	0	; () banked
  7791  011EDC  6F6E               	movwf	___awmod@dividend& (0+255),b
  7792  011EDE  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  7793  011EE0  BF6E               	btfsc	___awmod@dividend& (0+255),7,b
  7794  011EE2  076F               	decf	(___awmod@dividend+1)& (0+255),f,b
  7795  011EE4  ECF5  F0A6         	call	___awmod	;wreg free
  7796  011EE8  0100               	movlb	0	; () banked
  7797  011EEA  90D8               	bcf	status,0,c
  7798  011EEC  376E               	rlcf	?___awmod& (0+255),f,b
  7799  011EEE  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7800  011EF0  0100               	movlb	0	; () banked
  7801  011EF2  90D8               	bcf	status,0,c
  7802  011EF4  376E               	rlcf	?___awmod& (0+255),f,b
  7803  011EF6  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7804  011EF8  0E11               	movlw	low __powers_
  7805  011EFA  0100               	movlb	0	; () banked
  7806  011EFC  256E               	addwf	?___awmod& (0+255),w,b
  7807  011EFE  6EF6               	movwf	tblptrl,c
  7808  011F00  0EFF               	movlw	high __powers_
  7809  011F02  0100               	movlb	0	; () banked
  7810  011F04  216F               	addwfc	(?___awmod+1)& (0+255),w,b
  7811  011F06  6EF7               	movwf	tblptrh,c
  7812  011F08                     	if	1	;There are 3 active tblptr bytes
  7813  011F08  6AF8               	clrf	tblptru,c
  7814  011F0A  0E00               	movlw	low (__mediumconst shr (0+16))
  7815  011F0C  22F8               	addwfc	tblptru,f,c
  7816  011F0E                     	endif
  7817  011F0E  0009               	tblrd		*+
  7818  011F10  CFF5 F080          	movff	tablat,___flmul@a
  7819  011F14  0009               	tblrd		*+
  7820  011F16  CFF5 F081          	movff	tablat,___flmul@a+1
  7821  011F1A  0009               	tblrd		*+
  7822  011F1C  CFF5 F082          	movff	tablat,___flmul@a+2
  7823  011F20  000A               	tblrd		*-
  7824  011F22  CFF5 F083          	movff	tablat,___flmul@a+3
  7825  011F26  ECFA  F094         	call	___flmul	;wreg free
  7826  011F2A  C07C  F095         	movff	?___flmul,?_scale
  7827  011F2E  C07D  F096         	movff	?___flmul+1,?_scale+1
  7828  011F32  C07E  F097         	movff	?___flmul+2,?_scale+2
  7829  011F36  C07F  F098         	movff	?___flmul+3,?_scale+3
  7830  011F3A  0012               	return	
  7831  011F3C                     l7458:
  7832                           
  7833                           ;doprnt.c: 438: else if(scl > 10)
  7834  011F3C  0100               	movlb	0	; () banked
  7835  011F3E  519D               	movf	scale@scl& (0+255),w,b
  7836  011F40  0A80               	xorlw	128
  7837  011F42  0F75               	addlw	-139
  7838  011F44  A0D8               	btfss	status,0,c
  7839  011F46  D063               	goto	l7464
  7840                           
  7841                           ; BSR set to: 0
  7842                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  7843  011F48  0E00               	movlw	0
  7844  011F4A  0100               	movlb	0	; () banked
  7845  011F4C  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  7846  011F4E  0E0A               	movlw	10
  7847  011F50  6F76               	movwf	___awdiv@divisor& (0+255),b
  7848  011F52  0100               	movlb	0	; () banked
  7849  011F54  519D               	movf	scale@scl& (0+255),w,b
  7850  011F56  0100               	movlb	0	; () banked
  7851  011F58  6F74               	movwf	___awdiv@dividend& (0+255),b
  7852  011F5A  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
  7853  011F5C  BF74               	btfsc	___awdiv@dividend& (0+255),7,b
  7854  011F5E  0775               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7855  011F60  EC38  F0A6         	call	___awdiv	;wreg free
  7856  011F64  0100               	movlb	0	; () banked
  7857  011F66  90D8               	bcf	status,0,c
  7858  011F68  3774               	rlcf	?___awdiv& (0+255),f,b
  7859  011F6A  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7860  011F6C  0100               	movlb	0	; () banked
  7861  011F6E  90D8               	bcf	status,0,c
  7862  011F70  3774               	rlcf	?___awdiv& (0+255),f,b
  7863  011F72  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7864  011F74  0E24               	movlw	36
  7865  011F76  0100               	movlb	0	; () banked
  7866  011F78  2774               	addwf	?___awdiv& (0+255),f,b
  7867  011F7A  0E00               	movlw	0
  7868  011F7C  0100               	movlb	0	; () banked
  7869  011F7E  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  7870  011F80  0E11               	movlw	low __powers_
  7871  011F82  0100               	movlb	0	; () banked
  7872  011F84  2574               	addwf	?___awdiv& (0+255),w,b
  7873  011F86  6EF6               	movwf	tblptrl,c
  7874  011F88  0EFF               	movlw	high __powers_
  7875  011F8A  0100               	movlb	0	; () banked
  7876  011F8C  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  7877  011F8E  6EF7               	movwf	tblptrh,c
  7878  011F90                     	if	1	;There are 3 active tblptr bytes
  7879  011F90  6AF8               	clrf	tblptru,c
  7880  011F92  0E00               	movlw	low (__mediumconst shr (0+16))
  7881  011F94  22F8               	addwfc	tblptru,f,c
  7882  011F96                     	endif
  7883  011F96  0009               	tblrd		*+
  7884  011F98  CFF5 F07C          	movff	tablat,___flmul@b
  7885  011F9C  0009               	tblrd		*+
  7886  011F9E  CFF5 F07D          	movff	tablat,___flmul@b+1
  7887  011FA2  0009               	tblrd		*+
  7888  011FA4  CFF5 F07E          	movff	tablat,___flmul@b+2
  7889  011FA8  000A               	tblrd		*-
  7890  011FAA  CFF5 F07F          	movff	tablat,___flmul@b+3
  7891  011FAE  0E00               	movlw	0
  7892  011FB0  0100               	movlb	0	; () banked
  7893  011FB2  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  7894  011FB4  0E0A               	movlw	10
  7895  011FB6  6F70               	movwf	___awmod@divisor& (0+255),b
  7896  011FB8  0100               	movlb	0	; () banked
  7897  011FBA  519D               	movf	scale@scl& (0+255),w,b
  7898  011FBC  0100               	movlb	0	; () banked
  7899  011FBE  6F6E               	movwf	___awmod@dividend& (0+255),b
  7900  011FC0  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  7901  011FC2  BF6E               	btfsc	___awmod@dividend& (0+255),7,b
  7902  011FC4  076F               	decf	(___awmod@dividend+1)& (0+255),f,b
  7903  011FC6  ECF5  F0A6         	call	___awmod	;wreg free
  7904  011FCA  0100               	movlb	0	; () banked
  7905  011FCC  90D8               	bcf	status,0,c
  7906  011FCE  376E               	rlcf	?___awmod& (0+255),f,b
  7907  011FD0  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7908  011FD2  0100               	movlb	0	; () banked
  7909  011FD4  90D8               	bcf	status,0,c
  7910  011FD6  376E               	rlcf	?___awmod& (0+255),f,b
  7911  011FD8  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7912  011FDA  0E11               	movlw	low __powers_
  7913  011FDC  0100               	movlb	0	; () banked
  7914  011FDE  256E               	addwf	?___awmod& (0+255),w,b
  7915  011FE0  6EF6               	movwf	tblptrl,c
  7916  011FE2  0EFF               	movlw	high __powers_
  7917  011FE4  0100               	movlb	0	; () banked
  7918  011FE6  216F               	addwfc	(?___awmod+1)& (0+255),w,b
  7919  011FE8  6EF7               	movwf	tblptrh,c
  7920  011FEA                     	if	1	;There are 3 active tblptr bytes
  7921  011FEA  6AF8               	clrf	tblptru,c
  7922  011FEC  0E00               	movlw	low (__mediumconst shr (0+16))
  7923  011FEE  22F8               	addwfc	tblptru,f,c
  7924  011FF0                     	endif
  7925  011FF0  0009               	tblrd		*+
  7926  011FF2  CFF5 F080          	movff	tablat,___flmul@a
  7927  011FF6  0009               	tblrd		*+
  7928  011FF8  CFF5 F081          	movff	tablat,___flmul@a+1
  7929  011FFC  0009               	tblrd		*+
  7930  011FFE  CFF5 F082          	movff	tablat,___flmul@a+2
  7931  012002  000A               	tblrd		*-
  7932  012004  CFF5 F083          	movff	tablat,___flmul@a+3
  7933  012008  ECFA  F094         	call	___flmul	;wreg free
  7934  01200C  D78E               	goto	L6
  7935  01200E                     l7464:
  7936                           
  7937                           ;doprnt.c: 440: return _powers_[scl];
  7938  01200E  0100               	movlb	0	; () banked
  7939  012010  519D               	movf	scale@scl& (0+255),w,b
  7940  012012  0D04               	mullw	4
  7941  012014  0E11               	movlw	low __powers_
  7942  012016  24F3               	addwf	prodl,w,c
  7943  012018  6EF6               	movwf	tblptrl,c
  7944  01201A  0EFF               	movlw	high __powers_
  7945  01201C  20F4               	addwfc	prodh,w,c
  7946  01201E  6EF7               	movwf	tblptrh,c
  7947  012020                     	if	1	;There are 3 active tblptr bytes
  7948  012020  6AF8               	clrf	tblptru,c
  7949  012022  0E00               	movlw	low (__mediumconst shr (0+16))
  7950  012024  22F8               	addwfc	tblptru,f,c
  7951  012026                     	endif
  7952  012026  0009               	tblrd		*+
  7953  012028  CFF5 F095          	movff	tablat,?_scale
  7954  01202C  0009               	tblrd		*+
  7955  01202E  CFF5 F096          	movff	tablat,?_scale+1
  7956  012032  0009               	tblrd		*+
  7957  012034  CFF5 F097          	movff	tablat,?_scale+2
  7958  012038  000A               	tblrd		*-
  7959  01203A  CFF5 F098          	movff	tablat,?_scale+3
  7960  01203E  0012               	return	
  7961  012040                     __end_of_scale:
  7962                           	opt stack 0
  7963                           tblptru	equ	0xFF8
  7964                           tblptrh	equ	0xFF7
  7965                           tblptrl	equ	0xFF6
  7966                           tablat	equ	0xFF5
  7967                           prodh	equ	0xFF4
  7968                           prodl	equ	0xFF3
  7969                           intcon	equ	0xFF2
  7970                           postinc0	equ	0xFEE
  7971                           wreg	equ	0xFE8
  7972                           indf2	equ	0xFDF
  7973                           postinc2	equ	0xFDE
  7974                           fsr2h	equ	0xFDA
  7975                           fsr2l	equ	0xFD9
  7976                           status	equ	0xFD8
  7977                           
  7978 ;; *************** function _isdigit *****************
  7979 ;; Defined at:
  7980 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  7981 ;; Parameters:    Size  Location     Type
  7982 ;;  c               1    wreg     unsigned char 
  7983 ;; Auto vars:     Size  Location     Type
  7984 ;;  c               1   16[BANK0 ] unsigned char 
  7985 ;; Return value:  Size  Location     Type
  7986 ;;		None               void
  7987 ;; Registers used:
  7988 ;;		wreg, status,2, status,0
  7989 ;; Tracked objects:
  7990 ;;		On entry : 0/0
  7991 ;;		On exit  : 0/0
  7992 ;;		Unchanged: 0/0
  7993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7995 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7996 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7997 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7998 ;;Total ram usage:        3 bytes
  7999 ;; Hardware stack levels used:    1
  8000 ;; Hardware stack levels required when called:    3
  8001 ;; This function calls:
  8002 ;;		Nothing
  8003 ;; This function is called by:
  8004 ;;		_sprintf
  8005 ;; This function uses a non-reentrant model
  8006 ;;
  8007                           
  8008                           	psect	text14
  8009  0152B4                     __ptext14:
  8010                           	opt stack 0
  8011  0152B4                     _isdigit:
  8012                           	opt stack 25
  8013                           
  8014                           ;incstack = 0
  8015                           ;isdigit@c stored from wreg
  8016  0152B4  0100               	movlb	0	; () banked
  8017  0152B6  6F70               	movwf	isdigit@c& (0+255),b
  8018  0152B8  0E00               	movlw	0
  8019  0152BA  0100               	movlb	0	; () banked
  8020  0152BC  6F6F               	movwf	_isdigit$3772& (0+255),b
  8021                           
  8022                           ; BSR set to: 0
  8023  0152BE  0E3A               	movlw	58
  8024  0152C0  0100               	movlb	0	; () banked
  8025  0152C2  6170               	cpfslt	isdigit@c& (0+255),b
  8026  0152C4  D007               	goto	l7476
  8027                           
  8028                           ; BSR set to: 0
  8029  0152C6  0E2F               	movlw	47
  8030  0152C8  0100               	movlb	0	; () banked
  8031  0152CA  6570               	cpfsgt	isdigit@c& (0+255),b
  8032  0152CC  D003               	goto	l7476
  8033                           
  8034                           ; BSR set to: 0
  8035  0152CE  0E01               	movlw	1
  8036  0152D0  0100               	movlb	0	; () banked
  8037  0152D2  6F6F               	movwf	_isdigit$3772& (0+255),b
  8038  0152D4                     l7476:
  8039                           
  8040                           ; BSR set to: 0
  8041  0152D4  C06F  F06E         	movff	_isdigit$3772,??_isdigit
  8042  0152D8  0100               	movlb	0	; () banked
  8043  0152DA  316E               	rrcf	??_isdigit& (0+255),w,b
  8044  0152DC  0012               	return	
  8045  0152DE                     __end_of_isdigit:
  8046                           	opt stack 0
  8047                           tblptru	equ	0xFF8
  8048                           tblptrh	equ	0xFF7
  8049                           tblptrl	equ	0xFF6
  8050                           tablat	equ	0xFF5
  8051                           prodh	equ	0xFF4
  8052                           prodl	equ	0xFF3
  8053                           intcon	equ	0xFF2
  8054                           postinc0	equ	0xFEE
  8055                           wreg	equ	0xFE8
  8056                           indf2	equ	0xFDF
  8057                           postinc2	equ	0xFDE
  8058                           fsr2h	equ	0xFDA
  8059                           fsr2l	equ	0xFD9
  8060                           status	equ	0xFD8
  8061                           
  8062 ;; *************** function _fround *****************
  8063 ;; Defined at:
  8064 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  8065 ;; Parameters:    Size  Location     Type
  8066 ;;  prec            1    wreg     unsigned char 
  8067 ;; Auto vars:     Size  Location     Type
  8068 ;;  prec            1   65[BANK0 ] unsigned char 
  8069 ;; Return value:  Size  Location     Type
  8070 ;;                  4   53[BANK0 ] unsigned char 
  8071 ;; Registers used:
  8072 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8073 ;; Tracked objects:
  8074 ;;		On entry : 0/0
  8075 ;;		On exit  : 0/0
  8076 ;;		Unchanged: 0/0
  8077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8078 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8079 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8081 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8082 ;;Total ram usage:       13 bytes
  8083 ;; Hardware stack levels used:    1
  8084 ;; Hardware stack levels required when called:    4
  8085 ;; This function calls:
  8086 ;;		___awdiv
  8087 ;;		___awmod
  8088 ;;		___flmul
  8089 ;; This function is called by:
  8090 ;;		_sprintf
  8091 ;; This function uses a non-reentrant model
  8092 ;;
  8093                           
  8094                           	psect	text15
  8095  0139EE                     __ptext15:
  8096                           	opt stack 0
  8097  0139EE                     _fround:
  8098                           	opt stack 24
  8099                           
  8100                           ; BSR set to: 0
  8101                           ;incstack = 0
  8102                           ;fround@prec stored from wreg
  8103  0139EE  0100               	movlb	0	; () banked
  8104  0139F0  6FA1               	movwf	fround@prec& (0+255),b
  8105                           
  8106                           ;doprnt.c: 413: if(prec>=110)
  8107  0139F2  0E6D               	movlw	109
  8108  0139F4  0100               	movlb	0	; () banked
  8109  0139F6  65A1               	cpfsgt	fround@prec& (0+255),b
  8110  0139F8  D0CD               	goto	l7418
  8111                           
  8112                           ; BSR set to: 0
  8113                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8114  0139FA  0E00               	movlw	0
  8115  0139FC  0100               	movlb	0	; () banked
  8116  0139FE  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  8117  013A00  0E0A               	movlw	10
  8118  013A02  6F76               	movwf	___awdiv@divisor& (0+255),b
  8119  013A04  0E00               	movlw	0
  8120  013A06  0100               	movlb	0	; () banked
  8121  013A08  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  8122  013A0A  0E64               	movlw	100
  8123  013A0C  6F70               	movwf	___awmod@divisor& (0+255),b
  8124  013A0E  C0A1  F06E         	movff	fround@prec,___awmod@dividend
  8125  013A12  0100               	movlb	0	; () banked
  8126  013A14  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  8127  013A16  ECF5  F0A6         	call	___awmod	;wreg free
  8128  013A1A  C06E  F074         	movff	?___awmod,___awdiv@dividend
  8129  013A1E  C06F  F075         	movff	?___awmod+1,___awdiv@dividend+1
  8130  013A22  EC38  F0A6         	call	___awdiv	;wreg free
  8131  013A26  0100               	movlb	0	; () banked
  8132  013A28  90D8               	bcf	status,0,c
  8133  013A2A  3774               	rlcf	?___awdiv& (0+255),f,b
  8134  013A2C  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  8135  013A2E  0100               	movlb	0	; () banked
  8136  013A30  90D8               	bcf	status,0,c
  8137  013A32  3774               	rlcf	?___awdiv& (0+255),f,b
  8138  013A34  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  8139  013A36  0E24               	movlw	36
  8140  013A38  0100               	movlb	0	; () banked
  8141  013A3A  2774               	addwf	?___awdiv& (0+255),f,b
  8142  013A3C  0E00               	movlw	0
  8143  013A3E  0100               	movlb	0	; () banked
  8144  013A40  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  8145  013A42  0EDD               	movlw	low __npowers_
  8146  013A44  0100               	movlb	0	; () banked
  8147  013A46  2574               	addwf	?___awdiv& (0+255),w,b
  8148  013A48  6EF6               	movwf	tblptrl,c
  8149  013A4A  0EFE               	movlw	high __npowers_
  8150  013A4C  0100               	movlb	0	; () banked
  8151  013A4E  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  8152  013A50  6EF7               	movwf	tblptrh,c
  8153  013A52                     	if	1	;There are 3 active tblptr bytes
  8154  013A52  6AF8               	clrf	tblptru,c
  8155  013A54  0E00               	movlw	low (__mediumconst shr (0+16))
  8156  013A56  22F8               	addwfc	tblptru,f,c
  8157  013A58                     	endif
  8158  013A58  0009               	tblrd		*+
  8159  013A5A  CFF5 F080          	movff	tablat,___flmul@a
  8160  013A5E  0009               	tblrd		*+
  8161  013A60  CFF5 F081          	movff	tablat,___flmul@a+1
  8162  013A64  0009               	tblrd		*+
  8163  013A66  CFF5 F082          	movff	tablat,___flmul@a+2
  8164  013A6A  000A               	tblrd		*-
  8165  013A6C  CFF5 F083          	movff	tablat,___flmul@a+3
  8166  013A70  0E00               	movlw	0
  8167  013A72  0100               	movlb	0	; () banked
  8168  013A74  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  8169  013A76  0E64               	movlw	100
  8170  013A78  6F76               	movwf	___awdiv@divisor& (0+255),b
  8171  013A7A  C0A1  F074         	movff	fround@prec,___awdiv@dividend
  8172  013A7E  0100               	movlb	0	; () banked
  8173  013A80  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
  8174  013A82  EC38  F0A6         	call	___awdiv	;wreg free
  8175  013A86  0100               	movlb	0	; () banked
  8176  013A88  90D8               	bcf	status,0,c
  8177  013A8A  3774               	rlcf	?___awdiv& (0+255),f,b
  8178  013A8C  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  8179  013A8E  0100               	movlb	0	; () banked
  8180  013A90  90D8               	bcf	status,0,c
  8181  013A92  3774               	rlcf	?___awdiv& (0+255),f,b
  8182  013A94  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  8183  013A96  0E48               	movlw	72
  8184  013A98  0100               	movlb	0	; () banked
  8185  013A9A  2774               	addwf	?___awdiv& (0+255),f,b
  8186  013A9C  0E00               	movlw	0
  8187  013A9E  0100               	movlb	0	; () banked
  8188  013AA0  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  8189  013AA2  0EDD               	movlw	low __npowers_
  8190  013AA4  0100               	movlb	0	; () banked
  8191  013AA6  2574               	addwf	?___awdiv& (0+255),w,b
  8192  013AA8  6EF6               	movwf	tblptrl,c
  8193  013AAA  0EFE               	movlw	high __npowers_
  8194  013AAC  0100               	movlb	0	; () banked
  8195  013AAE  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  8196  013AB0  6EF7               	movwf	tblptrh,c
  8197  013AB2                     	if	1	;There are 3 active tblptr bytes
  8198  013AB2  6AF8               	clrf	tblptru,c
  8199  013AB4  0E00               	movlw	low (__mediumconst shr (0+16))
  8200  013AB6  22F8               	addwfc	tblptru,f,c
  8201  013AB8                     	endif
  8202  013AB8  0009               	tblrd		*+
  8203  013ABA  CFF5 F07C          	movff	tablat,___flmul@b
  8204  013ABE  0009               	tblrd		*+
  8205  013AC0  CFF5 F07D          	movff	tablat,___flmul@b+1
  8206  013AC4  0009               	tblrd		*+
  8207  013AC6  CFF5 F07E          	movff	tablat,___flmul@b+2
  8208  013ACA  000A               	tblrd		*-
  8209  013ACC  CFF5 F07F          	movff	tablat,___flmul@b+3
  8210  013AD0  ECFA  F094         	call	___flmul	;wreg free
  8211  013AD4  C07C  F09D         	movff	?___flmul,_fround$4190
  8212  013AD8  C07D  F09E         	movff	?___flmul+1,_fround$4190+1
  8213  013ADC  C07E  F09F         	movff	?___flmul+2,_fround$4190+2
  8214  013AE0  C07F  F0A0         	movff	?___flmul+3,_fround$4190+3
  8215                           
  8216                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8217  013AE4  0E00               	movlw	0
  8218  013AE6  0100               	movlb	0	; () banked
  8219  013AE8  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  8220  013AEA  0E0A               	movlw	10
  8221  013AEC  6F70               	movwf	___awmod@divisor& (0+255),b
  8222  013AEE  C0A1  F06E         	movff	fround@prec,___awmod@dividend
  8223  013AF2  0100               	movlb	0	; () banked
  8224  013AF4  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  8225  013AF6  ECF5  F0A6         	call	___awmod	;wreg free
  8226  013AFA  0100               	movlb	0	; () banked
  8227  013AFC  90D8               	bcf	status,0,c
  8228  013AFE  376E               	rlcf	?___awmod& (0+255),f,b
  8229  013B00  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  8230  013B02  0100               	movlb	0	; () banked
  8231  013B04  90D8               	bcf	status,0,c
  8232  013B06  376E               	rlcf	?___awmod& (0+255),f,b
  8233  013B08  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  8234  013B0A  0EDD               	movlw	low __npowers_
  8235  013B0C  0100               	movlb	0	; () banked
  8236  013B0E  256E               	addwf	?___awmod& (0+255),w,b
  8237  013B10  6EF6               	movwf	tblptrl,c
  8238  013B12  0EFE               	movlw	high __npowers_
  8239  013B14  0100               	movlb	0	; () banked
  8240  013B16  216F               	addwfc	(?___awmod+1)& (0+255),w,b
  8241  013B18  6EF7               	movwf	tblptrh,c
  8242  013B1A                     	if	1	;There are 3 active tblptr bytes
  8243  013B1A  6AF8               	clrf	tblptru,c
  8244  013B1C  0E00               	movlw	low (__mediumconst shr (0+16))
  8245  013B1E  22F8               	addwfc	tblptru,f,c
  8246  013B20                     	endif
  8247  013B20  0009               	tblrd		*+
  8248  013B22  CFF5 F080          	movff	tablat,___flmul@a
  8249  013B26  0009               	tblrd		*+
  8250  013B28  CFF5 F081          	movff	tablat,___flmul@a+1
  8251  013B2C  0009               	tblrd		*+
  8252  013B2E  CFF5 F082          	movff	tablat,___flmul@a+2
  8253  013B32  000A               	tblrd		*-
  8254  013B34  CFF5 F083          	movff	tablat,___flmul@a+3
  8255  013B38  C09D  F07C         	movff	_fround$4190,___flmul@b
  8256  013B3C  C09E  F07D         	movff	_fround$4190+1,___flmul@b+1
  8257  013B40  C09F  F07E         	movff	_fround$4190+2,___flmul@b+2
  8258  013B44  C0A0  F07F         	movff	_fround$4190+3,___flmul@b+3
  8259  013B48  ECFA  F094         	call	___flmul	;wreg free
  8260  013B4C  C07C  F099         	movff	?___flmul,_fround$4191
  8261  013B50  C07D  F09A         	movff	?___flmul+1,_fround$4191+1
  8262  013B54  C07E  F09B         	movff	?___flmul+2,_fround$4191+2
  8263  013B58  C07F  F09C         	movff	?___flmul+3,_fround$4191+3
  8264                           
  8265                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8266  013B5C  C099  F07C         	movff	_fround$4191,___flmul@b
  8267  013B60  C09A  F07D         	movff	_fround$4191+1,___flmul@b+1
  8268  013B64  C09B  F07E         	movff	_fround$4191+2,___flmul@b+2
  8269  013B68  C09C  F07F         	movff	_fround$4191+3,___flmul@b+3
  8270  013B6C  0E00               	movlw	0
  8271  013B6E  0100               	movlb	0	; () banked
  8272  013B70  6F80               	movwf	___flmul@a& (0+255),b
  8273  013B72  0E00               	movlw	0
  8274  013B74  6F81               	movwf	(___flmul@a+1)& (0+255),b
  8275  013B76  0E00               	movlw	0
  8276  013B78  6F82               	movwf	(___flmul@a+2)& (0+255),b
  8277  013B7A  0E3F               	movlw	63
  8278  013B7C  6F83               	movwf	(___flmul@a+3)& (0+255),b
  8279  013B7E  ECFA  F094         	call	___flmul	;wreg free
  8280  013B82  C07C  F095         	movff	?___flmul,?_fround
  8281  013B86  C07D  F096         	movff	?___flmul+1,?_fround+1
  8282  013B8A  C07E  F097         	movff	?___flmul+2,?_fround+2
  8283  013B8E  C07F  F098         	movff	?___flmul+3,?_fround+3
  8284  013B92  0012               	return	
  8285  013B94                     l7418:
  8286                           
  8287                           ;doprnt.c: 415: else if(prec > 10)
  8288  013B94  0E0A               	movlw	10
  8289  013B96  0100               	movlb	0	; () banked
  8290  013B98  65A1               	cpfsgt	fround@prec& (0+255),b
  8291  013B9A  D078               	goto	l7426
  8292                           
  8293                           ; BSR set to: 0
  8294                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8295  013B9C  0E00               	movlw	0
  8296  013B9E  0100               	movlb	0	; () banked
  8297  013BA0  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  8298  013BA2  0E0A               	movlw	10
  8299  013BA4  6F70               	movwf	___awmod@divisor& (0+255),b
  8300  013BA6  C0A1  F06E         	movff	fround@prec,___awmod@dividend
  8301  013BAA  0100               	movlb	0	; () banked
  8302  013BAC  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  8303  013BAE  ECF5  F0A6         	call	___awmod	;wreg free
  8304  013BB2  0100               	movlb	0	; () banked
  8305  013BB4  90D8               	bcf	status,0,c
  8306  013BB6  376E               	rlcf	?___awmod& (0+255),f,b
  8307  013BB8  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  8308  013BBA  0100               	movlb	0	; () banked
  8309  013BBC  90D8               	bcf	status,0,c
  8310  013BBE  376E               	rlcf	?___awmod& (0+255),f,b
  8311  013BC0  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  8312  013BC2  0EDD               	movlw	low __npowers_
  8313  013BC4  0100               	movlb	0	; () banked
  8314  013BC6  256E               	addwf	?___awmod& (0+255),w,b
  8315  013BC8  6EF6               	movwf	tblptrl,c
  8316  013BCA  0EFE               	movlw	high __npowers_
  8317  013BCC  0100               	movlb	0	; () banked
  8318  013BCE  216F               	addwfc	(?___awmod+1)& (0+255),w,b
  8319  013BD0  6EF7               	movwf	tblptrh,c
  8320  013BD2                     	if	1	;There are 3 active tblptr bytes
  8321  013BD2  6AF8               	clrf	tblptru,c
  8322  013BD4  0E00               	movlw	low (__mediumconst shr (0+16))
  8323  013BD6  22F8               	addwfc	tblptru,f,c
  8324  013BD8                     	endif
  8325  013BD8  0009               	tblrd		*+
  8326  013BDA  CFF5 F080          	movff	tablat,___flmul@a
  8327  013BDE  0009               	tblrd		*+
  8328  013BE0  CFF5 F081          	movff	tablat,___flmul@a+1
  8329  013BE4  0009               	tblrd		*+
  8330  013BE6  CFF5 F082          	movff	tablat,___flmul@a+2
  8331  013BEA  000A               	tblrd		*-
  8332  013BEC  CFF5 F083          	movff	tablat,___flmul@a+3
  8333  013BF0  0E00               	movlw	0
  8334  013BF2  0100               	movlb	0	; () banked
  8335  013BF4  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  8336  013BF6  0E0A               	movlw	10
  8337  013BF8  6F76               	movwf	___awdiv@divisor& (0+255),b
  8338  013BFA  C0A1  F074         	movff	fround@prec,___awdiv@dividend
  8339  013BFE  0100               	movlb	0	; () banked
  8340  013C00  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
  8341  013C02  EC38  F0A6         	call	___awdiv	;wreg free
  8342  013C06  0100               	movlb	0	; () banked
  8343  013C08  90D8               	bcf	status,0,c
  8344  013C0A  3774               	rlcf	?___awdiv& (0+255),f,b
  8345  013C0C  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  8346  013C0E  0100               	movlb	0	; () banked
  8347  013C10  90D8               	bcf	status,0,c
  8348  013C12  3774               	rlcf	?___awdiv& (0+255),f,b
  8349  013C14  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  8350  013C16  0E24               	movlw	36
  8351  013C18  0100               	movlb	0	; () banked
  8352  013C1A  2774               	addwf	?___awdiv& (0+255),f,b
  8353  013C1C  0E00               	movlw	0
  8354  013C1E  0100               	movlb	0	; () banked
  8355  013C20  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  8356  013C22  0EDD               	movlw	low __npowers_
  8357  013C24  0100               	movlb	0	; () banked
  8358  013C26  2574               	addwf	?___awdiv& (0+255),w,b
  8359  013C28  6EF6               	movwf	tblptrl,c
  8360  013C2A  0EFE               	movlw	high __npowers_
  8361  013C2C  0100               	movlb	0	; () banked
  8362  013C2E  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  8363  013C30  6EF7               	movwf	tblptrh,c
  8364  013C32                     	if	1	;There are 3 active tblptr bytes
  8365  013C32  6AF8               	clrf	tblptru,c
  8366  013C34  0E00               	movlw	low (__mediumconst shr (0+16))
  8367  013C36  22F8               	addwfc	tblptru,f,c
  8368  013C38                     	endif
  8369  013C38  0009               	tblrd		*+
  8370  013C3A  CFF5 F07C          	movff	tablat,___flmul@b
  8371  013C3E  0009               	tblrd		*+
  8372  013C40  CFF5 F07D          	movff	tablat,___flmul@b+1
  8373  013C44  0009               	tblrd		*+
  8374  013C46  CFF5 F07E          	movff	tablat,___flmul@b+2
  8375  013C4A  000A               	tblrd		*-
  8376  013C4C  CFF5 F07F          	movff	tablat,___flmul@b+3
  8377  013C50  ECFA  F094         	call	___flmul	;wreg free
  8378  013C54  C07C  F09D         	movff	?___flmul,_fround$4190
  8379  013C58  C07D  F09E         	movff	?___flmul+1,_fround$4190+1
  8380  013C5C  C07E  F09F         	movff	?___flmul+2,_fround$4190+2
  8381  013C60  C07F  F0A0         	movff	?___flmul+3,_fround$4190+3
  8382                           
  8383                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8384  013C64  C09D  F07C         	movff	_fround$4190,___flmul@b
  8385  013C68  C09E  F07D         	movff	_fround$4190+1,___flmul@b+1
  8386  013C6C  C09F  F07E         	movff	_fround$4190+2,___flmul@b+2
  8387  013C70  C0A0  F07F         	movff	_fround$4190+3,___flmul@b+3
  8388  013C74  0E00               	movlw	0
  8389  013C76  0100               	movlb	0	; () banked
  8390  013C78  6F80               	movwf	___flmul@a& (0+255),b
  8391  013C7A  0E00               	movlw	0
  8392  013C7C  6F81               	movwf	(___flmul@a+1)& (0+255),b
  8393  013C7E  0E00               	movlw	0
  8394  013C80  6F82               	movwf	(___flmul@a+2)& (0+255),b
  8395  013C82  0E3F               	movlw	63
  8396  013C84  6F83               	movwf	(___flmul@a+3)& (0+255),b
  8397  013C86  ECFA  F094         	call	___flmul	;wreg free
  8398  013C8A  D77B               	goto	L7
  8399  013C8C                     l7426:
  8400                           
  8401                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  8402  013C8C  0100               	movlb	0	; () banked
  8403  013C8E  51A1               	movf	fround@prec& (0+255),w,b
  8404  013C90  0D04               	mullw	4
  8405  013C92  0EDD               	movlw	low __npowers_
  8406  013C94  24F3               	addwf	prodl,w,c
  8407  013C96  6EF6               	movwf	tblptrl,c
  8408  013C98  0EFE               	movlw	high __npowers_
  8409  013C9A  20F4               	addwfc	prodh,w,c
  8410  013C9C  6EF7               	movwf	tblptrh,c
  8411  013C9E                     	if	1	;There are 3 active tblptr bytes
  8412  013C9E  6AF8               	clrf	tblptru,c
  8413  013CA0  0E00               	movlw	low (__mediumconst shr (0+16))
  8414  013CA2  22F8               	addwfc	tblptru,f,c
  8415  013CA4                     	endif
  8416  013CA4  0009               	tblrd		*+
  8417  013CA6  CFF5 F07C          	movff	tablat,___flmul@b
  8418  013CAA  0009               	tblrd		*+
  8419  013CAC  CFF5 F07D          	movff	tablat,___flmul@b+1
  8420  013CB0  0009               	tblrd		*+
  8421  013CB2  CFF5 F07E          	movff	tablat,___flmul@b+2
  8422  013CB6  000A               	tblrd		*-
  8423  013CB8  CFF5 F07F          	movff	tablat,___flmul@b+3
  8424  013CBC  0E00               	movlw	0
  8425  013CBE  0100               	movlb	0	; () banked
  8426  013CC0  6F80               	movwf	___flmul@a& (0+255),b
  8427  013CC2  0E00               	movlw	0
  8428  013CC4  6F81               	movwf	(___flmul@a+1)& (0+255),b
  8429  013CC6  0E00               	movlw	0
  8430  013CC8  6F82               	movwf	(___flmul@a+2)& (0+255),b
  8431  013CCA  0E3F               	movlw	63
  8432  013CCC  6F83               	movwf	(___flmul@a+3)& (0+255),b
  8433  013CCE  ECFA  F094         	call	___flmul	;wreg free
  8434  013CD2  C07C  F095         	movff	?___flmul,?_fround
  8435  013CD6  C07D  F096         	movff	?___flmul+1,?_fround+1
  8436  013CDA  C07E  F097         	movff	?___flmul+2,?_fround+2
  8437  013CDE  C07F  F098         	movff	?___flmul+3,?_fround+3
  8438  013CE2  0012               	return	
  8439  013CE4                     __end_of_fround:
  8440                           	opt stack 0
  8441                           tblptru	equ	0xFF8
  8442                           tblptrh	equ	0xFF7
  8443                           tblptrl	equ	0xFF6
  8444                           tablat	equ	0xFF5
  8445                           prodh	equ	0xFF4
  8446                           prodl	equ	0xFF3
  8447                           intcon	equ	0xFF2
  8448                           postinc0	equ	0xFEE
  8449                           wreg	equ	0xFE8
  8450                           indf2	equ	0xFDF
  8451                           postinc2	equ	0xFDE
  8452                           fsr2h	equ	0xFDA
  8453                           fsr2l	equ	0xFD9
  8454                           status	equ	0xFD8
  8455                           
  8456 ;; *************** function ___flmul *****************
  8457 ;; Defined at:
  8458 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  8459 ;; Parameters:    Size  Location     Type
  8460 ;;  b               4   28[BANK0 ] unsigned char 
  8461 ;;  a               4   32[BANK0 ] unsigned char 
  8462 ;; Auto vars:     Size  Location     Type
  8463 ;;  prod            4   47[BANK0 ] struct .
  8464 ;;  grs             4   42[BANK0 ] unsigned long 
  8465 ;;  temp            2   51[BANK0 ] struct .
  8466 ;;  bexp            1   46[BANK0 ] unsigned char 
  8467 ;;  aexp            1   41[BANK0 ] unsigned char 
  8468 ;;  sign            1   40[BANK0 ] unsigned char 
  8469 ;; Return value:  Size  Location     Type
  8470 ;;                  4   28[BANK0 ] unsigned char 
  8471 ;; Registers used:
  8472 ;;		wreg, status,2, status,0, prodl, prodh
  8473 ;; Tracked objects:
  8474 ;;		On entry : 0/0
  8475 ;;		On exit  : 0/0
  8476 ;;		Unchanged: 0/0
  8477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8478 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8479 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8480 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8481 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8482 ;;Total ram usage:       25 bytes
  8483 ;; Hardware stack levels used:    1
  8484 ;; Hardware stack levels required when called:    3
  8485 ;; This function calls:
  8486 ;;		Nothing
  8487 ;; This function is called by:
  8488 ;;		_main
  8489 ;;		_fround
  8490 ;;		_scale
  8491 ;;		_sprintf
  8492 ;; This function uses a non-reentrant model
  8493 ;;
  8494                           
  8495                           	psect	text16
  8496  0129F4                     __ptext16:
  8497                           	opt stack 0
  8498  0129F4                     ___flmul:
  8499                           	opt stack 27
  8500                           
  8501                           ;incstack = 0
  8502  0129F4  0100               	movlb	0	; () banked
  8503  0129F6  517F               	movf	(___flmul@b+3)& (0+255),w,b
  8504  0129F8  0B80               	andlw	128
  8505  0129FA  0100               	movlb	0	; () banked
  8506  0129FC  6F88               	movwf	___flmul@sign& (0+255),b
  8507  0129FE  0100               	movlb	0	; () banked
  8508  012A00  517F               	movf	(___flmul@b+3)& (0+255),w,b
  8509  012A02  257F               	addwf	(___flmul@b+3)& (0+255),w,b
  8510  012A04  0100               	movlb	0	; () banked
  8511  012A06  6F8E               	movwf	___flmul@bexp& (0+255),b
  8512                           
  8513                           ; BSR set to: 0
  8514  012A08  0100               	movlb	0	; () banked
  8515  012A0A  AF7E               	btfss	(___flmul@b+2)& (0+255),7,b
  8516  012A0C  D002               	goto	l6768
  8517                           
  8518                           ; BSR set to: 0
  8519  012A0E  0100               	movlb	0	; () banked
  8520  012A10  818E               	bsf	___flmul@bexp& (0+255),0,b
  8521  012A12                     l6768:
  8522                           
  8523                           ; BSR set to: 0
  8524  012A12  0100               	movlb	0	; () banked
  8525  012A14  518E               	movf	___flmul@bexp& (0+255),w,b
  8526  012A16  0100               	movlb	0	; () banked
  8527  012A18  B4D8               	btfsc	status,2,c
  8528  012A1A  D010               	goto	l6776
  8529                           
  8530                           ; BSR set to: 0
  8531  012A1C  0100               	movlb	0	; () banked
  8532  012A1E  298E               	incf	___flmul@bexp& (0+255),w,b
  8533  012A20  A4D8               	btfss	status,2,c
  8534  012A22  D009               	goto	l6774
  8535                           
  8536                           ; BSR set to: 0
  8537  012A24  0E00               	movlw	0
  8538  012A26  0100               	movlb	0	; () banked
  8539  012A28  6F7C               	movwf	___flmul@b& (0+255),b
  8540  012A2A  0E00               	movlw	0
  8541  012A2C  6F7D               	movwf	(___flmul@b+1)& (0+255),b
  8542  012A2E  0E00               	movlw	0
  8543  012A30  6F7E               	movwf	(___flmul@b+2)& (0+255),b
  8544  012A32  0E00               	movlw	0
  8545  012A34  6F7F               	movwf	(___flmul@b+3)& (0+255),b
  8546  012A36                     l6774:
  8547                           
  8548                           ; BSR set to: 0
  8549  012A36  0100               	movlb	0	; () banked
  8550  012A38  8F7E               	bsf	(___flmul@b+2)& (0+255),7,b
  8551  012A3A  D009               	goto	l6778
  8552  012A3C                     l6776:
  8553                           
  8554                           ; BSR set to: 0
  8555  012A3C  0E00               	movlw	0
  8556  012A3E  0100               	movlb	0	; () banked
  8557  012A40  6F7C               	movwf	___flmul@b& (0+255),b
  8558  012A42  0E00               	movlw	0
  8559  012A44  6F7D               	movwf	(___flmul@b+1)& (0+255),b
  8560  012A46  0E00               	movlw	0
  8561  012A48  6F7E               	movwf	(___flmul@b+2)& (0+255),b
  8562  012A4A  0E00               	movlw	0
  8563  012A4C  6F7F               	movwf	(___flmul@b+3)& (0+255),b
  8564  012A4E                     l6778:
  8565                           
  8566                           ; BSR set to: 0
  8567  012A4E  0100               	movlb	0	; () banked
  8568  012A50  5183               	movf	(___flmul@a+3)& (0+255),w,b
  8569  012A52  0B80               	andlw	128
  8570  012A54  0100               	movlb	0	; () banked
  8571  012A56  1B88               	xorwf	___flmul@sign& (0+255),f,b
  8572                           
  8573                           ; BSR set to: 0
  8574  012A58  0100               	movlb	0	; () banked
  8575  012A5A  5183               	movf	(___flmul@a+3)& (0+255),w,b
  8576  012A5C  2583               	addwf	(___flmul@a+3)& (0+255),w,b
  8577  012A5E  0100               	movlb	0	; () banked
  8578  012A60  6F89               	movwf	___flmul@aexp& (0+255),b
  8579                           
  8580                           ; BSR set to: 0
  8581  012A62  0100               	movlb	0	; () banked
  8582  012A64  AF82               	btfss	(___flmul@a+2)& (0+255),7,b
  8583  012A66  D002               	goto	l6786
  8584                           
  8585                           ; BSR set to: 0
  8586  012A68  0100               	movlb	0	; () banked
  8587  012A6A  8189               	bsf	___flmul@aexp& (0+255),0,b
  8588  012A6C                     l6786:
  8589                           
  8590                           ; BSR set to: 0
  8591  012A6C  0100               	movlb	0	; () banked
  8592  012A6E  5189               	movf	___flmul@aexp& (0+255),w,b
  8593  012A70  0100               	movlb	0	; () banked
  8594  012A72  B4D8               	btfsc	status,2,c
  8595  012A74  D010               	goto	l6794
  8596                           
  8597                           ; BSR set to: 0
  8598  012A76  0100               	movlb	0	; () banked
  8599  012A78  2989               	incf	___flmul@aexp& (0+255),w,b
  8600  012A7A  A4D8               	btfss	status,2,c
  8601  012A7C  D009               	goto	l6792
  8602                           
  8603                           ; BSR set to: 0
  8604  012A7E  0E00               	movlw	0
  8605  012A80  0100               	movlb	0	; () banked
  8606  012A82  6F80               	movwf	___flmul@a& (0+255),b
  8607  012A84  0E00               	movlw	0
  8608  012A86  6F81               	movwf	(___flmul@a+1)& (0+255),b
  8609  012A88  0E00               	movlw	0
  8610  012A8A  6F82               	movwf	(___flmul@a+2)& (0+255),b
  8611  012A8C  0E00               	movlw	0
  8612  012A8E  6F83               	movwf	(___flmul@a+3)& (0+255),b
  8613  012A90                     l6792:
  8614                           
  8615                           ; BSR set to: 0
  8616  012A90  0100               	movlb	0	; () banked
  8617  012A92  8F82               	bsf	(___flmul@a+2)& (0+255),7,b
  8618  012A94  D009               	goto	l1474
  8619  012A96                     l6794:
  8620                           
  8621                           ; BSR set to: 0
  8622  012A96  0E00               	movlw	0
  8623  012A98  0100               	movlb	0	; () banked
  8624  012A9A  6F80               	movwf	___flmul@a& (0+255),b
  8625  012A9C  0E00               	movlw	0
  8626  012A9E  6F81               	movwf	(___flmul@a+1)& (0+255),b
  8627  012AA0  0E00               	movlw	0
  8628  012AA2  6F82               	movwf	(___flmul@a+2)& (0+255),b
  8629  012AA4  0E00               	movlw	0
  8630  012AA6  6F83               	movwf	(___flmul@a+3)& (0+255),b
  8631  012AA8                     l1474:
  8632                           
  8633                           ; BSR set to: 0
  8634  012AA8  0100               	movlb	0	; () banked
  8635  012AAA  5189               	movf	___flmul@aexp& (0+255),w,b
  8636  012AAC  0100               	movlb	0	; () banked
  8637  012AAE  B4D8               	btfsc	status,2,c
  8638  012AB0  D005               	goto	l6798
  8639                           
  8640                           ; BSR set to: 0
  8641  012AB2  0100               	movlb	0	; () banked
  8642  012AB4  518E               	movf	___flmul@bexp& (0+255),w,b
  8643  012AB6  0100               	movlb	0	; () banked
  8644  012AB8  A4D8               	btfss	status,2,c
  8645  012ABA  D00A               	goto	l6802
  8646  012ABC                     l6798:
  8647                           
  8648                           ; BSR set to: 0
  8649  012ABC  0E00               	movlw	0
  8650  012ABE  0100               	movlb	0	; () banked
  8651  012AC0  6F7C               	movwf	?___flmul& (0+255),b
  8652  012AC2  0E00               	movlw	0
  8653  012AC4  6F7D               	movwf	(?___flmul+1)& (0+255),b
  8654  012AC6  0E00               	movlw	0
  8655  012AC8  6F7E               	movwf	(?___flmul+2)& (0+255),b
  8656  012ACA  0E00               	movlw	0
  8657  012ACC  6F7F               	movwf	(?___flmul+3)& (0+255),b
  8658                           
  8659                           ; BSR set to: 0
  8660  012ACE  0012               	return	
  8661  012AD0                     l6802:
  8662                           
  8663                           ; BSR set to: 0
  8664  012AD0  0100               	movlb	0	; () banked
  8665  012AD2  5182               	movf	(___flmul@a+2)& (0+255),w,b
  8666  012AD4  0100               	movlb	0	; () banked
  8667  012AD6  037C               	mulwf	___flmul@b& (0+255),b
  8668  012AD8  CFF3 F093          	movff	prodl,___flmul@temp
  8669  012ADC  CFF4 F094          	movff	prodh,___flmul@temp+1
  8670                           
  8671                           ; BSR set to: 0
  8672  012AE0  0100               	movlb	0	; () banked
  8673  012AE2  5193               	movf	___flmul@temp& (0+255),w,b
  8674  012AE4  0100               	movlb	0	; () banked
  8675  012AE6  6F8A               	movwf	___flmul@grs& (0+255),b
  8676  012AE8  6B8B               	clrf	(___flmul@grs+1)& (0+255),b
  8677  012AEA  6B8C               	clrf	(___flmul@grs+2)& (0+255),b
  8678  012AEC  6B8D               	clrf	(___flmul@grs+3)& (0+255),b
  8679                           
  8680                           ; BSR set to: 0
  8681  012AEE  0100               	movlb	0	; () banked
  8682  012AF0  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8683  012AF2  0100               	movlb	0	; () banked
  8684  012AF4  6F8F               	movwf	___flmul@prod& (0+255),b
  8685  012AF6  6B90               	clrf	(___flmul@prod+1)& (0+255),b
  8686  012AF8  6B91               	clrf	(___flmul@prod+2)& (0+255),b
  8687  012AFA  6B92               	clrf	(___flmul@prod+3)& (0+255),b
  8688  012AFC  0100               	movlb	0	; () banked
  8689  012AFE  5181               	movf	(___flmul@a+1)& (0+255),w,b
  8690  012B00  0100               	movlb	0	; () banked
  8691  012B02  037D               	mulwf	(___flmul@b+1)& (0+255),b
  8692  012B04  CFF3 F093          	movff	prodl,___flmul@temp
  8693  012B08  CFF4 F094          	movff	prodh,___flmul@temp+1
  8694                           
  8695                           ; BSR set to: 0
  8696  012B0C  0100               	movlb	0	; () banked
  8697  012B0E  5193               	movf	___flmul@temp& (0+255),w,b
  8698  012B10  0100               	movlb	0	; () banked
  8699  012B12  278A               	addwf	___flmul@grs& (0+255),f,b
  8700  012B14  0E00               	movlw	0
  8701  012B16  238B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8702  012B18  238C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8703  012B1A  238D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8704                           
  8705                           ; BSR set to: 0
  8706  012B1C  0100               	movlb	0	; () banked
  8707  012B1E  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8708  012B20  0100               	movlb	0	; () banked
  8709  012B22  278F               	addwf	___flmul@prod& (0+255),f,b
  8710  012B24  0E00               	movlw	0
  8711  012B26  2390               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8712  012B28  2391               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8713  012B2A  2392               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8714  012B2C  0100               	movlb	0	; () banked
  8715  012B2E  5180               	movf	___flmul@a& (0+255),w,b
  8716  012B30  0100               	movlb	0	; () banked
  8717  012B32  037E               	mulwf	(___flmul@b+2)& (0+255),b
  8718  012B34  CFF3 F093          	movff	prodl,___flmul@temp
  8719  012B38  CFF4 F094          	movff	prodh,___flmul@temp+1
  8720                           
  8721                           ; BSR set to: 0
  8722  012B3C  0100               	movlb	0	; () banked
  8723  012B3E  5193               	movf	___flmul@temp& (0+255),w,b
  8724  012B40  0100               	movlb	0	; () banked
  8725  012B42  278A               	addwf	___flmul@grs& (0+255),f,b
  8726  012B44  0E00               	movlw	0
  8727  012B46  238B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8728  012B48  238C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8729  012B4A  238D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8730                           
  8731                           ; BSR set to: 0
  8732  012B4C  0100               	movlb	0	; () banked
  8733  012B4E  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8734  012B50  0100               	movlb	0	; () banked
  8735  012B52  278F               	addwf	___flmul@prod& (0+255),f,b
  8736  012B54  0E00               	movlw	0
  8737  012B56  2390               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8738  012B58  2391               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8739  012B5A  2392               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8740                           
  8741                           ; BSR set to: 0
  8742  012B5C  C08C  F08D         	movff	___flmul@grs+2,___flmul@grs+3
  8743  012B60  C08B  F08C         	movff	___flmul@grs+1,___flmul@grs+2
  8744  012B64  C08A  F08B         	movff	___flmul@grs,___flmul@grs+1
  8745  012B68  0100               	movlb	0	; () banked
  8746  012B6A  6B8A               	clrf	___flmul@grs& (0+255),b
  8747                           
  8748                           ; BSR set to: 0
  8749  012B6C  0100               	movlb	0	; () banked
  8750  012B6E  5180               	movf	___flmul@a& (0+255),w,b
  8751  012B70  0100               	movlb	0	; () banked
  8752  012B72  037D               	mulwf	(___flmul@b+1)& (0+255),b
  8753  012B74  CFF3 F093          	movff	prodl,___flmul@temp
  8754  012B78  CFF4 F094          	movff	prodh,___flmul@temp+1
  8755                           
  8756                           ; BSR set to: 0
  8757  012B7C  0100               	movlb	0	; () banked
  8758  012B7E  5193               	movf	___flmul@temp& (0+255),w,b
  8759  012B80  0100               	movlb	0	; () banked
  8760  012B82  278A               	addwf	___flmul@grs& (0+255),f,b
  8761  012B84  0100               	movlb	0	; () banked
  8762  012B86  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8763  012B88  0100               	movlb	0	; () banked
  8764  012B8A  238B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8765  012B8C  0E00               	movlw	0
  8766  012B8E  0100               	movlb	0	; () banked
  8767  012B90  238C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8768  012B92  0E00               	movlw	0
  8769  012B94  0100               	movlb	0	; () banked
  8770  012B96  238D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8771                           
  8772                           ; BSR set to: 0
  8773  012B98  0100               	movlb	0	; () banked
  8774  012B9A  5181               	movf	(___flmul@a+1)& (0+255),w,b
  8775  012B9C  0100               	movlb	0	; () banked
  8776  012B9E  037C               	mulwf	___flmul@b& (0+255),b
  8777  012BA0  CFF3 F093          	movff	prodl,___flmul@temp
  8778  012BA4  CFF4 F094          	movff	prodh,___flmul@temp+1
  8779                           
  8780                           ; BSR set to: 0
  8781  012BA8  0100               	movlb	0	; () banked
  8782  012BAA  5193               	movf	___flmul@temp& (0+255),w,b
  8783  012BAC  0100               	movlb	0	; () banked
  8784  012BAE  278A               	addwf	___flmul@grs& (0+255),f,b
  8785  012BB0  0100               	movlb	0	; () banked
  8786  012BB2  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8787  012BB4  0100               	movlb	0	; () banked
  8788  012BB6  238B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8789  012BB8  0E00               	movlw	0
  8790  012BBA  0100               	movlb	0	; () banked
  8791  012BBC  238C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8792  012BBE  0E00               	movlw	0
  8793  012BC0  0100               	movlb	0	; () banked
  8794  012BC2  238D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8795                           
  8796                           ; BSR set to: 0
  8797  012BC4  C08C  F08D         	movff	___flmul@grs+2,___flmul@grs+3
  8798  012BC8  C08B  F08C         	movff	___flmul@grs+1,___flmul@grs+2
  8799  012BCC  C08A  F08B         	movff	___flmul@grs,___flmul@grs+1
  8800  012BD0  0100               	movlb	0	; () banked
  8801  012BD2  6B8A               	clrf	___flmul@grs& (0+255),b
  8802  012BD4  0100               	movlb	0	; () banked
  8803  012BD6  5180               	movf	___flmul@a& (0+255),w,b
  8804  012BD8  0100               	movlb	0	; () banked
  8805  012BDA  037C               	mulwf	___flmul@b& (0+255),b
  8806  012BDC  CFF3 F093          	movff	prodl,___flmul@temp
  8807  012BE0  CFF4 F094          	movff	prodh,___flmul@temp+1
  8808                           
  8809                           ; BSR set to: 0
  8810  012BE4  0100               	movlb	0	; () banked
  8811  012BE6  5193               	movf	___flmul@temp& (0+255),w,b
  8812  012BE8  0100               	movlb	0	; () banked
  8813  012BEA  278A               	addwf	___flmul@grs& (0+255),f,b
  8814  012BEC  0100               	movlb	0	; () banked
  8815  012BEE  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8816  012BF0  0100               	movlb	0	; () banked
  8817  012BF2  238B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8818  012BF4  0E00               	movlw	0
  8819  012BF6  0100               	movlb	0	; () banked
  8820  012BF8  238C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8821  012BFA  0E00               	movlw	0
  8822  012BFC  0100               	movlb	0	; () banked
  8823  012BFE  238D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8824                           
  8825                           ; BSR set to: 0
  8826  012C00  0100               	movlb	0	; () banked
  8827  012C02  5182               	movf	(___flmul@a+2)& (0+255),w,b
  8828  012C04  0100               	movlb	0	; () banked
  8829  012C06  037D               	mulwf	(___flmul@b+1)& (0+255),b
  8830  012C08  CFF3 F093          	movff	prodl,___flmul@temp
  8831  012C0C  CFF4 F094          	movff	prodh,___flmul@temp+1
  8832  012C10  0100               	movlb	0	; () banked
  8833  012C12  5193               	movf	___flmul@temp& (0+255),w,b
  8834  012C14  0100               	movlb	0	; () banked
  8835  012C16  278F               	addwf	___flmul@prod& (0+255),f,b
  8836  012C18  0100               	movlb	0	; () banked
  8837  012C1A  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8838  012C1C  0100               	movlb	0	; () banked
  8839  012C1E  2390               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8840  012C20  0E00               	movlw	0
  8841  012C22  0100               	movlb	0	; () banked
  8842  012C24  2391               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8843  012C26  0E00               	movlw	0
  8844  012C28  0100               	movlb	0	; () banked
  8845  012C2A  2392               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8846                           
  8847                           ; BSR set to: 0
  8848  012C2C  0100               	movlb	0	; () banked
  8849  012C2E  5181               	movf	(___flmul@a+1)& (0+255),w,b
  8850  012C30  0100               	movlb	0	; () banked
  8851  012C32  037E               	mulwf	(___flmul@b+2)& (0+255),b
  8852  012C34  CFF3 F093          	movff	prodl,___flmul@temp
  8853  012C38  CFF4 F094          	movff	prodh,___flmul@temp+1
  8854                           
  8855                           ; BSR set to: 0
  8856  012C3C  0100               	movlb	0	; () banked
  8857  012C3E  5193               	movf	___flmul@temp& (0+255),w,b
  8858  012C40  0100               	movlb	0	; () banked
  8859  012C42  278F               	addwf	___flmul@prod& (0+255),f,b
  8860  012C44  0100               	movlb	0	; () banked
  8861  012C46  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8862  012C48  0100               	movlb	0	; () banked
  8863  012C4A  2390               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8864  012C4C  0E00               	movlw	0
  8865  012C4E  0100               	movlb	0	; () banked
  8866  012C50  2391               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8867  012C52  0E00               	movlw	0
  8868  012C54  0100               	movlb	0	; () banked
  8869  012C56  2392               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8870  012C58  0100               	movlb	0	; () banked
  8871  012C5A  5182               	movf	(___flmul@a+2)& (0+255),w,b
  8872  012C5C  0100               	movlb	0	; () banked
  8873  012C5E  037E               	mulwf	(___flmul@b+2)& (0+255),b
  8874  012C60  CFF3 F093          	movff	prodl,___flmul@temp
  8875  012C64  CFF4 F094          	movff	prodh,___flmul@temp+1
  8876                           
  8877                           ; BSR set to: 0
  8878  012C68  0100               	movlb	0	; () banked
  8879  012C6A  5193               	movf	___flmul@temp& (0+255),w,b
  8880  012C6C  0100               	movlb	0	; () banked
  8881  012C6E  6F84               	movwf	??___flmul& (0+255),b
  8882  012C70  0100               	movlb	0	; () banked
  8883  012C72  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8884  012C74  0100               	movlb	0	; () banked
  8885  012C76  6F85               	movwf	(??___flmul+1)& (0+255),b
  8886  012C78  0100               	movlb	0	; () banked
  8887  012C7A  6B86               	clrf	(??___flmul+2)& (0+255),b
  8888  012C7C  0100               	movlb	0	; () banked
  8889  012C7E  6B87               	clrf	(??___flmul+3)& (0+255),b
  8890  012C80  C086  F087         	movff	??___flmul+2,??___flmul+3
  8891  012C84  C085  F086         	movff	??___flmul+1,??___flmul+2
  8892  012C88  C084  F085         	movff	??___flmul,??___flmul+1
  8893  012C8C  0100               	movlb	0	; () banked
  8894  012C8E  6B84               	clrf	??___flmul& (0+255),b
  8895  012C90  0100               	movlb	0	; () banked
  8896  012C92  5184               	movf	??___flmul& (0+255),w,b
  8897  012C94  0100               	movlb	0	; () banked
  8898  012C96  278F               	addwf	___flmul@prod& (0+255),f,b
  8899  012C98  0100               	movlb	0	; () banked
  8900  012C9A  5185               	movf	(??___flmul+1)& (0+255),w,b
  8901  012C9C  0100               	movlb	0	; () banked
  8902  012C9E  2390               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8903  012CA0  0100               	movlb	0	; () banked
  8904  012CA2  5186               	movf	(??___flmul+2)& (0+255),w,b
  8905  012CA4  0100               	movlb	0	; () banked
  8906  012CA6  2391               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8907  012CA8  0100               	movlb	0	; () banked
  8908  012CAA  5187               	movf	(??___flmul+3)& (0+255),w,b
  8909  012CAC  0100               	movlb	0	; () banked
  8910  012CAE  2392               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8911                           
  8912                           ; BSR set to: 0
  8913  012CB0  C08A  F084         	movff	___flmul@grs,??___flmul
  8914  012CB4  C08B  F085         	movff	___flmul@grs+1,??___flmul+1
  8915  012CB8  C08C  F086         	movff	___flmul@grs+2,??___flmul+2
  8916  012CBC  C08D  F087         	movff	___flmul@grs+3,??___flmul+3
  8917  012CC0  0E19               	movlw	25
  8918  012CC2  D006               	goto	u8610
  8919  012CC4                     u8615:
  8920  012CC4  0100               	movlb	0	; () banked
  8921  012CC6  90D8               	bcf	status,0,c
  8922  012CC8  3387               	rrcf	(??___flmul+3)& (0+255),f,b
  8923  012CCA  3386               	rrcf	(??___flmul+2)& (0+255),f,b
  8924  012CCC  3385               	rrcf	(??___flmul+1)& (0+255),f,b
  8925  012CCE  3384               	rrcf	??___flmul& (0+255),f,b
  8926  012CD0                     u8610:
  8927  012CD0  2EE8               	decfsz	wreg,f,c
  8928  012CD2  D7F8               	goto	u8615
  8929  012CD4  0100               	movlb	0	; () banked
  8930  012CD6  5184               	movf	??___flmul& (0+255),w,b
  8931  012CD8  0100               	movlb	0	; () banked
  8932  012CDA  278F               	addwf	___flmul@prod& (0+255),f,b
  8933  012CDC  0100               	movlb	0	; () banked
  8934  012CDE  5185               	movf	(??___flmul+1)& (0+255),w,b
  8935  012CE0  0100               	movlb	0	; () banked
  8936  012CE2  2390               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8937  012CE4  0100               	movlb	0	; () banked
  8938  012CE6  5186               	movf	(??___flmul+2)& (0+255),w,b
  8939  012CE8  0100               	movlb	0	; () banked
  8940  012CEA  2391               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8941  012CEC  0100               	movlb	0	; () banked
  8942  012CEE  5187               	movf	(??___flmul+3)& (0+255),w,b
  8943  012CF0  0100               	movlb	0	; () banked
  8944  012CF2  2392               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8945                           
  8946                           ; BSR set to: 0
  8947  012CF4  C08C  F08D         	movff	___flmul@grs+2,___flmul@grs+3
  8948  012CF8  C08B  F08C         	movff	___flmul@grs+1,___flmul@grs+2
  8949  012CFC  C08A  F08B         	movff	___flmul@grs,___flmul@grs+1
  8950  012D00  0100               	movlb	0	; () banked
  8951  012D02  6B8A               	clrf	___flmul@grs& (0+255),b
  8952                           
  8953                           ; BSR set to: 0
  8954  012D04  0100               	movlb	0	; () banked
  8955  012D06  5189               	movf	___flmul@aexp& (0+255),w,b
  8956  012D08  C08E  F084         	movff	___flmul@bexp,??___flmul
  8957  012D0C  0100               	movlb	0	; () banked
  8958  012D0E  6B85               	clrf	(??___flmul+1)& (0+255),b
  8959  012D10  0100               	movlb	0	; () banked
  8960  012D12  2784               	addwf	??___flmul& (0+255),f,b
  8961  012D14  0E00               	movlw	0
  8962  012D16  2385               	addwfc	(??___flmul+1)& (0+255),f,b
  8963  012D18  0E82               	movlw	130
  8964  012D1A  0100               	movlb	0	; () banked
  8965  012D1C  2584               	addwf	??___flmul& (0+255),w,b
  8966  012D1E  0100               	movlb	0	; () banked
  8967  012D20  6F93               	movwf	___flmul@temp& (0+255),b
  8968  012D22  0EFF               	movlw	255
  8969  012D24  0100               	movlb	0	; () banked
  8970  012D26  2185               	addwfc	(??___flmul+1)& (0+255),w,b
  8971  012D28  0100               	movlb	0	; () banked
  8972  012D2A  6F94               	movwf	(___flmul@temp+1)& (0+255),b
  8973  012D2C  D015               	goto	l6850
  8974  012D2E                     l6844:
  8975                           
  8976                           ; BSR set to: 0
  8977  012D2E  0100               	movlb	0	; () banked
  8978  012D30  90D8               	bcf	status,0,c
  8979  012D32  378F               	rlcf	___flmul@prod& (0+255),f,b
  8980  012D34  3790               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8981  012D36  3791               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8982  012D38  3792               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8983                           
  8984                           ; BSR set to: 0
  8985  012D3A  0100               	movlb	0	; () banked
  8986  012D3C  AF8D               	btfss	(___flmul@grs+3)& (0+255),7,b
  8987  012D3E  D002               	goto	l1481
  8988                           
  8989                           ; BSR set to: 0
  8990  012D40  0100               	movlb	0	; () banked
  8991  012D42  818F               	bsf	___flmul@prod& (0+255),0,b
  8992  012D44                     l1481:
  8993                           
  8994                           ; BSR set to: 0
  8995  012D44  0100               	movlb	0	; () banked
  8996  012D46  90D8               	bcf	status,0,c
  8997  012D48  378A               	rlcf	___flmul@grs& (0+255),f,b
  8998  012D4A  378B               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8999  012D4C  378C               	rlcf	(___flmul@grs+2)& (0+255),f,b
  9000  012D4E  378D               	rlcf	(___flmul@grs+3)& (0+255),f,b
  9001  012D50  0100               	movlb	0	; () banked
  9002  012D52  0793               	decf	___flmul@temp& (0+255),f,b
  9003  012D54  A0D8               	btfss	status,0,c
  9004  012D56  0794               	decf	(___flmul@temp+1)& (0+255),f,b
  9005  012D58                     l6850:
  9006                           
  9007                           ; BSR set to: 0
  9008  012D58  0100               	movlb	0	; () banked
  9009  012D5A  AF91               	btfss	(___flmul@prod+2)& (0+255),7,b
  9010  012D5C  D7E8               	goto	l6844
  9011                           
  9012                           ; BSR set to: 0
  9013                           
  9014                           ; BSR set to: 0
  9015  012D5E  0E00               	movlw	0
  9016  012D60  0100               	movlb	0	; () banked
  9017  012D62  6F89               	movwf	___flmul@aexp& (0+255),b
  9018                           
  9019                           ; BSR set to: 0
  9020  012D64  0100               	movlb	0	; () banked
  9021  012D66  AF8D               	btfss	(___flmul@grs+3)& (0+255),7,b
  9022  012D68  D024               	goto	l1483
  9023                           
  9024                           ; BSR set to: 0
  9025  012D6A  0EFF               	movlw	255
  9026  012D6C  0100               	movlb	0	; () banked
  9027  012D6E  158A               	andwf	___flmul@grs& (0+255),w,b
  9028  012D70  0100               	movlb	0	; () banked
  9029  012D72  6F84               	movwf	??___flmul& (0+255),b
  9030  012D74  0EFF               	movlw	255
  9031  012D76  0100               	movlb	0	; () banked
  9032  012D78  158B               	andwf	(___flmul@grs+1)& (0+255),w,b
  9033  012D7A  0100               	movlb	0	; () banked
  9034  012D7C  6F85               	movwf	(??___flmul+1)& (0+255),b
  9035  012D7E  0EFF               	movlw	255
  9036  012D80  0100               	movlb	0	; () banked
  9037  012D82  158C               	andwf	(___flmul@grs+2)& (0+255),w,b
  9038  012D84  0100               	movlb	0	; () banked
  9039  012D86  6F86               	movwf	(??___flmul+2)& (0+255),b
  9040  012D88  0E7F               	movlw	127
  9041  012D8A  0100               	movlb	0	; () banked
  9042  012D8C  158D               	andwf	(___flmul@grs+3)& (0+255),w,b
  9043  012D8E  0100               	movlb	0	; () banked
  9044  012D90  6F87               	movwf	(??___flmul+3)& (0+255),b
  9045  012D92  0100               	movlb	0	; () banked
  9046  012D94  5184               	movf	??___flmul& (0+255),w,b
  9047  012D96  0100               	movlb	0	; () banked
  9048  012D98  1185               	iorwf	(??___flmul+1)& (0+255),w,b
  9049  012D9A  0100               	movlb	0	; () banked
  9050  012D9C  1186               	iorwf	(??___flmul+2)& (0+255),w,b
  9051  012D9E  0100               	movlb	0	; () banked
  9052  012DA0  1187               	iorwf	(??___flmul+3)& (0+255),w,b
  9053  012DA2  A4D8               	btfss	status,2,c
  9054  012DA4  D003               	goto	l6860
  9055                           
  9056                           ; BSR set to: 0
  9057                           
  9058                           ; BSR set to: 0
  9059  012DA6  0100               	movlb	0	; () banked
  9060  012DA8  A18F               	btfss	___flmul@prod& (0+255),0,b
  9061  012DAA  D003               	goto	l1483
  9062  012DAC                     l6860:
  9063                           
  9064                           ; BSR set to: 0
  9065  012DAC  0E01               	movlw	1
  9066  012DAE  0100               	movlb	0	; () banked
  9067  012DB0  6F89               	movwf	___flmul@aexp& (0+255),b
  9068  012DB2                     l1483:
  9069                           
  9070                           ; BSR set to: 0
  9071  012DB2  0100               	movlb	0	; () banked
  9072  012DB4  5189               	movf	___flmul@aexp& (0+255),w,b
  9073  012DB6  0100               	movlb	0	; () banked
  9074  012DB8  B4D8               	btfsc	status,2,c
  9075  012DBA  D023               	goto	l6870
  9076                           
  9077                           ; BSR set to: 0
  9078  012DBC  0E01               	movlw	1
  9079  012DBE  0100               	movlb	0	; () banked
  9080  012DC0  278F               	addwf	___flmul@prod& (0+255),f,b
  9081  012DC2  0E00               	movlw	0
  9082  012DC4  2390               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9083  012DC6  2391               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9084  012DC8  2392               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9085                           
  9086                           ; BSR set to: 0
  9087  012DCA  0100               	movlb	0	; () banked
  9088  012DCC  A192               	btfss	(___flmul@prod+3)& (0+255),0,b
  9089  012DCE  D019               	goto	l6870
  9090                           
  9091                           ; BSR set to: 0
  9092  012DD0  C08F  F084         	movff	___flmul@prod,??___flmul
  9093  012DD4  C090  F085         	movff	___flmul@prod+1,??___flmul+1
  9094  012DD8  C091  F086         	movff	___flmul@prod+2,??___flmul+2
  9095  012DDC  C092  F087         	movff	___flmul@prod+3,??___flmul+3
  9096  012DE0  0100               	movlb	0	; () banked
  9097  012DE2  3587               	rlcf	(??___flmul+3)& (0+255),w,b
  9098  012DE4  3387               	rrcf	(??___flmul+3)& (0+255),f,b
  9099  012DE6  3386               	rrcf	(??___flmul+2)& (0+255),f,b
  9100  012DE8  3385               	rrcf	(??___flmul+1)& (0+255),f,b
  9101  012DEA  3384               	rrcf	??___flmul& (0+255),f,b
  9102  012DEC  C084  F08F         	movff	??___flmul,___flmul@prod
  9103  012DF0  C085  F090         	movff	??___flmul+1,___flmul@prod+1
  9104  012DF4  C086  F091         	movff	??___flmul+2,___flmul@prod+2
  9105  012DF8  C087  F092         	movff	??___flmul+3,___flmul@prod+3
  9106                           
  9107                           ; BSR set to: 0
  9108  012DFC  0100               	movlb	0	; () banked
  9109  012DFE  4B93               	infsnz	___flmul@temp& (0+255),f,b
  9110  012E00  2B94               	incf	(___flmul@temp+1)& (0+255),f,b
  9111  012E02                     l6870:
  9112                           
  9113                           ; BSR set to: 0
  9114  012E02  0100               	movlb	0	; () banked
  9115  012E04  BF94               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9116  012E06  D010               	goto	l6874
  9117  012E08  0100               	movlb	0	; () banked
  9118  012E0A  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  9119  012E0C  E104               	bnz	u8690
  9120  012E0E  0100               	movlb	0	; () banked
  9121  012E10  2993               	incf	___flmul@temp& (0+255),w,b
  9122  012E12  A0D8               	btfss	status,0,c
  9123  012E14  D009               	goto	l6874
  9124  012E16                     u8690:
  9125                           
  9126                           ; BSR set to: 0
  9127  012E16  0E00               	movlw	0
  9128  012E18  0100               	movlb	0	; () banked
  9129  012E1A  6F8F               	movwf	___flmul@prod& (0+255),b
  9130  012E1C  0E00               	movlw	0
  9131  012E1E  6F90               	movwf	(___flmul@prod+1)& (0+255),b
  9132  012E20  0E80               	movlw	128
  9133  012E22  6F91               	movwf	(___flmul@prod+2)& (0+255),b
  9134  012E24  0E7F               	movlw	127
  9135  012E26  D02B               	goto	L8
  9136  012E28                     l6874:
  9137                           
  9138                           ; BSR set to: 0
  9139  012E28  0100               	movlb	0	; () banked
  9140  012E2A  BF94               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9141  012E2C  D007               	goto	l6876
  9142  012E2E  0100               	movlb	0	; () banked
  9143  012E30  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  9144  012E32  E111               	bnz	l1491
  9145  012E34  0100               	movlb	0	; () banked
  9146  012E36  0593               	decf	___flmul@temp& (0+255),w,b
  9147  012E38  B0D8               	btfsc	status,0,c
  9148  012E3A  D00D               	goto	l1491
  9149  012E3C                     l6876:
  9150                           
  9151                           ; BSR set to: 0
  9152  012E3C  0E00               	movlw	0
  9153  012E3E  0100               	movlb	0	; () banked
  9154  012E40  6F8F               	movwf	___flmul@prod& (0+255),b
  9155  012E42  0E00               	movlw	0
  9156  012E44  6F90               	movwf	(___flmul@prod+1)& (0+255),b
  9157  012E46  0E00               	movlw	0
  9158  012E48  6F91               	movwf	(___flmul@prod+2)& (0+255),b
  9159  012E4A  0E00               	movlw	0
  9160  012E4C  6F92               	movwf	(___flmul@prod+3)& (0+255),b
  9161  012E4E  0E00               	movlw	0
  9162  012E50  0100               	movlb	0	; () banked
  9163  012E52  6F88               	movwf	___flmul@sign& (0+255),b
  9164  012E54  D015               	goto	l6886
  9165  012E56                     l1491:
  9166                           
  9167                           ; BSR set to: 0
  9168  012E56  C093  F08E         	movff	___flmul@temp,___flmul@bexp
  9169                           
  9170                           ; BSR set to: 0
  9171  012E5A  0EFF               	movlw	255
  9172  012E5C  0100               	movlb	0	; () banked
  9173  012E5E  178F               	andwf	___flmul@prod& (0+255),f,b
  9174  012E60  0EFF               	movlw	255
  9175  012E62  1790               	andwf	(___flmul@prod+1)& (0+255),f,b
  9176  012E64  0E7F               	movlw	127
  9177  012E66  1791               	andwf	(___flmul@prod+2)& (0+255),f,b
  9178  012E68  0E00               	movlw	0
  9179  012E6A  1792               	andwf	(___flmul@prod+3)& (0+255),f,b
  9180                           
  9181                           ; BSR set to: 0
  9182  012E6C  0100               	movlb	0	; () banked
  9183  012E6E  A18E               	btfss	___flmul@bexp& (0+255),0,b
  9184  012E70  D002               	goto	l6884
  9185                           
  9186                           ; BSR set to: 0
  9187  012E72  0100               	movlb	0	; () banked
  9188  012E74  8F91               	bsf	(___flmul@prod+2)& (0+255),7,b
  9189  012E76                     l6884:
  9190                           
  9191                           ; BSR set to: 0
  9192  012E76  0100               	movlb	0	; () banked
  9193  012E78  90D8               	bcf	status,0,c
  9194  012E7A  318E               	rrcf	___flmul@bexp& (0+255),w,b
  9195  012E7C  0100               	movlb	0	; () banked
  9196  012E7E                     L8:
  9197  012E7E  6F92               	movwf	(___flmul@prod+3)& (0+255),b
  9198  012E80                     l6886:
  9199                           
  9200                           ; BSR set to: 0
  9201  012E80  0100               	movlb	0	; () banked
  9202  012E82  5188               	movf	___flmul@sign& (0+255),w,b
  9203  012E84  0100               	movlb	0	; () banked
  9204  012E86  1392               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9205                           
  9206                           ; BSR set to: 0
  9207  012E88  C08F  F07C         	movff	___flmul@prod,?___flmul
  9208  012E8C  C090  F07D         	movff	___flmul@prod+1,?___flmul+1
  9209  012E90  C091  F07E         	movff	___flmul@prod+2,?___flmul+2
  9210  012E94  C092  F07F         	movff	___flmul@prod+3,?___flmul+3
  9211  012E98  0012               	return	
  9212  012E9A                     __end_of___flmul:
  9213                           	opt stack 0
  9214                           tblptru	equ	0xFF8
  9215                           tblptrh	equ	0xFF7
  9216                           tblptrl	equ	0xFF6
  9217                           tablat	equ	0xFF5
  9218                           prodh	equ	0xFF4
  9219                           prodl	equ	0xFF3
  9220                           intcon	equ	0xFF2
  9221                           postinc0	equ	0xFEE
  9222                           wreg	equ	0xFE8
  9223                           indf2	equ	0xFDF
  9224                           postinc2	equ	0xFDE
  9225                           fsr2h	equ	0xFDA
  9226                           fsr2l	equ	0xFD9
  9227                           status	equ	0xFD8
  9228                           
  9229 ;; *************** function ___awmod *****************
  9230 ;; Defined at:
  9231 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  9232 ;; Parameters:    Size  Location     Type
  9233 ;;  dividend        2   14[BANK0 ] int 
  9234 ;;  divisor         2   16[BANK0 ] int 
  9235 ;; Auto vars:     Size  Location     Type
  9236 ;;  sign            1   19[BANK0 ] unsigned char 
  9237 ;;  counter         1   18[BANK0 ] unsigned char 
  9238 ;; Return value:  Size  Location     Type
  9239 ;;                  2   14[BANK0 ] int 
  9240 ;; Registers used:
  9241 ;;		wreg, status,2, status,0
  9242 ;; Tracked objects:
  9243 ;;		On entry : 0/0
  9244 ;;		On exit  : 0/0
  9245 ;;		Unchanged: 0/0
  9246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9247 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9248 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9250 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9251 ;;Total ram usage:        6 bytes
  9252 ;; Hardware stack levels used:    1
  9253 ;; Hardware stack levels required when called:    3
  9254 ;; This function calls:
  9255 ;;		Nothing
  9256 ;; This function is called by:
  9257 ;;		_fround
  9258 ;;		_scale
  9259 ;; This function uses a non-reentrant model
  9260 ;;
  9261                           
  9262                           	psect	text17
  9263  014DEA                     __ptext17:
  9264                           	opt stack 0
  9265  014DEA                     ___awmod:
  9266                           	opt stack 24
  9267                           
  9268                           ; BSR set to: 0
  9269                           ;incstack = 0
  9270  014DEA  0E00               	movlw	0
  9271  014DEC  0100               	movlb	0	; () banked
  9272  014DEE  6F73               	movwf	___awmod@sign& (0+255),b
  9273                           
  9274                           ; BSR set to: 0
  9275  014DF0  0100               	movlb	0	; () banked
  9276  014DF2  AF6F               	btfss	(___awmod@dividend+1)& (0+255),7,b
  9277  014DF4  D008               	goto	l6944
  9278                           
  9279                           ; BSR set to: 0
  9280  014DF6  0100               	movlb	0	; () banked
  9281  014DF8  6D6E               	negf	___awmod@dividend& (0+255),b
  9282  014DFA  1F6F               	comf	(___awmod@dividend+1)& (0+255),f,b
  9283  014DFC  B0D8               	btfsc	status,0,c
  9284  014DFE  2B6F               	incf	(___awmod@dividend+1)& (0+255),f,b
  9285                           
  9286                           ; BSR set to: 0
  9287  014E00  0E01               	movlw	1
  9288  014E02  0100               	movlb	0	; () banked
  9289  014E04  6F73               	movwf	___awmod@sign& (0+255),b
  9290  014E06                     l6944:
  9291                           
  9292                           ; BSR set to: 0
  9293  014E06  0100               	movlb	0	; () banked
  9294  014E08  AF71               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9295  014E0A  D005               	goto	l6948
  9296                           
  9297                           ; BSR set to: 0
  9298  014E0C  0100               	movlb	0	; () banked
  9299  014E0E  6D70               	negf	___awmod@divisor& (0+255),b
  9300  014E10  1F71               	comf	(___awmod@divisor+1)& (0+255),f,b
  9301  014E12  B0D8               	btfsc	status,0,c
  9302  014E14  2B71               	incf	(___awmod@divisor+1)& (0+255),f,b
  9303  014E16                     l6948:
  9304                           
  9305                           ; BSR set to: 0
  9306  014E16  0100               	movlb	0	; () banked
  9307  014E18  5170               	movf	___awmod@divisor& (0+255),w,b
  9308  014E1A  0100               	movlb	0	; () banked
  9309  014E1C  1171               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  9310  014E1E  B4D8               	btfsc	status,2,c
  9311  014E20  D026               	goto	l6964
  9312                           
  9313                           ; BSR set to: 0
  9314  014E22  0E01               	movlw	1
  9315  014E24  0100               	movlb	0	; () banked
  9316  014E26  6F72               	movwf	___awmod@counter& (0+255),b
  9317  014E28  D006               	goto	l6954
  9318  014E2A                     l6952:
  9319                           
  9320                           ; BSR set to: 0
  9321  014E2A  0100               	movlb	0	; () banked
  9322  014E2C  90D8               	bcf	status,0,c
  9323  014E2E  3770               	rlcf	___awmod@divisor& (0+255),f,b
  9324  014E30  3771               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  9325  014E32  0100               	movlb	0	; () banked
  9326  014E34  2B72               	incf	___awmod@counter& (0+255),f,b
  9327  014E36                     l6954:
  9328                           
  9329                           ; BSR set to: 0
  9330  014E36  0100               	movlb	0	; () banked
  9331  014E38  AF71               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9332  014E3A  D7F7               	goto	l6952
  9333  014E3C                     l6956:
  9334                           
  9335                           ; BSR set to: 0
  9336  014E3C  0100               	movlb	0	; () banked
  9337  014E3E  5170               	movf	___awmod@divisor& (0+255),w,b
  9338  014E40  0100               	movlb	0	; () banked
  9339  014E42  5D6E               	subwf	___awmod@dividend& (0+255),w,b
  9340  014E44  0100               	movlb	0	; () banked
  9341  014E46  5171               	movf	(___awmod@divisor+1)& (0+255),w,b
  9342  014E48  0100               	movlb	0	; () banked
  9343  014E4A  596F               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  9344  014E4C  A0D8               	btfss	status,0,c
  9345  014E4E  D008               	goto	l6960
  9346                           
  9347                           ; BSR set to: 0
  9348  014E50  0100               	movlb	0	; () banked
  9349  014E52  5170               	movf	___awmod@divisor& (0+255),w,b
  9350  014E54  0100               	movlb	0	; () banked
  9351  014E56  5F6E               	subwf	___awmod@dividend& (0+255),f,b
  9352  014E58  0100               	movlb	0	; () banked
  9353  014E5A  5171               	movf	(___awmod@divisor+1)& (0+255),w,b
  9354  014E5C  0100               	movlb	0	; () banked
  9355  014E5E  5B6F               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  9356  014E60                     l6960:
  9357                           
  9358                           ; BSR set to: 0
  9359  014E60  0100               	movlb	0	; () banked
  9360  014E62  90D8               	bcf	status,0,c
  9361  014E64  3371               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  9362  014E66  3370               	rrcf	___awmod@divisor& (0+255),f,b
  9363                           
  9364                           ; BSR set to: 0
  9365  014E68  0100               	movlb	0	; () banked
  9366  014E6A  2F72               	decfsz	___awmod@counter& (0+255),f,b
  9367  014E6C  D7E7               	goto	l6956
  9368  014E6E                     l6964:
  9369                           
  9370                           ; BSR set to: 0
  9371  014E6E  0100               	movlb	0	; () banked
  9372  014E70  5173               	movf	___awmod@sign& (0+255),w,b
  9373  014E72  0100               	movlb	0	; () banked
  9374  014E74  B4D8               	btfsc	status,2,c
  9375  014E76  D005               	goto	l6968
  9376                           
  9377                           ; BSR set to: 0
  9378  014E78  0100               	movlb	0	; () banked
  9379  014E7A  6D6E               	negf	___awmod@dividend& (0+255),b
  9380  014E7C  1F6F               	comf	(___awmod@dividend+1)& (0+255),f,b
  9381  014E7E  B0D8               	btfsc	status,0,c
  9382  014E80  2B6F               	incf	(___awmod@dividend+1)& (0+255),f,b
  9383  014E82                     l6968:
  9384                           
  9385                           ; BSR set to: 0
  9386  014E82  C06E  F06E         	movff	___awmod@dividend,?___awmod
  9387  014E86  C06F  F06F         	movff	___awmod@dividend+1,?___awmod+1
  9388  014E8A  0012               	return	
  9389  014E8C                     __end_of___awmod:
  9390                           	opt stack 0
  9391                           tblptru	equ	0xFF8
  9392                           tblptrh	equ	0xFF7
  9393                           tblptrl	equ	0xFF6
  9394                           tablat	equ	0xFF5
  9395                           prodh	equ	0xFF4
  9396                           prodl	equ	0xFF3
  9397                           intcon	equ	0xFF2
  9398                           postinc0	equ	0xFEE
  9399                           wreg	equ	0xFE8
  9400                           indf2	equ	0xFDF
  9401                           postinc2	equ	0xFDE
  9402                           fsr2h	equ	0xFDA
  9403                           fsr2l	equ	0xFD9
  9404                           status	equ	0xFD8
  9405                           
  9406 ;; *************** function ___awdiv *****************
  9407 ;; Defined at:
  9408 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  9409 ;; Parameters:    Size  Location     Type
  9410 ;;  dividend        2   20[BANK0 ] int 
  9411 ;;  divisor         2   22[BANK0 ] int 
  9412 ;; Auto vars:     Size  Location     Type
  9413 ;;  quotient        2   26[BANK0 ] int 
  9414 ;;  sign            1   25[BANK0 ] unsigned char 
  9415 ;;  counter         1   24[BANK0 ] unsigned char 
  9416 ;; Return value:  Size  Location     Type
  9417 ;;                  2   20[BANK0 ] int 
  9418 ;; Registers used:
  9419 ;;		wreg, status,2, status,0
  9420 ;; Tracked objects:
  9421 ;;		On entry : 0/0
  9422 ;;		On exit  : 0/0
  9423 ;;		Unchanged: 0/0
  9424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9425 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9426 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9428 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9429 ;;Total ram usage:        8 bytes
  9430 ;; Hardware stack levels used:    1
  9431 ;; Hardware stack levels required when called:    3
  9432 ;; This function calls:
  9433 ;;		Nothing
  9434 ;; This function is called by:
  9435 ;;		_fround
  9436 ;;		_scale
  9437 ;;		_sprintf
  9438 ;; This function uses a non-reentrant model
  9439 ;;
  9440                           
  9441                           	psect	text18
  9442  014C70                     __ptext18:
  9443                           	opt stack 0
  9444  014C70                     ___awdiv:
  9445                           	opt stack 24
  9446                           
  9447                           ; BSR set to: 0
  9448                           ;incstack = 0
  9449  014C70  0E00               	movlw	0
  9450  014C72  0100               	movlb	0	; () banked
  9451  014C74  6F79               	movwf	___awdiv@sign& (0+255),b
  9452                           
  9453                           ; BSR set to: 0
  9454  014C76  0100               	movlb	0	; () banked
  9455  014C78  AF77               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9456  014C7A  D008               	goto	l6900
  9457                           
  9458                           ; BSR set to: 0
  9459  014C7C  0100               	movlb	0	; () banked
  9460  014C7E  6D76               	negf	___awdiv@divisor& (0+255),b
  9461  014C80  1F77               	comf	(___awdiv@divisor+1)& (0+255),f,b
  9462  014C82  B0D8               	btfsc	status,0,c
  9463  014C84  2B77               	incf	(___awdiv@divisor+1)& (0+255),f,b
  9464                           
  9465                           ; BSR set to: 0
  9466  014C86  0E01               	movlw	1
  9467  014C88  0100               	movlb	0	; () banked
  9468  014C8A  6F79               	movwf	___awdiv@sign& (0+255),b
  9469  014C8C                     l6900:
  9470                           
  9471                           ; BSR set to: 0
  9472  014C8C  0100               	movlb	0	; () banked
  9473  014C8E  AF75               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  9474  014C90  D008               	goto	l6906
  9475                           
  9476                           ; BSR set to: 0
  9477  014C92  0100               	movlb	0	; () banked
  9478  014C94  6D74               	negf	___awdiv@dividend& (0+255),b
  9479  014C96  1F75               	comf	(___awdiv@dividend+1)& (0+255),f,b
  9480  014C98  B0D8               	btfsc	status,0,c
  9481  014C9A  2B75               	incf	(___awdiv@dividend+1)& (0+255),f,b
  9482                           
  9483                           ; BSR set to: 0
  9484  014C9C  0E01               	movlw	1
  9485  014C9E  0100               	movlb	0	; () banked
  9486  014CA0  1B79               	xorwf	___awdiv@sign& (0+255),f,b
  9487  014CA2                     l6906:
  9488                           
  9489                           ; BSR set to: 0
  9490  014CA2  0E00               	movlw	0
  9491  014CA4  0100               	movlb	0	; () banked
  9492  014CA6  6F7B               	movwf	(___awdiv@quotient+1)& (0+255),b
  9493  014CA8  0E00               	movlw	0
  9494  014CAA  6F7A               	movwf	___awdiv@quotient& (0+255),b
  9495                           
  9496                           ; BSR set to: 0
  9497  014CAC  0100               	movlb	0	; () banked
  9498  014CAE  5176               	movf	___awdiv@divisor& (0+255),w,b
  9499  014CB0  0100               	movlb	0	; () banked
  9500  014CB2  1177               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  9501  014CB4  B4D8               	btfsc	status,2,c
  9502  014CB6  D02C               	goto	l6928
  9503                           
  9504                           ; BSR set to: 0
  9505  014CB8  0E01               	movlw	1
  9506  014CBA  0100               	movlb	0	; () banked
  9507  014CBC  6F78               	movwf	___awdiv@counter& (0+255),b
  9508  014CBE  D006               	goto	l6914
  9509  014CC0                     l6912:
  9510                           
  9511                           ; BSR set to: 0
  9512  014CC0  0100               	movlb	0	; () banked
  9513  014CC2  90D8               	bcf	status,0,c
  9514  014CC4  3776               	rlcf	___awdiv@divisor& (0+255),f,b
  9515  014CC6  3777               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  9516  014CC8  0100               	movlb	0	; () banked
  9517  014CCA  2B78               	incf	___awdiv@counter& (0+255),f,b
  9518  014CCC                     l6914:
  9519                           
  9520                           ; BSR set to: 0
  9521  014CCC  0100               	movlb	0	; () banked
  9522  014CCE  AF77               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9523  014CD0  D7F7               	goto	l6912
  9524  014CD2                     l6916:
  9525                           
  9526                           ; BSR set to: 0
  9527  014CD2  0100               	movlb	0	; () banked
  9528  014CD4  90D8               	bcf	status,0,c
  9529  014CD6  377A               	rlcf	___awdiv@quotient& (0+255),f,b
  9530  014CD8  377B               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  9531                           
  9532                           ; BSR set to: 0
  9533  014CDA  0100               	movlb	0	; () banked
  9534  014CDC  5176               	movf	___awdiv@divisor& (0+255),w,b
  9535  014CDE  0100               	movlb	0	; () banked
  9536  014CE0  5D74               	subwf	___awdiv@dividend& (0+255),w,b
  9537  014CE2  0100               	movlb	0	; () banked
  9538  014CE4  5177               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9539  014CE6  0100               	movlb	0	; () banked
  9540  014CE8  5975               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  9541  014CEA  A0D8               	btfss	status,0,c
  9542  014CEC  D00A               	goto	l6924
  9543                           
  9544                           ; BSR set to: 0
  9545  014CEE  0100               	movlb	0	; () banked
  9546  014CF0  5176               	movf	___awdiv@divisor& (0+255),w,b
  9547  014CF2  0100               	movlb	0	; () banked
  9548  014CF4  5F74               	subwf	___awdiv@dividend& (0+255),f,b
  9549  014CF6  0100               	movlb	0	; () banked
  9550  014CF8  5177               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9551  014CFA  0100               	movlb	0	; () banked
  9552  014CFC  5B75               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  9553                           
  9554                           ; BSR set to: 0
  9555  014CFE  0100               	movlb	0	; () banked
  9556  014D00  817A               	bsf	___awdiv@quotient& (0+255),0,b
  9557  014D02                     l6924:
  9558                           
  9559                           ; BSR set to: 0
  9560  014D02  0100               	movlb	0	; () banked
  9561  014D04  90D8               	bcf	status,0,c
  9562  014D06  3377               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  9563  014D08  3376               	rrcf	___awdiv@divisor& (0+255),f,b
  9564                           
  9565                           ; BSR set to: 0
  9566  014D0A  0100               	movlb	0	; () banked
  9567  014D0C  2F78               	decfsz	___awdiv@counter& (0+255),f,b
  9568  014D0E  D7E1               	goto	l6916
  9569  014D10                     l6928:
  9570                           
  9571                           ; BSR set to: 0
  9572  014D10  0100               	movlb	0	; () banked
  9573  014D12  5179               	movf	___awdiv@sign& (0+255),w,b
  9574  014D14  0100               	movlb	0	; () banked
  9575  014D16  B4D8               	btfsc	status,2,c
  9576  014D18  D005               	goto	l6932
  9577                           
  9578                           ; BSR set to: 0
  9579  014D1A  0100               	movlb	0	; () banked
  9580  014D1C  6D7A               	negf	___awdiv@quotient& (0+255),b
  9581  014D1E  1F7B               	comf	(___awdiv@quotient+1)& (0+255),f,b
  9582  014D20  B0D8               	btfsc	status,0,c
  9583  014D22  2B7B               	incf	(___awdiv@quotient+1)& (0+255),f,b
  9584  014D24                     l6932:
  9585                           
  9586                           ; BSR set to: 0
  9587  014D24  C07A  F074         	movff	___awdiv@quotient,?___awdiv
  9588  014D28  C07B  F075         	movff	___awdiv@quotient+1,?___awdiv+1
  9589  014D2C  0012               	return	
  9590  014D2E                     __end_of___awdiv:
  9591                           	opt stack 0
  9592                           tblptru	equ	0xFF8
  9593                           tblptrh	equ	0xFF7
  9594                           tblptrl	equ	0xFF6
  9595                           tablat	equ	0xFF5
  9596                           prodh	equ	0xFF4
  9597                           prodl	equ	0xFF3
  9598                           intcon	equ	0xFF2
  9599                           postinc0	equ	0xFEE
  9600                           wreg	equ	0xFE8
  9601                           indf2	equ	0xFDF
  9602                           postinc2	equ	0xFDE
  9603                           fsr2h	equ	0xFDA
  9604                           fsr2l	equ	0xFD9
  9605                           status	equ	0xFD8
  9606                           
  9607 ;; *************** function __tdiv_to_l_ *****************
  9608 ;; Defined at:
  9609 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
  9610 ;; Parameters:    Size  Location     Type
  9611 ;;  f1              4   14[BANK0 ] float 
  9612 ;;  f2              4   18[BANK0 ] float 
  9613 ;; Auto vars:     Size  Location     Type
  9614 ;;  quot            4   25[BANK0 ] unsigned long 
  9615 ;;  exp1            1   30[BANK0 ] unsigned char 
  9616 ;;  cntr            1   29[BANK0 ] unsigned char 
  9617 ;; Return value:  Size  Location     Type
  9618 ;;                  4   14[BANK0 ] unsigned long 
  9619 ;; Registers used:
  9620 ;;		wreg, status,2, status,0
  9621 ;; Tracked objects:
  9622 ;;		On entry : 0/0
  9623 ;;		On exit  : 0/0
  9624 ;;		Unchanged: 0/0
  9625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9626 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9627 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9628 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9629 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9630 ;;Total ram usage:       17 bytes
  9631 ;; Hardware stack levels used:    1
  9632 ;; Hardware stack levels required when called:    3
  9633 ;; This function calls:
  9634 ;;		Nothing
  9635 ;; This function is called by:
  9636 ;;		_sprintf
  9637 ;; This function uses a non-reentrant model
  9638 ;;
  9639                           
  9640                           	psect	text19
  9641  014078                     __ptext19:
  9642                           	opt stack 0
  9643  014078                     __tdiv_to_l_:
  9644                           	opt stack 25
  9645                           
  9646                           ; BSR set to: 0
  9647                           ;incstack = 0
  9648  014078  C070  F076         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  9649  01407C  0100               	movlb	0	; () banked
  9650  01407E  6B77               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9651  014080  6B78               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9652  014082  0100               	movlb	0	; () banked
  9653  014084  356F               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  9654  014086  0100               	movlb	0	; () banked
  9655  014088  3776               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9656  01408A  E301               	bnc	u9901
  9657  01408C  8177               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9658  01408E                     u9901:
  9659  01408E  0100               	movlb	0	; () banked
  9660  014090  5176               	movf	??__tdiv_to_l_& (0+255),w,b
  9661  014092  0100               	movlb	0	; () banked
  9662  014094  6F7E               	movwf	__tdiv_to_l_@exp1& (0+255),b
  9663  014096  0100               	movlb	0	; () banked
  9664  014098  517E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9665  01409A  A4D8               	btfss	status,2,c
  9666  01409C  D00A               	goto	l7486
  9667                           
  9668                           ; BSR set to: 0
  9669  01409E  0E00               	movlw	0
  9670  0140A0  0100               	movlb	0	; () banked
  9671  0140A2  6F6E               	movwf	?__tdiv_to_l_& (0+255),b
  9672  0140A4  0E00               	movlw	0
  9673  0140A6  6F6F               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9674  0140A8  0E00               	movlw	0
  9675  0140AA  6F70               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9676  0140AC  0E00               	movlw	0
  9677  0140AE  6F71               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9678                           
  9679                           ; BSR set to: 0
  9680  0140B0  0012               	return	
  9681  0140B2                     l7486:
  9682                           
  9683                           ; BSR set to: 0
  9684  0140B2  C074  F076         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  9685  0140B6  0100               	movlb	0	; () banked
  9686  0140B8  6B77               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9687  0140BA  6B78               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9688  0140BC  0100               	movlb	0	; () banked
  9689  0140BE  3573               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9690  0140C0  0100               	movlb	0	; () banked
  9691  0140C2  3776               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9692  0140C4  E301               	bnc	u9921
  9693  0140C6  8177               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9694  0140C8                     u9921:
  9695  0140C8  0100               	movlb	0	; () banked
  9696  0140CA  5176               	movf	??__tdiv_to_l_& (0+255),w,b
  9697  0140CC  0100               	movlb	0	; () banked
  9698  0140CE  6F7D               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9699  0140D0  0100               	movlb	0	; () banked
  9700  0140D2  517D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9701  0140D4  A4D8               	btfss	status,2,c
  9702  0140D6  D00A               	goto	l7492
  9703                           
  9704                           ; BSR set to: 0
  9705  0140D8  0E00               	movlw	0
  9706  0140DA  0100               	movlb	0	; () banked
  9707  0140DC  6F6E               	movwf	?__tdiv_to_l_& (0+255),b
  9708  0140DE  0E00               	movlw	0
  9709  0140E0  6F6F               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9710  0140E2  0E00               	movlw	0
  9711  0140E4  6F70               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9712  0140E6  0E00               	movlw	0
  9713  0140E8  6F71               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9714                           
  9715                           ; BSR set to: 0
  9716  0140EA  0012               	return	
  9717  0140EC                     l7492:
  9718                           
  9719                           ; BSR set to: 0
  9720  0140EC  0100               	movlb	0	; () banked
  9721  0140EE  8F6F               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  9722                           
  9723                           ; BSR set to: 0
  9724  0140F0  0EFF               	movlw	255
  9725  0140F2  0100               	movlb	0	; () banked
  9726  0140F4  176E               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  9727  0140F6  0EFF               	movlw	255
  9728  0140F8  0100               	movlb	0	; () banked
  9729  0140FA  176F               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9730  0140FC  0E00               	movlw	0
  9731  0140FE  0100               	movlb	0	; () banked
  9732  014100  1770               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9733  014102  0100               	movlb	0	; () banked
  9734  014104  8F73               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  9735                           
  9736                           ; BSR set to: 0
  9737  014106  0EFF               	movlw	255
  9738  014108  0100               	movlb	0	; () banked
  9739  01410A  1772               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  9740  01410C  0EFF               	movlw	255
  9741  01410E  0100               	movlb	0	; () banked
  9742  014110  1773               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  9743  014112  0E00               	movlw	0
  9744  014114  0100               	movlb	0	; () banked
  9745  014116  1774               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  9746                           
  9747                           ; BSR set to: 0
  9748  014118  0E00               	movlw	0
  9749  01411A  0100               	movlb	0	; () banked
  9750  01411C  6F79               	movwf	__tdiv_to_l_@quot& (0+255),b
  9751  01411E  0E00               	movlw	0
  9752  014120  6F7A               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  9753  014122  0E00               	movlw	0
  9754  014124  6F7B               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  9755  014126  0E00               	movlw	0
  9756  014128  6F7C               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  9757                           
  9758                           ; BSR set to: 0
  9759  01412A  0E7F               	movlw	127
  9760  01412C  0100               	movlb	0	; () banked
  9761  01412E  5F7E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  9762                           
  9763                           ; BSR set to: 0
  9764  014130  0100               	movlb	0	; () banked
  9765  014132  517D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9766  014134  0F98               	addlw	152
  9767  014136  0100               	movlb	0	; () banked
  9768  014138  5F7E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  9769                           
  9770                           ; BSR set to: 0
  9771  01413A  0E18               	movlw	24
  9772  01413C  0100               	movlb	0	; () banked
  9773  01413E  6F7D               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9774  014140                     l1198:
  9775                           
  9776                           ; BSR set to: 0
  9777  014140  0100               	movlb	0	; () banked
  9778  014142  90D8               	bcf	status,0,c
  9779  014144  3779               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  9780  014146  377A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9781  014148  377B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9782  01414A  377C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9783                           
  9784                           ; BSR set to: 0
  9785  01414C  0100               	movlb	0	; () banked
  9786  01414E  5172               	movf	__tdiv_to_l_@f2& (0+255),w,b
  9787  014150  0100               	movlb	0	; () banked
  9788  014152  5D6E               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  9789  014154  0100               	movlb	0	; () banked
  9790  014156  5173               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9791  014158  0100               	movlb	0	; () banked
  9792  01415A  596F               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  9793  01415C  0100               	movlb	0	; () banked
  9794  01415E  5174               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  9795  014160  0100               	movlb	0	; () banked
  9796  014162  5970               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  9797  014164  A0D8               	btfss	status,0,c
  9798  014166  D00E               	goto	l1199
  9799                           
  9800                           ; BSR set to: 0
  9801  014168  0100               	movlb	0	; () banked
  9802  01416A  5172               	movf	__tdiv_to_l_@f2& (0+255),w,b
  9803  01416C  0100               	movlb	0	; () banked
  9804  01416E  5F6E               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  9805  014170  0100               	movlb	0	; () banked
  9806  014172  5173               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9807  014174  0100               	movlb	0	; () banked
  9808  014176  5B6F               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9809  014178  0100               	movlb	0	; () banked
  9810  01417A  5174               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  9811  01417C  0100               	movlb	0	; () banked
  9812  01417E  5B70               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9813                           
  9814                           ; BSR set to: 0
  9815  014180  0100               	movlb	0	; () banked
  9816  014182  8179               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  9817  014184                     l1199:
  9818                           
  9819                           ; BSR set to: 0
  9820  014184  0100               	movlb	0	; () banked
  9821  014186  90D8               	bcf	status,0,c
  9822  014188  376E               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  9823  01418A  376F               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9824  01418C  3770               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9825                           
  9826                           ; BSR set to: 0
  9827  01418E  0100               	movlb	0	; () banked
  9828  014190  2F7D               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  9829  014192  D7D6               	goto	l1198
  9830                           
  9831                           ; BSR set to: 0
  9832                           
  9833                           ; BSR set to: 0
  9834  014194  0100               	movlb	0	; () banked
  9835  014196  AF7E               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  9836  014198  D01A               	goto	l7526
  9837                           
  9838                           ; BSR set to: 0
  9839  01419A  0100               	movlb	0	; () banked
  9840  01419C  517E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9841  01419E  0A80               	xorlw	128
  9842  0141A0  0F97               	addlw	151
  9843  0141A2  B0D8               	btfsc	status,0,c
  9844  0141A4  D00A               	goto	l7522
  9845                           
  9846                           ; BSR set to: 0
  9847  0141A6  0E00               	movlw	0
  9848  0141A8  0100               	movlb	0	; () banked
  9849  0141AA  6F6E               	movwf	?__tdiv_to_l_& (0+255),b
  9850  0141AC  0E00               	movlw	0
  9851  0141AE  6F6F               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9852  0141B0  0E00               	movlw	0
  9853  0141B2  6F70               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9854  0141B4  0E00               	movlw	0
  9855  0141B6  6F71               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9856                           
  9857                           ; BSR set to: 0
  9858  0141B8  0012               	return	
  9859  0141BA                     l7522:
  9860                           
  9861                           ; BSR set to: 0
  9862  0141BA  0100               	movlb	0	; () banked
  9863  0141BC  90D8               	bcf	status,0,c
  9864  0141BE  337C               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9865  0141C0  337B               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9866  0141C2  337A               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9867  0141C4  3379               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  9868                           
  9869                           ; BSR set to: 0
  9870  0141C6  0100               	movlb	0	; () banked
  9871  0141C8  3F7E               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  9872  0141CA  D7F7               	goto	l7522
  9873                           
  9874                           ; BSR set to: 0
  9875  0141CC  D01B               	goto	l1205
  9876  0141CE                     l7526:
  9877                           
  9878                           ; BSR set to: 0
  9879  0141CE  0E17               	movlw	23
  9880  0141D0  0100               	movlb	0	; () banked
  9881  0141D2  657E               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  9882  0141D4  D012               	goto	l7534
  9883                           
  9884                           ; BSR set to: 0
  9885  0141D6  0E00               	movlw	0
  9886  0141D8  0100               	movlb	0	; () banked
  9887  0141DA  6F6E               	movwf	?__tdiv_to_l_& (0+255),b
  9888  0141DC  0E00               	movlw	0
  9889  0141DE  6F6F               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9890  0141E0  0E00               	movlw	0
  9891  0141E2  6F70               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9892  0141E4  0E00               	movlw	0
  9893  0141E6  6F71               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9894                           
  9895                           ; BSR set to: 0
  9896  0141E8  0012               	return	
  9897  0141EA                     l7532:
  9898                           
  9899                           ; BSR set to: 0
  9900  0141EA  0100               	movlb	0	; () banked
  9901  0141EC  90D8               	bcf	status,0,c
  9902  0141EE  3779               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  9903  0141F0  377A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9904  0141F2  377B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9905  0141F4  377C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9906  0141F6  0100               	movlb	0	; () banked
  9907  0141F8  077E               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  9908  0141FA                     l7534:
  9909                           
  9910                           ; BSR set to: 0
  9911  0141FA  0100               	movlb	0	; () banked
  9912  0141FC  517E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9913  0141FE  0100               	movlb	0	; () banked
  9914  014200  A4D8               	btfss	status,2,c
  9915  014202  D7F3               	goto	l7532
  9916  014204                     l1205:
  9917                           
  9918                           ; BSR set to: 0
  9919  014204  C079  F06E         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  9920  014208  C07A  F06F         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  9921  01420C  C07B  F070         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  9922  014210  C07C  F071         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  9923                           
  9924                           ; BSR set to: 0
  9925  014214  0012               	return		;funcret
  9926  014216                     __end_of__tdiv_to_l_:
  9927                           	opt stack 0
  9928                           tblptru	equ	0xFF8
  9929                           tblptrh	equ	0xFF7
  9930                           tblptrl	equ	0xFF6
  9931                           tablat	equ	0xFF5
  9932                           prodh	equ	0xFF4
  9933                           prodl	equ	0xFF3
  9934                           intcon	equ	0xFF2
  9935                           postinc0	equ	0xFEE
  9936                           wreg	equ	0xFE8
  9937                           indf2	equ	0xFDF
  9938                           postinc2	equ	0xFDE
  9939                           fsr2h	equ	0xFDA
  9940                           fsr2l	equ	0xFD9
  9941                           status	equ	0xFD8
  9942                           
  9943 ;; *************** function __div_to_l_ *****************
  9944 ;; Defined at:
  9945 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
  9946 ;; Parameters:    Size  Location     Type
  9947 ;;  f1              4   14[BANK0 ] unsigned long 
  9948 ;;  f2              4   18[BANK0 ] unsigned long 
  9949 ;; Auto vars:     Size  Location     Type
  9950 ;;  quot            4   22[BANK0 ] unsigned long 
  9951 ;;  exp1            1   27[BANK0 ] unsigned char 
  9952 ;;  cntr            1   26[BANK0 ] unsigned char 
  9953 ;; Return value:  Size  Location     Type
  9954 ;;                  4   14[BANK0 ] unsigned long 
  9955 ;; Registers used:
  9956 ;;		wreg, status,2, status,0
  9957 ;; Tracked objects:
  9958 ;;		On entry : 0/0
  9959 ;;		On exit  : 0/0
  9960 ;;		Unchanged: 0/0
  9961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9962 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9963 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9965 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9966 ;;Total ram usage:       14 bytes
  9967 ;; Hardware stack levels used:    1
  9968 ;; Hardware stack levels required when called:    3
  9969 ;; This function calls:
  9970 ;;		Nothing
  9971 ;; This function is called by:
  9972 ;;		_sprintf
  9973 ;; This function uses a non-reentrant model
  9974 ;;
  9975                           
  9976                           	psect	text20
  9977  0143A6                     __ptext20:
  9978                           	opt stack 0
  9979  0143A6                     __div_to_l_:
  9980                           	opt stack 25
  9981                           
  9982                           ; BSR set to: 0
  9983                           ;incstack = 0
  9984  0143A6  0100               	movlb	0	; () banked
  9985  0143A8  3570               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  9986  0143AA  3571               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  9987  0143AC  0100               	movlb	0	; () banked
  9988  0143AE  6F7B               	movwf	__div_to_l_@exp1& (0+255),b
  9989  0143B0  0100               	movlb	0	; () banked
  9990  0143B2  517B               	movf	__div_to_l_@exp1& (0+255),w,b
  9991  0143B4  A4D8               	btfss	status,2,c
  9992  0143B6  D00A               	goto	l7542
  9993                           
  9994                           ; BSR set to: 0
  9995  0143B8  0E00               	movlw	0
  9996  0143BA  0100               	movlb	0	; () banked
  9997  0143BC  6F6E               	movwf	?__div_to_l_& (0+255),b
  9998  0143BE  0E00               	movlw	0
  9999  0143C0  6F6F               	movwf	(?__div_to_l_+1)& (0+255),b
 10000  0143C2  0E00               	movlw	0
 10001  0143C4  6F70               	movwf	(?__div_to_l_+2)& (0+255),b
 10002  0143C6  0E00               	movlw	0
 10003  0143C8  6F71               	movwf	(?__div_to_l_+3)& (0+255),b
 10004                           
 10005                           ; BSR set to: 0
 10006  0143CA  0012               	return	
 10007  0143CC                     l7542:
 10008                           
 10009                           ; BSR set to: 0
 10010  0143CC  0100               	movlb	0	; () banked
 10011  0143CE  3574               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 10012  0143D0  3575               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 10013  0143D2  0100               	movlb	0	; () banked
 10014  0143D4  6F7A               	movwf	__div_to_l_@cntr& (0+255),b
 10015  0143D6  0100               	movlb	0	; () banked
 10016  0143D8  517A               	movf	__div_to_l_@cntr& (0+255),w,b
 10017  0143DA  A4D8               	btfss	status,2,c
 10018  0143DC  D00A               	goto	l7548
 10019                           
 10020                           ; BSR set to: 0
 10021  0143DE  0E00               	movlw	0
 10022  0143E0  0100               	movlb	0	; () banked
 10023  0143E2  6F6E               	movwf	?__div_to_l_& (0+255),b
 10024  0143E4  0E00               	movlw	0
 10025  0143E6  6F6F               	movwf	(?__div_to_l_+1)& (0+255),b
 10026  0143E8  0E00               	movlw	0
 10027  0143EA  6F70               	movwf	(?__div_to_l_+2)& (0+255),b
 10028  0143EC  0E00               	movlw	0
 10029  0143EE  6F71               	movwf	(?__div_to_l_+3)& (0+255),b
 10030                           
 10031                           ; BSR set to: 0
 10032  0143F0  0012               	return	
 10033  0143F2                     l7548:
 10034                           
 10035                           ; BSR set to: 0
 10036  0143F2  0100               	movlb	0	; () banked
 10037  0143F4  8F70               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 10038                           
 10039                           ; BSR set to: 0
 10040  0143F6  0EFF               	movlw	255
 10041  0143F8  0100               	movlb	0	; () banked
 10042  0143FA  176E               	andwf	__div_to_l_@f1& (0+255),f,b
 10043  0143FC  0EFF               	movlw	255
 10044  0143FE  176F               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 10045  014400  0EFF               	movlw	255
 10046  014402  1770               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 10047  014404  0E00               	movlw	0
 10048  014406  1771               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 10049                           
 10050                           ; BSR set to: 0
 10051  014408  0100               	movlb	0	; () banked
 10052  01440A  8F74               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 10053  01440C  0EFF               	movlw	255
 10054  01440E  0100               	movlb	0	; () banked
 10055  014410  1772               	andwf	__div_to_l_@f2& (0+255),f,b
 10056  014412  0EFF               	movlw	255
 10057  014414  1773               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 10058  014416  0EFF               	movlw	255
 10059  014418  1774               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 10060  01441A  0E00               	movlw	0
 10061  01441C  1775               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 10062                           
 10063                           ; BSR set to: 0
 10064  01441E  0E00               	movlw	0
 10065  014420  0100               	movlb	0	; () banked
 10066  014422  6F76               	movwf	__div_to_l_@quot& (0+255),b
 10067  014424  0E00               	movlw	0
 10068  014426  6F77               	movwf	(__div_to_l_@quot+1)& (0+255),b
 10069  014428  0E00               	movlw	0
 10070  01442A  6F78               	movwf	(__div_to_l_@quot+2)& (0+255),b
 10071  01442C  0E00               	movlw	0
 10072  01442E  6F79               	movwf	(__div_to_l_@quot+3)& (0+255),b
 10073                           
 10074                           ; BSR set to: 0
 10075  014430  0E7F               	movlw	127
 10076  014432  0100               	movlb	0	; () banked
 10077  014434  5F7B               	subwf	__div_to_l_@exp1& (0+255),f,b
 10078                           
 10079                           ; BSR set to: 0
 10080  014436  0100               	movlb	0	; () banked
 10081  014438  517A               	movf	__div_to_l_@cntr& (0+255),w,b
 10082  01443A  0FA0               	addlw	160
 10083  01443C  0100               	movlb	0	; () banked
 10084  01443E  5F7B               	subwf	__div_to_l_@exp1& (0+255),f,b
 10085                           
 10086                           ; BSR set to: 0
 10087  014440  0E20               	movlw	32
 10088  014442  0100               	movlb	0	; () banked
 10089  014444  6F7A               	movwf	__div_to_l_@cntr& (0+255),b
 10090  014446                     l7562:
 10091                           
 10092                           ; BSR set to: 0
 10093  014446  0100               	movlb	0	; () banked
 10094  014448  90D8               	bcf	status,0,c
 10095  01444A  3776               	rlcf	__div_to_l_@quot& (0+255),f,b
 10096  01444C  3777               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 10097  01444E  3778               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 10098  014450  3779               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 10099                           
 10100                           ; BSR set to: 0
 10101  014452  0100               	movlb	0	; () banked
 10102  014454  5172               	movf	__div_to_l_@f2& (0+255),w,b
 10103  014456  0100               	movlb	0	; () banked
 10104  014458  5D6E               	subwf	__div_to_l_@f1& (0+255),w,b
 10105  01445A  0100               	movlb	0	; () banked
 10106  01445C  5173               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10107  01445E  0100               	movlb	0	; () banked
 10108  014460  596F               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 10109  014462  0100               	movlb	0	; () banked
 10110  014464  5174               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10111  014466  0100               	movlb	0	; () banked
 10112  014468  5970               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 10113  01446A  0100               	movlb	0	; () banked
 10114  01446C  5175               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10115  01446E  0100               	movlb	0	; () banked
 10116  014470  5971               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 10117  014472  A0D8               	btfss	status,0,c
 10118  014474  D012               	goto	l7570
 10119                           
 10120                           ; BSR set to: 0
 10121  014476  0100               	movlb	0	; () banked
 10122  014478  5172               	movf	__div_to_l_@f2& (0+255),w,b
 10123  01447A  0100               	movlb	0	; () banked
 10124  01447C  5F6E               	subwf	__div_to_l_@f1& (0+255),f,b
 10125  01447E  0100               	movlb	0	; () banked
 10126  014480  5173               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10127  014482  0100               	movlb	0	; () banked
 10128  014484  5B6F               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 10129  014486  0100               	movlb	0	; () banked
 10130  014488  5174               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10131  01448A  0100               	movlb	0	; () banked
 10132  01448C  5B70               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 10133  01448E  0100               	movlb	0	; () banked
 10134  014490  5175               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10135  014492  0100               	movlb	0	; () banked
 10136  014494  5B71               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 10137                           
 10138                           ; BSR set to: 0
 10139  014496  0100               	movlb	0	; () banked
 10140  014498  8176               	bsf	__div_to_l_@quot& (0+255),0,b
 10141  01449A                     l7570:
 10142                           
 10143                           ; BSR set to: 0
 10144  01449A  0100               	movlb	0	; () banked
 10145  01449C  90D8               	bcf	status,0,c
 10146  01449E  376E               	rlcf	__div_to_l_@f1& (0+255),f,b
 10147  0144A0  376F               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 10148  0144A2  3770               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 10149  0144A4  3771               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 10150                           
 10151                           ; BSR set to: 0
 10152  0144A6  0100               	movlb	0	; () banked
 10153  0144A8  2F7A               	decfsz	__div_to_l_@cntr& (0+255),f,b
 10154  0144AA  D7CD               	goto	l7562
 10155                           
 10156                           ; BSR set to: 0
 10157                           
 10158                           ; BSR set to: 0
 10159  0144AC  0100               	movlb	0	; () banked
 10160  0144AE  AF7B               	btfss	__div_to_l_@exp1& (0+255),7,b
 10161  0144B0  D01A               	goto	l7586
 10162                           
 10163                           ; BSR set to: 0
 10164  0144B2  0100               	movlb	0	; () banked
 10165  0144B4  517B               	movf	__div_to_l_@exp1& (0+255),w,b
 10166  0144B6  0A80               	xorlw	128
 10167  0144B8  0F9F               	addlw	159
 10168  0144BA  B0D8               	btfsc	status,0,c
 10169  0144BC  D00A               	goto	l7582
 10170                           
 10171                           ; BSR set to: 0
 10172  0144BE  0E00               	movlw	0
 10173  0144C0  0100               	movlb	0	; () banked
 10174  0144C2  6F6E               	movwf	?__div_to_l_& (0+255),b
 10175  0144C4  0E00               	movlw	0
 10176  0144C6  6F6F               	movwf	(?__div_to_l_+1)& (0+255),b
 10177  0144C8  0E00               	movlw	0
 10178  0144CA  6F70               	movwf	(?__div_to_l_+2)& (0+255),b
 10179  0144CC  0E00               	movlw	0
 10180  0144CE  6F71               	movwf	(?__div_to_l_+3)& (0+255),b
 10181                           
 10182                           ; BSR set to: 0
 10183  0144D0  0012               	return	
 10184  0144D2                     l7582:
 10185                           
 10186                           ; BSR set to: 0
 10187  0144D2  0100               	movlb	0	; () banked
 10188  0144D4  90D8               	bcf	status,0,c
 10189  0144D6  3379               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 10190  0144D8  3378               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 10191  0144DA  3377               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 10192  0144DC  3376               	rrcf	__div_to_l_@quot& (0+255),f,b
 10193                           
 10194                           ; BSR set to: 0
 10195  0144DE  0100               	movlb	0	; () banked
 10196  0144E0  3F7B               	incfsz	__div_to_l_@exp1& (0+255),f,b
 10197  0144E2  D7F7               	goto	l7582
 10198                           
 10199                           ; BSR set to: 0
 10200  0144E4  D01B               	goto	l1101
 10201  0144E6                     l7586:
 10202                           
 10203                           ; BSR set to: 0
 10204  0144E6  0E1F               	movlw	31
 10205  0144E8  0100               	movlb	0	; () banked
 10206  0144EA  657B               	cpfsgt	__div_to_l_@exp1& (0+255),b
 10207  0144EC  D012               	goto	l7594
 10208                           
 10209                           ; BSR set to: 0
 10210  0144EE  0E00               	movlw	0
 10211  0144F0  0100               	movlb	0	; () banked
 10212  0144F2  6F6E               	movwf	?__div_to_l_& (0+255),b
 10213  0144F4  0E00               	movlw	0
 10214  0144F6  6F6F               	movwf	(?__div_to_l_+1)& (0+255),b
 10215  0144F8  0E00               	movlw	0
 10216  0144FA  6F70               	movwf	(?__div_to_l_+2)& (0+255),b
 10217  0144FC  0E00               	movlw	0
 10218  0144FE  6F71               	movwf	(?__div_to_l_+3)& (0+255),b
 10219                           
 10220                           ; BSR set to: 0
 10221  014500  0012               	return	
 10222  014502                     l7592:
 10223                           
 10224                           ; BSR set to: 0
 10225  014502  0100               	movlb	0	; () banked
 10226  014504  90D8               	bcf	status,0,c
 10227  014506  3776               	rlcf	__div_to_l_@quot& (0+255),f,b
 10228  014508  3777               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 10229  01450A  3778               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 10230  01450C  3779               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 10231  01450E  0100               	movlb	0	; () banked
 10232  014510  077B               	decf	__div_to_l_@exp1& (0+255),f,b
 10233  014512                     l7594:
 10234                           
 10235                           ; BSR set to: 0
 10236  014512  0100               	movlb	0	; () banked
 10237  014514  517B               	movf	__div_to_l_@exp1& (0+255),w,b
 10238  014516  0100               	movlb	0	; () banked
 10239  014518  A4D8               	btfss	status,2,c
 10240  01451A  D7F3               	goto	l7592
 10241  01451C                     l1101:
 10242                           
 10243                           ; BSR set to: 0
 10244  01451C  C076  F06E         	movff	__div_to_l_@quot,?__div_to_l_
 10245  014520  C077  F06F         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 10246  014524  C078  F070         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 10247  014528  C079  F071         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 10248                           
 10249                           ; BSR set to: 0
 10250  01452C  0012               	return		;funcret
 10251  01452E                     __end_of__div_to_l_:
 10252                           	opt stack 0
 10253                           tblptru	equ	0xFF8
 10254                           tblptrh	equ	0xFF7
 10255                           tblptrl	equ	0xFF6
 10256                           tablat	equ	0xFF5
 10257                           prodh	equ	0xFF4
 10258                           prodl	equ	0xFF3
 10259                           intcon	equ	0xFF2
 10260                           postinc0	equ	0xFEE
 10261                           wreg	equ	0xFE8
 10262                           indf2	equ	0xFDF
 10263                           postinc2	equ	0xFDE
 10264                           fsr2h	equ	0xFDA
 10265                           fsr2l	equ	0xFD9
 10266                           status	equ	0xFD8
 10267                           
 10268 ;; *************** function ___llmod *****************
 10269 ;; Defined at:
 10270 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 10271 ;; Parameters:    Size  Location     Type
 10272 ;;  dividend        4   14[BANK0 ] unsigned long 
 10273 ;;  divisor         4   18[BANK0 ] unsigned long 
 10274 ;; Auto vars:     Size  Location     Type
 10275 ;;  counter         1   22[BANK0 ] unsigned char 
 10276 ;; Return value:  Size  Location     Type
 10277 ;;                  4   14[BANK0 ] unsigned long 
 10278 ;; Registers used:
 10279 ;;		wreg, status,2, status,0
 10280 ;; Tracked objects:
 10281 ;;		On entry : 0/0
 10282 ;;		On exit  : 0/0
 10283 ;;		Unchanged: 0/0
 10284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10285 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10286 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10288 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10289 ;;Total ram usage:        9 bytes
 10290 ;; Hardware stack levels used:    1
 10291 ;; Hardware stack levels required when called:    3
 10292 ;; This function calls:
 10293 ;;		Nothing
 10294 ;; This function is called by:
 10295 ;;		_sprintf
 10296 ;; This function uses a non-reentrant model
 10297 ;;
 10298                           
 10299                           	psect	text21
 10300  014F2C                     __ptext21:
 10301                           	opt stack 0
 10302  014F2C                     ___llmod:
 10303                           	opt stack 25
 10304                           
 10305                           ; BSR set to: 0
 10306                           ;incstack = 0
 10307  014F2C  0100               	movlb	0	; () banked
 10308  014F2E  5172               	movf	___llmod@divisor& (0+255),w,b
 10309  014F30  0100               	movlb	0	; () banked
 10310  014F32  1173               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 10311  014F34  0100               	movlb	0	; () banked
 10312  014F36  1174               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 10313  014F38  0100               	movlb	0	; () banked
 10314  014F3A  1175               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 10315  014F3C  B4D8               	btfsc	status,2,c
 10316  014F3E  D03A               	goto	l1304
 10317                           
 10318                           ; BSR set to: 0
 10319  014F40  0E01               	movlw	1
 10320  014F42  0100               	movlb	0	; () banked
 10321  014F44  6F76               	movwf	___llmod@counter& (0+255),b
 10322  014F46  D008               	goto	l7704
 10323  014F48                     l7702:
 10324                           
 10325                           ; BSR set to: 0
 10326  014F48  0100               	movlb	0	; () banked
 10327  014F4A  90D8               	bcf	status,0,c
 10328  014F4C  3772               	rlcf	___llmod@divisor& (0+255),f,b
 10329  014F4E  3773               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 10330  014F50  3774               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 10331  014F52  3775               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 10332  014F54  0100               	movlb	0	; () banked
 10333  014F56  2B76               	incf	___llmod@counter& (0+255),f,b
 10334  014F58                     l7704:
 10335                           
 10336                           ; BSR set to: 0
 10337  014F58  0100               	movlb	0	; () banked
 10338  014F5A  AF75               	btfss	(___llmod@divisor+3)& (0+255),7,b
 10339  014F5C  D7F5               	goto	l7702
 10340  014F5E                     l7706:
 10341                           
 10342                           ; BSR set to: 0
 10343  014F5E  0100               	movlb	0	; () banked
 10344  014F60  5172               	movf	___llmod@divisor& (0+255),w,b
 10345  014F62  0100               	movlb	0	; () banked
 10346  014F64  5D6E               	subwf	___llmod@dividend& (0+255),w,b
 10347  014F66  0100               	movlb	0	; () banked
 10348  014F68  5173               	movf	(___llmod@divisor+1)& (0+255),w,b
 10349  014F6A  0100               	movlb	0	; () banked
 10350  014F6C  596F               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 10351  014F6E  0100               	movlb	0	; () banked
 10352  014F70  5174               	movf	(___llmod@divisor+2)& (0+255),w,b
 10353  014F72  0100               	movlb	0	; () banked
 10354  014F74  5970               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 10355  014F76  0100               	movlb	0	; () banked
 10356  014F78  5175               	movf	(___llmod@divisor+3)& (0+255),w,b
 10357  014F7A  0100               	movlb	0	; () banked
 10358  014F7C  5971               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 10359  014F7E  A0D8               	btfss	status,0,c
 10360  014F80  D010               	goto	l7710
 10361                           
 10362                           ; BSR set to: 0
 10363  014F82  0100               	movlb	0	; () banked
 10364  014F84  5172               	movf	___llmod@divisor& (0+255),w,b
 10365  014F86  0100               	movlb	0	; () banked
 10366  014F88  5F6E               	subwf	___llmod@dividend& (0+255),f,b
 10367  014F8A  0100               	movlb	0	; () banked
 10368  014F8C  5173               	movf	(___llmod@divisor+1)& (0+255),w,b
 10369  014F8E  0100               	movlb	0	; () banked
 10370  014F90  5B6F               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 10371  014F92  0100               	movlb	0	; () banked
 10372  014F94  5174               	movf	(___llmod@divisor+2)& (0+255),w,b
 10373  014F96  0100               	movlb	0	; () banked
 10374  014F98  5B70               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 10375  014F9A  0100               	movlb	0	; () banked
 10376  014F9C  5175               	movf	(___llmod@divisor+3)& (0+255),w,b
 10377  014F9E  0100               	movlb	0	; () banked
 10378  014FA0  5B71               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 10379  014FA2                     l7710:
 10380                           
 10381                           ; BSR set to: 0
 10382  014FA2  0100               	movlb	0	; () banked
 10383  014FA4  90D8               	bcf	status,0,c
 10384  014FA6  3375               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 10385  014FA8  3374               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 10386  014FAA  3373               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 10387  014FAC  3372               	rrcf	___llmod@divisor& (0+255),f,b
 10388                           
 10389                           ; BSR set to: 0
 10390  014FAE  0100               	movlb	0	; () banked
 10391  014FB0  2F76               	decfsz	___llmod@counter& (0+255),f,b
 10392  014FB2  D7D5               	goto	l7706
 10393  014FB4                     l1304:
 10394                           
 10395                           ; BSR set to: 0
 10396  014FB4  C06E  F06E         	movff	___llmod@dividend,?___llmod
 10397  014FB8  C06F  F06F         	movff	___llmod@dividend+1,?___llmod+1
 10398  014FBC  C070  F070         	movff	___llmod@dividend+2,?___llmod+2
 10399  014FC0  C071  F071         	movff	___llmod@dividend+3,?___llmod+3
 10400                           
 10401                           ; BSR set to: 0
 10402  014FC4  0012               	return		;funcret
 10403  014FC6                     __end_of___llmod:
 10404                           	opt stack 0
 10405                           tblptru	equ	0xFF8
 10406                           tblptrh	equ	0xFF7
 10407                           tblptrl	equ	0xFF6
 10408                           tablat	equ	0xFF5
 10409                           prodh	equ	0xFF4
 10410                           prodl	equ	0xFF3
 10411                           intcon	equ	0xFF2
 10412                           postinc0	equ	0xFEE
 10413                           wreg	equ	0xFE8
 10414                           indf2	equ	0xFDF
 10415                           postinc2	equ	0xFDE
 10416                           fsr2h	equ	0xFDA
 10417                           fsr2l	equ	0xFD9
 10418                           status	equ	0xFD8
 10419                           
 10420 ;; *************** function ___lldiv *****************
 10421 ;; Defined at:
 10422 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 10423 ;; Parameters:    Size  Location     Type
 10424 ;;  dividend        4   14[BANK0 ] unsigned long 
 10425 ;;  divisor         4   18[BANK0 ] unsigned long 
 10426 ;; Auto vars:     Size  Location     Type
 10427 ;;  quotient        4   22[BANK0 ] unsigned long 
 10428 ;;  counter         1   26[BANK0 ] unsigned char 
 10429 ;; Return value:  Size  Location     Type
 10430 ;;                  4   14[BANK0 ] unsigned long 
 10431 ;; Registers used:
 10432 ;;		wreg, status,2, status,0
 10433 ;; Tracked objects:
 10434 ;;		On entry : 0/0
 10435 ;;		On exit  : 0/0
 10436 ;;		Unchanged: 0/0
 10437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10438 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10439 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10441 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10442 ;;Total ram usage:       13 bytes
 10443 ;; Hardware stack levels used:    1
 10444 ;; Hardware stack levels required when called:    3
 10445 ;; This function calls:
 10446 ;;		Nothing
 10447 ;; This function is called by:
 10448 ;;		_sprintf
 10449 ;; This function uses a non-reentrant model
 10450 ;;
 10451                           
 10452                           	psect	text22
 10453  014D2E                     __ptext22:
 10454                           	opt stack 0
 10455  014D2E                     ___lldiv:
 10456                           	opt stack 25
 10457                           
 10458                           ; BSR set to: 0
 10459                           ;incstack = 0
 10460  014D2E  0E00               	movlw	0
 10461  014D30  0100               	movlb	0	; () banked
 10462  014D32  6F76               	movwf	___lldiv@quotient& (0+255),b
 10463  014D34  0E00               	movlw	0
 10464  014D36  6F77               	movwf	(___lldiv@quotient+1)& (0+255),b
 10465  014D38  0E00               	movlw	0
 10466  014D3A  6F78               	movwf	(___lldiv@quotient+2)& (0+255),b
 10467  014D3C  0E00               	movlw	0
 10468  014D3E  6F79               	movwf	(___lldiv@quotient+3)& (0+255),b
 10469                           
 10470                           ; BSR set to: 0
 10471  014D40  0100               	movlb	0	; () banked
 10472  014D42  5172               	movf	___lldiv@divisor& (0+255),w,b
 10473  014D44  0100               	movlb	0	; () banked
 10474  014D46  1173               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 10475  014D48  0100               	movlb	0	; () banked
 10476  014D4A  1174               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 10477  014D4C  0100               	movlb	0	; () banked
 10478  014D4E  1175               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 10479  014D50  B4D8               	btfsc	status,2,c
 10480  014D52  D042               	goto	l1294
 10481                           
 10482                           ; BSR set to: 0
 10483  014D54  0E01               	movlw	1
 10484  014D56  0100               	movlb	0	; () banked
 10485  014D58  6F7A               	movwf	___lldiv@counter& (0+255),b
 10486  014D5A  D008               	goto	l7684
 10487  014D5C                     l7682:
 10488                           
 10489                           ; BSR set to: 0
 10490  014D5C  0100               	movlb	0	; () banked
 10491  014D5E  90D8               	bcf	status,0,c
 10492  014D60  3772               	rlcf	___lldiv@divisor& (0+255),f,b
 10493  014D62  3773               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 10494  014D64  3774               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 10495  014D66  3775               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 10496  014D68  0100               	movlb	0	; () banked
 10497  014D6A  2B7A               	incf	___lldiv@counter& (0+255),f,b
 10498  014D6C                     l7684:
 10499                           
 10500                           ; BSR set to: 0
 10501  014D6C  0100               	movlb	0	; () banked
 10502  014D6E  AF75               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 10503  014D70  D7F5               	goto	l7682
 10504  014D72                     l7686:
 10505                           
 10506                           ; BSR set to: 0
 10507  014D72  0100               	movlb	0	; () banked
 10508  014D74  90D8               	bcf	status,0,c
 10509  014D76  3776               	rlcf	___lldiv@quotient& (0+255),f,b
 10510  014D78  3777               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 10511  014D7A  3778               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 10512  014D7C  3779               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 10513                           
 10514                           ; BSR set to: 0
 10515  014D7E  0100               	movlb	0	; () banked
 10516  014D80  5172               	movf	___lldiv@divisor& (0+255),w,b
 10517  014D82  0100               	movlb	0	; () banked
 10518  014D84  5D6E               	subwf	___lldiv@dividend& (0+255),w,b
 10519  014D86  0100               	movlb	0	; () banked
 10520  014D88  5173               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10521  014D8A  0100               	movlb	0	; () banked
 10522  014D8C  596F               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 10523  014D8E  0100               	movlb	0	; () banked
 10524  014D90  5174               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10525  014D92  0100               	movlb	0	; () banked
 10526  014D94  5970               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 10527  014D96  0100               	movlb	0	; () banked
 10528  014D98  5175               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10529  014D9A  0100               	movlb	0	; () banked
 10530  014D9C  5971               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 10531  014D9E  A0D8               	btfss	status,0,c
 10532  014DA0  D012               	goto	l7694
 10533                           
 10534                           ; BSR set to: 0
 10535  014DA2  0100               	movlb	0	; () banked
 10536  014DA4  5172               	movf	___lldiv@divisor& (0+255),w,b
 10537  014DA6  0100               	movlb	0	; () banked
 10538  014DA8  5F6E               	subwf	___lldiv@dividend& (0+255),f,b
 10539  014DAA  0100               	movlb	0	; () banked
 10540  014DAC  5173               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10541  014DAE  0100               	movlb	0	; () banked
 10542  014DB0  5B6F               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 10543  014DB2  0100               	movlb	0	; () banked
 10544  014DB4  5174               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10545  014DB6  0100               	movlb	0	; () banked
 10546  014DB8  5B70               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 10547  014DBA  0100               	movlb	0	; () banked
 10548  014DBC  5175               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10549  014DBE  0100               	movlb	0	; () banked
 10550  014DC0  5B71               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 10551                           
 10552                           ; BSR set to: 0
 10553  014DC2  0100               	movlb	0	; () banked
 10554  014DC4  8176               	bsf	___lldiv@quotient& (0+255),0,b
 10555  014DC6                     l7694:
 10556                           
 10557                           ; BSR set to: 0
 10558  014DC6  0100               	movlb	0	; () banked
 10559  014DC8  90D8               	bcf	status,0,c
 10560  014DCA  3375               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 10561  014DCC  3374               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 10562  014DCE  3373               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 10563  014DD0  3372               	rrcf	___lldiv@divisor& (0+255),f,b
 10564                           
 10565                           ; BSR set to: 0
 10566  014DD2  0100               	movlb	0	; () banked
 10567  014DD4  2F7A               	decfsz	___lldiv@counter& (0+255),f,b
 10568  014DD6  D7CD               	goto	l7686
 10569  014DD8                     l1294:
 10570                           
 10571                           ; BSR set to: 0
 10572  014DD8  C076  F06E         	movff	___lldiv@quotient,?___lldiv
 10573  014DDC  C077  F06F         	movff	___lldiv@quotient+1,?___lldiv+1
 10574  014DE0  C078  F070         	movff	___lldiv@quotient+2,?___lldiv+2
 10575  014DE4  C079  F071         	movff	___lldiv@quotient+3,?___lldiv+3
 10576                           
 10577                           ; BSR set to: 0
 10578  014DE8  0012               	return		;funcret
 10579  014DEA                     __end_of___lldiv:
 10580                           	opt stack 0
 10581                           tblptru	equ	0xFF8
 10582                           tblptrh	equ	0xFF7
 10583                           tblptrl	equ	0xFF6
 10584                           tablat	equ	0xFF5
 10585                           prodh	equ	0xFF4
 10586                           prodl	equ	0xFF3
 10587                           intcon	equ	0xFF2
 10588                           postinc0	equ	0xFEE
 10589                           wreg	equ	0xFE8
 10590                           indf2	equ	0xFDF
 10591                           postinc2	equ	0xFDE
 10592                           fsr2h	equ	0xFDA
 10593                           fsr2l	equ	0xFD9
 10594                           status	equ	0xFD8
 10595                           
 10596 ;; *************** function ___fltol *****************
 10597 ;; Defined at:
 10598 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
 10599 ;; Parameters:    Size  Location     Type
 10600 ;;  f1              4   62[BANK0 ] unsigned long 
 10601 ;; Auto vars:     Size  Location     Type
 10602 ;;  exp1            1   71[BANK0 ] unsigned char 
 10603 ;;  sign1           1   70[BANK0 ] unsigned char 
 10604 ;; Return value:  Size  Location     Type
 10605 ;;                  4   62[BANK0 ] long 
 10606 ;; Registers used:
 10607 ;;		wreg, status,2, status,0
 10608 ;; Tracked objects:
 10609 ;;		On entry : 0/0
 10610 ;;		On exit  : 0/0
 10611 ;;		Unchanged: 0/0
 10612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10613 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10614 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10615 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10616 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10617 ;;Total ram usage:       10 bytes
 10618 ;; Hardware stack levels used:    1
 10619 ;; Hardware stack levels required when called:    3
 10620 ;; This function calls:
 10621 ;;		Nothing
 10622 ;; This function is called by:
 10623 ;;		_main
 10624 ;;		_sprintf
 10625 ;; This function uses a non-reentrant model
 10626 ;;
 10627                           
 10628                           	psect	text23
 10629  0147B6                     __ptext23:
 10630                           	opt stack 0
 10631  0147B6                     ___fltol:
 10632                           	opt stack 27
 10633                           
 10634                           ; BSR set to: 0
 10635                           ;incstack = 0
 10636  0147B6  0100               	movlb	0	; () banked
 10637  0147B8  35A0               	rlcf	(___fltol@f1+2)& (0+255),w,b
 10638  0147BA  35A1               	rlcf	(___fltol@f1+3)& (0+255),w,b
 10639  0147BC  0100               	movlb	0	; () banked
 10640  0147BE  6FA7               	movwf	___fltol@exp1& (0+255),b
 10641  0147C0  0100               	movlb	0	; () banked
 10642  0147C2  51A7               	movf	___fltol@exp1& (0+255),w,b
 10643  0147C4  A4D8               	btfss	status,2,c
 10644  0147C6  D00A               	goto	l7638
 10645                           
 10646                           ; BSR set to: 0
 10647  0147C8  0E00               	movlw	0
 10648  0147CA  0100               	movlb	0	; () banked
 10649  0147CC  6F9E               	movwf	?___fltol& (0+255),b
 10650  0147CE  0E00               	movlw	0
 10651  0147D0  6F9F               	movwf	(?___fltol+1)& (0+255),b
 10652  0147D2  0E00               	movlw	0
 10653  0147D4  6FA0               	movwf	(?___fltol+2)& (0+255),b
 10654  0147D6  0E00               	movlw	0
 10655  0147D8  6FA1               	movwf	(?___fltol+3)& (0+255),b
 10656                           
 10657                           ; BSR set to: 0
 10658  0147DA  0012               	return	
 10659  0147DC                     l7638:
 10660                           
 10661                           ; BSR set to: 0
 10662  0147DC  C09E  F0A2         	movff	___fltol@f1,??___fltol
 10663  0147E0  C09F  F0A3         	movff	___fltol@f1+1,??___fltol+1
 10664  0147E4  C0A0  F0A4         	movff	___fltol@f1+2,??___fltol+2
 10665  0147E8  C0A1  F0A5         	movff	___fltol@f1+3,??___fltol+3
 10666  0147EC  0E20               	movlw	32
 10667  0147EE  D006               	goto	u10130
 10668  0147F0                     u10135:
 10669  0147F0  0100               	movlb	0	; () banked
 10670  0147F2  90D8               	bcf	status,0,c
 10671  0147F4  33A5               	rrcf	(??___fltol+3)& (0+255),f,b
 10672  0147F6  33A4               	rrcf	(??___fltol+2)& (0+255),f,b
 10673  0147F8  33A3               	rrcf	(??___fltol+1)& (0+255),f,b
 10674  0147FA  33A2               	rrcf	??___fltol& (0+255),f,b
 10675  0147FC                     u10130:
 10676  0147FC  2EE8               	decfsz	wreg,f,c
 10677  0147FE  D7F8               	goto	u10135
 10678  014800  0100               	movlb	0	; () banked
 10679  014802  51A2               	movf	??___fltol& (0+255),w,b
 10680  014804  0100               	movlb	0	; () banked
 10681  014806  6FA6               	movwf	___fltol@sign1& (0+255),b
 10682                           
 10683                           ; BSR set to: 0
 10684  014808  0100               	movlb	0	; () banked
 10685  01480A  8FA0               	bsf	(___fltol@f1+2)& (0+255),7,b
 10686                           
 10687                           ; BSR set to: 0
 10688  01480C  0EFF               	movlw	255
 10689  01480E  0100               	movlb	0	; () banked
 10690  014810  179E               	andwf	___fltol@f1& (0+255),f,b
 10691  014812  0EFF               	movlw	255
 10692  014814  179F               	andwf	(___fltol@f1+1)& (0+255),f,b
 10693  014816  0EFF               	movlw	255
 10694  014818  17A0               	andwf	(___fltol@f1+2)& (0+255),f,b
 10695  01481A  0E00               	movlw	0
 10696  01481C  17A1               	andwf	(___fltol@f1+3)& (0+255),f,b
 10697                           
 10698                           ; BSR set to: 0
 10699  01481E  0E96               	movlw	150
 10700  014820  0100               	movlb	0	; () banked
 10701  014822  5FA7               	subwf	___fltol@exp1& (0+255),f,b
 10702                           
 10703                           ; BSR set to: 0
 10704  014824  0100               	movlb	0	; () banked
 10705  014826  AFA7               	btfss	___fltol@exp1& (0+255),7,b
 10706  014828  D01A               	goto	l7658
 10707                           
 10708                           ; BSR set to: 0
 10709  01482A  0100               	movlb	0	; () banked
 10710  01482C  51A7               	movf	___fltol@exp1& (0+255),w,b
 10711  01482E  0A80               	xorlw	128
 10712  014830  0F97               	addlw	151
 10713  014832  B0D8               	btfsc	status,0,c
 10714  014834  D00A               	goto	l7654
 10715                           
 10716                           ; BSR set to: 0
 10717  014836  0E00               	movlw	0
 10718  014838  0100               	movlb	0	; () banked
 10719  01483A  6F9E               	movwf	?___fltol& (0+255),b
 10720  01483C  0E00               	movlw	0
 10721  01483E  6F9F               	movwf	(?___fltol+1)& (0+255),b
 10722  014840  0E00               	movlw	0
 10723  014842  6FA0               	movwf	(?___fltol+2)& (0+255),b
 10724  014844  0E00               	movlw	0
 10725  014846  6FA1               	movwf	(?___fltol+3)& (0+255),b
 10726                           
 10727                           ; BSR set to: 0
 10728  014848  0012               	return	
 10729  01484A                     l7654:
 10730                           
 10731                           ; BSR set to: 0
 10732  01484A  0100               	movlb	0	; () banked
 10733  01484C  90D8               	bcf	status,0,c
 10734  01484E  33A1               	rrcf	(___fltol@f1+3)& (0+255),f,b
 10735  014850  33A0               	rrcf	(___fltol@f1+2)& (0+255),f,b
 10736  014852  339F               	rrcf	(___fltol@f1+1)& (0+255),f,b
 10737  014854  339E               	rrcf	___fltol@f1& (0+255),f,b
 10738                           
 10739                           ; BSR set to: 0
 10740  014856  0100               	movlb	0	; () banked
 10741  014858  3FA7               	incfsz	___fltol@exp1& (0+255),f,b
 10742  01485A  D7F7               	goto	l7654
 10743                           
 10744                           ; BSR set to: 0
 10745  01485C  D01B               	goto	l7668
 10746  01485E                     l7658:
 10747                           
 10748                           ; BSR set to: 0
 10749  01485E  0E1F               	movlw	31
 10750  014860  0100               	movlb	0	; () banked
 10751  014862  65A7               	cpfsgt	___fltol@exp1& (0+255),b
 10752  014864  D012               	goto	l7666
 10753                           
 10754                           ; BSR set to: 0
 10755  014866  0E00               	movlw	0
 10756  014868  0100               	movlb	0	; () banked
 10757  01486A  6F9E               	movwf	?___fltol& (0+255),b
 10758  01486C  0E00               	movlw	0
 10759  01486E  6F9F               	movwf	(?___fltol+1)& (0+255),b
 10760  014870  0E00               	movlw	0
 10761  014872  6FA0               	movwf	(?___fltol+2)& (0+255),b
 10762  014874  0E00               	movlw	0
 10763  014876  6FA1               	movwf	(?___fltol+3)& (0+255),b
 10764                           
 10765                           ; BSR set to: 0
 10766  014878  0012               	return	
 10767  01487A                     l7664:
 10768                           
 10769                           ; BSR set to: 0
 10770  01487A  0100               	movlb	0	; () banked
 10771  01487C  90D8               	bcf	status,0,c
 10772  01487E  379E               	rlcf	___fltol@f1& (0+255),f,b
 10773  014880  379F               	rlcf	(___fltol@f1+1)& (0+255),f,b
 10774  014882  37A0               	rlcf	(___fltol@f1+2)& (0+255),f,b
 10775  014884  37A1               	rlcf	(___fltol@f1+3)& (0+255),f,b
 10776  014886  0100               	movlb	0	; () banked
 10777  014888  07A7               	decf	___fltol@exp1& (0+255),f,b
 10778  01488A                     l7666:
 10779                           
 10780                           ; BSR set to: 0
 10781  01488A  0100               	movlb	0	; () banked
 10782  01488C  51A7               	movf	___fltol@exp1& (0+255),w,b
 10783  01488E  0100               	movlb	0	; () banked
 10784  014890  A4D8               	btfss	status,2,c
 10785  014892  D7F3               	goto	l7664
 10786  014894                     l7668:
 10787                           
 10788                           ; BSR set to: 0
 10789  014894  0100               	movlb	0	; () banked
 10790  014896  51A6               	movf	___fltol@sign1& (0+255),w,b
 10791  014898  0100               	movlb	0	; () banked
 10792  01489A  B4D8               	btfsc	status,2,c
 10793  01489C  D009               	goto	l7672
 10794                           
 10795                           ; BSR set to: 0
 10796  01489E  0100               	movlb	0	; () banked
 10797  0148A0  1FA1               	comf	(___fltol@f1+3)& (0+255),f,b
 10798  0148A2  1FA0               	comf	(___fltol@f1+2)& (0+255),f,b
 10799  0148A4  1F9F               	comf	(___fltol@f1+1)& (0+255),f,b
 10800  0148A6  6D9E               	negf	___fltol@f1& (0+255),b
 10801  0148A8  0E00               	movlw	0
 10802  0148AA  239F               	addwfc	(___fltol@f1+1)& (0+255),f,b
 10803  0148AC  23A0               	addwfc	(___fltol@f1+2)& (0+255),f,b
 10804  0148AE  23A1               	addwfc	(___fltol@f1+3)& (0+255),f,b
 10805  0148B0                     l7672:
 10806                           
 10807                           ; BSR set to: 0
 10808  0148B0  C09E  F09E         	movff	___fltol@f1,?___fltol
 10809  0148B4  C09F  F09F         	movff	___fltol@f1+1,?___fltol+1
 10810  0148B8  C0A0  F0A0         	movff	___fltol@f1+2,?___fltol+2
 10811  0148BC  C0A1  F0A1         	movff	___fltol@f1+3,?___fltol+3
 10812  0148C0  0012               	return	
 10813  0148C2                     __end_of___fltol:
 10814                           	opt stack 0
 10815                           tblptru	equ	0xFF8
 10816                           tblptrh	equ	0xFF7
 10817                           tblptrl	equ	0xFF6
 10818                           tablat	equ	0xFF5
 10819                           prodh	equ	0xFF4
 10820                           prodl	equ	0xFF3
 10821                           intcon	equ	0xFF2
 10822                           postinc0	equ	0xFEE
 10823                           wreg	equ	0xFE8
 10824                           indf2	equ	0xFDF
 10825                           postinc2	equ	0xFDE
 10826                           fsr2h	equ	0xFDA
 10827                           fsr2l	equ	0xFD9
 10828                           status	equ	0xFD8
 10829                           
 10830 ;; *************** function ___flsub *****************
 10831 ;; Defined at:
 10832 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 10833 ;; Parameters:    Size  Location     Type
 10834 ;;  b               4   86[BANK0 ] long 
 10835 ;;  a               4   90[BANK0 ] long 
 10836 ;; Auto vars:     Size  Location     Type
 10837 ;;		None
 10838 ;; Return value:  Size  Location     Type
 10839 ;;                  4   86[BANK0 ] long 
 10840 ;; Registers used:
 10841 ;;		wreg, status,2, status,0, cstack
 10842 ;; Tracked objects:
 10843 ;;		On entry : 0/0
 10844 ;;		On exit  : 0/0
 10845 ;;		Unchanged: 0/0
 10846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10847 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10850 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10851 ;;Total ram usage:        8 bytes
 10852 ;; Hardware stack levels used:    1
 10853 ;; Hardware stack levels required when called:    4
 10854 ;; This function calls:
 10855 ;;		___fladd
 10856 ;; This function is called by:
 10857 ;;		_sprintf
 10858 ;; This function uses a non-reentrant model
 10859 ;;
 10860                           
 10861                           	psect	text24
 10862  0150B0                     __ptext24:
 10863                           	opt stack 0
 10864  0150B0                     ___flsub:
 10865                           	opt stack 24
 10866                           
 10867                           ; BSR set to: 0
 10868                           ;incstack = 0
 10869  0150B0  0E00               	movlw	0
 10870  0150B2  0100               	movlb	0	; () banked
 10871  0150B4  1BBA               	xorwf	___flsub@a& (0+255),f,b
 10872  0150B6  0E00               	movlw	0
 10873  0150B8  1BBB               	xorwf	(___flsub@a+1)& (0+255),f,b
 10874  0150BA  0E00               	movlw	0
 10875  0150BC  1BBC               	xorwf	(___flsub@a+2)& (0+255),f,b
 10876  0150BE  0E80               	movlw	128
 10877  0150C0  1BBD               	xorwf	(___flsub@a+3)& (0+255),f,b
 10878                           
 10879                           ; BSR set to: 0
 10880  0150C2  C0B6  F0A2         	movff	___flsub@b,___fladd@b
 10881  0150C6  C0B7  F0A3         	movff	___flsub@b+1,___fladd@b+1
 10882  0150CA  C0B8  F0A4         	movff	___flsub@b+2,___fladd@b+2
 10883  0150CE  C0B9  F0A5         	movff	___flsub@b+3,___fladd@b+3
 10884  0150D2  C0BA  F0A6         	movff	___flsub@a,___fladd@a
 10885  0150D6  C0BB  F0A7         	movff	___flsub@a+1,___fladd@a+1
 10886  0150DA  C0BC  F0A8         	movff	___flsub@a+2,___fladd@a+2
 10887  0150DE  C0BD  F0A9         	movff	___flsub@a+3,___fladd@a+3
 10888  0150E2  ECA6  F092         	call	___fladd	;wreg free
 10889  0150E6  C0A2  F0B6         	movff	?___fladd,?___flsub
 10890  0150EA  C0A3  F0B7         	movff	?___fladd+1,?___flsub+1
 10891  0150EE  C0A4  F0B8         	movff	?___fladd+2,?___flsub+2
 10892  0150F2  C0A5  F0B9         	movff	?___fladd+3,?___flsub+3
 10893  0150F6  0012               	return	
 10894  0150F8                     __end_of___flsub:
 10895                           	opt stack 0
 10896                           tblptru	equ	0xFF8
 10897                           tblptrh	equ	0xFF7
 10898                           tblptrl	equ	0xFF6
 10899                           tablat	equ	0xFF5
 10900                           prodh	equ	0xFF4
 10901                           prodl	equ	0xFF3
 10902                           intcon	equ	0xFF2
 10903                           postinc0	equ	0xFEE
 10904                           wreg	equ	0xFE8
 10905                           indf2	equ	0xFDF
 10906                           postinc2	equ	0xFDE
 10907                           fsr2h	equ	0xFDA
 10908                           fsr2l	equ	0xFD9
 10909                           status	equ	0xFD8
 10910                           
 10911 ;; *************** function ___fladd *****************
 10912 ;; Defined at:
 10913 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 10914 ;; Parameters:    Size  Location     Type
 10915 ;;  b               4   66[BANK0 ] long 
 10916 ;;  a               4   70[BANK0 ] long 
 10917 ;; Auto vars:     Size  Location     Type
 10918 ;;  grs             1   85[BANK0 ] unsigned char 
 10919 ;;  bexp            1   84[BANK0 ] unsigned char 
 10920 ;;  aexp            1   83[BANK0 ] unsigned char 
 10921 ;;  signs           1   82[BANK0 ] unsigned char 
 10922 ;; Return value:  Size  Location     Type
 10923 ;;                  4   66[BANK0 ] unsigned char 
 10924 ;; Registers used:
 10925 ;;		wreg, status,2, status,0
 10926 ;; Tracked objects:
 10927 ;;		On entry : 0/0
 10928 ;;		On exit  : 0/0
 10929 ;;		Unchanged: 0/0
 10930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10931 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10932 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10933 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10934 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10935 ;;Total ram usage:       20 bytes
 10936 ;; Hardware stack levels used:    1
 10937 ;; Hardware stack levels required when called:    3
 10938 ;; This function calls:
 10939 ;;		Nothing
 10940 ;; This function is called by:
 10941 ;;		_sprintf
 10942 ;;		___flsub
 10943 ;; This function uses a non-reentrant model
 10944 ;;
 10945                           
 10946                           	psect	text25
 10947  01254C                     __ptext25:
 10948                           	opt stack 0
 10949  01254C                     ___fladd:
 10950                           	opt stack 24
 10951                           
 10952                           ;incstack = 0
 10953  01254C  0100               	movlb	0	; () banked
 10954  01254E  51A5               	movf	(___fladd@b+3)& (0+255),w,b
 10955  012550  0B80               	andlw	128
 10956  012552  0100               	movlb	0	; () banked
 10957  012554  6FB2               	movwf	___fladd@signs& (0+255),b
 10958  012556  0100               	movlb	0	; () banked
 10959  012558  51A5               	movf	(___fladd@b+3)& (0+255),w,b
 10960  01255A  25A5               	addwf	(___fladd@b+3)& (0+255),w,b
 10961  01255C  0100               	movlb	0	; () banked
 10962  01255E  6FB4               	movwf	___fladd@bexp& (0+255),b
 10963                           
 10964                           ; BSR set to: 0
 10965  012560  0100               	movlb	0	; () banked
 10966  012562  AFA4               	btfss	(___fladd@b+2)& (0+255),7,b
 10967  012564  D002               	goto	l6566
 10968                           
 10969                           ; BSR set to: 0
 10970  012566  0100               	movlb	0	; () banked
 10971  012568  81B4               	bsf	___fladd@bexp& (0+255),0,b
 10972  01256A                     l6566:
 10973                           
 10974                           ; BSR set to: 0
 10975  01256A  0100               	movlb	0	; () banked
 10976  01256C  51B4               	movf	___fladd@bexp& (0+255),w,b
 10977  01256E  0100               	movlb	0	; () banked
 10978  012570  B4D8               	btfsc	status,2,c
 10979  012572  D012               	goto	l6576
 10980                           
 10981                           ; BSR set to: 0
 10982  012574  0100               	movlb	0	; () banked
 10983  012576  29B4               	incf	___fladd@bexp& (0+255),w,b
 10984  012578  A4D8               	btfss	status,2,c
 10985  01257A  D009               	goto	l6572
 10986                           
 10987                           ; BSR set to: 0
 10988  01257C  0E00               	movlw	0
 10989  01257E  0100               	movlb	0	; () banked
 10990  012580  6FA2               	movwf	___fladd@b& (0+255),b
 10991  012582  0E00               	movlw	0
 10992  012584  6FA3               	movwf	(___fladd@b+1)& (0+255),b
 10993  012586  0E00               	movlw	0
 10994  012588  6FA4               	movwf	(___fladd@b+2)& (0+255),b
 10995  01258A  0E00               	movlw	0
 10996  01258C  6FA5               	movwf	(___fladd@b+3)& (0+255),b
 10997  01258E                     l6572:
 10998                           
 10999                           ; BSR set to: 0
 11000  01258E  0100               	movlb	0	; () banked
 11001  012590  8FA4               	bsf	(___fladd@b+2)& (0+255),7,b
 11002                           
 11003                           ; BSR set to: 0
 11004  012592  0E00               	movlw	0
 11005  012594  0100               	movlb	0	; () banked
 11006  012596  D008               	goto	L9
 11007  012598                     l6576:
 11008                           
 11009                           ; BSR set to: 0
 11010  012598  0E00               	movlw	0
 11011  01259A  0100               	movlb	0	; () banked
 11012  01259C  6FA2               	movwf	___fladd@b& (0+255),b
 11013  01259E  0E00               	movlw	0
 11014  0125A0  6FA3               	movwf	(___fladd@b+1)& (0+255),b
 11015  0125A2  0E00               	movlw	0
 11016  0125A4  6FA4               	movwf	(___fladd@b+2)& (0+255),b
 11017  0125A6  0E00               	movlw	0
 11018  0125A8                     L9:
 11019  0125A8  6FA5               	movwf	(___fladd@b+3)& (0+255),b
 11020                           
 11021                           ; BSR set to: 0
 11022                           
 11023                           ; BSR set to: 0
 11024  0125AA  0100               	movlb	0	; () banked
 11025  0125AC  51A9               	movf	(___fladd@a+3)& (0+255),w,b
 11026  0125AE  0B80               	andlw	128
 11027  0125B0  0100               	movlb	0	; () banked
 11028  0125B2  6FB3               	movwf	___fladd@aexp& (0+255),b
 11029                           
 11030                           ; BSR set to: 0
 11031  0125B4  0100               	movlb	0	; () banked
 11032  0125B6  51B2               	movf	___fladd@signs& (0+255),w,b
 11033  0125B8  0100               	movlb	0	; () banked
 11034  0125BA  19B3               	xorwf	___fladd@aexp& (0+255),w,b
 11035  0125BC  B4D8               	btfsc	status,2,c
 11036  0125BE  D002               	goto	l6584
 11037                           
 11038                           ; BSR set to: 0
 11039  0125C0  0100               	movlb	0	; () banked
 11040  0125C2  8DB2               	bsf	___fladd@signs& (0+255),6,b
 11041  0125C4                     l6584:
 11042                           
 11043                           ; BSR set to: 0
 11044  0125C4  0100               	movlb	0	; () banked
 11045  0125C6  51A9               	movf	(___fladd@a+3)& (0+255),w,b
 11046  0125C8  25A9               	addwf	(___fladd@a+3)& (0+255),w,b
 11047  0125CA  0100               	movlb	0	; () banked
 11048  0125CC  6FB3               	movwf	___fladd@aexp& (0+255),b
 11049                           
 11050                           ; BSR set to: 0
 11051  0125CE  0100               	movlb	0	; () banked
 11052  0125D0  AFA8               	btfss	(___fladd@a+2)& (0+255),7,b
 11053  0125D2  D002               	goto	l6590
 11054                           
 11055                           ; BSR set to: 0
 11056  0125D4  0100               	movlb	0	; () banked
 11057  0125D6  81B3               	bsf	___fladd@aexp& (0+255),0,b
 11058  0125D8                     l6590:
 11059                           
 11060                           ; BSR set to: 0
 11061  0125D8  0100               	movlb	0	; () banked
 11062  0125DA  51B3               	movf	___fladd@aexp& (0+255),w,b
 11063  0125DC  0100               	movlb	0	; () banked
 11064  0125DE  B4D8               	btfsc	status,2,c
 11065  0125E0  D012               	goto	l6600
 11066                           
 11067                           ; BSR set to: 0
 11068  0125E2  0100               	movlb	0	; () banked
 11069  0125E4  29B3               	incf	___fladd@aexp& (0+255),w,b
 11070  0125E6  A4D8               	btfss	status,2,c
 11071  0125E8  D009               	goto	l6596
 11072                           
 11073                           ; BSR set to: 0
 11074  0125EA  0E00               	movlw	0
 11075  0125EC  0100               	movlb	0	; () banked
 11076  0125EE  6FA6               	movwf	___fladd@a& (0+255),b
 11077  0125F0  0E00               	movlw	0
 11078  0125F2  6FA7               	movwf	(___fladd@a+1)& (0+255),b
 11079  0125F4  0E00               	movlw	0
 11080  0125F6  6FA8               	movwf	(___fladd@a+2)& (0+255),b
 11081  0125F8  0E00               	movlw	0
 11082  0125FA  6FA9               	movwf	(___fladd@a+3)& (0+255),b
 11083  0125FC                     l6596:
 11084                           
 11085                           ; BSR set to: 0
 11086  0125FC  0100               	movlb	0	; () banked
 11087  0125FE  8FA8               	bsf	(___fladd@a+2)& (0+255),7,b
 11088                           
 11089                           ; BSR set to: 0
 11090  012600  0E00               	movlw	0
 11091  012602  0100               	movlb	0	; () banked
 11092  012604  D008               	goto	L10
 11093  012606                     l6600:
 11094                           
 11095                           ; BSR set to: 0
 11096  012606  0E00               	movlw	0
 11097  012608  0100               	movlb	0	; () banked
 11098  01260A  6FA6               	movwf	___fladd@a& (0+255),b
 11099  01260C  0E00               	movlw	0
 11100  01260E  6FA7               	movwf	(___fladd@a+1)& (0+255),b
 11101  012610  0E00               	movlw	0
 11102  012612  6FA8               	movwf	(___fladd@a+2)& (0+255),b
 11103  012614  0E00               	movlw	0
 11104  012616                     L10:
 11105  012616  6FA9               	movwf	(___fladd@a+3)& (0+255),b
 11106                           
 11107                           ; BSR set to: 0
 11108                           
 11109                           ; BSR set to: 0
 11110  012618  0100               	movlb	0	; () banked
 11111  01261A  51B4               	movf	___fladd@bexp& (0+255),w,b
 11112  01261C  0100               	movlb	0	; () banked
 11113  01261E  5DB3               	subwf	___fladd@aexp& (0+255),w,b
 11114  012620  B0D8               	btfsc	status,0,c
 11115  012622  D024               	goto	l6638
 11116                           
 11117                           ; BSR set to: 0
 11118  012624  0100               	movlb	0	; () banked
 11119  012626  ADB2               	btfss	___fladd@signs& (0+255),6,b
 11120  012628  D003               	goto	l6608
 11121                           
 11122                           ; BSR set to: 0
 11123  01262A  0E80               	movlw	128
 11124  01262C  0100               	movlb	0	; () banked
 11125  01262E  1BB2               	xorwf	___fladd@signs& (0+255),f,b
 11126  012630                     l6608:
 11127                           
 11128                           ; BSR set to: 0
 11129  012630  C0B4  F0B5         	movff	___fladd@bexp,___fladd@grs
 11130                           
 11131                           ; BSR set to: 0
 11132  012634  C0B3  F0B4         	movff	___fladd@aexp,___fladd@bexp
 11133                           
 11134                           ; BSR set to: 0
 11135  012638  C0B5  F0B3         	movff	___fladd@grs,___fladd@aexp
 11136                           
 11137                           ; BSR set to: 0
 11138  01263C  C0A2  F0B5         	movff	___fladd@b,___fladd@grs
 11139                           
 11140                           ; BSR set to: 0
 11141  012640  C0A6  F0A2         	movff	___fladd@a,___fladd@b
 11142                           
 11143                           ; BSR set to: 0
 11144  012644  C0B5  F0A6         	movff	___fladd@grs,___fladd@a
 11145                           
 11146                           ; BSR set to: 0
 11147  012648  C0A3  F0B5         	movff	___fladd@b+1,___fladd@grs
 11148                           
 11149                           ; BSR set to: 0
 11150  01264C  C0A7  F0A3         	movff	___fladd@a+1,___fladd@b+1
 11151                           
 11152                           ; BSR set to: 0
 11153  012650  C0B5  F0A7         	movff	___fladd@grs,___fladd@a+1
 11154                           
 11155                           ; BSR set to: 0
 11156  012654  C0A4  F0B5         	movff	___fladd@b+2,___fladd@grs
 11157                           
 11158                           ; BSR set to: 0
 11159  012658  C0A8  F0A4         	movff	___fladd@a+2,___fladd@b+2
 11160                           
 11161                           ; BSR set to: 0
 11162  01265C  C0B5  F0A8         	movff	___fladd@grs,___fladd@a+2
 11163                           
 11164                           ; BSR set to: 0
 11165  012660  C0A5  F0B5         	movff	___fladd@b+3,___fladd@grs
 11166                           
 11167                           ; BSR set to: 0
 11168  012664  C0A9  F0A5         	movff	___fladd@a+3,___fladd@b+3
 11169                           
 11170                           ; BSR set to: 0
 11171  012668  C0B5  F0A9         	movff	___fladd@grs,___fladd@a+3
 11172  01266C                     l6638:
 11173                           
 11174                           ; BSR set to: 0
 11175  01266C  0E00               	movlw	0
 11176  01266E  0100               	movlb	0	; () banked
 11177  012670  6FB5               	movwf	___fladd@grs& (0+255),b
 11178                           
 11179                           ; BSR set to: 0
 11180  012672  0100               	movlb	0	; () banked
 11181  012674  51B4               	movf	___fladd@bexp& (0+255),w,b
 11182  012676  0100               	movlb	0	; () banked
 11183  012678  6FAA               	movwf	??___fladd& (0+255),b
 11184  01267A  6BAB               	clrf	(??___fladd+1)& (0+255),b
 11185  01267C  0100               	movlb	0	; () banked
 11186  01267E  1FAA               	comf	??___fladd& (0+255),f,b
 11187  012680  1FAB               	comf	(??___fladd+1)& (0+255),f,b
 11188  012682  4BAA               	infsnz	??___fladd& (0+255),f,b
 11189  012684  2BAB               	incf	(??___fladd+1)& (0+255),f,b
 11190  012686  0100               	movlb	0	; () banked
 11191  012688  51B3               	movf	___fladd@aexp& (0+255),w,b
 11192  01268A  0100               	movlb	0	; () banked
 11193  01268C  6FAC               	movwf	(??___fladd+2)& (0+255),b
 11194  01268E  6BAD               	clrf	(??___fladd+3)& (0+255),b
 11195  012690  0100               	movlb	0	; () banked
 11196  012692  51AA               	movf	??___fladd& (0+255),w,b
 11197  012694  0100               	movlb	0	; () banked
 11198  012696  27AC               	addwf	(??___fladd+2)& (0+255),f,b
 11199  012698  0100               	movlb	0	; () banked
 11200  01269A  51AB               	movf	(??___fladd+1)& (0+255),w,b
 11201  01269C  0100               	movlb	0	; () banked
 11202  01269E  23AD               	addwfc	(??___fladd+3)& (0+255),f,b
 11203  0126A0  0100               	movlb	0	; () banked
 11204  0126A2  BFAD               	btfsc	(??___fladd+3)& (0+255),7,b
 11205  0126A4  D03D               	goto	l1389
 11206  0126A6  0100               	movlb	0	; () banked
 11207  0126A8  51AD               	movf	(??___fladd+3)& (0+255),w,b
 11208  0126AA  E105               	bnz	u8230
 11209  0126AC  0E1A               	movlw	26
 11210  0126AE  0100               	movlb	0	; () banked
 11211  0126B0  5DAC               	subwf	(??___fladd+2)& (0+255),w,b
 11212  0126B2  A0D8               	btfss	status,0,c
 11213  0126B4  D035               	goto	l1389
 11214  0126B6                     u8230:
 11215                           
 11216                           ; BSR set to: 0
 11217  0126B6  0100               	movlb	0	; () banked
 11218  0126B8  51A2               	movf	___fladd@b& (0+255),w,b
 11219  0126BA  0100               	movlb	0	; () banked
 11220  0126BC  11A3               	iorwf	(___fladd@b+1)& (0+255),w,b
 11221  0126BE  0100               	movlb	0	; () banked
 11222  0126C0  11A4               	iorwf	(___fladd@b+2)& (0+255),w,b
 11223  0126C2  0100               	movlb	0	; () banked
 11224  0126C4  11A5               	iorwf	(___fladd@b+3)& (0+255),w,b
 11225  0126C6  B4D8               	btfsc	status,2,c
 11226  0126C8  D002               	goto	u8240
 11227  0126CA  0E01               	movlw	1
 11228  0126CC  D001               	goto	u8250
 11229  0126CE                     u8240:
 11230  0126CE  0E00               	movlw	0
 11231  0126D0                     u8250:
 11232  0126D0  0100               	movlb	0	; () banked
 11233  0126D2  6FB5               	movwf	___fladd@grs& (0+255),b
 11234                           
 11235                           ; BSR set to: 0
 11236  0126D4  0E00               	movlw	0
 11237  0126D6  0100               	movlb	0	; () banked
 11238  0126D8  6FA2               	movwf	___fladd@b& (0+255),b
 11239  0126DA  0E00               	movlw	0
 11240  0126DC  6FA3               	movwf	(___fladd@b+1)& (0+255),b
 11241  0126DE  0E00               	movlw	0
 11242  0126E0  6FA4               	movwf	(___fladd@b+2)& (0+255),b
 11243  0126E2  0E00               	movlw	0
 11244  0126E4  6FA5               	movwf	(___fladd@b+3)& (0+255),b
 11245                           
 11246                           ; BSR set to: 0
 11247  0126E6  C0B3  F0B4         	movff	___fladd@aexp,___fladd@bexp
 11248  0126EA  D020               	goto	l1388
 11249  0126EC                     l1390:
 11250                           
 11251                           ; BSR set to: 0
 11252  0126EC  0100               	movlb	0	; () banked
 11253  0126EE  A1B5               	btfss	___fladd@grs& (0+255),0,b
 11254  0126F0  D007               	goto	l6650
 11255                           
 11256                           ; BSR set to: 0
 11257  0126F2  0100               	movlb	0	; () banked
 11258  0126F4  90D8               	bcf	status,0,c
 11259  0126F6  31B5               	rrcf	___fladd@grs& (0+255),w,b
 11260  0126F8  0901               	iorlw	1
 11261  0126FA  0100               	movlb	0	; () banked
 11262  0126FC  6FB5               	movwf	___fladd@grs& (0+255),b
 11263  0126FE  D003               	goto	l6652
 11264  012700                     l6650:
 11265                           
 11266                           ; BSR set to: 0
 11267  012700  0100               	movlb	0	; () banked
 11268  012702  90D8               	bcf	status,0,c
 11269  012704  33B5               	rrcf	___fladd@grs& (0+255),f,b
 11270  012706                     l6652:
 11271                           
 11272                           ; BSR set to: 0
 11273  012706  0100               	movlb	0	; () banked
 11274  012708  A1A2               	btfss	___fladd@b& (0+255),0,b
 11275  01270A  D002               	goto	l6656
 11276                           
 11277                           ; BSR set to: 0
 11278  01270C  0100               	movlb	0	; () banked
 11279  01270E  8FB5               	bsf	___fladd@grs& (0+255),7,b
 11280  012710                     l6656:
 11281                           
 11282                           ; BSR set to: 0
 11283  012710  0100               	movlb	0	; () banked
 11284  012712  35A5               	rlcf	(___fladd@b+3)& (0+255),w,b
 11285  012714  33A5               	rrcf	(___fladd@b+3)& (0+255),f,b
 11286  012716  33A4               	rrcf	(___fladd@b+2)& (0+255),f,b
 11287  012718  33A3               	rrcf	(___fladd@b+1)& (0+255),f,b
 11288  01271A  33A2               	rrcf	___fladd@b& (0+255),f,b
 11289                           
 11290                           ; BSR set to: 0
 11291  01271C  0100               	movlb	0	; () banked
 11292  01271E  2BB4               	incf	___fladd@bexp& (0+255),f,b
 11293  012720                     l1389:
 11294                           
 11295                           ; BSR set to: 0
 11296  012720  0100               	movlb	0	; () banked
 11297  012722  51B3               	movf	___fladd@aexp& (0+255),w,b
 11298  012724  0100               	movlb	0	; () banked
 11299  012726  5DB4               	subwf	___fladd@bexp& (0+255),w,b
 11300  012728  A0D8               	btfss	status,0,c
 11301  01272A  D7E0               	goto	l1390
 11302  01272C                     l1388:
 11303                           
 11304                           ; BSR set to: 0
 11305  01272C  0100               	movlb	0	; () banked
 11306  01272E  BDB2               	btfsc	___fladd@signs& (0+255),6,b
 11307  012730  D03F               	goto	l6684
 11308                           
 11309                           ; BSR set to: 0
 11310  012732  0100               	movlb	0	; () banked
 11311  012734  51B4               	movf	___fladd@bexp& (0+255),w,b
 11312  012736  0100               	movlb	0	; () banked
 11313  012738  A4D8               	btfss	status,2,c
 11314  01273A  D00A               	goto	l6666
 11315                           
 11316                           ; BSR set to: 0
 11317  01273C  0E00               	movlw	0
 11318  01273E  0100               	movlb	0	; () banked
 11319  012740  6FA2               	movwf	?___fladd& (0+255),b
 11320  012742  0E00               	movlw	0
 11321  012744  6FA3               	movwf	(?___fladd+1)& (0+255),b
 11322  012746  0E00               	movlw	0
 11323  012748  6FA4               	movwf	(?___fladd+2)& (0+255),b
 11324  01274A  0E00               	movlw	0
 11325  01274C  6FA5               	movwf	(?___fladd+3)& (0+255),b
 11326                           
 11327                           ; BSR set to: 0
 11328  01274E  0012               	return	
 11329  012750                     l6666:
 11330                           
 11331                           ; BSR set to: 0
 11332  012750  0100               	movlb	0	; () banked
 11333  012752  51A6               	movf	___fladd@a& (0+255),w,b
 11334  012754  0100               	movlb	0	; () banked
 11335  012756  27A2               	addwf	___fladd@b& (0+255),f,b
 11336  012758  0100               	movlb	0	; () banked
 11337  01275A  51A7               	movf	(___fladd@a+1)& (0+255),w,b
 11338  01275C  0100               	movlb	0	; () banked
 11339  01275E  23A3               	addwfc	(___fladd@b+1)& (0+255),f,b
 11340  012760  0100               	movlb	0	; () banked
 11341  012762  51A8               	movf	(___fladd@a+2)& (0+255),w,b
 11342  012764  0100               	movlb	0	; () banked
 11343  012766  23A4               	addwfc	(___fladd@b+2)& (0+255),f,b
 11344  012768  0100               	movlb	0	; () banked
 11345  01276A  51A9               	movf	(___fladd@a+3)& (0+255),w,b
 11346  01276C  0100               	movlb	0	; () banked
 11347  01276E  23A5               	addwfc	(___fladd@b+3)& (0+255),f,b
 11348                           
 11349                           ; BSR set to: 0
 11350  012770  0100               	movlb	0	; () banked
 11351  012772  A1A5               	btfss	(___fladd@b+3)& (0+255),0,b
 11352  012774  D0CC               	goto	l6720
 11353                           
 11354                           ; BSR set to: 0
 11355  012776  0100               	movlb	0	; () banked
 11356  012778  A1B5               	btfss	___fladd@grs& (0+255),0,b
 11357  01277A  D009               	goto	l6674
 11358                           
 11359                           ; BSR set to: 0
 11360  01277C  0100               	movlb	0	; () banked
 11361  01277E  90D8               	bcf	status,0,c
 11362  012780  33B5               	rrcf	___fladd@grs& (0+255),f,b
 11363  012782  0100               	movlb	0	; () banked
 11364  012784  51B5               	movf	___fladd@grs& (0+255),w,b
 11365  012786  0901               	iorlw	1
 11366  012788  0100               	movlb	0	; () banked
 11367  01278A  6FB5               	movwf	___fladd@grs& (0+255),b
 11368  01278C  D003               	goto	l6676
 11369  01278E                     l6674:
 11370                           
 11371                           ; BSR set to: 0
 11372  01278E  0100               	movlb	0	; () banked
 11373  012790  90D8               	bcf	status,0,c
 11374  012792  33B5               	rrcf	___fladd@grs& (0+255),f,b
 11375  012794                     l6676:
 11376                           
 11377                           ; BSR set to: 0
 11378  012794  0100               	movlb	0	; () banked
 11379  012796  A1A2               	btfss	___fladd@b& (0+255),0,b
 11380  012798  D002               	goto	l6680
 11381                           
 11382                           ; BSR set to: 0
 11383  01279A  0100               	movlb	0	; () banked
 11384  01279C  8FB5               	bsf	___fladd@grs& (0+255),7,b
 11385  01279E                     l6680:
 11386                           
 11387                           ; BSR set to: 0
 11388  01279E  0100               	movlb	0	; () banked
 11389  0127A0  35A5               	rlcf	(___fladd@b+3)& (0+255),w,b
 11390  0127A2  33A5               	rrcf	(___fladd@b+3)& (0+255),f,b
 11391  0127A4  33A4               	rrcf	(___fladd@b+2)& (0+255),f,b
 11392  0127A6  33A3               	rrcf	(___fladd@b+1)& (0+255),f,b
 11393  0127A8  33A2               	rrcf	___fladd@b& (0+255),f,b
 11394                           
 11395                           ; BSR set to: 0
 11396  0127AA  0100               	movlb	0	; () banked
 11397  0127AC  2BB4               	incf	___fladd@bexp& (0+255),f,b
 11398                           
 11399                           ; BSR set to: 0
 11400  0127AE  D0AF               	goto	l6720
 11401  0127B0                     l6684:
 11402                           
 11403                           ; BSR set to: 0
 11404  0127B0  0100               	movlb	0	; () banked
 11405  0127B2  51A6               	movf	___fladd@a& (0+255),w,b
 11406  0127B4  0100               	movlb	0	; () banked
 11407  0127B6  5DA2               	subwf	___fladd@b& (0+255),w,b
 11408  0127B8  0100               	movlb	0	; () banked
 11409  0127BA  51A7               	movf	(___fladd@a+1)& (0+255),w,b
 11410  0127BC  0100               	movlb	0	; () banked
 11411  0127BE  59A3               	subwfb	(___fladd@b+1)& (0+255),w,b
 11412  0127C0  0100               	movlb	0	; () banked
 11413  0127C2  51A8               	movf	(___fladd@a+2)& (0+255),w,b
 11414  0127C4  0100               	movlb	0	; () banked
 11415  0127C6  59A4               	subwfb	(___fladd@b+2)& (0+255),w,b
 11416  0127C8  0100               	movlb	0	; () banked
 11417  0127CA  51A5               	movf	(___fladd@b+3)& (0+255),w,b
 11418  0127CC  0A80               	xorlw	128
 11419  0127CE  0100               	movlb	0	; () banked
 11420  0127D0  6FAA               	movwf	??___fladd& (0+255),b
 11421  0127D2  0100               	movlb	0	; () banked
 11422  0127D4  51A9               	movf	(___fladd@a+3)& (0+255),w,b
 11423  0127D6  0A80               	xorlw	128
 11424  0127D8  0100               	movlb	0	; () banked
 11425  0127DA  59AA               	subwfb	??___fladd& (0+255),w,b
 11426  0127DC  B0D8               	btfsc	status,0,c
 11427  0127DE  D050               	goto	l6694
 11428                           
 11429                           ; BSR set to: 0
 11430  0127E0  C0A2  F0AA         	movff	___fladd@b,??___fladd
 11431  0127E4  C0A3  F0AB         	movff	___fladd@b+1,??___fladd+1
 11432  0127E8  C0A4  F0AC         	movff	___fladd@b+2,??___fladd+2
 11433  0127EC  C0A5  F0AD         	movff	___fladd@b+3,??___fladd+3
 11434  0127F0  0100               	movlb	0	; () banked
 11435  0127F2  1FAA               	comf	??___fladd& (0+255),f,b
 11436  0127F4  1FAB               	comf	(??___fladd+1)& (0+255),f,b
 11437  0127F6  1FAC               	comf	(??___fladd+2)& (0+255),f,b
 11438  0127F8  1FAD               	comf	(??___fladd+3)& (0+255),f,b
 11439  0127FA  2BAA               	incf	??___fladd& (0+255),f,b
 11440  0127FC  0E00               	movlw	0
 11441  0127FE  23AB               	addwfc	(??___fladd+1)& (0+255),f,b
 11442  012800  23AC               	addwfc	(??___fladd+2)& (0+255),f,b
 11443  012802  23AD               	addwfc	(??___fladd+3)& (0+255),f,b
 11444  012804  0100               	movlb	0	; () banked
 11445  012806  51A6               	movf	___fladd@a& (0+255),w,b
 11446  012808  0100               	movlb	0	; () banked
 11447  01280A  25AA               	addwf	??___fladd& (0+255),w,b
 11448  01280C  0100               	movlb	0	; () banked
 11449  01280E  6FAE               	movwf	(??___fladd+4)& (0+255),b
 11450  012810  0100               	movlb	0	; () banked
 11451  012812  51A7               	movf	(___fladd@a+1)& (0+255),w,b
 11452  012814  0100               	movlb	0	; () banked
 11453  012816  21AB               	addwfc	(??___fladd+1)& (0+255),w,b
 11454  012818  0100               	movlb	0	; () banked
 11455  01281A  6FAF               	movwf	(??___fladd+5)& (0+255),b
 11456  01281C  0100               	movlb	0	; () banked
 11457  01281E  51A8               	movf	(___fladd@a+2)& (0+255),w,b
 11458  012820  0100               	movlb	0	; () banked
 11459  012822  21AC               	addwfc	(??___fladd+2)& (0+255),w,b
 11460  012824  0100               	movlb	0	; () banked
 11461  012826  6FB0               	movwf	(??___fladd+6)& (0+255),b
 11462  012828  0100               	movlb	0	; () banked
 11463  01282A  51A9               	movf	(___fladd@a+3)& (0+255),w,b
 11464  01282C  0100               	movlb	0	; () banked
 11465  01282E  21AD               	addwfc	(??___fladd+3)& (0+255),w,b
 11466  012830  0100               	movlb	0	; () banked
 11467  012832  6FB1               	movwf	(??___fladd+7)& (0+255),b
 11468  012834  0EFF               	movlw	255
 11469  012836  0100               	movlb	0	; () banked
 11470  012838  25AE               	addwf	(??___fladd+4)& (0+255),w,b
 11471  01283A  0100               	movlb	0	; () banked
 11472  01283C  6FA2               	movwf	___fladd@b& (0+255),b
 11473  01283E  0EFF               	movlw	255
 11474  012840  0100               	movlb	0	; () banked
 11475  012842  21AF               	addwfc	(??___fladd+5)& (0+255),w,b
 11476  012844  0100               	movlb	0	; () banked
 11477  012846  6FA3               	movwf	(___fladd@b+1)& (0+255),b
 11478  012848  0EFF               	movlw	255
 11479  01284A  0100               	movlb	0	; () banked
 11480  01284C  21B0               	addwfc	(??___fladd+6)& (0+255),w,b
 11481  01284E  0100               	movlb	0	; () banked
 11482  012850  6FA4               	movwf	(___fladd@b+2)& (0+255),b
 11483  012852  0EFF               	movlw	255
 11484  012854  0100               	movlb	0	; () banked
 11485  012856  21B1               	addwfc	(??___fladd+7)& (0+255),w,b
 11486  012858  0100               	movlb	0	; () banked
 11487  01285A  6FA5               	movwf	(___fladd@b+3)& (0+255),b
 11488  01285C  0E80               	movlw	128
 11489  01285E  0100               	movlb	0	; () banked
 11490  012860  1BB2               	xorwf	___fladd@signs& (0+255),f,b
 11491                           
 11492                           ; BSR set to: 0
 11493  012862  0100               	movlb	0	; () banked
 11494  012864  6DB5               	negf	___fladd@grs& (0+255),b
 11495                           
 11496                           ; BSR set to: 0
 11497  012866  0100               	movlb	0	; () banked
 11498  012868  51B5               	movf	___fladd@grs& (0+255),w,b
 11499  01286A  0100               	movlb	0	; () banked
 11500  01286C  A4D8               	btfss	status,2,c
 11501  01286E  D018               	goto	l1405
 11502                           
 11503                           ; BSR set to: 0
 11504  012870  0E01               	movlw	1
 11505  012872  0100               	movlb	0	; () banked
 11506  012874  27A2               	addwf	___fladd@b& (0+255),f,b
 11507  012876  0E00               	movlw	0
 11508  012878  23A3               	addwfc	(___fladd@b+1)& (0+255),f,b
 11509  01287A  23A4               	addwfc	(___fladd@b+2)& (0+255),f,b
 11510  01287C  23A5               	addwfc	(___fladd@b+3)& (0+255),f,b
 11511                           
 11512                           ; BSR set to: 0
 11513  01287E  D010               	goto	l1405
 11514  012880                     l6694:
 11515                           
 11516                           ; BSR set to: 0
 11517  012880  0100               	movlb	0	; () banked
 11518  012882  51A6               	movf	___fladd@a& (0+255),w,b
 11519  012884  0100               	movlb	0	; () banked
 11520  012886  5FA2               	subwf	___fladd@b& (0+255),f,b
 11521  012888  0100               	movlb	0	; () banked
 11522  01288A  51A7               	movf	(___fladd@a+1)& (0+255),w,b
 11523  01288C  0100               	movlb	0	; () banked
 11524  01288E  5BA3               	subwfb	(___fladd@b+1)& (0+255),f,b
 11525  012890  0100               	movlb	0	; () banked
 11526  012892  51A8               	movf	(___fladd@a+2)& (0+255),w,b
 11527  012894  0100               	movlb	0	; () banked
 11528  012896  5BA4               	subwfb	(___fladd@b+2)& (0+255),f,b
 11529  012898  0100               	movlb	0	; () banked
 11530  01289A  51A9               	movf	(___fladd@a+3)& (0+255),w,b
 11531  01289C  0100               	movlb	0	; () banked
 11532  01289E  5BA5               	subwfb	(___fladd@b+3)& (0+255),f,b
 11533  0128A0                     l1405:
 11534                           
 11535                           ; BSR set to: 0
 11536  0128A0  0100               	movlb	0	; () banked
 11537  0128A2  51A2               	movf	___fladd@b& (0+255),w,b
 11538  0128A4  0100               	movlb	0	; () banked
 11539  0128A6  11A3               	iorwf	(___fladd@b+1)& (0+255),w,b
 11540  0128A8  0100               	movlb	0	; () banked
 11541  0128AA  11A4               	iorwf	(___fladd@b+2)& (0+255),w,b
 11542  0128AC  0100               	movlb	0	; () banked
 11543  0128AE  11A5               	iorwf	(___fladd@b+3)& (0+255),w,b
 11544  0128B0  A4D8               	btfss	status,2,c
 11545  0128B2  D02A               	goto	l6718
 11546                           
 11547                           ; BSR set to: 0
 11548  0128B4  0100               	movlb	0	; () banked
 11549  0128B6  51B5               	movf	___fladd@grs& (0+255),w,b
 11550  0128B8  0100               	movlb	0	; () banked
 11551  0128BA  A4D8               	btfss	status,2,c
 11552  0128BC  D025               	goto	l6718
 11553                           
 11554                           ; BSR set to: 0
 11555  0128BE  0E00               	movlw	0
 11556  0128C0  0100               	movlb	0	; () banked
 11557  0128C2  6FA2               	movwf	?___fladd& (0+255),b
 11558  0128C4  0E00               	movlw	0
 11559  0128C6  6FA3               	movwf	(?___fladd+1)& (0+255),b
 11560  0128C8  0E00               	movlw	0
 11561  0128CA  6FA4               	movwf	(?___fladd+2)& (0+255),b
 11562  0128CC  0E00               	movlw	0
 11563  0128CE  6FA5               	movwf	(?___fladd+3)& (0+255),b
 11564                           
 11565                           ; BSR set to: 0
 11566  0128D0  0012               	return	
 11567  0128D2                     l6702:
 11568                           
 11569                           ; BSR set to: 0
 11570  0128D2  0100               	movlb	0	; () banked
 11571  0128D4  90D8               	bcf	status,0,c
 11572  0128D6  37A2               	rlcf	___fladd@b& (0+255),f,b
 11573  0128D8  37A3               	rlcf	(___fladd@b+1)& (0+255),f,b
 11574  0128DA  37A4               	rlcf	(___fladd@b+2)& (0+255),f,b
 11575  0128DC  37A5               	rlcf	(___fladd@b+3)& (0+255),f,b
 11576                           
 11577                           ; BSR set to: 0
 11578  0128DE  0100               	movlb	0	; () banked
 11579  0128E0  AFB5               	btfss	___fladd@grs& (0+255),7,b
 11580  0128E2  D002               	goto	l6708
 11581                           
 11582                           ; BSR set to: 0
 11583  0128E4  0100               	movlb	0	; () banked
 11584  0128E6  81A2               	bsf	___fladd@b& (0+255),0,b
 11585  0128E8                     l6708:
 11586                           
 11587                           ; BSR set to: 0
 11588  0128E8  0100               	movlb	0	; () banked
 11589  0128EA  A1B5               	btfss	___fladd@grs& (0+255),0,b
 11590  0128EC  D003               	goto	l6712
 11591                           
 11592                           ; BSR set to: 0
 11593  0128EE  80D8               	bsf	status,0,c
 11594  0128F0  0100               	movlb	0	; () banked
 11595  0128F2  D002               	goto	L11
 11596  0128F4                     l6712:
 11597                           
 11598                           ; BSR set to: 0
 11599  0128F4  0100               	movlb	0	; () banked
 11600  0128F6  90D8               	bcf	status,0,c
 11601  0128F8                     L11:
 11602  0128F8  37B5               	rlcf	___fladd@grs& (0+255),f,b
 11603                           
 11604                           ; BSR set to: 0
 11605                           
 11606                           ; BSR set to: 0
 11607  0128FA  0100               	movlb	0	; () banked
 11608  0128FC  51B4               	movf	___fladd@bexp& (0+255),w,b
 11609  0128FE  0100               	movlb	0	; () banked
 11610  012900  B4D8               	btfsc	status,2,c
 11611  012902  D002               	goto	l6718
 11612                           
 11613                           ; BSR set to: 0
 11614  012904  0100               	movlb	0	; () banked
 11615  012906  07B4               	decf	___fladd@bexp& (0+255),f,b
 11616  012908                     l6718:
 11617                           
 11618                           ; BSR set to: 0
 11619  012908  0100               	movlb	0	; () banked
 11620  01290A  AFA4               	btfss	(___fladd@b+2)& (0+255),7,b
 11621  01290C  D7E2               	goto	l6702
 11622  01290E                     l6720:
 11623                           
 11624                           ; BSR set to: 0
 11625  01290E  0E00               	movlw	0
 11626  012910  0100               	movlb	0	; () banked
 11627  012912  6FB3               	movwf	___fladd@aexp& (0+255),b
 11628                           
 11629                           ; BSR set to: 0
 11630  012914  0100               	movlb	0	; () banked
 11631  012916  AFB5               	btfss	___fladd@grs& (0+255),7,b
 11632  012918  D00D               	goto	l1414
 11633                           
 11634                           ; BSR set to: 0
 11635  01291A  C0B5  F0AA         	movff	___fladd@grs,??___fladd
 11636  01291E  0E7F               	movlw	127
 11637  012920  0100               	movlb	0	; () banked
 11638  012922  17AA               	andwf	??___fladd& (0+255),f,b
 11639  012924  A4D8               	btfss	status,2,c
 11640  012926  D003               	goto	l6728
 11641                           
 11642                           ; BSR set to: 0
 11643                           
 11644                           ; BSR set to: 0
 11645  012928  0100               	movlb	0	; () banked
 11646  01292A  A1A2               	btfss	___fladd@b& (0+255),0,b
 11647  01292C  D003               	goto	l1414
 11648  01292E                     l6728:
 11649                           
 11650                           ; BSR set to: 0
 11651  01292E  0E01               	movlw	1
 11652  012930  0100               	movlb	0	; () banked
 11653  012932  6FB3               	movwf	___fladd@aexp& (0+255),b
 11654  012934                     l1414:
 11655                           
 11656                           ; BSR set to: 0
 11657  012934  0100               	movlb	0	; () banked
 11658  012936  51B3               	movf	___fladd@aexp& (0+255),w,b
 11659  012938  0100               	movlb	0	; () banked
 11660  01293A  B4D8               	btfsc	status,2,c
 11661  01293C  D026               	goto	l6738
 11662                           
 11663                           ; BSR set to: 0
 11664  01293E  0E01               	movlw	1
 11665  012940  0100               	movlb	0	; () banked
 11666  012942  27A2               	addwf	___fladd@b& (0+255),f,b
 11667  012944  0E00               	movlw	0
 11668  012946  23A3               	addwfc	(___fladd@b+1)& (0+255),f,b
 11669  012948  23A4               	addwfc	(___fladd@b+2)& (0+255),f,b
 11670  01294A  23A5               	addwfc	(___fladd@b+3)& (0+255),f,b
 11671                           
 11672                           ; BSR set to: 0
 11673  01294C  0100               	movlb	0	; () banked
 11674  01294E  A1A5               	btfss	(___fladd@b+3)& (0+255),0,b
 11675  012950  D01C               	goto	l6738
 11676                           
 11677                           ; BSR set to: 0
 11678  012952  C0A2  F0AA         	movff	___fladd@b,??___fladd
 11679  012956  C0A3  F0AB         	movff	___fladd@b+1,??___fladd+1
 11680  01295A  C0A4  F0AC         	movff	___fladd@b+2,??___fladd+2
 11681  01295E  C0A5  F0AD         	movff	___fladd@b+3,??___fladd+3
 11682  012962  0100               	movlb	0	; () banked
 11683  012964  35AD               	rlcf	(??___fladd+3)& (0+255),w,b
 11684  012966  33AD               	rrcf	(??___fladd+3)& (0+255),f,b
 11685  012968  33AC               	rrcf	(??___fladd+2)& (0+255),f,b
 11686  01296A  33AB               	rrcf	(??___fladd+1)& (0+255),f,b
 11687  01296C  33AA               	rrcf	??___fladd& (0+255),f,b
 11688  01296E  C0AA  F0A2         	movff	??___fladd,___fladd@b
 11689  012972  C0AB  F0A3         	movff	??___fladd+1,___fladd@b+1
 11690  012976  C0AC  F0A4         	movff	??___fladd+2,___fladd@b+2
 11691  01297A  C0AD  F0A5         	movff	??___fladd+3,___fladd@b+3
 11692  01297E  0100               	movlb	0	; () banked
 11693  012980  29B4               	incf	___fladd@bexp& (0+255),w,b
 11694  012982  B4D8               	btfsc	status,2,c
 11695  012984  D002               	goto	l6738
 11696                           
 11697                           ; BSR set to: 0
 11698  012986  0100               	movlb	0	; () banked
 11699  012988  2BB4               	incf	___fladd@bexp& (0+255),f,b
 11700  01298A                     l6738:
 11701                           
 11702                           ; BSR set to: 0
 11703  01298A  0100               	movlb	0	; () banked
 11704  01298C  29B4               	incf	___fladd@bexp& (0+255),w,b
 11705  01298E  B4D8               	btfsc	status,2,c
 11706  012990  D005               	goto	l6742
 11707                           
 11708                           ; BSR set to: 0
 11709  012992  0100               	movlb	0	; () banked
 11710  012994  51B4               	movf	___fladd@bexp& (0+255),w,b
 11711  012996  0100               	movlb	0	; () banked
 11712  012998  A4D8               	btfss	status,2,c
 11713  01299A  D011               	goto	l6746
 11714  01299C                     l6742:
 11715                           
 11716                           ; BSR set to: 0
 11717  01299C  0E00               	movlw	0
 11718  01299E  0100               	movlb	0	; () banked
 11719  0129A0  6FA2               	movwf	___fladd@b& (0+255),b
 11720  0129A2  0E00               	movlw	0
 11721  0129A4  6FA3               	movwf	(___fladd@b+1)& (0+255),b
 11722  0129A6  0E00               	movlw	0
 11723  0129A8  6FA4               	movwf	(___fladd@b+2)& (0+255),b
 11724  0129AA  0E00               	movlw	0
 11725  0129AC  6FA5               	movwf	(___fladd@b+3)& (0+255),b
 11726  0129AE  0100               	movlb	0	; () banked
 11727  0129B0  51B4               	movf	___fladd@bexp& (0+255),w,b
 11728  0129B2  0100               	movlb	0	; () banked
 11729  0129B4  A4D8               	btfss	status,2,c
 11730  0129B6  D003               	goto	l6746
 11731                           
 11732                           ; BSR set to: 0
 11733  0129B8  0E00               	movlw	0
 11734  0129BA  0100               	movlb	0	; () banked
 11735  0129BC  6FB2               	movwf	___fladd@signs& (0+255),b
 11736  0129BE                     l6746:
 11737                           
 11738                           ; BSR set to: 0
 11739  0129BE  0100               	movlb	0	; () banked
 11740  0129C0  A1B4               	btfss	___fladd@bexp& (0+255),0,b
 11741  0129C2  D003               	goto	l6750
 11742                           
 11743                           ; BSR set to: 0
 11744  0129C4  0100               	movlb	0	; () banked
 11745  0129C6  8FA4               	bsf	(___fladd@b+2)& (0+255),7,b
 11746  0129C8  D002               	goto	l6752
 11747  0129CA                     l6750:
 11748                           
 11749                           ; BSR set to: 0
 11750  0129CA  0100               	movlb	0	; () banked
 11751  0129CC  9FA4               	bcf	(___fladd@b+2)& (0+255),7,b
 11752  0129CE                     l6752:
 11753                           
 11754                           ; BSR set to: 0
 11755  0129CE  0100               	movlb	0	; () banked
 11756  0129D0  90D8               	bcf	status,0,c
 11757  0129D2  31B4               	rrcf	___fladd@bexp& (0+255),w,b
 11758  0129D4  0100               	movlb	0	; () banked
 11759  0129D6  6FA5               	movwf	(___fladd@b+3)& (0+255),b
 11760                           
 11761                           ; BSR set to: 0
 11762  0129D8  0100               	movlb	0	; () banked
 11763  0129DA  AFB2               	btfss	___fladd@signs& (0+255),7,b
 11764  0129DC  D002               	goto	l6758
 11765                           
 11766                           ; BSR set to: 0
 11767  0129DE  0100               	movlb	0	; () banked
 11768  0129E0  8FA5               	bsf	(___fladd@b+3)& (0+255),7,b
 11769  0129E2                     l6758:
 11770                           
 11771                           ; BSR set to: 0
 11772  0129E2  C0A2  F0A2         	movff	___fladd@b,?___fladd
 11773  0129E6  C0A3  F0A3         	movff	___fladd@b+1,?___fladd+1
 11774  0129EA  C0A4  F0A4         	movff	___fladd@b+2,?___fladd+2
 11775  0129EE  C0A5  F0A5         	movff	___fladd@b+3,?___fladd+3
 11776  0129F2  0012               	return	
 11777  0129F4                     __end_of___fladd:
 11778                           	opt stack 0
 11779                           tblptru	equ	0xFF8
 11780                           tblptrh	equ	0xFF7
 11781                           tblptrl	equ	0xFF6
 11782                           tablat	equ	0xFF5
 11783                           prodh	equ	0xFF4
 11784                           prodl	equ	0xFF3
 11785                           intcon	equ	0xFF2
 11786                           postinc0	equ	0xFEE
 11787                           wreg	equ	0xFE8
 11788                           indf2	equ	0xFDF
 11789                           postinc2	equ	0xFDE
 11790                           fsr2h	equ	0xFDA
 11791                           fsr2l	equ	0xFD9
 11792                           status	equ	0xFD8
 11793                           
 11794 ;; *************** function ___flneg *****************
 11795 ;; Defined at:
 11796 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
 11797 ;; Parameters:    Size  Location     Type
 11798 ;;  f1              4   14[BANK0 ] unsigned char 
 11799 ;; Auto vars:     Size  Location     Type
 11800 ;;		None
 11801 ;; Return value:  Size  Location     Type
 11802 ;;                  4   14[BANK0 ] unsigned char 
 11803 ;; Registers used:
 11804 ;;		wreg, status,2, status,0
 11805 ;; Tracked objects:
 11806 ;;		On entry : 0/0
 11807 ;;		On exit  : 0/0
 11808 ;;		Unchanged: 0/0
 11809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11810 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11813 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11814 ;;Total ram usage:        4 bytes
 11815 ;; Hardware stack levels used:    1
 11816 ;; Hardware stack levels required when called:    3
 11817 ;; This function calls:
 11818 ;;		Nothing
 11819 ;; This function is called by:
 11820 ;;		_sprintf
 11821 ;; This function uses a non-reentrant model
 11822 ;;
 11823                           
 11824                           	psect	text26
 11825  0151AE                     __ptext26:
 11826                           	opt stack 0
 11827  0151AE                     ___flneg:
 11828                           	opt stack 25
 11829                           
 11830                           ; BSR set to: 0
 11831                           ;incstack = 0
 11832  0151AE  0100               	movlb	0	; () banked
 11833  0151B0  516E               	movf	___flneg@f1& (0+255),w,b
 11834  0151B2  0100               	movlb	0	; () banked
 11835  0151B4  116F               	iorwf	(___flneg@f1+1)& (0+255),w,b
 11836  0151B6  0100               	movlb	0	; () banked
 11837  0151B8  1170               	iorwf	(___flneg@f1+2)& (0+255),w,b
 11838  0151BA  0100               	movlb	0	; () banked
 11839  0151BC  1171               	iorwf	(___flneg@f1+3)& (0+255),w,b
 11840  0151BE  B4D8               	btfsc	status,2,c
 11841  0151C0  D009               	goto	l7628
 11842                           
 11843                           ; BSR set to: 0
 11844  0151C2  0E00               	movlw	0
 11845  0151C4  0100               	movlb	0	; () banked
 11846  0151C6  1B6E               	xorwf	___flneg@f1& (0+255),f,b
 11847  0151C8  0E00               	movlw	0
 11848  0151CA  1B6F               	xorwf	(___flneg@f1+1)& (0+255),f,b
 11849  0151CC  0E00               	movlw	0
 11850  0151CE  1B70               	xorwf	(___flneg@f1+2)& (0+255),f,b
 11851  0151D0  0E80               	movlw	128
 11852  0151D2  1B71               	xorwf	(___flneg@f1+3)& (0+255),f,b
 11853  0151D4                     l7628:
 11854                           
 11855                           ; BSR set to: 0
 11856  0151D4  C06E  F06E         	movff	___flneg@f1,?___flneg
 11857  0151D8  C06F  F06F         	movff	___flneg@f1+1,?___flneg+1
 11858  0151DC  C070  F070         	movff	___flneg@f1+2,?___flneg+2
 11859  0151E0  C071  F071         	movff	___flneg@f1+3,?___flneg+3
 11860  0151E4  0012               	return	
 11861  0151E6                     __end_of___flneg:
 11862                           	opt stack 0
 11863                           tblptru	equ	0xFF8
 11864                           tblptrh	equ	0xFF7
 11865                           tblptrl	equ	0xFF6
 11866                           tablat	equ	0xFF5
 11867                           prodh	equ	0xFF4
 11868                           prodl	equ	0xFF3
 11869                           intcon	equ	0xFF2
 11870                           postinc0	equ	0xFEE
 11871                           wreg	equ	0xFE8
 11872                           indf2	equ	0xFDF
 11873                           postinc2	equ	0xFDE
 11874                           fsr2h	equ	0xFDA
 11875                           fsr2l	equ	0xFD9
 11876                           status	equ	0xFD8
 11877                           
 11878 ;; *************** function ___flge *****************
 11879 ;; Defined at:
 11880 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
 11881 ;; Parameters:    Size  Location     Type
 11882 ;;  ff1             4   14[BANK0 ] unsigned char 
 11883 ;;  ff2             4   18[BANK0 ] unsigned char 
 11884 ;; Auto vars:     Size  Location     Type
 11885 ;;		None
 11886 ;; Return value:  Size  Location     Type
 11887 ;;		None               void
 11888 ;; Registers used:
 11889 ;;		wreg, status,2, status,0
 11890 ;; Tracked objects:
 11891 ;;		On entry : 0/0
 11892 ;;		On exit  : 0/0
 11893 ;;		Unchanged: 0/0
 11894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11895 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11897 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11898 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11899 ;;Total ram usage:       12 bytes
 11900 ;; Hardware stack levels used:    1
 11901 ;; Hardware stack levels required when called:    3
 11902 ;; This function calls:
 11903 ;;		Nothing
 11904 ;; This function is called by:
 11905 ;;		_sprintf
 11906 ;; This function uses a non-reentrant model
 11907 ;;
 11908                           
 11909                           	psect	text27
 11910  014216                     __ptext27:
 11911                           	opt stack 0
 11912  014216                     ___flge:
 11913                           	opt stack 25
 11914                           
 11915                           ; BSR set to: 0
 11916                           ;incstack = 0
 11917  014216  0E00               	movlw	0
 11918  014218  0100               	movlb	0	; () banked
 11919  01421A  156E               	andwf	___flge@ff1& (0+255),w,b
 11920  01421C  0100               	movlb	0	; () banked
 11921  01421E  6F76               	movwf	??___flge& (0+255),b
 11922  014220  0E00               	movlw	0
 11923  014222  0100               	movlb	0	; () banked
 11924  014224  156F               	andwf	(___flge@ff1+1)& (0+255),w,b
 11925  014226  0100               	movlb	0	; () banked
 11926  014228  6F77               	movwf	(??___flge+1)& (0+255),b
 11927  01422A  0E80               	movlw	128
 11928  01422C  0100               	movlb	0	; () banked
 11929  01422E  1570               	andwf	(___flge@ff1+2)& (0+255),w,b
 11930  014230  0100               	movlb	0	; () banked
 11931  014232  6F78               	movwf	(??___flge+2)& (0+255),b
 11932  014234  0E7F               	movlw	127
 11933  014236  0100               	movlb	0	; () banked
 11934  014238  1571               	andwf	(___flge@ff1+3)& (0+255),w,b
 11935  01423A  0100               	movlb	0	; () banked
 11936  01423C  6F79               	movwf	(??___flge+3)& (0+255),b
 11937  01423E  0100               	movlb	0	; () banked
 11938  014240  5176               	movf	??___flge& (0+255),w,b
 11939  014242  0100               	movlb	0	; () banked
 11940  014244  1177               	iorwf	(??___flge+1)& (0+255),w,b
 11941  014246  0100               	movlb	0	; () banked
 11942  014248  1178               	iorwf	(??___flge+2)& (0+255),w,b
 11943  01424A  0100               	movlb	0	; () banked
 11944  01424C  1179               	iorwf	(??___flge+3)& (0+255),w,b
 11945  01424E  A4D8               	btfss	status,2,c
 11946  014250  D009               	goto	l7606
 11947                           
 11948                           ; BSR set to: 0
 11949  014252  0E00               	movlw	0
 11950  014254  0100               	movlb	0	; () banked
 11951  014256  6F6E               	movwf	___flge@ff1& (0+255),b
 11952  014258  0E00               	movlw	0
 11953  01425A  6F6F               	movwf	(___flge@ff1+1)& (0+255),b
 11954  01425C  0E00               	movlw	0
 11955  01425E  6F70               	movwf	(___flge@ff1+2)& (0+255),b
 11956  014260  0E00               	movlw	0
 11957  014262  6F71               	movwf	(___flge@ff1+3)& (0+255),b
 11958  014264                     l7606:
 11959                           
 11960                           ; BSR set to: 0
 11961  014264  0E00               	movlw	0
 11962  014266  0100               	movlb	0	; () banked
 11963  014268  1572               	andwf	___flge@ff2& (0+255),w,b
 11964  01426A  0100               	movlb	0	; () banked
 11965  01426C  6F76               	movwf	??___flge& (0+255),b
 11966  01426E  0E00               	movlw	0
 11967  014270  0100               	movlb	0	; () banked
 11968  014272  1573               	andwf	(___flge@ff2+1)& (0+255),w,b
 11969  014274  0100               	movlb	0	; () banked
 11970  014276  6F77               	movwf	(??___flge+1)& (0+255),b
 11971  014278  0E80               	movlw	128
 11972  01427A  0100               	movlb	0	; () banked
 11973  01427C  1574               	andwf	(___flge@ff2+2)& (0+255),w,b
 11974  01427E  0100               	movlb	0	; () banked
 11975  014280  6F78               	movwf	(??___flge+2)& (0+255),b
 11976  014282  0E7F               	movlw	127
 11977  014284  0100               	movlb	0	; () banked
 11978  014286  1575               	andwf	(___flge@ff2+3)& (0+255),w,b
 11979  014288  0100               	movlb	0	; () banked
 11980  01428A  6F79               	movwf	(??___flge+3)& (0+255),b
 11981  01428C  0100               	movlb	0	; () banked
 11982  01428E  5176               	movf	??___flge& (0+255),w,b
 11983  014290  0100               	movlb	0	; () banked
 11984  014292  1177               	iorwf	(??___flge+1)& (0+255),w,b
 11985  014294  0100               	movlb	0	; () banked
 11986  014296  1178               	iorwf	(??___flge+2)& (0+255),w,b
 11987  014298  0100               	movlb	0	; () banked
 11988  01429A  1179               	iorwf	(??___flge+3)& (0+255),w,b
 11989  01429C  A4D8               	btfss	status,2,c
 11990  01429E  D009               	goto	l7610
 11991                           
 11992                           ; BSR set to: 0
 11993  0142A0  0E00               	movlw	0
 11994  0142A2  0100               	movlb	0	; () banked
 11995  0142A4  6F72               	movwf	___flge@ff2& (0+255),b
 11996  0142A6  0E00               	movlw	0
 11997  0142A8  6F73               	movwf	(___flge@ff2+1)& (0+255),b
 11998  0142AA  0E00               	movlw	0
 11999  0142AC  6F74               	movwf	(___flge@ff2+2)& (0+255),b
 12000  0142AE  0E00               	movlw	0
 12001  0142B0  6F75               	movwf	(___flge@ff2+3)& (0+255),b
 12002  0142B2                     l7610:
 12003                           
 12004                           ; BSR set to: 0
 12005  0142B2  0100               	movlb	0	; () banked
 12006  0142B4  AF71               	btfss	(___flge@ff1+3)& (0+255),7,b
 12007  0142B6  D026               	goto	l7614
 12008                           
 12009                           ; BSR set to: 0
 12010  0142B8  C06E  F076         	movff	___flge@ff1,??___flge
 12011  0142BC  C06F  F077         	movff	___flge@ff1+1,??___flge+1
 12012  0142C0  C070  F078         	movff	___flge@ff1+2,??___flge+2
 12013  0142C4  C071  F079         	movff	___flge@ff1+3,??___flge+3
 12014  0142C8  0100               	movlb	0	; () banked
 12015  0142CA  1F76               	comf	??___flge& (0+255),f,b
 12016  0142CC  1F77               	comf	(??___flge+1)& (0+255),f,b
 12017  0142CE  1F78               	comf	(??___flge+2)& (0+255),f,b
 12018  0142D0  1F79               	comf	(??___flge+3)& (0+255),f,b
 12019  0142D2  2B76               	incf	??___flge& (0+255),f,b
 12020  0142D4  0E00               	movlw	0
 12021  0142D6  2377               	addwfc	(??___flge+1)& (0+255),f,b
 12022  0142D8  2378               	addwfc	(??___flge+2)& (0+255),f,b
 12023  0142DA  2379               	addwfc	(??___flge+3)& (0+255),f,b
 12024  0142DC  0E00               	movlw	0
 12025  0142DE  0100               	movlb	0	; () banked
 12026  0142E0  2576               	addwf	??___flge& (0+255),w,b
 12027  0142E2  0100               	movlb	0	; () banked
 12028  0142E4  6F6E               	movwf	___flge@ff1& (0+255),b
 12029  0142E6  0E00               	movlw	0
 12030  0142E8  0100               	movlb	0	; () banked
 12031  0142EA  2177               	addwfc	(??___flge+1)& (0+255),w,b
 12032  0142EC  0100               	movlb	0	; () banked
 12033  0142EE  6F6F               	movwf	(___flge@ff1+1)& (0+255),b
 12034  0142F0  0E00               	movlw	0
 12035  0142F2  0100               	movlb	0	; () banked
 12036  0142F4  2178               	addwfc	(??___flge+2)& (0+255),w,b
 12037  0142F6  0100               	movlb	0	; () banked
 12038  0142F8  6F70               	movwf	(___flge@ff1+2)& (0+255),b
 12039  0142FA  0E80               	movlw	128
 12040  0142FC  0100               	movlb	0	; () banked
 12041  0142FE  2179               	addwfc	(??___flge+3)& (0+255),w,b
 12042  014300  0100               	movlb	0	; () banked
 12043  014302  6F71               	movwf	(___flge@ff1+3)& (0+255),b
 12044  014304                     l7614:
 12045                           
 12046                           ; BSR set to: 0
 12047  014304  0100               	movlb	0	; () banked
 12048  014306  AF75               	btfss	(___flge@ff2+3)& (0+255),7,b
 12049  014308  D026               	goto	l1111
 12050                           
 12051                           ; BSR set to: 0
 12052  01430A  C072  F076         	movff	___flge@ff2,??___flge
 12053  01430E  C073  F077         	movff	___flge@ff2+1,??___flge+1
 12054  014312  C074  F078         	movff	___flge@ff2+2,??___flge+2
 12055  014316  C075  F079         	movff	___flge@ff2+3,??___flge+3
 12056  01431A  0100               	movlb	0	; () banked
 12057  01431C  1F76               	comf	??___flge& (0+255),f,b
 12058  01431E  1F77               	comf	(??___flge+1)& (0+255),f,b
 12059  014320  1F78               	comf	(??___flge+2)& (0+255),f,b
 12060  014322  1F79               	comf	(??___flge+3)& (0+255),f,b
 12061  014324  2B76               	incf	??___flge& (0+255),f,b
 12062  014326  0E00               	movlw	0
 12063  014328  2377               	addwfc	(??___flge+1)& (0+255),f,b
 12064  01432A  2378               	addwfc	(??___flge+2)& (0+255),f,b
 12065  01432C  2379               	addwfc	(??___flge+3)& (0+255),f,b
 12066  01432E  0E00               	movlw	0
 12067  014330  0100               	movlb	0	; () banked
 12068  014332  2576               	addwf	??___flge& (0+255),w,b
 12069  014334  0100               	movlb	0	; () banked
 12070  014336  6F72               	movwf	___flge@ff2& (0+255),b
 12071  014338  0E00               	movlw	0
 12072  01433A  0100               	movlb	0	; () banked
 12073  01433C  2177               	addwfc	(??___flge+1)& (0+255),w,b
 12074  01433E  0100               	movlb	0	; () banked
 12075  014340  6F73               	movwf	(___flge@ff2+1)& (0+255),b
 12076  014342  0E00               	movlw	0
 12077  014344  0100               	movlb	0	; () banked
 12078  014346  2178               	addwfc	(??___flge+2)& (0+255),w,b
 12079  014348  0100               	movlb	0	; () banked
 12080  01434A  6F74               	movwf	(___flge@ff2+2)& (0+255),b
 12081  01434C  0E80               	movlw	128
 12082  01434E  0100               	movlb	0	; () banked
 12083  014350  2179               	addwfc	(??___flge+3)& (0+255),w,b
 12084  014352  0100               	movlb	0	; () banked
 12085  014354  6F75               	movwf	(___flge@ff2+3)& (0+255),b
 12086  014356                     l1111:
 12087                           
 12088                           ; BSR set to: 0
 12089  014356  0E00               	movlw	0
 12090  014358  0100               	movlb	0	; () banked
 12091  01435A  1B6E               	xorwf	___flge@ff1& (0+255),f,b
 12092  01435C  0E00               	movlw	0
 12093  01435E  1B6F               	xorwf	(___flge@ff1+1)& (0+255),f,b
 12094  014360  0E00               	movlw	0
 12095  014362  1B70               	xorwf	(___flge@ff1+2)& (0+255),f,b
 12096  014364  0E80               	movlw	128
 12097  014366  1B71               	xorwf	(___flge@ff1+3)& (0+255),f,b
 12098  014368  0E00               	movlw	0
 12099  01436A  0100               	movlb	0	; () banked
 12100  01436C  1B72               	xorwf	___flge@ff2& (0+255),f,b
 12101  01436E  0E00               	movlw	0
 12102  014370  1B73               	xorwf	(___flge@ff2+1)& (0+255),f,b
 12103  014372  0E00               	movlw	0
 12104  014374  1B74               	xorwf	(___flge@ff2+2)& (0+255),f,b
 12105  014376  0E80               	movlw	128
 12106  014378  1B75               	xorwf	(___flge@ff2+3)& (0+255),f,b
 12107  01437A  0100               	movlb	0	; () banked
 12108  01437C  5172               	movf	___flge@ff2& (0+255),w,b
 12109  01437E  0100               	movlb	0	; () banked
 12110  014380  5D6E               	subwf	___flge@ff1& (0+255),w,b
 12111  014382  0100               	movlb	0	; () banked
 12112  014384  5173               	movf	(___flge@ff2+1)& (0+255),w,b
 12113  014386  0100               	movlb	0	; () banked
 12114  014388  596F               	subwfb	(___flge@ff1+1)& (0+255),w,b
 12115  01438A  0100               	movlb	0	; () banked
 12116  01438C  5174               	movf	(___flge@ff2+2)& (0+255),w,b
 12117  01438E  0100               	movlb	0	; () banked
 12118  014390  5970               	subwfb	(___flge@ff1+2)& (0+255),w,b
 12119  014392  0100               	movlb	0	; () banked
 12120  014394  5175               	movf	(___flge@ff2+3)& (0+255),w,b
 12121  014396  0100               	movlb	0	; () banked
 12122  014398  5971               	subwfb	(___flge@ff1+3)& (0+255),w,b
 12123  01439A  B0D8               	btfsc	status,0,c
 12124  01439C  D002               	goto	l7620
 12125                           
 12126                           ; BSR set to: 0
 12127  01439E  90D8               	bcf	status,0,c
 12128  0143A0  0012               	return	
 12129  0143A2                     l7620:
 12130                           
 12131                           ; BSR set to: 0
 12132  0143A2  80D8               	bsf	status,0,c
 12133                           
 12134                           ; BSR set to: 0
 12135  0143A4  0012               	return	
 12136  0143A6                     __end_of___flge:
 12137                           	opt stack 0
 12138                           tblptru	equ	0xFF8
 12139                           tblptrh	equ	0xFF7
 12140                           tblptrl	equ	0xFF6
 12141                           tablat	equ	0xFF5
 12142                           prodh	equ	0xFF4
 12143                           prodl	equ	0xFF3
 12144                           intcon	equ	0xFF2
 12145                           postinc0	equ	0xFEE
 12146                           wreg	equ	0xFE8
 12147                           indf2	equ	0xFDF
 12148                           postinc2	equ	0xFDE
 12149                           fsr2h	equ	0xFDA
 12150                           fsr2l	equ	0xFD9
 12151                           status	equ	0xFD8
 12152                           
 12153 ;; *************** function ___fldiv *****************
 12154 ;; Defined at:
 12155 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
 12156 ;; Parameters:    Size  Location     Type
 12157 ;;  b               4   14[BANK0 ] unsigned char 
 12158 ;;  a               4   18[BANK0 ] unsigned char 
 12159 ;; Auto vars:     Size  Location     Type
 12160 ;;  grs             4   33[BANK0 ] unsigned long 
 12161 ;;  rem             4   27[BANK0 ] unsigned long 
 12162 ;;  new_exp         2   31[BANK0 ] int 
 12163 ;;  aexp            1   38[BANK0 ] unsigned char 
 12164 ;;  bexp            1   37[BANK0 ] unsigned char 
 12165 ;;  sign            1   26[BANK0 ] unsigned char 
 12166 ;; Return value:  Size  Location     Type
 12167 ;;                  4   14[BANK0 ] unsigned char 
 12168 ;; Registers used:
 12169 ;;		wreg, status,2, status,0
 12170 ;; Tracked objects:
 12171 ;;		On entry : 0/0
 12172 ;;		On exit  : 0/0
 12173 ;;		Unchanged: 0/0
 12174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12175 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12176 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12177 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12178 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12179 ;;Total ram usage:       25 bytes
 12180 ;; Hardware stack levels used:    1
 12181 ;; Hardware stack levels required when called:    3
 12182 ;; This function calls:
 12183 ;;		Nothing
 12184 ;; This function is called by:
 12185 ;;		_LCD_Handler
 12186 ;; This function uses a non-reentrant model
 12187 ;;
 12188                           
 12189                           	psect	text28
 12190  013290                     __ptext28:
 12191                           	opt stack 0
 12192  013290                     ___fldiv:
 12193                           	opt stack 26
 12194                           
 12195                           ; BSR set to: 0
 12196                           ;incstack = 0
 12197  013290  0100               	movlb	0	; () banked
 12198  013292  5171               	movf	(___fldiv@b+3)& (0+255),w,b
 12199  013294  0B80               	andlw	128
 12200  013296  0100               	movlb	0	; () banked
 12201  013298  6F7A               	movwf	___fldiv@sign& (0+255),b
 12202  01329A  0100               	movlb	0	; () banked
 12203  01329C  5171               	movf	(___fldiv@b+3)& (0+255),w,b
 12204  01329E  2571               	addwf	(___fldiv@b+3)& (0+255),w,b
 12205  0132A0  0100               	movlb	0	; () banked
 12206  0132A2  6F85               	movwf	___fldiv@bexp& (0+255),b
 12207                           
 12208                           ; BSR set to: 0
 12209  0132A4  0100               	movlb	0	; () banked
 12210  0132A6  AF70               	btfss	(___fldiv@b+2)& (0+255),7,b
 12211  0132A8  D002               	goto	l8334
 12212                           
 12213                           ; BSR set to: 0
 12214  0132AA  0100               	movlb	0	; () banked
 12215  0132AC  8185               	bsf	___fldiv@bexp& (0+255),0,b
 12216  0132AE                     l8334:
 12217                           
 12218                           ; BSR set to: 0
 12219  0132AE  0100               	movlb	0	; () banked
 12220  0132B0  5185               	movf	___fldiv@bexp& (0+255),w,b
 12221  0132B2  0100               	movlb	0	; () banked
 12222  0132B4  B4D8               	btfsc	status,2,c
 12223  0132B6  D012               	goto	l8344
 12224                           
 12225                           ; BSR set to: 0
 12226  0132B8  0100               	movlb	0	; () banked
 12227  0132BA  2985               	incf	___fldiv@bexp& (0+255),w,b
 12228  0132BC  A4D8               	btfss	status,2,c
 12229  0132BE  D009               	goto	l8340
 12230                           
 12231                           ; BSR set to: 0
 12232  0132C0  0E00               	movlw	0
 12233  0132C2  0100               	movlb	0	; () banked
 12234  0132C4  6F6E               	movwf	___fldiv@b& (0+255),b
 12235  0132C6  0E00               	movlw	0
 12236  0132C8  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 12237  0132CA  0E00               	movlw	0
 12238  0132CC  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 12239  0132CE  0E00               	movlw	0
 12240  0132D0  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 12241  0132D2                     l8340:
 12242                           
 12243                           ; BSR set to: 0
 12244  0132D2  0100               	movlb	0	; () banked
 12245  0132D4  8F70               	bsf	(___fldiv@b+2)& (0+255),7,b
 12246                           
 12247                           ; BSR set to: 0
 12248  0132D6  0E00               	movlw	0
 12249  0132D8  0100               	movlb	0	; () banked
 12250  0132DA  D008               	goto	L12
 12251  0132DC                     l8344:
 12252                           
 12253                           ; BSR set to: 0
 12254  0132DC  0E00               	movlw	0
 12255  0132DE  0100               	movlb	0	; () banked
 12256  0132E0  6F6E               	movwf	___fldiv@b& (0+255),b
 12257  0132E2  0E00               	movlw	0
 12258  0132E4  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 12259  0132E6  0E00               	movlw	0
 12260  0132E8  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 12261  0132EA  0E00               	movlw	0
 12262  0132EC                     L12:
 12263  0132EC  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 12264                           
 12265                           ; BSR set to: 0
 12266                           
 12267                           ; BSR set to: 0
 12268  0132EE  0100               	movlb	0	; () banked
 12269  0132F0  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 12270  0132F2  0B80               	andlw	128
 12271  0132F4  0100               	movlb	0	; () banked
 12272  0132F6  1B7A               	xorwf	___fldiv@sign& (0+255),f,b
 12273                           
 12274                           ; BSR set to: 0
 12275  0132F8  0100               	movlb	0	; () banked
 12276  0132FA  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 12277  0132FC  2575               	addwf	(___fldiv@a+3)& (0+255),w,b
 12278  0132FE  0100               	movlb	0	; () banked
 12279  013300  6F86               	movwf	___fldiv@aexp& (0+255),b
 12280                           
 12281                           ; BSR set to: 0
 12282  013302  0100               	movlb	0	; () banked
 12283  013304  AF74               	btfss	(___fldiv@a+2)& (0+255),7,b
 12284  013306  D002               	goto	l8354
 12285                           
 12286                           ; BSR set to: 0
 12287  013308  0100               	movlb	0	; () banked
 12288  01330A  8186               	bsf	___fldiv@aexp& (0+255),0,b
 12289  01330C                     l8354:
 12290                           
 12291                           ; BSR set to: 0
 12292  01330C  0100               	movlb	0	; () banked
 12293  01330E  5186               	movf	___fldiv@aexp& (0+255),w,b
 12294  013310  0100               	movlb	0	; () banked
 12295  013312  B4D8               	btfsc	status,2,c
 12296  013314  D012               	goto	l8364
 12297                           
 12298                           ; BSR set to: 0
 12299  013316  0100               	movlb	0	; () banked
 12300  013318  2986               	incf	___fldiv@aexp& (0+255),w,b
 12301  01331A  A4D8               	btfss	status,2,c
 12302  01331C  D009               	goto	l8360
 12303                           
 12304                           ; BSR set to: 0
 12305  01331E  0E00               	movlw	0
 12306  013320  0100               	movlb	0	; () banked
 12307  013322  6F72               	movwf	___fldiv@a& (0+255),b
 12308  013324  0E00               	movlw	0
 12309  013326  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 12310  013328  0E00               	movlw	0
 12311  01332A  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 12312  01332C  0E00               	movlw	0
 12313  01332E  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 12314  013330                     l8360:
 12315                           
 12316                           ; BSR set to: 0
 12317  013330  0100               	movlb	0	; () banked
 12318  013332  8F74               	bsf	(___fldiv@a+2)& (0+255),7,b
 12319                           
 12320                           ; BSR set to: 0
 12321  013334  0E00               	movlw	0
 12322  013336  0100               	movlb	0	; () banked
 12323  013338  D008               	goto	L13
 12324  01333A                     l8364:
 12325                           
 12326                           ; BSR set to: 0
 12327  01333A  0E00               	movlw	0
 12328  01333C  0100               	movlb	0	; () banked
 12329  01333E  6F72               	movwf	___fldiv@a& (0+255),b
 12330  013340  0E00               	movlw	0
 12331  013342  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 12332  013344  0E00               	movlw	0
 12333  013346  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 12334  013348  0E00               	movlw	0
 12335  01334A                     L13:
 12336  01334A  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 12337                           
 12338                           ; BSR set to: 0
 12339                           
 12340                           ; BSR set to: 0
 12341  01334C  0100               	movlb	0	; () banked
 12342  01334E  5172               	movf	___fldiv@a& (0+255),w,b
 12343  013350  0100               	movlb	0	; () banked
 12344  013352  1173               	iorwf	(___fldiv@a+1)& (0+255),w,b
 12345  013354  0100               	movlb	0	; () banked
 12346  013356  1174               	iorwf	(___fldiv@a+2)& (0+255),w,b
 12347  013358  0100               	movlb	0	; () banked
 12348  01335A  1175               	iorwf	(___fldiv@a+3)& (0+255),w,b
 12349  01335C  A4D8               	btfss	status,2,c
 12350  01335E  D017               	goto	l8376
 12351                           
 12352                           ; BSR set to: 0
 12353  013360  0E00               	movlw	0
 12354  013362  0100               	movlb	0	; () banked
 12355  013364  6F6E               	movwf	___fldiv@b& (0+255),b
 12356  013366  0E00               	movlw	0
 12357  013368  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 12358  01336A  0E00               	movlw	0
 12359  01336C  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 12360  01336E  0E00               	movlw	0
 12361  013370  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 12362                           
 12363                           ; BSR set to: 0
 12364  013372  0100               	movlb	0	; () banked
 12365  013374  0E80               	movlw	128
 12366  013376  1370               	iorwf	(___fldiv@b+2)& (0+255),f,b
 12367  013378  0E7F               	movlw	127
 12368  01337A  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 12369                           
 12370                           ; BSR set to: 0
 12371  01337C  C06E  F06E         	movff	___fldiv@b,?___fldiv
 12372  013380  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 12373  013384  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 12374  013388  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 12375                           
 12376                           ; BSR set to: 0
 12377  01338C  0012               	return	
 12378  01338E                     l8376:
 12379                           
 12380                           ; BSR set to: 0
 12381  01338E  0100               	movlb	0	; () banked
 12382  013390  5185               	movf	___fldiv@bexp& (0+255),w,b
 12383  013392  0100               	movlb	0	; () banked
 12384  013394  A4D8               	btfss	status,2,c
 12385  013396  D012               	goto	l8384
 12386                           
 12387                           ; BSR set to: 0
 12388  013398  0E00               	movlw	0
 12389  01339A  0100               	movlb	0	; () banked
 12390  01339C  6F6E               	movwf	___fldiv@b& (0+255),b
 12391  01339E  0E00               	movlw	0
 12392  0133A0  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 12393  0133A2  0E00               	movlw	0
 12394  0133A4  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 12395  0133A6  0E00               	movlw	0
 12396  0133A8  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 12397                           
 12398                           ; BSR set to: 0
 12399  0133AA  C06E  F06E         	movff	___fldiv@b,?___fldiv
 12400  0133AE  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 12401  0133B2  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 12402  0133B6  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 12403                           
 12404                           ; BSR set to: 0
 12405  0133BA  0012               	return	
 12406  0133BC                     l8384:
 12407                           
 12408                           ; BSR set to: 0
 12409  0133BC  0100               	movlb	0	; () banked
 12410  0133BE  5186               	movf	___fldiv@aexp& (0+255),w,b
 12411  0133C0  0100               	movlb	0	; () banked
 12412  0133C2  6F76               	movwf	??___fldiv& (0+255),b
 12413  0133C4  6B77               	clrf	(??___fldiv+1)& (0+255),b
 12414  0133C6  0100               	movlb	0	; () banked
 12415  0133C8  1F76               	comf	??___fldiv& (0+255),f,b
 12416  0133CA  1F77               	comf	(??___fldiv+1)& (0+255),f,b
 12417  0133CC  4B76               	infsnz	??___fldiv& (0+255),f,b
 12418  0133CE  2B77               	incf	(??___fldiv+1)& (0+255),f,b
 12419  0133D0  0100               	movlb	0	; () banked
 12420  0133D2  5185               	movf	___fldiv@bexp& (0+255),w,b
 12421  0133D4  0100               	movlb	0	; () banked
 12422  0133D6  6F78               	movwf	(??___fldiv+2)& (0+255),b
 12423  0133D8  6B79               	clrf	(??___fldiv+3)& (0+255),b
 12424  0133DA  0100               	movlb	0	; () banked
 12425  0133DC  5176               	movf	??___fldiv& (0+255),w,b
 12426  0133DE  0100               	movlb	0	; () banked
 12427  0133E0  2778               	addwf	(??___fldiv+2)& (0+255),f,b
 12428  0133E2  0100               	movlb	0	; () banked
 12429  0133E4  5177               	movf	(??___fldiv+1)& (0+255),w,b
 12430  0133E6  0100               	movlb	0	; () banked
 12431  0133E8  2379               	addwfc	(??___fldiv+3)& (0+255),f,b
 12432  0133EA  0E7F               	movlw	127
 12433  0133EC  0100               	movlb	0	; () banked
 12434  0133EE  2578               	addwf	(??___fldiv+2)& (0+255),w,b
 12435  0133F0  0100               	movlb	0	; () banked
 12436  0133F2  6F7F               	movwf	___fldiv@new_exp& (0+255),b
 12437  0133F4  0E00               	movlw	0
 12438  0133F6  0100               	movlb	0	; () banked
 12439  0133F8  2179               	addwfc	(??___fldiv+3)& (0+255),w,b
 12440  0133FA  0100               	movlb	0	; () banked
 12441  0133FC  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12442                           
 12443                           ; BSR set to: 0
 12444  0133FE  C06E  F07B         	movff	___fldiv@b,___fldiv@rem
 12445  013402  C06F  F07C         	movff	___fldiv@b+1,___fldiv@rem+1
 12446  013406  C070  F07D         	movff	___fldiv@b+2,___fldiv@rem+2
 12447  01340A  C071  F07E         	movff	___fldiv@b+3,___fldiv@rem+3
 12448                           
 12449                           ; BSR set to: 0
 12450  01340E  0E00               	movlw	0
 12451  013410  0100               	movlb	0	; () banked
 12452  013412  6F6E               	movwf	___fldiv@b& (0+255),b
 12453  013414  0E00               	movlw	0
 12454  013416  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 12455  013418  0E00               	movlw	0
 12456  01341A  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 12457  01341C  0E00               	movlw	0
 12458  01341E  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 12459                           
 12460                           ; BSR set to: 0
 12461  013420  0E00               	movlw	0
 12462  013422  0100               	movlb	0	; () banked
 12463  013424  6F81               	movwf	___fldiv@grs& (0+255),b
 12464  013426  0E00               	movlw	0
 12465  013428  6F82               	movwf	(___fldiv@grs+1)& (0+255),b
 12466  01342A  0E00               	movlw	0
 12467  01342C  6F83               	movwf	(___fldiv@grs+2)& (0+255),b
 12468  01342E  0E00               	movlw	0
 12469  013430  6F84               	movwf	(___fldiv@grs+3)& (0+255),b
 12470                           
 12471                           ; BSR set to: 0
 12472  013432  0E00               	movlw	0
 12473  013434  0100               	movlb	0	; () banked
 12474  013436  6F86               	movwf	___fldiv@aexp& (0+255),b
 12475  013438  D042               	goto	l1444
 12476  01343A                     l8394:
 12477                           
 12478                           ; BSR set to: 0
 12479  01343A  0100               	movlb	0	; () banked
 12480  01343C  5186               	movf	___fldiv@aexp& (0+255),w,b
 12481  01343E  0100               	movlb	0	; () banked
 12482  013440  B4D8               	btfsc	status,2,c
 12483  013442  D017               	goto	l8402
 12484                           
 12485                           ; BSR set to: 0
 12486  013444  0100               	movlb	0	; () banked
 12487  013446  90D8               	bcf	status,0,c
 12488  013448  377B               	rlcf	___fldiv@rem& (0+255),f,b
 12489  01344A  377C               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 12490  01344C  377D               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 12491  01344E  377E               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 12492  013450  0100               	movlb	0	; () banked
 12493  013452  90D8               	bcf	status,0,c
 12494  013454  376E               	rlcf	___fldiv@b& (0+255),f,b
 12495  013456  376F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 12496  013458  3770               	rlcf	(___fldiv@b+2)& (0+255),f,b
 12497  01345A  3771               	rlcf	(___fldiv@b+3)& (0+255),f,b
 12498                           
 12499                           ; BSR set to: 0
 12500  01345C  0100               	movlb	0	; () banked
 12501  01345E  AF84               	btfss	(___fldiv@grs+3)& (0+255),7,b
 12502  013460  D002               	goto	l1447
 12503                           
 12504                           ; BSR set to: 0
 12505  013462  0100               	movlb	0	; () banked
 12506  013464  816E               	bsf	___fldiv@b& (0+255),0,b
 12507  013466                     l1447:
 12508                           
 12509                           ; BSR set to: 0
 12510  013466  0100               	movlb	0	; () banked
 12511  013468  90D8               	bcf	status,0,c
 12512  01346A  3781               	rlcf	___fldiv@grs& (0+255),f,b
 12513  01346C  3782               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 12514  01346E  3783               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 12515  013470  3784               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 12516  013472                     l8402:
 12517                           
 12518                           ; BSR set to: 0
 12519  013472  0100               	movlb	0	; () banked
 12520  013474  5172               	movf	___fldiv@a& (0+255),w,b
 12521  013476  0100               	movlb	0	; () banked
 12522  013478  5D7B               	subwf	___fldiv@rem& (0+255),w,b
 12523  01347A  0100               	movlb	0	; () banked
 12524  01347C  5173               	movf	(___fldiv@a+1)& (0+255),w,b
 12525  01347E  0100               	movlb	0	; () banked
 12526  013480  597C               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 12527  013482  0100               	movlb	0	; () banked
 12528  013484  5174               	movf	(___fldiv@a+2)& (0+255),w,b
 12529  013486  0100               	movlb	0	; () banked
 12530  013488  597D               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 12531  01348A  0100               	movlb	0	; () banked
 12532  01348C  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 12533  01348E  0100               	movlb	0	; () banked
 12534  013490  597E               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 12535  013492  A0D8               	btfss	status,0,c
 12536  013494  D012               	goto	l8408
 12537                           
 12538                           ; BSR set to: 0
 12539  013496  0100               	movlb	0	; () banked
 12540  013498  8D84               	bsf	(___fldiv@grs+3)& (0+255),6,b
 12541                           
 12542                           ; BSR set to: 0
 12543  01349A  0100               	movlb	0	; () banked
 12544  01349C  5172               	movf	___fldiv@a& (0+255),w,b
 12545  01349E  0100               	movlb	0	; () banked
 12546  0134A0  5F7B               	subwf	___fldiv@rem& (0+255),f,b
 12547  0134A2  0100               	movlb	0	; () banked
 12548  0134A4  5173               	movf	(___fldiv@a+1)& (0+255),w,b
 12549  0134A6  0100               	movlb	0	; () banked
 12550  0134A8  5B7C               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 12551  0134AA  0100               	movlb	0	; () banked
 12552  0134AC  5174               	movf	(___fldiv@a+2)& (0+255),w,b
 12553  0134AE  0100               	movlb	0	; () banked
 12554  0134B0  5B7D               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 12555  0134B2  0100               	movlb	0	; () banked
 12556  0134B4  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 12557  0134B6  0100               	movlb	0	; () banked
 12558  0134B8  5B7E               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 12559  0134BA                     l8408:
 12560                           
 12561                           ; BSR set to: 0
 12562  0134BA  0100               	movlb	0	; () banked
 12563  0134BC  2B86               	incf	___fldiv@aexp& (0+255),f,b
 12564  0134BE                     l1444:
 12565                           
 12566                           ; BSR set to: 0
 12567  0134BE  0E19               	movlw	25
 12568  0134C0  0100               	movlb	0	; () banked
 12569  0134C2  6586               	cpfsgt	___fldiv@aexp& (0+255),b
 12570  0134C4  D7BA               	goto	l8394
 12571                           
 12572                           ; BSR set to: 0
 12573                           
 12574                           ; BSR set to: 0
 12575  0134C6  0100               	movlb	0	; () banked
 12576  0134C8  517B               	movf	___fldiv@rem& (0+255),w,b
 12577  0134CA  0100               	movlb	0	; () banked
 12578  0134CC  117C               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 12579  0134CE  0100               	movlb	0	; () banked
 12580  0134D0  117D               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 12581  0134D2  0100               	movlb	0	; () banked
 12582  0134D4  117E               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 12583  0134D6  B4D8               	btfsc	status,2,c
 12584  0134D8  D018               	goto	l8420
 12585                           
 12586                           ; BSR set to: 0
 12587  0134DA  0100               	movlb	0	; () banked
 12588  0134DC  8181               	bsf	___fldiv@grs& (0+255),0,b
 12589                           
 12590                           ; BSR set to: 0
 12591  0134DE  D015               	goto	l8420
 12592  0134E0                     l8414:
 12593                           
 12594                           ; BSR set to: 0
 12595  0134E0  0100               	movlb	0	; () banked
 12596  0134E2  90D8               	bcf	status,0,c
 12597  0134E4  376E               	rlcf	___fldiv@b& (0+255),f,b
 12598  0134E6  376F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 12599  0134E8  3770               	rlcf	(___fldiv@b+2)& (0+255),f,b
 12600  0134EA  3771               	rlcf	(___fldiv@b+3)& (0+255),f,b
 12601                           
 12602                           ; BSR set to: 0
 12603  0134EC  0100               	movlb	0	; () banked
 12604  0134EE  AF84               	btfss	(___fldiv@grs+3)& (0+255),7,b
 12605  0134F0  D002               	goto	l1453
 12606                           
 12607                           ; BSR set to: 0
 12608  0134F2  0100               	movlb	0	; () banked
 12609  0134F4  816E               	bsf	___fldiv@b& (0+255),0,b
 12610  0134F6                     l1453:
 12611                           
 12612                           ; BSR set to: 0
 12613  0134F6  0100               	movlb	0	; () banked
 12614  0134F8  90D8               	bcf	status,0,c
 12615  0134FA  3781               	rlcf	___fldiv@grs& (0+255),f,b
 12616  0134FC  3782               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 12617  0134FE  3783               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 12618  013500  3784               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 12619  013502  0100               	movlb	0	; () banked
 12620  013504  077F               	decf	___fldiv@new_exp& (0+255),f,b
 12621  013506  A0D8               	btfss	status,0,c
 12622  013508  0780               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 12623  01350A                     l8420:
 12624                           
 12625                           ; BSR set to: 0
 12626  01350A  0100               	movlb	0	; () banked
 12627  01350C  AF70               	btfss	(___fldiv@b+2)& (0+255),7,b
 12628  01350E  D7E8               	goto	l8414
 12629                           
 12630                           ; BSR set to: 0
 12631                           
 12632                           ; BSR set to: 0
 12633  013510  0E00               	movlw	0
 12634  013512  0100               	movlb	0	; () banked
 12635  013514  6F86               	movwf	___fldiv@aexp& (0+255),b
 12636                           
 12637                           ; BSR set to: 0
 12638  013516  0100               	movlb	0	; () banked
 12639  013518  AF84               	btfss	(___fldiv@grs+3)& (0+255),7,b
 12640  01351A  D024               	goto	l1455
 12641                           
 12642                           ; BSR set to: 0
 12643  01351C  0EFF               	movlw	255
 12644  01351E  0100               	movlb	0	; () banked
 12645  013520  1581               	andwf	___fldiv@grs& (0+255),w,b
 12646  013522  0100               	movlb	0	; () banked
 12647  013524  6F76               	movwf	??___fldiv& (0+255),b
 12648  013526  0EFF               	movlw	255
 12649  013528  0100               	movlb	0	; () banked
 12650  01352A  1582               	andwf	(___fldiv@grs+1)& (0+255),w,b
 12651  01352C  0100               	movlb	0	; () banked
 12652  01352E  6F77               	movwf	(??___fldiv+1)& (0+255),b
 12653  013530  0EFF               	movlw	255
 12654  013532  0100               	movlb	0	; () banked
 12655  013534  1583               	andwf	(___fldiv@grs+2)& (0+255),w,b
 12656  013536  0100               	movlb	0	; () banked
 12657  013538  6F78               	movwf	(??___fldiv+2)& (0+255),b
 12658  01353A  0E7F               	movlw	127
 12659  01353C  0100               	movlb	0	; () banked
 12660  01353E  1584               	andwf	(___fldiv@grs+3)& (0+255),w,b
 12661  013540  0100               	movlb	0	; () banked
 12662  013542  6F79               	movwf	(??___fldiv+3)& (0+255),b
 12663  013544  0100               	movlb	0	; () banked
 12664  013546  5176               	movf	??___fldiv& (0+255),w,b
 12665  013548  0100               	movlb	0	; () banked
 12666  01354A  1177               	iorwf	(??___fldiv+1)& (0+255),w,b
 12667  01354C  0100               	movlb	0	; () banked
 12668  01354E  1178               	iorwf	(??___fldiv+2)& (0+255),w,b
 12669  013550  0100               	movlb	0	; () banked
 12670  013552  1179               	iorwf	(??___fldiv+3)& (0+255),w,b
 12671  013554  A4D8               	btfss	status,2,c
 12672  013556  D003               	goto	l8430
 12673                           
 12674                           ; BSR set to: 0
 12675                           
 12676                           ; BSR set to: 0
 12677  013558  0100               	movlb	0	; () banked
 12678  01355A  A16E               	btfss	___fldiv@b& (0+255),0,b
 12679  01355C  D003               	goto	l1455
 12680  01355E                     l8430:
 12681                           
 12682                           ; BSR set to: 0
 12683  01355E  0E01               	movlw	1
 12684  013560  0100               	movlb	0	; () banked
 12685  013562  6F86               	movwf	___fldiv@aexp& (0+255),b
 12686  013564                     l1455:
 12687                           
 12688                           ; BSR set to: 0
 12689  013564  0100               	movlb	0	; () banked
 12690  013566  5186               	movf	___fldiv@aexp& (0+255),w,b
 12691  013568  0100               	movlb	0	; () banked
 12692  01356A  B4D8               	btfsc	status,2,c
 12693  01356C  D023               	goto	l8440
 12694                           
 12695                           ; BSR set to: 0
 12696  01356E  0E01               	movlw	1
 12697  013570  0100               	movlb	0	; () banked
 12698  013572  276E               	addwf	___fldiv@b& (0+255),f,b
 12699  013574  0E00               	movlw	0
 12700  013576  236F               	addwfc	(___fldiv@b+1)& (0+255),f,b
 12701  013578  2370               	addwfc	(___fldiv@b+2)& (0+255),f,b
 12702  01357A  2371               	addwfc	(___fldiv@b+3)& (0+255),f,b
 12703                           
 12704                           ; BSR set to: 0
 12705  01357C  0100               	movlb	0	; () banked
 12706  01357E  A171               	btfss	(___fldiv@b+3)& (0+255),0,b
 12707  013580  D019               	goto	l8440
 12708                           
 12709                           ; BSR set to: 0
 12710  013582  C06E  F076         	movff	___fldiv@b,??___fldiv
 12711  013586  C06F  F077         	movff	___fldiv@b+1,??___fldiv+1
 12712  01358A  C070  F078         	movff	___fldiv@b+2,??___fldiv+2
 12713  01358E  C071  F079         	movff	___fldiv@b+3,??___fldiv+3
 12714  013592  0100               	movlb	0	; () banked
 12715  013594  3579               	rlcf	(??___fldiv+3)& (0+255),w,b
 12716  013596  3379               	rrcf	(??___fldiv+3)& (0+255),f,b
 12717  013598  3378               	rrcf	(??___fldiv+2)& (0+255),f,b
 12718  01359A  3377               	rrcf	(??___fldiv+1)& (0+255),f,b
 12719  01359C  3376               	rrcf	??___fldiv& (0+255),f,b
 12720  01359E  C076  F06E         	movff	??___fldiv,___fldiv@b
 12721  0135A2  C077  F06F         	movff	??___fldiv+1,___fldiv@b+1
 12722  0135A6  C078  F070         	movff	??___fldiv+2,___fldiv@b+2
 12723  0135AA  C079  F071         	movff	??___fldiv+3,___fldiv@b+3
 12724                           
 12725                           ; BSR set to: 0
 12726  0135AE  0100               	movlb	0	; () banked
 12727  0135B0  4B7F               	infsnz	___fldiv@new_exp& (0+255),f,b
 12728  0135B2  2B80               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 12729  0135B4                     l8440:
 12730                           
 12731                           ; BSR set to: 0
 12732  0135B4  0100               	movlb	0	; () banked
 12733  0135B6  BF80               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 12734  0135B8  D014               	goto	l8444
 12735  0135BA  0100               	movlb	0	; () banked
 12736  0135BC  5180               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 12737  0135BE  E104               	bnz	u11360
 12738  0135C0  0100               	movlb	0	; () banked
 12739  0135C2  297F               	incf	___fldiv@new_exp& (0+255),w,b
 12740  0135C4  A0D8               	btfss	status,0,c
 12741  0135C6  D00D               	goto	l8444
 12742  0135C8                     u11360:
 12743                           
 12744                           ; BSR set to: 0
 12745  0135C8  0E00               	movlw	0
 12746  0135CA  0100               	movlb	0	; () banked
 12747  0135CC  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12748  0135CE  697F               	setf	___fldiv@new_exp& (0+255),b
 12749  0135D0  0E00               	movlw	0
 12750  0135D2  0100               	movlb	0	; () banked
 12751  0135D4  6F6E               	movwf	___fldiv@b& (0+255),b
 12752  0135D6  0E00               	movlw	0
 12753  0135D8  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 12754  0135DA  0E00               	movlw	0
 12755  0135DC  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 12756  0135DE  0E00               	movlw	0
 12757  0135E0  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 12758  0135E2                     l8444:
 12759                           
 12760                           ; BSR set to: 0
 12761  0135E2  0100               	movlb	0	; () banked
 12762  0135E4  BF80               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 12763  0135E6  D007               	goto	l8446
 12764  0135E8  0100               	movlb	0	; () banked
 12765  0135EA  5180               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 12766  0135EC  E115               	bnz	l8448
 12767  0135EE  0100               	movlb	0	; () banked
 12768  0135F0  057F               	decf	___fldiv@new_exp& (0+255),w,b
 12769  0135F2  B0D8               	btfsc	status,0,c
 12770  0135F4  D011               	goto	l8448
 12771  0135F6                     l8446:
 12772                           
 12773                           ; BSR set to: 0
 12774  0135F6  0E00               	movlw	0
 12775  0135F8  0100               	movlb	0	; () banked
 12776  0135FA  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12777  0135FC  0E00               	movlw	0
 12778  0135FE  6F7F               	movwf	___fldiv@new_exp& (0+255),b
 12779  013600  0E00               	movlw	0
 12780  013602  0100               	movlb	0	; () banked
 12781  013604  6F6E               	movwf	___fldiv@b& (0+255),b
 12782  013606  0E00               	movlw	0
 12783  013608  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 12784  01360A  0E00               	movlw	0
 12785  01360C  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 12786  01360E  0E00               	movlw	0
 12787  013610  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 12788  013612  0E00               	movlw	0
 12789  013614  0100               	movlb	0	; () banked
 12790  013616  6F7A               	movwf	___fldiv@sign& (0+255),b
 12791  013618                     l8448:
 12792                           
 12793                           ; BSR set to: 0
 12794  013618  C07F  F085         	movff	___fldiv@new_exp,___fldiv@bexp
 12795                           
 12796                           ; BSR set to: 0
 12797  01361C  0100               	movlb	0	; () banked
 12798  01361E  A185               	btfss	___fldiv@bexp& (0+255),0,b
 12799  013620  D003               	goto	l8454
 12800                           
 12801                           ; BSR set to: 0
 12802  013622  0100               	movlb	0	; () banked
 12803  013624  8F70               	bsf	(___fldiv@b+2)& (0+255),7,b
 12804  013626  D002               	goto	l8456
 12805  013628                     l8454:
 12806                           
 12807                           ; BSR set to: 0
 12808  013628  0100               	movlb	0	; () banked
 12809  01362A  9F70               	bcf	(___fldiv@b+2)& (0+255),7,b
 12810  01362C                     l8456:
 12811                           
 12812                           ; BSR set to: 0
 12813  01362C  0100               	movlb	0	; () banked
 12814  01362E  90D8               	bcf	status,0,c
 12815  013630  3185               	rrcf	___fldiv@bexp& (0+255),w,b
 12816  013632  0100               	movlb	0	; () banked
 12817  013634  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 12818                           
 12819                           ; BSR set to: 0
 12820  013636  0100               	movlb	0	; () banked
 12821  013638  517A               	movf	___fldiv@sign& (0+255),w,b
 12822  01363A  0100               	movlb	0	; () banked
 12823  01363C  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 12824                           
 12825                           ; BSR set to: 0
 12826  01363E  C06E  F06E         	movff	___fldiv@b,?___fldiv
 12827  013642  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 12828  013646  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 12829  01364A  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 12830  01364E  0012               	return	
 12831  013650                     __end_of___fldiv:
 12832                           	opt stack 0
 12833                           tblptru	equ	0xFF8
 12834                           tblptrh	equ	0xFF7
 12835                           tblptrl	equ	0xFF6
 12836                           tablat	equ	0xFF5
 12837                           prodh	equ	0xFF4
 12838                           prodl	equ	0xFF3
 12839                           intcon	equ	0xFF2
 12840                           postinc0	equ	0xFEE
 12841                           wreg	equ	0xFE8
 12842                           indf2	equ	0xFDF
 12843                           postinc2	equ	0xFDE
 12844                           fsr2h	equ	0xFDA
 12845                           fsr2l	equ	0xFD9
 12846                           status	equ	0xFD8
 12847                           
 12848 ;; *************** function _LCD_write_string *****************
 12849 ;; Defined at:
 12850 ;;		line 194 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 12851 ;; Parameters:    Size  Location     Type
 12852 ;;  buffer          2   31[BANK0 ] PTR unsigned char 
 12853 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
 12854 ;; Auto vars:     Size  Location     Type
 12855 ;;		None
 12856 ;; Return value:  Size  Location     Type
 12857 ;;		None               void
 12858 ;; Registers used:
 12859 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12860 ;; Tracked objects:
 12861 ;;		On entry : 0/0
 12862 ;;		On exit  : 0/0
 12863 ;;		Unchanged: 0/0
 12864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12865 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12868 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12869 ;;Total ram usage:        2 bytes
 12870 ;; Hardware stack levels used:    1
 12871 ;; Hardware stack levels required when called:    8
 12872 ;; This function calls:
 12873 ;;		_LCD_write_char
 12874 ;; This function is called by:
 12875 ;;		_LCD_Handler
 12876 ;;		_LCD_write_integer
 12877 ;; This function uses a non-reentrant model
 12878 ;;
 12879                           
 12880                           	psect	text29
 12881  0152DE                     __ptext29:
 12882                           	opt stack 0
 12883  0152DE                     _LCD_write_string:
 12884                           	opt stack 21
 12885                           
 12886                           ;src\LCD_44780.c: 197: while(*buffer){
 12887                           
 12888                           ; BSR set to: 0
 12889                           ;incstack = 0
 12890  0152DE  D00A               	goto	l8076
 12891  0152E0                     l8072:
 12892                           
 12893                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 12894  0152E0  C07F  FFD9         	movff	LCD_write_string@buffer,fsr2l
 12895  0152E4  C080  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 12896  0152E8  50DF               	movf	indf2,w,c
 12897  0152EA  ECE3  F0A7         	call	_LCD_write_char
 12898                           
 12899                           ;src\LCD_44780.c: 202: buffer++;
 12900  0152EE  0100               	movlb	0	; () banked
 12901  0152F0  4B7F               	infsnz	LCD_write_string@buffer& (0+255),f,b
 12902  0152F2  2B80               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 12903  0152F4                     l8076:
 12904  0152F4  C07F  FFD9         	movff	LCD_write_string@buffer,fsr2l
 12905  0152F8  C080  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 12906  0152FC  50DF               	movf	indf2,w,c
 12907  0152FE  B4D8               	btfsc	status,2,c
 12908  015300  0012               	return	
 12909  015302  D7EE               	goto	l8072
 12910  015304                     __end_of_LCD_write_string:
 12911                           	opt stack 0
 12912                           tblptru	equ	0xFF8
 12913                           tblptrh	equ	0xFF7
 12914                           tblptrl	equ	0xFF6
 12915                           tablat	equ	0xFF5
 12916                           prodh	equ	0xFF4
 12917                           prodl	equ	0xFF3
 12918                           intcon	equ	0xFF2
 12919                           postinc0	equ	0xFEE
 12920                           wreg	equ	0xFE8
 12921                           indf2	equ	0xFDF
 12922                           postinc2	equ	0xFDE
 12923                           fsr2h	equ	0xFDA
 12924                           fsr2l	equ	0xFD9
 12925                           status	equ	0xFD8
 12926                           
 12927 ;; *************** function _LCD_write_message *****************
 12928 ;; Defined at:
 12929 ;;		line 178 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 12930 ;; Parameters:    Size  Location     Type
 12931 ;;  buffer          2   31[BANK0 ] PTR const unsigned char 
 12932 ;;		 -> STR_14(14), STR_13(8), STR_12(21), STR_11(5), 
 12933 ;;		 -> STR_9(2), STR_8(5), STR_7(4), STR_6(12), 
 12934 ;;		 -> STR_5(21), STR_4(21), STR_3(21), STR_2(21), 
 12935 ;;		 -> STR_1(21), 
 12936 ;; Auto vars:     Size  Location     Type
 12937 ;;		None
 12938 ;; Return value:  Size  Location     Type
 12939 ;;		None               void
 12940 ;; Registers used:
 12941 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12942 ;; Tracked objects:
 12943 ;;		On entry : 0/0
 12944 ;;		On exit  : 0/0
 12945 ;;		Unchanged: 0/0
 12946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12947 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12950 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12951 ;;Total ram usage:        2 bytes
 12952 ;; Hardware stack levels used:    1
 12953 ;; Hardware stack levels required when called:    8
 12954 ;; This function calls:
 12955 ;;		_LCD_write_char
 12956 ;; This function is called by:
 12957 ;;		_main
 12958 ;;		_LCD_Handler
 12959 ;;		_board_initialization
 12960 ;; This function uses a non-reentrant model
 12961 ;;
 12962                           
 12963                           	psect	text30
 12964  01521C                     __ptext30:
 12965                           	opt stack 0
 12966  01521C                     _LCD_write_message:
 12967                           	opt stack 21
 12968                           
 12969                           ;src\LCD_44780.c: 181: while(*buffer) {
 12970                           
 12971                           ;incstack = 0
 12972  01521C  D00D               	goto	l8068
 12973  01521E                     l8064:
 12974                           
 12975                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
 12976  01521E  C07F  FFF6         	movff	LCD_write_message@buffer,tblptrl
 12977  015222  C080  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 12978  015226                     	if	0	;tblptru may be non-zero
 12979  015226                     	endif
 12980  015226                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12981  015226  0E00               	movlw	low (__mediumconst shr (0+16))
 12982  015228  6EF8               	movwf	tblptru,c
 12983  01522A                     	endif
 12984  01522A  0008               	tblrd		*
 12985  01522C  50F5               	movf	tablat,w,c
 12986  01522E  ECE3  F0A7         	call	_LCD_write_char
 12987                           
 12988                           ;src\LCD_44780.c: 186: buffer++;
 12989  015232  0100               	movlb	0	; () banked
 12990  015234  4B7F               	infsnz	LCD_write_message@buffer& (0+255),f,b
 12991  015236  2B80               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
 12992  015238                     l8068:
 12993  015238  C07F  FFF6         	movff	LCD_write_message@buffer,tblptrl
 12994  01523C  C080  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 12995  015240                     	if	0	;tblptru may be non-zero
 12996  015240                     	endif
 12997  015240                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12998  015240  0E00               	movlw	low (__mediumconst shr (0+16))
 12999  015242  6EF8               	movwf	tblptru,c
 13000  015244                     	endif
 13001  015244  0008               	tblrd		*
 13002  015246  50F5               	movf	tablat,w,c
 13003  015248  0900               	iorlw	0
 13004  01524A  B4D8               	btfsc	status,2,c
 13005  01524C  0012               	return	
 13006  01524E  D7E7               	goto	l8064
 13007  015250                     __end_of_LCD_write_message:
 13008                           	opt stack 0
 13009                           tblptru	equ	0xFF8
 13010                           tblptrh	equ	0xFF7
 13011                           tblptrl	equ	0xFF6
 13012                           tablat	equ	0xFF5
 13013                           prodh	equ	0xFF4
 13014                           prodl	equ	0xFF3
 13015                           intcon	equ	0xFF2
 13016                           postinc0	equ	0xFEE
 13017                           wreg	equ	0xFE8
 13018                           indf2	equ	0xFDF
 13019                           postinc2	equ	0xFDE
 13020                           fsr2h	equ	0xFDA
 13021                           fsr2l	equ	0xFD9
 13022                           status	equ	0xFD8
 13023                           
 13024 ;; *************** function _LCD_write_char *****************
 13025 ;; Defined at:
 13026 ;;		line 145 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 13027 ;; Parameters:    Size  Location     Type
 13028 ;;  value           1    wreg     unsigned char 
 13029 ;; Auto vars:     Size  Location     Type
 13030 ;;  value           1   30[BANK0 ] unsigned char 
 13031 ;;  D0              1   29[BANK0 ] unsigned char 
 13032 ;;  D1              1   28[BANK0 ] unsigned char 
 13033 ;;  D2              1   27[BANK0 ] unsigned char 
 13034 ;;  D3              1   26[BANK0 ] unsigned char 
 13035 ;; Return value:  Size  Location     Type
 13036 ;;		None               void
 13037 ;; Registers used:
 13038 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13039 ;; Tracked objects:
 13040 ;;		On entry : 0/0
 13041 ;;		On exit  : 0/0
 13042 ;;		Unchanged: 0/0
 13043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13045 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13047 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13048 ;;Total ram usage:        5 bytes
 13049 ;; Hardware stack levels used:    1
 13050 ;; Hardware stack levels required when called:    7
 13051 ;; This function calls:
 13052 ;;		_LCD_send_command
 13053 ;; This function is called by:
 13054 ;;		_LCD_write_message
 13055 ;;		_LCD_write_string
 13056 ;; This function uses a non-reentrant model
 13057 ;;
 13058                           
 13059                           	psect	text31
 13060  014FC6                     __ptext31:
 13061                           	opt stack 0
 13062  014FC6                     _LCD_write_char:
 13063                           	opt stack 21
 13064                           
 13065                           ;incstack = 0
 13066                           ;LCD_write_char@value stored from wreg
 13067  014FC6  0100               	movlb	0	; () banked
 13068  014FC8  6F7E               	movwf	LCD_write_char@value& (0+255),b
 13069                           
 13070                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 13071                           ;src\LCD_44780.c: 149: LATEbits.LATE2 = 1;
 13072  014FCA  848D               	bsf	3981,2,c	;volatile
 13073                           
 13074                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 13075  014FCC  0100               	movlb	0	; () banked
 13076  014FCE  457E               	rlncf	LCD_write_char@value& (0+255),w,b
 13077  014FD0  0B01               	andlw	1
 13078  014FD2  0100               	movlb	0	; () banked
 13079  014FD4  6F7A               	movwf	LCD_write_char@D3& (0+255),b
 13080                           
 13081                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 13082  014FD6  0100               	movlb	0	; () banked
 13083  014FD8  457E               	rlncf	LCD_write_char@value& (0+255),w,b
 13084  014FDA  46E8               	rlncf	wreg,f,c
 13085  014FDC  0B03               	andlw	3
 13086  014FDE  0B01               	andlw	1
 13087  014FE0  0100               	movlb	0	; () banked
 13088  014FE2  6F7B               	movwf	LCD_write_char@D2& (0+255),b
 13089                           
 13090                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 13091  014FE4  0100               	movlb	0	; () banked
 13092  014FE6  397E               	swapf	LCD_write_char@value& (0+255),w,b
 13093  014FE8  42E8               	rrncf	wreg,f,c
 13094  014FEA  0B07               	andlw	7
 13095  014FEC  0B01               	andlw	1
 13096  014FEE  0100               	movlb	0	; () banked
 13097  014FF0  6F7C               	movwf	LCD_write_char@D1& (0+255),b
 13098                           
 13099                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 13100  014FF2  0100               	movlb	0	; () banked
 13101  014FF4  397E               	swapf	LCD_write_char@value& (0+255),w,b
 13102  014FF6  0B0F               	andlw	15
 13103  014FF8  0B01               	andlw	1
 13104  014FFA  0100               	movlb	0	; () banked
 13105  014FFC  6F7D               	movwf	LCD_write_char@D0& (0+255),b
 13106                           
 13107                           ; BSR set to: 0
 13108                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 13109  014FFE  C07B  F076         	movff	LCD_write_char@D2,LCD_send_command@D2
 13110  015002  C07C  F077         	movff	LCD_write_char@D1,LCD_send_command@D1
 13111  015006  C07D  F078         	movff	LCD_write_char@D0,LCD_send_command@D0
 13112  01500A  0100               	movlb	0	; () banked
 13113  01500C  517A               	movf	LCD_write_char@D3& (0+255),w,b
 13114  01500E  EC9D  F0A8         	call	_LCD_send_command
 13115                           
 13116                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 13117  015012  0100               	movlb	0	; () banked
 13118  015014  397E               	swapf	LCD_write_char@value& (0+255),w,b
 13119  015016  46E8               	rlncf	wreg,f,c
 13120  015018  0B1F               	andlw	31
 13121  01501A  0B01               	andlw	1
 13122  01501C  0100               	movlb	0	; () banked
 13123  01501E  6F7A               	movwf	LCD_write_char@D3& (0+255),b
 13124                           
 13125                           ; BSR set to: 0
 13126                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 13127  015020  0100               	movlb	0	; () banked
 13128  015022  417E               	rrncf	LCD_write_char@value& (0+255),w,b
 13129  015024  42E8               	rrncf	wreg,f,c
 13130  015026  0B3F               	andlw	63
 13131  015028  0B01               	andlw	1
 13132  01502A  0100               	movlb	0	; () banked
 13133  01502C  6F7B               	movwf	LCD_write_char@D2& (0+255),b
 13134                           
 13135                           ; BSR set to: 0
 13136                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 13137  01502E  0100               	movlb	0	; () banked
 13138  015030  90D8               	bcf	status,0,c
 13139  015032  317E               	rrcf	LCD_write_char@value& (0+255),w,b
 13140  015034  0B01               	andlw	1
 13141  015036  0100               	movlb	0	; () banked
 13142  015038  6F7C               	movwf	LCD_write_char@D1& (0+255),b
 13143                           
 13144                           ; BSR set to: 0
 13145                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 13146  01503A  0100               	movlb	0	; () banked
 13147  01503C  517E               	movf	LCD_write_char@value& (0+255),w,b
 13148  01503E  0B01               	andlw	1
 13149  015040  0100               	movlb	0	; () banked
 13150  015042  6F7D               	movwf	LCD_write_char@D0& (0+255),b
 13151                           
 13152                           ; BSR set to: 0
 13153                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 13154  015044  C07B  F076         	movff	LCD_write_char@D2,LCD_send_command@D2
 13155  015048  C07C  F077         	movff	LCD_write_char@D1,LCD_send_command@D1
 13156  01504C  C07D  F078         	movff	LCD_write_char@D0,LCD_send_command@D0
 13157  015050  0100               	movlb	0	; () banked
 13158  015052  517A               	movf	LCD_write_char@D3& (0+255),w,b
 13159  015054  EC9D  F0A8         	call	_LCD_send_command
 13160                           
 13161                           ;src\LCD_44780.c: 167: LATEbits.LATE2 = 0;
 13162  015058  948D               	bcf	3981,2,c	;volatile
 13163  01505A  0012               	return		;funcret
 13164  01505C                     __end_of_LCD_write_char:
 13165                           	opt stack 0
 13166                           tblptru	equ	0xFF8
 13167                           tblptrh	equ	0xFF7
 13168                           tblptrl	equ	0xFF6
 13169                           tablat	equ	0xFF5
 13170                           prodh	equ	0xFF4
 13171                           prodl	equ	0xFF3
 13172                           intcon	equ	0xFF2
 13173                           postinc0	equ	0xFEE
 13174                           wreg	equ	0xFE8
 13175                           indf2	equ	0xFDF
 13176                           postinc2	equ	0xFDE
 13177                           fsr2h	equ	0xFDA
 13178                           fsr2l	equ	0xFD9
 13179                           status	equ	0xFD8
 13180                           
 13181 ;; *************** function _LCD_goto_line *****************
 13182 ;; Defined at:
 13183 ;;		line 111 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 13184 ;; Parameters:    Size  Location     Type
 13185 ;;  line            1    wreg     unsigned char 
 13186 ;; Auto vars:     Size  Location     Type
 13187 ;;  line            1   26[BANK0 ] unsigned char 
 13188 ;; Return value:  Size  Location     Type
 13189 ;;		None               void
 13190 ;; Registers used:
 13191 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13192 ;; Tracked objects:
 13193 ;;		On entry : 0/0
 13194 ;;		On exit  : 0/0
 13195 ;;		Unchanged: 0/0
 13196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13198 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13200 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13201 ;;Total ram usage:        1 bytes
 13202 ;; Hardware stack levels used:    1
 13203 ;; Hardware stack levels required when called:    7
 13204 ;; This function calls:
 13205 ;;		_LCD_send_command
 13206 ;; This function is called by:
 13207 ;;		_main
 13208 ;;		_LCD_Handler
 13209 ;;		_board_initialization
 13210 ;;		_LCD_goto_xy
 13211 ;; This function uses a non-reentrant model
 13212 ;;
 13213                           
 13214                           	psect	text32
 13215  0149C8                     __ptext32:
 13216                           	opt stack 0
 13217  0149C8                     _LCD_goto_line:
 13218                           	opt stack 22
 13219                           
 13220                           ;incstack = 0
 13221                           ;LCD_goto_line@line stored from wreg
 13222  0149C8  0100               	movlb	0	; () banked
 13223  0149CA  6F7A               	movwf	LCD_goto_line@line& (0+255),b
 13224                           
 13225                           ;src\LCD_44780.c: 113: switch(line) {
 13226  0149CC  D064               	goto	l8060
 13227  0149CE                     l8052:
 13228  0149CE  0E00               	movlw	0
 13229  0149D0  0100               	movlb	0	; () banked
 13230  0149D2  6F76               	movwf	LCD_send_command@D2& (0+255),b
 13231  0149D4  0E00               	movlw	0
 13232  0149D6  0100               	movlb	0	; () banked
 13233  0149D8  6F77               	movwf	LCD_send_command@D1& (0+255),b
 13234  0149DA  0E00               	movlw	0
 13235  0149DC  0100               	movlb	0	; () banked
 13236  0149DE  6F78               	movwf	LCD_send_command@D0& (0+255),b
 13237  0149E0  0E01               	movlw	1
 13238  0149E2  EC9D  F0A8         	call	_LCD_send_command
 13239                           
 13240                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 13241  0149E6  0E00               	movlw	0
 13242  0149E8  0100               	movlb	0	; () banked
 13243  0149EA  6F76               	movwf	LCD_send_command@D2& (0+255),b
 13244  0149EC  0E00               	movlw	0
 13245  0149EE  0100               	movlb	0	; () banked
 13246  0149F0  6F77               	movwf	LCD_send_command@D1& (0+255),b
 13247  0149F2  0E00               	movlw	0
 13248  0149F4  0100               	movlb	0	; () banked
 13249  0149F6  6F78               	movwf	LCD_send_command@D0& (0+255),b
 13250  0149F8  0E00               	movlw	0
 13251  0149FA  EC9D  F0A8         	call	_LCD_send_command
 13252                           
 13253                           ;src\LCD_44780.c: 117: break;
 13254  0149FE  0012               	return	
 13255  014A00                     l8054:
 13256  014A00  0E01               	movlw	1
 13257  014A02  0100               	movlb	0	; () banked
 13258  014A04  6F76               	movwf	LCD_send_command@D2& (0+255),b
 13259  014A06  0E00               	movlw	0
 13260  014A08  0100               	movlb	0	; () banked
 13261  014A0A  6F77               	movwf	LCD_send_command@D1& (0+255),b
 13262  014A0C  0E00               	movlw	0
 13263  014A0E  0100               	movlb	0	; () banked
 13264  014A10  6F78               	movwf	LCD_send_command@D0& (0+255),b
 13265  014A12  0E01               	movlw	1
 13266  014A14  EC9D  F0A8         	call	_LCD_send_command
 13267                           
 13268                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 13269  014A18  0E00               	movlw	0
 13270  014A1A  0100               	movlb	0	; () banked
 13271  014A1C  6F76               	movwf	LCD_send_command@D2& (0+255),b
 13272  014A1E  0E00               	movlw	0
 13273  014A20  0100               	movlb	0	; () banked
 13274  014A22  6F77               	movwf	LCD_send_command@D1& (0+255),b
 13275  014A24  0E00               	movlw	0
 13276  014A26  0100               	movlb	0	; () banked
 13277  014A28  6F78               	movwf	LCD_send_command@D0& (0+255),b
 13278  014A2A  0E00               	movlw	0
 13279  014A2C  EC9D  F0A8         	call	_LCD_send_command
 13280                           
 13281                           ;src\LCD_44780.c: 121: break;
 13282  014A30  0012               	return	
 13283  014A32                     l8056:
 13284  014A32  0E00               	movlw	0
 13285  014A34  0100               	movlb	0	; () banked
 13286  014A36  6F76               	movwf	LCD_send_command@D2& (0+255),b
 13287  014A38  0E00               	movlw	0
 13288  014A3A  0100               	movlb	0	; () banked
 13289  014A3C  6F77               	movwf	LCD_send_command@D1& (0+255),b
 13290  014A3E  0E01               	movlw	1
 13291  014A40  0100               	movlb	0	; () banked
 13292  014A42  6F78               	movwf	LCD_send_command@D0& (0+255),b
 13293  014A44  0E01               	movlw	1
 13294  014A46  EC9D  F0A8         	call	_LCD_send_command
 13295                           
 13296                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 13297  014A4A  0E01               	movlw	1
 13298  014A4C  0100               	movlb	0	; () banked
 13299  014A4E  6F76               	movwf	LCD_send_command@D2& (0+255),b
 13300  014A50  0E00               	movlw	0
 13301  014A52  0100               	movlb	0	; () banked
 13302  014A54  6F77               	movwf	LCD_send_command@D1& (0+255),b
 13303  014A56  0E00               	movlw	0
 13304  014A58  0100               	movlb	0	; () banked
 13305  014A5A  6F78               	movwf	LCD_send_command@D0& (0+255),b
 13306  014A5C  0E00               	movlw	0
 13307  014A5E  EC9D  F0A8         	call	_LCD_send_command
 13308                           
 13309                           ;src\LCD_44780.c: 125: break;
 13310  014A62  0012               	return	
 13311  014A64                     l8058:
 13312  014A64  0E01               	movlw	1
 13313  014A66  0100               	movlb	0	; () banked
 13314  014A68  6F76               	movwf	LCD_send_command@D2& (0+255),b
 13315  014A6A  0E00               	movlw	0
 13316  014A6C  0100               	movlb	0	; () banked
 13317  014A6E  6F77               	movwf	LCD_send_command@D1& (0+255),b
 13318  014A70  0E01               	movlw	1
 13319  014A72  0100               	movlb	0	; () banked
 13320  014A74  6F78               	movwf	LCD_send_command@D0& (0+255),b
 13321  014A76  0E01               	movlw	1
 13322  014A78  EC9D  F0A8         	call	_LCD_send_command
 13323                           
 13324                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 13325  014A7C  0E01               	movlw	1
 13326  014A7E  0100               	movlb	0	; () banked
 13327  014A80  6F76               	movwf	LCD_send_command@D2& (0+255),b
 13328  014A82  0E00               	movlw	0
 13329  014A84  0100               	movlb	0	; () banked
 13330  014A86  6F77               	movwf	LCD_send_command@D1& (0+255),b
 13331  014A88  0E00               	movlw	0
 13332  014A8A  0100               	movlb	0	; () banked
 13333  014A8C  6F78               	movwf	LCD_send_command@D0& (0+255),b
 13334  014A8E  0E00               	movlw	0
 13335  014A90  EC9D  F0A8         	call	_LCD_send_command
 13336                           
 13337                           ;src\LCD_44780.c: 129: }
 13338  014A94  0012               	return	
 13339  014A96                     l8060:
 13340  014A96  0100               	movlb	0	; () banked
 13341  014A98  517A               	movf	LCD_goto_line@line& (0+255),w,b
 13342                           
 13343                           ; Switch size 1, requested type "space"
 13344                           ; Number of cases is 4, Range of values is 1 to 4
 13345                           ; switch strategies available:
 13346                           ; Name         Instructions Cycles
 13347                           ; simple_byte           13     7 (average)
 13348                           ;	Chosen strategy is simple_byte
 13349  014A9A  0A01               	xorlw	1	; case 1
 13350  014A9C  B4D8               	btfsc	status,2,c
 13351  014A9E  D797               	goto	l8052
 13352  014AA0  0A03               	xorlw	3	; case 2
 13353  014AA2  B4D8               	btfsc	status,2,c
 13354  014AA4  D7AD               	goto	l8054
 13355  014AA6  0A01               	xorlw	1	; case 3
 13356  014AA8  B4D8               	btfsc	status,2,c
 13357  014AAA  D7C3               	goto	l8056
 13358  014AAC  0A07               	xorlw	7	; case 4
 13359  014AAE  A4D8               	btfss	status,2,c
 13360  014AB0  0012               	return	
 13361  014AB2  D7D8               	goto	l8058
 13362  014AB4                     __end_of_LCD_goto_line:
 13363                           	opt stack 0
 13364                           tblptru	equ	0xFF8
 13365                           tblptrh	equ	0xFF7
 13366                           tblptrl	equ	0xFF6
 13367                           tablat	equ	0xFF5
 13368                           prodh	equ	0xFF4
 13369                           prodl	equ	0xFF3
 13370                           intcon	equ	0xFF2
 13371                           postinc0	equ	0xFEE
 13372                           wreg	equ	0xFE8
 13373                           indf2	equ	0xFDF
 13374                           postinc2	equ	0xFDE
 13375                           fsr2h	equ	0xFDA
 13376                           fsr2l	equ	0xFD9
 13377                           status	equ	0xFD8
 13378                           
 13379 ;; *************** function _LCD_clear *****************
 13380 ;; Defined at:
 13381 ;;		line 257 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 13382 ;; Parameters:    Size  Location     Type
 13383 ;;		None
 13384 ;; Auto vars:     Size  Location     Type
 13385 ;;		None
 13386 ;; Return value:  Size  Location     Type
 13387 ;;		None               void
 13388 ;; Registers used:
 13389 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13390 ;; Tracked objects:
 13391 ;;		On entry : 0/0
 13392 ;;		On exit  : 0/0
 13393 ;;		Unchanged: 0/0
 13394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13399 ;;Total ram usage:        0 bytes
 13400 ;; Hardware stack levels used:    1
 13401 ;; Hardware stack levels required when called:    7
 13402 ;; This function calls:
 13403 ;;		_LCD_send_command
 13404 ;; This function is called by:
 13405 ;;		_LCD_initialize
 13406 ;;		_main
 13407 ;;		_LCD_Handler
 13408 ;;		_board_initialization
 13409 ;; This function uses a non-reentrant model
 13410 ;;
 13411                           
 13412                           	psect	text33
 13413  015282                     __ptext33:
 13414                           	opt stack 0
 13415  015282                     _LCD_clear:
 13416                           	opt stack 21
 13417                           
 13418                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 13419                           
 13420                           ;incstack = 0
 13421  015282  0E00               	movlw	0
 13422  015284  0100               	movlb	0	; () banked
 13423  015286  6F76               	movwf	LCD_send_command@D2& (0+255),b
 13424  015288  0E00               	movlw	0
 13425  01528A  0100               	movlb	0	; () banked
 13426  01528C  6F77               	movwf	LCD_send_command@D1& (0+255),b
 13427  01528E  0E00               	movlw	0
 13428  015290  0100               	movlb	0	; () banked
 13429  015292  6F78               	movwf	LCD_send_command@D0& (0+255),b
 13430  015294  0E00               	movlw	0
 13431  015296  EC9D  F0A8         	call	_LCD_send_command
 13432                           
 13433                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 13434  01529A  0E00               	movlw	0
 13435  01529C  0100               	movlb	0	; () banked
 13436  01529E  6F76               	movwf	LCD_send_command@D2& (0+255),b
 13437  0152A0  0E00               	movlw	0
 13438  0152A2  0100               	movlb	0	; () banked
 13439  0152A4  6F77               	movwf	LCD_send_command@D1& (0+255),b
 13440  0152A6  0E01               	movlw	1
 13441  0152A8  0100               	movlb	0	; () banked
 13442  0152AA  6F78               	movwf	LCD_send_command@D0& (0+255),b
 13443  0152AC  0E00               	movlw	0
 13444  0152AE  EC9D  F0A8         	call	_LCD_send_command
 13445  0152B2  0012               	return		;funcret
 13446  0152B4                     __end_of_LCD_clear:
 13447                           	opt stack 0
 13448                           tblptru	equ	0xFF8
 13449                           tblptrh	equ	0xFF7
 13450                           tblptrl	equ	0xFF6
 13451                           tablat	equ	0xFF5
 13452                           prodh	equ	0xFF4
 13453                           prodl	equ	0xFF3
 13454                           intcon	equ	0xFF2
 13455                           postinc0	equ	0xFEE
 13456                           wreg	equ	0xFE8
 13457                           indf2	equ	0xFDF
 13458                           postinc2	equ	0xFDE
 13459                           fsr2h	equ	0xFDA
 13460                           fsr2l	equ	0xFD9
 13461                           status	equ	0xFD8
 13462                           
 13463 ;; *************** function _LCD_send_command *****************
 13464 ;; Defined at:
 13465 ;;		line 61 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 13466 ;; Parameters:    Size  Location     Type
 13467 ;;  D3              1    wreg     unsigned char 
 13468 ;;  D2              1   22[BANK0 ] unsigned char 
 13469 ;;  D1              1   23[BANK0 ] unsigned char 
 13470 ;;  D0              1   24[BANK0 ] unsigned char 
 13471 ;; Auto vars:     Size  Location     Type
 13472 ;;  D3              1   25[BANK0 ] unsigned char 
 13473 ;; Return value:  Size  Location     Type
 13474 ;;		None               void
 13475 ;; Registers used:
 13476 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13477 ;; Tracked objects:
 13478 ;;		On entry : 0/0
 13479 ;;		On exit  : 0/0
 13480 ;;		Unchanged: 0/0
 13481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13482 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13483 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13485 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13486 ;;Total ram usage:        4 bytes
 13487 ;; Hardware stack levels used:    1
 13488 ;; Hardware stack levels required when called:    6
 13489 ;; This function calls:
 13490 ;;		_LCD_enable_pulse
 13491 ;; This function is called by:
 13492 ;;		_LCD_goto_line
 13493 ;;		_LCD_write_char
 13494 ;;		_LCD_clear
 13495 ;;		_LCD_cursor
 13496 ;;		_LCD_initialize
 13497 ;;		_LCD_home
 13498 ;;		_LCD_shift
 13499 ;;		_LCD_shift_cursor
 13500 ;; This function uses a non-reentrant model
 13501 ;;
 13502                           
 13503                           	psect	text34
 13504  01513A                     __ptext34:
 13505                           	opt stack 0
 13506  01513A                     _LCD_send_command:
 13507                           	opt stack 21
 13508                           
 13509                           ;incstack = 0
 13510                           ;LCD_send_command@D3 stored from wreg
 13511  01513A  0100               	movlb	0	; () banked
 13512  01513C  6F79               	movwf	LCD_send_command@D3& (0+255),b
 13513                           
 13514                           ;src\LCD_44780.c: 63: LATCbits.LATC2 = D0;
 13515  01513E  0100               	movlb	0	; () banked
 13516  015140  B178               	btfsc	LCD_send_command@D0& (0+255),0,b
 13517  015142  D002               	bra	u8105
 13518  015144  948B               	bcf	3979,2,c	;volatile
 13519  015146  D001               	bra	u8106
 13520  015148                     u8105:
 13521  015148  848B               	bsf	3979,2,c	;volatile
 13522  01514A                     u8106:
 13523                           
 13524                           ;src\LCD_44780.c: 64: LATCbits.LATC3 = D1;
 13525  01514A  0100               	movlb	0	; () banked
 13526  01514C  B177               	btfsc	LCD_send_command@D1& (0+255),0,b
 13527  01514E  D002               	bra	u8115
 13528  015150  968B               	bcf	3979,3,c	;volatile
 13529  015152  D001               	bra	u8116
 13530  015154                     u8115:
 13531  015154  868B               	bsf	3979,3,c	;volatile
 13532  015156                     u8116:
 13533                           
 13534                           ;src\LCD_44780.c: 65: LATDbits.LATD0 = D2;
 13535  015156  0100               	movlb	0	; () banked
 13536  015158  B176               	btfsc	LCD_send_command@D2& (0+255),0,b
 13537  01515A  D002               	bra	u8125
 13538  01515C  908C               	bcf	3980,0,c	;volatile
 13539  01515E  D001               	bra	u8126
 13540  015160                     u8125:
 13541  015160  808C               	bsf	3980,0,c	;volatile
 13542  015162                     u8126:
 13543                           
 13544                           ;src\LCD_44780.c: 66: LATDbits.LATD1 = D3;
 13545  015162  0100               	movlb	0	; () banked
 13546  015164  B179               	btfsc	LCD_send_command@D3& (0+255),0,b
 13547  015166  D002               	bra	u8135
 13548  015168  928C               	bcf	3980,1,c	;volatile
 13549  01516A  D001               	bra	u8136
 13550  01516C                     u8135:
 13551  01516C  828C               	bsf	3980,1,c	;volatile
 13552  01516E                     u8136:
 13553                           
 13554                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 13555  01516E  EC94  F0A9         	call	_LCD_enable_pulse	;wreg free
 13556  015172  0012               	return		;funcret
 13557  015174                     __end_of_LCD_send_command:
 13558                           	opt stack 0
 13559                           tblptru	equ	0xFF8
 13560                           tblptrh	equ	0xFF7
 13561                           tblptrl	equ	0xFF6
 13562                           tablat	equ	0xFF5
 13563                           prodh	equ	0xFF4
 13564                           prodl	equ	0xFF3
 13565                           intcon	equ	0xFF2
 13566                           postinc0	equ	0xFEE
 13567                           wreg	equ	0xFE8
 13568                           indf2	equ	0xFDF
 13569                           postinc2	equ	0xFDE
 13570                           fsr2h	equ	0xFDA
 13571                           fsr2l	equ	0xFD9
 13572                           status	equ	0xFD8
 13573                           
 13574 ;; *************** function _LCD_enable_pulse *****************
 13575 ;; Defined at:
 13576 ;;		line 49 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 13577 ;; Parameters:    Size  Location     Type
 13578 ;;		None
 13579 ;; Auto vars:     Size  Location     Type
 13580 ;;		None
 13581 ;; Return value:  Size  Location     Type
 13582 ;;		None               void
 13583 ;; Registers used:
 13584 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13585 ;; Tracked objects:
 13586 ;;		On entry : 0/0
 13587 ;;		On exit  : 0/0
 13588 ;;		Unchanged: 0/0
 13589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13594 ;;Total ram usage:        0 bytes
 13595 ;; Hardware stack levels used:    1
 13596 ;; Hardware stack levels required when called:    5
 13597 ;; This function calls:
 13598 ;;		_delay_ms
 13599 ;; This function is called by:
 13600 ;;		_LCD_send_command
 13601 ;; This function uses a non-reentrant model
 13602 ;;
 13603                           
 13604                           	psect	text35
 13605  015328                     __ptext35:
 13606                           	opt stack 0
 13607  015328                     _LCD_enable_pulse:
 13608                           	opt stack 21
 13609                           
 13610                           ;src\LCD_44780.c: 51: LATCbits.LATC1 = 1;
 13611                           
 13612                           ;incstack = 0
 13613  015328  828B               	bsf	3979,1,c	;volatile
 13614                           
 13615                           ;src\LCD_44780.c: 52: delay_ms (1);
 13616  01532A  0E00               	movlw	0
 13617  01532C  0100               	movlb	0	; () banked
 13618  01532E  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
 13619  015330  0E01               	movlw	1
 13620  015332  6F74               	movwf	delay_ms@value_ms& (0+255),b
 13621  015334  ECBA  F0A8         	call	_delay_ms	;wreg free
 13622                           
 13623                           ;src\LCD_44780.c: 53: LATCbits.LATC1 = 0;
 13624  015338  928B               	bcf	3979,1,c	;volatile
 13625                           
 13626                           ;src\LCD_44780.c: 54: delay_ms (1);
 13627  01533A  0E00               	movlw	0
 13628  01533C  0100               	movlb	0	; () banked
 13629  01533E  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
 13630  015340  0E01               	movlw	1
 13631  015342  6F74               	movwf	delay_ms@value_ms& (0+255),b
 13632  015344  ECBA  F0A8         	call	_delay_ms	;wreg free
 13633  015348  0012               	return		;funcret
 13634  01534A                     __end_of_LCD_enable_pulse:
 13635                           	opt stack 0
 13636                           tblptru	equ	0xFF8
 13637                           tblptrh	equ	0xFF7
 13638                           tblptrl	equ	0xFF6
 13639                           tablat	equ	0xFF5
 13640                           prodh	equ	0xFF4
 13641                           prodl	equ	0xFF3
 13642                           intcon	equ	0xFF2
 13643                           postinc0	equ	0xFEE
 13644                           wreg	equ	0xFE8
 13645                           indf2	equ	0xFDF
 13646                           postinc2	equ	0xFDE
 13647                           fsr2h	equ	0xFDA
 13648                           fsr2l	equ	0xFD9
 13649                           status	equ	0xFD8
 13650                           
 13651 ;; *************** function _delay_ms *****************
 13652 ;; Defined at:
 13653 ;;		line 61 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 13654 ;; Parameters:    Size  Location     Type
 13655 ;;  value_ms        2   20[BANK0 ] unsigned int 
 13656 ;; Auto vars:     Size  Location     Type
 13657 ;;		None
 13658 ;; Return value:  Size  Location     Type
 13659 ;;		None               void
 13660 ;; Registers used:
 13661 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13662 ;; Tracked objects:
 13663 ;;		On entry : 0/0
 13664 ;;		On exit  : 0/0
 13665 ;;		Unchanged: 0/0
 13666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13667 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13670 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13671 ;;Total ram usage:        2 bytes
 13672 ;; Hardware stack levels used:    1
 13673 ;; Hardware stack levels required when called:    4
 13674 ;; This function calls:
 13675 ;;		___wmul
 13676 ;; This function is called by:
 13677 ;;		_LCD_enable_pulse
 13678 ;;		_LCD_initialize
 13679 ;;		_main
 13680 ;;		_board_initialization
 13681 ;;		_delay_s
 13682 ;; This function uses a non-reentrant model
 13683 ;;
 13684                           
 13685                           	psect	text36
 13686  015174                     __ptext36:
 13687                           	opt stack 0
 13688  015174                     _delay_ms:
 13689                           	opt stack 26
 13690                           
 13691                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 13692                           
 13693                           ;incstack = 0
 13694  015174  C0EF  F06E         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 13695  015178  0100               	movlb	0	; () banked
 13696  01517A  6B6F               	clrf	(___wmul@multiplier+1)& (0+255),b
 13697  01517C  C074  F070         	movff	delay_ms@value_ms,___wmul@multiplicand
 13698  015180  C075  F071         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 13699  015184  ECF3  F0A8         	call	___wmul	;wreg free
 13700  015188  C06E  F0E6         	movff	?___wmul,_clock_counter_reference	;volatile
 13701  01518C  C06F  F0E7         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 13702                           
 13703                           ;src\delay.c: 75: while (clock_counter_reference) {
 13704  015190  D007               	goto	l577
 13705  015192                     l6544:
 13706                           
 13707                           ;src\delay.c: 85: _delay(240);
 13708  015192  0E50               	movlw	80
 13709  015194                     u11867:
 13710  015194  2EE8               	decfsz	wreg,f,c
 13711  015196  D7FE               	goto	u11867
 13712                           
 13713                           ;src\delay.c: 88: clock_counter_reference--;
 13714  015198  0100               	movlb	0	; () banked
 13715  01519A  07E6               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 13716  01519C  A0D8               	btfss	status,0,c
 13717  01519E  07E7               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 13718  0151A0                     l577:
 13719  0151A0  0100               	movlb	0	; () banked
 13720  0151A2  51E6               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 13721  0151A4  0100               	movlb	0	; () banked
 13722  0151A6  11E7               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 13723  0151A8  B4D8               	btfsc	status,2,c
 13724  0151AA  0012               	return	
 13725  0151AC  D7F2               	goto	l6544
 13726  0151AE                     __end_of_delay_ms:
 13727                           	opt stack 0
 13728                           tblptru	equ	0xFF8
 13729                           tblptrh	equ	0xFF7
 13730                           tblptrl	equ	0xFF6
 13731                           tablat	equ	0xFF5
 13732                           prodh	equ	0xFF4
 13733                           prodl	equ	0xFF3
 13734                           intcon	equ	0xFF2
 13735                           postinc0	equ	0xFEE
 13736                           wreg	equ	0xFE8
 13737                           indf2	equ	0xFDF
 13738                           postinc2	equ	0xFDE
 13739                           fsr2h	equ	0xFDA
 13740                           fsr2l	equ	0xFD9
 13741                           status	equ	0xFD8
 13742                           
 13743 ;; *************** function ___wmul *****************
 13744 ;; Defined at:
 13745 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 13746 ;; Parameters:    Size  Location     Type
 13747 ;;  multiplier      2   14[BANK0 ] unsigned int 
 13748 ;;  multiplicand    2   16[BANK0 ] unsigned int 
 13749 ;; Auto vars:     Size  Location     Type
 13750 ;;  product         2   18[BANK0 ] unsigned int 
 13751 ;; Return value:  Size  Location     Type
 13752 ;;                  2   14[BANK0 ] unsigned int 
 13753 ;; Registers used:
 13754 ;;		wreg, status,2, status,0, prodl, prodh
 13755 ;; Tracked objects:
 13756 ;;		On entry : 0/0
 13757 ;;		On exit  : 0/0
 13758 ;;		Unchanged: 0/0
 13759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13760 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13761 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13763 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13764 ;;Total ram usage:        6 bytes
 13765 ;; Hardware stack levels used:    1
 13766 ;; Hardware stack levels required when called:    3
 13767 ;; This function calls:
 13768 ;;		Nothing
 13769 ;; This function is called by:
 13770 ;;		_delay_ms
 13771 ;;		_sprintf
 13772 ;; This function uses a non-reentrant model
 13773 ;;
 13774                           
 13775                           	psect	text37
 13776  0151E6                     __ptext37:
 13777                           	opt stack 0
 13778  0151E6                     ___wmul:
 13779                           	opt stack 26
 13780                           
 13781                           ; BSR set to: 0
 13782                           ;incstack = 0
 13783  0151E6  0100               	movlb	0	; () banked
 13784  0151E8  516E               	movf	___wmul@multiplier& (0+255),w,b
 13785  0151EA  0100               	movlb	0	; () banked
 13786  0151EC  0370               	mulwf	___wmul@multiplicand& (0+255),b
 13787  0151EE  CFF3 F072          	movff	prodl,___wmul@product
 13788  0151F2  CFF4 F073          	movff	prodh,___wmul@product+1
 13789  0151F6  0100               	movlb	0	; () banked
 13790  0151F8  516E               	movf	___wmul@multiplier& (0+255),w,b
 13791  0151FA  0100               	movlb	0	; () banked
 13792  0151FC  0371               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 13793  0151FE  50F3               	movf	prodl,w,c
 13794  015200  0100               	movlb	0	; () banked
 13795  015202  2773               	addwf	(___wmul@product+1)& (0+255),f,b
 13796  015204  0100               	movlb	0	; () banked
 13797  015206  516F               	movf	(___wmul@multiplier+1)& (0+255),w,b
 13798  015208  0100               	movlb	0	; () banked
 13799  01520A  0370               	mulwf	___wmul@multiplicand& (0+255),b
 13800  01520C  50F3               	movf	prodl,w,c
 13801  01520E  0100               	movlb	0	; () banked
 13802  015210  2773               	addwf	(___wmul@product+1)& (0+255),f,b
 13803                           
 13804                           ; BSR set to: 0
 13805  015212  C072  F06E         	movff	___wmul@product,?___wmul
 13806  015216  C073  F06F         	movff	___wmul@product+1,?___wmul+1
 13807  01521A  0012               	return	
 13808  01521C                     __end_of___wmul:
 13809                           	opt stack 0
 13810                           tblptru	equ	0xFF8
 13811                           tblptrh	equ	0xFF7
 13812                           tblptrl	equ	0xFF6
 13813                           tablat	equ	0xFF5
 13814                           prodh	equ	0xFF4
 13815                           prodl	equ	0xFF3
 13816                           intcon	equ	0xFF2
 13817                           postinc0	equ	0xFEE
 13818                           wreg	equ	0xFE8
 13819                           indf2	equ	0xFDF
 13820                           postinc2	equ	0xFDE
 13821                           fsr2h	equ	0xFDA
 13822                           fsr2l	equ	0xFD9
 13823                           status	equ	0xFD8
 13824                           
 13825 ;; *************** function _Joystick_Polling *****************
 13826 ;; Defined at:
 13827 ;;		line 267 in file "RemoteCan.c"
 13828 ;; Parameters:    Size  Location     Type
 13829 ;;		None
 13830 ;; Auto vars:     Size  Location     Type
 13831 ;;  i               1   15[BANK0 ] unsigned char 
 13832 ;; Return value:  Size  Location     Type
 13833 ;;		None               void
 13834 ;; Registers used:
 13835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13836 ;; Tracked objects:
 13837 ;;		On entry : 0/0
 13838 ;;		On exit  : 0/0
 13839 ;;		Unchanged: 0/0
 13840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13842 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13843 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13844 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13845 ;;Total ram usage:        2 bytes
 13846 ;; Hardware stack levels used:    1
 13847 ;; Hardware stack levels required when called:    3
 13848 ;; This function calls:
 13849 ;;		Nothing
 13850 ;; This function is called by:
 13851 ;;		_main
 13852 ;; This function uses a non-reentrant model
 13853 ;;
 13854                           
 13855                           	psect	text38
 13856  01505C                     __ptext38:
 13857                           	opt stack 0
 13858  01505C                     _Joystick_Polling:
 13859                           	opt stack 27
 13860                           
 13861                           ;RemoteCan.c: 268: for (unsigned char i = 0; i < 2; i++) {
 13862                           
 13863                           ; BSR set to: 0
 13864                           ;incstack = 0
 13865  01505C  0E00               	movlw	0
 13866  01505E  0100               	movlb	0	; () banked
 13867  015060  6F6F               	movwf	Joystick_Polling@i& (0+255),b
 13868  015062                     l8576:
 13869                           
 13870                           ; BSR set to: 0
 13871  015062  0E01               	movlw	1
 13872  015064  0100               	movlb	0	; () banked
 13873  015066  656F               	cpfsgt	Joystick_Polling@i& (0+255),b
 13874  015068  D001               	goto	l790
 13875  01506A  0012               	return	
 13876  01506C                     l790:
 13877                           
 13878                           ; BSR set to: 0
 13879                           ;RemoteCan.c: 269: ADCON0bits.GO = 1;
 13880  01506C  82C2               	bsf	4034,1,c	;volatile
 13881  01506E                     l792:
 13882  01506E  B2C2               	btfsc	4034,1,c	;volatile
 13883  015070  D7FE               	goto	l792
 13884                           
 13885                           ;RemoteCan.c: 271: JoystickValues[i] = ADRESH;
 13886  015072  0100               	movlb	0	; () banked
 13887  015074  516F               	movf	Joystick_Polling@i& (0+255),w,b
 13888  015076  0D01               	mullw	1
 13889  015078  0EE4               	movlw	low _JoystickValues
 13890  01507A  24F3               	addwf	prodl,w,c
 13891  01507C  6ED9               	movwf	fsr2l,c
 13892  01507E  0E00               	movlw	high _JoystickValues
 13893  015080  20F4               	addwfc	prodh,w,c
 13894  015082  6EDA               	movwf	fsr2h,c
 13895  015084  CFC4 FFDF          	movff	4036,indf2	;volatile
 13896                           
 13897                           ; BSR set to: 0
 13898                           ;RemoteCan.c: 272: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 13899  015088  A4C2               	btfss	4034,2,c	;volatile
 13900  01508A  D002               	goto	u11470
 13901  01508C  0E01               	movlw	1
 13902  01508E  D001               	goto	u11476
 13903  015090                     u11470:
 13904  015090  0E00               	movlw	0
 13905  015092                     u11476:
 13906  015092  0AFF               	xorlw	255
 13907  015094  0100               	movlb	0	; () banked
 13908  015096  6F6E               	movwf	??_Joystick_Polling& (0+255),b
 13909  015098  0100               	movlb	0	; () banked
 13910  01509A  476E               	rlncf	??_Joystick_Polling& (0+255),f,b
 13911  01509C  476E               	rlncf	??_Joystick_Polling& (0+255),f,b
 13912  01509E  50C2               	movf	4034,w,c	;volatile
 13913  0150A0  0100               	movlb	0	; () banked
 13914  0150A2  196E               	xorwf	??_Joystick_Polling& (0+255),w,b
 13915  0150A4  0BFB               	andlw	-5
 13916  0150A6  196E               	xorwf	??_Joystick_Polling& (0+255),w,b
 13917  0150A8  6EC2               	movwf	4034,c	;volatile
 13918                           
 13919                           ; BSR set to: 0
 13920  0150AA  0100               	movlb	0	; () banked
 13921  0150AC  2B6F               	incf	Joystick_Polling@i& (0+255),f,b
 13922  0150AE  D7D9               	goto	l8576
 13923  0150B0                     __end_of_Joystick_Polling:
 13924                           	opt stack 0
 13925                           tblptru	equ	0xFF8
 13926                           tblptrh	equ	0xFF7
 13927                           tblptrl	equ	0xFF6
 13928                           tablat	equ	0xFF5
 13929                           prodh	equ	0xFF4
 13930                           prodl	equ	0xFF3
 13931                           intcon	equ	0xFF2
 13932                           postinc0	equ	0xFEE
 13933                           wreg	equ	0xFE8
 13934                           indf2	equ	0xFDF
 13935                           postinc2	equ	0xFDE
 13936                           fsr2h	equ	0xFDA
 13937                           fsr2l	equ	0xFD9
 13938                           status	equ	0xFD8
 13939                           
 13940 ;; *************** function _CAN_interpreter *****************
 13941 ;; Defined at:
 13942 ;;		line 218 in file "RemoteCan.c"
 13943 ;; Parameters:    Size  Location     Type
 13944 ;;		None
 13945 ;; Auto vars:     Size  Location     Type
 13946 ;;		None
 13947 ;; Return value:  Size  Location     Type
 13948 ;;		None               void
 13949 ;; Registers used:
 13950 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13951 ;; Tracked objects:
 13952 ;;		On entry : 0/0
 13953 ;;		On exit  : 0/0
 13954 ;;		Unchanged: 0/0
 13955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13958 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13959 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13960 ;;Total ram usage:        4 bytes
 13961 ;; Hardware stack levels used:    1
 13962 ;; Hardware stack levels required when called:    4
 13963 ;; This function calls:
 13964 ;;		_CANisTxReady
 13965 ;;		_CANsendMessage
 13966 ;;		___xxtofl
 13967 ;; This function is called by:
 13968 ;;		_main
 13969 ;; This function uses a non-reentrant model
 13970 ;;
 13971                           
 13972                           	psect	text39
 13973  0148C2                     __ptext39:
 13974                           	opt stack 0
 13975  0148C2                     _CAN_interpreter:
 13976                           	opt stack 26
 13977                           
 13978                           ;RemoteCan.c: 220: if (id == 0b00000000010) {
 13979                           
 13980                           ; BSR set to: 0
 13981                           ;incstack = 0
 13982  0148C2  0E02               	movlw	2
 13983  0148C4  180B               	xorwf	_id,w,c	;volatile
 13984  0148C6  100C               	iorwf	_id+1,w,c	;volatile
 13985  0148C8  100D               	iorwf	_id+2,w,c	;volatile
 13986  0148CA  100E               	iorwf	_id+3,w,c	;volatile
 13987  0148CC  A4D8               	btfss	status,2,c
 13988  0148CE  D033               	goto	l8616
 13989                           
 13990                           ;RemoteCan.c: 221: if (RTR_Flag == 1) {
 13991  0148D0  A447               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 13992  0148D2  D02A               	goto	l8606
 13993                           
 13994                           ;RemoteCan.c: 222: pr_time_4 = time_counter;
 13995  0148D4  C0E0  F00F         	movff	_time_counter,_pr_time_4	;volatile
 13996  0148D8  C0E1  F010         	movff	_time_counter+1,_pr_time_4+1	;volatile
 13997  0148DC  C0E2  F011         	movff	_time_counter+2,_pr_time_4+2	;volatile
 13998  0148E0  C0E3  F012         	movff	_time_counter+3,_pr_time_4+3	;volatile
 13999                           
 14000                           ;RemoteCan.c: 223: data[0] = 0x03;
 14001  0148E4  0E03               	movlw	3
 14002  0148E6  6E28               	movwf	_data,c
 14003  0148E8                     l8596:
 14004  0148E8  EC82  F0A9         	call	_CANisTxReady	;wreg free
 14005  0148EC  06E8               	decf	wreg,f,c
 14006  0148EE  A4D8               	btfss	status,2,c
 14007  0148F0  D7FB               	goto	l8596
 14008                           
 14009                           ;RemoteCan.c: 225: CANsendMessage(0b00000000010, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
 14010  0148F2  0E02               	movlw	2
 14011  0148F4  0100               	movlb	0	; () banked
 14012  0148F6  6F6E               	movwf	CANsendMessage@identifier& (0+255),b
 14013  0148F8  0E00               	movlw	0
 14014  0148FA  6F6F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 14015  0148FC  0E00               	movlw	0
 14016  0148FE  6F70               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 14017  014900  0E00               	movlw	0
 14018  014902  6F71               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 14019  014904  0E28               	movlw	low _data
 14020  014906  0100               	movlb	0	; () banked
 14021  014908  6F72               	movwf	CANsendMessage@data& (0+255),b
 14022  01490A  0E00               	movlw	high _data
 14023  01490C  0100               	movlb	0	; () banked
 14024  01490E  6F73               	movwf	(CANsendMessage@data+1)& (0+255),b
 14025  014910  0E08               	movlw	8
 14026  014912  0100               	movlb	0	; () banked
 14027  014914  6F74               	movwf	CANsendMessage@dataLength& (0+255),b
 14028  014916  0EBC               	movlw	188
 14029  014918  0100               	movlb	0	; () banked
 14030  01491A  6F75               	movwf	CANsendMessage@flags& (0+255),b
 14031  01491C  ECCD  F089         	call	_CANsendMessage	;wreg free
 14032                           
 14033                           ;RemoteCan.c: 226: MotoreFlag = 1;
 14034  014920  8247               	bsf	_MotoreFlag/(0+8),_MotoreFlag& (0+7),c	;volatile
 14035                           
 14036                           ;RemoteCan.c: 227: AbsFlag = 0;
 14037  014922  9047               	bcf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 14038                           
 14039                           ;RemoteCan.c: 228: SterzoFlag = 0;
 14040  014924  9647               	bcf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 14041                           
 14042                           ;RemoteCan.c: 229: } else {
 14043  014926  D007               	goto	l8616
 14044  014928                     l8606:
 14045                           
 14046                           ;RemoteCan.c: 230: if (data[0] == 0x01) {
 14047  014928  0428               	decf	_data,w,c
 14048  01492A  B4D8               	btfsc	status,2,c
 14049                           
 14050                           ;RemoteCan.c: 231: AbsFlag = 1;
 14051  01492C  8047               	bsf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 14052                           
 14053                           ;RemoteCan.c: 233: }
 14054                           ;RemoteCan.c: 234: if (data[0] == 0x02) {
 14055  01492E  0E02               	movlw	2
 14056  014930  1828               	xorwf	_data,w,c
 14057  014932  B4D8               	btfsc	status,2,c
 14058                           
 14059                           ;RemoteCan.c: 235: SterzoFlag = 1;
 14060  014934  8647               	bsf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 14061  014936                     l8616:
 14062                           
 14063                           ;RemoteCan.c: 241: }
 14064                           ;RemoteCan.c: 242: }
 14065                           ;RemoteCan.c: 244: if ((id == 0b00000000110)&&(RTR_Flag == 0)) {
 14066  014936  0E06               	movlw	6
 14067  014938  180B               	xorwf	_id,w,c	;volatile
 14068  01493A  100C               	iorwf	_id+1,w,c	;volatile
 14069  01493C  100D               	iorwf	_id+2,w,c	;volatile
 14070  01493E  100E               	iorwf	_id+3,w,c	;volatile
 14071  014940  B4D8               	btfsc	status,2,c
 14072  014942  B447               	btfsc	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 14073  014944  D037               	goto	l8628
 14074                           
 14075                           ;RemoteCan.c: 245: left_speed = data[1];
 14076  014946  C029  F013         	movff	_data+1,_left_speed
 14077  01494A  6A14               	clrf	_left_speed+1,c
 14078                           
 14079                           ;RemoteCan.c: 246: left_speed = ((left_speed << 8) | (data[0]));
 14080  01494C  5013               	movf	_left_speed,w,c
 14081  01494E  0100               	movlb	0	; () banked
 14082  014950  6F7E               	movwf	??_CAN_interpreter& (0+255),b
 14083  014952  5028               	movf	_data,w,c
 14084  014954  6E13               	movwf	_left_speed,c
 14085  014956  C07E  F014         	movff	??_CAN_interpreter,_left_speed+1
 14086                           
 14087                           ; BSR set to: 0
 14088                           ;RemoteCan.c: 247: right_speed = data[3];
 14089  01495A  C02B  F015         	movff	_data+3,_right_speed
 14090  01495E  6A16               	clrf	_right_speed+1,c
 14091                           
 14092                           ;RemoteCan.c: 248: right_speed = ((right_speed << 8) | (data[2]));
 14093  014960  5015               	movf	_right_speed,w,c
 14094  014962  0100               	movlb	0	; () banked
 14095  014964  6F7E               	movwf	??_CAN_interpreter& (0+255),b
 14096  014966  502A               	movf	_data+2,w,c
 14097  014968  6E15               	movwf	_right_speed,c
 14098  01496A  C07E  F016         	movff	??_CAN_interpreter,_right_speed+1
 14099                           
 14100                           ; BSR set to: 0
 14101                           ;RemoteCan.c: 249: actual_speed = (right_speed + left_speed) / 2;
 14102  01496E  5013               	movf	_left_speed,w,c
 14103  014970  2415               	addwf	_right_speed,w,c
 14104  014972  0100               	movlb	0	; () banked
 14105  014974  6F7E               	movwf	??_CAN_interpreter& (0+255),b
 14106  014976  5014               	movf	_left_speed+1,w,c
 14107  014978  2016               	addwfc	_right_speed+1,w,c
 14108  01497A  0100               	movlb	0	; () banked
 14109  01497C  6F7F               	movwf	(??_CAN_interpreter+1)& (0+255),b
 14110  01497E  90D8               	bcf	status,0,c
 14111  014980  0100               	movlb	0	; () banked
 14112  014982  317F               	rrcf	(??_CAN_interpreter+1)& (0+255),w,b
 14113  014984  0100               	movlb	0	; () banked
 14114  014986  6F81               	movwf	(??_CAN_interpreter+3)& (0+255),b
 14115  014988  0100               	movlb	0	; () banked
 14116  01498A  317E               	rrcf	??_CAN_interpreter& (0+255),w,b
 14117  01498C  0100               	movlb	0	; () banked
 14118  01498E  6F80               	movwf	(??_CAN_interpreter+2)& (0+255),b
 14119  014990  C080  F06E         	movff	??_CAN_interpreter+2,___xxtofl@val
 14120  014994  C081  F06F         	movff	??_CAN_interpreter+3,___xxtofl@val+1
 14121  014998  0100               	movlb	0	; () banked
 14122  01499A  6B70               	clrf	(___xxtofl@val+2)& (0+255),b
 14123  01499C  6B71               	clrf	(___xxtofl@val+3)& (0+255),b
 14124  01499E  0E00               	movlw	0
 14125  0149A0  EC72  F09E         	call	___xxtofl
 14126  0149A4  C06E  F007         	movff	?___xxtofl,_actual_speed
 14127  0149A8  C06F  F008         	movff	?___xxtofl+1,_actual_speed+1
 14128  0149AC  C070  F009         	movff	?___xxtofl+2,_actual_speed+2
 14129  0149B0  C071  F00A         	movff	?___xxtofl+3,_actual_speed+3
 14130  0149B4                     l8628:
 14131                           
 14132                           ;RemoteCan.c: 250: }
 14133                           ;RemoteCan.c: 252: if (id == 0b00000001001) {
 14134  0149B4  0E09               	movlw	9
 14135  0149B6  180B               	xorwf	_id,w,c	;volatile
 14136  0149B8  100C               	iorwf	_id+1,w,c	;volatile
 14137  0149BA  100D               	iorwf	_id+2,w,c	;volatile
 14138  0149BC  100E               	iorwf	_id+3,w,c	;volatile
 14139  0149BE  A4D8               	btfss	status,2,c
 14140  0149C0  0012               	return	
 14141                           
 14142                           ;RemoteCan.c: 253: battery = data[0];
 14143  0149C2  C028  F017         	movff	_data,_battery	;volatile
 14144  0149C6  0012               	return	
 14145  0149C8                     __end_of_CAN_interpreter:
 14146                           	opt stack 0
 14147                           tblptru	equ	0xFF8
 14148                           tblptrh	equ	0xFF7
 14149                           tblptrl	equ	0xFF6
 14150                           tablat	equ	0xFF5
 14151                           prodh	equ	0xFF4
 14152                           prodl	equ	0xFF3
 14153                           intcon	equ	0xFF2
 14154                           postinc0	equ	0xFEE
 14155                           wreg	equ	0xFE8
 14156                           indf2	equ	0xFDF
 14157                           postinc2	equ	0xFDE
 14158                           fsr2h	equ	0xFDA
 14159                           fsr2l	equ	0xFD9
 14160                           status	equ	0xFD8
 14161                           
 14162 ;; *************** function ___xxtofl *****************
 14163 ;; Defined at:
 14164 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
 14165 ;; Parameters:    Size  Location     Type
 14166 ;;  sign            1    wreg     unsigned char 
 14167 ;;  val             4   14[BANK0 ] long 
 14168 ;; Auto vars:     Size  Location     Type
 14169 ;;  sign            1   22[BANK0 ] unsigned char 
 14170 ;;  arg             4   24[BANK0 ] unsigned long 
 14171 ;;  exp             1   23[BANK0 ] unsigned char 
 14172 ;; Return value:  Size  Location     Type
 14173 ;;                  4   14[BANK0 ] unsigned char 
 14174 ;; Registers used:
 14175 ;;		wreg, status,2, status,0
 14176 ;; Tracked objects:
 14177 ;;		On entry : 0/0
 14178 ;;		On exit  : 0/0
 14179 ;;		Unchanged: 0/0
 14180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14181 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14182 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14183 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14184 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14185 ;;Total ram usage:       14 bytes
 14186 ;; Hardware stack levels used:    1
 14187 ;; Hardware stack levels required when called:    3
 14188 ;; This function calls:
 14189 ;;		Nothing
 14190 ;; This function is called by:
 14191 ;;		_main
 14192 ;;		_CAN_interpreter
 14193 ;;		_sprintf
 14194 ;; This function uses a non-reentrant model
 14195 ;;
 14196                           
 14197                           	psect	text40
 14198  013CE4                     __ptext40:
 14199                           	opt stack 0
 14200  013CE4                     ___xxtofl:
 14201                           	opt stack 27
 14202                           
 14203                           ;incstack = 0
 14204                           ;___xxtofl@sign stored from wreg
 14205  013CE4  0100               	movlb	0	; () banked
 14206  013CE6  6F76               	movwf	___xxtofl@sign& (0+255),b
 14207  013CE8  0100               	movlb	0	; () banked
 14208  013CEA  5176               	movf	___xxtofl@sign& (0+255),w,b
 14209  013CEC  0100               	movlb	0	; () banked
 14210  013CEE  B4D8               	btfsc	status,2,c
 14211  013CF0  D01E               	goto	l1496
 14212                           
 14213                           ; BSR set to: 0
 14214  013CF2  0100               	movlb	0	; () banked
 14215  013CF4  AF71               	btfss	(___xxtofl@val+3)& (0+255),7,b
 14216  013CF6  D01B               	goto	l1496
 14217                           
 14218                           ; BSR set to: 0
 14219  013CF8  C06E  F072         	movff	___xxtofl@val,??___xxtofl
 14220  013CFC  C06F  F073         	movff	___xxtofl@val+1,??___xxtofl+1
 14221  013D00  C070  F074         	movff	___xxtofl@val+2,??___xxtofl+2
 14222  013D04  C071  F075         	movff	___xxtofl@val+3,??___xxtofl+3
 14223  013D08  0100               	movlb	0	; () banked
 14224  013D0A  1F72               	comf	??___xxtofl& (0+255),f,b
 14225  013D0C  1F73               	comf	(??___xxtofl+1)& (0+255),f,b
 14226  013D0E  1F74               	comf	(??___xxtofl+2)& (0+255),f,b
 14227  013D10  1F75               	comf	(??___xxtofl+3)& (0+255),f,b
 14228  013D12  2B72               	incf	??___xxtofl& (0+255),f,b
 14229  013D14  0E00               	movlw	0
 14230  013D16  2373               	addwfc	(??___xxtofl+1)& (0+255),f,b
 14231  013D18  2374               	addwfc	(??___xxtofl+2)& (0+255),f,b
 14232  013D1A  2375               	addwfc	(??___xxtofl+3)& (0+255),f,b
 14233  013D1C  C072  F078         	movff	??___xxtofl,___xxtofl@arg
 14234  013D20  C073  F079         	movff	??___xxtofl+1,___xxtofl@arg+1
 14235  013D24  C074  F07A         	movff	??___xxtofl+2,___xxtofl@arg+2
 14236  013D28  C075  F07B         	movff	??___xxtofl+3,___xxtofl@arg+3
 14237  013D2C  D008               	goto	l7720
 14238  013D2E                     l1496:
 14239                           
 14240                           ; BSR set to: 0
 14241  013D2E  C06E  F078         	movff	___xxtofl@val,___xxtofl@arg
 14242  013D32  C06F  F079         	movff	___xxtofl@val+1,___xxtofl@arg+1
 14243  013D36  C070  F07A         	movff	___xxtofl@val+2,___xxtofl@arg+2
 14244  013D3A  C071  F07B         	movff	___xxtofl@val+3,___xxtofl@arg+3
 14245  013D3E                     l7720:
 14246                           
 14247                           ; BSR set to: 0
 14248  013D3E  0100               	movlb	0	; () banked
 14249  013D40  516E               	movf	___xxtofl@val& (0+255),w,b
 14250  013D42  0100               	movlb	0	; () banked
 14251  013D44  116F               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 14252  013D46  0100               	movlb	0	; () banked
 14253  013D48  1170               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 14254  013D4A  0100               	movlb	0	; () banked
 14255  013D4C  1171               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 14256  013D4E  A4D8               	btfss	status,2,c
 14257  013D50  D00A               	goto	l7726
 14258                           
 14259                           ; BSR set to: 0
 14260  013D52  0E00               	movlw	0
 14261  013D54  0100               	movlb	0	; () banked
 14262  013D56  6F6E               	movwf	?___xxtofl& (0+255),b
 14263  013D58  0E00               	movlw	0
 14264  013D5A  6F6F               	movwf	(?___xxtofl+1)& (0+255),b
 14265  013D5C  0E00               	movlw	0
 14266  013D5E  6F70               	movwf	(?___xxtofl+2)& (0+255),b
 14267  013D60  0E00               	movlw	0
 14268  013D62  6F71               	movwf	(?___xxtofl+3)& (0+255),b
 14269                           
 14270                           ; BSR set to: 0
 14271  013D64  0012               	return	
 14272  013D66                     l7726:
 14273                           
 14274                           ; BSR set to: 0
 14275  013D66  0E96               	movlw	150
 14276  013D68  0100               	movlb	0	; () banked
 14277  013D6A  6F77               	movwf	___xxtofl@exp& (0+255),b
 14278  013D6C  D008               	goto	l7730
 14279  013D6E                     l7728:
 14280                           
 14281                           ; BSR set to: 0
 14282  013D6E  0100               	movlb	0	; () banked
 14283  013D70  2B77               	incf	___xxtofl@exp& (0+255),f,b
 14284  013D72  0100               	movlb	0	; () banked
 14285  013D74  90D8               	bcf	status,0,c
 14286  013D76  337B               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 14287  013D78  337A               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 14288  013D7A  3379               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 14289  013D7C  3378               	rrcf	___xxtofl@arg& (0+255),f,b
 14290  013D7E                     l7730:
 14291                           
 14292                           ; BSR set to: 0
 14293  013D7E  0E00               	movlw	0
 14294  013D80  0100               	movlb	0	; () banked
 14295  013D82  1578               	andwf	___xxtofl@arg& (0+255),w,b
 14296  013D84  0100               	movlb	0	; () banked
 14297  013D86  6F72               	movwf	??___xxtofl& (0+255),b
 14298  013D88  0E00               	movlw	0
 14299  013D8A  0100               	movlb	0	; () banked
 14300  013D8C  1579               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 14301  013D8E  0100               	movlb	0	; () banked
 14302  013D90  6F73               	movwf	(??___xxtofl+1)& (0+255),b
 14303  013D92  0E00               	movlw	0
 14304  013D94  0100               	movlb	0	; () banked
 14305  013D96  157A               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 14306  013D98  0100               	movlb	0	; () banked
 14307  013D9A  6F74               	movwf	(??___xxtofl+2)& (0+255),b
 14308  013D9C  0EFE               	movlw	254
 14309  013D9E  0100               	movlb	0	; () banked
 14310  013DA0  157B               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 14311  013DA2  0100               	movlb	0	; () banked
 14312  013DA4  6F75               	movwf	(??___xxtofl+3)& (0+255),b
 14313  013DA6  0100               	movlb	0	; () banked
 14314  013DA8  5172               	movf	??___xxtofl& (0+255),w,b
 14315  013DAA  0100               	movlb	0	; () banked
 14316  013DAC  1173               	iorwf	(??___xxtofl+1)& (0+255),w,b
 14317  013DAE  0100               	movlb	0	; () banked
 14318  013DB0  1174               	iorwf	(??___xxtofl+2)& (0+255),w,b
 14319  013DB2  0100               	movlb	0	; () banked
 14320  013DB4  1175               	iorwf	(??___xxtofl+3)& (0+255),w,b
 14321  013DB6  B4D8               	btfsc	status,2,c
 14322  013DB8  D010               	goto	l1503
 14323  013DBA  D7D9               	goto	l7728
 14324  013DBC                     l7732:
 14325                           
 14326                           ; BSR set to: 0
 14327  013DBC  0100               	movlb	0	; () banked
 14328  013DBE  2B77               	incf	___xxtofl@exp& (0+255),f,b
 14329                           
 14330                           ; BSR set to: 0
 14331  013DC0  0E01               	movlw	1
 14332  013DC2  0100               	movlb	0	; () banked
 14333  013DC4  2778               	addwf	___xxtofl@arg& (0+255),f,b
 14334  013DC6  0E00               	movlw	0
 14335  013DC8  2379               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 14336  013DCA  237A               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 14337  013DCC  237B               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 14338                           
 14339                           ; BSR set to: 0
 14340  013DCE  0100               	movlb	0	; () banked
 14341  013DD0  90D8               	bcf	status,0,c
 14342  013DD2  337B               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 14343  013DD4  337A               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 14344  013DD6  3379               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 14345  013DD8  3378               	rrcf	___xxtofl@arg& (0+255),f,b
 14346  013DDA                     l1503:
 14347                           
 14348                           ; BSR set to: 0
 14349  013DDA  0E00               	movlw	0
 14350  013DDC  0100               	movlb	0	; () banked
 14351  013DDE  1578               	andwf	___xxtofl@arg& (0+255),w,b
 14352  013DE0  0100               	movlb	0	; () banked
 14353  013DE2  6F72               	movwf	??___xxtofl& (0+255),b
 14354  013DE4  0E00               	movlw	0
 14355  013DE6  0100               	movlb	0	; () banked
 14356  013DE8  1579               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 14357  013DEA  0100               	movlb	0	; () banked
 14358  013DEC  6F73               	movwf	(??___xxtofl+1)& (0+255),b
 14359  013DEE  0E00               	movlw	0
 14360  013DF0  0100               	movlb	0	; () banked
 14361  013DF2  157A               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 14362  013DF4  0100               	movlb	0	; () banked
 14363  013DF6  6F74               	movwf	(??___xxtofl+2)& (0+255),b
 14364  013DF8  0EFF               	movlw	255
 14365  013DFA  0100               	movlb	0	; () banked
 14366  013DFC  157B               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 14367  013DFE  0100               	movlb	0	; () banked
 14368  013E00  6F75               	movwf	(??___xxtofl+3)& (0+255),b
 14369  013E02  0100               	movlb	0	; () banked
 14370  013E04  5172               	movf	??___xxtofl& (0+255),w,b
 14371  013E06  0100               	movlb	0	; () banked
 14372  013E08  1173               	iorwf	(??___xxtofl+1)& (0+255),w,b
 14373  013E0A  0100               	movlb	0	; () banked
 14374  013E0C  1174               	iorwf	(??___xxtofl+2)& (0+255),w,b
 14375  013E0E  0100               	movlb	0	; () banked
 14376  013E10  1175               	iorwf	(??___xxtofl+3)& (0+255),w,b
 14377  013E12  B4D8               	btfsc	status,2,c
 14378  013E14  D009               	goto	l7740
 14379  013E16  D7D2               	goto	l7732
 14380  013E18                     l7738:
 14381                           
 14382                           ; BSR set to: 0
 14383  013E18  0100               	movlb	0	; () banked
 14384  013E1A  0777               	decf	___xxtofl@exp& (0+255),f,b
 14385  013E1C  0100               	movlb	0	; () banked
 14386  013E1E  90D8               	bcf	status,0,c
 14387  013E20  3778               	rlcf	___xxtofl@arg& (0+255),f,b
 14388  013E22  3779               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 14389  013E24  377A               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 14390  013E26  377B               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 14391  013E28                     l7740:
 14392                           
 14393                           ; BSR set to: 0
 14394  013E28  0100               	movlb	0	; () banked
 14395  013E2A  BF7A               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 14396  013E2C  D004               	goto	l1510
 14397                           
 14398                           ; BSR set to: 0
 14399  013E2E  0E02               	movlw	2
 14400  013E30  0100               	movlb	0	; () banked
 14401  013E32  6177               	cpfslt	___xxtofl@exp& (0+255),b
 14402  013E34  D7F1               	goto	l7738
 14403  013E36                     l1510:
 14404                           
 14405                           ; BSR set to: 0
 14406  013E36  0100               	movlb	0	; () banked
 14407  013E38  B177               	btfsc	___xxtofl@exp& (0+255),0,b
 14408  013E3A  D009               	goto	l1511
 14409                           
 14410                           ; BSR set to: 0
 14411  013E3C  0EFF               	movlw	255
 14412  013E3E  0100               	movlb	0	; () banked
 14413  013E40  1778               	andwf	___xxtofl@arg& (0+255),f,b
 14414  013E42  0EFF               	movlw	255
 14415  013E44  1779               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 14416  013E46  0E7F               	movlw	127
 14417  013E48  177A               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 14418  013E4A  0EFF               	movlw	255
 14419  013E4C  177B               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 14420  013E4E                     l1511:
 14421                           
 14422                           ; BSR set to: 0
 14423  013E4E  0100               	movlb	0	; () banked
 14424  013E50  90D8               	bcf	status,0,c
 14425  013E52  3377               	rrcf	___xxtofl@exp& (0+255),f,b
 14426  013E54  C077  F072         	movff	___xxtofl@exp,??___xxtofl
 14427  013E58  0100               	movlb	0	; () banked
 14428  013E5A  6B73               	clrf	(??___xxtofl+1)& (0+255),b
 14429  013E5C  6B74               	clrf	(??___xxtofl+2)& (0+255),b
 14430  013E5E  6B75               	clrf	(??___xxtofl+3)& (0+255),b
 14431  013E60  C072  F075         	movff	??___xxtofl,??___xxtofl+3
 14432  013E64  0100               	movlb	0	; () banked
 14433  013E66  6B74               	clrf	(??___xxtofl+2)& (0+255),b
 14434  013E68  6B73               	clrf	(??___xxtofl+1)& (0+255),b
 14435  013E6A  6B72               	clrf	??___xxtofl& (0+255),b
 14436  013E6C  0100               	movlb	0	; () banked
 14437  013E6E  5172               	movf	??___xxtofl& (0+255),w,b
 14438  013E70  0100               	movlb	0	; () banked
 14439  013E72  1378               	iorwf	___xxtofl@arg& (0+255),f,b
 14440  013E74  0100               	movlb	0	; () banked
 14441  013E76  5173               	movf	(??___xxtofl+1)& (0+255),w,b
 14442  013E78  0100               	movlb	0	; () banked
 14443  013E7A  1379               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 14444  013E7C  0100               	movlb	0	; () banked
 14445  013E7E  5174               	movf	(??___xxtofl+2)& (0+255),w,b
 14446  013E80  0100               	movlb	0	; () banked
 14447  013E82  137A               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 14448  013E84  0100               	movlb	0	; () banked
 14449  013E86  5175               	movf	(??___xxtofl+3)& (0+255),w,b
 14450  013E88  0100               	movlb	0	; () banked
 14451  013E8A  137B               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 14452                           
 14453                           ; BSR set to: 0
 14454  013E8C  0100               	movlb	0	; () banked
 14455  013E8E  5176               	movf	___xxtofl@sign& (0+255),w,b
 14456  013E90  0100               	movlb	0	; () banked
 14457  013E92  B4D8               	btfsc	status,2,c
 14458  013E94  D005               	goto	l7752
 14459                           
 14460                           ; BSR set to: 0
 14461  013E96  0100               	movlb	0	; () banked
 14462  013E98  AF71               	btfss	(___xxtofl@val+3)& (0+255),7,b
 14463  013E9A  D002               	goto	l7752
 14464                           
 14465                           ; BSR set to: 0
 14466  013E9C  0100               	movlb	0	; () banked
 14467  013E9E  8F7B               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 14468  013EA0                     l7752:
 14469                           
 14470                           ; BSR set to: 0
 14471  013EA0  C078  F06E         	movff	___xxtofl@arg,?___xxtofl
 14472  013EA4  C079  F06F         	movff	___xxtofl@arg+1,?___xxtofl+1
 14473  013EA8  C07A  F070         	movff	___xxtofl@arg+2,?___xxtofl+2
 14474  013EAC  C07B  F071         	movff	___xxtofl@arg+3,?___xxtofl+3
 14475  013EB0  0012               	return	
 14476  013EB2                     __end_of___xxtofl:
 14477                           	opt stack 0
 14478                           tblptru	equ	0xFF8
 14479                           tblptrh	equ	0xFF7
 14480                           tblptrl	equ	0xFF6
 14481                           tablat	equ	0xFF5
 14482                           prodh	equ	0xFF4
 14483                           prodl	equ	0xFF3
 14484                           intcon	equ	0xFF2
 14485                           postinc0	equ	0xFEE
 14486                           wreg	equ	0xFE8
 14487                           indf2	equ	0xFDF
 14488                           postinc2	equ	0xFDE
 14489                           fsr2h	equ	0xFDA
 14490                           fsr2l	equ	0xFD9
 14491                           status	equ	0xFD8
 14492                           
 14493 ;; *************** function _CANisTxReady *****************
 14494 ;; Defined at:
 14495 ;;		line 1155 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 14496 ;; Parameters:    Size  Location     Type
 14497 ;;		None
 14498 ;; Auto vars:     Size  Location     Type
 14499 ;;		None
 14500 ;; Return value:  Size  Location     Type
 14501 ;;                  1    wreg      unsigned char 
 14502 ;; Registers used:
 14503 ;;		wreg, status,2
 14504 ;; Tracked objects:
 14505 ;;		On entry : 0/0
 14506 ;;		On exit  : 0/0
 14507 ;;		Unchanged: 0/0
 14508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14510 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14512 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14513 ;;Total ram usage:        1 bytes
 14514 ;; Hardware stack levels used:    1
 14515 ;; Hardware stack levels required when called:    3
 14516 ;; This function calls:
 14517 ;;		Nothing
 14518 ;; This function is called by:
 14519 ;;		_CAN_interpreter
 14520 ;; This function uses a non-reentrant model
 14521 ;;
 14522                           
 14523                           	psect	text41
 14524  015304                     __ptext41:
 14525                           	opt stack 0
 14526  015304                     _CANisTxReady:
 14527                           	opt stack 26
 14528                           
 14529                           ;inc\CANlib.h: 1157: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 14530                           
 14531                           ; BSR set to: 0
 14532                           ;incstack = 0
 14533  015304  0E01               	movlw	1
 14534  015306  0100               	movlb	0	; () banked
 14535  015308  6F6E               	movwf	_CANisTxReady$3227& (0+255),b
 14536                           
 14537                           ; BSR set to: 0
 14538  01530A  010F               	movlb	15	; () banked
 14539  01530C  A740               	btfss	64,3,b	;volatile
 14540  01530E  D009               	goto	l564
 14541                           
 14542                           ; BSR set to: 15
 14543  015310  010F               	movlb	15	; () banked
 14544  015312  A730               	btfss	48,3,b	;volatile
 14545  015314  D006               	goto	l564
 14546                           
 14547                           ; BSR set to: 15
 14548  015316  010F               	movlb	15	; () banked
 14549  015318  A720               	btfss	32,3,b	;volatile
 14550  01531A  D003               	goto	l564
 14551                           
 14552                           ; BSR set to: 15
 14553  01531C  0E00               	movlw	0
 14554  01531E  0100               	movlb	0	; () banked
 14555  015320  6F6E               	movwf	_CANisTxReady$3227& (0+255),b
 14556  015322                     l564:
 14557  015322  0100               	movlb	0	; () banked
 14558  015324  516E               	movf	_CANisTxReady$3227& (0+255),w,b
 14559  015326  0012               	return	
 14560  015328                     __end_of_CANisTxReady:
 14561                           	opt stack 0
 14562                           tblptru	equ	0xFF8
 14563                           tblptrh	equ	0xFF7
 14564                           tblptrl	equ	0xFF6
 14565                           tablat	equ	0xFF5
 14566                           prodh	equ	0xFF4
 14567                           prodl	equ	0xFF3
 14568                           intcon	equ	0xFF2
 14569                           postinc0	equ	0xFEE
 14570                           wreg	equ	0xFE8
 14571                           indf2	equ	0xFDF
 14572                           postinc2	equ	0xFDE
 14573                           fsr2h	equ	0xFDA
 14574                           fsr2l	equ	0xFD9
 14575                           status	equ	0xFD8
 14576                           
 14577 ;; *************** function _CAN_Send *****************
 14578 ;; Defined at:
 14579 ;;		line 175 in file "RemoteCan.c"
 14580 ;; Parameters:    Size  Location     Type
 14581 ;;		None
 14582 ;; Auto vars:     Size  Location     Type
 14583 ;;		None
 14584 ;; Return value:  Size  Location     Type
 14585 ;;		None               void
 14586 ;; Registers used:
 14587 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14588 ;; Tracked objects:
 14589 ;;		On entry : 0/0
 14590 ;;		On exit  : 0/0
 14591 ;;		Unchanged: 0/0
 14592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14597 ;;Total ram usage:        0 bytes
 14598 ;; Hardware stack levels used:    1
 14599 ;; Hardware stack levels required when called:    4
 14600 ;; This function calls:
 14601 ;;		_CANsendMessage
 14602 ;; This function is called by:
 14603 ;;		_main
 14604 ;; This function uses a non-reentrant model
 14605 ;;
 14606                           
 14607                           	psect	text42
 14608  014E8C                     __ptext42:
 14609                           	opt stack 0
 14610  014E8C                     _CAN_Send:
 14611                           	opt stack 26
 14612                           
 14613                           ;RemoteCan.c: 177: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 14614                           
 14615                           ; BSR set to: 0
 14616                           ;incstack = 0
 14617  014E8C  0E05               	movlw	5
 14618  014E8E  0100               	movlb	0	; () banked
 14619  014E90  6F6E               	movwf	CANsendMessage@identifier& (0+255),b
 14620  014E92  0E00               	movlw	0
 14621  014E94  6F6F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 14622  014E96  0E00               	movlw	0
 14623  014E98  6F70               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 14624  014E9A  0E00               	movlw	0
 14625  014E9C  6F71               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 14626  014E9E  0EEE               	movlw	low _data_steering
 14627  014EA0  0100               	movlb	0	; () banked
 14628  014EA2  6F72               	movwf	CANsendMessage@data& (0+255),b
 14629  014EA4  0E00               	movlw	high _data_steering
 14630  014EA6  0100               	movlb	0	; () banked
 14631  014EA8  6F73               	movwf	(CANsendMessage@data+1)& (0+255),b
 14632  014EAA  0E08               	movlw	8
 14633  014EAC  0100               	movlb	0	; () banked
 14634  014EAE  6F74               	movwf	CANsendMessage@dataLength& (0+255),b
 14635  014EB0  0EBC               	movlw	188
 14636  014EB2  0100               	movlb	0	; () banked
 14637  014EB4  6F75               	movwf	CANsendMessage@flags& (0+255),b
 14638  014EB6  ECCD  F089         	call	_CANsendMessage	;wreg free
 14639                           
 14640                           ;RemoteCan.c: 178: data_speed[0] = set_speed;
 14641  014EBA  C0E8  F0ED         	movff	_set_speed,_data_speed	;volatile
 14642                           
 14643                           ;RemoteCan.c: 179: data_speed[1] = (set_speed >> 8);
 14644  014EBE  0100               	movlb	0	; () banked
 14645  014EC0  51E9               	movf	(_set_speed+1)& (0+255),w,b	;volatile
 14646  014EC2  0100               	movlb	0	; () banked
 14647  014EC4  6FEE               	movwf	(_data_speed+1)& (0+255),b
 14648                           
 14649                           ; BSR set to: 0
 14650                           ;RemoteCan.c: 180: data_speed[2] = dir;
 14651  014EC6  C0EA  F0EF         	movff	_dir,_data_speed+2	;volatile
 14652                           
 14653                           ; BSR set to: 0
 14654                           ;RemoteCan.c: 182: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 14655  014ECA  0E03               	movlw	3
 14656  014ECC  0100               	movlb	0	; () banked
 14657  014ECE  6F6E               	movwf	CANsendMessage@identifier& (0+255),b
 14658  014ED0  0E00               	movlw	0
 14659  014ED2  6F6F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 14660  014ED4  0E00               	movlw	0
 14661  014ED6  6F70               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 14662  014ED8  0E00               	movlw	0
 14663  014EDA  6F71               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 14664  014EDC  0EED               	movlw	low _data_speed
 14665  014EDE  0100               	movlb	0	; () banked
 14666  014EE0  6F72               	movwf	CANsendMessage@data& (0+255),b
 14667  014EE2  0E00               	movlw	high _data_speed
 14668  014EE4  0100               	movlb	0	; () banked
 14669  014EE6  6F73               	movwf	(CANsendMessage@data+1)& (0+255),b
 14670  014EE8  0E08               	movlw	8
 14671  014EEA  0100               	movlb	0	; () banked
 14672  014EEC  6F74               	movwf	CANsendMessage@dataLength& (0+255),b
 14673  014EEE  0EBC               	movlw	188
 14674  014EF0  0100               	movlb	0	; () banked
 14675  014EF2  6F75               	movwf	CANsendMessage@flags& (0+255),b
 14676  014EF4  ECCD  F089         	call	_CANsendMessage	;wreg free
 14677                           
 14678                           ;RemoteCan.c: 184: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 14679  014EF8  0E04               	movlw	4
 14680  014EFA  0100               	movlb	0	; () banked
 14681  014EFC  6F6E               	movwf	CANsendMessage@identifier& (0+255),b
 14682  014EFE  0E00               	movlw	0
 14683  014F00  6F6F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 14684  014F02  0E00               	movlw	0
 14685  014F04  6F70               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 14686  014F06  0E00               	movlw	0
 14687  014F08  6F71               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 14688  014F0A  0EEC               	movlw	low _data_brake
 14689  014F0C  0100               	movlb	0	; () banked
 14690  014F0E  6F72               	movwf	CANsendMessage@data& (0+255),b
 14691  014F10  0E00               	movlw	high _data_brake
 14692  014F12  0100               	movlb	0	; () banked
 14693  014F14  6F73               	movwf	(CANsendMessage@data+1)& (0+255),b
 14694  014F16  0E08               	movlw	8
 14695  014F18  0100               	movlb	0	; () banked
 14696  014F1A  6F74               	movwf	CANsendMessage@dataLength& (0+255),b
 14697  014F1C  0EBC               	movlw	188
 14698  014F1E  0100               	movlb	0	; () banked
 14699  014F20  6F75               	movwf	CANsendMessage@flags& (0+255),b
 14700  014F22  ECCD  F089         	call	_CANsendMessage	;wreg free
 14701                           
 14702                           ;RemoteCan.c: 185: LATDbits.LATD2 = 1;
 14703  014F26  848C               	bsf	3980,2,c	;volatile
 14704                           
 14705                           ;RemoteCan.c: 186: LATDbits.LATD3 = 1;
 14706  014F28  868C               	bsf	3980,3,c	;volatile
 14707  014F2A  0012               	return		;funcret
 14708  014F2C                     __end_of_CAN_Send:
 14709                           	opt stack 0
 14710                           tblptru	equ	0xFF8
 14711                           tblptrh	equ	0xFF7
 14712                           tblptrl	equ	0xFF6
 14713                           tablat	equ	0xFF5
 14714                           prodh	equ	0xFF4
 14715                           prodl	equ	0xFF3
 14716                           intcon	equ	0xFF2
 14717                           postinc0	equ	0xFEE
 14718                           wreg	equ	0xFE8
 14719                           indf2	equ	0xFDF
 14720                           postinc2	equ	0xFDE
 14721                           fsr2h	equ	0xFDA
 14722                           fsr2l	equ	0xFD9
 14723                           status	equ	0xFD8
 14724                           
 14725 ;; *************** function _CANsendMessage *****************
 14726 ;; Defined at:
 14727 ;;		line 295 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 14728 ;; Parameters:    Size  Location     Type
 14729 ;;  identifier      4   14[BANK0 ] unsigned long 
 14730 ;;  data            2   18[BANK0 ] PTR unsigned char 
 14731 ;;		 -> data_speed(1), data_brake(1), data_steering(1), data(1), 
 14732 ;;  dataLength      1   20[BANK0 ] unsigned char 
 14733 ;;  flags           1   21[BANK0 ] enum E16909
 14734 ;; Auto vars:     Size  Location     Type
 14735 ;;  tamp            4   26[BANK0 ] unsigned long 
 14736 ;; Return value:  Size  Location     Type
 14737 ;;		None               void
 14738 ;; Registers used:
 14739 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14740 ;; Tracked objects:
 14741 ;;		On entry : 0/0
 14742 ;;		On exit  : 0/0
 14743 ;;		Unchanged: 0/0
 14744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14745 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14746 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14747 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14748 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14749 ;;Total ram usage:       16 bytes
 14750 ;; Hardware stack levels used:    1
 14751 ;; Hardware stack levels required when called:    3
 14752 ;; This function calls:
 14753 ;;		Nothing
 14754 ;; This function is called by:
 14755 ;;		_CAN_Send
 14756 ;;		_CAN_interpreter
 14757 ;; This function uses a non-reentrant model
 14758 ;;
 14759                           
 14760                           	psect	text43
 14761  01139A                     __ptext43:
 14762                           	opt stack 0
 14763  01139A                     _CANsendMessage:
 14764                           	opt stack 26
 14765                           
 14766                           ;inc\CANlib.h: 297: unsigned long tamp;
 14767                           ;inc\CANlib.h: 299: if (TXB0CONbits.TXREQ == 0)
 14768                           
 14769                           ;incstack = 0
 14770  01139A  010F               	movlb	15	; () banked
 14771  01139C  B740               	btfsc	64,3,b	;volatile
 14772  01139E  D13F               	goto	l371
 14773                           
 14774                           ; BSR set to: 15
 14775                           ;inc\CANlib.h: 300: { TXB0DLC = dataLength;
 14776  0113A0  C074  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
 14777                           
 14778                           ;inc\CANlib.h: 301: if (0b01000000 & flags)
 14779  0113A4  0100               	movlb	0	; () banked
 14780  0113A6  AD75               	btfss	CANsendMessage@flags& (0+255),6,b
 14781  0113A8  D003               	goto	l372
 14782                           
 14783                           ; BSR set to: 0
 14784                           ;inc\CANlib.h: 302: TXB0DLCbits.TXRTR = 0x01;
 14785  0113AA  010F               	movlb	15	; () banked
 14786  0113AC  8D45               	bsf	69,6,b	;volatile
 14787  0113AE  D002               	goto	l373
 14788  0113B0                     l372:
 14789                           
 14790                           ; BSR set to: 0
 14791                           ;inc\CANlib.h: 303: else
 14792                           ;inc\CANlib.h: 304: TXB0DLCbits.TXRTR = 0x00;
 14793  0113B0  010F               	movlb	15	; () banked
 14794  0113B2  9D45               	bcf	69,6,b	;volatile
 14795  0113B4                     l373:
 14796                           
 14797                           ; BSR set to: 15
 14798                           ;inc\CANlib.h: 306: if (CAN_TX_FRAME_MASK & flags)
 14799  0113B4  0100               	movlb	0	; () banked
 14800  0113B6  A775               	btfss	CANsendMessage@flags& (0+255),3,b
 14801  0113B8  D079               	goto	l374
 14802                           
 14803                           ; BSR set to: 0
 14804                           ;inc\CANlib.h: 307: {
 14805                           ;inc\CANlib.h: 309: tamp = identifier & 0x000000FF;
 14806  0113BA  0100               	movlb	0	; () banked
 14807  0113BC  516E               	movf	CANsendMessage@identifier& (0+255),w,b
 14808  0113BE  0100               	movlb	0	; () banked
 14809  0113C0  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 14810  0113C2  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 14811  0113C4  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 14812  0113C6  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 14813                           
 14814                           ; BSR set to: 0
 14815                           ;inc\CANlib.h: 310: TXB0EIDL = (unsigned char) tamp;
 14816  0113C8  C07A  FF44         	movff	CANsendMessage@tamp,3908	;volatile
 14817                           
 14818                           ; BSR set to: 0
 14819                           ;inc\CANlib.h: 312: tamp = identifier & 0x0000FF00;
 14820  0113CC  0E00               	movlw	0
 14821  0113CE  0100               	movlb	0	; () banked
 14822  0113D0  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
 14823  0113D2  0100               	movlb	0	; () banked
 14824  0113D4  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 14825  0113D6  0EFF               	movlw	255
 14826  0113D8  0100               	movlb	0	; () banked
 14827  0113DA  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 14828  0113DC  0100               	movlb	0	; () banked
 14829  0113DE  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 14830  0113E0  0E00               	movlw	0
 14831  0113E2  0100               	movlb	0	; () banked
 14832  0113E4  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 14833  0113E6  0100               	movlb	0	; () banked
 14834  0113E8  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 14835  0113EA  0E00               	movlw	0
 14836  0113EC  0100               	movlb	0	; () banked
 14837  0113EE  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 14838  0113F0  0100               	movlb	0	; () banked
 14839  0113F2  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 14840                           
 14841                           ; BSR set to: 0
 14842                           ;inc\CANlib.h: 313: tamp = tamp >> 8;
 14843  0113F4  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
 14844  0113F8  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 14845  0113FC  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 14846  011400  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 14847  011404  C077  F076         	movff	??_CANsendMessage+1,??_CANsendMessage
 14848  011408  C078  F077         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 14849  01140C  C079  F078         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 14850  011410  0100               	movlb	0	; () banked
 14851  011412  6B79               	clrf	(??_CANsendMessage+3)& (0+255),b
 14852  011414  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 14853  011418  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 14854  01141C  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 14855  011420  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 14856                           
 14857                           ; BSR set to: 0
 14858                           ;inc\CANlib.h: 314: TXB0EIDH = (unsigned char) tamp;
 14859  011424  C07A  FF43         	movff	CANsendMessage@tamp,3907	;volatile
 14860                           
 14861                           ; BSR set to: 0
 14862                           ;inc\CANlib.h: 316: TXB0SIDL = 0x00;
 14863  011428  0E00               	movlw	0
 14864  01142A  010F               	movlb	15	; () banked
 14865  01142C  6F42               	movwf	66,b	;volatile
 14866                           
 14867                           ; BSR set to: 15
 14868                           ;inc\CANlib.h: 317: TXB0SIDLbits.EXIDE = 0x01;
 14869  01142E  010F               	movlb	15	; () banked
 14870  011430  8742               	bsf	66,3,b	;volatile
 14871                           
 14872                           ; BSR set to: 15
 14873                           ;inc\CANlib.h: 319: if (identifier & 0x00010000)
 14874  011432  0100               	movlb	0	; () banked
 14875  011434  A170               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 14876  011436  D002               	goto	l375
 14877                           
 14878                           ; BSR set to: 0
 14879                           ;inc\CANlib.h: 320: TXB0SIDLbits.EID16 = 0x01;
 14880  011438  010F               	movlb	15	; () banked
 14881  01143A  8142               	bsf	66,0,b	;volatile
 14882  01143C                     l375:
 14883                           
 14884                           ;inc\CANlib.h: 321: if (identifier & 0x00020000)
 14885  01143C  0100               	movlb	0	; () banked
 14886  01143E  A370               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 14887  011440  D002               	goto	l376
 14888                           
 14889                           ; BSR set to: 0
 14890                           ;inc\CANlib.h: 322: TXB0SIDLbits.EID17 = 0x01;
 14891  011442  010F               	movlb	15	; () banked
 14892  011444  8342               	bsf	66,1,b	;volatile
 14893  011446                     l376:
 14894                           
 14895                           ;inc\CANlib.h: 323: if (identifier & 0x00040000)
 14896  011446  0100               	movlb	0	; () banked
 14897  011448  A570               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 14898  01144A  D002               	goto	l377
 14899                           
 14900                           ; BSR set to: 0
 14901                           ;inc\CANlib.h: 324: TXB0SIDLbits.SID0 = 0x01;
 14902  01144C  010F               	movlb	15	; () banked
 14903  01144E  8B42               	bsf	66,5,b	;volatile
 14904  011450                     l377:
 14905                           
 14906                           ;inc\CANlib.h: 325: if (identifier & 0x00080000)
 14907  011450  0100               	movlb	0	; () banked
 14908  011452  A770               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 14909  011454  D002               	goto	l378
 14910                           
 14911                           ; BSR set to: 0
 14912                           ;inc\CANlib.h: 326: TXB0SIDLbits.SID1 = 0x01;
 14913  011456  010F               	movlb	15	; () banked
 14914  011458  8D42               	bsf	66,6,b	;volatile
 14915  01145A                     l378:
 14916                           
 14917                           ;inc\CANlib.h: 327: if (identifier & 0x00100000)
 14918  01145A  0100               	movlb	0	; () banked
 14919  01145C  A970               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 14920  01145E  D002               	goto	l7840
 14921                           
 14922                           ; BSR set to: 0
 14923                           ;inc\CANlib.h: 328: TXB0SIDLbits.SID2 = 0x01;
 14924  011460  010F               	movlb	15	; () banked
 14925  011462  8F42               	bsf	66,7,b	;volatile
 14926  011464                     l7840:
 14927                           
 14928                           ;inc\CANlib.h: 330: tamp = (identifier >> 21);
 14929  011464  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
 14930  011468  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 14931  01146C  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 14932  011470  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 14933  011474  0E16               	movlw	22
 14934  011476  D006               	goto	u10470
 14935  011478                     u10475:
 14936  011478  0100               	movlb	0	; () banked
 14937  01147A  90D8               	bcf	status,0,c
 14938  01147C  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 14939  01147E  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 14940  011480  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 14941  011482  3376               	rrcf	??_CANsendMessage& (0+255),f,b
 14942  011484                     u10470:
 14943  011484  2EE8               	decfsz	wreg,f,c
 14944  011486  D7F8               	goto	u10475
 14945  011488  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 14946  01148C  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 14947  011490  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 14948  011494  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 14949                           
 14950                           ; BSR set to: 0
 14951                           ;inc\CANlib.h: 331: tamp = tamp & 0x000000FF;
 14952  011498  0100               	movlb	0	; () banked
 14953  01149A  517A               	movf	CANsendMessage@tamp& (0+255),w,b
 14954  01149C  0100               	movlb	0	; () banked
 14955  01149E  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 14956  0114A0  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 14957  0114A2  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 14958  0114A4  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 14959                           
 14960                           ; BSR set to: 0
 14961                           ;inc\CANlib.h: 332: TXB0SIDH = (unsigned char) tamp;
 14962  0114A6  C07A  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 14963                           
 14964                           ;inc\CANlib.h: 333: }
 14965  0114AA  D059               	goto	l7860
 14966  0114AC                     l374:
 14967                           
 14968                           ; BSR set to: 0
 14969                           ;inc\CANlib.h: 335: else
 14970                           ;inc\CANlib.h: 337: {
 14971                           ;inc\CANlib.h: 338: TXB0SIDLbits.EXIDE = 0x00;
 14972  0114AC  010F               	movlb	15	; () banked
 14973  0114AE  9742               	bcf	66,3,b	;volatile
 14974                           
 14975                           ; BSR set to: 15
 14976                           ;inc\CANlib.h: 340: tamp = (identifier >> 3);
 14977  0114B0  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
 14978  0114B4  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 14979  0114B8  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 14980  0114BC  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 14981  0114C0  0E04               	movlw	4
 14982  0114C2  D006               	goto	u10480
 14983  0114C4                     u10485:
 14984  0114C4  0100               	movlb	0	; () banked
 14985  0114C6  90D8               	bcf	status,0,c
 14986  0114C8  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 14987  0114CA  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 14988  0114CC  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 14989  0114CE  3376               	rrcf	??_CANsendMessage& (0+255),f,b
 14990  0114D0                     u10480:
 14991  0114D0  2EE8               	decfsz	wreg,f,c
 14992  0114D2  D7F8               	goto	u10485
 14993  0114D4  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 14994  0114D8  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 14995  0114DC  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 14996  0114E0  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 14997                           
 14998                           ; BSR set to: 0
 14999                           ;inc\CANlib.h: 341: tamp = tamp & 0x000000FF;
 15000  0114E4  0100               	movlb	0	; () banked
 15001  0114E6  517A               	movf	CANsendMessage@tamp& (0+255),w,b
 15002  0114E8  0100               	movlb	0	; () banked
 15003  0114EA  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 15004  0114EC  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15005  0114EE  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15006  0114F0  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15007                           
 15008                           ; BSR set to: 0
 15009                           ;inc\CANlib.h: 342: TXB0SIDH = (unsigned char) tamp;
 15010  0114F2  C07A  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 15011                           
 15012                           ; BSR set to: 0
 15013                           ;inc\CANlib.h: 344: tamp = identifier & 0x00000007;
 15014  0114F6  0E07               	movlw	7
 15015  0114F8  0100               	movlb	0	; () banked
 15016  0114FA  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
 15017  0114FC  0100               	movlb	0	; () banked
 15018  0114FE  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 15019  011500  0E00               	movlw	0
 15020  011502  0100               	movlb	0	; () banked
 15021  011504  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 15022  011506  0100               	movlb	0	; () banked
 15023  011508  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 15024  01150A  0E00               	movlw	0
 15025  01150C  0100               	movlb	0	; () banked
 15026  01150E  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 15027  011510  0100               	movlb	0	; () banked
 15028  011512  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 15029  011514  0E00               	movlw	0
 15030  011516  0100               	movlb	0	; () banked
 15031  011518  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 15032  01151A  0100               	movlb	0	; () banked
 15033  01151C  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 15034                           
 15035                           ; BSR set to: 0
 15036                           ;inc\CANlib.h: 345: tamp = tamp << 5;
 15037  01151E  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
 15038  011522  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 15039  011526  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 15040  01152A  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 15041  01152E  0E05               	movlw	5
 15042  011530                     u10495:
 15043  011530  90D8               	bcf	status,0,c
 15044  011532  0100               	movlb	0	; () banked
 15045  011534  3776               	rlcf	??_CANsendMessage& (0+255),f,b
 15046  011536  3777               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 15047  011538  3778               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 15048  01153A  3779               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 15049  01153C  2EE8               	decfsz	wreg,f,c
 15050  01153E  D7F8               	goto	u10495
 15051  011540  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 15052  011544  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15053  011548  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15054  01154C  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15055                           
 15056                           ; BSR set to: 0
 15057                           ;inc\CANlib.h: 346: TXB0SIDL = TXB0SIDL & 0b00011111;
 15058  011550  010F               	movlb	15	; () banked
 15059  011552  5142               	movf	66,w,b	;volatile
 15060  011554  0B1F               	andlw	31
 15061  011556  010F               	movlb	15	; () banked
 15062  011558  6F42               	movwf	66,b	;volatile
 15063                           
 15064                           ; BSR set to: 15
 15065                           ;inc\CANlib.h: 347: TXB0SIDL = (unsigned char) tamp;
 15066  01155A  C07A  FF42         	movff	CANsendMessage@tamp,3906	;volatile
 15067  01155E                     l7860:
 15068                           
 15069                           ;inc\CANlib.h: 348: }
 15070                           ;inc\CANlib.h: 350: if (0b00000001 & flags)
 15071  01155E  0100               	movlb	0	; () banked
 15072  011560  A175               	btfss	CANsendMessage@flags& (0+255),0,b
 15073  011562  D003               	goto	l381
 15074                           
 15075                           ; BSR set to: 0
 15076                           ;inc\CANlib.h: 351: TXB0CONbits.TXPRI0 = 0x01;
 15077  011564  010F               	movlb	15	; () banked
 15078  011566  8140               	bsf	64,0,b	;volatile
 15079  011568  D002               	goto	l382
 15080  01156A                     l381:
 15081                           
 15082                           ; BSR set to: 0
 15083                           ;inc\CANlib.h: 352: else
 15084                           ;inc\CANlib.h: 353: TXB0CONbits.TXPRI0 = 0x00;
 15085  01156A  010F               	movlb	15	; () banked
 15086  01156C  9140               	bcf	64,0,b	;volatile
 15087  01156E                     l382:
 15088                           
 15089                           ; BSR set to: 15
 15090                           ;inc\CANlib.h: 354: if (0b00000010 & flags)
 15091  01156E  0100               	movlb	0	; () banked
 15092  011570  A375               	btfss	CANsendMessage@flags& (0+255),1,b
 15093  011572  D003               	goto	l383
 15094                           
 15095                           ; BSR set to: 0
 15096                           ;inc\CANlib.h: 355: TXB0CONbits.TXPRI1 = 0x01;
 15097  011574  010F               	movlb	15	; () banked
 15098  011576  8340               	bsf	64,1,b	;volatile
 15099  011578  D002               	goto	l7866
 15100  01157A                     l383:
 15101                           
 15102                           ; BSR set to: 0
 15103                           ;inc\CANlib.h: 356: else
 15104                           ;inc\CANlib.h: 357: TXB0CONbits.TXPRI1 = 0x00;
 15105  01157A  010F               	movlb	15	; () banked
 15106  01157C  9340               	bcf	64,1,b	;volatile
 15107  01157E                     l7866:
 15108                           
 15109                           ; BSR set to: 15
 15110                           ;inc\CANlib.h: 359: TXB0D0 = data[0];
 15111  01157E  C072  FFD9         	movff	CANsendMessage@data,fsr2l
 15112  011582  C073  FFDA         	movff	CANsendMessage@data+1,fsr2h
 15113  011586  50DF               	movf	indf2,w,c
 15114  011588  010F               	movlb	15	; () banked
 15115  01158A  6F46               	movwf	70,b	;volatile
 15116                           
 15117                           ; BSR set to: 15
 15118                           ;inc\CANlib.h: 360: TXB0D1 = data[1];
 15119  01158C  0100               	movlb	0	; () banked
 15120  01158E  EE20 F001          	lfsr	2,1
 15121  011592  5172               	movf	CANsendMessage@data& (0+255),w,b
 15122  011594  26D9               	addwf	fsr2l,f,c
 15123  011596  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15124  011598  22DA               	addwfc	fsr2h,f,c
 15125  01159A  50DF               	movf	indf2,w,c
 15126  01159C  010F               	movlb	15	; () banked
 15127  01159E  6F47               	movwf	71,b	;volatile
 15128                           
 15129                           ; BSR set to: 15
 15130                           ;inc\CANlib.h: 361: TXB0D2 = data[2];
 15131  0115A0  0100               	movlb	0	; () banked
 15132  0115A2  EE20 F002          	lfsr	2,2
 15133  0115A6  5172               	movf	CANsendMessage@data& (0+255),w,b
 15134  0115A8  26D9               	addwf	fsr2l,f,c
 15135  0115AA  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15136  0115AC  22DA               	addwfc	fsr2h,f,c
 15137  0115AE  50DF               	movf	indf2,w,c
 15138  0115B0  010F               	movlb	15	; () banked
 15139  0115B2  6F48               	movwf	72,b	;volatile
 15140                           
 15141                           ; BSR set to: 15
 15142                           ;inc\CANlib.h: 362: TXB0D3 = data[3];
 15143  0115B4  0100               	movlb	0	; () banked
 15144  0115B6  EE20 F003          	lfsr	2,3
 15145  0115BA  5172               	movf	CANsendMessage@data& (0+255),w,b
 15146  0115BC  26D9               	addwf	fsr2l,f,c
 15147  0115BE  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15148  0115C0  22DA               	addwfc	fsr2h,f,c
 15149  0115C2  50DF               	movf	indf2,w,c
 15150  0115C4  010F               	movlb	15	; () banked
 15151  0115C6  6F49               	movwf	73,b	;volatile
 15152                           
 15153                           ; BSR set to: 15
 15154                           ;inc\CANlib.h: 363: TXB0D4 = data[4];
 15155  0115C8  0100               	movlb	0	; () banked
 15156  0115CA  EE20 F004          	lfsr	2,4
 15157  0115CE  5172               	movf	CANsendMessage@data& (0+255),w,b
 15158  0115D0  26D9               	addwf	fsr2l,f,c
 15159  0115D2  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15160  0115D4  22DA               	addwfc	fsr2h,f,c
 15161  0115D6  50DF               	movf	indf2,w,c
 15162  0115D8  010F               	movlb	15	; () banked
 15163  0115DA  6F4A               	movwf	74,b	;volatile
 15164                           
 15165                           ; BSR set to: 15
 15166                           ;inc\CANlib.h: 364: TXB0D5 = data[5];
 15167  0115DC  0100               	movlb	0	; () banked
 15168  0115DE  EE20 F005          	lfsr	2,5
 15169  0115E2  5172               	movf	CANsendMessage@data& (0+255),w,b
 15170  0115E4  26D9               	addwf	fsr2l,f,c
 15171  0115E6  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15172  0115E8  22DA               	addwfc	fsr2h,f,c
 15173  0115EA  50DF               	movf	indf2,w,c
 15174  0115EC  010F               	movlb	15	; () banked
 15175  0115EE  6F4B               	movwf	75,b	;volatile
 15176                           
 15177                           ; BSR set to: 15
 15178                           ;inc\CANlib.h: 365: TXB0D6 = data[6];
 15179  0115F0  0100               	movlb	0	; () banked
 15180  0115F2  EE20 F006          	lfsr	2,6
 15181  0115F6  5172               	movf	CANsendMessage@data& (0+255),w,b
 15182  0115F8  26D9               	addwf	fsr2l,f,c
 15183  0115FA  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15184  0115FC  22DA               	addwfc	fsr2h,f,c
 15185  0115FE  50DF               	movf	indf2,w,c
 15186  011600  010F               	movlb	15	; () banked
 15187  011602  6F4C               	movwf	76,b	;volatile
 15188                           
 15189                           ; BSR set to: 15
 15190                           ;inc\CANlib.h: 366: TXB0D7 = data[7];
 15191  011604  0100               	movlb	0	; () banked
 15192  011606  EE20 F007          	lfsr	2,7
 15193  01160A  5172               	movf	CANsendMessage@data& (0+255),w,b
 15194  01160C  26D9               	addwf	fsr2l,f,c
 15195  01160E  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15196  011610  22DA               	addwfc	fsr2h,f,c
 15197  011612  50DF               	movf	indf2,w,c
 15198  011614  010F               	movlb	15	; () banked
 15199  011616  6F4D               	movwf	77,b	;volatile
 15200                           
 15201                           ; BSR set to: 15
 15202                           ;inc\CANlib.h: 368: TXB0CONbits.TXREQ = 0x01;
 15203  011618  010F               	movlb	15	; () banked
 15204  01161A  8740               	bsf	64,3,b	;volatile
 15205                           
 15206                           ; BSR set to: 15
 15207                           ;inc\CANlib.h: 369: return;
 15208  01161C  0012               	return	
 15209  01161E                     l371:
 15210                           
 15211                           ; BSR set to: 15
 15212                           ;inc\CANlib.h: 370: }
 15213                           ;inc\CANlib.h: 374: if (TXB1CONbits.TXREQ == 0)
 15214  01161E  010F               	movlb	15	; () banked
 15215  011620  B730               	btfsc	48,3,b	;volatile
 15216  011622  D13F               	goto	l386
 15217                           
 15218                           ; BSR set to: 15
 15219                           ;inc\CANlib.h: 375: { TXB1DLC = dataLength;
 15220  011624  C074  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
 15221                           
 15222                           ;inc\CANlib.h: 377: if (0b01000000 & flags)
 15223  011628  0100               	movlb	0	; () banked
 15224  01162A  AD75               	btfss	CANsendMessage@flags& (0+255),6,b
 15225  01162C  D003               	goto	l387
 15226                           
 15227                           ; BSR set to: 0
 15228                           ;inc\CANlib.h: 378: TXB1DLCbits.TXRTR = 0x01;
 15229  01162E  010F               	movlb	15	; () banked
 15230  011630  8D35               	bsf	53,6,b	;volatile
 15231  011632  D002               	goto	l388
 15232  011634                     l387:
 15233                           
 15234                           ; BSR set to: 0
 15235                           ;inc\CANlib.h: 379: else
 15236                           ;inc\CANlib.h: 380: TXB1DLCbits.TXRTR = 0x00;
 15237  011634  010F               	movlb	15	; () banked
 15238  011636  9D35               	bcf	53,6,b	;volatile
 15239  011638                     l388:
 15240                           
 15241                           ; BSR set to: 15
 15242                           ;inc\CANlib.h: 382: if (CAN_TX_FRAME_MASK & flags)
 15243  011638  0100               	movlb	0	; () banked
 15244  01163A  A775               	btfss	CANsendMessage@flags& (0+255),3,b
 15245  01163C  D079               	goto	l389
 15246                           
 15247                           ; BSR set to: 0
 15248                           ;inc\CANlib.h: 383: {
 15249                           ;inc\CANlib.h: 384: tamp = identifier & 0x000000FF;
 15250  01163E  0100               	movlb	0	; () banked
 15251  011640  516E               	movf	CANsendMessage@identifier& (0+255),w,b
 15252  011642  0100               	movlb	0	; () banked
 15253  011644  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 15254  011646  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15255  011648  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15256  01164A  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15257                           
 15258                           ; BSR set to: 0
 15259                           ;inc\CANlib.h: 385: TXB1EIDL = (unsigned char) tamp;
 15260  01164C  C07A  FF34         	movff	CANsendMessage@tamp,3892	;volatile
 15261                           
 15262                           ; BSR set to: 0
 15263                           ;inc\CANlib.h: 387: tamp = identifier & 0x0000FF00;
 15264  011650  0E00               	movlw	0
 15265  011652  0100               	movlb	0	; () banked
 15266  011654  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
 15267  011656  0100               	movlb	0	; () banked
 15268  011658  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 15269  01165A  0EFF               	movlw	255
 15270  01165C  0100               	movlb	0	; () banked
 15271  01165E  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 15272  011660  0100               	movlb	0	; () banked
 15273  011662  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 15274  011664  0E00               	movlw	0
 15275  011666  0100               	movlb	0	; () banked
 15276  011668  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 15277  01166A  0100               	movlb	0	; () banked
 15278  01166C  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 15279  01166E  0E00               	movlw	0
 15280  011670  0100               	movlb	0	; () banked
 15281  011672  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 15282  011674  0100               	movlb	0	; () banked
 15283  011676  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 15284                           
 15285                           ; BSR set to: 0
 15286                           ;inc\CANlib.h: 388: tamp = tamp >> 8;
 15287  011678  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
 15288  01167C  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 15289  011680  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 15290  011684  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 15291  011688  C077  F076         	movff	??_CANsendMessage+1,??_CANsendMessage
 15292  01168C  C078  F077         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 15293  011690  C079  F078         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 15294  011694  0100               	movlb	0	; () banked
 15295  011696  6B79               	clrf	(??_CANsendMessage+3)& (0+255),b
 15296  011698  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 15297  01169C  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15298  0116A0  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15299  0116A4  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15300                           
 15301                           ; BSR set to: 0
 15302                           ;inc\CANlib.h: 389: TXB1EIDH = (unsigned char) tamp;
 15303  0116A8  C07A  FF33         	movff	CANsendMessage@tamp,3891	;volatile
 15304                           
 15305                           ; BSR set to: 0
 15306                           ;inc\CANlib.h: 391: TXB1SIDL = 0x00;
 15307  0116AC  0E00               	movlw	0
 15308  0116AE  010F               	movlb	15	; () banked
 15309  0116B0  6F32               	movwf	50,b	;volatile
 15310                           
 15311                           ; BSR set to: 15
 15312                           ;inc\CANlib.h: 392: TXB1SIDLbits.EXIDE = 0x01;
 15313  0116B2  010F               	movlb	15	; () banked
 15314  0116B4  8732               	bsf	50,3,b	;volatile
 15315                           
 15316                           ; BSR set to: 15
 15317                           ;inc\CANlib.h: 394: if (identifier & 0x00010000)
 15318  0116B6  0100               	movlb	0	; () banked
 15319  0116B8  A170               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 15320  0116BA  D002               	goto	l390
 15321                           
 15322                           ; BSR set to: 0
 15323                           ;inc\CANlib.h: 395: TXB1SIDLbits.EID16 = 0x01;
 15324  0116BC  010F               	movlb	15	; () banked
 15325  0116BE  8132               	bsf	50,0,b	;volatile
 15326  0116C0                     l390:
 15327                           
 15328                           ;inc\CANlib.h: 396: if (identifier & 0x00020000)
 15329  0116C0  0100               	movlb	0	; () banked
 15330  0116C2  A370               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 15331  0116C4  D002               	goto	l391
 15332                           
 15333                           ; BSR set to: 0
 15334                           ;inc\CANlib.h: 397: TXB1SIDLbits.EID17 = 0x01;
 15335  0116C6  010F               	movlb	15	; () banked
 15336  0116C8  8332               	bsf	50,1,b	;volatile
 15337  0116CA                     l391:
 15338                           
 15339                           ;inc\CANlib.h: 398: if (identifier & 0x00040000)
 15340  0116CA  0100               	movlb	0	; () banked
 15341  0116CC  A570               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 15342  0116CE  D002               	goto	l392
 15343                           
 15344                           ; BSR set to: 0
 15345                           ;inc\CANlib.h: 399: TXB1SIDLbits.SID0 = 0x01;
 15346  0116D0  010F               	movlb	15	; () banked
 15347  0116D2  8B32               	bsf	50,5,b	;volatile
 15348  0116D4                     l392:
 15349                           
 15350                           ;inc\CANlib.h: 400: if (identifier & 0x00080000)
 15351  0116D4  0100               	movlb	0	; () banked
 15352  0116D6  A770               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 15353  0116D8  D002               	goto	l393
 15354                           
 15355                           ; BSR set to: 0
 15356                           ;inc\CANlib.h: 401: TXB1SIDLbits.SID1 = 0x01;
 15357  0116DA  010F               	movlb	15	; () banked
 15358  0116DC  8D32               	bsf	50,6,b	;volatile
 15359  0116DE                     l393:
 15360                           
 15361                           ;inc\CANlib.h: 402: if (identifier & 0x00100000)
 15362  0116DE  0100               	movlb	0	; () banked
 15363  0116E0  A970               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 15364  0116E2  D002               	goto	l7916
 15365                           
 15366                           ; BSR set to: 0
 15367                           ;inc\CANlib.h: 403: TXB1SIDLbits.SID2 = 0x01;
 15368  0116E4  010F               	movlb	15	; () banked
 15369  0116E6  8F32               	bsf	50,7,b	;volatile
 15370  0116E8                     l7916:
 15371                           
 15372                           ;inc\CANlib.h: 405: tamp = (identifier >> 21);
 15373  0116E8  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
 15374  0116EC  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 15375  0116F0  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 15376  0116F4  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 15377  0116F8  0E16               	movlw	22
 15378  0116FA  D006               	goto	u10600
 15379  0116FC                     u10605:
 15380  0116FC  0100               	movlb	0	; () banked
 15381  0116FE  90D8               	bcf	status,0,c
 15382  011700  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 15383  011702  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 15384  011704  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 15385  011706  3376               	rrcf	??_CANsendMessage& (0+255),f,b
 15386  011708                     u10600:
 15387  011708  2EE8               	decfsz	wreg,f,c
 15388  01170A  D7F8               	goto	u10605
 15389  01170C  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 15390  011710  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15391  011714  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15392  011718  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15393                           
 15394                           ; BSR set to: 0
 15395                           ;inc\CANlib.h: 406: tamp = tamp & 0x000000FF;
 15396  01171C  0100               	movlb	0	; () banked
 15397  01171E  517A               	movf	CANsendMessage@tamp& (0+255),w,b
 15398  011720  0100               	movlb	0	; () banked
 15399  011722  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 15400  011724  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15401  011726  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15402  011728  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15403                           
 15404                           ; BSR set to: 0
 15405                           ;inc\CANlib.h: 407: TXB1SIDH = (unsigned char) tamp;
 15406  01172A  C07A  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 15407                           
 15408                           ;inc\CANlib.h: 408: }
 15409  01172E  D059               	goto	l7936
 15410  011730                     l389:
 15411                           
 15412                           ; BSR set to: 0
 15413                           ;inc\CANlib.h: 410: else
 15414                           ;inc\CANlib.h: 412: {
 15415                           ;inc\CANlib.h: 413: TXB1SIDLbits.EXIDE = 0x00;
 15416  011730  010F               	movlb	15	; () banked
 15417  011732  9732               	bcf	50,3,b	;volatile
 15418                           
 15419                           ; BSR set to: 15
 15420                           ;inc\CANlib.h: 415: tamp = (identifier >> 3);
 15421  011734  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
 15422  011738  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 15423  01173C  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 15424  011740  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 15425  011744  0E04               	movlw	4
 15426  011746  D006               	goto	u10610
 15427  011748                     u10615:
 15428  011748  0100               	movlb	0	; () banked
 15429  01174A  90D8               	bcf	status,0,c
 15430  01174C  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 15431  01174E  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 15432  011750  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 15433  011752  3376               	rrcf	??_CANsendMessage& (0+255),f,b
 15434  011754                     u10610:
 15435  011754  2EE8               	decfsz	wreg,f,c
 15436  011756  D7F8               	goto	u10615
 15437  011758  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 15438  01175C  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15439  011760  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15440  011764  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15441                           
 15442                           ; BSR set to: 0
 15443                           ;inc\CANlib.h: 416: tamp = tamp & 0x000000FF;
 15444  011768  0100               	movlb	0	; () banked
 15445  01176A  517A               	movf	CANsendMessage@tamp& (0+255),w,b
 15446  01176C  0100               	movlb	0	; () banked
 15447  01176E  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 15448  011770  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15449  011772  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15450  011774  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15451                           
 15452                           ; BSR set to: 0
 15453                           ;inc\CANlib.h: 417: TXB1SIDH = (unsigned char) tamp;
 15454  011776  C07A  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 15455                           
 15456                           ; BSR set to: 0
 15457                           ;inc\CANlib.h: 419: tamp = identifier & 0x00000007;
 15458  01177A  0E07               	movlw	7
 15459  01177C  0100               	movlb	0	; () banked
 15460  01177E  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
 15461  011780  0100               	movlb	0	; () banked
 15462  011782  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 15463  011784  0E00               	movlw	0
 15464  011786  0100               	movlb	0	; () banked
 15465  011788  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 15466  01178A  0100               	movlb	0	; () banked
 15467  01178C  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 15468  01178E  0E00               	movlw	0
 15469  011790  0100               	movlb	0	; () banked
 15470  011792  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 15471  011794  0100               	movlb	0	; () banked
 15472  011796  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 15473  011798  0E00               	movlw	0
 15474  01179A  0100               	movlb	0	; () banked
 15475  01179C  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 15476  01179E  0100               	movlb	0	; () banked
 15477  0117A0  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 15478                           
 15479                           ; BSR set to: 0
 15480                           ;inc\CANlib.h: 420: tamp = tamp << 5;
 15481  0117A2  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
 15482  0117A6  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 15483  0117AA  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 15484  0117AE  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 15485  0117B2  0E05               	movlw	5
 15486  0117B4                     u10625:
 15487  0117B4  90D8               	bcf	status,0,c
 15488  0117B6  0100               	movlb	0	; () banked
 15489  0117B8  3776               	rlcf	??_CANsendMessage& (0+255),f,b
 15490  0117BA  3777               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 15491  0117BC  3778               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 15492  0117BE  3779               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 15493  0117C0  2EE8               	decfsz	wreg,f,c
 15494  0117C2  D7F8               	goto	u10625
 15495  0117C4  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 15496  0117C8  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15497  0117CC  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15498  0117D0  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15499                           
 15500                           ; BSR set to: 0
 15501                           ;inc\CANlib.h: 421: TXB1SIDL = TXB1SIDL & 0b00011111;
 15502  0117D4  010F               	movlb	15	; () banked
 15503  0117D6  5132               	movf	50,w,b	;volatile
 15504  0117D8  0B1F               	andlw	31
 15505  0117DA  010F               	movlb	15	; () banked
 15506  0117DC  6F32               	movwf	50,b	;volatile
 15507                           
 15508                           ; BSR set to: 15
 15509                           ;inc\CANlib.h: 422: TXB1SIDL = (unsigned char) tamp;
 15510  0117DE  C07A  FF32         	movff	CANsendMessage@tamp,3890	;volatile
 15511  0117E2                     l7936:
 15512                           
 15513                           ;inc\CANlib.h: 423: }
 15514                           ;inc\CANlib.h: 425: if (0b00000001 & flags)
 15515  0117E2  0100               	movlb	0	; () banked
 15516  0117E4  A175               	btfss	CANsendMessage@flags& (0+255),0,b
 15517  0117E6  D003               	goto	l396
 15518                           
 15519                           ; BSR set to: 0
 15520                           ;inc\CANlib.h: 426: TXB1CONbits.TXPRI0 = 0x01;
 15521  0117E8  010F               	movlb	15	; () banked
 15522  0117EA  8130               	bsf	48,0,b	;volatile
 15523  0117EC  D002               	goto	l397
 15524  0117EE                     l396:
 15525                           
 15526                           ; BSR set to: 0
 15527                           ;inc\CANlib.h: 427: else
 15528                           ;inc\CANlib.h: 428: TXB1CONbits.TXPRI0 = 0x00;
 15529  0117EE  010F               	movlb	15	; () banked
 15530  0117F0  9130               	bcf	48,0,b	;volatile
 15531  0117F2                     l397:
 15532                           
 15533                           ; BSR set to: 15
 15534                           ;inc\CANlib.h: 429: if (0b00000010 & flags)
 15535  0117F2  0100               	movlb	0	; () banked
 15536  0117F4  A375               	btfss	CANsendMessage@flags& (0+255),1,b
 15537  0117F6  D003               	goto	l398
 15538                           
 15539                           ; BSR set to: 0
 15540                           ;inc\CANlib.h: 430: TXB1CONbits.TXPRI1 = 0x01;
 15541  0117F8  010F               	movlb	15	; () banked
 15542  0117FA  8330               	bsf	48,1,b	;volatile
 15543  0117FC  D002               	goto	l7942
 15544  0117FE                     l398:
 15545                           
 15546                           ; BSR set to: 0
 15547                           ;inc\CANlib.h: 431: else
 15548                           ;inc\CANlib.h: 432: TXB1CONbits.TXPRI1 = 0x00;
 15549  0117FE  010F               	movlb	15	; () banked
 15550  011800  9330               	bcf	48,1,b	;volatile
 15551  011802                     l7942:
 15552                           
 15553                           ; BSR set to: 15
 15554                           ;inc\CANlib.h: 434: TXB1D0 = data[0];
 15555  011802  C072  FFD9         	movff	CANsendMessage@data,fsr2l
 15556  011806  C073  FFDA         	movff	CANsendMessage@data+1,fsr2h
 15557  01180A  50DF               	movf	indf2,w,c
 15558  01180C  010F               	movlb	15	; () banked
 15559  01180E  6F36               	movwf	54,b	;volatile
 15560                           
 15561                           ; BSR set to: 15
 15562                           ;inc\CANlib.h: 435: TXB1D1 = data[1];
 15563  011810  0100               	movlb	0	; () banked
 15564  011812  EE20 F001          	lfsr	2,1
 15565  011816  5172               	movf	CANsendMessage@data& (0+255),w,b
 15566  011818  26D9               	addwf	fsr2l,f,c
 15567  01181A  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15568  01181C  22DA               	addwfc	fsr2h,f,c
 15569  01181E  50DF               	movf	indf2,w,c
 15570  011820  010F               	movlb	15	; () banked
 15571  011822  6F37               	movwf	55,b	;volatile
 15572                           
 15573                           ; BSR set to: 15
 15574                           ;inc\CANlib.h: 436: TXB1D2 = data[2];
 15575  011824  0100               	movlb	0	; () banked
 15576  011826  EE20 F002          	lfsr	2,2
 15577  01182A  5172               	movf	CANsendMessage@data& (0+255),w,b
 15578  01182C  26D9               	addwf	fsr2l,f,c
 15579  01182E  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15580  011830  22DA               	addwfc	fsr2h,f,c
 15581  011832  50DF               	movf	indf2,w,c
 15582  011834  010F               	movlb	15	; () banked
 15583  011836  6F38               	movwf	56,b	;volatile
 15584                           
 15585                           ; BSR set to: 15
 15586                           ;inc\CANlib.h: 437: TXB1D3 = data[3];
 15587  011838  0100               	movlb	0	; () banked
 15588  01183A  EE20 F003          	lfsr	2,3
 15589  01183E  5172               	movf	CANsendMessage@data& (0+255),w,b
 15590  011840  26D9               	addwf	fsr2l,f,c
 15591  011842  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15592  011844  22DA               	addwfc	fsr2h,f,c
 15593  011846  50DF               	movf	indf2,w,c
 15594  011848  010F               	movlb	15	; () banked
 15595  01184A  6F39               	movwf	57,b	;volatile
 15596                           
 15597                           ; BSR set to: 15
 15598                           ;inc\CANlib.h: 438: TXB1D4 = data[4];
 15599  01184C  0100               	movlb	0	; () banked
 15600  01184E  EE20 F004          	lfsr	2,4
 15601  011852  5172               	movf	CANsendMessage@data& (0+255),w,b
 15602  011854  26D9               	addwf	fsr2l,f,c
 15603  011856  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15604  011858  22DA               	addwfc	fsr2h,f,c
 15605  01185A  50DF               	movf	indf2,w,c
 15606  01185C  010F               	movlb	15	; () banked
 15607  01185E  6F3A               	movwf	58,b	;volatile
 15608                           
 15609                           ; BSR set to: 15
 15610                           ;inc\CANlib.h: 439: TXB1D5 = data[5];
 15611  011860  0100               	movlb	0	; () banked
 15612  011862  EE20 F005          	lfsr	2,5
 15613  011866  5172               	movf	CANsendMessage@data& (0+255),w,b
 15614  011868  26D9               	addwf	fsr2l,f,c
 15615  01186A  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15616  01186C  22DA               	addwfc	fsr2h,f,c
 15617  01186E  50DF               	movf	indf2,w,c
 15618  011870  010F               	movlb	15	; () banked
 15619  011872  6F3B               	movwf	59,b	;volatile
 15620                           
 15621                           ; BSR set to: 15
 15622                           ;inc\CANlib.h: 440: TXB1D6 = data[6];
 15623  011874  0100               	movlb	0	; () banked
 15624  011876  EE20 F006          	lfsr	2,6
 15625  01187A  5172               	movf	CANsendMessage@data& (0+255),w,b
 15626  01187C  26D9               	addwf	fsr2l,f,c
 15627  01187E  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15628  011880  22DA               	addwfc	fsr2h,f,c
 15629  011882  50DF               	movf	indf2,w,c
 15630  011884  010F               	movlb	15	; () banked
 15631  011886  6F3C               	movwf	60,b	;volatile
 15632                           
 15633                           ; BSR set to: 15
 15634                           ;inc\CANlib.h: 441: TXB1D7 = data[7];
 15635  011888  0100               	movlb	0	; () banked
 15636  01188A  EE20 F007          	lfsr	2,7
 15637  01188E  5172               	movf	CANsendMessage@data& (0+255),w,b
 15638  011890  26D9               	addwf	fsr2l,f,c
 15639  011892  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15640  011894  22DA               	addwfc	fsr2h,f,c
 15641  011896  50DF               	movf	indf2,w,c
 15642  011898  010F               	movlb	15	; () banked
 15643  01189A  6F3D               	movwf	61,b	;volatile
 15644                           
 15645                           ; BSR set to: 15
 15646                           ;inc\CANlib.h: 443: TXB1CONbits.TXREQ = 0x01;
 15647  01189C  010F               	movlb	15	; () banked
 15648  01189E  8730               	bsf	48,3,b	;volatile
 15649                           
 15650                           ; BSR set to: 15
 15651                           ;inc\CANlib.h: 445: return;
 15652  0118A0  0012               	return	
 15653  0118A2                     l386:
 15654                           
 15655                           ; BSR set to: 15
 15656                           ;inc\CANlib.h: 446: }
 15657                           ;inc\CANlib.h: 450: if (TXB2CONbits.TXREQ == 0)
 15658  0118A2  010F               	movlb	15	; () banked
 15659  0118A4  B720               	btfsc	32,3,b	;volatile
 15660  0118A6  0012               	return	
 15661                           
 15662                           ; BSR set to: 15
 15663                           ;inc\CANlib.h: 451: { TXB2DLC = dataLength;
 15664  0118A8  C074  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
 15665                           
 15666                           ;inc\CANlib.h: 453: if (0b01000000 & flags)
 15667  0118AC  0100               	movlb	0	; () banked
 15668  0118AE  AD75               	btfss	CANsendMessage@flags& (0+255),6,b
 15669  0118B0  D003               	goto	l401
 15670                           
 15671                           ; BSR set to: 0
 15672                           ;inc\CANlib.h: 454: TXB2DLCbits.TXRTR = 0x01;
 15673  0118B2  010F               	movlb	15	; () banked
 15674  0118B4  8D25               	bsf	37,6,b	;volatile
 15675  0118B6  D002               	goto	l402
 15676  0118B8                     l401:
 15677                           
 15678                           ; BSR set to: 0
 15679                           ;inc\CANlib.h: 455: else
 15680                           ;inc\CANlib.h: 456: TXB2DLCbits.TXRTR = 0x00;
 15681  0118B8  010F               	movlb	15	; () banked
 15682  0118BA  9D25               	bcf	37,6,b	;volatile
 15683  0118BC                     l402:
 15684                           
 15685                           ; BSR set to: 15
 15686                           ;inc\CANlib.h: 458: if (CAN_TX_FRAME_MASK & flags)
 15687  0118BC  0100               	movlb	0	; () banked
 15688  0118BE  A775               	btfss	CANsendMessage@flags& (0+255),3,b
 15689  0118C0  D079               	goto	l403
 15690                           
 15691                           ; BSR set to: 0
 15692                           ;inc\CANlib.h: 459: {
 15693                           ;inc\CANlib.h: 460: tamp = identifier & 0x000000FF;
 15694  0118C2  0100               	movlb	0	; () banked
 15695  0118C4  516E               	movf	CANsendMessage@identifier& (0+255),w,b
 15696  0118C6  0100               	movlb	0	; () banked
 15697  0118C8  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 15698  0118CA  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15699  0118CC  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15700  0118CE  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15701                           
 15702                           ; BSR set to: 0
 15703                           ;inc\CANlib.h: 461: TXB2EIDL = (unsigned char) tamp;
 15704  0118D0  C07A  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 15705                           
 15706                           ; BSR set to: 0
 15707                           ;inc\CANlib.h: 463: tamp = identifier & 0x0000FF00;
 15708  0118D4  0E00               	movlw	0
 15709  0118D6  0100               	movlb	0	; () banked
 15710  0118D8  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
 15711  0118DA  0100               	movlb	0	; () banked
 15712  0118DC  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 15713  0118DE  0EFF               	movlw	255
 15714  0118E0  0100               	movlb	0	; () banked
 15715  0118E2  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 15716  0118E4  0100               	movlb	0	; () banked
 15717  0118E6  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 15718  0118E8  0E00               	movlw	0
 15719  0118EA  0100               	movlb	0	; () banked
 15720  0118EC  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 15721  0118EE  0100               	movlb	0	; () banked
 15722  0118F0  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 15723  0118F2  0E00               	movlw	0
 15724  0118F4  0100               	movlb	0	; () banked
 15725  0118F6  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 15726  0118F8  0100               	movlb	0	; () banked
 15727  0118FA  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 15728                           
 15729                           ; BSR set to: 0
 15730                           ;inc\CANlib.h: 464: tamp = tamp >> 8;
 15731  0118FC  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
 15732  011900  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 15733  011904  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 15734  011908  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 15735  01190C  C077  F076         	movff	??_CANsendMessage+1,??_CANsendMessage
 15736  011910  C078  F077         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 15737  011914  C079  F078         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 15738  011918  0100               	movlb	0	; () banked
 15739  01191A  6B79               	clrf	(??_CANsendMessage+3)& (0+255),b
 15740  01191C  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 15741  011920  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15742  011924  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15743  011928  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15744                           
 15745                           ; BSR set to: 0
 15746                           ;inc\CANlib.h: 465: TXB2EIDH = (unsigned char) tamp;
 15747  01192C  C07A  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 15748                           
 15749                           ; BSR set to: 0
 15750                           ;inc\CANlib.h: 467: TXB2SIDL = 0x00;
 15751  011930  0E00               	movlw	0
 15752  011932  010F               	movlb	15	; () banked
 15753  011934  6F22               	movwf	34,b	;volatile
 15754                           
 15755                           ; BSR set to: 15
 15756                           ;inc\CANlib.h: 468: TXB2SIDLbits.EXIDE = 0x01;
 15757  011936  010F               	movlb	15	; () banked
 15758  011938  8722               	bsf	34,3,b	;volatile
 15759                           
 15760                           ; BSR set to: 15
 15761                           ;inc\CANlib.h: 470: if (identifier & 0x00010000)
 15762  01193A  0100               	movlb	0	; () banked
 15763  01193C  A170               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 15764  01193E  D002               	goto	l404
 15765                           
 15766                           ; BSR set to: 0
 15767                           ;inc\CANlib.h: 471: TXB2SIDLbits.EID16 = 0x01;
 15768  011940  010F               	movlb	15	; () banked
 15769  011942  8122               	bsf	34,0,b	;volatile
 15770  011944                     l404:
 15771                           
 15772                           ;inc\CANlib.h: 472: if (identifier & 0x00020000)
 15773  011944  0100               	movlb	0	; () banked
 15774  011946  A370               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 15775  011948  D002               	goto	l405
 15776                           
 15777                           ; BSR set to: 0
 15778                           ;inc\CANlib.h: 473: TXB2SIDLbits.EID17 = 0x01;
 15779  01194A  010F               	movlb	15	; () banked
 15780  01194C  8322               	bsf	34,1,b	;volatile
 15781  01194E                     l405:
 15782                           
 15783                           ;inc\CANlib.h: 474: if (identifier & 0x00040000)
 15784  01194E  0100               	movlb	0	; () banked
 15785  011950  A570               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 15786  011952  D002               	goto	l406
 15787                           
 15788                           ; BSR set to: 0
 15789                           ;inc\CANlib.h: 475: TXB2SIDLbits.SID0 = 0x01;
 15790  011954  010F               	movlb	15	; () banked
 15791  011956  8B22               	bsf	34,5,b	;volatile
 15792  011958                     l406:
 15793                           
 15794                           ;inc\CANlib.h: 476: if (identifier & 0x00080000)
 15795  011958  0100               	movlb	0	; () banked
 15796  01195A  A770               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 15797  01195C  D002               	goto	l407
 15798                           
 15799                           ; BSR set to: 0
 15800                           ;inc\CANlib.h: 477: TXB2SIDLbits.SID1 = 0x01;
 15801  01195E  010F               	movlb	15	; () banked
 15802  011960  8D22               	bsf	34,6,b	;volatile
 15803  011962                     l407:
 15804                           
 15805                           ;inc\CANlib.h: 478: if (identifier & 0x00100000)
 15806  011962  0100               	movlb	0	; () banked
 15807  011964  A970               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 15808  011966  D002               	goto	l7992
 15809                           
 15810                           ; BSR set to: 0
 15811                           ;inc\CANlib.h: 479: TXB2SIDLbits.SID2 = 0x01;
 15812  011968  010F               	movlb	15	; () banked
 15813  01196A  8F22               	bsf	34,7,b	;volatile
 15814  01196C                     l7992:
 15815                           
 15816                           ;inc\CANlib.h: 481: tamp = (identifier >> 21);
 15817  01196C  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
 15818  011970  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 15819  011974  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 15820  011978  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 15821  01197C  0E16               	movlw	22
 15822  01197E  D006               	goto	u10730
 15823  011980                     u10735:
 15824  011980  0100               	movlb	0	; () banked
 15825  011982  90D8               	bcf	status,0,c
 15826  011984  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 15827  011986  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 15828  011988  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 15829  01198A  3376               	rrcf	??_CANsendMessage& (0+255),f,b
 15830  01198C                     u10730:
 15831  01198C  2EE8               	decfsz	wreg,f,c
 15832  01198E  D7F8               	goto	u10735
 15833  011990  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 15834  011994  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15835  011998  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15836  01199C  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15837                           
 15838                           ; BSR set to: 0
 15839                           ;inc\CANlib.h: 482: tamp = tamp & 0x000000FF;
 15840  0119A0  0100               	movlb	0	; () banked
 15841  0119A2  517A               	movf	CANsendMessage@tamp& (0+255),w,b
 15842  0119A4  0100               	movlb	0	; () banked
 15843  0119A6  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 15844  0119A8  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15845  0119AA  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15846  0119AC  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15847                           
 15848                           ; BSR set to: 0
 15849                           ;inc\CANlib.h: 483: TXB2SIDH = (unsigned char) tamp;
 15850  0119AE  C07A  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 15851                           
 15852                           ;inc\CANlib.h: 484: }
 15853  0119B2  D059               	goto	l8012
 15854  0119B4                     l403:
 15855                           
 15856                           ; BSR set to: 0
 15857                           ;inc\CANlib.h: 486: else
 15858                           ;inc\CANlib.h: 488: {
 15859                           ;inc\CANlib.h: 489: TXB2SIDLbits.EXIDE = 0x00;
 15860  0119B4  010F               	movlb	15	; () banked
 15861  0119B6  9722               	bcf	34,3,b	;volatile
 15862                           
 15863                           ; BSR set to: 15
 15864                           ;inc\CANlib.h: 491: tamp = (identifier >> 3);
 15865  0119B8  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
 15866  0119BC  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 15867  0119C0  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 15868  0119C4  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 15869  0119C8  0E04               	movlw	4
 15870  0119CA  D006               	goto	u10740
 15871  0119CC                     u10745:
 15872  0119CC  0100               	movlb	0	; () banked
 15873  0119CE  90D8               	bcf	status,0,c
 15874  0119D0  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 15875  0119D2  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 15876  0119D4  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 15877  0119D6  3376               	rrcf	??_CANsendMessage& (0+255),f,b
 15878  0119D8                     u10740:
 15879  0119D8  2EE8               	decfsz	wreg,f,c
 15880  0119DA  D7F8               	goto	u10745
 15881  0119DC  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 15882  0119E0  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15883  0119E4  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15884  0119E8  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15885                           
 15886                           ; BSR set to: 0
 15887                           ;inc\CANlib.h: 492: tamp = tamp & 0x000000FF;
 15888  0119EC  0100               	movlb	0	; () banked
 15889  0119EE  517A               	movf	CANsendMessage@tamp& (0+255),w,b
 15890  0119F0  0100               	movlb	0	; () banked
 15891  0119F2  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 15892  0119F4  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15893  0119F6  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15894  0119F8  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15895                           
 15896                           ; BSR set to: 0
 15897                           ;inc\CANlib.h: 493: TXB2SIDH = (unsigned char) tamp;
 15898  0119FA  C07A  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 15899                           
 15900                           ; BSR set to: 0
 15901                           ;inc\CANlib.h: 495: tamp = identifier & 0x00000007;
 15902  0119FE  0E07               	movlw	7
 15903  011A00  0100               	movlb	0	; () banked
 15904  011A02  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
 15905  011A04  0100               	movlb	0	; () banked
 15906  011A06  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 15907  011A08  0E00               	movlw	0
 15908  011A0A  0100               	movlb	0	; () banked
 15909  011A0C  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 15910  011A0E  0100               	movlb	0	; () banked
 15911  011A10  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 15912  011A12  0E00               	movlw	0
 15913  011A14  0100               	movlb	0	; () banked
 15914  011A16  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 15915  011A18  0100               	movlb	0	; () banked
 15916  011A1A  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 15917  011A1C  0E00               	movlw	0
 15918  011A1E  0100               	movlb	0	; () banked
 15919  011A20  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 15920  011A22  0100               	movlb	0	; () banked
 15921  011A24  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 15922                           
 15923                           ; BSR set to: 0
 15924                           ;inc\CANlib.h: 496: tamp = tamp << 5;
 15925  011A26  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
 15926  011A2A  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 15927  011A2E  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 15928  011A32  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 15929  011A36  0E05               	movlw	5
 15930  011A38                     u10755:
 15931  011A38  90D8               	bcf	status,0,c
 15932  011A3A  0100               	movlb	0	; () banked
 15933  011A3C  3776               	rlcf	??_CANsendMessage& (0+255),f,b
 15934  011A3E  3777               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 15935  011A40  3778               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 15936  011A42  3779               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 15937  011A44  2EE8               	decfsz	wreg,f,c
 15938  011A46  D7F8               	goto	u10755
 15939  011A48  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 15940  011A4C  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15941  011A50  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15942  011A54  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15943                           
 15944                           ; BSR set to: 0
 15945                           ;inc\CANlib.h: 497: TXB2SIDL = TXB2SIDL & 0b00011111;
 15946  011A58  010F               	movlb	15	; () banked
 15947  011A5A  5122               	movf	34,w,b	;volatile
 15948  011A5C  0B1F               	andlw	31
 15949  011A5E  010F               	movlb	15	; () banked
 15950  011A60  6F22               	movwf	34,b	;volatile
 15951                           
 15952                           ; BSR set to: 15
 15953                           ;inc\CANlib.h: 498: TXB2SIDL = (unsigned char) tamp;
 15954  011A62  C07A  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 15955  011A66                     l8012:
 15956                           
 15957                           ;inc\CANlib.h: 499: }
 15958                           ;inc\CANlib.h: 501: if (0b00000001 & flags)
 15959  011A66  0100               	movlb	0	; () banked
 15960  011A68  A175               	btfss	CANsendMessage@flags& (0+255),0,b
 15961  011A6A  D003               	goto	l410
 15962                           
 15963                           ; BSR set to: 0
 15964                           ;inc\CANlib.h: 502: TXB2CONbits.TXPRI0 = 0x01;
 15965  011A6C  010F               	movlb	15	; () banked
 15966  011A6E  8120               	bsf	32,0,b	;volatile
 15967  011A70  D002               	goto	l411
 15968  011A72                     l410:
 15969                           
 15970                           ; BSR set to: 0
 15971                           ;inc\CANlib.h: 503: else
 15972                           ;inc\CANlib.h: 504: TXB2CONbits.TXPRI0 = 0x00;
 15973  011A72  010F               	movlb	15	; () banked
 15974  011A74  9120               	bcf	32,0,b	;volatile
 15975  011A76                     l411:
 15976                           
 15977                           ; BSR set to: 15
 15978                           ;inc\CANlib.h: 505: if (0b00000010 & flags)
 15979  011A76  0100               	movlb	0	; () banked
 15980  011A78  A375               	btfss	CANsendMessage@flags& (0+255),1,b
 15981  011A7A  D003               	goto	l412
 15982                           
 15983                           ; BSR set to: 0
 15984                           ;inc\CANlib.h: 506: TXB2CONbits.TXPRI1 = 0x01;
 15985  011A7C  010F               	movlb	15	; () banked
 15986  011A7E  8320               	bsf	32,1,b	;volatile
 15987  011A80  D002               	goto	l8018
 15988  011A82                     l412:
 15989                           
 15990                           ; BSR set to: 0
 15991                           ;inc\CANlib.h: 507: else
 15992                           ;inc\CANlib.h: 508: TXB2CONbits.TXPRI1 = 0x00;
 15993  011A82  010F               	movlb	15	; () banked
 15994  011A84  9320               	bcf	32,1,b	;volatile
 15995  011A86                     l8018:
 15996                           
 15997                           ; BSR set to: 15
 15998                           ;inc\CANlib.h: 510: TXB2D0 = data[0];
 15999  011A86  C072  FFD9         	movff	CANsendMessage@data,fsr2l
 16000  011A8A  C073  FFDA         	movff	CANsendMessage@data+1,fsr2h
 16001  011A8E  50DF               	movf	indf2,w,c
 16002  011A90  010F               	movlb	15	; () banked
 16003  011A92  6F26               	movwf	38,b	;volatile
 16004                           
 16005                           ; BSR set to: 15
 16006                           ;inc\CANlib.h: 511: TXB2D1 = data[1];
 16007  011A94  0100               	movlb	0	; () banked
 16008  011A96  EE20 F001          	lfsr	2,1
 16009  011A9A  5172               	movf	CANsendMessage@data& (0+255),w,b
 16010  011A9C  26D9               	addwf	fsr2l,f,c
 16011  011A9E  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16012  011AA0  22DA               	addwfc	fsr2h,f,c
 16013  011AA2  50DF               	movf	indf2,w,c
 16014  011AA4  010F               	movlb	15	; () banked
 16015  011AA6  6F27               	movwf	39,b	;volatile
 16016                           
 16017                           ; BSR set to: 15
 16018                           ;inc\CANlib.h: 512: TXB2D2 = data[2];
 16019  011AA8  0100               	movlb	0	; () banked
 16020  011AAA  EE20 F002          	lfsr	2,2
 16021  011AAE  5172               	movf	CANsendMessage@data& (0+255),w,b
 16022  011AB0  26D9               	addwf	fsr2l,f,c
 16023  011AB2  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16024  011AB4  22DA               	addwfc	fsr2h,f,c
 16025  011AB6  50DF               	movf	indf2,w,c
 16026  011AB8  010F               	movlb	15	; () banked
 16027  011ABA  6F28               	movwf	40,b	;volatile
 16028                           
 16029                           ; BSR set to: 15
 16030                           ;inc\CANlib.h: 513: TXB2D3 = data[3];
 16031  011ABC  0100               	movlb	0	; () banked
 16032  011ABE  EE20 F003          	lfsr	2,3
 16033  011AC2  5172               	movf	CANsendMessage@data& (0+255),w,b
 16034  011AC4  26D9               	addwf	fsr2l,f,c
 16035  011AC6  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16036  011AC8  22DA               	addwfc	fsr2h,f,c
 16037  011ACA  50DF               	movf	indf2,w,c
 16038  011ACC  010F               	movlb	15	; () banked
 16039  011ACE  6F29               	movwf	41,b	;volatile
 16040                           
 16041                           ; BSR set to: 15
 16042                           ;inc\CANlib.h: 514: TXB2D4 = data[4];
 16043  011AD0  0100               	movlb	0	; () banked
 16044  011AD2  EE20 F004          	lfsr	2,4
 16045  011AD6  5172               	movf	CANsendMessage@data& (0+255),w,b
 16046  011AD8  26D9               	addwf	fsr2l,f,c
 16047  011ADA  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16048  011ADC  22DA               	addwfc	fsr2h,f,c
 16049  011ADE  50DF               	movf	indf2,w,c
 16050  011AE0  010F               	movlb	15	; () banked
 16051  011AE2  6F2A               	movwf	42,b	;volatile
 16052                           
 16053                           ; BSR set to: 15
 16054                           ;inc\CANlib.h: 515: TXB2D5 = data[5];
 16055  011AE4  0100               	movlb	0	; () banked
 16056  011AE6  EE20 F005          	lfsr	2,5
 16057  011AEA  5172               	movf	CANsendMessage@data& (0+255),w,b
 16058  011AEC  26D9               	addwf	fsr2l,f,c
 16059  011AEE  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16060  011AF0  22DA               	addwfc	fsr2h,f,c
 16061  011AF2  50DF               	movf	indf2,w,c
 16062  011AF4  010F               	movlb	15	; () banked
 16063  011AF6  6F2B               	movwf	43,b	;volatile
 16064                           
 16065                           ; BSR set to: 15
 16066                           ;inc\CANlib.h: 516: TXB2D6 = data[6];
 16067  011AF8  0100               	movlb	0	; () banked
 16068  011AFA  EE20 F006          	lfsr	2,6
 16069  011AFE  5172               	movf	CANsendMessage@data& (0+255),w,b
 16070  011B00  26D9               	addwf	fsr2l,f,c
 16071  011B02  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16072  011B04  22DA               	addwfc	fsr2h,f,c
 16073  011B06  50DF               	movf	indf2,w,c
 16074  011B08  010F               	movlb	15	; () banked
 16075  011B0A  6F2C               	movwf	44,b	;volatile
 16076                           
 16077                           ; BSR set to: 15
 16078                           ;inc\CANlib.h: 517: TXB2D7 = data[7];
 16079  011B0C  0100               	movlb	0	; () banked
 16080  011B0E  EE20 F007          	lfsr	2,7
 16081  011B12  5172               	movf	CANsendMessage@data& (0+255),w,b
 16082  011B14  26D9               	addwf	fsr2l,f,c
 16083  011B16  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16084  011B18  22DA               	addwfc	fsr2h,f,c
 16085  011B1A  50DF               	movf	indf2,w,c
 16086  011B1C  010F               	movlb	15	; () banked
 16087  011B1E  6F2D               	movwf	45,b	;volatile
 16088                           
 16089                           ; BSR set to: 15
 16090                           ;inc\CANlib.h: 519: TXB2CONbits.TXREQ = 0x01;
 16091  011B20  010F               	movlb	15	; () banked
 16092  011B22  8720               	bsf	32,3,b	;volatile
 16093                           
 16094                           ; BSR set to: 15
 16095                           ;inc\CANlib.h: 521: return;
 16096  011B24  0012               	return	
 16097  011B26                     __end_of_CANsendMessage:
 16098                           	opt stack 0
 16099                           tblptru	equ	0xFF8
 16100                           tblptrh	equ	0xFF7
 16101                           tblptrl	equ	0xFF6
 16102                           tablat	equ	0xFF5
 16103                           prodh	equ	0xFF4
 16104                           prodl	equ	0xFF3
 16105                           intcon	equ	0xFF2
 16106                           postinc0	equ	0xFEE
 16107                           wreg	equ	0xFE8
 16108                           indf2	equ	0xFDF
 16109                           postinc2	equ	0xFDE
 16110                           fsr2h	equ	0xFDA
 16111                           fsr2l	equ	0xFD9
 16112                           status	equ	0xFD8
 16113                           
 16114 ;; *************** function _ISR_bassa *****************
 16115 ;; Defined at:
 16116 ;;		line 88 in file "RemoteCan.c"
 16117 ;; Parameters:    Size  Location     Type
 16118 ;;		None
 16119 ;; Auto vars:     Size  Location     Type
 16120 ;;		None
 16121 ;; Return value:  Size  Location     Type
 16122 ;;		None               void
 16123 ;; Registers used:
 16124 ;;		wreg, status,2, status,0
 16125 ;; Tracked objects:
 16126 ;;		On entry : 0/0
 16127 ;;		On exit  : 0/0
 16128 ;;		Unchanged: 0/0
 16129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16132 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16133 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16134 ;;Total ram usage:       17 bytes
 16135 ;; Hardware stack levels used:    1
 16136 ;; Hardware stack levels required when called:    2
 16137 ;; This function calls:
 16138 ;;		Nothing
 16139 ;; This function is called by:
 16140 ;;		Interrupt level 1
 16141 ;; This function uses a non-reentrant model
 16142 ;;
 16143                           
 16144                           	psect	intcodelo
 16145  000018                     __pintcodelo:
 16146                           	opt stack 0
 16147  000018                     _ISR_bassa:
 16148                           	opt stack 21
 16149                           
 16150                           ; BSR set to: 15
 16151                           ;incstack = 0
 16152  000018  8048               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 16153  00001A  CFD8 F029          	movff	status,??_ISR_bassa
 16154  00001E  CFE8 F02A          	movff	wreg,??_ISR_bassa+1
 16155  000022  CFE0 F02B          	movff	bsr,??_ISR_bassa+2
 16156  000026  CFFA F02C          	movff	pclath,??_ISR_bassa+3
 16157  00002A  CFFB F02D          	movff	pclatu,??_ISR_bassa+4
 16158  00002E  CFE9 F02E          	movff	fsr0l,??_ISR_bassa+5
 16159  000032  CFEA F02F          	movff	fsr0h,??_ISR_bassa+6
 16160  000036  CFE1 F030          	movff	fsr1l,??_ISR_bassa+7
 16161  00003A  CFE2 F031          	movff	fsr1h,??_ISR_bassa+8
 16162  00003E  CFD9 F032          	movff	fsr2l,??_ISR_bassa+9
 16163  000042  CFDA F033          	movff	fsr2h,??_ISR_bassa+10
 16164  000046  CFF3 F034          	movff	prodl,??_ISR_bassa+11
 16165  00004A  CFF4 F035          	movff	prodh,??_ISR_bassa+12
 16166  00004E  CFF6 F036          	movff	tblptrl,??_ISR_bassa+13
 16167  000052  CFF7 F037          	movff	tblptrh,??_ISR_bassa+14
 16168  000056  CFF8 F038          	movff	tblptru,??_ISR_bassa+15
 16169  00005A  CFF5 F039          	movff	tablat,??_ISR_bassa+16
 16170                           
 16171                           ;RemoteCan.c: 89: if (PIR2bits.TMR3IF == 1) {
 16172  00005E  A2A1               	btfss	4001,1,c	;volatile
 16173  000060  D00C               	goto	i1l735
 16174                           
 16175                           ;RemoteCan.c: 90: time_counter++;
 16176  000062  0E01               	movlw	1
 16177  000064  0100               	movlb	0	; () banked
 16178  000066  27E0               	addwf	_time_counter& (0+255),f,b	;volatile
 16179  000068  0E00               	movlw	0
 16180  00006A  23E1               	addwfc	(_time_counter+1)& (0+255),f,b	;volatile
 16181  00006C  23E2               	addwfc	(_time_counter+2)& (0+255),f,b	;volatile
 16182  00006E  23E3               	addwfc	(_time_counter+3)& (0+255),f,b	;volatile
 16183                           
 16184                           ; BSR set to: 0
 16185                           ;RemoteCan.c: 91: TMR3H = 0x63;
 16186  000070  0E63               	movlw	99
 16187  000072  6EB3               	movwf	4019,c	;volatile
 16188                           
 16189                           ; BSR set to: 0
 16190                           ;RemoteCan.c: 92: TMR3L = 0xC0;
 16191  000074  0EC0               	movlw	192
 16192  000076  6EB2               	movwf	4018,c	;volatile
 16193                           
 16194                           ; BSR set to: 0
 16195                           ;RemoteCan.c: 93: PIR2bits.TMR3IF = 0;
 16196  000078  92A1               	bcf	4001,1,c	;volatile
 16197  00007A                     i1l735:
 16198  00007A  C039  FFF5         	movff	??_ISR_bassa+16,tablat
 16199  00007E  C038  FFF8         	movff	??_ISR_bassa+15,tblptru
 16200  000082  C037  FFF7         	movff	??_ISR_bassa+14,tblptrh
 16201  000086  C036  FFF6         	movff	??_ISR_bassa+13,tblptrl
 16202  00008A  C035  FFF4         	movff	??_ISR_bassa+12,prodh
 16203  00008E  C034  FFF3         	movff	??_ISR_bassa+11,prodl
 16204  000092  C033  FFDA         	movff	??_ISR_bassa+10,fsr2h
 16205  000096  C032  FFD9         	movff	??_ISR_bassa+9,fsr2l
 16206  00009A  C031  FFE2         	movff	??_ISR_bassa+8,fsr1h
 16207  00009E  C030  FFE1         	movff	??_ISR_bassa+7,fsr1l
 16208  0000A2  C02F  FFEA         	movff	??_ISR_bassa+6,fsr0h
 16209  0000A6  C02E  FFE9         	movff	??_ISR_bassa+5,fsr0l
 16210  0000AA  C02D  FFFB         	movff	??_ISR_bassa+4,pclatu
 16211  0000AE  C02C  FFFA         	movff	??_ISR_bassa+3,pclath
 16212  0000B2  C02B  FFE0         	movff	??_ISR_bassa+2,bsr
 16213  0000B6  C02A  FFE8         	movff	??_ISR_bassa+1,wreg
 16214  0000BA  C029  FFD8         	movff	??_ISR_bassa,status
 16215  0000BE  9048               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 16216  0000C0  0010               	retfie	
 16217  0000C2                     __end_of_ISR_bassa:
 16218                           	opt stack 0
 16219                           pclatu	equ	0xFFB
 16220                           pclath	equ	0xFFA
 16221                           tblptru	equ	0xFF8
 16222                           tblptrh	equ	0xFF7
 16223                           tblptrl	equ	0xFF6
 16224                           tablat	equ	0xFF5
 16225                           prodh	equ	0xFF4
 16226                           prodl	equ	0xFF3
 16227                           intcon	equ	0xFF2
 16228                           postinc0	equ	0xFEE
 16229                           fsr0h	equ	0xFEA
 16230                           fsr0l	equ	0xFE9
 16231                           wreg	equ	0xFE8
 16232                           fsr1h	equ	0xFE2
 16233                           fsr1l	equ	0xFE1
 16234                           bsr	equ	0xFE0
 16235                           indf2	equ	0xFDF
 16236                           postinc2	equ	0xFDE
 16237                           fsr2h	equ	0xFDA
 16238                           fsr2l	equ	0xFD9
 16239                           status	equ	0xFD8
 16240                           
 16241 ;; *************** function _ISR_alta *****************
 16242 ;; Defined at:
 16243 ;;		line 72 in file "RemoteCan.c"
 16244 ;; Parameters:    Size  Location     Type
 16245 ;;		None
 16246 ;; Auto vars:     Size  Location     Type
 16247 ;;  i               1   29[COMRAM] unsigned char 
 16248 ;; Return value:  Size  Location     Type
 16249 ;;		None               void
 16250 ;; Registers used:
 16251 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16252 ;; Tracked objects:
 16253 ;;		On entry : 0/0
 16254 ;;		On exit  : 0/0
 16255 ;;		Unchanged: 0/0
 16256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16258 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16259 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16260 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16261 ;;Total ram usage:       15 bytes
 16262 ;; Hardware stack levels used:    1
 16263 ;; Hardware stack levels required when called:    1
 16264 ;; This function calls:
 16265 ;;		_CANisRxReady
 16266 ;;		_CANreceiveMessage
 16267 ;; This function is called by:
 16268 ;;		Interrupt level 2
 16269 ;; This function uses a non-reentrant model
 16270 ;;
 16271                           
 16272                           	psect	intcode
 16273  000008                     __pintcode:
 16274                           	opt stack 0
 16275  000008                     _ISR_alta:
 16276                           	opt stack 21
 16277                           
 16278                           ;incstack = 0
 16279  000008  8248               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 16280  00000A  CFFA F060          	movff	pclath,??_ISR_alta
 16281  00000E  CFFB F061          	movff	pclatu,??_ISR_alta+1
 16282  000012  EFC9  F0A5         	goto	int_func
 16283                           pclatu	equ	0xFFB
 16284                           pclath	equ	0xFFA
 16285                           tblptru	equ	0xFF8
 16286                           tblptrh	equ	0xFF7
 16287                           tblptrl	equ	0xFF6
 16288                           tablat	equ	0xFF5
 16289                           prodh	equ	0xFF4
 16290                           prodl	equ	0xFF3
 16291                           intcon	equ	0xFF2
 16292                           postinc0	equ	0xFEE
 16293                           fsr0h	equ	0xFEA
 16294                           fsr0l	equ	0xFE9
 16295                           wreg	equ	0xFE8
 16296                           fsr1h	equ	0xFE2
 16297                           fsr1l	equ	0xFE1
 16298                           bsr	equ	0xFE0
 16299                           indf2	equ	0xFDF
 16300                           postinc2	equ	0xFDE
 16301                           fsr2h	equ	0xFDA
 16302                           fsr2l	equ	0xFD9
 16303                           status	equ	0xFD8
 16304                           
 16305                           	psect	intcode_body
 16306  014B92                     __pintcode_body:
 16307                           	opt stack 21
 16308  014B92                     int_func:
 16309                           	opt stack 21
 16310  014B92  CFE9 F062          	movff	fsr0l,??_ISR_alta+2
 16311  014B96  CFEA F063          	movff	fsr0h,??_ISR_alta+3
 16312  014B9A  CFE1 F064          	movff	fsr1l,??_ISR_alta+4
 16313  014B9E  CFE2 F065          	movff	fsr1h,??_ISR_alta+5
 16314  014BA2  CFD9 F066          	movff	fsr2l,??_ISR_alta+6
 16315  014BA6  CFDA F067          	movff	fsr2h,??_ISR_alta+7
 16316  014BAA  CFF3 F068          	movff	prodl,??_ISR_alta+8
 16317  014BAE  CFF4 F069          	movff	prodh,??_ISR_alta+9
 16318  014BB2  CFF6 F06A          	movff	tblptrl,??_ISR_alta+10
 16319  014BB6  CFF7 F06B          	movff	tblptrh,??_ISR_alta+11
 16320  014BBA  CFF8 F06C          	movff	tblptru,??_ISR_alta+12
 16321  014BBE  CFF5 F06D          	movff	tablat,??_ISR_alta+13
 16322                           
 16323                           ;RemoteCan.c: 73: if ((PIR3bits.RXB1IF == 1) || (PIR3bits.RXB0IF == 1)) {
 16324  014BC2  A2A4               	btfss	4004,1,c	;volatile
 16325  014BC4  B0A4               	btfsc	4004,0,c	;volatile
 16326  014BC6  D001               	goto	i2l8724
 16327  014BC8  D035               	goto	i2l731
 16328  014BCA                     i2l8724:
 16329                           
 16330                           ;RemoteCan.c: 74: if (CANisRxReady()) {
 16331  014BCA  ECBE  F0A9         	call	_CANisRxReady	;wreg free
 16332  014BCE  0900               	iorlw	0
 16333  014BD0  B4D8               	btfsc	status,2,c
 16334  014BD2  D02E               	goto	i2l728
 16335                           
 16336                           ;RemoteCan.c: 75: CANreceiveMessage(&msg);
 16337  014BD4  0E19               	movlw	low _msg
 16338  014BD6  6E3A               	movwf	CANreceiveMessage@msg,c
 16339  014BD8  0E00               	movlw	high _msg
 16340  014BDA  6E3B               	movwf	CANreceiveMessage@msg+1,c
 16341  014BDC  EC20  F090         	call	_CANreceiveMessage	;wreg free
 16342                           
 16343                           ;RemoteCan.c: 76: RTR_Flag = msg.RTR;
 16344  014BE0  A027               	btfss	_msg+14,0,c
 16345  014BE2  D002               	goto	i2u1171_40
 16346  014BE4  8447               	bsf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 16347  014BE6  D001               	goto	i2l8730
 16348  014BE8                     i2u1171_40:
 16349  014BE8  9447               	bcf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 16350  014BEA                     i2l8730:
 16351                           
 16352                           ;RemoteCan.c: 77: id = msg.identifier;
 16353  014BEA  C019  F00B         	movff	_msg,_id	;volatile
 16354  014BEE  C01A  F00C         	movff	_msg+1,_id+1	;volatile
 16355  014BF2  C01B  F00D         	movff	_msg+2,_id+2	;volatile
 16356  014BF6  C01C  F00E         	movff	_msg+3,_id+3	;volatile
 16357                           
 16358                           ;RemoteCan.c: 78: newMessageCan = 1;
 16359  014BFA  8847               	bsf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
 16360                           
 16361                           ;RemoteCan.c: 79: for (unsigned char i = 0; i < 8; i++) {
 16362  014BFC  0E00               	movlw	0
 16363  014BFE  6E46               	movwf	ISR_alta@i,c
 16364  014C00                     i2l8736:
 16365  014C00  0E07               	movlw	7
 16366  014C02  6446               	cpfsgt	ISR_alta@i,c
 16367  014C04  D001               	goto	i2l8740
 16368  014C06  D014               	goto	i2l728
 16369  014C08                     i2l8740:
 16370                           
 16371                           ;RemoteCan.c: 80: data[i] = msg.data[i];
 16372  014C08  5046               	movf	ISR_alta@i,w,c
 16373  014C0A  0D01               	mullw	1
 16374  014C0C  0E1D               	movlw	low (_msg+4)
 16375  014C0E  24F3               	addwf	prodl,w,c
 16376  014C10  6ED9               	movwf	fsr2l,c
 16377  014C12  0E00               	movlw	high (_msg+4)
 16378  014C14  20F4               	addwfc	prodh,w,c
 16379  014C16  6EDA               	movwf	fsr2h,c
 16380  014C18  5046               	movf	ISR_alta@i,w,c
 16381  014C1A  0D01               	mullw	1
 16382  014C1C  0E28               	movlw	low _data
 16383  014C1E  24F3               	addwf	prodl,w,c
 16384  014C20  6EE1               	movwf	fsr1l,c
 16385  014C22  0E00               	movlw	high _data
 16386  014C24  20F4               	addwfc	prodh,w,c
 16387  014C26  6EE2               	movwf	fsr1h,c
 16388  014C28  CFDF FFE7          	movff	indf2,indf1
 16389  014C2C  2A46               	incf	ISR_alta@i,f,c
 16390  014C2E  D7E8               	goto	i2l8736
 16391  014C30                     i2l728:
 16392                           
 16393                           ;RemoteCan.c: 81: }
 16394                           ;RemoteCan.c: 82: }
 16395                           ;RemoteCan.c: 83: PIR3bits.RXB1IF = 0;
 16396  014C30  92A4               	bcf	4004,1,c	;volatile
 16397                           
 16398                           ;RemoteCan.c: 84: PIR3bits.RXB0IF = 0;
 16399  014C32  90A4               	bcf	4004,0,c	;volatile
 16400  014C34                     i2l731:
 16401  014C34  C06D  FFF5         	movff	??_ISR_alta+13,tablat
 16402  014C38  C06C  FFF8         	movff	??_ISR_alta+12,tblptru
 16403  014C3C  C06B  FFF7         	movff	??_ISR_alta+11,tblptrh
 16404  014C40  C06A  FFF6         	movff	??_ISR_alta+10,tblptrl
 16405  014C44  C069  FFF4         	movff	??_ISR_alta+9,prodh
 16406  014C48  C068  FFF3         	movff	??_ISR_alta+8,prodl
 16407  014C4C  C067  FFDA         	movff	??_ISR_alta+7,fsr2h
 16408  014C50  C066  FFD9         	movff	??_ISR_alta+6,fsr2l
 16409  014C54  C065  FFE2         	movff	??_ISR_alta+5,fsr1h
 16410  014C58  C064  FFE1         	movff	??_ISR_alta+4,fsr1l
 16411  014C5C  C063  FFEA         	movff	??_ISR_alta+3,fsr0h
 16412  014C60  C062  FFE9         	movff	??_ISR_alta+2,fsr0l
 16413  014C64  C061  FFFB         	movff	??_ISR_alta+1,pclatu
 16414  014C68  C060  FFFA         	movff	??_ISR_alta,pclath
 16415  014C6C  9248               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 16416  014C6E  0011               	retfie		f
 16417  014C70                     __end_of_ISR_alta:
 16418                           	opt stack 0
 16419                           pclatu	equ	0xFFB
 16420                           pclath	equ	0xFFA
 16421                           tblptru	equ	0xFF8
 16422                           tblptrh	equ	0xFF7
 16423                           tblptrl	equ	0xFF6
 16424                           tablat	equ	0xFF5
 16425                           prodh	equ	0xFF4
 16426                           prodl	equ	0xFF3
 16427                           intcon	equ	0xFF2
 16428                           postinc0	equ	0xFEE
 16429                           fsr0h	equ	0xFEA
 16430                           fsr0l	equ	0xFE9
 16431                           wreg	equ	0xFE8
 16432                           indf1	equ	0xFE7
 16433                           fsr1h	equ	0xFE2
 16434                           fsr1l	equ	0xFE1
 16435                           bsr	equ	0xFE0
 16436                           indf2	equ	0xFDF
 16437                           postinc2	equ	0xFDE
 16438                           fsr2h	equ	0xFDA
 16439                           fsr2l	equ	0xFD9
 16440                           status	equ	0xFD8
 16441                           
 16442 ;; *************** function _CANreceiveMessage *****************
 16443 ;; Defined at:
 16444 ;;		line 529 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 16445 ;; Parameters:    Size  Location     Type
 16446 ;;  msg             2   17[COMRAM] PTR struct .
 16447 ;;		 -> msg(15), 
 16448 ;; Auto vars:     Size  Location     Type
 16449 ;;  tamp            1   28[COMRAM] unsigned char 
 16450 ;;  error           1   27[COMRAM] unsigned char 
 16451 ;; Return value:  Size  Location     Type
 16452 ;;                  1    wreg      unsigned char 
 16453 ;; Registers used:
 16454 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16455 ;; Tracked objects:
 16456 ;;		On entry : 0/0
 16457 ;;		On exit  : 0/0
 16458 ;;		Unchanged: 0/0
 16459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16460 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16461 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16462 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16463 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16464 ;;Total ram usage:       12 bytes
 16465 ;; Hardware stack levels used:    1
 16466 ;; This function calls:
 16467 ;;		Nothing
 16468 ;; This function is called by:
 16469 ;;		_ISR_alta
 16470 ;; This function uses a non-reentrant model
 16471 ;;
 16472                           
 16473                           	psect	text46
 16474  012040                     __ptext46:
 16475                           	opt stack 0
 16476  012040                     _CANreceiveMessage:
 16477                           	opt stack 21
 16478                           
 16479                           ;inc\CANlib.h: 531: BYTE tamp;
 16480                           ;inc\CANlib.h: 532: BYTE error = 0;
 16481                           
 16482                           ;incstack = 0
 16483  012040  0E00               	movlw	0
 16484  012042  6E44               	movwf	CANreceiveMessage@error,c
 16485                           
 16486                           ;inc\CANlib.h: 534: if (COMSTATbits.RXB0OVFL == 0x01)
 16487  012044  BE74               	btfsc	3956,7,c	;volatile
 16488                           
 16489                           ;inc\CANlib.h: 535: error |= CAN_RX_BUFFER_1_OVFL;
 16490  012046  8044               	bsf	CANreceiveMessage@error,0,c
 16491                           
 16492                           ;inc\CANlib.h: 537: if (COMSTATbits.RXB1OVFL == 0x01)
 16493  012048  BC74               	btfsc	3956,6,c	;volatile
 16494                           
 16495                           ;inc\CANlib.h: 538: error |= CAN_RX_BUFFER_2_OVFL;
 16496  01204A  8244               	bsf	CANreceiveMessage@error,1,c
 16497                           
 16498                           ;inc\CANlib.h: 541: if (RXB1CONbits.RXFUL ==0x01)
 16499  01204C  010F               	movlb	15	; () banked
 16500  01204E  AF50               	btfss	80,7,b	;volatile
 16501  012050  D143               	goto	i2l418
 16502                           
 16503                           ; BSR set to: 15
 16504                           ;inc\CANlib.h: 542: {
 16505                           ;inc\CANlib.h: 543: msg->identifier = 0;
 16506  012052  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16507  012056  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16508  01205A  6ADE               	clrf	postinc2,c
 16509  01205C  6ADE               	clrf	postinc2,c
 16510  01205E  6ADE               	clrf	postinc2,c
 16511  012060  6ADD               	clrf	postdec2,c
 16512                           
 16513                           ; BSR set to: 15
 16514                           ;inc\CANlib.h: 544: msg->data[0] =RXB1D0;
 16515  012062  EE20 F004          	lfsr	2,4
 16516  012066  503A               	movf	CANreceiveMessage@msg,w,c
 16517  012068  26D9               	addwf	fsr2l,f,c
 16518  01206A  503B               	movf	CANreceiveMessage@msg+1,w,c
 16519  01206C  22DA               	addwfc	fsr2h,f,c
 16520  01206E  CF56 FFDF          	movff	3926,indf2	;volatile
 16521                           
 16522                           ; BSR set to: 15
 16523                           ;inc\CANlib.h: 545: msg->data[1] =RXB1D1;
 16524  012072  EE20 F005          	lfsr	2,5
 16525  012076  503A               	movf	CANreceiveMessage@msg,w,c
 16526  012078  26D9               	addwf	fsr2l,f,c
 16527  01207A  503B               	movf	CANreceiveMessage@msg+1,w,c
 16528  01207C  22DA               	addwfc	fsr2h,f,c
 16529  01207E  CF57 FFDF          	movff	3927,indf2	;volatile
 16530                           
 16531                           ; BSR set to: 15
 16532                           ;inc\CANlib.h: 546: msg->data[2] =RXB1D2;
 16533  012082  EE20 F006          	lfsr	2,6
 16534  012086  503A               	movf	CANreceiveMessage@msg,w,c
 16535  012088  26D9               	addwf	fsr2l,f,c
 16536  01208A  503B               	movf	CANreceiveMessage@msg+1,w,c
 16537  01208C  22DA               	addwfc	fsr2h,f,c
 16538  01208E  CF58 FFDF          	movff	3928,indf2	;volatile
 16539                           
 16540                           ; BSR set to: 15
 16541                           ;inc\CANlib.h: 547: msg->data[3] =RXB1D3;
 16542  012092  EE20 F007          	lfsr	2,7
 16543  012096  503A               	movf	CANreceiveMessage@msg,w,c
 16544  012098  26D9               	addwf	fsr2l,f,c
 16545  01209A  503B               	movf	CANreceiveMessage@msg+1,w,c
 16546  01209C  22DA               	addwfc	fsr2h,f,c
 16547  01209E  CF59 FFDF          	movff	3929,indf2	;volatile
 16548                           
 16549                           ; BSR set to: 15
 16550                           ;inc\CANlib.h: 548: msg->data[4] =RXB1D4;
 16551  0120A2  EE20 F008          	lfsr	2,8
 16552  0120A6  503A               	movf	CANreceiveMessage@msg,w,c
 16553  0120A8  26D9               	addwf	fsr2l,f,c
 16554  0120AA  503B               	movf	CANreceiveMessage@msg+1,w,c
 16555  0120AC  22DA               	addwfc	fsr2h,f,c
 16556  0120AE  CF5A FFDF          	movff	3930,indf2	;volatile
 16557                           
 16558                           ; BSR set to: 15
 16559                           ;inc\CANlib.h: 549: msg->data[5] =RXB1D5;
 16560  0120B2  EE20 F009          	lfsr	2,9
 16561  0120B6  503A               	movf	CANreceiveMessage@msg,w,c
 16562  0120B8  26D9               	addwf	fsr2l,f,c
 16563  0120BA  503B               	movf	CANreceiveMessage@msg+1,w,c
 16564  0120BC  22DA               	addwfc	fsr2h,f,c
 16565  0120BE  CF5B FFDF          	movff	3931,indf2	;volatile
 16566                           
 16567                           ; BSR set to: 15
 16568                           ;inc\CANlib.h: 550: msg->data[6] =RXB1D6;
 16569  0120C2  EE20 F00A          	lfsr	2,10
 16570  0120C6  503A               	movf	CANreceiveMessage@msg,w,c
 16571  0120C8  26D9               	addwf	fsr2l,f,c
 16572  0120CA  503B               	movf	CANreceiveMessage@msg+1,w,c
 16573  0120CC  22DA               	addwfc	fsr2h,f,c
 16574  0120CE  CF5C FFDF          	movff	3932,indf2	;volatile
 16575                           
 16576                           ; BSR set to: 15
 16577                           ;inc\CANlib.h: 551: msg->data[7] =RXB1D7;
 16578  0120D2  EE20 F00B          	lfsr	2,11
 16579  0120D6  503A               	movf	CANreceiveMessage@msg,w,c
 16580  0120D8  26D9               	addwf	fsr2l,f,c
 16581  0120DA  503B               	movf	CANreceiveMessage@msg+1,w,c
 16582  0120DC  22DA               	addwfc	fsr2h,f,c
 16583  0120DE  CF5D FFDF          	movff	3933,indf2	;volatile
 16584                           
 16585                           ; BSR set to: 15
 16586                           ;inc\CANlib.h: 553: msg->RTR = RXB1DLCbits.RXRTR;
 16587  0120E2  EE20 F00E          	lfsr	2,14
 16588  0120E6  503A               	movf	CANreceiveMessage@msg,w,c
 16589  0120E8  26D9               	addwf	fsr2l,f,c
 16590  0120EA  503B               	movf	CANreceiveMessage@msg+1,w,c
 16591  0120EC  22DA               	addwfc	fsr2h,f,c
 16592  0120EE  010F               	movlb	15	; () banked
 16593  0120F0  AD55               	btfss	85,6,b	;volatile
 16594  0120F2  D002               	goto	i2u738_40
 16595  0120F4  0E01               	movlw	1
 16596  0120F6  D001               	goto	i2u738_46
 16597  0120F8                     i2u738_40:
 16598  0120F8  0E00               	movlw	0
 16599  0120FA                     i2u738_46:
 16600  0120FA  6EDF               	movwf	indf2,c
 16601                           
 16602                           ; BSR set to: 15
 16603                           ;inc\CANlib.h: 555: msg->length = RXB1DLC & 0x0F;
 16604  0120FC  EE20 F00D          	lfsr	2,13
 16605  012100  503A               	movf	CANreceiveMessage@msg,w,c
 16606  012102  26D9               	addwf	fsr2l,f,c
 16607  012104  503B               	movf	CANreceiveMessage@msg+1,w,c
 16608  012106  22DA               	addwfc	fsr2h,f,c
 16609  012108  010F               	movlb	15	; () banked
 16610  01210A  5155               	movf	85,w,b	;volatile
 16611  01210C  0B0F               	andlw	15
 16612  01210E  6EDF               	movwf	indf2,c
 16613                           
 16614                           ; BSR set to: 15
 16615                           ;inc\CANlib.h: 557: msg->type = RXB1SIDLbits.EXID;
 16616  012110  EE20 F00C          	lfsr	2,12
 16617  012114  503A               	movf	CANreceiveMessage@msg,w,c
 16618  012116  26D9               	addwf	fsr2l,f,c
 16619  012118  503B               	movf	CANreceiveMessage@msg+1,w,c
 16620  01211A  22DA               	addwfc	fsr2h,f,c
 16621  01211C  010F               	movlb	15	; () banked
 16622  01211E  A752               	btfss	82,3,b	;volatile
 16623  012120  D002               	goto	i2u739_40
 16624  012122  0E01               	movlw	1
 16625  012124  D001               	goto	i2u739_46
 16626  012126                     i2u739_40:
 16627  012126  0E00               	movlw	0
 16628  012128                     i2u739_46:
 16629  012128  6EDF               	movwf	indf2,c
 16630                           
 16631                           ; BSR set to: 15
 16632                           ;inc\CANlib.h: 559: if (RXB1SIDLbits.EXID == 0)
 16633  01212A  010F               	movlb	15	; () banked
 16634  01212C  B752               	btfsc	82,3,b	;volatile
 16635  01212E  D044               	goto	i2l6042
 16636                           
 16637                           ; BSR set to: 15
 16638                           ;inc\CANlib.h: 560: {
 16639                           ;inc\CANlib.h: 561: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 16640  012130  CF51 F03C          	movff	3921,??_CANreceiveMessage	;volatile
 16641  012134  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16642  012136  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 16643  012138  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 16644  01213A  0E03               	movlw	3
 16645  01213C                     i2u741_45:
 16646  01213C  90D8               	bcf	status,0,c
 16647  01213E  363C               	rlcf	??_CANreceiveMessage,f,c
 16648  012140  363D               	rlcf	??_CANreceiveMessage+1,f,c
 16649  012142  363E               	rlcf	??_CANreceiveMessage+2,f,c
 16650  012144  363F               	rlcf	??_CANreceiveMessage+3,f,c
 16651  012146  2EE8               	decfsz	wreg,f,c
 16652  012148  D7F9               	goto	i2u741_45
 16653  01214A  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16654  01214E  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16655  012152  C03C  FFDE         	movff	??_CANreceiveMessage,postinc2
 16656  012156  C03D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 16657  01215A  C03E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 16658  01215E  C03F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 16659                           
 16660                           ; BSR set to: 15
 16661                           ;inc\CANlib.h: 562: tamp = (RXB1SIDL >> 5 ) & 0x07;
 16662  012162  010F               	movlb	15	; () banked
 16663  012164  3952               	swapf	82,w,b	;volatile
 16664  012166  42E8               	rrncf	wreg,f,c
 16665  012168  0B07               	andlw	7
 16666  01216A  0B07               	andlw	7
 16667  01216C  6E45               	movwf	CANreceiveMessage@tamp,c
 16668                           
 16669                           ; BSR set to: 15
 16670                           ;inc\CANlib.h: 563: msg->identifier = msg->identifier + tamp;
 16671  01216E  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16672  012172  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16673  012176  CFDE F03C          	movff	postinc2,??_CANreceiveMessage
 16674  01217A  CFDE F03D          	movff	postinc2,??_CANreceiveMessage+1
 16675  01217E  CFDE F03E          	movff	postinc2,??_CANreceiveMessage+2
 16676  012182  CFDE F03F          	movff	postinc2,??_CANreceiveMessage+3
 16677  012186  5045               	movf	CANreceiveMessage@tamp,w,c
 16678  012188  243C               	addwf	??_CANreceiveMessage,w,c
 16679  01218A  6E40               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 16680  01218C  0E00               	movlw	0
 16681  01218E  203D               	addwfc	??_CANreceiveMessage+1,w,c
 16682  012190  6E41               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 16683  012192  0E00               	movlw	0
 16684  012194  203E               	addwfc	??_CANreceiveMessage+2,w,c
 16685  012196  6E42               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 16686  012198  0E00               	movlw	0
 16687  01219A  203F               	addwfc	??_CANreceiveMessage+3,w,c
 16688  01219C  6E43               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 16689  01219E  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16690  0121A2  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16691  0121A6  C040  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 16692  0121AA  C041  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 16693  0121AE  C042  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 16694  0121B2  C043  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 16695                           
 16696                           ;inc\CANlib.h: 564: }
 16697  0121B6  D08D               	goto	i2l6068
 16698  0121B8                     i2l6042:
 16699                           
 16700                           ; BSR set to: 15
 16701                           ;inc\CANlib.h: 565: else
 16702                           ;inc\CANlib.h: 566: {
 16703                           ;inc\CANlib.h: 567: msg->identifier = (unsigned long) RXB1EIDL;
 16704  0121B8  CF54 F03C          	movff	3924,??_CANreceiveMessage	;volatile
 16705  0121BC  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16706  0121BE  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 16707  0121C0  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 16708  0121C2  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16709  0121C6  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16710  0121CA  C03C  FFDE         	movff	??_CANreceiveMessage,postinc2
 16711  0121CE  C03D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 16712  0121D2  C03E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 16713  0121D6  C03F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 16714                           
 16715                           ; BSR set to: 15
 16716                           ;inc\CANlib.h: 568: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 16717  0121DA  CF53 F03C          	movff	3923,??_CANreceiveMessage	;volatile
 16718  0121DE  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16719  0121E0  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 16720  0121E2  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 16721  0121E4  C03E  F03F         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 16722  0121E8  C03D  F03E         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 16723  0121EC  C03C  F03D         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 16724  0121F0  6A3C               	clrf	??_CANreceiveMessage,c
 16725  0121F2  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16726  0121F6  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16727  0121FA  503C               	movf	??_CANreceiveMessage,w,c
 16728  0121FC  26DE               	addwf	postinc2,f,c
 16729  0121FE  503D               	movf	??_CANreceiveMessage+1,w,c
 16730  012200  22DE               	addwfc	postinc2,f,c
 16731  012202  503E               	movf	??_CANreceiveMessage+2,w,c
 16732  012204  22DE               	addwfc	postinc2,f,c
 16733  012206  503F               	movf	??_CANreceiveMessage+3,w,c
 16734  012208  22DE               	addwfc	postinc2,f,c
 16735                           
 16736                           ; BSR set to: 15
 16737                           ;inc\CANlib.h: 570: if (RXB1SIDLbits.EID16)
 16738  01220A  010F               	movlb	15	; () banked
 16739  01220C  A152               	btfss	82,0,b	;volatile
 16740  01220E  D00C               	goto	i2l6050
 16741                           
 16742                           ; BSR set to: 15
 16743                           ;inc\CANlib.h: 571: msg->identifier |= 0x00010000;
 16744  012210  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16745  012214  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16746  012218  0E00               	movlw	0
 16747  01221A  12DE               	iorwf	postinc2,f,c
 16748  01221C  0E00               	movlw	0
 16749  01221E  12DE               	iorwf	postinc2,f,c
 16750  012220  0E01               	movlw	1
 16751  012222  12DE               	iorwf	postinc2,f,c
 16752  012224  0E00               	movlw	0
 16753  012226  12DE               	iorwf	postinc2,f,c
 16754  012228                     i2l6050:
 16755                           
 16756                           ; BSR set to: 15
 16757                           ;inc\CANlib.h: 572: if (RXB1SIDLbits.EID17)
 16758  012228  010F               	movlb	15	; () banked
 16759  01222A  A352               	btfss	82,1,b	;volatile
 16760  01222C  D00C               	goto	i2l6054
 16761                           
 16762                           ; BSR set to: 15
 16763                           ;inc\CANlib.h: 573: msg->identifier |= 0x00020000;
 16764  01222E  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16765  012232  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16766  012236  0E00               	movlw	0
 16767  012238  12DE               	iorwf	postinc2,f,c
 16768  01223A  0E00               	movlw	0
 16769  01223C  12DE               	iorwf	postinc2,f,c
 16770  01223E  0E02               	movlw	2
 16771  012240  12DE               	iorwf	postinc2,f,c
 16772  012242  0E00               	movlw	0
 16773  012244  12DE               	iorwf	postinc2,f,c
 16774  012246                     i2l6054:
 16775                           
 16776                           ; BSR set to: 15
 16777                           ;inc\CANlib.h: 574: if (RXB1SIDLbits.SID0)
 16778  012246  010F               	movlb	15	; () banked
 16779  012248  AB52               	btfss	82,5,b	;volatile
 16780  01224A  D00C               	goto	i2l6058
 16781                           
 16782                           ; BSR set to: 15
 16783                           ;inc\CANlib.h: 575: msg->identifier |= 0x00040000;
 16784  01224C  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16785  012250  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16786  012254  0E00               	movlw	0
 16787  012256  12DE               	iorwf	postinc2,f,c
 16788  012258  0E00               	movlw	0
 16789  01225A  12DE               	iorwf	postinc2,f,c
 16790  01225C  0E04               	movlw	4
 16791  01225E  12DE               	iorwf	postinc2,f,c
 16792  012260  0E00               	movlw	0
 16793  012262  12DE               	iorwf	postinc2,f,c
 16794  012264                     i2l6058:
 16795                           
 16796                           ; BSR set to: 15
 16797                           ;inc\CANlib.h: 576: if (RXB1SIDLbits.SID1)
 16798  012264  010F               	movlb	15	; () banked
 16799  012266  AD52               	btfss	82,6,b	;volatile
 16800  012268  D00C               	goto	i2l6062
 16801                           
 16802                           ; BSR set to: 15
 16803                           ;inc\CANlib.h: 577: msg->identifier |= 0x00080000;
 16804  01226A  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16805  01226E  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16806  012272  0E00               	movlw	0
 16807  012274  12DE               	iorwf	postinc2,f,c
 16808  012276  0E00               	movlw	0
 16809  012278  12DE               	iorwf	postinc2,f,c
 16810  01227A  0E08               	movlw	8
 16811  01227C  12DE               	iorwf	postinc2,f,c
 16812  01227E  0E00               	movlw	0
 16813  012280  12DE               	iorwf	postinc2,f,c
 16814  012282                     i2l6062:
 16815                           
 16816                           ; BSR set to: 15
 16817                           ;inc\CANlib.h: 578: if (RXB1SIDLbits.SID2)
 16818  012282  010F               	movlb	15	; () banked
 16819  012284  AF52               	btfss	82,7,b	;volatile
 16820  012286  D00C               	goto	i2l6066
 16821                           
 16822                           ; BSR set to: 15
 16823                           ;inc\CANlib.h: 579: msg->identifier |= 0x00100000;
 16824  012288  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16825  01228C  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16826  012290  0E00               	movlw	0
 16827  012292  12DE               	iorwf	postinc2,f,c
 16828  012294  0E00               	movlw	0
 16829  012296  12DE               	iorwf	postinc2,f,c
 16830  012298  0E10               	movlw	16
 16831  01229A  12DE               	iorwf	postinc2,f,c
 16832  01229C  0E00               	movlw	0
 16833  01229E  12DE               	iorwf	postinc2,f,c
 16834  0122A0                     i2l6066:
 16835                           
 16836                           ; BSR set to: 15
 16837                           ;inc\CANlib.h: 581: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 16838  0122A0  CF51 F03C          	movff	3921,??_CANreceiveMessage	;volatile
 16839  0122A4  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16840  0122A6  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 16841  0122A8  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 16842  0122AA  0E15               	movlw	21
 16843  0122AC                     i2u747_45:
 16844  0122AC  90D8               	bcf	status,0,c
 16845  0122AE  363C               	rlcf	??_CANreceiveMessage,f,c
 16846  0122B0  363D               	rlcf	??_CANreceiveMessage+1,f,c
 16847  0122B2  363E               	rlcf	??_CANreceiveMessage+2,f,c
 16848  0122B4  363F               	rlcf	??_CANreceiveMessage+3,f,c
 16849  0122B6  2EE8               	decfsz	wreg,f,c
 16850  0122B8  D7F9               	goto	i2u747_45
 16851  0122BA  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16852  0122BE  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16853  0122C2  503C               	movf	??_CANreceiveMessage,w,c
 16854  0122C4  12DE               	iorwf	postinc2,f,c
 16855  0122C6  503D               	movf	??_CANreceiveMessage+1,w,c
 16856  0122C8  12DE               	iorwf	postinc2,f,c
 16857  0122CA  503E               	movf	??_CANreceiveMessage+2,w,c
 16858  0122CC  12DE               	iorwf	postinc2,f,c
 16859  0122CE  503F               	movf	??_CANreceiveMessage+3,w,c
 16860  0122D0  12DE               	iorwf	postinc2,f,c
 16861  0122D2                     i2l6068:
 16862                           
 16863                           ; BSR set to: 15
 16864                           ;inc\CANlib.h: 582: }
 16865                           ;inc\CANlib.h: 584: RXB1CONbits.RXFUL = 0x00;
 16866  0122D2  010F               	movlb	15	; () banked
 16867  0122D4  9F50               	bcf	80,7,b	;volatile
 16868                           
 16869                           ; BSR set to: 15
 16870                           ;inc\CANlib.h: 585: return (error);
 16871                           ;	Return value of _CANreceiveMessage is never used
 16872  0122D6  0012               	return	
 16873  0122D8                     i2l418:
 16874                           
 16875                           ; BSR set to: 15
 16876                           ;inc\CANlib.h: 586: }
 16877                           ;inc\CANlib.h: 588: if (RXB0CONbits.RXFUL ==0x01)
 16878  0122D8  AE60               	btfss	3936,7,c	;volatile
 16879  0122DA  0012               	return	
 16880                           
 16881                           ; BSR set to: 15
 16882                           ;inc\CANlib.h: 589: {
 16883                           ;inc\CANlib.h: 590: msg->identifier = 0;
 16884  0122DC  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16885  0122E0  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16886  0122E4  6ADE               	clrf	postinc2,c
 16887  0122E6  6ADE               	clrf	postinc2,c
 16888  0122E8  6ADE               	clrf	postinc2,c
 16889  0122EA  6ADD               	clrf	postdec2,c
 16890                           
 16891                           ; BSR set to: 15
 16892                           ;inc\CANlib.h: 591: msg->data[0] =RXB0D0;
 16893  0122EC  EE20 F004          	lfsr	2,4
 16894  0122F0  503A               	movf	CANreceiveMessage@msg,w,c
 16895  0122F2  26D9               	addwf	fsr2l,f,c
 16896  0122F4  503B               	movf	CANreceiveMessage@msg+1,w,c
 16897  0122F6  22DA               	addwfc	fsr2h,f,c
 16898  0122F8  CF66 FFDF          	movff	3942,indf2	;volatile
 16899                           
 16900                           ; BSR set to: 15
 16901                           ;inc\CANlib.h: 592: msg->data[1] =RXB0D1;
 16902  0122FC  EE20 F005          	lfsr	2,5
 16903  012300  503A               	movf	CANreceiveMessage@msg,w,c
 16904  012302  26D9               	addwf	fsr2l,f,c
 16905  012304  503B               	movf	CANreceiveMessage@msg+1,w,c
 16906  012306  22DA               	addwfc	fsr2h,f,c
 16907  012308  CF67 FFDF          	movff	3943,indf2	;volatile
 16908                           
 16909                           ; BSR set to: 15
 16910                           ;inc\CANlib.h: 593: msg->data[2] =RXB0D2;
 16911  01230C  EE20 F006          	lfsr	2,6
 16912  012310  503A               	movf	CANreceiveMessage@msg,w,c
 16913  012312  26D9               	addwf	fsr2l,f,c
 16914  012314  503B               	movf	CANreceiveMessage@msg+1,w,c
 16915  012316  22DA               	addwfc	fsr2h,f,c
 16916  012318  CF68 FFDF          	movff	3944,indf2	;volatile
 16917                           
 16918                           ; BSR set to: 15
 16919                           ;inc\CANlib.h: 594: msg->data[3] =RXB0D3;
 16920  01231C  EE20 F007          	lfsr	2,7
 16921  012320  503A               	movf	CANreceiveMessage@msg,w,c
 16922  012322  26D9               	addwf	fsr2l,f,c
 16923  012324  503B               	movf	CANreceiveMessage@msg+1,w,c
 16924  012326  22DA               	addwfc	fsr2h,f,c
 16925  012328  CF69 FFDF          	movff	3945,indf2	;volatile
 16926                           
 16927                           ; BSR set to: 15
 16928                           ;inc\CANlib.h: 595: msg->data[4] =RXB0D4;
 16929  01232C  EE20 F008          	lfsr	2,8
 16930  012330  503A               	movf	CANreceiveMessage@msg,w,c
 16931  012332  26D9               	addwf	fsr2l,f,c
 16932  012334  503B               	movf	CANreceiveMessage@msg+1,w,c
 16933  012336  22DA               	addwfc	fsr2h,f,c
 16934  012338  CF6A FFDF          	movff	3946,indf2	;volatile
 16935                           
 16936                           ; BSR set to: 15
 16937                           ;inc\CANlib.h: 596: msg->data[5] =RXB0D5;
 16938  01233C  EE20 F009          	lfsr	2,9
 16939  012340  503A               	movf	CANreceiveMessage@msg,w,c
 16940  012342  26D9               	addwf	fsr2l,f,c
 16941  012344  503B               	movf	CANreceiveMessage@msg+1,w,c
 16942  012346  22DA               	addwfc	fsr2h,f,c
 16943  012348  CF6B FFDF          	movff	3947,indf2	;volatile
 16944                           
 16945                           ; BSR set to: 15
 16946                           ;inc\CANlib.h: 597: msg->data[6] =RXB0D6;
 16947  01234C  EE20 F00A          	lfsr	2,10
 16948  012350  503A               	movf	CANreceiveMessage@msg,w,c
 16949  012352  26D9               	addwf	fsr2l,f,c
 16950  012354  503B               	movf	CANreceiveMessage@msg+1,w,c
 16951  012356  22DA               	addwfc	fsr2h,f,c
 16952  012358  CF6C FFDF          	movff	3948,indf2	;volatile
 16953                           
 16954                           ; BSR set to: 15
 16955                           ;inc\CANlib.h: 598: msg->data[7] =RXB0D7;
 16956  01235C  EE20 F00B          	lfsr	2,11
 16957  012360  503A               	movf	CANreceiveMessage@msg,w,c
 16958  012362  26D9               	addwf	fsr2l,f,c
 16959  012364  503B               	movf	CANreceiveMessage@msg+1,w,c
 16960  012366  22DA               	addwfc	fsr2h,f,c
 16961  012368  CF6D FFDF          	movff	3949,indf2	;volatile
 16962                           
 16963                           ; BSR set to: 15
 16964                           ;inc\CANlib.h: 600: msg->RTR = RXB0DLCbits.RXRTR;
 16965  01236C  EE20 F00E          	lfsr	2,14
 16966  012370  503A               	movf	CANreceiveMessage@msg,w,c
 16967  012372  26D9               	addwf	fsr2l,f,c
 16968  012374  503B               	movf	CANreceiveMessage@msg+1,w,c
 16969  012376  22DA               	addwfc	fsr2h,f,c
 16970  012378  AC65               	btfss	3941,6,c	;volatile
 16971  01237A  D002               	goto	i2u749_40
 16972  01237C  0E01               	movlw	1
 16973  01237E  D001               	goto	i2u749_46
 16974  012380                     i2u749_40:
 16975  012380  0E00               	movlw	0
 16976  012382                     i2u749_46:
 16977  012382  6EDF               	movwf	indf2,c
 16978                           
 16979                           ; BSR set to: 15
 16980                           ;inc\CANlib.h: 602: msg->length = RXB0DLC & 0x0F;
 16981  012384  EE20 F00D          	lfsr	2,13
 16982  012388  503A               	movf	CANreceiveMessage@msg,w,c
 16983  01238A  26D9               	addwf	fsr2l,f,c
 16984  01238C  503B               	movf	CANreceiveMessage@msg+1,w,c
 16985  01238E  22DA               	addwfc	fsr2h,f,c
 16986  012390  5065               	movf	3941,w,c	;volatile
 16987  012392  0B0F               	andlw	15
 16988  012394  6EDF               	movwf	indf2,c
 16989                           
 16990                           ; BSR set to: 15
 16991                           ;inc\CANlib.h: 604: msg->type = RXB0SIDLbits.EXID;
 16992  012396  EE20 F00C          	lfsr	2,12
 16993  01239A  503A               	movf	CANreceiveMessage@msg,w,c
 16994  01239C  26D9               	addwf	fsr2l,f,c
 16995  01239E  503B               	movf	CANreceiveMessage@msg+1,w,c
 16996  0123A0  22DA               	addwfc	fsr2h,f,c
 16997  0123A2  A662               	btfss	3938,3,c	;volatile
 16998  0123A4  D002               	goto	i2u750_40
 16999  0123A6  0E01               	movlw	1
 17000  0123A8  D001               	goto	i2u750_46
 17001  0123AA                     i2u750_40:
 17002  0123AA  0E00               	movlw	0
 17003  0123AC                     i2u750_46:
 17004  0123AC  6EDF               	movwf	indf2,c
 17005                           
 17006                           ; BSR set to: 15
 17007                           ;inc\CANlib.h: 606: if (RXB0SIDLbits.EXID == 0)
 17008  0123AE  B662               	btfsc	3938,3,c	;volatile
 17009  0123B0  D043               	goto	i2l6104
 17010                           
 17011                           ; BSR set to: 15
 17012                           ;inc\CANlib.h: 607: {
 17013                           ;inc\CANlib.h: 608: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 17014  0123B2  CF61 F03C          	movff	3937,??_CANreceiveMessage	;volatile
 17015  0123B6  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17016  0123B8  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17017  0123BA  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17018  0123BC  0E03               	movlw	3
 17019  0123BE                     i2u752_45:
 17020  0123BE  90D8               	bcf	status,0,c
 17021  0123C0  363C               	rlcf	??_CANreceiveMessage,f,c
 17022  0123C2  363D               	rlcf	??_CANreceiveMessage+1,f,c
 17023  0123C4  363E               	rlcf	??_CANreceiveMessage+2,f,c
 17024  0123C6  363F               	rlcf	??_CANreceiveMessage+3,f,c
 17025  0123C8  2EE8               	decfsz	wreg,f,c
 17026  0123CA  D7F9               	goto	i2u752_45
 17027  0123CC  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17028  0123D0  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17029  0123D4  C03C  FFDE         	movff	??_CANreceiveMessage,postinc2
 17030  0123D8  C03D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 17031  0123DC  C03E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 17032  0123E0  C03F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 17033                           
 17034                           ; BSR set to: 15
 17035                           ;inc\CANlib.h: 609: tamp = (RXB0SIDL >> 5 ) & 0x07;
 17036  0123E4  3862               	swapf	3938,w,c	;volatile
 17037  0123E6  42E8               	rrncf	wreg,f,c
 17038  0123E8  0B07               	andlw	7
 17039  0123EA  0B07               	andlw	7
 17040  0123EC  6E45               	movwf	CANreceiveMessage@tamp,c
 17041                           
 17042                           ; BSR set to: 15
 17043                           ;inc\CANlib.h: 610: msg->identifier = msg->identifier + tamp;
 17044  0123EE  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17045  0123F2  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17046  0123F6  CFDE F03C          	movff	postinc2,??_CANreceiveMessage
 17047  0123FA  CFDE F03D          	movff	postinc2,??_CANreceiveMessage+1
 17048  0123FE  CFDE F03E          	movff	postinc2,??_CANreceiveMessage+2
 17049  012402  CFDE F03F          	movff	postinc2,??_CANreceiveMessage+3
 17050  012406  5045               	movf	CANreceiveMessage@tamp,w,c
 17051  012408  243C               	addwf	??_CANreceiveMessage,w,c
 17052  01240A  6E40               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 17053  01240C  0E00               	movlw	0
 17054  01240E  203D               	addwfc	??_CANreceiveMessage+1,w,c
 17055  012410  6E41               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 17056  012412  0E00               	movlw	0
 17057  012414  203E               	addwfc	??_CANreceiveMessage+2,w,c
 17058  012416  6E42               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 17059  012418  0E00               	movlw	0
 17060  01241A  203F               	addwfc	??_CANreceiveMessage+3,w,c
 17061  01241C  6E43               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 17062  01241E  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17063  012422  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17064  012426  C040  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 17065  01242A  C041  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 17066  01242E  C042  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 17067  012432  C043  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 17068                           
 17069                           ;inc\CANlib.h: 611: }
 17070  012436  D088               	goto	i2l6130
 17071  012438                     i2l6104:
 17072                           
 17073                           ; BSR set to: 15
 17074                           ;inc\CANlib.h: 612: else
 17075                           ;inc\CANlib.h: 613: {
 17076                           ;inc\CANlib.h: 614: msg->identifier = (unsigned long) RXB0EIDL;
 17077  012438  CF64 F03C          	movff	3940,??_CANreceiveMessage	;volatile
 17078  01243C  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17079  01243E  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17080  012440  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17081  012442  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17082  012446  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17083  01244A  C03C  FFDE         	movff	??_CANreceiveMessage,postinc2
 17084  01244E  C03D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 17085  012452  C03E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 17086  012456  C03F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 17087                           
 17088                           ; BSR set to: 15
 17089                           ;inc\CANlib.h: 615: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 17090  01245A  CF63 F03C          	movff	3939,??_CANreceiveMessage	;volatile
 17091  01245E  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17092  012460  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17093  012462  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17094  012464  C03E  F03F         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 17095  012468  C03D  F03E         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 17096  01246C  C03C  F03D         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 17097  012470  6A3C               	clrf	??_CANreceiveMessage,c
 17098  012472  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17099  012476  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17100  01247A  503C               	movf	??_CANreceiveMessage,w,c
 17101  01247C  26DE               	addwf	postinc2,f,c
 17102  01247E  503D               	movf	??_CANreceiveMessage+1,w,c
 17103  012480  22DE               	addwfc	postinc2,f,c
 17104  012482  503E               	movf	??_CANreceiveMessage+2,w,c
 17105  012484  22DE               	addwfc	postinc2,f,c
 17106  012486  503F               	movf	??_CANreceiveMessage+3,w,c
 17107  012488  22DE               	addwfc	postinc2,f,c
 17108                           
 17109                           ; BSR set to: 15
 17110                           ;inc\CANlib.h: 617: if (RXB0SIDLbits.EID16)
 17111  01248A  A062               	btfss	3938,0,c	;volatile
 17112  01248C  D00C               	goto	i2l6112
 17113                           
 17114                           ; BSR set to: 15
 17115                           ;inc\CANlib.h: 618: msg->identifier |= 0x00010000;
 17116  01248E  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17117  012492  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17118  012496  0E00               	movlw	0
 17119  012498  12DE               	iorwf	postinc2,f,c
 17120  01249A  0E00               	movlw	0
 17121  01249C  12DE               	iorwf	postinc2,f,c
 17122  01249E  0E01               	movlw	1
 17123  0124A0  12DE               	iorwf	postinc2,f,c
 17124  0124A2  0E00               	movlw	0
 17125  0124A4  12DE               	iorwf	postinc2,f,c
 17126  0124A6                     i2l6112:
 17127                           
 17128                           ; BSR set to: 15
 17129                           ;inc\CANlib.h: 619: if (RXB0SIDLbits.EID17)
 17130  0124A6  A262               	btfss	3938,1,c	;volatile
 17131  0124A8  D00C               	goto	i2l6116
 17132                           
 17133                           ; BSR set to: 15
 17134                           ;inc\CANlib.h: 620: msg->identifier |= 0x00020000;
 17135  0124AA  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17136  0124AE  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17137  0124B2  0E00               	movlw	0
 17138  0124B4  12DE               	iorwf	postinc2,f,c
 17139  0124B6  0E00               	movlw	0
 17140  0124B8  12DE               	iorwf	postinc2,f,c
 17141  0124BA  0E02               	movlw	2
 17142  0124BC  12DE               	iorwf	postinc2,f,c
 17143  0124BE  0E00               	movlw	0
 17144  0124C0  12DE               	iorwf	postinc2,f,c
 17145  0124C2                     i2l6116:
 17146                           
 17147                           ; BSR set to: 15
 17148                           ;inc\CANlib.h: 621: if (RXB0SIDLbits.SID0)
 17149  0124C2  AA62               	btfss	3938,5,c	;volatile
 17150  0124C4  D00C               	goto	i2l6120
 17151                           
 17152                           ; BSR set to: 15
 17153                           ;inc\CANlib.h: 622: msg->identifier |= 0x00040000;
 17154  0124C6  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17155  0124CA  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17156  0124CE  0E00               	movlw	0
 17157  0124D0  12DE               	iorwf	postinc2,f,c
 17158  0124D2  0E00               	movlw	0
 17159  0124D4  12DE               	iorwf	postinc2,f,c
 17160  0124D6  0E04               	movlw	4
 17161  0124D8  12DE               	iorwf	postinc2,f,c
 17162  0124DA  0E00               	movlw	0
 17163  0124DC  12DE               	iorwf	postinc2,f,c
 17164  0124DE                     i2l6120:
 17165                           
 17166                           ; BSR set to: 15
 17167                           ;inc\CANlib.h: 623: if (RXB0SIDLbits.SID1)
 17168  0124DE  AC62               	btfss	3938,6,c	;volatile
 17169  0124E0  D00C               	goto	i2l6124
 17170                           
 17171                           ; BSR set to: 15
 17172                           ;inc\CANlib.h: 624: msg->identifier |= 0x00080000;
 17173  0124E2  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17174  0124E6  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17175  0124EA  0E00               	movlw	0
 17176  0124EC  12DE               	iorwf	postinc2,f,c
 17177  0124EE  0E00               	movlw	0
 17178  0124F0  12DE               	iorwf	postinc2,f,c
 17179  0124F2  0E08               	movlw	8
 17180  0124F4  12DE               	iorwf	postinc2,f,c
 17181  0124F6  0E00               	movlw	0
 17182  0124F8  12DE               	iorwf	postinc2,f,c
 17183  0124FA                     i2l6124:
 17184                           
 17185                           ; BSR set to: 15
 17186                           ;inc\CANlib.h: 625: if (RXB0SIDLbits.SID2)
 17187  0124FA  AE62               	btfss	3938,7,c	;volatile
 17188  0124FC  D00C               	goto	i2l6128
 17189                           
 17190                           ; BSR set to: 15
 17191                           ;inc\CANlib.h: 626: msg->identifier |= 0x00100000;
 17192  0124FE  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17193  012502  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17194  012506  0E00               	movlw	0
 17195  012508  12DE               	iorwf	postinc2,f,c
 17196  01250A  0E00               	movlw	0
 17197  01250C  12DE               	iorwf	postinc2,f,c
 17198  01250E  0E10               	movlw	16
 17199  012510  12DE               	iorwf	postinc2,f,c
 17200  012512  0E00               	movlw	0
 17201  012514  12DE               	iorwf	postinc2,f,c
 17202  012516                     i2l6128:
 17203                           
 17204                           ; BSR set to: 15
 17205                           ;inc\CANlib.h: 628: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 17206  012516  CF61 F03C          	movff	3937,??_CANreceiveMessage	;volatile
 17207  01251A  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17208  01251C  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17209  01251E  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17210  012520  0E15               	movlw	21
 17211  012522                     i2u758_45:
 17212  012522  90D8               	bcf	status,0,c
 17213  012524  363C               	rlcf	??_CANreceiveMessage,f,c
 17214  012526  363D               	rlcf	??_CANreceiveMessage+1,f,c
 17215  012528  363E               	rlcf	??_CANreceiveMessage+2,f,c
 17216  01252A  363F               	rlcf	??_CANreceiveMessage+3,f,c
 17217  01252C  2EE8               	decfsz	wreg,f,c
 17218  01252E  D7F9               	goto	i2u758_45
 17219  012530  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17220  012534  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17221  012538  503C               	movf	??_CANreceiveMessage,w,c
 17222  01253A  12DE               	iorwf	postinc2,f,c
 17223  01253C  503D               	movf	??_CANreceiveMessage+1,w,c
 17224  01253E  12DE               	iorwf	postinc2,f,c
 17225  012540  503E               	movf	??_CANreceiveMessage+2,w,c
 17226  012542  12DE               	iorwf	postinc2,f,c
 17227  012544  503F               	movf	??_CANreceiveMessage+3,w,c
 17228  012546  12DE               	iorwf	postinc2,f,c
 17229  012548                     i2l6130:
 17230                           
 17231                           ; BSR set to: 15
 17232                           ;inc\CANlib.h: 630: }
 17233                           ;inc\CANlib.h: 631: RXB0CONbits.RXFUL = 0x00;
 17234  012548  9E60               	bcf	3936,7,c	;volatile
 17235                           
 17236                           ; BSR set to: 15
 17237                           ;inc\CANlib.h: 633: return (error);
 17238                           ;	Return value of _CANreceiveMessage is never used
 17239  01254A  0012               	return	
 17240  01254C                     __end_of_CANreceiveMessage:
 17241                           	opt stack 0
 17242                           pclatu	equ	0xFFB
 17243                           pclath	equ	0xFFA
 17244                           tblptru	equ	0xFF8
 17245                           tblptrh	equ	0xFF7
 17246                           tblptrl	equ	0xFF6
 17247                           tablat	equ	0xFF5
 17248                           prodh	equ	0xFF4
 17249                           prodl	equ	0xFF3
 17250                           intcon	equ	0xFF2
 17251                           postinc0	equ	0xFEE
 17252                           fsr0h	equ	0xFEA
 17253                           fsr0l	equ	0xFE9
 17254                           wreg	equ	0xFE8
 17255                           indf1	equ	0xFE7
 17256                           fsr1h	equ	0xFE2
 17257                           fsr1l	equ	0xFE1
 17258                           bsr	equ	0xFE0
 17259                           indf2	equ	0xFDF
 17260                           postinc2	equ	0xFDE
 17261                           postdec2	equ	0xFDD
 17262                           fsr2h	equ	0xFDA
 17263                           fsr2l	equ	0xFD9
 17264                           status	equ	0xFD8
 17265                           
 17266 ;; *************** function _CANisRxReady *****************
 17267 ;; Defined at:
 17268 ;;		line 1164 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 17269 ;; Parameters:    Size  Location     Type
 17270 ;;		None
 17271 ;; Auto vars:     Size  Location     Type
 17272 ;;		None
 17273 ;; Return value:  Size  Location     Type
 17274 ;;                  1    wreg      unsigned char 
 17275 ;; Registers used:
 17276 ;;		wreg, status,2
 17277 ;; Tracked objects:
 17278 ;;		On entry : 0/0
 17279 ;;		On exit  : 0/0
 17280 ;;		Unchanged: 0/0
 17281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17283 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17285 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17286 ;;Total ram usage:        1 bytes
 17287 ;; Hardware stack levels used:    1
 17288 ;; This function calls:
 17289 ;;		Nothing
 17290 ;; This function is called by:
 17291 ;;		_ISR_alta
 17292 ;; This function uses a non-reentrant model
 17293 ;;
 17294                           
 17295                           	psect	text47
 17296  01537C                     __ptext47:
 17297                           	opt stack 0
 17298  01537C                     _CANisRxReady:
 17299                           	opt stack 21
 17300                           
 17301                           ;inc\CANlib.h: 1166: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
 17302                           
 17303                           ; BSR set to: 15
 17304                           ;incstack = 0
 17305  01537C  0E01               	movlw	1
 17306  01537E  6E3A               	movwf	_CANisRxReady$3229,c
 17307  015380  BE60               	btfsc	3936,7,c	;volatile
 17308  015382  D005               	goto	i2l569
 17309  015384  010F               	movlb	15	; () banked
 17310  015386  BF50               	btfsc	80,7,b	;volatile
 17311  015388  D002               	goto	i2l569
 17312                           
 17313                           ; BSR set to: 15
 17314  01538A  0E00               	movlw	0
 17315  01538C  6E3A               	movwf	_CANisRxReady$3229,c
 17316  01538E                     i2l569:
 17317  01538E  503A               	movf	_CANisRxReady$3229,w,c
 17318  015390  0012               	return	
 17319  015392                     __end_of_CANisRxReady:
 17320                           	opt stack 0
 17321                           pclatu	equ	0xFFB
 17322                           pclath	equ	0xFFA
 17323                           tblptru	equ	0xFF8
 17324                           tblptrh	equ	0xFF7
 17325                           tblptrl	equ	0xFF6
 17326                           tablat	equ	0xFF5
 17327                           prodh	equ	0xFF4
 17328                           prodl	equ	0xFF3
 17329                           intcon	equ	0xFF2
 17330                           postinc0	equ	0xFEE
 17331                           fsr0h	equ	0xFEA
 17332                           fsr0l	equ	0xFE9
 17333                           wreg	equ	0xFE8
 17334                           indf1	equ	0xFE7
 17335                           fsr1h	equ	0xFE2
 17336                           fsr1l	equ	0xFE1
 17337                           bsr	equ	0xFE0
 17338                           indf2	equ	0xFDF
 17339                           postinc2	equ	0xFDE
 17340                           postdec2	equ	0xFDD
 17341                           fsr2h	equ	0xFDA
 17342                           fsr2l	equ	0xFD9
 17343                           status	equ	0xFD8
 17344                           pclatu	equ	0xFFB
 17345                           pclath	equ	0xFFA
 17346                           tblptru	equ	0xFF8
 17347                           tblptrh	equ	0xFF7
 17348                           tblptrl	equ	0xFF6
 17349                           tablat	equ	0xFF5
 17350                           prodh	equ	0xFF4
 17351                           prodl	equ	0xFF3
 17352                           intcon	equ	0xFF2
 17353                           postinc0	equ	0xFEE
 17354                           fsr0h	equ	0xFEA
 17355                           fsr0l	equ	0xFE9
 17356                           wreg	equ	0xFE8
 17357                           indf1	equ	0xFE7
 17358                           fsr1h	equ	0xFE2
 17359                           fsr1l	equ	0xFE1
 17360                           bsr	equ	0xFE0
 17361                           indf2	equ	0xFDF
 17362                           postinc2	equ	0xFDE
 17363                           postdec2	equ	0xFDD
 17364                           fsr2h	equ	0xFDA
 17365                           fsr2l	equ	0xFD9
 17366                           status	equ	0xFD8
 17367                           
 17368                           	psect	rparam
 17369  0000                     pclatu	equ	0xFFB
 17370                           pclath	equ	0xFFA
 17371                           tblptru	equ	0xFF8
 17372                           tblptrh	equ	0xFF7
 17373                           tblptrl	equ	0xFF6
 17374                           tablat	equ	0xFF5
 17375                           prodh	equ	0xFF4
 17376                           prodl	equ	0xFF3
 17377                           intcon	equ	0xFF2
 17378                           postinc0	equ	0xFEE
 17379                           fsr0h	equ	0xFEA
 17380                           fsr0l	equ	0xFE9
 17381                           wreg	equ	0xFE8
 17382                           indf1	equ	0xFE7
 17383                           fsr1h	equ	0xFE2
 17384                           fsr1l	equ	0xFE1
 17385                           bsr	equ	0xFE0
 17386                           indf2	equ	0xFDF
 17387                           postinc2	equ	0xFDE
 17388                           postdec2	equ	0xFDD
 17389                           fsr2h	equ	0xFDA
 17390                           fsr2l	equ	0xFD9
 17391                           status	equ	0xFD8
 17392                           
 17393                           	psect	temp
 17394  000048                     btemp:
 17395                           	opt stack 0
 17396  000048                     	ds	1
 17397  0000                     int$flags	set	btemp
 17398                           pclatu	equ	0xFFB
 17399                           pclath	equ	0xFFA
 17400                           tblptru	equ	0xFF8
 17401                           tblptrh	equ	0xFF7
 17402                           tblptrl	equ	0xFF6
 17403                           tablat	equ	0xFF5
 17404                           prodh	equ	0xFF4
 17405                           prodl	equ	0xFF3
 17406                           intcon	equ	0xFF2
 17407                           postinc0	equ	0xFEE
 17408                           fsr0h	equ	0xFEA
 17409                           fsr0l	equ	0xFE9
 17410                           wreg	equ	0xFE8
 17411                           indf1	equ	0xFE7
 17412                           fsr1h	equ	0xFE2
 17413                           fsr1l	equ	0xFE1
 17414                           bsr	equ	0xFE0
 17415                           indf2	equ	0xFDF
 17416                           postinc2	equ	0xFDE
 17417                           postdec2	equ	0xFDD
 17418                           fsr2h	equ	0xFDA
 17419                           fsr2l	equ	0xFD9
 17420                           status	equ	0xFD8


Data Sizes:
    Strings     146
    Constant    144
    Data        1
    BSS         91
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     30      71
    BANK0           160    104     144
    BANK1           256     33      45
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_10(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_14(CODE[14]), STR_13(CODE[8]), STR_12(CODE[21]), STR_11(CODE[5]), 
		 -> STR_9(CODE[2]), STR_8(CODE[5]), STR_7(CODE[4]), STR_6(CODE[12]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_3(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(COMRAM[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 1
		 -> data_speed(BANK0[1]), data_brake(BANK0[1]), data_steering(BANK0[1]), data(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->_CANreceiveMessage

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _board_initialization->_CANInitialize
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _LCD_Handler->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___awdiv->___awmod
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _LCD_write_string->_LCD_write_char
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul
    _CAN_interpreter->_CANsendMessage
    _CAN_Send->_CANsendMessage

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_alta in BANK3

    None.

Critical Paths under _ISR_bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_alta in BANK4

    None.

Critical Paths under _ISR_bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_alta in BANK5

    None.

Critical Paths under _ISR_bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_alta in BANK6

    None.

Critical Paths under _ISR_bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_alta in BANK7

    None.

Critical Paths under _ISR_bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_alta in BANK8

    None.

Critical Paths under _ISR_bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_alta in BANK9

    None.

Critical Paths under _ISR_bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_alta in BANK10

    None.

Critical Paths under _ISR_bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_alta in BANK11

    None.

Critical Paths under _ISR_bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_alta in BANK12

    None.

Critical Paths under _ISR_bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  193712
                                             25 BANK1      8     8      0
                           _CAN_Send
                    _CAN_interpreter
                   _Joystick_Polling
                        _LCD_Handler
                          _LCD_clear
                      _LCD_goto_line
                  _LCD_write_message
                 _PWR_Button_Polling
                            ___flmul
                            ___fltol
                           ___xxtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   66501
                      _CANInitialize
                      _LCD_backlight
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   28421
                                             28 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      31
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    9073
                                             26 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_backlight                                        1     1      0      31
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    8212
                                             28 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1788
                                             14 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    5364
                                             14 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWR_Button_Polling                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0   81214
                          _LCD_clear
                      _LCD_goto_line
                  _LCD_write_message
                   _LCD_write_string
                            ___fldiv
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   41239
                                             94 BANK0     10     2      8
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    9426
                                             53 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             14 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    9147
                                             53 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    4925
                                             28 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             14 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             20 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                             14 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                             14 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                             14 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                             14 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     799
                                             62 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3697
                                             86 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3364
                                             66 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     142
                                             14 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     728
                                             14 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1883
                                             14 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9673
                                             31 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_message                                    2     0      2   10520
                                             31 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (3) _LCD_write_char                                       5     5      0    9454
                                             26 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    8965
                                             26 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    8934
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (4) _LCD_send_command                                     4     1      3    8934
                                             22 BANK0      4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (5) _LCD_enable_pulse                                     0     0      0    1418
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1418
                                             20 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             14 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     2     2      0      99
                                             14 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _CAN_interpreter                                      4     4      0    5187
                                             30 BANK0      4     4      0
                       _CANisTxReady
                     _CANsendMessage
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     861
                                             14 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      37
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CAN_Send                                             0     0      0    4289
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4289
                                             14 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR_bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_alta                                            15    15      0    1291
                                             29 COMRAM     1     1      0
                                              0 BANK0     14    14      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (10) _CANreceiveMessage                                  12    10      2    1137
                                             17 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (10) _CANisRxReady                                        1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_Send
     _CANsendMessage
   _CAN_interpreter
     _CANisTxReady
     _CANsendMessage
     ___xxtofl
   _Joystick_Polling
   _LCD_Handler
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___fldiv
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
   _LCD_clear
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _PWR_Button_Polling
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___xxtofl
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _LCD_backlight
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _delay_ms
       ___wmul
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     21      2D       7       17.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     68      90       5       90.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     1E      47       1       75.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     104      20        0.0%
DATA                 0      0     104       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Mar 26 16:42:08 2016

                  ___fldiv@aexp 0086                    ___fldiv@bexp 0085       __size_of_delay_set_quartz 000A  
          __end_of_CANSetFilter 0B06                    ?_LCD_Handler 0029                    ___fldiv@sign 007A  
                  ___awdiv@sign 0079                              _id 000B                              bsr 000FE0  
           ___wmul@multiplicand 0070                     __CFG_BORV$3 000000                    __CFG_CP0$OFF 000000  
                  __CFG_CP1$OFF 000000                    __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000  
                   __CFG_OSC$HS 000000                    __CFG_CP4$OFF 000000                    __CFG_CP5$OFF 000000  
                           l401 18B8                             l410 1A72                             l402 18BC  
                           l411 1A76                             l403 19B4                             l412 1A82  
                           l404 1944                             l500 075A                             l405 194E  
                           l501 0766                             l406 1958                             l510 0872  
                           l407 1962                             l511 0876                             l520 0982  
                           l512 0882                             l504 0842                             l440 384A  
                           l521 098E                             l505 0846                             l441 384E  
                           l530 0A9A                             l522 0992                             l506 0852  
                           l442 385A                             l371 161E                             l531 0A9E  
                           l523 099E                             l515 095E                             l507 0856  
                           l451 3962                             l443 385E                             l372 13B0  
                           l532 0AAA                             l516 0962                             l508 0862  
                           l452 3966                             l444 386A                             l381 156A  
                           l373 13B4                             l533 0AAE                             l517 096E  
                           l509 0866                             l453 3972                             l445 386E  
                           l390 16C0                             l382 156E                             l374 14AC  
                           l534 0ABA                             l526 0A7A                             l518 0972  
                           l454 3976                             l446 387A                             l366 3F6E  
                           l391 16CA                             l383 157A                             l375 143C  
                           l527 0A7E                             l519 097E                             l471 04F0  
                           l455 3982                             l447 387E                             l367 3F78  
                           l392 16D4                             l376 1446                             l528 0A8A  
                           l472 04F4                             l456 3986                             l448 388A  
                           l393 16DE                             l377 1450                             l529 0A8E  
                           l473 0500                             l457 3992                             l386 18A2  
                           l378 145A                             l490 064A                             l482 060A  
                           l474 0504                             l458 3996                             l387 1634  
                           l483 060E                             l475 0510                             l459 39A2  
                           l396 17EE                             l388 1638                             l564 5322  
                           l484 061A                             l476 0514                             l397 17F2  
                           l389 1730                             l493 0726                             l485 061E  
                           l477 0520                             l398 17FE                             l494 072A  
                           l486 062A                             l478 0524                             l495 0736  
                           l487 062E                             l479 0530                             l496 073A  
                           l488 063A                             l744 2FFE                             l577 51A0  
                           l497 0746                             l489 063E                             l498 074A  
                           l499 0756                             l790 506C                             l792 506E  
                           l785 5352                             l876 10FA            ??_PWR_Button_Polling 006E  
                  __CFG_CPB$OFF 000000                    __CFG_CPD$OFF 000000                     ?_LCD_cursor 007A  
                           _dir 00EA                             _msg 0019                             _str 0121  
                  ___awmod@sign 0073                             prod 000FF3                             wreg 000FE8  
                  ___flmul@aexp 0089                    ___flmul@bexp 008E                    ___flmul@sign 0088  
                  ___flmul@temp 0093                    ___flmul@prod 008F                    __CFG_LVP$OFF 000000  
        __size_of_LCD_goto_line 00EC                    ___fltol@exp1 00A7                    __CFG_WDT$OFF 000000  
                          l1101 451C                            l1111 4356                            l1205 4204  
                          l1304 4FB4                            l1405 28A0                            l1510 3E36  
                          l1414 2934                            l1511 3E4E                            l1503 3DDA  
                          l1444 34BE                            l1453 34F6                            l1390 26EC  
                          l1294 4DD8                            l1198 4140                            l1455 3564  
                          l1447 3466                            l1199 4184                            l1481 2D44  
                          l1474 2AA8                            l1491 2E56                            l1483 2DB2  
                          l1388 272C                            l1389 2720                            l1496 3D2E  
                          l7040 38D4                            l7008 37BE                            l7034 388E  
                          l8012 1A66                            l7108 0176                            l7310 0886  
                          l7214 057A                            l7126 0230                            l6600 2606  
                          l8200 0DC6                            l7208 0534                            l7144 02EA  
                          l8018 1A86                            l8210 0E6A                            l8202 0E02  
                          l8130 0B30                            l7242 064E                            l7162 03A4  
                          l7090 00BE                            l7066 39A6                            l8052 49CE  
                          l8060 4A96                            l8300 12AC                            l8204 0E18  
                          l8124 0B16                            l7316 08CC                            l7180 045E  
                          l8054 4A00                            l6702 28D2                            l8230 0F84  
                          l8214 0E9C                            l8302 12BA                            l8142 0BB0  
                          l7350 09E8                            l6544 5192                            l8056 4A32  
                          l8064 521E                            l8072 52E0                            l6712 28F4  
                          l6720 290E                            l6608 2630                            l7440 1CB6  
                          l8320 1364                            l8312 1308                            l8224 0F06  
                          l8160 0C24                            l8152 0BE0                            l8144 0BCA  
                          l7344 09A2                            l7248 0694                            l8058 4A64  
                          l8402 3472                            l7610 42B2                            l6650 2700  
                          l7522 41BA                            l6802 2AD0                            l7426 3C8C  
                          l7418 3B94                            l7450 1DBA                            l8242 0FD0  
                          l8170 0C76                            l8154 0C0A                            l8138 0B66  
                          l8322 136A                            l7282 07B0                            l8068 5238  
                          l8076 52F4                            l8420 350A                            l8340 32D2  
                          l7620 43A2                            l6708 28E8                            l6652 2706  
                          l6572 258E                            l7532 41EA                            l6900 4C8C  
                          l8316 1338                            l8308 12E0                            l8228 0F7E  
                          l8148 0BDA                            l8324 138C                            l7276 076A  
                          l8430 355E                            l8414 34E0                            l8334 32AE  
                          l7614 4304                            l7606 4264                            l6750 29CA  
                          l6742 299C                            l6718 2908                            l6638 266C  
                          l6590 25D8                            l6566 256A                            l7710 4FA2  
                          l7702 4F48                            l7542 43CC                            l7534 41FA  
                          l7526 41CE                            l7446 1D88                            l8270 10FE  
                          l8246 0FFC                            l7720 3D3E                            l8440 35B4  
                          l8408 34BA                            l8360 3330                            l8344 32DC  
                          l6752 29CE                            l6728 292E                            l6680 279E  
                          l6656 2710                            l6584 25C4                            l6576 2598  
                          l7704 4F58                            l6912 4CC0                            l7464 200E  
                          l8264 10C8                            l8248 1004                            l8256 10A0  
                          l7800 3F84                            l7730 3D7E                            l8354 330C  
                          l6746 29BE                            l6738 298A                            l6674 278E  
                          l6666 2750                            l7706 4F5E                            l7570 449A  
                          l7562 4446                            l6914 4CCC                            l6906 4CA2  
                          l6850 2D58                            l7458 1F3C                            l8282 1190  
                          l8266 10DC                            l8258 10AE                            l8194 0D7E  
                          l8186 0CFA                            l7378 0ABE                            l7802 3FC8  
                          l7740 3E28                            l7732 3DBC                            l8444 35E2  
                          l8364 333A                            l7628 51D4                            l6676 2794  
                          l6684 27B0                            l6596 25FC                            l7548 43F2  
                          l7492 40EC                            l6932 4D24                            l6924 4D02  
                          l6916 4CD2                            l6860 2DAC                            l6844 2D2E  
                          l7476 52D4                            l8292 1284                            l7726 3D66  
                          l8606 4928                            l8454 3628                            l8446 35F6  
                          l6758 29E2                            l6694 2880                            l7654 484A  
                          l7638 47DC                            l7582 44D2                            l7486 40B2  
                          l6870 2E02                            l6774 2A36                            l8294 1292  
                          l8278 112E                            l8198 0DB0                            l7840 1464  
                          l7752 3EA0                            l7728 3D6E                            l8616 4936  
                          l8456 362C                            l8448 3618                            l8384 33BC  
                          l8376 338E                            l7672 48B0                            l7664 487A  
                          l7592 4502                            l6928 4D10                            l6960 4E60  
                          l6952 4E2A                            l6944 4E06                            l6792 2A90  
                          l6776 2A3C                            l6768 2A12                            l8800 3100  
                          l7738 3E18                            l8394 343A                            l7666 488A  
                          l7658 485E                            l7682 4D5C                            l7594 4512  
                          l7586 44E6                            l6954 4E36                            l6874 2E28  
                          l6794 2A96                            l6786 2A6C                            l6778 2A4E  
                          l8650 4724                            l8810 318E                            l7916 16E8  
                          l7860 155E                            l8628 49B4                            l7668 4894  
                          l7684 4D6C                            l6956 4E3C                            l6964 4E6E  
                          l6948 4E16                            l6884 2E76                            l6876 2E3C  
                          l8652 4736                            l8804 3184                            l7942 1802  
                          l7694 4DC6                            l7686 4D72                            l6886 2E80  
                          l6798 2ABC                            l8654 4746                            l6974 536E  
                          l7936 17E2                            l8576 5062                            l6968 4E82  
                          l6992 3708                            l8816 320E                            l7866 157E  
                          l7794 3F66                            l8596 48E8                            l7796 3F7C  
                          l8756 2ECE                            l8780 2FEE                            l8748 2E9E  
                          l8790 3018                            l8774 2FD6                            l7992 196C  
                          l8778 2FE8                            l8788 300C                            STR_1 FFAC  
                          STR_2 FF82                            STR_3 FF6D                            STR_4 FFAC  
                          STR_5 FF97                            STR_6 FFCF                            STR_7 FFF9  
                          STR_8 FFEF                            STR_9 FFFD                            _LATA 000F89  
                          _LATB 000F8A                            _LATC 000F8B                            _LATD 000F8C  
                          _LATE 000F8D                            u9000 38AE                            u8105 5148  
                          u8106 514A                            u8115 5154                            u8116 5156  
                          u8125 5160                            u9005 38A2                            u8126 5162  
                          u8230 26B6                            u9110 003A                            u8135 516C  
                          u8136 516E                            u8240 26CE                            u8250 26D0  
                          u9115 002E                            u9205 020C                            u9125 009A  
                          u9310 03DA                            u9230 0266                            u9150 00F2  
                          u9400 0554                            u9080 39C6                            u8610 2CD0  
                          u9315 03CE                            u9235 025A                            u9155 00E6  
                          u9405 0548                            u9325 043A                            u9245 02C6  
                          u9165 0152                            u9085 39BA                            u9270 0320  
                          u9190 01AC                            u8615 2CC4                            u9275 0314  
                          u9195 01A0                            u9285 0380                            u8910 373A  
                          u9800 0ADE                            u9720 09C2                            u9640 08A6  
                          u9560 078A                            u9480 066E                            u8690 2E16  
                          u8915 372E                            u9901 408E                            u9805 0AD2  
                          u9725 09B6                            u9645 089A                            u9565 077E  
                          u9485 0662                            u8925 379A                            u8870 3684  
                          u9921 40C8                            u8875 3678                            u8885 36E4  
           __size_of_CANSetMask 039E                            _data 0028                            _main 2E9A  
     __size_of_LCD_send_command 003A                            fsr0h 000FEA                            fsr1h 000FE2  
                          fsr0l 000FE9                            fsr2h 000FDA                            indf1 000FE7  
                          fsr1l 000FE1                            indf2 000FDF                            fsr2l 000FD9  
                          btemp 0048                            pclat 000FFA                            prodh 000FF4  
                          prodl 000FF3                            start 00C2                   __CFG_IESO$OFF 000000  
               ___fldiv@new_exp 007F              __size_of_LCD_clear 0032                __end_of_CAN_Send 4F2C  
                  _sprintf$4193 0100                   __CFG_MCLRE$ON 000000                    ___param_bank 000010  
      __end_of_LCD_enable_pulse 534A                   _LCD_backlight 5392                _CANOperationMode 5366  
       __size_of_LCD_initialize 016E      __size_of_CANreceiveMessage 050C                   ___fltol@sign1 00A6  
               __end_of___fladd 29F4                           ?_main 0029                 __end_of___fldiv 3650  
               __end_of___awdiv 4D2E                 __end_of___flneg 51E6                           STR_10 FFDB  
                         STR_11 FFF4                           STR_12 FFAC                           STR_13 FFE7  
                         STR_14 FFC1                 __end_of___awmod 4E8C                 __end_of___flmul 2E9A  
               __end_of___flsub 50F8                 __end_of___fltol 48C2                 __end_of___lldiv 4DEA  
                         u10130 47FC                           u10135 47F0                           u11060 10F2  
                         u10600 1708                           u10610 1754                 ___awdiv@divisor 0076  
                         u10605 16FC                           u10470 1484                           u11430 5360  
                         u10615 1748                           u10480 14D0                           u11360 35C8  
                         u10625 17B4                 __end_of___llmod 4FC6                           u10730 198C  
                         u10475 1478                           u10740 19D8                           u10485 14C4  
                         u11445 5362                           u11470 5090                           u10735 1980  
                         u10495 1530                           u10745 19CC                           u10755 1A38  
                         u10835 53A0                           u11476 5092                           u10836 53A2  
                         u11840 31FA                           u11760 2FA4                           _T3CON 000FB1  
                         u11850 327A                           u11770 2FBC                           u11776 2FBE  
                         u11867 5194                           i1l735 007A                           i2l418 22D8  
                         i2l731 4C34                           i2l728 4C30                           i2l569 538E  
               ___awdiv@counter 0078                           _TMR3H 000FB3                           _TMR3L 000FB2  
             _CANisRxReady$3229 003A                           _TRISA 000F92                           _TRISB 000F93  
                         _TRISC 000F94                           _TRISD 000F95                           _TRISE 000F96  
                 __CFG_PWRT$OFF 000000                   __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000  
                 __CFG_WRT2$OFF 000000                   __CFG_WRT3$OFF 000000                   __CFG_WRT4$OFF 000000  
            __size_of_ISR_bassa 00AA                   __CFG_WRT5$OFF 000000                  __CFG_EBTR0$OFF 000000  
                __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000              CANInitialize@flags 0080  
                __CFG_EBTR2$OFF 000000                  __CFG_EBTR3$OFF 000000                  __CFG_EBTR4$OFF 000000  
              __end_of_ISR_alta 4C70                  __CFG_EBTR5$OFF 000000                   __CFG_WRTB$OFF 000000  
                 __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000                  __CFG_EBTRB$OFF 000000  
               __end_of_dpowers FF6D                           _scale 1B26                 __end_of_isdigit 52DE  
                __pbitbssCOMRAM 0238            __end_of_CANisRxReady 5392                           tablat 000FF5  
          __end_of_CANisTxReady 5328                           status 000FD8                 __end_of_sprintf 139A  
           __size_of_LCD_cursor 0032                 __initialization 50F8                  ?_LCD_backlight 0029  
                  __end_of_main 3290   __size_of_board_initialization 00DE                   _LCD_goto_line 49C8  
             ?_Joystick_Polling 0029              ??_Joystick_Polling 006E               ?_LCD_write_string 007F  
                        ??_main 0119                   __activetblptr 000003                  _JoystickValues 00E4  
            ??_LCD_write_string 0081            __size_of__tdiv_to_l_ 019E               _CANisTxReady$3227 006E  
      __size_of_CAN_interpreter 0106               __end_of_LCD_clear 52B4          LCD_write_string@buffer 007F  
                        _ADCON1 000FC1                          _CANCON 000F6F                ___llmod@dividend 006E  
                        ?_scale 0095                          _ADRESH 000FC4                ___awdiv@dividend 0074  
               __CFG_BBSIZ$1024 000000                          i2l6120 24DE                          i2l6112 24A6  
                        i2l6104 2438                          i2l6130 2548                          i2l6050 2228  
                        i2l6042 21B8                          i2l6124 24FA                          i2l6116 24C2  
                        i2l6062 2282                          i2l6054 2246                          i2l6128 2516  
                        i2l6066 22A0                          i2l6058 2264                          i2l6068 22D2  
                        i2l8730 4BEA                          i2l8740 4C08                          i2l8724 4BCA  
                        i2l8736 4C00                          _RXB0D0 000F66                          _RXB0D1 000F67  
                        _RXB0D2 000F68                          _RXB0D3 000F69                          _RXB0D4 000F6A  
                        _RXB1D0 000F56                          _RXB0D5 000F6B                          _RXB1D1 000F57  
                        _RXB0D6 000F6C                          _RXB1D2 000F58                          _RXB0D7 000F6D  
                        _RXB1D3 000F59                          _RXB1D4 000F5A                          _RXB1D5 000F5B  
                        _RXB1D6 000F5C                          _RXB1D7 000F5D                          _TXB0D0 000F46  
                        _TXB0D1 000F47                          _TXB0D2 000F48                          _TXB0D3 000F49  
                        _TXB1D0 000F36                          _TXB0D4 000F4A                          _TXB1D1 000F37  
                        _TXB0D5 000F4B                          _TXB1D2 000F38                          _TXB0D6 000F4C  
                        _TXB1D3 000F39                          _TXB0D7 000F4D                          _TXB2D0 000F26  
                        _TXB1D4 000F3A                          _TXB2D1 000F27                          _TXB1D5 000F3B  
                        _TXB2D2 000F28                          _TXB1D6 000F3C                          _TXB2D3 000F29  
                        _TXB1D7 000F3D                          _TXB2D4 000F2A                          _TXB2D5 000F2B  
                        _TXB2D6 000F2C                          _TXB2D7 000F2D              CANsendMessage@data 0072  
            CANsendMessage@tamp 007A                __end_of___xxtofl 3EB2                 _switch_position 00EB  
              __end_of_delay_ms 51AE           __size_of_CANSetFilter 0B06                  __CFG_XINST$OFF 000000  
             __end_of_ISR_bassa 00C2                __end_of__powers_ FF45                      _MotoreFlag 0239  
                ?_LCD_goto_line 0029                          ___flge 4216                       ??___fladd 00AA  
              _delay_set_quartz 53A4                          ___wmul 51E6                       ??___fldiv 0076  
                     ??___awdiv 0078                       ??___flneg 0072                  __CFG_STVREN$ON 000000  
                     ??___awmod 0072                       ??___flmul 0084                       ??___flsub 00BE  
                     ??___fltol 00A2                       ??___lldiv 0076                       ??___llmod 0076  
                  ??_CANSetMask 0073         __size_of_LCD_write_char 0096                          _fround 39EE  
LCD_initialize@quartz_frequency 007C                          clear_0 50FE                          clear_1 510A  
                        clear_2 5118                ___awdiv@quotient 007A                 ___awmod@divisor 0070  
          __size_of_LCD_Handler 011A                 ___awmod@counter 0072                 __CFG_BOREN$BOHW 000000  
             _JoystickConstants 00C8                       ??_isdigit 006E                    __mediumconst FEDC  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
                     ?_CAN_Send 0029                       ??_sprintf 00C6                    _CANSetFilter 0000  
                    ___flge@ff1 006E                      ___flge@ff2 0072                    ___xxtofl@arg 0078  
                  ___xxtofl@exp 0077                    ___xxtofl@val 006E                      __accesstop 0060  
       __end_of__initialization 5130              __end_of_CANSetMask 39EE                 __CFG_PBADEN$OFF 000000  
                    _SterzoFlag 023B                      ___flneg@f1 006E                _LCD_send_command 513A  
                 ___rparam_used 000001                      ___fltol@f1 009E                 ??_LCD_backlight 006E  
                __pcstackCOMRAM 0029                    __pidataBANK0 53AE                       ?_ISR_alta 0029  
                 __end_of_scale 2040                  _LCD_initialize 452E               _LCD_write_message 521C  
         CANSetFilter@numBuffer 0077              ?_LCD_write_message 007F                      __div_to_l_ 43A6  
                  ??_LCD_cursor 007B                   _newMessageCan 023C                    _actual_speed 0007  
         __size_of_CANisRxReady 0016           __size_of_CANisTxReady 0024                      ??_CAN_Send 007E  
               __div_to_l_@exp1 007B             ??_LCD_write_message 0081                 __div_to_l_@cntr 007A  
                       ??_scale 0099                 __div_to_l_@quot 0076        __end_of_CANOperationMode 537C  
                    __pbssBANK0 00C8                      __pbssBANK1 0121               ??_CAN_interpreter 007E  
                    _data_brake 00EC         __size_of_CANsendMessage 078C                      _data_speed 00ED  
                 __div_to_l_@f1 006E                   __div_to_l_@f2 0072                 ??_LCD_goto_line 007A  
            __end_of_LCD_cursor 5282          __end_of_LCD_initialize 469C                         ?___flge 006E  
                       ?___wmul 006E                      ??_ISR_alta 0060       __end_of_LCD_write_message 5250  
             ?_LCD_enable_pulse 0029                         ?_fround 0095                    _CANisRxReady 537C  
                       _CANSTAT 000F6E              ??_LCD_enable_pulse 0076                    _CANisTxReady 5304  
                     ISR_alta@i 0046                         _BRGCON1 000F70                         _BRGCON2 000F71  
                       _BRGCON3 000F72     __size_of_PWR_Button_Polling 001C                       ?___xxtofl 006E  
        __size_of_CANInitialize 01C6                LCD_cursor@active 007B                       ?_delay_ms 0074  
                       _RXB0DLC 000F65                         _RXB1DLC 000F55                         _RXB0CON 000F60  
                       _RXB1CON 000F50                         _TXB0DLC 000F45                         _TXB1DLC 000F35  
                       _TXB2DLC 000F25             CANsendMessage@flags 0075                         _AbsFlag 0238  
             __end_of__npowers_ FF11                         __Hparam 0000                      _left_speed 0013  
                    _scale$4192 0099                         __Lparam 0000                delay_ms@value_ms 0074  
               ?_LCD_initialize 0029                 __size_of___flge 0190                         ___fladd 254C  
                       ___fldiv 3290                         ___awdiv 4C70                         ___flneg 51AE  
                       ___awmod 4DEA                         ___flmul 29F4                         ___flsub 50B0  
                       ___fltol 47B6                         ___lldiv 4D2E                 __size_of___wmul 0036  
                _LCD_write_char 4FC6                         ___llmod 4F2C            CANInitialize@propSeg 0085  
                       __pcinit 50F8                         _battery 0017                 __size_of_fround 02F6  
                       __ramtop 0D00             LCD_write_char@value 007E                         __ptext0 2E9A  
                       __ptext1 4AB4                         __ptext2 452E                         __ptext3 53A4  
                       __ptext4 5250                         __ptext5 5392                         __ptext6 3EB2  
                       __ptext7 3650                         __ptext8 0000                         __ptext9 5366  
                   ?__div_to_l_ 006E                LCD_write_char@D0 007D                LCD_write_char@D1 007C  
              LCD_write_char@D2 007B                LCD_write_char@D3 007A                         _dpowers FF45  
                       _isdigit 52B4                      ??___xxtofl 0072                ___awmod@dividend 006E  
                    ??_delay_ms 0076          CANreceiveMessage@error 0044    __end_of_board_initialization 4B92  
     __size_of_Joystick_Polling 0054        __end_of_delay_set_quartz 53AE                         _sprintf 0B06  
                __pintcode_body 4B92                       _LCD_clear 5282            end_of_initialization 5130  
     __size_of_LCD_write_string 0026                         int_func 4B92                       i2u1171_40 4BE8  
           LCD_backlight@active 006E                   _CANInitialize 3EB2                 ___lldiv@divisor 0072  
            LCD_cursor@blinking 007A                 ___lldiv@counter 007A          __end_of_LCD_write_char 505C  
                       postdec2 000FDD                         postinc0 000FEE                         postinc2 000FDE  
    __size_of_LCD_write_message 0034                  __tdiv_to_l_@f1 006E                  __tdiv_to_l_@f2 0072  
                     _ISR_bassa 0018                   ??__tdiv_to_l_ 0076                       _PORTAbits 000F80  
                     _PORTBbits 000F81                  CANSetMask@mask 006E                       _PORTDbits 000F83  
                CANSetMask@tamp 0078        __end_of_LCD_send_command 5174                  CANSetMask@type 0072  
                   ___fladd@grs 00B5                   ___xxtofl@sign 0076                     ___fldiv@grs 0081  
                   ___fldiv@rem 007B                      ?_LCD_clear 0029               __size_of_CAN_Send 00A0  
       _clock_counter_reference 00E6                     ___flmul@grs 008A                  _CANsendMessage 139A  
              CANInitialize@BRP 007F                CANInitialize@SJW 007E                  ?_CANInitialize 007C  
           __size_of__div_to_l_ 0188         LCD_write_integer@F17272 0001                 ?_LCD_write_char 0029  
                 ??_LCD_Handler 00C8                  __end_of___flge 43A6                      ?_ISR_bassa 0029  
                __end_of___wmul 521C               __size_of_ISR_alta 4C68                  __end_of_fround 3CE4  
               _CAN_interpreter 48C2             start_initialization 50F8             __end_of__tdiv_to_l_ 4216  
           CANSetMask@numBuffer 0077          __end_of_CANsendMessage 1B26               ?_CANOperationMode 0029  
                 _data_steering 00EE              ??_CANOperationMode 006E                 ___llmod@divisor 0072  
    CANInitialize@FilterConfig1 0086      CANInitialize@FilterConfig2 0087                 ___llmod@counter 0076  
         __end_of_LCD_backlight 53A4                        ??___flge 0076            _board_initialization 4AB4  
                      ??___wmul 0072                     __pdataBANK0 00EF                __CFG_LPT1OSC$OFF 000000  
                      ??_fround 0099                   sprintf@tmpval 010E                       ___fladd@a 00A6  
                     ___fladd@b 00A2          CANInitialize@phaseSeg1 007C          CANInitialize@phaseSeg2 007D  
                    fround@prec 00A1             __end_of_LCD_Handler 47B6                       ___fldiv@a 0072  
                     ___fldiv@b 006E                       ___flmul@a 0080                       ___flmul@b 007C  
                   __pbssCOMRAM 0001                       ___flsub@a 00BA                       ___flsub@b 00B6  
                 __pcstackBANK0 0060                   __pcstackBANK1 0100                     _BRGCON2bits 000F71  
                   _BRGCON3bits 000F72                _Joystick_Polling 505C               __size_of___xxtofl 01CE  
     __size_of_LCD_enable_pulse 0022                    _isdigit$3772 006F               __size_of_delay_ms 003A  
                   ??_LCD_clear 007A                 ?_CANsendMessage 006E         LCD_write_message@buffer 007F  
              _LCD_write_string 52DE                 ??_CANInitialize 0081                     sprintf@flag 0106  
                   sprintf@fval 0114                     sprintf@prec 0112                ??_LCD_initialize 007C  
            CANSetFilter@filter 006E       delay_set_quartz@frequency 006E              LCD_send_command@D0 0078  
            LCD_send_command@D1 0077              LCD_send_command@D2 0076              LCD_send_command@D3 0079  
         __end_of_LCD_goto_line 4AB4           ?_board_initialization 0029                       __pintcode 0008  
                 __pmediumconst FEDC                        ?___fladd 00A2                        ?___fldiv 006E  
                      ?___awdiv 0074                        ?___flneg 006E                        ?___awmod 006E  
                      ?___flmul 007C         __end_of_CAN_interpreter 49C8                        ?___flsub 00B6  
                      ?___fltol 009E                        ?___lldiv 006E                        ?___llmod 006E  
                     __npowers_ FEDD                     ??_ISR_bassa 0029                     __pintcodelo 0018  
    __end_of_PWR_Button_Polling 5366                     __tdiv_to_l_ 4078                    ??__div_to_l_ 0076  
                   _COMSTATbits 000F74                        ?_isdigit 0029                        _CAN_Send 4E8C  
                      ?_sprintf 00BE                  __size_of_scale 051A               ?_delay_set_quartz 0029  
         CANreceiveMessage@tamp 0045              ??_delay_set_quartz 006E                  ___wmul@product 0072  
                      _LATCbits 000F8B                        _LATDbits 000F8C                        _LATEbits 000F8D  
                      _IPR2bits 000FA2    _delay_quartz_frequency_value 00EF                        _IPR3bits 000FA5  
                      _PIE2bits 000FA0                        _PIE3bits 000FA3              __end_of__div_to_l_ 452E  
                      _PIR2bits 000FA1                        _PIR3bits 000FA4                        i2u741_45 213C  
                      i2u750_40 23AA                        i2u750_46 23AC                        i2u752_45 23BE  
                      i2u738_40 20F8                        i2u738_46 20FA                        i2u739_40 2126  
                      i2u747_45 22AC                        i2u739_46 2128                        i2u749_40 2380  
                      i2u749_46 2382                        i2u758_45 2522                        _RXB0EIDH 000F63  
                      _RXB0EIDL 000F64                        _RXB1EIDH 000F53                       _pr_time_1 00D4  
                     _pr_time_2 00D8                        _RXB1EIDL 000F54                       _pr_time_3 00DC  
                     _pr_time_4 000F                       _set_speed 00E8                        _RCONbits 000FD0  
              __CFG_WDTPS$32768 000000                        _RXB0SIDH 000F61                        _RXB0SIDL 000F62  
                      _RXF0EIDH 000F02                        _RXB1SIDH 000F51                        _RXF0EIDL 000F03  
                      _RXB1SIDL 000F52                        _RXF1EIDH 000F06                        _RXF1EIDL 000F07  
                      _RXF2EIDH 000F0A                        _RXF2EIDL 000F0B                        _RXF3EIDH 000F0E  
                      _RXF3EIDL 000F0F                        _RXF4EIDH 000F12                        _RXF4EIDL 000F13  
                      _RXF5EIDH 000F16                        _RXF5EIDL 000F17                        _RXF0SIDH 000F00  
                      _RXF0SIDL 000F01                        _TXB0EIDH 000F43                        _RXF1SIDH 000F04  
                      _TXB0EIDL 000F44                        _RXF1SIDL 000F05                        _TXB1EIDH 000F33  
                      _RXF2SIDH 000F08                        _TXB1EIDL 000F34                        _RXF2SIDL 000F09  
                      _ISR_alta 0008                        _TXB2EIDH 000F23                        _RXF3SIDH 000F0C  
                      _TXB2EIDL 000F24                        _RXF3SIDL 000F0D                        _RXF4SIDH 000F10  
                      _RXF4SIDL 000F11                        _RXF5SIDH 000F14                        _RXF5SIDL 000F15  
                      _RXM0EIDH 000F1A                        _RXM0EIDL 000F1B                        _TXB0SIDH 000F41  
                      _RXM1EIDH 000F1E                        _TXB0SIDL 000F42                        _RXM1EIDL 000F1F  
                      _TXB1SIDH 000F31                        _TXB1SIDL 000F32                        _TXB2SIDH 000F21  
                      _TXB2SIDL 000F22                     _LCD_Handler 469C                        _RXM0SIDH 000F18  
                      _RXM0SIDL 000F19                        _RXM1SIDH 000F1C                        _RXM1SIDL 000F1D  
                      _RXERRCNT 000F75                        _TXERRCNT 000F76                      _ADCON0bits 000FC2  
                    _ADCON2bits 000FC0               ___wmul@multiplier 006E                        _RTR_Flag 023A  
             ?_LCD_send_command 0076                _actual_speed_kmh 00D0              ??_LCD_send_command 0079  
                 ?_CANSetFilter 006E                      _CANCONbits 000F6F                ??_LCD_write_char 007A  
             LCD_goto_line@line 007A                        __Hrparam 0000                    _RXB0SIDLbits 000F62  
        ??_board_initialization 0088                        __Lrparam 0000                    _RXB1SIDLbits 000F52  
              ?_CAN_interpreter 0029                __size_of___fladd 04A8                      _CANSetMask 3650  
              __size_of___fldiv 03C0                __size_of___awdiv 00BE                __size_of___flneg 0038  
              __size_of___awmod 00A2                __size_of___flmul 04A6                __size_of___flsub 0048  
              __size_of___fltol 010C                __size_of___lldiv 00BC                __size_of___llmod 009A  
                   _fround$4190 009D                     _fround$4191 0099                      sprintf@exp 010C  
                    sprintf@val 0108                        ___xxtofl 3CE4                    _RXF0SIDLbits 000F01  
              __size_of_isdigit 002A                        _delay_ms 5174                    _RXF1SIDLbits 000F05  
                ??_CANSetFilter 0073                _LCD_enable_pulse 5328                        __ptext10 534A  
                      __ptext11 469C                        __ptext20 43A6                        __ptext12 0B06  
                      __ptext21 4F2C                        __ptext13 1B26                        __ptext30 521C  
                      __ptext22 4D2E                        __ptext14 52B4                        __ptext31 4FC6  
                      __ptext23 47B6                        __ptext15 39EE                        __ptext40 3CE4  
                      __ptext32 49C8                        __ptext24 50B0                        __ptext16 29F4  
                      __ptext41 5304                        __ptext33 5282                        __ptext25 254C  
                      __ptext17 4DEA                        __ptext42 4E8C                        __ptext34 513A  
                      __ptext26 51AE                        __ptext18 4C70                        __ptext43 139A  
                      __ptext35 5328                        __ptext27 4216                        __ptext19 4078  
                      __ptext36 5174                        __ptext28 3290                        __ptext37 51E6  
                      __ptext29 52DE                        __ptext46 2040                        __ptext38 505C  
                      __ptext47 537C                        __ptext39 48C2                    _RXF2SIDLbits 000F09  
                      __powers_ FF11                    _RXF3SIDLbits 000F0D                __size_of_sprintf 0894  
                  _RXF4SIDLbits 000F11                    _RXF5SIDLbits 000F15        CANsendMessage@dataLength 0074  
                 __size_of_main 03F6            CANreceiveMessage@msg 003A                    _TXB0SIDLbits 000F42  
             Joystick_Polling@i 006F                    _TXB1SIDLbits 000F32                        _wait_low 023E  
      __end_of_Joystick_Polling 50B0                    _TXB2SIDLbits 000F22                        int$flags 0048  
     __size_of_CANOperationMode 0016                   ?_CANisRxReady 0029                   ?_CANisTxReady 0029  
      __end_of_LCD_write_string 5304                     _RXB0DLCbits 000F65                     _RXB1DLCbits 000F55  
                  _RXM0SIDLbits 000F19                     _RXB0CONbits 000F60                      _LCD_cursor 5250  
                   _RXB1CONbits 000F50               _CANreceiveMessage 2040                    _RXM1SIDLbits 000F1D  
                    _INTCONbits 000FF2                    _set_steering 0018                ??_CANsendMessage 0076  
            ?_CANreceiveMessage 003A                        isdigit@c 0070                        scale@scl 009D  
      CANsendMessage@identifier 006E                    _time_counter 00E0                        intlevel1 0000  
                      intlevel2 0000                       sprintf@ap 0104                __tdiv_to_l_@exp1 007E  
                     sprintf@sp 00BE                __tdiv_to_l_@cntr 007D                CANSetFilter@tamp 0078  
              __tdiv_to_l_@quot 0079                CANSetFilter@type 0072             ??_CANreceiveMessage 003C  
              ___lldiv@dividend 006E                     _TXB0DLCbits 000F45                     _right_speed 0015  
                   _TXB1DLCbits 000F35                     _TXB0CONbits 000F40                     _TXB2DLCbits 000F25  
                   _TXB1CONbits 000F30                     _TXB2CONbits 000F20            CANOperationMode@mode 006E  
                ??_CANisRxReady 003A                     ?_CANSetMask 006E                  ??_CANisTxReady 006E  
                  ?__tdiv_to_l_ 006E       __end_of_CANreceiveMessage 254C                        sprintf@c 0118  
                      sprintf@f 00C0                ___lldiv@quotient 0076          __size_of_LCD_backlight 0012  
                 ___fladd@signs 00B2              _PWR_Button_Polling 534A                    ___fladd@aexp 00B3  
                  ___fladd@bexp 00B4           __end_of_CANInitialize 4078             ?_PWR_Button_Polling 0029  
                  _power_switch 023D  
