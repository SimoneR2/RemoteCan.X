

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue May 31 20:31:36 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    78                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    79                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    85                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    86  0000                     
    87                           	psect	idataBANK0
    88  015F68                     __pidataBANK0:
    89                           	opt stack 0
    90                           
    91                           ;initializer for _delay_quartz_frequency_value
    92  015F68  10                 	db	16
    93                           
    94                           	psect	mediumconst
    95  00FD9E                     __pmediumconst:
    96                           	opt stack 0
    97  00FD9E  00                 	db	0
    98  00FD9F                     __npowers_:
    99                           	opt stack 0
   100  00FD9F  0000               	dw	0
   101  00FDA1  3F80               	dw	16256
   102  00FDA3  CCCD               	dw	52429
   103  00FDA5  3DCC               	dw	15820
   104  00FDA7  D70A               	dw	55050
   105  00FDA9  3C23               	dw	15395
   106  00FDAB  126F               	dw	4719
   107  00FDAD  3A83               	dw	14979
   108  00FDAF  B717               	dw	46871
   109  00FDB1  38D1               	dw	14545
   110  00FDB3  C5AC               	dw	50604
   111  00FDB5  3727               	dw	14119
   112  00FDB7  37BD               	dw	14269
   113  00FDB9  3586               	dw	13702
   114  00FDBB  BF95               	dw	49045
   115  00FDBD  33D6               	dw	13270
   116  00FDBF  CC77               	dw	52343
   117  00FDC1  322B               	dw	12843
   118  00FDC3  705F               	dw	28767
   119  00FDC5  3089               	dw	12425
   120  00FDC7  E6FF               	dw	59135
   121  00FDC9  2EDB               	dw	11995
   122  00FDCB  E508               	dw	58632
   123  00FDCD  1E3C               	dw	7740
   124  00FDCF  4260               	dw	16992
   125  00FDD1  0DA2               	dw	3490
   126  00FDD3                     __end_of__npowers_:
   127                           	opt stack 0
   128  00FDD3                     __powers_:
   129                           	opt stack 0
   130  00FDD3  0000               	dw	0
   131  00FDD5  3F80               	dw	16256
   132  00FDD7  0000               	dw	0
   133  00FDD9  4120               	dw	16672
   134  00FDDB  0000               	dw	0
   135  00FDDD  42C8               	dw	17096
   136  00FDDF  0000               	dw	0
   137  00FDE1  447A               	dw	17530
   138  00FDE3  4000               	dw	16384
   139  00FDE5  461C               	dw	17948
   140  00FDE7  5000               	dw	20480
   141  00FDE9  47C3               	dw	18371
   142  00FDEB  2400               	dw	9216
   143  00FDED  4974               	dw	18804
   144  00FDEF  9680               	dw	38528
   145  00FDF1  4B18               	dw	19224
   146  00FDF3  BC20               	dw	48160
   147  00FDF5  4CBE               	dw	19646
   148  00FDF7  6B28               	dw	27432
   149  00FDF9  4E6E               	dw	20078
   150  00FDFB  02F9               	dw	761
   151  00FDFD  5015               	dw	20501
   152  00FDFF  78EC               	dw	30956
   153  00FE01  60AD               	dw	24749
   154  00FE03  F2CA               	dw	62154
   155  00FE05  7149               	dw	29001
   156  00FE07                     __end_of__powers_:
   157                           	opt stack 0
   158  00FE07                     _dpowers:
   159                           	opt stack 0
   160  00FE07  0001               	dw	1
   161  00FE09  0000               	dw	0
   162  00FE0B  000A               	dw	10
   163  00FE0D  0000               	dw	0
   164  00FE0F  0064               	dw	100
   165  00FE11  0000               	dw	0
   166  00FE13  03E8               	dw	1000
   167  00FE15  0000               	dw	0
   168  00FE17  2710               	dw	10000
   169  00FE19  0000               	dw	0
   170  00FE1B  86A0               	dw	34464
   171  00FE1D  0001               	dw	1
   172  00FE1F  4240               	dw	16960
   173  00FE21  000F               	dw	15
   174  00FE23  9680               	dw	38528
   175  00FE25  0098               	dw	152
   176  00FE27  E100               	dw	57600
   177  00FE29  05F5               	dw	1525
   178  00FE2B  CA00               	dw	51712
   179  00FE2D  3B9A               	dw	15258
   180  00FE2F                     __end_of_dpowers:
   181                           	opt stack 0
   182  0000                     _RXB1CON	set	3920
   183  0000                     _RXB1CONbits	set	3920
   184  0000                     _RXB1D0	set	3926
   185  0000                     _RXB1D1	set	3927
   186  0000                     _RXB1D2	set	3928
   187  0000                     _RXB1D3	set	3929
   188  0000                     _RXB1D4	set	3930
   189  0000                     _RXB1D5	set	3931
   190  0000                     _RXB1D6	set	3932
   191  0000                     _RXB1D7	set	3933
   192  0000                     _RXB1DLC	set	3925
   193  0000                     _RXB1DLCbits	set	3925
   194  0000                     _RXB1EIDH	set	3923
   195  0000                     _RXB1EIDL	set	3924
   196  0000                     _RXB1SIDH	set	3921
   197  0000                     _RXB1SIDL	set	3922
   198  0000                     _RXB1SIDLbits	set	3922
   199  0000                     _RXF0EIDH	set	3842
   200  0000                     _RXF0EIDL	set	3843
   201  0000                     _RXF0SIDH	set	3840
   202  0000                     _RXF0SIDL	set	3841
   203  0000                     _RXF0SIDLbits	set	3841
   204  0000                     _RXF1EIDH	set	3846
   205  0000                     _RXF1EIDL	set	3847
   206  0000                     _RXF1SIDH	set	3844
   207  0000                     _RXF1SIDL	set	3845
   208  0000                     _RXF1SIDLbits	set	3845
   209  0000                     _RXF2EIDH	set	3850
   210  0000                     _RXF2EIDL	set	3851
   211  0000                     _RXF2SIDH	set	3848
   212  0000                     _RXF2SIDL	set	3849
   213  0000                     _RXF2SIDLbits	set	3849
   214  0000                     _RXF3EIDH	set	3854
   215  0000                     _RXF3EIDL	set	3855
   216  0000                     _RXF3SIDH	set	3852
   217  0000                     _RXF3SIDL	set	3853
   218  0000                     _RXF3SIDLbits	set	3853
   219  0000                     _RXF4EIDH	set	3858
   220  0000                     _RXF4EIDL	set	3859
   221  0000                     _RXF4SIDH	set	3856
   222  0000                     _RXF4SIDL	set	3857
   223  0000                     _RXF4SIDLbits	set	3857
   224  0000                     _RXF5EIDH	set	3862
   225  0000                     _RXF5EIDL	set	3863
   226  0000                     _RXF5SIDH	set	3860
   227  0000                     _RXF5SIDL	set	3861
   228  0000                     _RXF5SIDLbits	set	3861
   229  0000                     _RXM0EIDH	set	3866
   230  0000                     _RXM0EIDL	set	3867
   231  0000                     _RXM0SIDH	set	3864
   232  0000                     _RXM0SIDL	set	3865
   233  0000                     _RXM0SIDLbits	set	3865
   234  0000                     _RXM1EIDH	set	3870
   235  0000                     _RXM1EIDL	set	3871
   236  0000                     _RXM1SIDH	set	3868
   237  0000                     _RXM1SIDL	set	3869
   238  0000                     _RXM1SIDLbits	set	3869
   239  0000                     _TXB0CONbits	set	3904
   240  0000                     _TXB0D0	set	3910
   241  0000                     _TXB0D1	set	3911
   242  0000                     _TXB0D2	set	3912
   243  0000                     _TXB0D3	set	3913
   244  0000                     _TXB0D4	set	3914
   245  0000                     _TXB0D5	set	3915
   246  0000                     _TXB0D6	set	3916
   247  0000                     _TXB0D7	set	3917
   248  0000                     _TXB0DLC	set	3909
   249  0000                     _TXB0DLCbits	set	3909
   250  0000                     _TXB0EIDH	set	3907
   251  0000                     _TXB0EIDL	set	3908
   252  0000                     _TXB0SIDH	set	3905
   253  0000                     _TXB0SIDL	set	3906
   254  0000                     _TXB0SIDLbits	set	3906
   255  0000                     _TXB1CONbits	set	3888
   256  0000                     _TXB1D0	set	3894
   257  0000                     _TXB1D1	set	3895
   258  0000                     _TXB1D2	set	3896
   259  0000                     _TXB1D3	set	3897
   260  0000                     _TXB1D4	set	3898
   261  0000                     _TXB1D5	set	3899
   262  0000                     _TXB1D6	set	3900
   263  0000                     _TXB1D7	set	3901
   264  0000                     _TXB1DLC	set	3893
   265  0000                     _TXB1DLCbits	set	3893
   266  0000                     _TXB1EIDH	set	3891
   267  0000                     _TXB1EIDL	set	3892
   268  0000                     _TXB1SIDH	set	3889
   269  0000                     _TXB1SIDL	set	3890
   270  0000                     _TXB1SIDLbits	set	3890
   271  0000                     _TXB2CONbits	set	3872
   272  0000                     _TXB2D0	set	3878
   273  0000                     _TXB2D1	set	3879
   274  0000                     _TXB2D2	set	3880
   275  0000                     _TXB2D3	set	3881
   276  0000                     _TXB2D4	set	3882
   277  0000                     _TXB2D5	set	3883
   278  0000                     _TXB2D6	set	3884
   279  0000                     _TXB2D7	set	3885
   280  0000                     _TXB2DLC	set	3877
   281  0000                     _TXB2DLCbits	set	3877
   282  0000                     _TXB2EIDH	set	3875
   283  0000                     _TXB2EIDL	set	3876
   284  0000                     _TXB2SIDH	set	3873
   285  0000                     _TXB2SIDL	set	3874
   286  0000                     _TXB2SIDLbits	set	3874
   287  0000                     _ADCON0bits	set	4034
   288  0000                     _ADCON1	set	4033
   289  0000                     _ADCON2bits	set	4032
   290  0000                     _ADRESH	set	4036
   291  0000                     _BRGCON1	set	3952
   292  0000                     _BRGCON2	set	3953
   293  0000                     _BRGCON2bits	set	3953
   294  0000                     _BRGCON3	set	3954
   295  0000                     _BRGCON3bits	set	3954
   296  0000                     _CANCON	set	3951
   297  0000                     _CANCONbits	set	3951
   298  0000                     _CANSTAT	set	3950
   299  0000                     _COMSTATbits	set	3956
   300  0000                     _INTCONbits	set	4082
   301  0000                     _IPR2bits	set	4002
   302  0000                     _IPR3bits	set	4005
   303  0000                     _LATA	set	3977
   304  0000                     _LATB	set	3978
   305  0000                     _LATC	set	3979
   306  0000                     _LATCbits	set	3979
   307  0000                     _LATD	set	3980
   308  0000                     _LATDbits	set	3980
   309  0000                     _LATE	set	3981
   310  0000                     _LATEbits	set	3981
   311  0000                     _PIE2bits	set	4000
   312  0000                     _PIE3bits	set	4003
   313  0000                     _PIR2bits	set	4001
   314  0000                     _PIR3bits	set	4004
   315  0000                     _PORTAbits	set	3968
   316  0000                     _PORTBbits	set	3969
   317  0000                     _PORTDbits	set	3971
   318  0000                     _RCONbits	set	4048
   319  0000                     _RXB0CON	set	3936
   320  0000                     _RXB0CONbits	set	3936
   321  0000                     _RXB0D0	set	3942
   322  0000                     _RXB0D1	set	3943
   323  0000                     _RXB0D2	set	3944
   324  0000                     _RXB0D3	set	3945
   325  0000                     _RXB0D4	set	3946
   326  0000                     _RXB0D5	set	3947
   327  0000                     _RXB0D6	set	3948
   328  0000                     _RXB0D7	set	3949
   329  0000                     _RXB0DLC	set	3941
   330  0000                     _RXB0DLCbits	set	3941
   331  0000                     _RXB0EIDH	set	3939
   332  0000                     _RXB0EIDL	set	3940
   333  0000                     _RXB0SIDH	set	3937
   334  0000                     _RXB0SIDL	set	3938
   335  0000                     _RXB0SIDLbits	set	3938
   336  0000                     _RXERRCNT	set	3957
   337  0000                     _T3CON	set	4017
   338  0000                     _TMR3H	set	4019
   339  0000                     _TMR3L	set	4018
   340  0000                     _TRISA	set	3986
   341  0000                     _TRISB	set	3987
   342  0000                     _TRISC	set	3988
   343  0000                     _TRISD	set	3989
   344  0000                     _TRISE	set	3990
   345  0000                     _TXERRCNT	set	3958
   346  00FE2F                     STR_34:
   347  00FE2F  20                 	db	32
   348  00FE30  20                 	db	32
   349  00FE31  20                 	db	32
   350  00FE32  20                 	db	32
   351  00FE33  20                 	db	32
   352  00FE34  20                 	db	32
   353  00FE35  20                 	db	32
   354  00FE36  46                 	db	70	;'F'
   355  00FE37  41                 	db	65	;'A'
   356  00FE38  49                 	db	73	;'I'
   357  00FE39  4C                 	db	76	;'L'
   358  00FE3A  45                 	db	69	;'E'
   359  00FE3B  44                 	db	68	;'D'
   360  00FE3C  21                 	db	33
   361  00FE3D  20                 	db	32
   362  00FE3E  20                 	db	32
   363  00FE3F  20                 	db	32
   364  00FE40  20                 	db	32
   365  00FE41  20                 	db	32
   366  00FE42  20                 	db	32
   367  00FE43  00                 	db	0
   368  00FE44                     STR_31:
   369  00FE44  20                 	db	32
   370  00FE45  20                 	db	32
   371  00FE46  20                 	db	32
   372  00FE47  20                 	db	32
   373  00FE48  20                 	db	32
   374  00FE49  43                 	db	67	;'C'
   375  00FE4A  4F                 	db	79	;'O'
   376  00FE4B  4D                 	db	77	;'M'
   377  00FE4C  50                 	db	80	;'P'
   378  00FE4D  4C                 	db	76	;'L'
   379  00FE4E  45                 	db	69	;'E'
   380  00FE4F  54                 	db	84	;'T'
   381  00FE50  45                 	db	69	;'E'
   382  00FE51  44                 	db	68	;'D'
   383  00FE52  21                 	db	33
   384  00FE53  20                 	db	32
   385  00FE54  20                 	db	32
   386  00FE55  20                 	db	32
   387  00FE56  20                 	db	32
   388  00FE57  20                 	db	32
   389  00FE58  00                 	db	0
   390  00FE59                     STR_30:
   391  00FE59  20                 	db	32
   392  00FE5A  20                 	db	32
   393  00FE5B  20                 	db	32
   394  00FE5C  20                 	db	32
   395  00FE5D  53                 	db	83	;'S'
   396  00FE5E  55                 	db	85	;'U'
   397  00FE5F  43                 	db	67	;'C'
   398  00FE60  43                 	db	67	;'C'
   399  00FE61  45                 	db	69	;'E'
   400  00FE62  53                 	db	83	;'S'
   401  00FE63  53                 	db	83	;'S'
   402  00FE64  46                 	db	70	;'F'
   403  00FE65  55                 	db	85	;'U'
   404  00FE66  4C                 	db	76	;'L'
   405  00FE67  4C                 	db	76	;'L'
   406  00FE68  59                 	db	89	;'Y'
   407  00FE69  20                 	db	32
   408  00FE6A  20                 	db	32
   409  00FE6B  20                 	db	32
   410  00FE6C  20                 	db	32
   411  00FE6D  00                 	db	0
   412  00FE6E                     STR_23:
   413  00FE6E  20                 	db	32
   414  00FE6F  20                 	db	32
   415  00FE70  20                 	db	32
   416  00FE71  73                 	db	115	;'s'
   417  00FE72  74                 	db	116	;'t'
   418  00FE73  61                 	db	97	;'a'
   419  00FE74  72                 	db	114	;'r'
   420  00FE75  74                 	db	116	;'t'
   421  00FE76  20                 	db	32
   422  00FE77  70                 	db	112	;'p'
   423  00FE78  61                 	db	97	;'a'
   424  00FE79  72                 	db	114	;'r'
   425  00FE7A  6B                 	db	107	;'k'
   426  00FE7B  69                 	db	105	;'i'
   427  00FE7C  6E                 	db	110	;'n'
   428  00FE7D  67                 	db	103	;'g'
   429  00FE7E  20                 	db	32
   430  00FE7F  20                 	db	32
   431  00FE80  20                 	db	32
   432  00FE81  20                 	db	32
   433  00FE82  00                 	db	0
   434  00FE83                     STR_3:
   435  00FE83  20                 	db	32
   436  00FE84  20                 	db	32
   437  00FE85  50                 	db	80	;'P'
   438  00FE86  72                 	db	114	;'r'
   439  00FE87  65                 	db	101	;'e'
   440  00FE88  73                 	db	115	;'s'
   441  00FE89  73                 	db	115	;'s'
   442  00FE8A  20                 	db	32
   443  00FE8B  74                 	db	116	;'t'
   444  00FE8C  68                 	db	104	;'h'
   445  00FE8D  65                 	db	101	;'e'
   446  00FE8E  20                 	db	32
   447  00FE8F  62                 	db	98	;'b'
   448  00FE90  75                 	db	117	;'u'
   449  00FE91  74                 	db	116	;'t'
   450  00FE92  74                 	db	116	;'t'
   451  00FE93  6F                 	db	111	;'o'
   452  00FE94  6E                 	db	110	;'n'
   453  00FE95  20                 	db	32
   454  00FE96  20                 	db	32
   455  00FE97  00                 	db	0
   456  00FE98                     STR_35:
   457  00FE98  20                 	db	32
   458  00FE99  20                 	db	32
   459  00FE9A  20                 	db	32
   460  00FE9B  64                 	db	100	;'d'
   461  00FE9C  75                 	db	117	;'u'
   462  00FE9D  65                 	db	101	;'e'
   463  00FE9E  20                 	db	32
   464  00FE9F  74                 	db	116	;'t'
   465  00FEA0  6F                 	db	111	;'o'
   466  00FEA1  20                 	db	32
   467  00FEA2  61                 	db	97	;'a'
   468  00FEA3  6E                 	db	110	;'n'
   469  00FEA4  20                 	db	32
   470  00FEA5  65                 	db	101	;'e'
   471  00FEA6  72                 	db	114	;'r'
   472  00FEA7  72                 	db	114	;'r'
   473  00FEA8  6F                 	db	111	;'o'
   474  00FEA9  72                 	db	114	;'r'
   475  00FEAA  20                 	db	32
   476  00FEAB  20                 	db	32
   477  00FEAC  00                 	db	0
   478  00FEAD                     STR_19:
   479  00FEAD  20                 	db	32
   480  00FEAE  75                 	db	117	;'u'
   481  00FEAF  6E                 	db	110	;'n'
   482  00FEB0  74                 	db	116	;'t'
   483  00FEB1  69                 	db	105	;'i'
   484  00FEB2  6C                 	db	108	;'l'
   485  00FEB3  20                 	db	32
   486  00FEB4  6E                 	db	110	;'n'
   487  00FEB5  65                 	db	101	;'e'
   488  00FEB6  78                 	db	120	;'x'
   489  00FEB7  74                 	db	116	;'t'
   490  00FEB8  20                 	db	32
   491  00FEB9  6D                 	db	109	;'m'
   492  00FEBA  65                 	db	101	;'e'
   493  00FEBB  73                 	db	115	;'s'
   494  00FEBC  73                 	db	115	;'s'
   495  00FEBD  61                 	db	97	;'a'
   496  00FEBE  67                 	db	103	;'g'
   497  00FEBF  65                 	db	101	;'e'
   498  00FEC0  20                 	db	32
   499  00FEC1  00                 	db	0
   500  00FEC2                     STR_22:
   501  00FEC2  50                 	db	80	;'P'
   502  00FEC3  72                 	db	114	;'r'
   503  00FEC4  65                 	db	101	;'e'
   504  00FEC5  73                 	db	115	;'s'
   505  00FEC6  73                 	db	115	;'s'
   506  00FEC7  20                 	db	32
   507  00FEC8  74                 	db	116	;'t'
   508  00FEC9  68                 	db	104	;'h'
   509  00FECA  65                 	db	101	;'e'
   510  00FECB  20                 	db	32
   511  00FECC  42                 	db	66	;'B'
   512  00FECD  55                 	db	85	;'U'
   513  00FECE  54                 	db	84	;'T'
   514  00FECF  54                 	db	84	;'T'
   515  00FED0  4F                 	db	79	;'O'
   516  00FED1  4E                 	db	78	;'N'
   517  00FED2  20                 	db	32
   518  00FED3  74                 	db	116	;'t'
   519  00FED4  6F                 	db	111	;'o'
   520  00FED5  20                 	db	32
   521  00FED6  00                 	db	0
   522  00FED7                     STR_29:
   523  00FED7  20                 	db	32
   524  00FED8  50                 	db	80	;'P'
   525  00FED9  61                 	db	97	;'a'
   526  00FEDA  72                 	db	114	;'r'
   527  00FEDB  6B                 	db	107	;'k'
   528  00FEDC  69                 	db	105	;'i'
   529  00FEDD  6E                 	db	110	;'n'
   530  00FEDE  67                 	db	103	;'g'
   531  00FEDF  20                 	db	32
   532  00FEE0  70                 	db	112	;'p'
   533  00FEE1  72                 	db	114	;'r'
   534  00FEE2  6F                 	db	111	;'o'
   535  00FEE3  63                 	db	99	;'c'
   536  00FEE4  65                 	db	101	;'e'
   537  00FEE5  64                 	db	100	;'d'
   538  00FEE6  75                 	db	117	;'u'
   539  00FEE7  72                 	db	114	;'r'
   540  00FEE8  65                 	db	101	;'e'
   541  00FEE9  73                 	db	115	;'s'
   542  00FEEA  20                 	db	32
   543  00FEEB  00                 	db	0
   544  00FEEC                     STR_21:
   545  00FEEC  2D                 	db	45
   546  00FEED  20                 	db	32
   547  00FEEE  44                 	db	68	;'D'
   548  00FEEF  69                 	db	105	;'i'
   549  00FEF0  73                 	db	115	;'s'
   550  00FEF1  74                 	db	116	;'t'
   551  00FEF2  61                 	db	97	;'a'
   552  00FEF3  6E                 	db	110	;'n'
   553  00FEF4  63                 	db	99	;'c'
   554  00FEF5  65                 	db	101	;'e'
   555  00FEF6  20                 	db	32
   556  00FEF7  52                 	db	82	;'R'
   557  00FEF8  45                 	db	69	;'E'
   558  00FEF9  41                 	db	65	;'A'
   559  00FEFA  43                 	db	67	;'C'
   560  00FEFB  48                 	db	72	;'H'
   561  00FEFC  45                 	db	69	;'E'
   562  00FEFD  44                 	db	68	;'D'
   563  00FEFE  20                 	db	32
   564  00FEFF  2D                 	db	45
   565  00FF00  00                 	db	0
   566  00FF01                     STR_18:
   567  00FF01  2D                 	db	45
   568  00FF02  3E                 	db	62	;'>'
   569  00FF03  20                 	db	32
   570  00FF04  20                 	db	32
   571  00FF05  4B                 	db	75	;'K'
   572  00FF06  45                 	db	69	;'E'
   573  00FF07  45                 	db	69	;'E'
   574  00FF08  50                 	db	80	;'P'
   575  00FF09  20                 	db	32
   576  00FF0A  4D                 	db	77	;'M'
   577  00FF0B  4F                 	db	79	;'O'
   578  00FF0C  56                 	db	86	;'V'
   579  00FF0D  49                 	db	73	;'I'
   580  00FF0E  4E                 	db	78	;'N'
   581  00FF0F  47                 	db	71	;'G'
   582  00FF10  20                 	db	32
   583  00FF11  20                 	db	32
   584  00FF12  20                 	db	32
   585  00FF13  3C                 	db	60	;'<'
   586  00FF14  2D                 	db	45
   587  00FF15  00                 	db	0
   588  00FF16                     STR_25:
   589  00FF16  3D                 	db	61	;'='
   590  00FF17  20                 	db	32
   591  00FF18  20                 	db	32
   592  00FF19  20                 	db	32
   593  00FF1A  20                 	db	32
   594  00FF1B  50                 	db	80	;'P'
   595  00FF1C  61                 	db	97	;'a'
   596  00FF1D  72                 	db	114	;'r'
   597  00FF1E  6B                 	db	107	;'k'
   598  00FF1F  69                 	db	105	;'i'
   599  00FF20  6E                 	db	110	;'n'
   600  00FF21  67                 	db	103	;'g'
   601  00FF22  20                 	db	32
   602  00FF23  69                 	db	105	;'i'
   603  00FF24  6E                 	db	110	;'n'
   604  00FF25  20                 	db	32
   605  00FF26  20                 	db	32
   606  00FF27  20                 	db	32
   607  00FF28  20                 	db	32
   608  00FF29  3D                 	db	61	;'='
   609  00FF2A  00                 	db	0
   610  00FF2B                     STR_26:
   611  00FF2B  3D                 	db	61	;'='
   612  00FF2C  20                 	db	32
   613  00FF2D  20                 	db	32
   614  00FF2E  20                 	db	32
   615  00FF2F  20                 	db	32
   616  00FF30  70                 	db	112	;'p'
   617  00FF31  72                 	db	114	;'r'
   618  00FF32  6F                 	db	111	;'o'
   619  00FF33  67                 	db	103	;'g'
   620  00FF34  72                 	db	114	;'r'
   621  00FF35  65                 	db	101	;'e'
   622  00FF36  73                 	db	115	;'s'
   623  00FF37  73                 	db	115	;'s'
   624  00FF38  2E                 	db	46
   625  00FF39  2E                 	db	46
   626  00FF3A  2E                 	db	46
   627  00FF3B  20                 	db	32
   628  00FF3C  20                 	db	32
   629  00FF3D  20                 	db	32
   630  00FF3E  3D                 	db	61	;'='
   631  00FF3F  00                 	db	0
   632  00FF40                     STR_16:
   633  00FF40  3D                 	db	61	;'='
   634  00FF41  20                 	db	32
   635  00FF42  50                 	db	80	;'P'
   636  00FF43  41                 	db	65	;'A'
   637  00FF44  52                 	db	82	;'R'
   638  00FF45  4B                 	db	75	;'K'
   639  00FF46  49                 	db	73	;'I'
   640  00FF47  4E                 	db	78	;'N'
   641  00FF48  47                 	db	71	;'G'
   642  00FF49  20                 	db	32
   643  00FF4A  4D                 	db	77	;'M'
   644  00FF4B  45                 	db	69	;'E'
   645  00FF4C  53                 	db	83	;'S'
   646  00FF4D  53                 	db	83	;'S'
   647  00FF4E  41                 	db	65	;'A'
   648  00FF4F  47                 	db	71	;'G'
   649  00FF50  45                 	db	69	;'E'
   650  00FF51  53                 	db	83	;'S'
   651  00FF52  20                 	db	32
   652  00FF53  3D                 	db	61	;'='
   653  00FF54  00                 	db	0
   654  00FF55                     STR_2:
   655  00FF55  3D                 	db	61	;'='
   656  00FF56  3D                 	db	61	;'='
   657  00FF57  3E                 	db	62	;'>'
   658  00FF58  20                 	db	32
   659  00FF59  56                 	db	86	;'V'
   660  00FF5A  45                 	db	69	;'E'
   661  00FF5B  48                 	db	72	;'H'
   662  00FF5C  49                 	db	73	;'I'
   663  00FF5D  43                 	db	67	;'C'
   664  00FF5E  4C                 	db	76	;'L'
   665  00FF5F  45                 	db	69	;'E'
   666  00FF60  20                 	db	32
   667  00FF61  20                 	db	32
   668  00FF62  4F                 	db	79	;'O'
   669  00FF63  46                 	db	70	;'F'
   670  00FF64  46                 	db	70	;'F'
   671  00FF65  20                 	db	32
   672  00FF66  3C                 	db	60	;'<'
   673  00FF67  3D                 	db	61	;'='
   674  00FF68  3D                 	db	61	;'='
   675  00FF69  00                 	db	0
   676  00FF6A                     STR_6:
   677  00FF6A  3D                 	db	61	;'='
   678  00FF6B  3D                 	db	61	;'='
   679  00FF6C  3D                 	db	61	;'='
   680  00FF6D  20                 	db	32
   681  00FF6E  56                 	db	86	;'V'
   682  00FF6F  45                 	db	69	;'E'
   683  00FF70  48                 	db	72	;'H'
   684  00FF71  49                 	db	73	;'I'
   685  00FF72  43                 	db	67	;'C'
   686  00FF73  4C                 	db	76	;'L'
   687  00FF74  45                 	db	69	;'E'
   688  00FF75  20                 	db	32
   689  00FF76  44                 	db	68	;'D'
   690  00FF77  41                 	db	65	;'A'
   691  00FF78  54                 	db	84	;'T'
   692  00FF79  41                 	db	65	;'A'
   693  00FF7A  20                 	db	32
   694  00FF7B  3D                 	db	61	;'='
   695  00FF7C  3D                 	db	61	;'='
   696  00FF7D  3D                 	db	61	;'='
   697  00FF7E  00                 	db	0
   698  00FF7F                     STR_1:
   699  00FF7F  3D                 	db	61	;'='
   700  00FF80  3D                 	db	61	;'='
   701  00FF81  3D                 	db	61	;'='
   702  00FF82  3D                 	db	61	;'='
   703  00FF83  3D                 	db	61	;'='
   704  00FF84  3D                 	db	61	;'='
   705  00FF85  3D                 	db	61	;'='
   706  00FF86  3D                 	db	61	;'='
   707  00FF87  3D                 	db	61	;'='
   708  00FF88  3D                 	db	61	;'='
   709  00FF89  3D                 	db	61	;'='
   710  00FF8A  3D                 	db	61	;'='
   711  00FF8B  3D                 	db	61	;'='
   712  00FF8C  3D                 	db	61	;'='
   713  00FF8D  3D                 	db	61	;'='
   714  00FF8E  3D                 	db	61	;'='
   715  00FF8F  3D                 	db	61	;'='
   716  00FF90  3D                 	db	61	;'='
   717  00FF91  3D                 	db	61	;'='
   718  00FF92  3D                 	db	61	;'='
   719  00FF93  00                 	db	0
   720  00FF94                     STR_17:
   721  00FF94  20                 	db	32
   722  00FF95  50                 	db	80	;'P'
   723  00FF96  61                 	db	97	;'a'
   724  00FF97  72                 	db	114	;'r'
   725  00FF98  6B                 	db	107	;'k'
   726  00FF99  69                 	db	105	;'i'
   727  00FF9A  6E                 	db	110	;'n'
   728  00FF9B  67                 	db	103	;'g'
   729  00FF9C  20                 	db	32
   730  00FF9D  73                 	db	115	;'s'
   731  00FF9E  70                 	db	112	;'p'
   732  00FF9F  61                 	db	97	;'a'
   733  00FFA0  63                 	db	99	;'c'
   734  00FFA1  65                 	db	101	;'e'
   735  00FFA2  20                 	db	32
   736  00FFA3  46                 	db	70	;'F'
   737  00FFA4  4F                 	db	79	;'O'
   738  00FFA5  55                 	db	85	;'U'
   739  00FFA6  4E                 	db	78	;'N'
   740  00FFA7  44                 	db	68	;'D'
   741  00FFA8  00                 	db	0
   742  00FFA9                     STR_8:
   743  00FFA9  53                 	db	83	;'S'
   744  00FFAA  70                 	db	112	;'p'
   745  00FFAB  65                 	db	101	;'e'
   746  00FFAC  65                 	db	101	;'e'
   747  00FFAD  64                 	db	100	;'d'
   748  00FFAE  3A                 	db	58	;':'
   749  00FFAF  20                 	db	32
   750  00FFB0  30                 	db	48	;'0'
   751  00FFB1  2E                 	db	46
   752  00FFB2  30                 	db	48	;'0'
   753  00FFB3  30                 	db	48	;'0'
   754  00FFB4  20                 	db	32
   755  00FFB5  4B                 	db	75	;'K'
   756  00FFB6  6D                 	db	109	;'m'
   757  00FFB7  2F                 	db	47
   758  00FFB8  68                 	db	104	;'h'
   759  00FFB9  00                 	db	0
   760  00FFBA                     STR_9:
   761  00FFBA  50                 	db	80	;'P'
   762  00FFBB  61                 	db	97	;'a'
   763  00FFBC  72                 	db	114	;'r'
   764  00FFBD  6B                 	db	107	;'k'
   765  00FFBE  20                 	db	32
   766  00FFBF  61                 	db	97	;'a'
   767  00FFC0  73                 	db	115	;'s'
   768  00FFC1  73                 	db	115	;'s'
   769  00FFC2  69                 	db	105	;'i'
   770  00FFC3  73                 	db	115	;'s'
   771  00FFC4  74                 	db	116	;'t'
   772  00FFC5  3A                 	db	58	;':'
   773  00FFC6  20                 	db	32
   774  00FFC7  00                 	db	0
   775  00FFC8                     STR_7:
   776  00FFC8  44                 	db	68	;'D'
   777  00FFC9  69                 	db	105	;'i'
   778  00FFCA  72                 	db	114	;'r'
   779  00FFCB  65                 	db	101	;'e'
   780  00FFCC  63                 	db	99	;'c'
   781  00FFCD  74                 	db	116	;'t'
   782  00FFCE  69                 	db	105	;'i'
   783  00FFCF  6F                 	db	111	;'o'
   784  00FFD0  6E                 	db	110	;'n'
   785  00FFD1  3A                 	db	58	;':'
   786  00FFD2  20                 	db	32
   787  00FFD3  00                 	db	0
   788  00FFD4                     STR_14:
   789  00FFD4  4F                 	db	79	;'O'
   790  00FFD5  46                 	db	70	;'F'
   791  00FFD6  46                 	db	70	;'F'
   792  00FFD7  20                 	db	32
   793  00FFD8  20                 	db	32
   794  00FFD9  20                 	db	32
   795  00FFDA  20                 	db	32
   796  00FFDB  00                 	db	0
   797  00FFDC                     STR_15:
   798  00FFDC  53                 	db	83	;'S'
   799  00FFDD  45                 	db	69	;'E'
   800  00FFDE  41                 	db	65	;'A'
   801  00FFDF  52                 	db	82	;'R'
   802  00FFE0  43                 	db	67	;'C'
   803  00FFE1  48                 	db	72	;'H'
   804  00FFE2  20                 	db	32
   805  00FFE3  00                 	db	0
   806  00FFE4                     STR_10:
   807  00FFE4  44                 	db	68	;'D'
   808  00FFE5  61                 	db	97	;'a'
   809  00FFE6  74                 	db	116	;'t'
   810  00FFE7  61                 	db	97	;'a'
   811  00FFE8  3A                 	db	58	;':'
   812  00FFE9  20                 	db	32
   813  00FFEA  00                 	db	0
   814  00FFEB                     STR_13:
   815  00FFEB  50                 	db	80	;'P'
   816  00FFEC  20                 	db	32
   817  00FFED  20                 	db	32
   818  00FFEE  20                 	db	32
   819  00FFEF  00                 	db	0
   820  00FFF0                     STR_11:
   821  00FFF0  46                 	db	70	;'F'
   822  00FFF1  57                 	db	87	;'W'
   823  00FFF2  44                 	db	68	;'D'
   824  00FFF3  20                 	db	32
   825  00FFF4  00                 	db	0
   826  00FFF5                     STR_12:
   827  00FFF5  42                 	db	66	;'B'
   828  00FFF6  4B                 	db	75	;'K'
   829  00FFF7  57                 	db	87	;'W'
   830  00FFF8  44                 	db	68	;'D'
   831  00FFF9  00                 	db	0
   832  00FFFA                     STR_5:
   833  00FFFA  25                 	db	37
   834  00FFFB  2E                 	db	46
   835  00FFFC  32                 	db	50	;'2'
   836  00FFFD  66                 	db	102	;'f'
   837  00FFFE  00                 	db	0
   838  0000                     
   839                           ; #config settings
   840  00FFFF  00                 	db	0	; dummy byte at the end
   841  0000                     
   842                           	psect	cinit
   843  015B70                     __pcinit:
   844                           	opt stack 0
   845  015B70                     start_initialization:
   846                           	opt stack 0
   847  015B70                     __initialization:
   848                           	opt stack 0
   849                           
   850                           ; Clear objects allocated to BANK1 (33 bytes)
   851  015B70  EE01  F000         	lfsr	0,__pbssBANK1
   852  015B74  0E21               	movlw	33
   853  015B76                     clear_0:
   854  015B76  6AEE               	clrf	postinc0,c
   855  015B78  06E8               	decf	wreg,f,c
   856  015B7A  E1FD               	bnz	clear_0
   857                           
   858                           ; Clear objects allocated to BANK0 (48 bytes)
   859  015B7C  EE00  F0BB         	lfsr	0,__pbssBANK0
   860  015B80  0E30               	movlw	48
   861  015B82                     clear_1:
   862  015B82  6AEE               	clrf	postinc0,c
   863  015B84  06E8               	decf	wreg,f,c
   864  015B86  E1FD               	bnz	clear_1
   865                           
   866                           ; Clear objects allocated to BITCOMRAM (3 bytes)
   867  015B88  6A4D               	clrf	((__pbitbssCOMRAM/(0+8)+2))& (0+255),c
   868  015B8A  6A4C               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   869  015B8C  6A4B               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   870                           
   871                           ; Clear objects allocated to COMRAM (40 bytes)
   872  015B8E  EE00  F001         	lfsr	0,__pbssCOMRAM
   873  015B92  0E28               	movlw	40
   874  015B94                     clear_2:
   875  015B94  6AEE               	clrf	postinc0,c
   876  015B96  06E8               	decf	wreg,f,c
   877  015B98  E1FD               	bnz	clear_2
   878                           
   879                           ; Initialize objects allocated to BANK0 (1 bytes)
   880                           ; load TBLPTR registers with __pidataBANK0
   881  015B9A  0E68               	movlw	low __pidataBANK0
   882  015B9C  6EF6               	movwf	tblptrl,c
   883  015B9E  0E5F               	movlw	high __pidataBANK0
   884  015BA0  6EF7               	movwf	tblptrh,c
   885  015BA2  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   886  015BA4  6EF8               	movwf	tblptru,c
   887  015BA6  0009               	tblrd		*+	;fetch initializer
   888  015BA8  CFF5 F0EB          	movff	tablat,__pdataBANK0
   889  015BAC                     end_of_initialization:
   890                           	opt stack 0
   891  015BAC                     __end_of__initialization:
   892                           	opt stack 0
   893  015BAC  0100               	movlb	0
   894  015BAE  EFEB  F08D         	goto	_main	;jump to C main() function
   895                           tblptru	equ	0xFF8
   896                           tblptrh	equ	0xFF7
   897                           tblptrl	equ	0xFF6
   898                           tablat	equ	0xFF5
   899                           postinc0	equ	0xFEE
   900                           wreg	equ	0xFE8
   901                           
   902                           	psect	bitbssCOMRAM
   903  000258                     __pbitbssCOMRAM:
   904                           	opt stack 0
   905  000258                     _AbsFlag:
   906                           	opt stack 0
   907  000258                     	ds	1
   908  000259                     _BKWD_sensor:
   909                           	opt stack 0
   910  000259                     	ds	1
   911  00025A                     _Can_Tx_Force:
   912                           	opt stack 0
   913  00025A                     	ds	1
   914  00025B                     _F1_switch:
   915                           	opt stack 0
   916  00025B                     	ds	1
   917  00025C                     _F2_switch:
   918                           	opt stack 0
   919  00025C                     	ds	1
   920  00025D                     _FWD_sensor:
   921                           	opt stack 0
   922  00025D                     	ds	1
   923  00025E                     _MotoreFlag:
   924                           	opt stack 0
   925  00025E                     	ds	1
   926  00025F                     _RTR_Flag:
   927                           	opt stack 0
   928  00025F                     	ds	1
   929  000260                     _SterzoFlag:
   930                           	opt stack 0
   931  000260                     	ds	1
   932  000261                     _collision_risk:
   933                           	opt stack 0
   934  000261                     	ds	1
   935  000262                     _display_refresh:
   936                           	opt stack 0
   937  000262                     	ds	1
   938  000263                     _newMessageCan:
   939                           	opt stack 0
   940  000263                     	ds	1
   941  000264                     _parking_error:
   942                           	opt stack 0
   943  000264                     	ds	1
   944  000265                     _parking_message_E:
   945                           	opt stack 0
   946  000265                     	ds	1
   947  000266                     _power_switch:
   948                           	opt stack 0
   949  000266                     	ds	1
   950  000267                     _space_available:
   951                           	opt stack 0
   952  000267                     	ds	1
   953  000268                     _space_gap_reached:
   954                           	opt stack 0
   955  000268                     	ds	1
   956  000269                     _steering_correction_dir:
   957                           	opt stack 0
   958  000269                     	ds	1
   959  00026A                     _wait_low_1:
   960                           	opt stack 0
   961  00026A                     	ds	1
   962  00026B                     _wait_low_2:
   963                           	opt stack 0
   964  00026B                     	ds	1
   965  00026C                     _wait_low_3:
   966                           	opt stack 0
   967  00026C                     	ds	1
   968  00026D                     _x:
   969                           	opt stack 0
   970  00026D                     	ds	1
   971  00026E                     _y:
   972                           	opt stack 0
   973  00026E                     	ds	1
   974  00026F                     _z:
   975                           	opt stack 0
   976  00026F                     	ds	1
   977                           tblptru	equ	0xFF8
   978                           tblptrh	equ	0xFF7
   979                           tblptrl	equ	0xFF6
   980                           tablat	equ	0xFF5
   981                           postinc0	equ	0xFEE
   982                           wreg	equ	0xFE8
   983                           
   984                           	psect	bssCOMRAM
   985  000001                     __pbssCOMRAM:
   986                           	opt stack 0
   987  000001                     _actual_speed_kmh:
   988                           	opt stack 0
   989  000001                     	ds	4
   990  000005                     _id:
   991                           	opt stack 0
   992  000005                     	ds	4
   993  000009                     _pr_time_4:
   994                           	opt stack 0
   995  000009                     	ds	4
   996  00000D                     _time_counter:
   997                           	opt stack 0
   998  00000D                     	ds	4
   999  000011                     _left_speed:
  1000                           	opt stack 0
  1001  000011                     	ds	2
  1002  000013                     _right_speed:
  1003                           	opt stack 0
  1004  000013                     	ds	2
  1005  000015                     _user_data:
  1006                           	opt stack 0
  1007  000015                     	ds	2
  1008  000017                     _battery:
  1009                           	opt stack 0
  1010  000017                     	ds	1
  1011  000018                     _set_steering:
  1012                           	opt stack 0
  1013  000018                     	ds	1
  1014  000019                     _msg:
  1015                           	opt stack 0
  1016  000019                     	ds	15
  1017  000028                     _data:
  1018                           	opt stack 0
  1019  000028                     	ds	1
  1020                           tblptru	equ	0xFF8
  1021                           tblptrh	equ	0xFF7
  1022                           tblptrl	equ	0xFF6
  1023                           tablat	equ	0xFF5
  1024                           postinc0	equ	0xFEE
  1025                           wreg	equ	0xFE8
  1026                           
  1027                           	psect	bssBANK0
  1028  0000BB                     __pbssBANK0:
  1029                           	opt stack 0
  1030  0000BB                     _JoystickConstants:
  1031                           	opt stack 0
  1032  0000BB                     	ds	8
  1033  0000C3                     _check:
  1034                           	opt stack 0
  1035  0000C3                     	ds	4
  1036  0000C7                     _pr_time_1:
  1037                           	opt stack 0
  1038  0000C7                     	ds	4
  1039  0000CB                     _pr_time_2:
  1040                           	opt stack 0
  1041  0000CB                     	ds	4
  1042  0000CF                     _pr_time_3:
  1043                           	opt stack 0
  1044  0000CF                     	ds	4
  1045  0000D3                     _pr_time_5:
  1046                           	opt stack 0
  1047  0000D3                     	ds	4
  1048  0000D7                     _pr_time_6:
  1049                           	opt stack 0
  1050  0000D7                     	ds	4
  1051  0000DB                     _JoystickValues:
  1052                           	opt stack 0
  1053  0000DB                     	ds	2
  1054  0000DD                     _actual_speed:
  1055                           	opt stack 0
  1056  0000DD                     	ds	2
  1057  0000DF                     _clock_counter_reference:
  1058                           	opt stack 0
  1059  0000DF                     	ds	2
  1060  0000E1                     _set_speed:
  1061                           	opt stack 0
  1062  0000E1                     	ds	2
  1063  0000E3                     _dir:
  1064                           	opt stack 0
  1065  0000E3                     	ds	1
  1066  0000E4                     _parking_message_ID:
  1067                           	opt stack 0
  1068  0000E4                     	ds	1
  1069  0000E5                     _parking_state:
  1070                           	opt stack 0
  1071  0000E5                     	ds	1
  1072  0000E6                     _steering_correction:
  1073                           	opt stack 0
  1074  0000E6                     	ds	1
  1075  0000E7                     _switch_position:
  1076                           	opt stack 0
  1077  0000E7                     	ds	1
  1078  0000E8                     _data_brake:
  1079                           	opt stack 0
  1080  0000E8                     	ds	1
  1081  0000E9                     _data_speed:
  1082                           	opt stack 0
  1083  0000E9                     	ds	1
  1084  0000EA                     _data_steering:
  1085                           	opt stack 0
  1086  0000EA                     	ds	1
  1087                           tblptru	equ	0xFF8
  1088                           tblptrh	equ	0xFF7
  1089                           tblptrl	equ	0xFF6
  1090                           tablat	equ	0xFF5
  1091                           postinc0	equ	0xFEE
  1092                           wreg	equ	0xFE8
  1093                           
  1094                           	psect	dataBANK0
  1095  0000EB                     __pdataBANK0:
  1096                           	opt stack 0
  1097  0000EB                     _delay_quartz_frequency_value:
  1098                           	opt stack 0
  1099  0000EB                     	ds	1
  1100                           tblptru	equ	0xFF8
  1101                           tblptrh	equ	0xFF7
  1102                           tblptrl	equ	0xFF6
  1103                           tablat	equ	0xFF5
  1104                           postinc0	equ	0xFEE
  1105                           wreg	equ	0xFE8
  1106                           
  1107                           	psect	bssBANK1
  1108  000100                     __pbssBANK1:
  1109                           	opt stack 0
  1110  000100                     _data_speed_rx:
  1111                           	opt stack 0
  1112  000100                     	ds	7
  1113  000107                     LCD_write_integer@F17326:
  1114                           	opt stack 0
  1115  000107                     	ds	6
  1116  00010D                     _str:
  1117                           	opt stack 0
  1118  00010D                     	ds	12
  1119  000119                     _park_assist_state:
  1120                           	opt stack 0
  1121  000119                     	ds	8
  1122                           tblptru	equ	0xFF8
  1123                           tblptrh	equ	0xFF7
  1124                           tblptrl	equ	0xFF6
  1125                           tablat	equ	0xFF5
  1126                           postinc0	equ	0xFEE
  1127                           wreg	equ	0xFE8
  1128                           
  1129                           	psect	cstackBANK1
  1130  000121                     __pcstackBANK1:
  1131                           	opt stack 0
  1132  000121                     _sprintf$4237:
  1133                           	opt stack 0
  1134                           
  1135                           ; 4 bytes @ 0x0
  1136  000121                     	ds	4
  1137  000125                     sprintf@ap:
  1138                           	opt stack 0
  1139                           
  1140                           ; 2 bytes @ 0x4
  1141  000125                     	ds	2
  1142  000127                     sprintf@flag:
  1143                           	opt stack 0
  1144                           
  1145                           ; 2 bytes @ 0x6
  1146  000127                     	ds	2
  1147  000129                     sprintf@val:
  1148                           	opt stack 0
  1149                           
  1150                           ; 4 bytes @ 0x8
  1151  000129                     	ds	4
  1152  00012D                     sprintf@exp:
  1153                           	opt stack 0
  1154                           
  1155                           ; 2 bytes @ 0xC
  1156  00012D                     	ds	2
  1157  00012F                     sprintf@tmpval:
  1158                           	opt stack 0
  1159                           
  1160                           ; 4 bytes @ 0xE
  1161  00012F                     	ds	4
  1162  000133                     sprintf@prec:
  1163                           	opt stack 0
  1164                           
  1165                           ; 2 bytes @ 0x12
  1166  000133                     	ds	2
  1167  000135                     sprintf@fval:
  1168                           	opt stack 0
  1169                           
  1170                           ; 4 bytes @ 0x14
  1171  000135                     	ds	4
  1172  000139                     sprintf@c:
  1173                           	opt stack 0
  1174                           
  1175                           ; 1 bytes @ 0x18
  1176  000139                     	ds	1
  1177  00013A                     ??_main:
  1178                           
  1179                           ; 0 bytes @ 0x19
  1180  00013A                     	ds	8
  1181                           tblptru	equ	0xFF8
  1182                           tblptrh	equ	0xFF7
  1183                           tblptrl	equ	0xFF6
  1184                           tablat	equ	0xFF5
  1185                           postinc0	equ	0xFEE
  1186                           wreg	equ	0xFE8
  1187                           
  1188                           	psect	cstackBANK0
  1189  000060                     __pcstackBANK0:
  1190                           	opt stack 0
  1191  000060                     ??_ISR_alta:
  1192                           
  1193                           ; 0 bytes @ 0x0
  1194  000060                     	ds	16
  1195  000070                     ??_CAN_Rx:
  1196  000070                     ??_isdigit:
  1197  000070                     ?___wmul:
  1198                           	opt stack 0
  1199  000070                     ?___awmod:
  1200                           	opt stack 0
  1201  000070                     ?___lwdiv:
  1202                           	opt stack 0
  1203  000070                     ?___lwmod:
  1204                           	opt stack 0
  1205  000070                     ?__tdiv_to_l_:
  1206                           	opt stack 0
  1207  000070                     ?__div_to_l_:
  1208                           	opt stack 0
  1209  000070                     ?___flpack:
  1210                           	opt stack 0
  1211  000070                     ?___lldiv:
  1212                           	opt stack 0
  1213  000070                     ?___llmod:
  1214                           	opt stack 0
  1215  000070                     CANOperationMode@mode:
  1216                           	opt stack 0
  1217  000070                     _CANisTxReady$3255:
  1218                           	opt stack 0
  1219  000070                     delay_set_quartz@frequency:
  1220                           	opt stack 0
  1221  000070                     Joystick_Polling@i:
  1222                           	opt stack 0
  1223  000070                     ___wmul@multiplier:
  1224                           	opt stack 0
  1225  000070                     ___awmod@dividend:
  1226                           	opt stack 0
  1227  000070                     ___lwdiv@dividend:
  1228                           	opt stack 0
  1229  000070                     ___lwmod@dividend:
  1230                           	opt stack 0
  1231  000070                     CANsendMessage@identifier:
  1232                           	opt stack 0
  1233  000070                     CANSetMask@mask:
  1234                           	opt stack 0
  1235  000070                     CANSetFilter@filter:
  1236                           	opt stack 0
  1237  000070                     ___flpack@arg:
  1238                           	opt stack 0
  1239  000070                     __div_to_l_@f1:
  1240                           	opt stack 0
  1241  000070                     ___flge@ff1:
  1242                           	opt stack 0
  1243  000070                     __tdiv_to_l_@f1:
  1244                           	opt stack 0
  1245  000070                     ___lldiv@dividend:
  1246                           	opt stack 0
  1247  000070                     ___llmod@dividend:
  1248                           	opt stack 0
  1249                           
  1250                           ; 4 bytes @ 0x10
  1251  000070                     	ds	1
  1252  000071                     _isdigit$3910:
  1253                           	opt stack 0
  1254                           
  1255                           ; 1 bytes @ 0x11
  1256  000071                     	ds	1
  1257  000072                     isdigit@c:
  1258                           	opt stack 0
  1259  000072                     ___wmul@multiplicand:
  1260                           	opt stack 0
  1261  000072                     ___awmod@divisor:
  1262                           	opt stack 0
  1263  000072                     ___lwdiv@divisor:
  1264                           	opt stack 0
  1265  000072                     ___lwmod@divisor:
  1266                           	opt stack 0
  1267                           
  1268                           ; 2 bytes @ 0x12
  1269  000072                     	ds	2
  1270  000074                     CANSetMask@type:
  1271                           	opt stack 0
  1272  000074                     CANSetFilter@type:
  1273                           	opt stack 0
  1274  000074                     ___awmod@counter:
  1275                           	opt stack 0
  1276  000074                     ___flpack@exp:
  1277                           	opt stack 0
  1278  000074                     ___lwmod@counter:
  1279                           	opt stack 0
  1280  000074                     CANsendMessage@data:
  1281                           	opt stack 0
  1282  000074                     ___wmul@product:
  1283                           	opt stack 0
  1284  000074                     ___lwdiv@quotient:
  1285                           	opt stack 0
  1286  000074                     __div_to_l_@f2:
  1287                           	opt stack 0
  1288  000074                     ___flge@ff2:
  1289                           	opt stack 0
  1290  000074                     __tdiv_to_l_@f2:
  1291                           	opt stack 0
  1292  000074                     ___lldiv@divisor:
  1293                           	opt stack 0
  1294  000074                     ___llmod@divisor:
  1295                           	opt stack 0
  1296                           
  1297                           ; 4 bytes @ 0x14
  1298  000074                     	ds	1
  1299  000075                     ??_CANSetMask:
  1300  000075                     ??_CANSetFilter:
  1301  000075                     ___awmod@sign:
  1302                           	opt stack 0
  1303  000075                     ___flpack@sign:
  1304                           	opt stack 0
  1305                           
  1306                           ; 1 bytes @ 0x15
  1307  000075                     	ds	1
  1308  000076                     ??___flpack:
  1309  000076                     ?___awdiv:
  1310                           	opt stack 0
  1311  000076                     CANsendMessage@dataLength:
  1312                           	opt stack 0
  1313  000076                     ___lwdiv@counter:
  1314                           	opt stack 0
  1315  000076                     delay_ms@value_ms:
  1316                           	opt stack 0
  1317  000076                     ___awdiv@dividend:
  1318                           	opt stack 0
  1319                           
  1320                           ; 2 bytes @ 0x16
  1321  000076                     	ds	1
  1322  000077                     CANsendMessage@flags:
  1323                           	opt stack 0
  1324  000077                     utoa@buf:
  1325                           	opt stack 0
  1326                           
  1327                           ; 2 bytes @ 0x17
  1328  000077                     	ds	1
  1329  000078                     ??__tdiv_to_l_:
  1330  000078                     ??_CANsendMessage:
  1331  000078                     ??___flge:
  1332  000078                     LCD_send_command@D2:
  1333                           	opt stack 0
  1334  000078                     ___llmod@counter:
  1335                           	opt stack 0
  1336  000078                     ___awdiv@divisor:
  1337                           	opt stack 0
  1338  000078                     __div_to_l_@quot:
  1339                           	opt stack 0
  1340  000078                     ___lldiv@quotient:
  1341                           	opt stack 0
  1342                           
  1343                           ; 4 bytes @ 0x18
  1344  000078                     	ds	1
  1345  000079                     CANSetMask@numBuffer:
  1346                           	opt stack 0
  1347  000079                     CANSetFilter@numBuffer:
  1348                           	opt stack 0
  1349  000079                     LCD_send_command@D1:
  1350                           	opt stack 0
  1351  000079                     utoa@val:
  1352                           	opt stack 0
  1353                           
  1354                           ; 2 bytes @ 0x19
  1355  000079                     	ds	1
  1356  00007A                     ?___awtofl:
  1357                           	opt stack 0
  1358  00007A                     ?___lbtofl:
  1359                           	opt stack 0
  1360  00007A                     ?___lltofl:
  1361                           	opt stack 0
  1362  00007A                     ?___lwtofl:
  1363                           	opt stack 0
  1364  00007A                     LCD_send_command@D0:
  1365                           	opt stack 0
  1366  00007A                     ___awdiv@counter:
  1367                           	opt stack 0
  1368  00007A                     ___awtofl@c:
  1369                           	opt stack 0
  1370  00007A                     ___lwtofl@c:
  1371                           	opt stack 0
  1372  00007A                     CANSetMask@tamp:
  1373                           	opt stack 0
  1374  00007A                     CANSetFilter@tamp:
  1375                           	opt stack 0
  1376  00007A                     ___lltofl@c:
  1377                           	opt stack 0
  1378                           
  1379                           ; 4 bytes @ 0x1A
  1380  00007A                     	ds	1
  1381  00007B                     LCD_send_command@D3:
  1382                           	opt stack 0
  1383  00007B                     ___awdiv@sign:
  1384                           	opt stack 0
  1385  00007B                     utoa@base:
  1386                           	opt stack 0
  1387  00007B                     __tdiv_to_l_@quot:
  1388                           	opt stack 0
  1389                           
  1390                           ; 4 bytes @ 0x1B
  1391  00007B                     	ds	1
  1392  00007C                     LCD_shift_cursor@number_of_shift:
  1393                           	opt stack 0
  1394  00007C                     LCD_goto_line@line:
  1395                           	opt stack 0
  1396  00007C                     LCD_write_char@D3:
  1397                           	opt stack 0
  1398  00007C                     LCD_cursor@blinking:
  1399                           	opt stack 0
  1400  00007C                     __div_to_l_@cntr:
  1401                           	opt stack 0
  1402  00007C                     ___lldiv@counter:
  1403                           	opt stack 0
  1404  00007C                     ___awdiv@quotient:
  1405                           	opt stack 0
  1406  00007C                     CANsendMessage@tamp:
  1407                           	opt stack 0
  1408                           
  1409                           ; 4 bytes @ 0x1C
  1410  00007C                     	ds	1
  1411  00007D                     LCD_shift_cursor@shift:
  1412                           	opt stack 0
  1413  00007D                     LCD_write_char@D2:
  1414                           	opt stack 0
  1415  00007D                     LCD_cursor@active:
  1416                           	opt stack 0
  1417  00007D                     __div_to_l_@exp1:
  1418                           	opt stack 0
  1419  00007D                     utoa@v:
  1420                           	opt stack 0
  1421                           
  1422                           ; 2 bytes @ 0x1D
  1423  00007D                     	ds	1
  1424  00007E                     ?___fldiv:
  1425                           	opt stack 0
  1426  00007E                     CANInitialize@phaseSeg1:
  1427                           	opt stack 0
  1428  00007E                     LCD_shift_cursor@i:
  1429                           	opt stack 0
  1430  00007E                     LCD_write_char@D1:
  1431                           	opt stack 0
  1432  00007E                     LCD_initialize@quartz_frequency:
  1433                           	opt stack 0
  1434  00007E                     ___awtofl@sign:
  1435                           	opt stack 0
  1436  00007E                     ___lbtofl@c:
  1437                           	opt stack 0
  1438  00007E                     ___fldiv@f1:
  1439                           	opt stack 0
  1440                           
  1441                           ; 4 bytes @ 0x1E
  1442  00007E                     	ds	1
  1443  00007F                     ?___flmul:
  1444                           	opt stack 0
  1445  00007F                     CANInitialize@phaseSeg2:
  1446                           	opt stack 0
  1447  00007F                     LCD_goto_xy@y:
  1448                           	opt stack 0
  1449  00007F                     LCD_write_char@D0:
  1450                           	opt stack 0
  1451  00007F                     __tdiv_to_l_@cntr:
  1452                           	opt stack 0
  1453  00007F                     utoa@c:
  1454                           	opt stack 0
  1455  00007F                     ___flmul@f1:
  1456                           	opt stack 0
  1457                           
  1458                           ; 4 bytes @ 0x1F
  1459  00007F                     	ds	1
  1460  000080                     CANInitialize@SJW:
  1461                           	opt stack 0
  1462  000080                     LCD_goto_xy@x:
  1463                           	opt stack 0
  1464  000080                     LCD_write_char@value:
  1465                           	opt stack 0
  1466  000080                     __tdiv_to_l_@exp1:
  1467                           	opt stack 0
  1468  000080                     itoa@buf:
  1469                           	opt stack 0
  1470                           
  1471                           ; 2 bytes @ 0x20
  1472  000080                     	ds	1
  1473  000081                     CANInitialize@BRP:
  1474                           	opt stack 0
  1475  000081                     LCD_write_message@buffer:
  1476                           	opt stack 0
  1477  000081                     LCD_write_string@buffer:
  1478                           	opt stack 0
  1479                           
  1480                           ; 2 bytes @ 0x21
  1481  000081                     	ds	1
  1482  000082                     CANInitialize@flags:
  1483                           	opt stack 0
  1484  000082                     itoa@val:
  1485                           	opt stack 0
  1486  000082                     ___fldiv@f2:
  1487                           	opt stack 0
  1488                           
  1489                           ; 4 bytes @ 0x22
  1490  000082                     	ds	1
  1491  000083                     ??_CANInitialize:
  1492  000083                     ___flmul@f2:
  1493                           	opt stack 0
  1494                           
  1495                           ; 4 bytes @ 0x23
  1496  000083                     	ds	1
  1497  000084                     itoa@base:
  1498                           	opt stack 0
  1499                           
  1500                           ; 2 bytes @ 0x24
  1501  000084                     	ds	2
  1502  000086                     itoa@cp:
  1503                           	opt stack 0
  1504  000086                     ___fldiv@f3:
  1505                           	opt stack 0
  1506                           
  1507                           ; 4 bytes @ 0x26
  1508  000086                     	ds	1
  1509  000087                     CANInitialize@propSeg:
  1510                           	opt stack 0
  1511  000087                     ___flmul@exp:
  1512                           	opt stack 0
  1513                           
  1514                           ; 1 bytes @ 0x27
  1515  000087                     	ds	1
  1516  000088                     CANInitialize@FilterConfig1:
  1517                           	opt stack 0
  1518  000088                     LCD_write_integer@value:
  1519                           	opt stack 0
  1520  000088                     ___flmul@f3_as_product:
  1521                           	opt stack 0
  1522                           
  1523                           ; 4 bytes @ 0x28
  1524  000088                     	ds	1
  1525  000089                     CANInitialize@FilterConfig2:
  1526                           	opt stack 0
  1527                           
  1528                           ; 1 bytes @ 0x29
  1529  000089                     	ds	1
  1530  00008A                     LCD_write_integer@number_of_digits:
  1531                           	opt stack 0
  1532  00008A                     ___fldiv@cntr:
  1533                           	opt stack 0
  1534                           
  1535                           ; 1 bytes @ 0x2A
  1536  00008A                     	ds	1
  1537  00008B                     LCD_write_integer@zero_cleaning:
  1538                           	opt stack 0
  1539  00008B                     ___fldiv@exp:
  1540                           	opt stack 0
  1541                           
  1542                           ; 1 bytes @ 0x2B
  1543  00008B                     	ds	1
  1544  00008C                     ??_LCD_write_integer:
  1545  00008C                     ___fldiv@sign:
  1546                           	opt stack 0
  1547  00008C                     ___flmul@cntr:
  1548                           	opt stack 0
  1549                           
  1550                           ; 1 bytes @ 0x2C
  1551  00008C                     	ds	1
  1552  00008D                     ___flmul@sign:
  1553                           	opt stack 0
  1554                           
  1555                           ; 1 bytes @ 0x2D
  1556  00008D                     	ds	1
  1557  00008E                     ?_fround:
  1558                           	opt stack 0
  1559  00008E                     ?_scale:
  1560                           	opt stack 0
  1561  00008E                     ?___flneg:
  1562                           	opt stack 0
  1563  00008E                     ___flneg@f1:
  1564                           	opt stack 0
  1565                           
  1566                           ; 4 bytes @ 0x2E
  1567  00008E                     	ds	3
  1568  000091                     LCD_write_integer@convertedInt:
  1569                           	opt stack 0
  1570                           
  1571                           ; 6 bytes @ 0x31
  1572  000091                     	ds	1
  1573  000092                     _fround$4235:
  1574                           	opt stack 0
  1575  000092                     _scale$4236:
  1576                           	opt stack 0
  1577                           
  1578                           ; 4 bytes @ 0x32
  1579  000092                     	ds	4
  1580  000096                     scale@scl:
  1581                           	opt stack 0
  1582  000096                     _fround$4234:
  1583                           	opt stack 0
  1584                           
  1585                           ; 4 bytes @ 0x36
  1586  000096                     	ds	1
  1587  000097                     LCD_write_integer@index:
  1588                           	opt stack 0
  1589                           
  1590                           ; 1 bytes @ 0x37
  1591  000097                     	ds	3
  1592  00009A                     fround@prec:
  1593                           	opt stack 0
  1594                           
  1595                           ; 1 bytes @ 0x3A
  1596  00009A                     	ds	1
  1597  00009B                     ?___fladd:
  1598                           	opt stack 0
  1599  00009B                     ___fladd@f1:
  1600                           	opt stack 0
  1601                           
  1602                           ; 4 bytes @ 0x3B
  1603  00009B                     	ds	4
  1604  00009F                     ___fladd@f2:
  1605                           	opt stack 0
  1606                           
  1607                           ; 4 bytes @ 0x3F
  1608  00009F                     	ds	4
  1609  0000A3                     ??___fladd:
  1610                           
  1611                           ; 0 bytes @ 0x43
  1612  0000A3                     	ds	1
  1613  0000A4                     ___fladd@sign:
  1614                           	opt stack 0
  1615                           
  1616                           ; 1 bytes @ 0x44
  1617  0000A4                     	ds	1
  1618  0000A5                     ___fladd@exp2:
  1619                           	opt stack 0
  1620                           
  1621                           ; 1 bytes @ 0x45
  1622  0000A5                     	ds	1
  1623  0000A6                     ___fladd@exp1:
  1624                           	opt stack 0
  1625                           
  1626                           ; 1 bytes @ 0x46
  1627  0000A6                     	ds	1
  1628  0000A7                     ?___flsub:
  1629                           	opt stack 0
  1630  0000A7                     ?___fltol:
  1631                           	opt stack 0
  1632  0000A7                     ___flsub@f1:
  1633                           	opt stack 0
  1634  0000A7                     ___fltol@f1:
  1635                           	opt stack 0
  1636                           
  1637                           ; 4 bytes @ 0x47
  1638  0000A7                     	ds	4
  1639  0000AB                     ??___fltol:
  1640  0000AB                     ___flsub@f2:
  1641                           	opt stack 0
  1642                           
  1643                           ; 4 bytes @ 0x4B
  1644  0000AB                     	ds	4
  1645  0000AF                     ___fltol@sign1:
  1646                           	opt stack 0
  1647                           
  1648                           ; 1 bytes @ 0x4F
  1649  0000AF                     	ds	1
  1650  0000B0                     ___fltol@exp1:
  1651                           	opt stack 0
  1652                           
  1653                           ; 1 bytes @ 0x50
  1654  0000B0                     	ds	1
  1655  0000B1                     ?_sprintf:
  1656                           	opt stack 0
  1657  0000B1                     sprintf@sp:
  1658                           	opt stack 0
  1659                           
  1660                           ; 2 bytes @ 0x51
  1661  0000B1                     	ds	2
  1662  0000B3                     sprintf@f:
  1663                           	opt stack 0
  1664                           
  1665                           ; 2 bytes @ 0x53
  1666  0000B3                     	ds	6
  1667  0000B9                     ??_sprintf:
  1668                           
  1669                           ; 0 bytes @ 0x59
  1670  0000B9                     	ds	2
  1671  0000BB                     tblptru	equ	0xFF8
  1672                           tblptrh	equ	0xFF7
  1673                           tblptrl	equ	0xFF6
  1674                           tablat	equ	0xFF5
  1675                           postinc0	equ	0xFEE
  1676                           wreg	equ	0xFE8
  1677                           
  1678                           ; 0 bytes @ 0x5B
  1679                           
  1680                           	psect	cstackCOMRAM
  1681  000029                     __pcstackCOMRAM:
  1682                           	opt stack 0
  1683  000029                     ??_ISR_bassa:
  1684  000029                     
  1685                           ; 1 bytes @ 0x0
  1686  000029                     	ds	17
  1687  00003A                     _CANisRxReady$3257:
  1688                           	opt stack 0
  1689  00003A                     i2_CANisTxReady$3255:
  1690                           	opt stack 0
  1691  00003A                     CANreceiveMessage@msg:
  1692                           	opt stack 0
  1693  00003A                     i2CANsendMessage@identifier:
  1694                           	opt stack 0
  1695                           
  1696                           ; 4 bytes @ 0x11
  1697  00003A                     	ds	2
  1698  00003C                     ??_CANreceiveMessage:
  1699                           
  1700                           ; 0 bytes @ 0x13
  1701  00003C                     	ds	2
  1702  00003E                     i2CANsendMessage@data:
  1703                           	opt stack 0
  1704                           
  1705                           ; 2 bytes @ 0x15
  1706  00003E                     	ds	2
  1707  000040                     i2CANsendMessage@dataLength:
  1708                           	opt stack 0
  1709                           
  1710                           ; 1 bytes @ 0x17
  1711  000040                     	ds	1
  1712  000041                     i2CANsendMessage@flags:
  1713                           	opt stack 0
  1714                           
  1715                           ; 1 bytes @ 0x18
  1716  000041                     	ds	1
  1717  000042                     ??i2_CANsendMessage:
  1718                           
  1719                           ; 0 bytes @ 0x19
  1720  000042                     	ds	2
  1721  000044                     CANreceiveMessage@error:
  1722                           	opt stack 0
  1723                           
  1724                           ; 1 bytes @ 0x1B
  1725  000044                     	ds	1
  1726  000045                     CANreceiveMessage@tamp:
  1727                           	opt stack 0
  1728                           
  1729                           ; 1 bytes @ 0x1C
  1730  000045                     	ds	1
  1731  000046                     i2CANsendMessage@tamp:
  1732                           	opt stack 0
  1733                           
  1734                           ; 4 bytes @ 0x1D
  1735  000046                     	ds	4
  1736  00004A                     ISR_alta@i:
  1737                           	opt stack 0
  1738                           
  1739                           ; 1 bytes @ 0x21
  1740  00004A                     	ds	1
  1741                           tblptru	equ	0xFF8
  1742                           tblptrh	equ	0xFF7
  1743                           tblptrl	equ	0xFF6
  1744                           tablat	equ	0xFF5
  1745                           postinc0	equ	0xFEE
  1746                           wreg	equ	0xFE8
  1747                           
  1748 ;;
  1749 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1750 ;;
  1751 ;; *************** function _main *****************
  1752 ;; Defined at:
  1753 ;;		line 209 in file "RemoteCan.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;		None
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;		None
  1758 ;; Return value:  Size  Location     Type
  1759 ;;		None               void
  1760 ;; Registers used:
  1761 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1769 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1770 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1771 ;;Total ram usage:        8 bytes
  1772 ;; Hardware stack levels required when called:   11
  1773 ;; This function calls:
  1774 ;;		_CAN_Rx
  1775 ;;		_CAN_Tx
  1776 ;;		_CANisTxReady
  1777 ;;		_CANsendMessage
  1778 ;;		_F1_Button_Polling
  1779 ;;		_F2_Button_Polling
  1780 ;;		_Joystick_Polling
  1781 ;;		_LCD_End
  1782 ;;		_LCD_Error
  1783 ;;		_LCD_Gap
  1784 ;;		_LCD_Handler
  1785 ;;		_LCD_Park
  1786 ;;		_LCD_Parking
  1787 ;;		_LCD_goto_line
  1788 ;;		_LCD_initialize
  1789 ;;		_LCD_write_message
  1790 ;;		_PWR_Button_Polling
  1791 ;;		___awtofl
  1792 ;;		___fladd
  1793 ;;		___flmul
  1794 ;;		___flneg
  1795 ;;		___fltol
  1796 ;;		___lbtofl
  1797 ;;		_board_initialization
  1798 ;;		_delay_ms
  1799 ;; This function is called by:
  1800 ;;		Startup code after reset
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           	psect	text0
  1805  011BD6                     __ptext0:
  1806                           	opt stack 0
  1807  011BD6                     _main:
  1808                           	opt stack 20
  1809                           
  1810                           ;RemoteCan.c: 210: board_initialization();
  1811                           
  1812                           ;incstack = 0
  1813  011BD6  EC78  F0AA         	call	_board_initialization	;wreg free
  1814                           
  1815                           ;RemoteCan.c: 218: JoystickConstants[0] = 0.703;
  1816  011BDA  0ECF               	movlw	207
  1817  011BDC  0100               	movlb	0	; () banked
  1818  011BDE  6FBB               	movwf	_JoystickConstants& (0+255),b	;volatile
  1819  011BE0  0EF7               	movlw	247
  1820  011BE2  6FBC               	movwf	(_JoystickConstants+1)& (0+255),b	;volatile
  1821  011BE4  0E33               	movlw	51
  1822  011BE6  6FBD               	movwf	(_JoystickConstants+2)& (0+255),b	;volatile
  1823  011BE8  0E3F               	movlw	63
  1824  011BEA  6FBE               	movwf	(_JoystickConstants+3)& (0+255),b	;volatile
  1825                           
  1826                           ; BSR set to: 0
  1827                           ;RemoteCan.c: 219: JoystickConstants[1] = 15;
  1828  011BEC  0E00               	movlw	0
  1829  011BEE  0100               	movlb	0	; () banked
  1830  011BF0  6FBF               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  1831  011BF2  0E00               	movlw	0
  1832  011BF4  6FC0               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  1833  011BF6  0E70               	movlw	112
  1834  011BF8  6FC1               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  1835  011BFA  0E41               	movlw	65
  1836  011BFC  6FC2               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  1837                           
  1838                           ; BSR set to: 0
  1839                           ;RemoteCan.c: 221: data_brake [1] = 1;
  1840  011BFE  0E01               	movlw	1
  1841  011C00  0100               	movlb	0	; () banked
  1842  011C02  6FE9               	movwf	(_data_brake+1)& (0+255),b
  1843  011C04  D000               	goto	l8560
  1844  011C06                     l8560:
  1845                           
  1846                           ;RemoteCan.c: 226: PWR_Button_Polling();
  1847  011C06  EC8E  F0AF         	call	_PWR_Button_Polling	;wreg free
  1848                           
  1849                           ;RemoteCan.c: 227: F1_Button_Polling();
  1850  011C0A  ECA4  F0AF         	call	_F1_Button_Polling	;wreg free
  1851                           
  1852                           ;RemoteCan.c: 228: F2_Button_Polling();
  1853  011C0E  EC99  F0AF         	call	_F2_Button_Polling	;wreg free
  1854                           
  1855                           ;RemoteCan.c: 231: if (power_switch == 0) {
  1856  011C12  BC4C               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1857  011C14  D08C               	goto	l819
  1858                           
  1859                           ;RemoteCan.c: 232: dir = 1;
  1860  011C16  0E01               	movlw	1
  1861  011C18  0100               	movlb	0	; () banked
  1862  011C1A  6FE3               	movwf	_dir& (0+255),b	;volatile
  1863                           
  1864                           ;RemoteCan.c: 233: set_speed = 0;
  1865  011C1C  0E00               	movlw	0
  1866  011C1E  0100               	movlb	0	; () banked
  1867  011C20  6FE2               	movwf	(_set_speed+1)& (0+255),b	;volatile
  1868  011C22  0E00               	movlw	0
  1869  011C24  6FE1               	movwf	_set_speed& (0+255),b	;volatile
  1870                           
  1871                           ;RemoteCan.c: 234: data_steering [0] = 90;
  1872  011C26  0E5A               	movlw	90
  1873  011C28  0100               	movlb	0	; () banked
  1874  011C2A  6FEA               	movwf	_data_steering& (0+255),b
  1875                           
  1876                           ;RemoteCan.c: 235: data_brake [0] = 0b00000000;
  1877  011C2C  0E00               	movlw	0
  1878  011C2E  0100               	movlb	0	; () banked
  1879  011C30  6FE8               	movwf	_data_brake& (0+255),b
  1880                           
  1881                           ; BSR set to: 0
  1882                           ;RemoteCan.c: 236: CAN_Tx();
  1883  011C32  ECBE  F0A9         	call	_CAN_Tx	;wreg free
  1884                           
  1885                           ;RemoteCan.c: 237: PORTDbits.RD6 = 0;
  1886  011C36  9C83               	bcf	3971,6,c	;volatile
  1887                           
  1888                           ;RemoteCan.c: 238: PORTDbits.RD5 = 0;
  1889  011C38  9A83               	bcf	3971,5,c	;volatile
  1890                           
  1891                           ;RemoteCan.c: 239: LCD_initialize(16);
  1892  011C3A  0E10               	movlw	16
  1893  011C3C  EC0D  F0A5         	call	_LCD_initialize
  1894                           
  1895                           ;RemoteCan.c: 240: LCD_goto_line(1);
  1896  011C40  0E01               	movlw	1
  1897  011C42  EC1A  F0A8         	call	_LCD_goto_line
  1898                           
  1899                           ;RemoteCan.c: 241: LCD_write_message("====================");
  1900  011C46  0E7F               	movlw	low STR_1
  1901  011C48  0100               	movlb	0	; () banked
  1902  011C4A  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  1903  011C4C  0EFF               	movlw	high STR_1
  1904  011C4E  0100               	movlb	0	; () banked
  1905  011C50  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1906  011C52  EC89  F0AE         	call	_LCD_write_message	;wreg free
  1907                           
  1908                           ;RemoteCan.c: 242: LCD_goto_line(2);
  1909  011C56  0E02               	movlw	2
  1910  011C58  EC1A  F0A8         	call	_LCD_goto_line
  1911                           
  1912                           ;RemoteCan.c: 243: LCD_write_message("==> VEHICLE  OFF <==");
  1913  011C5C  0E55               	movlw	low STR_2
  1914  011C5E  0100               	movlb	0	; () banked
  1915  011C60  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  1916  011C62  0EFF               	movlw	high STR_2
  1917  011C64  0100               	movlb	0	; () banked
  1918  011C66  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1919  011C68  EC89  F0AE         	call	_LCD_write_message	;wreg free
  1920                           
  1921                           ;RemoteCan.c: 244: LCD_goto_line(3);
  1922  011C6C  0E03               	movlw	3
  1923  011C6E  EC1A  F0A8         	call	_LCD_goto_line
  1924                           
  1925                           ;RemoteCan.c: 245: LCD_write_message("  Press the button  ");
  1926  011C72  0E83               	movlw	low STR_3
  1927  011C74  0100               	movlb	0	; () banked
  1928  011C76  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  1929  011C78  0EFE               	movlw	high STR_3
  1930  011C7A  0100               	movlb	0	; () banked
  1931  011C7C  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1932  011C7E  EC89  F0AE         	call	_LCD_write_message	;wreg free
  1933                           
  1934                           ;RemoteCan.c: 246: LCD_goto_line(4);
  1935  011C82  0E04               	movlw	4
  1936  011C84  EC1A  F0A8         	call	_LCD_goto_line
  1937                           
  1938                           ;RemoteCan.c: 247: LCD_write_message("====================");
  1939  011C88  0E7F               	movlw	low STR_1
  1940  011C8A  0100               	movlb	0	; () banked
  1941  011C8C  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  1942  011C8E  0EFF               	movlw	high STR_1
  1943  011C90  0100               	movlb	0	; () banked
  1944  011C92  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1945  011C94  EC89  F0AE         	call	_LCD_write_message	;wreg free
  1946                           
  1947                           ;RemoteCan.c: 248: while (power_switch == 0) {
  1948  011C98  D046               	goto	l8602
  1949  011C9A                     l8594:
  1950                           
  1951                           ;RemoteCan.c: 249: if ((time_counter - pr_time_1) >= 30) {
  1952  011C9A  C0C7  F13A         	movff	_pr_time_1,??_main	;volatile
  1953  011C9E  C0C8  F13B         	movff	_pr_time_1+1,??_main+1	;volatile
  1954  011CA2  C0C9  F13C         	movff	_pr_time_1+2,??_main+2	;volatile
  1955  011CA6  C0CA  F13D         	movff	_pr_time_1+3,??_main+3	;volatile
  1956  011CAA  0101               	movlb	1	; () banked
  1957  011CAC  1F3A               	comf	??_main& (0+255),f,b
  1958  011CAE  1F3B               	comf	(??_main+1)& (0+255),f,b
  1959  011CB0  1F3C               	comf	(??_main+2)& (0+255),f,b
  1960  011CB2  1F3D               	comf	(??_main+3)& (0+255),f,b
  1961  011CB4  2B3A               	incf	??_main& (0+255),f,b
  1962  011CB6  0E00               	movlw	0
  1963  011CB8  233B               	addwfc	(??_main+1)& (0+255),f,b
  1964  011CBA  233C               	addwfc	(??_main+2)& (0+255),f,b
  1965  011CBC  233D               	addwfc	(??_main+3)& (0+255),f,b
  1966  011CBE  500D               	movf	_time_counter,w,c	;volatile
  1967  011CC0  0101               	movlb	1	; () banked
  1968  011CC2  253A               	addwf	??_main& (0+255),w,b
  1969  011CC4  0101               	movlb	1	; () banked
  1970  011CC6  6F3E               	movwf	(??_main+4)& (0+255),b
  1971  011CC8  500E               	movf	_time_counter+1,w,c	;volatile
  1972  011CCA  0101               	movlb	1	; () banked
  1973  011CCC  213B               	addwfc	(??_main+1)& (0+255),w,b
  1974  011CCE  0101               	movlb	1	; () banked
  1975  011CD0  6F3F               	movwf	(??_main+5)& (0+255),b
  1976  011CD2  500F               	movf	_time_counter+2,w,c	;volatile
  1977  011CD4  0101               	movlb	1	; () banked
  1978  011CD6  213C               	addwfc	(??_main+2)& (0+255),w,b
  1979  011CD8  0101               	movlb	1	; () banked
  1980  011CDA  6F40               	movwf	(??_main+6)& (0+255),b
  1981  011CDC  5010               	movf	_time_counter+3,w,c	;volatile
  1982  011CDE  0101               	movlb	1	; () banked
  1983  011CE0  213D               	addwfc	(??_main+3)& (0+255),w,b
  1984  011CE2  0101               	movlb	1	; () banked
  1985  011CE4  6F41               	movwf	(??_main+7)& (0+255),b
  1986  011CE6  0101               	movlb	1	; () banked
  1987  011CE8  5141               	movf	(??_main+7)& (0+255),w,b
  1988  011CEA  0101               	movlb	1	; () banked
  1989  011CEC  1140               	iorwf	(??_main+6)& (0+255),w,b
  1990  011CEE  0101               	movlb	1	; () banked
  1991  011CF0  113F               	iorwf	(??_main+5)& (0+255),w,b
  1992  011CF2  E105               	bnz	u10740
  1993  011CF4  0E1E               	movlw	30
  1994  011CF6  0101               	movlb	1	; () banked
  1995  011CF8  5D3E               	subwf	(??_main+4)& (0+255),w,b
  1996  011CFA  A0D8               	btfss	status,0,c
  1997  011CFC  D00A               	goto	l8598
  1998  011CFE                     u10740:
  1999                           
  2000                           ; BSR set to: 1
  2001                           ;RemoteCan.c: 250: pr_time_1 = time_counter;
  2002  011CFE  C00D  F0C7         	movff	_time_counter,_pr_time_1	;volatile
  2003  011D02  C00E  F0C8         	movff	_time_counter+1,_pr_time_1+1	;volatile
  2004  011D06  C00F  F0C9         	movff	_time_counter+2,_pr_time_1+2	;volatile
  2005  011D0A  C010  F0CA         	movff	_time_counter+3,_pr_time_1+3	;volatile
  2006                           
  2007                           ;RemoteCan.c: 251: PORTDbits.RD7 = ~PORTDbits.RD7;
  2008  011D0E  7E83               	btg	3971,7,c	;volatile
  2009  011D10  D000               	goto	l8598
  2010  011D12                     l8598:
  2011                           
  2012                           ; BSR set to: 1
  2013                           ;RemoteCan.c: 252: }
  2014                           ;RemoteCan.c: 253: PWR_Button_Polling();
  2015  011D12  EC8E  F0AF         	call	_PWR_Button_Polling	;wreg free
  2016                           
  2017                           ;RemoteCan.c: 254: delay_ms(10);
  2018  011D16  0E00               	movlw	0
  2019  011D18  0100               	movlb	0	; () banked
  2020  011D1A  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2021  011D1C  0E0A               	movlw	10
  2022  011D1E  6F76               	movwf	delay_ms@value_ms& (0+255),b
  2023  011D20  EC35  F0AE         	call	_delay_ms	;wreg free
  2024  011D24  D000               	goto	l8602
  2025  011D26                     l8602:
  2026  011D26  AC4C               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  2027  011D28  D7B8               	goto	l8594
  2028                           
  2029                           ;RemoteCan.c: 255: }
  2030                           ;RemoteCan.c: 256: PORTDbits.RD7 = 0;
  2031  011D2A  9E83               	bcf	3971,7,c	;volatile
  2032                           
  2033                           ;RemoteCan.c: 257: display_refresh = 1;
  2034  011D2C  844C               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  2035  011D2E                     l819:
  2036                           
  2037                           ;RemoteCan.c: 258: }
  2038                           ;RemoteCan.c: 261: if (PORTAbits.RA2 == 1) {
  2039  011D2E  A480               	btfss	3968,2,c	;volatile
  2040  011D30  D004               	goto	l824
  2041                           
  2042                           ;RemoteCan.c: 262: switch_position = 0;
  2043  011D32  0E00               	movlw	0
  2044  011D34  0100               	movlb	0	; () banked
  2045  011D36  6FE7               	movwf	_switch_position& (0+255),b	;volatile
  2046                           
  2047                           ;RemoteCan.c: 263: } else {
  2048  011D38  D018               	goto	l825
  2049  011D3A                     l824:
  2050                           
  2051                           ;RemoteCan.c: 264: if (PORTAbits.RA3 == 0) {
  2052  011D3A  B680               	btfsc	3968,3,c	;volatile
  2053  011D3C  D00A               	goto	l8612
  2054                           
  2055                           ;RemoteCan.c: 265: switch_position = 1;
  2056  011D3E  0E01               	movlw	1
  2057  011D40  0100               	movlb	0	; () banked
  2058  011D42  6FE7               	movwf	_switch_position& (0+255),b	;volatile
  2059                           
  2060                           ;RemoteCan.c: 266: dir = 1;
  2061  011D44  0E01               	movlw	1
  2062  011D46  0100               	movlb	0	; () banked
  2063  011D48  6FE3               	movwf	_dir& (0+255),b	;volatile
  2064                           
  2065                           ; BSR set to: 0
  2066                           ;RemoteCan.c: 267: if (FWD_sensor == 1) {
  2067  011D4A  AA4B               	btfss	_FWD_sensor/(0+8),_FWD_sensor& (0+7),c	;volatile
  2068  011D4C  D00C               	goto	l830
  2069  011D4E  D009               	goto	l8616
  2070                           
  2071                           ; BSR set to: 0
  2072                           ;RemoteCan.c: 271: }
  2073                           ;RemoteCan.c: 272: } else {
  2074                           
  2075                           ; BSR set to: 0
  2076                           ;RemoteCan.c: 270: collision_risk = 0;
  2077                           
  2078                           ;RemoteCan.c: 269: } else {
  2079                           
  2080                           ; BSR set to: 0
  2081                           ;RemoteCan.c: 268: collision_risk = 1;
  2082  011D50  D00C               	goto	l825
  2083  011D52                     l8612:
  2084                           
  2085                           ;RemoteCan.c: 273: switch_position = 2;
  2086  011D52  0E02               	movlw	2
  2087  011D54  0100               	movlb	0	; () banked
  2088  011D56  6FE7               	movwf	_switch_position& (0+255),b	;volatile
  2089                           
  2090                           ;RemoteCan.c: 274: dir = 0;
  2091  011D58  0E00               	movlw	0
  2092  011D5A  0100               	movlb	0	; () banked
  2093  011D5C  6FE3               	movwf	_dir& (0+255),b	;volatile
  2094                           
  2095                           ; BSR set to: 0
  2096                           ;RemoteCan.c: 275: if (BKWD_sensor == 1) {
  2097  011D5E  A24B               	btfss	_BKWD_sensor/(0+8),_BKWD_sensor& (0+7),c	;volatile
  2098  011D60  D002               	goto	l830
  2099  011D62                     l8616:
  2100                           
  2101                           ; BSR set to: 0
  2102                           ;RemoteCan.c: 276: collision_risk = 1;
  2103  011D62  824C               	bsf	_collision_risk/(0+8),_collision_risk& (0+7),c	;volatile
  2104                           
  2105                           ;RemoteCan.c: 277: } else {
  2106  011D64  D002               	goto	l825
  2107  011D66                     l830:
  2108                           
  2109                           ; BSR set to: 0
  2110                           ;RemoteCan.c: 278: collision_risk = 0;
  2111  011D66  924C               	bcf	_collision_risk/(0+8),_collision_risk& (0+7),c	;volatile
  2112                           
  2113                           ; BSR set to: 0
  2114  011D68  D000               	goto	l825
  2115  011D6A                     l825:
  2116                           
  2117                           ; BSR set to: 0
  2118                           ;RemoteCan.c: 279: }
  2119                           ;RemoteCan.c: 280: }
  2120                           ;RemoteCan.c: 281: }
  2121                           ;RemoteCan.c: 284: if (F1_switch == 1) {
  2122  011D6A  A64B               	btfss	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
  2123  011D6C  D0A9               	goto	l832
  2124                           
  2125                           ; BSR set to: 0
  2126                           ;RemoteCan.c: 285: y = 0;
  2127  011D6E  9C4D               	bcf	_y/(0+8),_y& (0+7),c	;volatile
  2128                           
  2129                           ;RemoteCan.c: 286: if ((x == 0)&&(F2_switch == 0)) {
  2130  011D70  AA4D               	btfss	_x/(0+8),_x& (0+7),c	;volatile
  2131                           
  2132                           ; BSR set to: 0
  2133  011D72  B84B               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2134  011D74  D02F               	goto	l8634
  2135                           
  2136                           ; BSR set to: 0
  2137                           ;RemoteCan.c: 287: space_available = 0;
  2138  011D76  9E4C               	bcf	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2139                           
  2140                           ; BSR set to: 0
  2141                           ;RemoteCan.c: 288: parking_state = 1;
  2142  011D78  0E01               	movlw	1
  2143  011D7A  0100               	movlb	0	; () banked
  2144  011D7C  6FE5               	movwf	_parking_state& (0+255),b	;volatile
  2145                           
  2146                           ;RemoteCan.c: 289: JoystickConstants[1] = 1;
  2147  011D7E  0E00               	movlw	0
  2148  011D80  0100               	movlb	0	; () banked
  2149  011D82  6FBF               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2150  011D84  0E00               	movlw	0
  2151  011D86  6FC0               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2152  011D88  0E80               	movlw	128
  2153  011D8A  6FC1               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2154  011D8C  0E3F               	movlw	63
  2155  011D8E  6FC2               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2156                           
  2157                           ; BSR set to: 0
  2158                           
  2159                           ;RemoteCan.c: 290: while (!CANisTxReady());
  2160  011D90  D000               	goto	l8626
  2161  011D92                     l8626:
  2162  011D92  EC34  F0AF         	call	_CANisTxReady	;wreg free
  2163  011D96  0900               	iorlw	0
  2164  011D98  B4D8               	btfsc	status,2,c
  2165  011D9A  D7FB               	goto	l8626
  2166                           
  2167                           ;RemoteCan.c: 291: park_assist_state[0] = 0b00000001;
  2168  011D9C  0E01               	movlw	1
  2169  011D9E  0101               	movlb	1	; () banked
  2170  011DA0  6F19               	movwf	_park_assist_state& (0+255),b
  2171                           
  2172                           ; BSR set to: 1
  2173                           ;RemoteCan.c: 292: CANsendMessage(0b00000001100, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2174  011DA2  0E0C               	movlw	12
  2175  011DA4  0100               	movlb	0	; () banked
  2176  011DA6  6F70               	movwf	CANsendMessage@identifier& (0+255),b
  2177  011DA8  0E00               	movlw	0
  2178  011DAA  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2179  011DAC  0E00               	movlw	0
  2180  011DAE  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2181  011DB0  0E00               	movlw	0
  2182  011DB2  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2183  011DB4  0E19               	movlw	low _park_assist_state
  2184  011DB6  0100               	movlb	0	; () banked
  2185  011DB8  6F74               	movwf	CANsendMessage@data& (0+255),b
  2186  011DBA  0E01               	movlw	high _park_assist_state
  2187  011DBC  0100               	movlb	0	; () banked
  2188  011DBE  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
  2189  011DC0  0E08               	movlw	8
  2190  011DC2  0100               	movlb	0	; () banked
  2191  011DC4  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
  2192  011DC6  0EBC               	movlw	188
  2193  011DC8  0100               	movlb	0	; () banked
  2194  011DCA  6F77               	movwf	CANsendMessage@flags& (0+255),b
  2195  011DCC  EC1B  F08A         	call	_CANsendMessage	;wreg free
  2196                           
  2197                           ;RemoteCan.c: 293: x = 1;
  2198  011DD0  8A4D               	bsf	_x/(0+8),_x& (0+7),c	;volatile
  2199  011DD2  D000               	goto	l8634
  2200  011DD4                     l8634:
  2201                           
  2202                           ;RemoteCan.c: 294: }
  2203                           ;RemoteCan.c: 296: if ((F2_switch == 1)&&(space_available == 1)&&(space_gap_reached == 1
      +                          )) {
  2204  011DD4  B84B               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2205  011DD6  AE4C               	btfss	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2206  011DD8  D02A               	goto	l837
  2207  011DDA  A04D               	btfss	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2208  011DDC  D028               	goto	l837
  2209                           
  2210                           ;RemoteCan.c: 297: if (z == 0) {
  2211  011DDE  BE4D               	btfsc	_z/(0+8),_z& (0+7),c	;volatile
  2212  011DE0  D028               	goto	l8652
  2213                           
  2214                           ;RemoteCan.c: 298: parking_message_ID = 4;
  2215  011DE2  0E04               	movlw	4
  2216  011DE4  0100               	movlb	0	; () banked
  2217  011DE6  6FE4               	movwf	_parking_message_ID& (0+255),b	;volatile
  2218                           
  2219                           ;RemoteCan.c: 299: parking_state = 2;
  2220  011DE8  0E02               	movlw	2
  2221  011DEA  0100               	movlb	0	; () banked
  2222  011DEC  6FE5               	movwf	_parking_state& (0+255),b	;volatile
  2223                           
  2224                           ; BSR set to: 0
  2225                           
  2226                           ;RemoteCan.c: 300: while (!CANisTxReady());
  2227  011DEE  D000               	goto	l8644
  2228  011DF0                     l8644:
  2229  011DF0  EC34  F0AF         	call	_CANisTxReady	;wreg free
  2230  011DF4  0900               	iorlw	0
  2231  011DF6  B4D8               	btfsc	status,2,c
  2232  011DF8  D7FB               	goto	l8644
  2233                           
  2234                           ;RemoteCan.c: 301: CANsendMessage(0b00000001110, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
  2235  011DFA  0E0E               	movlw	14
  2236  011DFC  0100               	movlb	0	; () banked
  2237  011DFE  6F70               	movwf	CANsendMessage@identifier& (0+255),b
  2238  011E00  0E00               	movlw	0
  2239  011E02  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2240  011E04  0E00               	movlw	0
  2241  011E06  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2242  011E08  0E00               	movlw	0
  2243  011E0A  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2244  011E0C  0E28               	movlw	low _data
  2245  011E0E  0100               	movlb	0	; () banked
  2246  011E10  6F74               	movwf	CANsendMessage@data& (0+255),b
  2247  011E12  0E00               	movlw	high _data
  2248  011E14  0100               	movlb	0	; () banked
  2249  011E16  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
  2250  011E18  0E08               	movlw	8
  2251  011E1A  0100               	movlb	0	; () banked
  2252  011E1C  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
  2253  011E1E  0EBC               	movlw	188
  2254  011E20  0100               	movlb	0	; () banked
  2255  011E22  6F77               	movwf	CANsendMessage@flags& (0+255),b
  2256  011E24  EC1B  F08A         	call	_CANsendMessage	;wreg free
  2257                           
  2258                           ;RemoteCan.c: 302: x = 0;
  2259  011E28  9A4D               	bcf	_x/(0+8),_x& (0+7),c	;volatile
  2260                           
  2261                           ;RemoteCan.c: 303: z = 1;
  2262  011E2A  8E4D               	bsf	_z/(0+8),_z& (0+7),c	;volatile
  2263                           
  2264                           ;RemoteCan.c: 304: }
  2265                           ;RemoteCan.c: 305: } else {
  2266  011E2C  D002               	goto	l8652
  2267  011E2E                     l837:
  2268                           
  2269                           ;RemoteCan.c: 306: z = 0;
  2270  011E2E  9E4D               	bcf	_z/(0+8),_z& (0+7),c	;volatile
  2271  011E30  D000               	goto	l8652
  2272  011E32                     l8652:
  2273                           
  2274                           ;RemoteCan.c: 307: }
  2275                           ;RemoteCan.c: 309: if ((time_counter - pr_time_5) >= 30) {
  2276  011E32  C0D3  F13A         	movff	_pr_time_5,??_main	;volatile
  2277  011E36  C0D4  F13B         	movff	_pr_time_5+1,??_main+1	;volatile
  2278  011E3A  C0D5  F13C         	movff	_pr_time_5+2,??_main+2	;volatile
  2279  011E3E  C0D6  F13D         	movff	_pr_time_5+3,??_main+3	;volatile
  2280  011E42  0101               	movlb	1	; () banked
  2281  011E44  1F3A               	comf	??_main& (0+255),f,b
  2282  011E46  1F3B               	comf	(??_main+1)& (0+255),f,b
  2283  011E48  1F3C               	comf	(??_main+2)& (0+255),f,b
  2284  011E4A  1F3D               	comf	(??_main+3)& (0+255),f,b
  2285  011E4C  2B3A               	incf	??_main& (0+255),f,b
  2286  011E4E  0E00               	movlw	0
  2287  011E50  233B               	addwfc	(??_main+1)& (0+255),f,b
  2288  011E52  233C               	addwfc	(??_main+2)& (0+255),f,b
  2289  011E54  233D               	addwfc	(??_main+3)& (0+255),f,b
  2290  011E56  500D               	movf	_time_counter,w,c	;volatile
  2291  011E58  0101               	movlb	1	; () banked
  2292  011E5A  253A               	addwf	??_main& (0+255),w,b
  2293  011E5C  0101               	movlb	1	; () banked
  2294  011E5E  6F3E               	movwf	(??_main+4)& (0+255),b
  2295  011E60  500E               	movf	_time_counter+1,w,c	;volatile
  2296  011E62  0101               	movlb	1	; () banked
  2297  011E64  213B               	addwfc	(??_main+1)& (0+255),w,b
  2298  011E66  0101               	movlb	1	; () banked
  2299  011E68  6F3F               	movwf	(??_main+5)& (0+255),b
  2300  011E6A  500F               	movf	_time_counter+2,w,c	;volatile
  2301  011E6C  0101               	movlb	1	; () banked
  2302  011E6E  213C               	addwfc	(??_main+2)& (0+255),w,b
  2303  011E70  0101               	movlb	1	; () banked
  2304  011E72  6F40               	movwf	(??_main+6)& (0+255),b
  2305  011E74  5010               	movf	_time_counter+3,w,c	;volatile
  2306  011E76  0101               	movlb	1	; () banked
  2307  011E78  213D               	addwfc	(??_main+3)& (0+255),w,b
  2308  011E7A  0101               	movlb	1	; () banked
  2309  011E7C  6F41               	movwf	(??_main+7)& (0+255),b
  2310  011E7E  0101               	movlb	1	; () banked
  2311  011E80  5141               	movf	(??_main+7)& (0+255),w,b
  2312  011E82  0101               	movlb	1	; () banked
  2313  011E84  1140               	iorwf	(??_main+6)& (0+255),w,b
  2314  011E86  0101               	movlb	1	; () banked
  2315  011E88  113F               	iorwf	(??_main+5)& (0+255),w,b
  2316  011E8A  E105               	bnz	u10890
  2317  011E8C  0E1E               	movlw	30
  2318  011E8E  0101               	movlb	1	; () banked
  2319  011E90  5D3E               	subwf	(??_main+4)& (0+255),w,b
  2320  011E92  A0D8               	btfss	status,0,c
  2321  011E94  D050               	goto	l8676
  2322  011E96                     u10890:
  2323                           
  2324                           ; BSR set to: 1
  2325                           ;RemoteCan.c: 310: pr_time_5 = time_counter;
  2326  011E96  C00D  F0D3         	movff	_time_counter,_pr_time_5	;volatile
  2327  011E9A  C00E  F0D4         	movff	_time_counter+1,_pr_time_5+1	;volatile
  2328  011E9E  C00F  F0D5         	movff	_time_counter+2,_pr_time_5+2	;volatile
  2329  011EA2  C010  F0D6         	movff	_time_counter+3,_pr_time_5+3	;volatile
  2330                           
  2331                           ;RemoteCan.c: 311: if ((space_available == 1)&&(space_gap_reached == 1)) {
  2332  011EA6  BE4C               	btfsc	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2333                           
  2334                           ; BSR set to: 1
  2335  011EA8  A04D               	btfss	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2336  011EAA  D007               	goto	l844
  2337                           
  2338                           ; BSR set to: 1
  2339                           ;RemoteCan.c: 312: PORTDbits.RD6 = 1;
  2340  011EAC  8C83               	bsf	3971,6,c	;volatile
  2341                           
  2342                           ;RemoteCan.c: 313: if (F2_switch == 0) {
  2343  011EAE  B84B               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2344  011EB0  D002               	goto	l845
  2345                           
  2346                           ; BSR set to: 1
  2347                           ;RemoteCan.c: 314: PORTDbits.RD5 = ~PORTDbits.RD5;
  2348  011EB2  7A83               	btg	3971,5,c	;volatile
  2349                           
  2350                           ;RemoteCan.c: 315: } else {
  2351  011EB4  D040               	goto	l8676
  2352  011EB6                     l845:
  2353                           
  2354                           ; BSR set to: 1
  2355                           ;RemoteCan.c: 316: PORTDbits.RD5 = 1;
  2356  011EB6  8A83               	bsf	3971,5,c	;volatile
  2357                           
  2358                           ; BSR set to: 1
  2359                           ;RemoteCan.c: 317: }
  2360                           ;RemoteCan.c: 318: } else {
  2361  011EB8  D03E               	goto	l8676
  2362  011EBA                     l844:
  2363                           
  2364                           ; BSR set to: 1
  2365                           ;RemoteCan.c: 319: PORTDbits.RD6 = ~PORTDbits.RD6;
  2366  011EBA  7C83               	btg	3971,6,c	;volatile
  2367  011EBC  D03A               	goto	l8674
  2368                           
  2369                           ; BSR set to: 1
  2370                           ;RemoteCan.c: 321: }
  2371                           ;RemoteCan.c: 322: }
  2372                           ;RemoteCan.c: 323: } else {
  2373                           
  2374                           ; BSR set to: 1
  2375                           
  2376                           ;RemoteCan.c: 320: PORTDbits.RD5 = 0;
  2377  011EBE  D03B               	goto	l8676
  2378  011EC0                     l832:
  2379                           
  2380                           ; BSR set to: 0
  2381                           ;RemoteCan.c: 324: x = 0;
  2382  011EC0  9A4D               	bcf	_x/(0+8),_x& (0+7),c	;volatile
  2383                           
  2384                           ;RemoteCan.c: 325: z = 0;
  2385  011EC2  9E4D               	bcf	_z/(0+8),_z& (0+7),c	;volatile
  2386                           
  2387                           ;RemoteCan.c: 326: parking_message_E = 0;
  2388  011EC4  9A4C               	bcf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  2389                           
  2390                           ;RemoteCan.c: 327: F2_switch = 0;
  2391  011EC6  984B               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2392                           
  2393                           ;RemoteCan.c: 328: space_available = 0;
  2394  011EC8  9E4C               	bcf	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2395                           
  2396                           ;RemoteCan.c: 329: space_gap_reached = 0;
  2397  011ECA  904D               	bcf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2398                           
  2399                           ;RemoteCan.c: 330: PORTDbits.RD5 = 0;
  2400  011ECC  9A83               	bcf	3971,5,c	;volatile
  2401                           
  2402                           ;RemoteCan.c: 331: PORTDbits.RD6 = 0;
  2403  011ECE  9C83               	bcf	3971,6,c	;volatile
  2404                           
  2405                           ;RemoteCan.c: 332: if (y == 0) {
  2406  011ED0  BC4D               	btfsc	_y/(0+8),_y& (0+7),c	;volatile
  2407  011ED2  D02E               	goto	l8672
  2408                           
  2409                           ; BSR set to: 0
  2410                           ;RemoteCan.c: 333: parking_state = 0;
  2411  011ED4  0E00               	movlw	0
  2412  011ED6  0100               	movlb	0	; () banked
  2413  011ED8  6FE5               	movwf	_parking_state& (0+255),b	;volatile
  2414                           
  2415                           ;RemoteCan.c: 334: JoystickConstants[1] = 15;
  2416  011EDA  0E00               	movlw	0
  2417  011EDC  0100               	movlb	0	; () banked
  2418  011EDE  6FBF               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2419  011EE0  0E00               	movlw	0
  2420  011EE2  6FC0               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2421  011EE4  0E70               	movlw	112
  2422  011EE6  6FC1               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2423  011EE8  0E41               	movlw	65
  2424  011EEA  6FC2               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2425                           
  2426                           ; BSR set to: 0
  2427                           
  2428                           ;RemoteCan.c: 335: while (!CANisTxReady());
  2429  011EEC  D000               	goto	l8664
  2430  011EEE                     l8664:
  2431  011EEE  EC34  F0AF         	call	_CANisTxReady	;wreg free
  2432  011EF2  0900               	iorlw	0
  2433  011EF4  B4D8               	btfsc	status,2,c
  2434  011EF6  D7FB               	goto	l8664
  2435                           
  2436                           ;RemoteCan.c: 336: park_assist_state[0] = 0b00000000;
  2437  011EF8  0E00               	movlw	0
  2438  011EFA  0101               	movlb	1	; () banked
  2439  011EFC  6F19               	movwf	_park_assist_state& (0+255),b
  2440                           
  2441                           ; BSR set to: 1
  2442                           ;RemoteCan.c: 337: CANsendMessage(0b00000001100, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2443  011EFE  0E0C               	movlw	12
  2444  011F00  0100               	movlb	0	; () banked
  2445  011F02  6F70               	movwf	CANsendMessage@identifier& (0+255),b
  2446  011F04  0E00               	movlw	0
  2447  011F06  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2448  011F08  0E00               	movlw	0
  2449  011F0A  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2450  011F0C  0E00               	movlw	0
  2451  011F0E  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2452  011F10  0E19               	movlw	low _park_assist_state
  2453  011F12  0100               	movlb	0	; () banked
  2454  011F14  6F74               	movwf	CANsendMessage@data& (0+255),b
  2455  011F16  0E01               	movlw	high _park_assist_state
  2456  011F18  0100               	movlb	0	; () banked
  2457  011F1A  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
  2458  011F1C  0E08               	movlw	8
  2459  011F1E  0100               	movlb	0	; () banked
  2460  011F20  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
  2461  011F22  0EBC               	movlw	188
  2462  011F24  0100               	movlb	0	; () banked
  2463  011F26  6F77               	movwf	CANsendMessage@flags& (0+255),b
  2464  011F28  EC1B  F08A         	call	_CANsendMessage	;wreg free
  2465                           
  2466                           ;RemoteCan.c: 338: y = 1;
  2467  011F2C  8C4D               	bsf	_y/(0+8),_y& (0+7),c	;volatile
  2468  011F2E  D000               	goto	l8672
  2469  011F30                     l8672:
  2470                           
  2471                           ;RemoteCan.c: 339: }
  2472                           ;RemoteCan.c: 340: PORTDbits.RD6 = 0;
  2473  011F30  9C83               	bcf	3971,6,c	;volatile
  2474  011F32                     l8674:
  2475                           
  2476                           ;RemoteCan.c: 341: PORTDbits.RD5 = 0;
  2477  011F32  9A83               	bcf	3971,5,c	;volatile
  2478  011F34  D000               	goto	l8676
  2479  011F36                     l8676:
  2480                           
  2481                           ;RemoteCan.c: 342: }
  2482                           ;RemoteCan.c: 344: Joystick_Polling();
  2483  011F36  ECD9  F0AD         	call	_Joystick_Polling	;wreg free
  2484                           
  2485                           ;RemoteCan.c: 347: data_steering [0] = 180 - (JoystickValues[0])*(JoystickConstants[0]);
  2486  011F3A  0E00               	movlw	0
  2487  011F3C  0100               	movlb	0	; () banked
  2488  011F3E  6F9F               	movwf	___fladd@f2& (0+255),b
  2489  011F40  0E00               	movlw	0
  2490  011F42  6FA0               	movwf	(___fladd@f2+1)& (0+255),b
  2491  011F44  0E34               	movlw	52
  2492  011F46  6FA1               	movwf	(___fladd@f2+2)& (0+255),b
  2493  011F48  0E43               	movlw	67
  2494  011F4A  6FA2               	movwf	(___fladd@f2+3)& (0+255),b
  2495  011F4C  C0BB  F083         	movff	_JoystickConstants,___flmul@f2	;volatile
  2496  011F50  C0BC  F084         	movff	_JoystickConstants+1,___flmul@f2+1	;volatile
  2497  011F54  C0BD  F085         	movff	_JoystickConstants+2,___flmul@f2+2	;volatile
  2498  011F58  C0BE  F086         	movff	_JoystickConstants+3,___flmul@f2+3	;volatile
  2499  011F5C  0100               	movlb	0	; () banked
  2500  011F5E  51DB               	movf	_JoystickValues& (0+255),w,b	;volatile
  2501  011F60  EC6E  F0AE         	call	___lbtofl
  2502  011F64  C07A  F07F         	movff	?___lbtofl,___flmul@f1
  2503  011F68  C07B  F080         	movff	?___lbtofl+1,___flmul@f1+1
  2504  011F6C  C07C  F081         	movff	?___lbtofl+2,___flmul@f1+2
  2505  011F70  C07D  F082         	movff	?___lbtofl+3,___flmul@f1+3
  2506  011F74  ECC4  F0A5         	call	___flmul	;wreg free
  2507  011F78  C07F  F08E         	movff	?___flmul,___flneg@f1
  2508  011F7C  C080  F08F         	movff	?___flmul+1,___flneg@f1+1
  2509  011F80  C081  F090         	movff	?___flmul+2,___flneg@f1+2
  2510  011F84  C082  F091         	movff	?___flmul+3,___flneg@f1+3
  2511  011F88  ECFA  F0AD         	call	___flneg	;wreg free
  2512  011F8C  C08E  F09B         	movff	?___flneg,___fladd@f1
  2513  011F90  C08F  F09C         	movff	?___flneg+1,___fladd@f1+1
  2514  011F94  C090  F09D         	movff	?___flneg+2,___fladd@f1+2
  2515  011F98  C091  F09E         	movff	?___flneg+3,___fladd@f1+3
  2516  011F9C  ECAF  F09E         	call	___fladd	;wreg free
  2517  011FA0  C09B  F0A7         	movff	?___fladd,___fltol@f1
  2518  011FA4  C09C  F0A8         	movff	?___fladd+1,___fltol@f1+1
  2519  011FA8  C09D  F0A9         	movff	?___fladd+2,___fltol@f1+2
  2520  011FAC  C09E  F0AA         	movff	?___fladd+3,___fltol@f1+3
  2521  011FB0  EC11  F0A7         	call	___fltol	;wreg free
  2522  011FB4  0100               	movlb	0	; () banked
  2523  011FB6  51A7               	movf	?___fltol& (0+255),w,b
  2524  011FB8  0100               	movlb	0	; () banked
  2525  011FBA  6FEA               	movwf	_data_steering& (0+255),b
  2526                           
  2527                           ; BSR set to: 0
  2528                           ;RemoteCan.c: 348: if (parking_state == 1) {
  2529  011FBC  0100               	movlb	0	; () banked
  2530  011FBE  05E5               	decf	_parking_state& (0+255),w,b	;volatile
  2531  011FC0  A4D8               	btfss	status,2,c
  2532  011FC2  D05C               	goto	l853
  2533                           
  2534                           ; BSR set to: 0
  2535                           ;RemoteCan.c: 349: if (steering_correction_dir == 1) {
  2536  011FC4  A24D               	btfss	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
  2537  011FC6  D00F               	goto	l8686
  2538                           
  2539                           ; BSR set to: 0
  2540                           ;RemoteCan.c: 350: check = data_steering[0] + steering_correction;
  2541  011FC8  0100               	movlb	0	; () banked
  2542  011FCA  51E6               	movf	_steering_correction& (0+255),w,b	;volatile
  2543  011FCC  C0EA  F13A         	movff	_data_steering,??_main
  2544  011FD0  0101               	movlb	1	; () banked
  2545  011FD2  6B3B               	clrf	(??_main+1)& (0+255),b
  2546  011FD4  0101               	movlb	1	; () banked
  2547  011FD6  273A               	addwf	??_main& (0+255),f,b
  2548  011FD8  0E00               	movlw	0
  2549  011FDA  233B               	addwfc	(??_main+1)& (0+255),f,b
  2550  011FDC  C13A  F0C3         	movff	??_main,_check	;volatile
  2551  011FE0  C13B  F0C4         	movff	??_main+1,_check+1	;volatile
  2552  011FE4  D01B               	goto	L1
  2553  011FE6                     l8686:
  2554                           
  2555                           ; BSR set to: 0
  2556                           ;RemoteCan.c: 352: check = data_steering[0] - steering_correction;
  2557  011FE6  0100               	movlb	0	; () banked
  2558  011FE8  51E6               	movf	_steering_correction& (0+255),w,b	;volatile
  2559  011FEA  0101               	movlb	1	; () banked
  2560  011FEC  6F3A               	movwf	??_main& (0+255),b
  2561  011FEE  6B3B               	clrf	(??_main+1)& (0+255),b
  2562  011FF0  0101               	movlb	1	; () banked
  2563  011FF2  1F3A               	comf	??_main& (0+255),f,b
  2564  011FF4  1F3B               	comf	(??_main+1)& (0+255),f,b
  2565  011FF6  4B3A               	infsnz	??_main& (0+255),f,b
  2566  011FF8  2B3B               	incf	(??_main+1)& (0+255),f,b
  2567  011FFA  0100               	movlb	0	; () banked
  2568  011FFC  51EA               	movf	_data_steering& (0+255),w,b
  2569  011FFE  0101               	movlb	1	; () banked
  2570  012000  6F3C               	movwf	(??_main+2)& (0+255),b
  2571  012002  6B3D               	clrf	(??_main+3)& (0+255),b
  2572  012004  0101               	movlb	1	; () banked
  2573  012006  513A               	movf	??_main& (0+255),w,b
  2574  012008  0101               	movlb	1	; () banked
  2575  01200A  273C               	addwf	(??_main+2)& (0+255),f,b
  2576  01200C  0101               	movlb	1	; () banked
  2577  01200E  513B               	movf	(??_main+1)& (0+255),w,b
  2578  012010  0101               	movlb	1	; () banked
  2579  012012  233D               	addwfc	(??_main+3)& (0+255),f,b
  2580  012014  C13C  F0C3         	movff	??_main+2,_check	;volatile
  2581  012018  C13D  F0C4         	movff	??_main+3,_check+1	;volatile
  2582  01201C                     L1:
  2583  01201C  0100               	movlb	0	; () banked
  2584  01201E  0E00               	movlw	0
  2585  012020  BFC4               	btfsc	(_check+1)& (0+255),7,b	;volatile
  2586  012022  0EFF               	movlw	-1
  2587  012024  6FC5               	movwf	(_check+2)& (0+255),b	;volatile
  2588  012026  6FC6               	movwf	(_check+3)& (0+255),b	;volatile
  2589                           
  2590                           ; BSR set to: 0
  2591                           ;RemoteCan.c: 353: }
  2592                           ;RemoteCan.c: 354: if ((check >= 0)&&(check <= 180)) {
  2593  012028  0100               	movlb	0	; () banked
  2594  01202A  BFC6               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2595  01202C  D012               	goto	l8692
  2596                           
  2597                           ; BSR set to: 0
  2598  01202E  0100               	movlb	0	; () banked
  2599  012030  BFC6               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2600  012032  D00C               	goto	l8690
  2601  012034  0100               	movlb	0	; () banked
  2602  012036  51C6               	movf	(_check+3)& (0+255),w,b	;volatile
  2603  012038  0100               	movlb	0	; () banked
  2604  01203A  11C5               	iorwf	(_check+2)& (0+255),w,b	;volatile
  2605  01203C  0100               	movlb	0	; () banked
  2606  01203E  11C4               	iorwf	(_check+1)& (0+255),w,b	;volatile
  2607  012040  E108               	bnz	l8692
  2608  012042  0EB5               	movlw	181
  2609  012044  0100               	movlb	0	; () banked
  2610  012046  5DC3               	subwf	_check& (0+255),w,b	;volatile
  2611  012048  B0D8               	btfsc	status,0,c
  2612  01204A  D003               	goto	l8692
  2613  01204C                     l8690:
  2614                           
  2615                           ; BSR set to: 0
  2616                           ;RemoteCan.c: 355: data_steering[0] = check;
  2617  01204C  C0C3  F0EA         	movff	_check,_data_steering	;volatile
  2618                           
  2619                           ;RemoteCan.c: 356: } else {
  2620  012050  D019               	goto	l860
  2621  012052                     l8692:
  2622                           
  2623                           ; BSR set to: 0
  2624                           ;RemoteCan.c: 357: if (check > 180) {
  2625  012052  0100               	movlb	0	; () banked
  2626  012054  BFC6               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2627  012056  D00E               	goto	l8696
  2628  012058  0100               	movlb	0	; () banked
  2629  01205A  51C6               	movf	(_check+3)& (0+255),w,b	;volatile
  2630  01205C  0100               	movlb	0	; () banked
  2631  01205E  11C5               	iorwf	(_check+2)& (0+255),w,b	;volatile
  2632  012060  0100               	movlb	0	; () banked
  2633  012062  11C4               	iorwf	(_check+1)& (0+255),w,b	;volatile
  2634  012064  E105               	bnz	u10990
  2635  012066  0EB5               	movlw	181
  2636  012068  0100               	movlb	0	; () banked
  2637  01206A  5DC3               	subwf	_check& (0+255),w,b	;volatile
  2638  01206C  A0D8               	btfss	status,0,c
  2639  01206E  D002               	goto	l8696
  2640  012070                     u10990:
  2641                           
  2642                           ; BSR set to: 0
  2643                           ;RemoteCan.c: 358: data_steering[0] = 180;
  2644  012070  0EB4               	movlw	180
  2645  012072  D001               	goto	L2
  2646  012074                     l8696:
  2647                           
  2648                           ; BSR set to: 0
  2649                           ;RemoteCan.c: 360: data_steering[0] = 0;
  2650  012074  0E00               	movlw	0
  2651  012076                     L2:
  2652  012076  0100               	movlb	0	; () banked
  2653  012078  6FEA               	movwf	_data_steering& (0+255),b
  2654                           
  2655                           ; BSR set to: 0
  2656                           ;RemoteCan.c: 361: }
  2657                           ;RemoteCan.c: 362: }
  2658                           ;RemoteCan.c: 363: } else {
  2659                           
  2660                           ; BSR set to: 0
  2661  01207A  D004               	goto	l860
  2662  01207C                     l853:
  2663                           
  2664                           ; BSR set to: 0
  2665                           ;RemoteCan.c: 364: steering_correction_dir = 0;
  2666  01207C  924D               	bcf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
  2667                           
  2668                           ; BSR set to: 0
  2669                           ;RemoteCan.c: 365: steering_correction = 0;
  2670  01207E  0E00               	movlw	0
  2671  012080  0100               	movlb	0	; () banked
  2672  012082  6FE6               	movwf	_steering_correction& (0+255),b	;volatile
  2673  012084                     l860:
  2674                           
  2675                           ; BSR set to: 0
  2676                           ;RemoteCan.c: 366: }
  2677                           ;RemoteCan.c: 369: if ((switch_position != 0)&&(collision_risk == 0)) {
  2678  012084  0100               	movlb	0	; () banked
  2679  012086  51E7               	movf	_switch_position& (0+255),w,b	;volatile
  2680  012088  A4D8               	btfss	status,2,c
  2681                           
  2682                           ; BSR set to: 0
  2683  01208A  B24C               	btfsc	_collision_risk/(0+8),_collision_risk& (0+7),c	;volatile
  2684  01208C  D051               	goto	l8724
  2685                           
  2686                           ; BSR set to: 0
  2687                           ;RemoteCan.c: 370: if (JoystickValues[1] > 132) {
  2688  01208E  0E84               	movlw	132
  2689  012090  0100               	movlb	0	; () banked
  2690  012092  65DC               	cpfsgt	(_JoystickValues+1)& (0+255),b	;volatile
  2691  012094  D032               	goto	l8710
  2692                           
  2693                           ; BSR set to: 0
  2694                           ;RemoteCan.c: 371: set_speed = (JoystickValues[1] - 130)*(JoystickConstants[1]);
  2695  012096  C0BF  F083         	movff	_JoystickConstants+4,___flmul@f2	;volatile
  2696  01209A  C0C0  F084         	movff	_JoystickConstants+5,___flmul@f2+1	;volatile
  2697  01209E  C0C1  F085         	movff	_JoystickConstants+6,___flmul@f2+2	;volatile
  2698  0120A2  C0C2  F086         	movff	_JoystickConstants+7,___flmul@f2+3	;volatile
  2699  0120A6  0E7E               	movlw	126
  2700  0120A8  0100               	movlb	0	; () banked
  2701  0120AA  25DC               	addwf	(_JoystickValues+1)& (0+255),w,b	;volatile
  2702  0120AC  0100               	movlb	0	; () banked
  2703  0120AE  6F7A               	movwf	___awtofl@c& (0+255),b
  2704  0120B0  0100               	movlb	0	; () banked
  2705  0120B2  6B7B               	clrf	(___awtofl@c+1)& (0+255),b
  2706  0120B4  0EFF               	movlw	255
  2707  0120B6  237B               	addwfc	(___awtofl@c+1)& (0+255),f,b
  2708  0120B8  EC6C  F0AD         	call	___awtofl	;wreg free
  2709  0120BC  C07A  F07F         	movff	?___awtofl,___flmul@f1
  2710  0120C0  C07B  F080         	movff	?___awtofl+1,___flmul@f1+1
  2711  0120C4  C07C  F081         	movff	?___awtofl+2,___flmul@f1+2
  2712  0120C8  C07D  F082         	movff	?___awtofl+3,___flmul@f1+3
  2713  0120CC  ECC4  F0A5         	call	___flmul	;wreg free
  2714  0120D0  C07F  F0A7         	movff	?___flmul,___fltol@f1
  2715  0120D4  C080  F0A8         	movff	?___flmul+1,___fltol@f1+1
  2716  0120D8  C081  F0A9         	movff	?___flmul+2,___fltol@f1+2
  2717  0120DC  C082  F0AA         	movff	?___flmul+3,___fltol@f1+3
  2718  0120E0  EC11  F0A7         	call	___fltol	;wreg free
  2719  0120E4  C0A7  F0E1         	movff	?___fltol,_set_speed	;volatile
  2720  0120E8  C0A8  F0E2         	movff	?___fltol+1,_set_speed+1	;volatile
  2721                           
  2722                           ;RemoteCan.c: 372: data_brake [0] = 3;
  2723  0120EC  0E03               	movlw	3
  2724  0120EE  0100               	movlb	0	; () banked
  2725  0120F0  6FE8               	movwf	_data_brake& (0+255),b
  2726                           
  2727                           ; BSR set to: 0
  2728                           ;RemoteCan.c: 373: data_brake [1] = 1;
  2729  0120F2  0E01               	movlw	1
  2730  0120F4  0100               	movlb	0	; () banked
  2731  0120F6  6FE9               	movwf	(_data_brake+1)& (0+255),b
  2732                           
  2733                           ;RemoteCan.c: 374: } else {
  2734  0120F8  D024               	goto	l8726
  2735  0120FA                     l8710:
  2736                           
  2737                           ; BSR set to: 0
  2738                           ;RemoteCan.c: 375: set_speed = 0;
  2739  0120FA  0E00               	movlw	0
  2740  0120FC  0100               	movlb	0	; () banked
  2741  0120FE  6FE2               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2742  012100  0E00               	movlw	0
  2743  012102  6FE1               	movwf	_set_speed& (0+255),b	;volatile
  2744                           
  2745                           ; BSR set to: 0
  2746                           ;RemoteCan.c: 376: if (JoystickValues[1] <= 65) {
  2747  012104  0E42               	movlw	66
  2748  012106  0100               	movlb	0	; () banked
  2749  012108  61DC               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  2750  01210A  D004               	goto	l8716
  2751                           
  2752                           ; BSR set to: 0
  2753                           ;RemoteCan.c: 377: data_brake [0] = 0b00000010;
  2754  01210C  0E02               	movlw	2
  2755  01210E  0100               	movlb	0	; () banked
  2756  012110  6FE8               	movwf	_data_brake& (0+255),b
  2757  012112  D000               	goto	l8716
  2758  012114                     l8716:
  2759                           
  2760                           ; BSR set to: 0
  2761                           ;RemoteCan.c: 378: }
  2762                           ;RemoteCan.c: 379: if (JoystickValues[1] <= 20) {
  2763  012114  0E15               	movlw	21
  2764  012116  0100               	movlb	0	; () banked
  2765  012118  61DC               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  2766  01211A  D004               	goto	l8720
  2767                           
  2768                           ; BSR set to: 0
  2769                           ;RemoteCan.c: 380: data_brake [0] = 0b00000001;
  2770  01211C  0E01               	movlw	1
  2771  01211E  0100               	movlb	0	; () banked
  2772  012120  6FE8               	movwf	_data_brake& (0+255),b
  2773  012122  D000               	goto	l8720
  2774  012124                     l8720:
  2775                           
  2776                           ; BSR set to: 0
  2777                           ;RemoteCan.c: 381: }
  2778                           ;RemoteCan.c: 382: if (JoystickValues[1] <= 5) {
  2779  012124  0E06               	movlw	6
  2780  012126  0100               	movlb	0	; () banked
  2781  012128  61DC               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  2782  01212A  D00B               	goto	l8726
  2783  01212C  D006               	goto	L3
  2784                           
  2785                           ; BSR set to: 0
  2786                           ;RemoteCan.c: 384: }
  2787                           ;RemoteCan.c: 385: }
  2788                           ;RemoteCan.c: 386: } else {
  2789                           
  2790                           ; BSR set to: 0
  2791                           
  2792                           ; BSR set to: 0
  2793                           ;RemoteCan.c: 383: data_brake [0] = 0b00000000;
  2794  01212E  D009               	goto	l8726
  2795  012130                     l8724:
  2796                           
  2797                           ; BSR set to: 0
  2798                           ;RemoteCan.c: 387: set_speed = 0;
  2799  012130  0E00               	movlw	0
  2800  012132  0100               	movlb	0	; () banked
  2801  012134  6FE2               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2802  012136  0E00               	movlw	0
  2803  012138  6FE1               	movwf	_set_speed& (0+255),b	;volatile
  2804  01213A                     L3:
  2805                           
  2806                           ;RemoteCan.c: 388: data_brake [0] = 0b00000000;
  2807  01213A  0E00               	movlw	0
  2808  01213C  0100               	movlb	0	; () banked
  2809  01213E  6FE8               	movwf	_data_brake& (0+255),b
  2810  012140  D000               	goto	l8726
  2811  012142                     l8726:
  2812                           
  2813                           ; BSR set to: 0
  2814                           ;RemoteCan.c: 389: }
  2815                           ;RemoteCan.c: 391: if (newMessageCan == 1) {
  2816  012142  A64C               	btfss	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  2817  012144  D004               	goto	l8732
  2818                           
  2819                           ; BSR set to: 0
  2820                           ;RemoteCan.c: 392: CAN_Rx();
  2821  012146  ECA8  F0AB         	call	_CAN_Rx	;wreg free
  2822                           
  2823                           ;RemoteCan.c: 393: newMessageCan = 0;
  2824  01214A  964C               	bcf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  2825  01214C  D000               	goto	l8732
  2826  01214E                     l8732:
  2827                           
  2828                           ;RemoteCan.c: 394: }
  2829                           ;RemoteCan.c: 396: if ((((time_counter - pr_time_2) >= 2) && (parking_message_ID < 2)) |
      +                          | (Can_Tx_Force == 1)) {
  2830  01214E  C0CB  F13A         	movff	_pr_time_2,??_main	;volatile
  2831  012152  C0CC  F13B         	movff	_pr_time_2+1,??_main+1	;volatile
  2832  012156  C0CD  F13C         	movff	_pr_time_2+2,??_main+2	;volatile
  2833  01215A  C0CE  F13D         	movff	_pr_time_2+3,??_main+3	;volatile
  2834  01215E  0101               	movlb	1	; () banked
  2835  012160  1F3A               	comf	??_main& (0+255),f,b
  2836  012162  1F3B               	comf	(??_main+1)& (0+255),f,b
  2837  012164  1F3C               	comf	(??_main+2)& (0+255),f,b
  2838  012166  1F3D               	comf	(??_main+3)& (0+255),f,b
  2839  012168  2B3A               	incf	??_main& (0+255),f,b
  2840  01216A  0E00               	movlw	0
  2841  01216C  233B               	addwfc	(??_main+1)& (0+255),f,b
  2842  01216E  233C               	addwfc	(??_main+2)& (0+255),f,b
  2843  012170  233D               	addwfc	(??_main+3)& (0+255),f,b
  2844  012172  500D               	movf	_time_counter,w,c	;volatile
  2845  012174  0101               	movlb	1	; () banked
  2846  012176  253A               	addwf	??_main& (0+255),w,b
  2847  012178  0101               	movlb	1	; () banked
  2848  01217A  6F3E               	movwf	(??_main+4)& (0+255),b
  2849  01217C  500E               	movf	_time_counter+1,w,c	;volatile
  2850  01217E  0101               	movlb	1	; () banked
  2851  012180  213B               	addwfc	(??_main+1)& (0+255),w,b
  2852  012182  0101               	movlb	1	; () banked
  2853  012184  6F3F               	movwf	(??_main+5)& (0+255),b
  2854  012186  500F               	movf	_time_counter+2,w,c	;volatile
  2855  012188  0101               	movlb	1	; () banked
  2856  01218A  213C               	addwfc	(??_main+2)& (0+255),w,b
  2857  01218C  0101               	movlb	1	; () banked
  2858  01218E  6F40               	movwf	(??_main+6)& (0+255),b
  2859  012190  5010               	movf	_time_counter+3,w,c	;volatile
  2860  012192  0101               	movlb	1	; () banked
  2861  012194  213D               	addwfc	(??_main+3)& (0+255),w,b
  2862  012196  0101               	movlb	1	; () banked
  2863  012198  6F41               	movwf	(??_main+7)& (0+255),b
  2864  01219A  0101               	movlb	1	; () banked
  2865  01219C  5141               	movf	(??_main+7)& (0+255),w,b
  2866  01219E  0101               	movlb	1	; () banked
  2867  0121A0  1140               	iorwf	(??_main+6)& (0+255),w,b
  2868  0121A2  0101               	movlb	1	; () banked
  2869  0121A4  113F               	iorwf	(??_main+5)& (0+255),w,b
  2870  0121A6  E105               	bnz	u11070
  2871  0121A8  0E02               	movlw	2
  2872  0121AA  0101               	movlb	1	; () banked
  2873  0121AC  5D3E               	subwf	(??_main+4)& (0+255),w,b
  2874  0121AE  A0D8               	btfss	status,0,c
  2875  0121B0  D004               	goto	l873
  2876  0121B2                     u11070:
  2877                           
  2878                           ; BSR set to: 1
  2879  0121B2  0E01               	movlw	1
  2880  0121B4  0100               	movlb	0	; () banked
  2881  0121B6  65E4               	cpfsgt	_parking_message_ID& (0+255),b	;volatile
  2882  0121B8  D002               	goto	l871
  2883  0121BA                     l873:
  2884  0121BA  A44B               	btfss	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  2885  0121BC  D01D               	goto	l8744
  2886  0121BE                     l871:
  2887                           
  2888                           ;RemoteCan.c: 397: if (Can_Tx_Force == 1) {
  2889  0121BE  A44B               	btfss	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  2890  0121C0  D010               	goto	l8740
  2891                           
  2892                           ;RemoteCan.c: 398: dir = 1;
  2893  0121C2  0E01               	movlw	1
  2894  0121C4  0100               	movlb	0	; () banked
  2895  0121C6  6FE3               	movwf	_dir& (0+255),b	;volatile
  2896                           
  2897                           ;RemoteCan.c: 399: set_speed = 0;
  2898  0121C8  0E00               	movlw	0
  2899  0121CA  0100               	movlb	0	; () banked
  2900  0121CC  6FE2               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2901  0121CE  0E00               	movlw	0
  2902  0121D0  6FE1               	movwf	_set_speed& (0+255),b	;volatile
  2903                           
  2904                           ;RemoteCan.c: 400: data_steering [0] = 90;
  2905  0121D2  0E5A               	movlw	90
  2906  0121D4  0100               	movlb	0	; () banked
  2907  0121D6  6FEA               	movwf	_data_steering& (0+255),b
  2908                           
  2909                           ;RemoteCan.c: 401: data_brake [0] = 0b00000000;
  2910  0121D8  0E00               	movlw	0
  2911  0121DA  0100               	movlb	0	; () banked
  2912  0121DC  6FE8               	movwf	_data_brake& (0+255),b
  2913                           
  2914                           ; BSR set to: 0
  2915                           ;RemoteCan.c: 402: Can_Tx_Force = 0;
  2916  0121DE  944B               	bcf	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  2917  0121E0  D000               	goto	l8740
  2918  0121E2                     l8740:
  2919                           
  2920                           ;RemoteCan.c: 403: }
  2921                           ;RemoteCan.c: 404: pr_time_2 = time_counter;
  2922  0121E2  C00D  F0CB         	movff	_time_counter,_pr_time_2	;volatile
  2923  0121E6  C00E  F0CC         	movff	_time_counter+1,_pr_time_2+1	;volatile
  2924  0121EA  C00F  F0CD         	movff	_time_counter+2,_pr_time_2+2	;volatile
  2925  0121EE  C010  F0CE         	movff	_time_counter+3,_pr_time_2+3	;volatile
  2926                           
  2927                           ;RemoteCan.c: 405: CAN_Tx();
  2928  0121F2  ECBE  F0A9         	call	_CAN_Tx	;wreg free
  2929  0121F6  D000               	goto	l8744
  2930  0121F8                     l8744:
  2931                           
  2932                           ;RemoteCan.c: 406: }
  2933                           ;RemoteCan.c: 409: if (time_counter >= pr_time_6) {
  2934  0121F8  0100               	movlb	0	; () banked
  2935  0121FA  51D7               	movf	_pr_time_6& (0+255),w,b	;volatile
  2936  0121FC  5C0D               	subwf	_time_counter,w,c	;volatile
  2937  0121FE  0100               	movlb	0	; () banked
  2938  012200  51D8               	movf	(_pr_time_6+1)& (0+255),w,b	;volatile
  2939  012202  580E               	subwfb	_time_counter+1,w,c	;volatile
  2940  012204  0100               	movlb	0	; () banked
  2941  012206  51D9               	movf	(_pr_time_6+2)& (0+255),w,b	;volatile
  2942  012208  580F               	subwfb	_time_counter+2,w,c	;volatile
  2943  01220A  0100               	movlb	0	; () banked
  2944  01220C  51DA               	movf	(_pr_time_6+3)& (0+255),w,b	;volatile
  2945  01220E  5810               	subwfb	_time_counter+3,w,c	;volatile
  2946  012210  A0D8               	btfss	status,0,c
  2947  012212  D05D               	goto	l8772
  2948                           
  2949                           ; BSR set to: 0
  2950                           ;RemoteCan.c: 410: if ((time_counter - pr_time_3) >= (100 / 10)) {
  2951  012214  C0CF  F13A         	movff	_pr_time_3,??_main	;volatile
  2952  012218  C0D0  F13B         	movff	_pr_time_3+1,??_main+1	;volatile
  2953  01221C  C0D1  F13C         	movff	_pr_time_3+2,??_main+2	;volatile
  2954  012220  C0D2  F13D         	movff	_pr_time_3+3,??_main+3	;volatile
  2955  012224  0101               	movlb	1	; () banked
  2956  012226  1F3A               	comf	??_main& (0+255),f,b
  2957  012228  1F3B               	comf	(??_main+1)& (0+255),f,b
  2958  01222A  1F3C               	comf	(??_main+2)& (0+255),f,b
  2959  01222C  1F3D               	comf	(??_main+3)& (0+255),f,b
  2960  01222E  2B3A               	incf	??_main& (0+255),f,b
  2961  012230  0E00               	movlw	0
  2962  012232  233B               	addwfc	(??_main+1)& (0+255),f,b
  2963  012234  233C               	addwfc	(??_main+2)& (0+255),f,b
  2964  012236  233D               	addwfc	(??_main+3)& (0+255),f,b
  2965  012238  500D               	movf	_time_counter,w,c	;volatile
  2966  01223A  0101               	movlb	1	; () banked
  2967  01223C  253A               	addwf	??_main& (0+255),w,b
  2968  01223E  0101               	movlb	1	; () banked
  2969  012240  6F3E               	movwf	(??_main+4)& (0+255),b
  2970  012242  500E               	movf	_time_counter+1,w,c	;volatile
  2971  012244  0101               	movlb	1	; () banked
  2972  012246  213B               	addwfc	(??_main+1)& (0+255),w,b
  2973  012248  0101               	movlb	1	; () banked
  2974  01224A  6F3F               	movwf	(??_main+5)& (0+255),b
  2975  01224C  500F               	movf	_time_counter+2,w,c	;volatile
  2976  01224E  0101               	movlb	1	; () banked
  2977  012250  213C               	addwfc	(??_main+2)& (0+255),w,b
  2978  012252  0101               	movlb	1	; () banked
  2979  012254  6F40               	movwf	(??_main+6)& (0+255),b
  2980  012256  5010               	movf	_time_counter+3,w,c	;volatile
  2981  012258  0101               	movlb	1	; () banked
  2982  01225A  213D               	addwfc	(??_main+3)& (0+255),w,b
  2983  01225C  0101               	movlb	1	; () banked
  2984  01225E  6F41               	movwf	(??_main+7)& (0+255),b
  2985  012260  0101               	movlb	1	; () banked
  2986  012262  5141               	movf	(??_main+7)& (0+255),w,b
  2987  012264  0101               	movlb	1	; () banked
  2988  012266  1140               	iorwf	(??_main+6)& (0+255),w,b
  2989  012268  0101               	movlb	1	; () banked
  2990  01226A  113F               	iorwf	(??_main+5)& (0+255),w,b
  2991  01226C  E105               	bnz	u11120
  2992  01226E  0E0A               	movlw	10
  2993  012270  0101               	movlb	1	; () banked
  2994  012272  5D3E               	subwf	(??_main+4)& (0+255),w,b
  2995  012274  A0D8               	btfss	status,0,c
  2996  012276  D4C7               	goto	l8560
  2997  012278                     u11120:
  2998                           
  2999                           ; BSR set to: 1
  3000                           ;RemoteCan.c: 411: pr_time_3 = time_counter;
  3001  012278  C00D  F0CF         	movff	_time_counter,_pr_time_3	;volatile
  3002  01227C  C00E  F0D0         	movff	_time_counter+1,_pr_time_3+1	;volatile
  3003  012280  C00F  F0D1         	movff	_time_counter+2,_pr_time_3+2	;volatile
  3004  012284  C010  F0D2         	movff	_time_counter+3,_pr_time_3+3	;volatile
  3005                           
  3006                           ;RemoteCan.c: 412: if (parking_message_E == 1) {
  3007  012288  AA4C               	btfss	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  3008  01228A  D01E               	goto	l8770
  3009                           
  3010                           ; BSR set to: 1
  3011                           ;RemoteCan.c: 413: display_refresh = 1;
  3012  01228C  844C               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  3013                           
  3014                           ; BSR set to: 1
  3015                           ;RemoteCan.c: 414: if (parking_message_ID == 0) {
  3016  01228E  0100               	movlb	0	; () banked
  3017  012290  51E4               	movf	_parking_message_ID& (0+255),w,b	;volatile
  3018  012292  A4D8               	btfss	status,2,c
  3019  012294  D005               	goto	l8758
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;RemoteCan.c: 415: LCD_Gap();
  3023  012296  EC7F  F0AC         	call	_LCD_Gap	;wreg free
  3024                           
  3025                           ;RemoteCan.c: 416: parking_message_ID++;
  3026  01229A  0100               	movlb	0	; () banked
  3027  01229C  2BE4               	incf	_parking_message_ID& (0+255),f,b	;volatile
  3028  01229E  D000               	goto	l8758
  3029  0122A0                     l8758:
  3030                           
  3031                           ; BSR set to: 0
  3032                           ;RemoteCan.c: 417: }
  3033                           ;RemoteCan.c: 418: if (parking_message_ID == 2) {
  3034  0122A0  0E02               	movlw	2
  3035  0122A2  0100               	movlb	0	; () banked
  3036  0122A4  19E4               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  3037  0122A6  A4D8               	btfss	status,2,c
  3038  0122A8  D005               	goto	l8764
  3039                           
  3040                           ; BSR set to: 0
  3041                           ;RemoteCan.c: 419: LCD_Park();
  3042  0122AA  EC4D  F0AC         	call	_LCD_Park	;wreg free
  3043                           
  3044                           ;RemoteCan.c: 420: parking_message_ID++;
  3045  0122AE  0100               	movlb	0	; () banked
  3046  0122B0  2BE4               	incf	_parking_message_ID& (0+255),f,b	;volatile
  3047  0122B2  D000               	goto	l8764
  3048  0122B4                     l8764:
  3049                           
  3050                           ; BSR set to: 0
  3051                           ;RemoteCan.c: 421: }
  3052                           ;RemoteCan.c: 422: if (parking_message_ID == 4) {
  3053  0122B4  0E04               	movlw	4
  3054  0122B6  0100               	movlb	0	; () banked
  3055  0122B8  19E4               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  3056  0122BA  A4D8               	btfss	status,2,c
  3057  0122BC  D4A4               	goto	l8560
  3058                           
  3059                           ; BSR set to: 0
  3060                           ;RemoteCan.c: 423: LCD_Parking();
  3061  0122BE  EC1B  F0AC         	call	_LCD_Parking	;wreg free
  3062                           
  3063                           ;RemoteCan.c: 424: parking_message_ID++;
  3064  0122C2  0100               	movlb	0	; () banked
  3065  0122C4  2BE4               	incf	_parking_message_ID& (0+255),f,b	;volatile
  3066                           
  3067                           ; BSR set to: 0
  3068                           ;RemoteCan.c: 425: }
  3069                           ;RemoteCan.c: 426: } else {
  3070  0122C6  D49F               	goto	l8560
  3071  0122C8                     l8770:
  3072                           
  3073                           ;RemoteCan.c: 427: LCD_Handler();
  3074  0122C8  ECE5  F09F         	call	_LCD_Handler	;wreg free
  3075                           
  3076                           ;RemoteCan.c: 428: }
  3077                           ;RemoteCan.c: 429: }
  3078                           ;RemoteCan.c: 430: } else {
  3079  0122CC  D49C               	goto	l8560
  3080  0122CE                     l8772:
  3081                           
  3082                           ;RemoteCan.c: 431: if (parking_message_ID == 6) {
  3083  0122CE  0E06               	movlw	6
  3084  0122D0  0100               	movlb	0	; () banked
  3085  0122D2  19E4               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  3086  0122D4  A4D8               	btfss	status,2,c
  3087  0122D6  D497               	goto	l8560
  3088                           
  3089                           ; BSR set to: 0
  3090                           ;RemoteCan.c: 432: if (parking_error == 1) {
  3091  0122D8  A84C               	btfss	_parking_error/(0+8),_parking_error& (0+7),c	;volatile
  3092  0122DA  D024               	goto	l8786
  3093                           
  3094                           ; BSR set to: 0
  3095                           ;RemoteCan.c: 433: parking_error = 0;
  3096  0122DC  984C               	bcf	_parking_error/(0+8),_parking_error& (0+7),c	;volatile
  3097                           
  3098                           ; BSR set to: 0
  3099                           ;RemoteCan.c: 434: LCD_Error();
  3100  0122DE  ECB1  F0AC         	call	_LCD_Error	;wreg free
  3101                           
  3102                           ;RemoteCan.c: 435: while (CANisTxReady() != 1);
  3103  0122E2  D000               	goto	l8780
  3104  0122E4                     l8780:
  3105  0122E4  EC34  F0AF         	call	_CANisTxReady	;wreg free
  3106  0122E8  06E8               	decf	wreg,f,c
  3107  0122EA  A4D8               	btfss	status,2,c
  3108  0122EC  D7FB               	goto	l8780
  3109                           
  3110                           ;RemoteCan.c: 436: data_brake [0] = 0b00000000;
  3111  0122EE  0E00               	movlw	0
  3112  0122F0  0100               	movlb	0	; () banked
  3113  0122F2  6FE8               	movwf	_data_brake& (0+255),b
  3114                           
  3115                           ; BSR set to: 0
  3116                           ;RemoteCan.c: 437: CANsendMessage(0b00000000110, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3117  0122F4  0E06               	movlw	6
  3118  0122F6  0100               	movlb	0	; () banked
  3119  0122F8  6F70               	movwf	CANsendMessage@identifier& (0+255),b
  3120  0122FA  0E00               	movlw	0
  3121  0122FC  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3122  0122FE  0E00               	movlw	0
  3123  012300  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3124  012302  0E00               	movlw	0
  3125  012304  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3126  012306  0EE8               	movlw	low _data_brake
  3127  012308  0100               	movlb	0	; () banked
  3128  01230A  6F74               	movwf	CANsendMessage@data& (0+255),b
  3129  01230C  0E00               	movlw	high _data_brake
  3130  01230E  0100               	movlb	0	; () banked
  3131  012310  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
  3132  012312  0E08               	movlw	8
  3133  012314  0100               	movlb	0	; () banked
  3134  012316  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
  3135  012318  0EBC               	movlw	188
  3136  01231A  0100               	movlb	0	; () banked
  3137  01231C  6F77               	movwf	CANsendMessage@flags& (0+255),b
  3138  01231E  EC1B  F08A         	call	_CANsendMessage	;wreg free
  3139                           
  3140                           ;RemoteCan.c: 438: } else {
  3141  012322  D003               	goto	l8788
  3142  012324                     l8786:
  3143                           
  3144                           ;RemoteCan.c: 439: LCD_End();
  3145  012324  ECE3  F0AC         	call	_LCD_End	;wreg free
  3146  012328  D000               	goto	l8788
  3147  01232A                     l8788:
  3148                           
  3149                           ;RemoteCan.c: 440: }
  3150                           ;RemoteCan.c: 441: parking_message_ID = 0;
  3151  01232A  0E00               	movlw	0
  3152  01232C  0100               	movlb	0	; () banked
  3153  01232E  6FE4               	movwf	_parking_message_ID& (0+255),b	;volatile
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;RemoteCan.c: 442: parking_message_E = 0;
  3157  012330  9A4C               	bcf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  3158                           
  3159                           ; BSR set to: 0
  3160                           
  3161                           ; BSR set to: 0
  3162                           
  3163                           ; BSR set to: 0
  3164  012332  D469               	goto	l8560
  3165                           
  3166                           ; BSR set to: 0
  3167                           
  3168                           ; BSR set to: 0
  3169  012334  EF5F  F000         	goto	start
  3170  012338                     __end_of_main:
  3171                           	opt stack 0
  3172                           tblptru	equ	0xFF8
  3173                           tblptrh	equ	0xFF7
  3174                           tblptrl	equ	0xFF6
  3175                           tablat	equ	0xFF5
  3176                           postinc0	equ	0xFEE
  3177                           wreg	equ	0xFE8
  3178                           status	equ	0xFD8
  3179                           
  3180 ;; *************** function _board_initialization *****************
  3181 ;; Defined at:
  3182 ;;		line 662 in file "RemoteCan.c"
  3183 ;; Parameters:    Size  Location     Type
  3184 ;;		None
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;		None
  3187 ;; Return value:  Size  Location     Type
  3188 ;;		None               void
  3189 ;; Registers used:
  3190 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3200 ;;Total ram usage:        0 bytes
  3201 ;; Hardware stack levels used:    1
  3202 ;; Hardware stack levels required when called:    9
  3203 ;; This function calls:
  3204 ;;		_CANInitialize
  3205 ;;		_LCD_clear
  3206 ;;		_LCD_goto_line
  3207 ;;		_LCD_initialize
  3208 ;; This function is called by:
  3209 ;;		_main
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213                           	psect	text1
  3214  0154F0                     __ptext1:
  3215                           	opt stack 0
  3216  0154F0                     _board_initialization:
  3217                           	opt stack 21
  3218                           
  3219                           ;RemoteCan.c: 664: LATA = 0x00;
  3220                           
  3221                           ; BSR set to: 0
  3222                           ;incstack = 0
  3223  0154F0  0E00               	movlw	0
  3224  0154F2  6E89               	movwf	3977,c	;volatile
  3225                           
  3226                           ;RemoteCan.c: 665: TRISA = 0b00011111;
  3227  0154F4  0E1F               	movlw	31
  3228  0154F6  6E92               	movwf	3986,c	;volatile
  3229                           
  3230                           ;RemoteCan.c: 666: LATB = 0x00;
  3231  0154F8  0E00               	movlw	0
  3232  0154FA  6E8A               	movwf	3978,c	;volatile
  3233                           
  3234                           ;RemoteCan.c: 667: TRISB = 0b11111011;
  3235  0154FC  0EFB               	movlw	251
  3236  0154FE  6E93               	movwf	3987,c	;volatile
  3237                           
  3238                           ;RemoteCan.c: 668: LATC = 0x00;
  3239  015500  0E00               	movlw	0
  3240  015502  6E8B               	movwf	3979,c	;volatile
  3241                           
  3242                           ;RemoteCan.c: 669: TRISC = 0b11110000;
  3243  015504  0EF0               	movlw	240
  3244  015506  6E94               	movwf	3988,c	;volatile
  3245                           
  3246                           ;RemoteCan.c: 670: LATD = 0x00;
  3247  015508  0E00               	movlw	0
  3248  01550A  6E8C               	movwf	3980,c	;volatile
  3249                           
  3250                           ;RemoteCan.c: 671: TRISD = 0x00;
  3251  01550C  0E00               	movlw	0
  3252  01550E  6E95               	movwf	3989,c	;volatile
  3253                           
  3254                           ;RemoteCan.c: 672: LATE = 0x00;
  3255  015510  0E00               	movlw	0
  3256  015512  6E8D               	movwf	3981,c	;volatile
  3257                           
  3258                           ;RemoteCan.c: 673: TRISE = 0x00;
  3259  015514  0E00               	movlw	0
  3260  015516  6E96               	movwf	3990,c	;volatile
  3261                           
  3262                           ;RemoteCan.c: 675: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_
      +                          SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  3263  015518  0E06               	movlw	6
  3264  01551A  0100               	movlb	0	; () banked
  3265  01551C  6F7E               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3266  01551E  0E05               	movlw	5
  3267  015520  0100               	movlb	0	; () banked
  3268  015522  6F7F               	movwf	CANInitialize@phaseSeg2& (0+255),b
  3269  015524  0E01               	movlw	1
  3270  015526  0100               	movlb	0	; () banked
  3271  015528  6F80               	movwf	CANInitialize@SJW& (0+255),b
  3272  01552A  0E03               	movlw	3
  3273  01552C  0100               	movlb	0	; () banked
  3274  01552E  6F81               	movwf	CANInitialize@BRP& (0+255),b
  3275  015530  0E9D               	movlw	157
  3276  015532  0100               	movlb	0	; () banked
  3277  015534  6F82               	movwf	CANInitialize@flags& (0+255),b
  3278  015536  0E04               	movlw	4
  3279  015538  ECE4  F0A0         	call	_CANInitialize
  3280                           
  3281                           ;RemoteCan.c: 679: PIR2bits.TMR3IF = 0;
  3282  01553C  92A1               	bcf	4001,1,c	;volatile
  3283                           
  3284                           ;RemoteCan.c: 680: PIR3bits.RXB1IF = 0;
  3285  01553E  92A4               	bcf	4004,1,c	;volatile
  3286                           
  3287                           ;RemoteCan.c: 681: PIR3bits.RXB0IF = 0;
  3288  015540  90A4               	bcf	4004,0,c	;volatile
  3289                           
  3290                           ;RemoteCan.c: 684: RCONbits.IPEN = 1;
  3291  015542  8ED0               	bsf	4048,7,c	;volatile
  3292                           
  3293                           ;RemoteCan.c: 685: IPR3bits.RXB1IP = 1;
  3294  015544  82A5               	bsf	4005,1,c	;volatile
  3295                           
  3296                           ;RemoteCan.c: 686: IPR3bits.RXB0IP = 1;
  3297  015546  80A5               	bsf	4005,0,c	;volatile
  3298                           
  3299                           ;RemoteCan.c: 687: IPR2bits.TMR3IP = 0;
  3300  015548  92A2               	bcf	4002,1,c	;volatile
  3301                           
  3302                           ;RemoteCan.c: 690: ADCON1 = 0b00001101;
  3303  01554A  0E0D               	movlw	13
  3304  01554C  6EC1               	movwf	4033,c	;volatile
  3305                           
  3306                           ;RemoteCan.c: 691: ADCON0bits.CHS2 = 0;
  3307  01554E  98C2               	bcf	4034,4,c	;volatile
  3308                           
  3309                           ;RemoteCan.c: 692: ADCON0bits.CHS1 = 0;
  3310  015550  96C2               	bcf	4034,3,c	;volatile
  3311                           
  3312                           ;RemoteCan.c: 693: ADCON0bits.CHS0 = 0;
  3313  015552  94C2               	bcf	4034,2,c	;volatile
  3314                           
  3315                           ;RemoteCan.c: 694: ADCON2bits.ACQT2 = 1;
  3316  015554  8AC0               	bsf	4032,5,c	;volatile
  3317                           
  3318                           ;RemoteCan.c: 695: ADCON2bits.ACQT1 = 1;
  3319  015556  88C0               	bsf	4032,4,c	;volatile
  3320                           
  3321                           ;RemoteCan.c: 696: ADCON2bits.ACQT0 = 0;
  3322  015558  96C0               	bcf	4032,3,c	;volatile
  3323                           
  3324                           ;RemoteCan.c: 697: ADCON2bits.ADCS2 = 1;
  3325  01555A  84C0               	bsf	4032,2,c	;volatile
  3326                           
  3327                           ;RemoteCan.c: 698: ADCON2bits.ADCS1 = 0;
  3328  01555C  92C0               	bcf	4032,1,c	;volatile
  3329                           
  3330                           ;RemoteCan.c: 699: ADCON2bits.ADCS0 = 1;
  3331  01555E  80C0               	bsf	4032,0,c	;volatile
  3332                           
  3333                           ;RemoteCan.c: 700: ADCON2bits.ADFM = 0;
  3334  015560  9EC0               	bcf	4032,7,c	;volatile
  3335                           
  3336                           ;RemoteCan.c: 701: ADCON0bits.ADON = 1;
  3337  015562  80C2               	bsf	4034,0,c	;volatile
  3338                           
  3339                           ;RemoteCan.c: 704: LCD_initialize(16);
  3340  015564  0E10               	movlw	16
  3341  015566  EC0D  F0A5         	call	_LCD_initialize
  3342                           
  3343                           ;RemoteCan.c: 706: LCD_clear();
  3344  01556A  ECF0  F0AE         	call	_LCD_clear	;wreg free
  3345                           
  3346                           ;RemoteCan.c: 707: LCD_goto_line(1);
  3347  01556E  0E01               	movlw	1
  3348  015570  EC1A  F0A8         	call	_LCD_goto_line
  3349                           
  3350                           ;RemoteCan.c: 711: PORTDbits.RD2 = 0;
  3351  015574  9483               	bcf	3971,2,c	;volatile
  3352                           
  3353                           ;RemoteCan.c: 712: PORTDbits.RD3 = 0;
  3354  015576  9683               	bcf	3971,3,c	;volatile
  3355                           
  3356                           ;RemoteCan.c: 715: TMR3H = 0x63;
  3357  015578  0E63               	movlw	99
  3358  01557A  6EB3               	movwf	4019,c	;volatile
  3359                           
  3360                           ;RemoteCan.c: 716: TMR3L = 0xC0;
  3361  01557C  0EC0               	movlw	192
  3362  01557E  6EB2               	movwf	4018,c	;volatile
  3363                           
  3364                           ;RemoteCan.c: 719: PIE3bits.RXB1IE = 1;
  3365  015580  82A3               	bsf	4003,1,c	;volatile
  3366                           
  3367                           ;RemoteCan.c: 720: PIE3bits.RXB0IE = 1;
  3368  015582  80A3               	bsf	4003,0,c	;volatile
  3369                           
  3370                           ;RemoteCan.c: 721: PIE2bits.TMR3IE = 1;
  3371  015584  82A0               	bsf	4000,1,c	;volatile
  3372                           
  3373                           ;RemoteCan.c: 724: T3CON = 0x01;
  3374  015586  0E01               	movlw	1
  3375  015588  6EB1               	movwf	4017,c	;volatile
  3376                           
  3377                           ;RemoteCan.c: 725: LCD_clear();
  3378  01558A  ECF0  F0AE         	call	_LCD_clear	;wreg free
  3379                           
  3380                           ;RemoteCan.c: 726: INTCONbits.GIEH = 1;
  3381  01558E  8EF2               	bsf	intcon,7,c	;volatile
  3382                           
  3383                           ;RemoteCan.c: 727: INTCONbits.GIEL = 1;
  3384  015590  8CF2               	bsf	intcon,6,c	;volatile
  3385  015592  0012               	return		;funcret
  3386  015594                     __end_of_board_initialization:
  3387                           	opt stack 0
  3388                           tblptru	equ	0xFF8
  3389                           tblptrh	equ	0xFF7
  3390                           tblptrl	equ	0xFF6
  3391                           tablat	equ	0xFF5
  3392                           intcon	equ	0xFF2
  3393                           postinc0	equ	0xFEE
  3394                           wreg	equ	0xFE8
  3395                           status	equ	0xFD8
  3396                           
  3397 ;; *************** function _CANInitialize *****************
  3398 ;; Defined at:
  3399 ;;		line 218 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;  propSeg         1    wreg     unsigned char 
  3402 ;;  phaseSeg1       1   30[BANK0 ] unsigned char 
  3403 ;;  phaseSeg2       1   31[BANK0 ] unsigned char 
  3404 ;;  SJW             1   32[BANK0 ] unsigned char 
  3405 ;;  BRP             1   33[BANK0 ] unsigned char 
  3406 ;;  flags           1   34[BANK0 ] enum E16928
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;  propSeg         1   39[BANK0 ] unsigned char 
  3409 ;;  FilterConfig    1   41[BANK0 ] unsigned char 
  3410 ;;  FilterConfig    1   40[BANK0 ] unsigned char 
  3411 ;; Return value:  Size  Location     Type
  3412 ;;		None               void
  3413 ;; Registers used:
  3414 ;;		wreg, status,2, status,0, cstack
  3415 ;; Tracked objects:
  3416 ;;		On entry : 0/0
  3417 ;;		On exit  : 0/0
  3418 ;;		Unchanged: 0/0
  3419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3420 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3421 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3422 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3423 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3424 ;;Total ram usage:       12 bytes
  3425 ;; Hardware stack levels used:    1
  3426 ;; Hardware stack levels required when called:    4
  3427 ;; This function calls:
  3428 ;;		_CANOperationMode
  3429 ;;		_CANSetFilter
  3430 ;;		_CANSetMask
  3431 ;; This function is called by:
  3432 ;;		_board_initialization
  3433 ;; This function uses a non-reentrant model
  3434 ;;
  3435                           
  3436                           	psect	text2
  3437  0141C8                     __ptext2:
  3438                           	opt stack 0
  3439  0141C8                     _CANInitialize:
  3440                           	opt stack 25
  3441                           
  3442                           ;incstack = 0
  3443                           ;CANInitialize@propSeg stored from wreg
  3444  0141C8  0100               	movlb	0	; () banked
  3445  0141CA  6F87               	movwf	CANInitialize@propSeg& (0+255),b
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  3449                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  3450                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3451  0141CC  0E80               	movlw	128
  3452  0141CE  EC76  F0AF         	call	_CANOperationMode
  3453                           
  3454                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  3455  0141D2  0E00               	movlw	0
  3456  0141D4  6E70               	movwf	3952,c	;volatile
  3457                           
  3458                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  3459  0141D6  0E00               	movlw	0
  3460  0141D8  6E71               	movwf	3953,c	;volatile
  3461                           
  3462                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  3463  0141DA  0E00               	movlw	0
  3464  0141DC  6E72               	movwf	3954,c	;volatile
  3465                           
  3466                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  3467  0141DE  0100               	movlb	0	; () banked
  3468  0141E0  4180               	rrncf	CANInitialize@SJW& (0+255),w,b
  3469  0141E2  42E8               	rrncf	wreg,f,c
  3470  0141E4  0BC0               	andlw	192
  3471  0141E6  0100               	movlb	0	; () banked
  3472  0141E8  6F80               	movwf	CANInitialize@SJW& (0+255),b
  3473                           
  3474                           ; BSR set to: 0
  3475                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  3476  0141EA  0100               	movlb	0	; () banked
  3477  0141EC  5180               	movf	CANInitialize@SJW& (0+255),w,b
  3478  0141EE  1270               	iorwf	3952,f,c	;volatile
  3479                           
  3480                           ; BSR set to: 0
  3481                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  3482  0141F0  0100               	movlb	0	; () banked
  3483  0141F2  5181               	movf	CANInitialize@BRP& (0+255),w,b
  3484  0141F4  1270               	iorwf	3952,f,c	;volatile
  3485                           
  3486                           ; BSR set to: 0
  3487                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  3488  0141F6  0100               	movlb	0	; () banked
  3489  0141F8  5187               	movf	CANInitialize@propSeg& (0+255),w,b
  3490  0141FA  1271               	iorwf	3953,f,c	;volatile
  3491                           
  3492                           ; BSR set to: 0
  3493                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3494  0141FC  0100               	movlb	0	; () banked
  3495  0141FE  397E               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3496  014200  42E8               	rrncf	wreg,f,c
  3497  014202  0BF8               	andlw	248
  3498  014204  0100               	movlb	0	; () banked
  3499  014206  6F7E               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3500                           
  3501                           ; BSR set to: 0
  3502                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3503  014208  0100               	movlb	0	; () banked
  3504  01420A  517E               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3505  01420C  1271               	iorwf	3953,f,c	;volatile
  3506                           
  3507                           ; BSR set to: 0
  3508                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3509  01420E  0100               	movlb	0	; () banked
  3510  014210  A582               	btfss	CANInitialize@flags& (0+255),2,b
  3511                           
  3512                           ; BSR set to: 0
  3513                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3514  014212  8C71               	bsf	3953,6,c	;volatile
  3515                           
  3516                           ; BSR set to: 0
  3517                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3518  014214  0100               	movlb	0	; () banked
  3519  014216  A182               	btfss	CANInitialize@flags& (0+255),0,b
  3520  014218  D002               	goto	l5666
  3521                           
  3522                           ; BSR set to: 0
  3523                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3524  01421A  8E71               	bsf	3953,7,c	;volatile
  3525  01421C  D000               	goto	l5666
  3526  01421E                     l5666:
  3527                           
  3528                           ; BSR set to: 0
  3529                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3530  01421E  0100               	movlb	0	; () banked
  3531  014220  517F               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3532  014222  1272               	iorwf	3954,f,c	;volatile
  3533                           
  3534                           ; BSR set to: 0
  3535                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3536  014224  0100               	movlb	0	; () banked
  3537  014226  A382               	btfss	CANInitialize@flags& (0+255),1,b
  3538  014228  D002               	goto	l5672
  3539                           
  3540                           ; BSR set to: 0
  3541                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3542  01422A  8C72               	bsf	3954,6,c	;volatile
  3543  01422C  D000               	goto	l5672
  3544  01422E                     l5672:
  3545                           
  3546                           ; BSR set to: 0
  3547                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3548  01422E  0100               	movlb	0	; () banked
  3549  014230  5182               	movf	CANInitialize@flags& (0+255),w,b
  3550  014232  0B60               	andlw	96
  3551  014234  6E60               	movwf	3936,c	;volatile
  3552                           
  3553                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3554  014236  0100               	movlb	0	; () banked
  3555  014238  5182               	movf	CANInitialize@flags& (0+255),w,b
  3556  01423A  0B10               	andlw	16
  3557  01423C  0AFF               	xorlw	255
  3558  01423E  B4D8               	btfsc	status,2,c
  3559                           
  3560                           ; BSR set to: 0
  3561                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3562  014240  8460               	bsf	3936,2,c	;volatile
  3563                           
  3564                           ; BSR set to: 0
  3565                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3566  014242  CF60 FF50          	movff	3936,3920	;volatile
  3567                           
  3568                           ; BSR set to: 0
  3569                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3570  014246  0E00               	movlw	0
  3571  014248  0100               	movlb	0	; () banked
  3572  01424A  6F70               	movwf	CANSetMask@mask& (0+255),b
  3573  01424C  0E00               	movlw	0
  3574  01424E  6F71               	movwf	(CANSetMask@mask+1)& (0+255),b
  3575  014250  0E00               	movlw	0
  3576  014252  6F72               	movwf	(CANSetMask@mask+2)& (0+255),b
  3577  014254  0E00               	movlw	0
  3578  014256  6F73               	movwf	(CANSetMask@mask+3)& (0+255),b
  3579  014258  0EF7               	movlw	247
  3580  01425A  0100               	movlb	0	; () banked
  3581  01425C  6F74               	movwf	CANSetMask@type& (0+255),b
  3582  01425E  0E01               	movlw	1
  3583  014260  EC19  F09A         	call	_CANSetMask
  3584                           
  3585                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3586  014264  0E00               	movlw	0
  3587  014266  0100               	movlb	0	; () banked
  3588  014268  6F70               	movwf	CANSetMask@mask& (0+255),b
  3589  01426A  0E00               	movlw	0
  3590  01426C  6F71               	movwf	(CANSetMask@mask+1)& (0+255),b
  3591  01426E  0E00               	movlw	0
  3592  014270  6F72               	movwf	(CANSetMask@mask+2)& (0+255),b
  3593  014272  0E00               	movlw	0
  3594  014274  6F73               	movwf	(CANSetMask@mask+3)& (0+255),b
  3595  014276  0EF7               	movlw	247
  3596  014278  0100               	movlb	0	; () banked
  3597  01427A  6F74               	movwf	CANSetMask@type& (0+255),b
  3598  01427C  0E02               	movlw	2
  3599  01427E  EC19  F09A         	call	_CANSetMask
  3600                           
  3601                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3602  014282  D00F               	goto	l5684
  3603  014284                     l5678:
  3604                           
  3605                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3606  014284  0EF7               	movlw	247
  3607  014286  0100               	movlb	0	; () banked
  3608  014288  6F88               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3609  01428A  D007               	goto	l5680
  3610  01428C                     l380:
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3614  01428C  0100               	movlb	0	; () banked
  3615  01428E  6988               	setf	CANInitialize@FilterConfig1& (0+255),b
  3616                           
  3617                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3618  014290  0100               	movlb	0	; () banked
  3619  014292  6989               	setf	CANInitialize@FilterConfig2& (0+255),b
  3620                           
  3621                           ;inc\CANlib.h: 273: break;
  3622  014294  D028               	goto	l5686
  3623  014296                     l381:
  3624                           
  3625                           ; BSR set to: 0
  3626                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3627  014296  0100               	movlb	0	; () banked
  3628  014298  6988               	setf	CANInitialize@FilterConfig1& (0+255),b
  3629  01429A                     l5680:
  3630                           
  3631                           ; BSR set to: 0
  3632                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3633  01429A  0EF7               	movlw	247
  3634  01429C  0100               	movlb	0	; () banked
  3635  01429E  6F89               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3636                           
  3637                           ; BSR set to: 0
  3638                           ;inc\CANlib.h: 278: }
  3639                           
  3640                           ;inc\CANlib.h: 277: break;
  3641  0142A0  D022               	goto	l5686
  3642  0142A2                     l5684:
  3643  0142A2  0E9F               	movlw	159
  3644  0142A4  0100               	movlb	0	; () banked
  3645  0142A6  6F83               	movwf	??_CANInitialize& (0+255),b
  3646  0142A8  0EFF               	movlw	255
  3647  0142AA  0100               	movlb	0	; () banked
  3648  0142AC  6F84               	movwf	(??_CANInitialize+1)& (0+255),b
  3649  0142AE  0100               	movlb	0	; () banked
  3650  0142B0  5182               	movf	CANInitialize@flags& (0+255),w,b
  3651  0142B2  0B60               	andlw	96
  3652  0142B4  0100               	movlb	0	; () banked
  3653  0142B6  6F85               	movwf	(??_CANInitialize+2)& (0+255),b
  3654  0142B8  6B86               	clrf	(??_CANInitialize+3)& (0+255),b
  3655  0142BA  0100               	movlb	0	; () banked
  3656  0142BC  5183               	movf	??_CANInitialize& (0+255),w,b
  3657  0142BE  0100               	movlb	0	; () banked
  3658  0142C0  1385               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3659  0142C2  0100               	movlb	0	; () banked
  3660  0142C4  5184               	movf	(??_CANInitialize+1)& (0+255),w,b
  3661  0142C6  0100               	movlb	0	; () banked
  3662  0142C8  1386               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3663                           
  3664                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3665                           ; Switch size 1, requested type "space"
  3666                           ; Number of cases is 1, Range of values is 0 to 0
  3667                           ; switch strategies available:
  3668                           ; Name         Instructions Cycles
  3669                           ; simple_byte            4     3 (average)
  3670                           ;	Chosen strategy is simple_byte
  3671  0142CA  0100               	movlb	0	; () banked
  3672  0142CC  5186               	movf	(??_CANInitialize+3)& (0+255),w,b
  3673  0142CE  0A00               	xorlw	0	; case 0
  3674  0142D0  A4D8               	btfss	status,2,c
  3675  0142D2  D7E1               	goto	l381
  3676                           
  3677                           ; BSR set to: 0
  3678                           ; Switch size 1, requested type "space"
  3679                           ; Number of cases is 2, Range of values is 191 to 223
  3680                           ; switch strategies available:
  3681                           ; Name         Instructions Cycles
  3682                           ; simple_byte            7     4 (average)
  3683                           ;	Chosen strategy is simple_byte
  3684  0142D4  0100               	movlb	0	; () banked
  3685  0142D6  5185               	movf	(??_CANInitialize+2)& (0+255),w,b
  3686  0142D8  0ABF               	xorlw	191	; case 191
  3687  0142DA  B4D8               	btfsc	status,2,c
  3688  0142DC  D7D7               	goto	l380
  3689  0142DE  0A60               	xorlw	96	; case 223
  3690  0142E0  B4D8               	btfsc	status,2,c
  3691  0142E2  D7D0               	goto	l5678
  3692  0142E4  D7D8               	goto	l381
  3693  0142E6                     l5686:
  3694                           
  3695                           ; BSR set to: 0
  3696                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3697  0142E6  0E00               	movlw	0
  3698  0142E8  0100               	movlb	0	; () banked
  3699  0142EA  6F70               	movwf	CANSetFilter@filter& (0+255),b
  3700  0142EC  0E00               	movlw	0
  3701  0142EE  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3702  0142F0  0E00               	movlw	0
  3703  0142F2  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3704  0142F4  0E00               	movlw	0
  3705  0142F6  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3706  0142F8  C088  F074         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3707  0142FC  0E00               	movlw	0
  3708  0142FE  EC00  F080         	call	_CANSetFilter
  3709                           
  3710                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3711  014302  0E00               	movlw	0
  3712  014304  0100               	movlb	0	; () banked
  3713  014306  6F70               	movwf	CANSetFilter@filter& (0+255),b
  3714  014308  0E00               	movlw	0
  3715  01430A  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3716  01430C  0E00               	movlw	0
  3717  01430E  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3718  014310  0E00               	movlw	0
  3719  014312  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3720  014314  C088  F074         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3721  014318  0E01               	movlw	1
  3722  01431A  EC00  F080         	call	_CANSetFilter
  3723                           
  3724                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3725  01431E  0E00               	movlw	0
  3726  014320  0100               	movlb	0	; () banked
  3727  014322  6F70               	movwf	CANSetFilter@filter& (0+255),b
  3728  014324  0E00               	movlw	0
  3729  014326  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3730  014328  0E00               	movlw	0
  3731  01432A  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3732  01432C  0E00               	movlw	0
  3733  01432E  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3734  014330  C089  F074         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3735  014334  0E02               	movlw	2
  3736  014336  EC00  F080         	call	_CANSetFilter
  3737                           
  3738                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3739  01433A  0E00               	movlw	0
  3740  01433C  0100               	movlb	0	; () banked
  3741  01433E  6F70               	movwf	CANSetFilter@filter& (0+255),b
  3742  014340  0E00               	movlw	0
  3743  014342  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3744  014344  0E00               	movlw	0
  3745  014346  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3746  014348  0E00               	movlw	0
  3747  01434A  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3748  01434C  C089  F074         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3749  014350  0E03               	movlw	3
  3750  014352  EC00  F080         	call	_CANSetFilter
  3751                           
  3752                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3753  014356  0E00               	movlw	0
  3754  014358  0100               	movlb	0	; () banked
  3755  01435A  6F70               	movwf	CANSetFilter@filter& (0+255),b
  3756  01435C  0E00               	movlw	0
  3757  01435E  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3758  014360  0E00               	movlw	0
  3759  014362  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3760  014364  0E00               	movlw	0
  3761  014366  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3762  014368  C089  F074         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3763  01436C  0E04               	movlw	4
  3764  01436E  EC00  F080         	call	_CANSetFilter
  3765                           
  3766                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3767  014372  0E00               	movlw	0
  3768  014374  0100               	movlb	0	; () banked
  3769  014376  6F70               	movwf	CANSetFilter@filter& (0+255),b
  3770  014378  0E00               	movlw	0
  3771  01437A  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3772  01437C  0E00               	movlw	0
  3773  01437E  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3774  014380  0E00               	movlw	0
  3775  014382  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3776  014384  C089  F074         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3777  014388  0E05               	movlw	5
  3778  01438A  EC00  F080         	call	_CANSetFilter
  3779                           
  3780                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3781  01438E  0E00               	movlw	0
  3782  014390  EC76  F0AF         	call	_CANOperationMode
  3783  014394  0012               	return		;funcret
  3784  014396                     __end_of_CANInitialize:
  3785                           	opt stack 0
  3786                           tblptru	equ	0xFF8
  3787                           tblptrh	equ	0xFF7
  3788                           tblptrl	equ	0xFF6
  3789                           tablat	equ	0xFF5
  3790                           intcon	equ	0xFF2
  3791                           postinc0	equ	0xFEE
  3792                           wreg	equ	0xFE8
  3793                           status	equ	0xFD8
  3794                           
  3795 ;; *************** function _CANSetMask *****************
  3796 ;; Defined at:
  3797 ;;		line 640 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3798 ;; Parameters:    Size  Location     Type
  3799 ;;  numBuffer       1    wreg     enum E16962
  3800 ;;  mask            4   16[BANK0 ] unsigned long 
  3801 ;;  type            1   20[BANK0 ] enum E16928
  3802 ;; Auto vars:     Size  Location     Type
  3803 ;;  numBuffer       1   25[BANK0 ] enum E16962
  3804 ;;  tamp            4   26[BANK0 ] unsigned long 
  3805 ;; Return value:  Size  Location     Type
  3806 ;;		None               void
  3807 ;; Registers used:
  3808 ;;		wreg, status,2, status,0
  3809 ;; Tracked objects:
  3810 ;;		On entry : 0/0
  3811 ;;		On exit  : 0/0
  3812 ;;		Unchanged: 0/0
  3813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3814 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3815 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3816 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3817 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3818 ;;Total ram usage:       14 bytes
  3819 ;; Hardware stack levels used:    1
  3820 ;; Hardware stack levels required when called:    3
  3821 ;; This function calls:
  3822 ;;		Nothing
  3823 ;; This function is called by:
  3824 ;;		_CANInitialize
  3825 ;; This function uses a non-reentrant model
  3826 ;;
  3827                           
  3828                           	psect	text3
  3829  013432                     __ptext3:
  3830                           	opt stack 0
  3831  013432                     _CANSetMask:
  3832                           	opt stack 25
  3833                           
  3834                           ;incstack = 0
  3835                           ;CANSetMask@numBuffer stored from wreg
  3836  013432  0100               	movlb	0	; () banked
  3837  013434  6F79               	movwf	CANSetMask@numBuffer& (0+255),b
  3838                           
  3839                           ; BSR set to: 0
  3840                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3841  013436  0100               	movlb	0	; () banked
  3842  013438  0579               	decf	CANSetMask@numBuffer& (0+255),w,b
  3843  01343A  A4D8               	btfss	status,2,c
  3844  01343C  D057               	goto	l4898
  3845                           
  3846                           ; BSR set to: 0
  3847  01343E  0100               	movlb	0	; () banked
  3848  013440  2974               	incf	CANSetMask@type& (0+255),w,b
  3849  013442  A4D8               	btfss	status,2,c
  3850  013444  D053               	goto	l4898
  3851                           
  3852                           ; BSR set to: 0
  3853                           ;inc\CANlib.h: 644: {
  3854                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3855  013446  C070  F075         	movff	CANSetMask@mask,??_CANSetMask
  3856  01344A  C071  F076         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3857  01344E  C072  F077         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3858  013452  C073  F078         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3859  013456  0E04               	movlw	4
  3860  013458  D006               	goto	u5150
  3861  01345A                     u5155:
  3862  01345A  0100               	movlb	0	; () banked
  3863  01345C  90D8               	bcf	status,0,c
  3864  01345E  3378               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3865  013460  3377               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3866  013462  3376               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3867  013464  3375               	rrcf	??_CANSetMask& (0+255),f,b
  3868  013466                     u5150:
  3869  013466  2EE8               	decfsz	wreg,f,c
  3870  013468  D7F8               	goto	u5155
  3871  01346A  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  3872  01346E  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3873  013472  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3874  013476  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3878  01347A  0100               	movlb	0	; () banked
  3879  01347C  517A               	movf	CANSetMask@tamp& (0+255),w,b
  3880  01347E  0100               	movlb	0	; () banked
  3881  013480  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  3882  013482  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3883  013484  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3884  013486  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3885                           
  3886                           ; BSR set to: 0
  3887                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3888  013488  C07A  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3889                           
  3890                           ; BSR set to: 0
  3891                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3892  01348C  0E07               	movlw	7
  3893  01348E  0100               	movlb	0	; () banked
  3894  013490  1570               	andwf	CANSetMask@mask& (0+255),w,b
  3895  013492  0100               	movlb	0	; () banked
  3896  013494  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  3897  013496  0E00               	movlw	0
  3898  013498  0100               	movlb	0	; () banked
  3899  01349A  1571               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3900  01349C  0100               	movlb	0	; () banked
  3901  01349E  6F7B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3902  0134A0  0E00               	movlw	0
  3903  0134A2  0100               	movlb	0	; () banked
  3904  0134A4  1572               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3905  0134A6  0100               	movlb	0	; () banked
  3906  0134A8  6F7C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3907  0134AA  0E00               	movlw	0
  3908  0134AC  0100               	movlb	0	; () banked
  3909  0134AE  1573               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3910  0134B0  0100               	movlb	0	; () banked
  3911  0134B2  6F7D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3912                           
  3913                           ; BSR set to: 0
  3914                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3915  0134B4  C07A  F075         	movff	CANSetMask@tamp,??_CANSetMask
  3916  0134B8  C07B  F076         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3917  0134BC  C07C  F077         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3918  0134C0  C07D  F078         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3919  0134C4  0E05               	movlw	5
  3920  0134C6                     u5165:
  3921  0134C6  90D8               	bcf	status,0,c
  3922  0134C8  0100               	movlb	0	; () banked
  3923  0134CA  3775               	rlcf	??_CANSetMask& (0+255),f,b
  3924  0134CC  3776               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3925  0134CE  3777               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3926  0134D0  3778               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3927  0134D2  2EE8               	decfsz	wreg,f,c
  3928  0134D4  D7F8               	goto	u5165
  3929  0134D6  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  3930  0134DA  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3931  0134DE  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3932  0134E2  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3933                           
  3934                           ; BSR set to: 0
  3935                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3936  0134E6  C07A  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3937  0134EA  D000               	goto	l4898
  3938  0134EC                     l4898:
  3939                           
  3940                           ; BSR set to: 0
  3941                           ;inc\CANlib.h: 652: }
  3942                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3943  0134EC  0E02               	movlw	2
  3944  0134EE  0100               	movlb	0	; () banked
  3945  0134F0  1979               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3946  0134F2  A4D8               	btfss	status,2,c
  3947  0134F4  D057               	goto	l4914
  3948                           
  3949                           ; BSR set to: 0
  3950  0134F6  0100               	movlb	0	; () banked
  3951  0134F8  2974               	incf	CANSetMask@type& (0+255),w,b
  3952  0134FA  A4D8               	btfss	status,2,c
  3953  0134FC  D053               	goto	l4914
  3954                           
  3955                           ; BSR set to: 0
  3956                           ;inc\CANlib.h: 655: {
  3957                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  3958  0134FE  C070  F075         	movff	CANSetMask@mask,??_CANSetMask
  3959  013502  C071  F076         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3960  013506  C072  F077         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3961  01350A  C073  F078         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3962  01350E  0E04               	movlw	4
  3963  013510  D006               	goto	u5190
  3964  013512                     u5195:
  3965  013512  0100               	movlb	0	; () banked
  3966  013514  90D8               	bcf	status,0,c
  3967  013516  3378               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3968  013518  3377               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3969  01351A  3376               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3970  01351C  3375               	rrcf	??_CANSetMask& (0+255),f,b
  3971  01351E                     u5190:
  3972  01351E  2EE8               	decfsz	wreg,f,c
  3973  013520  D7F8               	goto	u5195
  3974  013522  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  3975  013526  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3976  01352A  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3977  01352E  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3978                           
  3979                           ; BSR set to: 0
  3980                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  3981  013532  0100               	movlb	0	; () banked
  3982  013534  517A               	movf	CANSetMask@tamp& (0+255),w,b
  3983  013536  0100               	movlb	0	; () banked
  3984  013538  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  3985  01353A  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3986  01353C  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3987  01353E  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3988                           
  3989                           ; BSR set to: 0
  3990                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  3991  013540  C07A  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3992                           
  3993                           ; BSR set to: 0
  3994                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  3995  013544  0E07               	movlw	7
  3996  013546  0100               	movlb	0	; () banked
  3997  013548  1570               	andwf	CANSetMask@mask& (0+255),w,b
  3998  01354A  0100               	movlb	0	; () banked
  3999  01354C  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  4000  01354E  0E00               	movlw	0
  4001  013550  0100               	movlb	0	; () banked
  4002  013552  1571               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4003  013554  0100               	movlb	0	; () banked
  4004  013556  6F7B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4005  013558  0E00               	movlw	0
  4006  01355A  0100               	movlb	0	; () banked
  4007  01355C  1572               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4008  01355E  0100               	movlb	0	; () banked
  4009  013560  6F7C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4010  013562  0E00               	movlw	0
  4011  013564  0100               	movlb	0	; () banked
  4012  013566  1573               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4013  013568  0100               	movlb	0	; () banked
  4014  01356A  6F7D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4015                           
  4016                           ; BSR set to: 0
  4017                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  4018  01356C  C07A  F075         	movff	CANSetMask@tamp,??_CANSetMask
  4019  013570  C07B  F076         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4020  013574  C07C  F077         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4021  013578  C07D  F078         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4022  01357C  0E05               	movlw	5
  4023  01357E                     u5205:
  4024  01357E  90D8               	bcf	status,0,c
  4025  013580  0100               	movlb	0	; () banked
  4026  013582  3775               	rlcf	??_CANSetMask& (0+255),f,b
  4027  013584  3776               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4028  013586  3777               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4029  013588  3778               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4030  01358A  2EE8               	decfsz	wreg,f,c
  4031  01358C  D7F8               	goto	u5205
  4032  01358E  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  4033  013592  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4034  013596  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4035  01359A  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4036                           
  4037                           ; BSR set to: 0
  4038                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  4039  01359E  C07A  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  4040  0135A2  D000               	goto	l4914
  4041  0135A4                     l4914:
  4042                           
  4043                           ; BSR set to: 0
  4044                           ;inc\CANlib.h: 663: }
  4045                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  4046  0135A4  0100               	movlb	0	; () banked
  4047  0135A6  0579               	decf	CANSetMask@numBuffer& (0+255),w,b
  4048  0135A8  A4D8               	btfss	status,2,c
  4049  0135AA  D089               	goto	l4946
  4050                           
  4051                           ; BSR set to: 0
  4052  0135AC  0EF7               	movlw	247
  4053  0135AE  0100               	movlb	0	; () banked
  4054  0135B0  1974               	xorwf	CANSetMask@type& (0+255),w,b
  4055  0135B2  A4D8               	btfss	status,2,c
  4056  0135B4  D084               	goto	l4946
  4057                           
  4058                           ; BSR set to: 0
  4059                           ;inc\CANlib.h: 666: {
  4060                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  4061  0135B6  0100               	movlb	0	; () banked
  4062  0135B8  5170               	movf	CANSetMask@mask& (0+255),w,b
  4063  0135BA  0100               	movlb	0	; () banked
  4064  0135BC  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  4065  0135BE  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4066  0135C0  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4067  0135C2  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4068                           
  4069                           ; BSR set to: 0
  4070                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  4071  0135C4  C07A  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  4072                           
  4073                           ; BSR set to: 0
  4074                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  4075  0135C8  0E00               	movlw	0
  4076  0135CA  0100               	movlb	0	; () banked
  4077  0135CC  1570               	andwf	CANSetMask@mask& (0+255),w,b
  4078  0135CE  0100               	movlb	0	; () banked
  4079  0135D0  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  4080  0135D2  0EFF               	movlw	255
  4081  0135D4  0100               	movlb	0	; () banked
  4082  0135D6  1571               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4083  0135D8  0100               	movlb	0	; () banked
  4084  0135DA  6F7B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4085  0135DC  0E00               	movlw	0
  4086  0135DE  0100               	movlb	0	; () banked
  4087  0135E0  1572               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4088  0135E2  0100               	movlb	0	; () banked
  4089  0135E4  6F7C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4090  0135E6  0E00               	movlw	0
  4091  0135E8  0100               	movlb	0	; () banked
  4092  0135EA  1573               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4093  0135EC  0100               	movlb	0	; () banked
  4094  0135EE  6F7D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4095                           
  4096                           ; BSR set to: 0
  4097                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  4098  0135F0  C07A  F075         	movff	CANSetMask@tamp,??_CANSetMask
  4099  0135F4  C07B  F076         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4100  0135F8  C07C  F077         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4101  0135FC  C07D  F078         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4102  013600  C076  F075         	movff	??_CANSetMask+1,??_CANSetMask
  4103  013604  C077  F076         	movff	??_CANSetMask+2,??_CANSetMask+1
  4104  013608  C078  F077         	movff	??_CANSetMask+3,??_CANSetMask+2
  4105  01360C  0100               	movlb	0	; () banked
  4106  01360E  6B78               	clrf	(??_CANSetMask+3)& (0+255),b
  4107  013610  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  4108  013614  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4109  013618  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4110  01361C  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4111                           
  4112                           ; BSR set to: 0
  4113                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  4114  013620  C07A  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  4118  013624  0100               	movlb	0	; () banked
  4119  013626  A172               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4120  013628  D003               	goto	l454
  4121                           
  4122                           ; BSR set to: 0
  4123                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  4124  01362A  010F               	movlb	15	; () banked
  4125  01362C  8119               	bsf	25,0,b	;volatile
  4126  01362E  D002               	goto	l455
  4127  013630                     l454:
  4128                           
  4129                           ; BSR set to: 0
  4130                           ;inc\CANlib.h: 676: else
  4131                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  4132  013630  010F               	movlb	15	; () banked
  4133  013632  9119               	bcf	25,0,b	;volatile
  4134  013634                     l455:
  4135                           
  4136                           ; BSR set to: 15
  4137                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  4138  013634  0100               	movlb	0	; () banked
  4139  013636  A372               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4140  013638  D003               	goto	l456
  4141                           
  4142                           ; BSR set to: 0
  4143                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  4144  01363A  010F               	movlb	15	; () banked
  4145  01363C  8319               	bsf	25,1,b	;volatile
  4146  01363E  D002               	goto	l457
  4147  013640                     l456:
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;inc\CANlib.h: 681: else
  4151                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  4152  013640  010F               	movlb	15	; () banked
  4153  013642  9319               	bcf	25,1,b	;volatile
  4154  013644                     l457:
  4155                           
  4156                           ; BSR set to: 15
  4157                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  4158  013644  0100               	movlb	0	; () banked
  4159  013646  A572               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4160  013648  D003               	goto	l458
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  4164  01364A  010F               	movlb	15	; () banked
  4165  01364C  8B19               	bsf	25,5,b	;volatile
  4166  01364E  D002               	goto	l459
  4167  013650                     l458:
  4168                           
  4169                           ; BSR set to: 0
  4170                           ;inc\CANlib.h: 686: else
  4171                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  4172  013650  010F               	movlb	15	; () banked
  4173  013652  9B19               	bcf	25,5,b	;volatile
  4174  013654                     l459:
  4175                           
  4176                           ; BSR set to: 15
  4177                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  4178  013654  0100               	movlb	0	; () banked
  4179  013656  A772               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4180  013658  D003               	goto	l460
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  4184  01365A  010F               	movlb	15	; () banked
  4185  01365C  8D19               	bsf	25,6,b	;volatile
  4186  01365E  D002               	goto	l461
  4187  013660                     l460:
  4188                           
  4189                           ; BSR set to: 0
  4190                           ;inc\CANlib.h: 691: else
  4191                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  4192  013660  010F               	movlb	15	; () banked
  4193  013662  9D19               	bcf	25,6,b	;volatile
  4194  013664                     l461:
  4195                           
  4196                           ; BSR set to: 15
  4197                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  4198  013664  0100               	movlb	0	; () banked
  4199  013666  A972               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4200  013668  D003               	goto	l462
  4201                           
  4202                           ; BSR set to: 0
  4203                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  4204  01366A  010F               	movlb	15	; () banked
  4205  01366C  8F19               	bsf	25,7,b	;volatile
  4206  01366E  D003               	goto	l4940
  4207  013670                     l462:
  4208                           
  4209                           ; BSR set to: 0
  4210                           ;inc\CANlib.h: 696: else
  4211                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  4212  013670  010F               	movlb	15	; () banked
  4213  013672  9F19               	bcf	25,7,b	;volatile
  4214  013674  D000               	goto	l4940
  4215  013676                     l4940:
  4216                           
  4217                           ; BSR set to: 15
  4218                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  4219  013676  C070  F075         	movff	CANSetMask@mask,??_CANSetMask
  4220  01367A  C071  F076         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4221  01367E  C072  F077         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4222  013682  C073  F078         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4223  013686  0E16               	movlw	22
  4224  013688  D006               	goto	u5280
  4225  01368A                     u5285:
  4226  01368A  0100               	movlb	0	; () banked
  4227  01368C  90D8               	bcf	status,0,c
  4228  01368E  3378               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4229  013690  3377               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4230  013692  3376               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4231  013694  3375               	rrcf	??_CANSetMask& (0+255),f,b
  4232  013696                     u5280:
  4233  013696  2EE8               	decfsz	wreg,f,c
  4234  013698  D7F8               	goto	u5285
  4235  01369A  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  4236  01369E  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4237  0136A2  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4238  0136A6  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4239                           
  4240                           ; BSR set to: 0
  4241                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  4242  0136AA  0100               	movlb	0	; () banked
  4243  0136AC  517A               	movf	CANSetMask@tamp& (0+255),w,b
  4244  0136AE  0100               	movlb	0	; () banked
  4245  0136B0  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  4246  0136B2  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4247  0136B4  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4248  0136B6  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4249                           
  4250                           ; BSR set to: 0
  4251                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  4252  0136B8  C07A  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4253  0136BC  D000               	goto	l4946
  4254  0136BE                     l4946:
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;inc\CANlib.h: 702: }
  4258                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4259  0136BE  0E02               	movlw	2
  4260  0136C0  0100               	movlb	0	; () banked
  4261  0136C2  1979               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4262  0136C4  A4D8               	btfss	status,2,c
  4263  0136C6  0012               	return	
  4264                           
  4265                           ; BSR set to: 0
  4266  0136C8  0EF7               	movlw	247
  4267  0136CA  0100               	movlb	0	; () banked
  4268  0136CC  1974               	xorwf	CANSetMask@type& (0+255),w,b
  4269  0136CE  A4D8               	btfss	status,2,c
  4270  0136D0  0012               	return	
  4271                           
  4272                           ; BSR set to: 0
  4273                           ;inc\CANlib.h: 705: {
  4274                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  4275  0136D2  0100               	movlb	0	; () banked
  4276  0136D4  5170               	movf	CANSetMask@mask& (0+255),w,b
  4277  0136D6  0100               	movlb	0	; () banked
  4278  0136D8  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  4279  0136DA  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4280  0136DC  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4281  0136DE  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  4285  0136E0  C07A  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4286                           
  4287                           ; BSR set to: 0
  4288                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  4289  0136E4  0E00               	movlw	0
  4290  0136E6  0100               	movlb	0	; () banked
  4291  0136E8  1570               	andwf	CANSetMask@mask& (0+255),w,b
  4292  0136EA  0100               	movlb	0	; () banked
  4293  0136EC  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  4294  0136EE  0EFF               	movlw	255
  4295  0136F0  0100               	movlb	0	; () banked
  4296  0136F2  1571               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4297  0136F4  0100               	movlb	0	; () banked
  4298  0136F6  6F7B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4299  0136F8  0E00               	movlw	0
  4300  0136FA  0100               	movlb	0	; () banked
  4301  0136FC  1572               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4302  0136FE  0100               	movlb	0	; () banked
  4303  013700  6F7C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4304  013702  0E00               	movlw	0
  4305  013704  0100               	movlb	0	; () banked
  4306  013706  1573               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4307  013708  0100               	movlb	0	; () banked
  4308  01370A  6F7D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4309                           
  4310                           ; BSR set to: 0
  4311                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  4312  01370C  C07A  F075         	movff	CANSetMask@tamp,??_CANSetMask
  4313  013710  C07B  F076         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4314  013714  C07C  F077         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4315  013718  C07D  F078         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4316  01371C  C076  F075         	movff	??_CANSetMask+1,??_CANSetMask
  4317  013720  C077  F076         	movff	??_CANSetMask+2,??_CANSetMask+1
  4318  013724  C078  F077         	movff	??_CANSetMask+3,??_CANSetMask+2
  4319  013728  0100               	movlb	0	; () banked
  4320  01372A  6B78               	clrf	(??_CANSetMask+3)& (0+255),b
  4321  01372C  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  4322  013730  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4323  013734  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4324  013738  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4325                           
  4326                           ; BSR set to: 0
  4327                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  4328  01373C  C07A  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4329                           
  4330                           ; BSR set to: 0
  4331                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  4332  013740  0100               	movlb	0	; () banked
  4333  013742  A172               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4334  013744  D003               	goto	l465
  4335                           
  4336                           ; BSR set to: 0
  4337                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  4338  013746  010F               	movlb	15	; () banked
  4339  013748  811D               	bsf	29,0,b	;volatile
  4340  01374A  D002               	goto	l466
  4341  01374C                     l465:
  4342                           
  4343                           ; BSR set to: 0
  4344                           ;inc\CANlib.h: 715: else
  4345                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  4346  01374C  010F               	movlb	15	; () banked
  4347  01374E  911D               	bcf	29,0,b	;volatile
  4348  013750                     l466:
  4349                           
  4350                           ; BSR set to: 15
  4351                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  4352  013750  0100               	movlb	0	; () banked
  4353  013752  A372               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4354  013754  D003               	goto	l467
  4355                           
  4356                           ; BSR set to: 0
  4357                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  4358  013756  010F               	movlb	15	; () banked
  4359  013758  831D               	bsf	29,1,b	;volatile
  4360  01375A  D002               	goto	l468
  4361  01375C                     l467:
  4362                           
  4363                           ; BSR set to: 0
  4364                           ;inc\CANlib.h: 720: else
  4365                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4366  01375C  010F               	movlb	15	; () banked
  4367  01375E  931D               	bcf	29,1,b	;volatile
  4368  013760                     l468:
  4369                           
  4370                           ; BSR set to: 15
  4371                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  4372  013760  0100               	movlb	0	; () banked
  4373  013762  A572               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4374  013764  D003               	goto	l469
  4375                           
  4376                           ; BSR set to: 0
  4377                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4378  013766  010F               	movlb	15	; () banked
  4379  013768  8B1D               	bsf	29,5,b	;volatile
  4380  01376A  D002               	goto	l470
  4381  01376C                     l469:
  4382                           
  4383                           ; BSR set to: 0
  4384                           ;inc\CANlib.h: 725: else
  4385                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4386  01376C  010F               	movlb	15	; () banked
  4387  01376E  9B1D               	bcf	29,5,b	;volatile
  4388  013770                     l470:
  4389                           
  4390                           ; BSR set to: 15
  4391                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  4392  013770  0100               	movlb	0	; () banked
  4393  013772  A772               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4394  013774  D003               	goto	l471
  4395                           
  4396                           ; BSR set to: 0
  4397                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4398  013776  010F               	movlb	15	; () banked
  4399  013778  8D1D               	bsf	29,6,b	;volatile
  4400  01377A  D002               	goto	l472
  4401  01377C                     l471:
  4402                           
  4403                           ; BSR set to: 0
  4404                           ;inc\CANlib.h: 730: else
  4405                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4406  01377C  010F               	movlb	15	; () banked
  4407  01377E  9D1D               	bcf	29,6,b	;volatile
  4408  013780                     l472:
  4409                           
  4410                           ; BSR set to: 15
  4411                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  4412  013780  0100               	movlb	0	; () banked
  4413  013782  A972               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4414  013784  D003               	goto	l473
  4415                           
  4416                           ; BSR set to: 0
  4417                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4418  013786  010F               	movlb	15	; () banked
  4419  013788  8F1D               	bsf	29,7,b	;volatile
  4420  01378A  D003               	goto	l4972
  4421  01378C                     l473:
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;inc\CANlib.h: 735: else
  4425                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4426  01378C  010F               	movlb	15	; () banked
  4427  01378E  9F1D               	bcf	29,7,b	;volatile
  4428  013790  D000               	goto	l4972
  4429  013792                     l4972:
  4430                           
  4431                           ; BSR set to: 15
  4432                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  4433  013792  C070  F075         	movff	CANSetMask@mask,??_CANSetMask
  4434  013796  C071  F076         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4435  01379A  C072  F077         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4436  01379E  C073  F078         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4437  0137A2  0E16               	movlw	22
  4438  0137A4  D006               	goto	u5360
  4439  0137A6                     u5365:
  4440  0137A6  0100               	movlb	0	; () banked
  4441  0137A8  90D8               	bcf	status,0,c
  4442  0137AA  3378               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4443  0137AC  3377               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4444  0137AE  3376               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4445  0137B0  3375               	rrcf	??_CANSetMask& (0+255),f,b
  4446  0137B2                     u5360:
  4447  0137B2  2EE8               	decfsz	wreg,f,c
  4448  0137B4  D7F8               	goto	u5365
  4449  0137B6  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  4450  0137BA  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4451  0137BE  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4452  0137C2  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4453                           
  4454                           ; BSR set to: 0
  4455                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  4456  0137C6  0100               	movlb	0	; () banked
  4457  0137C8  517A               	movf	CANSetMask@tamp& (0+255),w,b
  4458  0137CA  0100               	movlb	0	; () banked
  4459  0137CC  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  4460  0137CE  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4461  0137D0  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4462  0137D2  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4463                           
  4464                           ; BSR set to: 0
  4465                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4466  0137D4  C07A  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4467  0137D8  0012               	return	
  4468                           
  4469                           ; BSR set to: 0
  4470                           
  4471                           ; BSR set to: 0
  4472  0137DA  0012               	return		;funcret
  4473  0137DC                     __end_of_CANSetMask:
  4474                           	opt stack 0
  4475                           tblptru	equ	0xFF8
  4476                           tblptrh	equ	0xFF7
  4477                           tblptrl	equ	0xFF6
  4478                           tablat	equ	0xFF5
  4479                           intcon	equ	0xFF2
  4480                           postinc0	equ	0xFEE
  4481                           wreg	equ	0xFE8
  4482                           status	equ	0xFD8
  4483                           
  4484 ;; *************** function _CANSetFilter *****************
  4485 ;; Defined at:
  4486 ;;		line 748 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  4487 ;; Parameters:    Size  Location     Type
  4488 ;;  numBuffer       1    wreg     enum E16965
  4489 ;;  filter          4   16[BANK0 ] unsigned long 
  4490 ;;  type            1   20[BANK0 ] enum E16928
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;  numBuffer       1   25[BANK0 ] enum E16965
  4493 ;;  tamp            4   26[BANK0 ] unsigned long 
  4494 ;; Return value:  Size  Location     Type
  4495 ;;		None               void
  4496 ;; Registers used:
  4497 ;;		wreg, status,2, status,0
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/0
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4503 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4504 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4505 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4506 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4507 ;;Total ram usage:       14 bytes
  4508 ;; Hardware stack levels used:    1
  4509 ;; Hardware stack levels required when called:    3
  4510 ;; This function calls:
  4511 ;;		Nothing
  4512 ;; This function is called by:
  4513 ;;		_CANInitialize
  4514 ;; This function uses a non-reentrant model
  4515 ;;
  4516                           
  4517                           	psect	text4
  4518  010000                     __ptext4:
  4519                           	opt stack 0
  4520  010000                     _CANSetFilter:
  4521                           	opt stack 25
  4522                           
  4523                           ; BSR set to: 0
  4524                           ;incstack = 0
  4525                           ;CANSetFilter@numBuffer stored from wreg
  4526  010000  0100               	movlb	0	; () banked
  4527  010002  6F79               	movwf	CANSetFilter@numBuffer& (0+255),b
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;inc\CANlib.h: 750: unsigned long tamp;
  4531                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4532  010004  0100               	movlb	0	; () banked
  4533  010006  5179               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4534  010008  0100               	movlb	0	; () banked
  4535  01000A  A4D8               	btfss	status,2,c
  4536  01000C  D059               	goto	l4996
  4537                           
  4538                           ; BSR set to: 0
  4539  01000E  0100               	movlb	0	; () banked
  4540  010010  2974               	incf	CANSetFilter@type& (0+255),w,b
  4541  010012  A4D8               	btfss	status,2,c
  4542  010014  D055               	goto	l4996
  4543                           
  4544                           ; BSR set to: 0
  4545                           ;inc\CANlib.h: 753: {
  4546                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4547  010016  010F               	movlb	15	; () banked
  4548  010018  9701               	bcf	1,3,b	;volatile
  4549                           
  4550                           ; BSR set to: 15
  4551                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  4552  01001A  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  4553  01001E  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4554  010022  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4555  010026  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4556  01002A  0E04               	movlw	4
  4557  01002C  D006               	goto	u5390
  4558  01002E                     u5395:
  4559  01002E  0100               	movlb	0	; () banked
  4560  010030  90D8               	bcf	status,0,c
  4561  010032  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4562  010034  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4563  010036  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4564  010038  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  4565  01003A                     u5390:
  4566  01003A  2EE8               	decfsz	wreg,f,c
  4567  01003C  D7F8               	goto	u5395
  4568  01003E  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4569  010042  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4570  010046  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4571  01004A  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4572                           
  4573                           ; BSR set to: 0
  4574                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4575  01004E  0100               	movlb	0	; () banked
  4576  010050  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  4577  010052  0100               	movlb	0	; () banked
  4578  010054  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4579  010056  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4580  010058  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4581  01005A  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4582                           
  4583                           ; BSR set to: 0
  4584                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4585  01005C  C07A  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4586                           
  4587                           ; BSR set to: 0
  4588                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4589  010060  0E07               	movlw	7
  4590  010062  0100               	movlb	0	; () banked
  4591  010064  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  4592  010066  0100               	movlb	0	; () banked
  4593  010068  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4594  01006A  0E00               	movlw	0
  4595  01006C  0100               	movlb	0	; () banked
  4596  01006E  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4597  010070  0100               	movlb	0	; () banked
  4598  010072  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4599  010074  0E00               	movlw	0
  4600  010076  0100               	movlb	0	; () banked
  4601  010078  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4602  01007A  0100               	movlb	0	; () banked
  4603  01007C  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4604  01007E  0E00               	movlw	0
  4605  010080  0100               	movlb	0	; () banked
  4606  010082  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4607  010084  0100               	movlb	0	; () banked
  4608  010086  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4609                           
  4610                           ; BSR set to: 0
  4611                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4612  010088  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  4613  01008C  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4614  010090  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4615  010094  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4616  010098  0E05               	movlw	5
  4617  01009A                     u5405:
  4618  01009A  90D8               	bcf	status,0,c
  4619  01009C  0100               	movlb	0	; () banked
  4620  01009E  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  4621  0100A0  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4622  0100A2  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4623  0100A4  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4624  0100A6  2EE8               	decfsz	wreg,f,c
  4625  0100A8  D7F8               	goto	u5405
  4626  0100AA  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4627  0100AE  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4628  0100B2  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4629  0100B6  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4630                           
  4631                           ; BSR set to: 0
  4632                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4633  0100BA  C07A  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4634  0100BE  D000               	goto	l4996
  4635  0100C0                     l4996:
  4636                           
  4637                           ; BSR set to: 0
  4638                           ;inc\CANlib.h: 763: }
  4639                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4640  0100C0  0100               	movlb	0	; () banked
  4641  0100C2  0579               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4642  0100C4  A4D8               	btfss	status,2,c
  4643  0100C6  D059               	goto	l5014
  4644                           
  4645                           ; BSR set to: 0
  4646  0100C8  0100               	movlb	0	; () banked
  4647  0100CA  2974               	incf	CANSetFilter@type& (0+255),w,b
  4648  0100CC  A4D8               	btfss	status,2,c
  4649  0100CE  D055               	goto	l5014
  4650                           
  4651                           ; BSR set to: 0
  4652                           ;inc\CANlib.h: 766: {
  4653                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4654  0100D0  010F               	movlb	15	; () banked
  4655  0100D2  9705               	bcf	5,3,b	;volatile
  4656                           
  4657                           ; BSR set to: 15
  4658                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4659  0100D4  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  4660  0100D8  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4661  0100DC  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4662  0100E0  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4663  0100E4  0E04               	movlw	4
  4664  0100E6  D006               	goto	u5430
  4665  0100E8                     u5435:
  4666  0100E8  0100               	movlb	0	; () banked
  4667  0100EA  90D8               	bcf	status,0,c
  4668  0100EC  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4669  0100EE  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4670  0100F0  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4671  0100F2  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  4672  0100F4                     u5430:
  4673  0100F4  2EE8               	decfsz	wreg,f,c
  4674  0100F6  D7F8               	goto	u5435
  4675  0100F8  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4676  0100FC  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4677  010100  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4678  010104  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4679                           
  4680                           ; BSR set to: 0
  4681                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4682  010108  0100               	movlb	0	; () banked
  4683  01010A  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  4684  01010C  0100               	movlb	0	; () banked
  4685  01010E  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4686  010110  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4687  010112  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4688  010114  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4689                           
  4690                           ; BSR set to: 0
  4691                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4692  010116  C07A  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4693                           
  4694                           ; BSR set to: 0
  4695                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4696  01011A  0E07               	movlw	7
  4697  01011C  0100               	movlb	0	; () banked
  4698  01011E  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  4699  010120  0100               	movlb	0	; () banked
  4700  010122  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4701  010124  0E00               	movlw	0
  4702  010126  0100               	movlb	0	; () banked
  4703  010128  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4704  01012A  0100               	movlb	0	; () banked
  4705  01012C  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4706  01012E  0E00               	movlw	0
  4707  010130  0100               	movlb	0	; () banked
  4708  010132  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4709  010134  0100               	movlb	0	; () banked
  4710  010136  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4711  010138  0E00               	movlw	0
  4712  01013A  0100               	movlb	0	; () banked
  4713  01013C  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4714  01013E  0100               	movlb	0	; () banked
  4715  010140  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4719  010142  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  4720  010146  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4721  01014A  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4722  01014E  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4723  010152  0E05               	movlw	5
  4724  010154                     u5445:
  4725  010154  90D8               	bcf	status,0,c
  4726  010156  0100               	movlb	0	; () banked
  4727  010158  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  4728  01015A  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4729  01015C  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4730  01015E  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4731  010160  2EE8               	decfsz	wreg,f,c
  4732  010162  D7F8               	goto	u5445
  4733  010164  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4734  010168  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4735  01016C  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4736  010170  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4737                           
  4738                           ; BSR set to: 0
  4739                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4740  010174  C07A  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4741  010178  D000               	goto	l5014
  4742  01017A                     l5014:
  4743                           
  4744                           ; BSR set to: 0
  4745                           ;inc\CANlib.h: 776: }
  4746                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4747  01017A  0E02               	movlw	2
  4748  01017C  0100               	movlb	0	; () banked
  4749  01017E  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4750  010180  A4D8               	btfss	status,2,c
  4751  010182  D059               	goto	l5032
  4752                           
  4753                           ; BSR set to: 0
  4754  010184  0100               	movlb	0	; () banked
  4755  010186  2974               	incf	CANSetFilter@type& (0+255),w,b
  4756  010188  A4D8               	btfss	status,2,c
  4757  01018A  D055               	goto	l5032
  4758                           
  4759                           ; BSR set to: 0
  4760                           ;inc\CANlib.h: 779: {
  4761                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4762  01018C  010F               	movlb	15	; () banked
  4763  01018E  9709               	bcf	9,3,b	;volatile
  4764                           
  4765                           ; BSR set to: 15
  4766                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4767  010190  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  4768  010194  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4769  010198  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4770  01019C  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4771  0101A0  0E04               	movlw	4
  4772  0101A2  D006               	goto	u5470
  4773  0101A4                     u5475:
  4774  0101A4  0100               	movlb	0	; () banked
  4775  0101A6  90D8               	bcf	status,0,c
  4776  0101A8  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4777  0101AA  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4778  0101AC  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4779  0101AE  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  4780  0101B0                     u5470:
  4781  0101B0  2EE8               	decfsz	wreg,f,c
  4782  0101B2  D7F8               	goto	u5475
  4783  0101B4  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4784  0101B8  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4785  0101BC  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4786  0101C0  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4787                           
  4788                           ; BSR set to: 0
  4789                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4790  0101C4  0100               	movlb	0	; () banked
  4791  0101C6  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  4792  0101C8  0100               	movlb	0	; () banked
  4793  0101CA  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4794  0101CC  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4795  0101CE  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4796  0101D0  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4797                           
  4798                           ; BSR set to: 0
  4799                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4800  0101D2  C07A  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4801                           
  4802                           ; BSR set to: 0
  4803                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4804  0101D6  0E07               	movlw	7
  4805  0101D8  0100               	movlb	0	; () banked
  4806  0101DA  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  4807  0101DC  0100               	movlb	0	; () banked
  4808  0101DE  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4809  0101E0  0E00               	movlw	0
  4810  0101E2  0100               	movlb	0	; () banked
  4811  0101E4  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4812  0101E6  0100               	movlb	0	; () banked
  4813  0101E8  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4814  0101EA  0E00               	movlw	0
  4815  0101EC  0100               	movlb	0	; () banked
  4816  0101EE  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4817  0101F0  0100               	movlb	0	; () banked
  4818  0101F2  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4819  0101F4  0E00               	movlw	0
  4820  0101F6  0100               	movlb	0	; () banked
  4821  0101F8  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4822  0101FA  0100               	movlb	0	; () banked
  4823  0101FC  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4824                           
  4825                           ; BSR set to: 0
  4826                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4827  0101FE  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  4828  010202  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4829  010206  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4830  01020A  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4831  01020E  0E05               	movlw	5
  4832  010210                     u5485:
  4833  010210  90D8               	bcf	status,0,c
  4834  010212  0100               	movlb	0	; () banked
  4835  010214  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  4836  010216  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4837  010218  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4838  01021A  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4839  01021C  2EE8               	decfsz	wreg,f,c
  4840  01021E  D7F8               	goto	u5485
  4841  010220  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4842  010224  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4843  010228  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4844  01022C  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4845                           
  4846                           ; BSR set to: 0
  4847                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4848  010230  C07A  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4849  010234  D000               	goto	l5032
  4850  010236                     l5032:
  4851                           
  4852                           ; BSR set to: 0
  4853                           ;inc\CANlib.h: 789: }
  4854                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4855  010236  0E03               	movlw	3
  4856  010238  0100               	movlb	0	; () banked
  4857  01023A  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4858  01023C  A4D8               	btfss	status,2,c
  4859  01023E  D059               	goto	l5050
  4860                           
  4861                           ; BSR set to: 0
  4862  010240  0100               	movlb	0	; () banked
  4863  010242  2974               	incf	CANSetFilter@type& (0+255),w,b
  4864  010244  A4D8               	btfss	status,2,c
  4865  010246  D055               	goto	l5050
  4866                           
  4867                           ; BSR set to: 0
  4868                           ;inc\CANlib.h: 792: {
  4869                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4870  010248  010F               	movlb	15	; () banked
  4871  01024A  970D               	bcf	13,3,b	;volatile
  4872                           
  4873                           ; BSR set to: 15
  4874                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4875  01024C  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  4876  010250  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4877  010254  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4878  010258  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4879  01025C  0E04               	movlw	4
  4880  01025E  D006               	goto	u5510
  4881  010260                     u5515:
  4882  010260  0100               	movlb	0	; () banked
  4883  010262  90D8               	bcf	status,0,c
  4884  010264  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4885  010266  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4886  010268  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4887  01026A  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  4888  01026C                     u5510:
  4889  01026C  2EE8               	decfsz	wreg,f,c
  4890  01026E  D7F8               	goto	u5515
  4891  010270  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4892  010274  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4893  010278  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4894  01027C  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4895                           
  4896                           ; BSR set to: 0
  4897                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4898  010280  0100               	movlb	0	; () banked
  4899  010282  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  4900  010284  0100               	movlb	0	; () banked
  4901  010286  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4902  010288  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4903  01028A  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4904  01028C  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4905                           
  4906                           ; BSR set to: 0
  4907                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4908  01028E  C07A  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4912  010292  0E07               	movlw	7
  4913  010294  0100               	movlb	0	; () banked
  4914  010296  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  4915  010298  0100               	movlb	0	; () banked
  4916  01029A  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4917  01029C  0E00               	movlw	0
  4918  01029E  0100               	movlb	0	; () banked
  4919  0102A0  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4920  0102A2  0100               	movlb	0	; () banked
  4921  0102A4  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4922  0102A6  0E00               	movlw	0
  4923  0102A8  0100               	movlb	0	; () banked
  4924  0102AA  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4925  0102AC  0100               	movlb	0	; () banked
  4926  0102AE  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4927  0102B0  0E00               	movlw	0
  4928  0102B2  0100               	movlb	0	; () banked
  4929  0102B4  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4930  0102B6  0100               	movlb	0	; () banked
  4931  0102B8  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4932                           
  4933                           ; BSR set to: 0
  4934                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  4935  0102BA  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  4936  0102BE  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4937  0102C2  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4938  0102C6  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4939  0102CA  0E05               	movlw	5
  4940  0102CC                     u5525:
  4941  0102CC  90D8               	bcf	status,0,c
  4942  0102CE  0100               	movlb	0	; () banked
  4943  0102D0  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  4944  0102D2  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4945  0102D4  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4946  0102D6  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4947  0102D8  2EE8               	decfsz	wreg,f,c
  4948  0102DA  D7F8               	goto	u5525
  4949  0102DC  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4950  0102E0  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4951  0102E4  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4952  0102E8  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  4956  0102EC  C07A  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4957  0102F0  D000               	goto	l5050
  4958  0102F2                     l5050:
  4959                           
  4960                           ; BSR set to: 0
  4961                           ;inc\CANlib.h: 802: }
  4962                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4963  0102F2  0E04               	movlw	4
  4964  0102F4  0100               	movlb	0	; () banked
  4965  0102F6  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4966  0102F8  A4D8               	btfss	status,2,c
  4967  0102FA  D059               	goto	l5068
  4968                           
  4969                           ; BSR set to: 0
  4970  0102FC  0100               	movlb	0	; () banked
  4971  0102FE  2974               	incf	CANSetFilter@type& (0+255),w,b
  4972  010300  A4D8               	btfss	status,2,c
  4973  010302  D055               	goto	l5068
  4974                           
  4975                           ; BSR set to: 0
  4976                           ;inc\CANlib.h: 805: {
  4977                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  4978  010304  010F               	movlb	15	; () banked
  4979  010306  9711               	bcf	17,3,b	;volatile
  4980                           
  4981                           ; BSR set to: 15
  4982                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  4983  010308  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  4984  01030C  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4985  010310  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4986  010314  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4987  010318  0E04               	movlw	4
  4988  01031A  D006               	goto	u5550
  4989  01031C                     u5555:
  4990  01031C  0100               	movlb	0	; () banked
  4991  01031E  90D8               	bcf	status,0,c
  4992  010320  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4993  010322  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4994  010324  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4995  010326  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  4996  010328                     u5550:
  4997  010328  2EE8               	decfsz	wreg,f,c
  4998  01032A  D7F8               	goto	u5555
  4999  01032C  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5000  010330  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5001  010334  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5002  010338  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5003                           
  5004                           ; BSR set to: 0
  5005                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  5006  01033C  0100               	movlb	0	; () banked
  5007  01033E  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  5008  010340  0100               	movlb	0	; () banked
  5009  010342  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5010  010344  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5011  010346  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5012  010348  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5013                           
  5014                           ; BSR set to: 0
  5015                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  5016  01034A  C07A  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5017                           
  5018                           ; BSR set to: 0
  5019                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  5020  01034E  0E07               	movlw	7
  5021  010350  0100               	movlb	0	; () banked
  5022  010352  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  5023  010354  0100               	movlb	0	; () banked
  5024  010356  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5025  010358  0E00               	movlw	0
  5026  01035A  0100               	movlb	0	; () banked
  5027  01035C  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5028  01035E  0100               	movlb	0	; () banked
  5029  010360  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5030  010362  0E00               	movlw	0
  5031  010364  0100               	movlb	0	; () banked
  5032  010366  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5033  010368  0100               	movlb	0	; () banked
  5034  01036A  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5035  01036C  0E00               	movlw	0
  5036  01036E  0100               	movlb	0	; () banked
  5037  010370  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5038  010372  0100               	movlb	0	; () banked
  5039  010374  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5040                           
  5041                           ; BSR set to: 0
  5042                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  5043  010376  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  5044  01037A  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5045  01037E  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5046  010382  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5047  010386  0E05               	movlw	5
  5048  010388                     u5565:
  5049  010388  90D8               	bcf	status,0,c
  5050  01038A  0100               	movlb	0	; () banked
  5051  01038C  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  5052  01038E  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5053  010390  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5054  010392  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5055  010394  2EE8               	decfsz	wreg,f,c
  5056  010396  D7F8               	goto	u5565
  5057  010398  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5058  01039C  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5059  0103A0  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5060  0103A4  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5061                           
  5062                           ; BSR set to: 0
  5063                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  5064  0103A8  C07A  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  5065  0103AC  D000               	goto	l5068
  5066  0103AE                     l5068:
  5067                           
  5068                           ; BSR set to: 0
  5069                           ;inc\CANlib.h: 815: }
  5070                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  5071  0103AE  0E05               	movlw	5
  5072  0103B0  0100               	movlb	0	; () banked
  5073  0103B2  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5074  0103B4  A4D8               	btfss	status,2,c
  5075  0103B6  D059               	goto	l5086
  5076                           
  5077                           ; BSR set to: 0
  5078  0103B8  0100               	movlb	0	; () banked
  5079  0103BA  2974               	incf	CANSetFilter@type& (0+255),w,b
  5080  0103BC  A4D8               	btfss	status,2,c
  5081  0103BE  D055               	goto	l5086
  5082                           
  5083                           ; BSR set to: 0
  5084                           ;inc\CANlib.h: 818: {
  5085                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  5086  0103C0  010F               	movlb	15	; () banked
  5087  0103C2  9715               	bcf	21,3,b	;volatile
  5088                           
  5089                           ; BSR set to: 15
  5090                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  5091  0103C4  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  5092  0103C8  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5093  0103CC  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5094  0103D0  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5095  0103D4  0E04               	movlw	4
  5096  0103D6  D006               	goto	u5590
  5097  0103D8                     u5595:
  5098  0103D8  0100               	movlb	0	; () banked
  5099  0103DA  90D8               	bcf	status,0,c
  5100  0103DC  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5101  0103DE  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5102  0103E0  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5103  0103E2  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  5104  0103E4                     u5590:
  5105  0103E4  2EE8               	decfsz	wreg,f,c
  5106  0103E6  D7F8               	goto	u5595
  5107  0103E8  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5108  0103EC  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5109  0103F0  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5110  0103F4  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5111                           
  5112                           ; BSR set to: 0
  5113                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  5114  0103F8  0100               	movlb	0	; () banked
  5115  0103FA  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  5116  0103FC  0100               	movlb	0	; () banked
  5117  0103FE  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5118  010400  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5119  010402  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5120  010404  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5121                           
  5122                           ; BSR set to: 0
  5123                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  5124  010406  C07A  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5125                           
  5126                           ; BSR set to: 0
  5127                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  5128  01040A  0E07               	movlw	7
  5129  01040C  0100               	movlb	0	; () banked
  5130  01040E  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  5131  010410  0100               	movlb	0	; () banked
  5132  010412  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5133  010414  0E00               	movlw	0
  5134  010416  0100               	movlb	0	; () banked
  5135  010418  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5136  01041A  0100               	movlb	0	; () banked
  5137  01041C  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5138  01041E  0E00               	movlw	0
  5139  010420  0100               	movlb	0	; () banked
  5140  010422  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5141  010424  0100               	movlb	0	; () banked
  5142  010426  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5143  010428  0E00               	movlw	0
  5144  01042A  0100               	movlb	0	; () banked
  5145  01042C  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5146  01042E  0100               	movlb	0	; () banked
  5147  010430  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5148                           
  5149                           ; BSR set to: 0
  5150                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  5151  010432  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  5152  010436  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5153  01043A  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5154  01043E  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5155  010442  0E05               	movlw	5
  5156  010444                     u5605:
  5157  010444  90D8               	bcf	status,0,c
  5158  010446  0100               	movlb	0	; () banked
  5159  010448  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  5160  01044A  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5161  01044C  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5162  01044E  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5163  010450  2EE8               	decfsz	wreg,f,c
  5164  010452  D7F8               	goto	u5605
  5165  010454  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5166  010458  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5167  01045C  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5168  010460  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5169                           
  5170                           ; BSR set to: 0
  5171                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  5172  010464  C07A  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  5173  010468  D000               	goto	l5086
  5174  01046A                     l5086:
  5175                           
  5176                           ; BSR set to: 0
  5177                           ;inc\CANlib.h: 828: }
  5178                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  5179  01046A  0100               	movlb	0	; () banked
  5180  01046C  5179               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5181  01046E  0100               	movlb	0	; () banked
  5182  010470  A4D8               	btfss	status,2,c
  5183  010472  D08B               	goto	l5120
  5184                           
  5185                           ; BSR set to: 0
  5186  010474  0EF7               	movlw	247
  5187  010476  0100               	movlb	0	; () banked
  5188  010478  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  5189  01047A  A4D8               	btfss	status,2,c
  5190  01047C  D086               	goto	l5120
  5191                           
  5192                           ; BSR set to: 0
  5193                           ;inc\CANlib.h: 832: {
  5194                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  5195  01047E  010F               	movlb	15	; () banked
  5196  010480  8701               	bsf	1,3,b	;volatile
  5197                           
  5198                           ; BSR set to: 15
  5199                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  5200  010482  0100               	movlb	0	; () banked
  5201  010484  5170               	movf	CANSetFilter@filter& (0+255),w,b
  5202  010486  0100               	movlb	0	; () banked
  5203  010488  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5204  01048A  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5205  01048C  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5206  01048E  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5207                           
  5208                           ; BSR set to: 0
  5209                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  5210  010490  C07A  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  5211                           
  5212                           ; BSR set to: 0
  5213                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  5214  010494  0E00               	movlw	0
  5215  010496  0100               	movlb	0	; () banked
  5216  010498  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  5217  01049A  0100               	movlb	0	; () banked
  5218  01049C  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5219  01049E  0EFF               	movlw	255
  5220  0104A0  0100               	movlb	0	; () banked
  5221  0104A2  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5222  0104A4  0100               	movlb	0	; () banked
  5223  0104A6  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5224  0104A8  0E00               	movlw	0
  5225  0104AA  0100               	movlb	0	; () banked
  5226  0104AC  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5227  0104AE  0100               	movlb	0	; () banked
  5228  0104B0  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5229  0104B2  0E00               	movlw	0
  5230  0104B4  0100               	movlb	0	; () banked
  5231  0104B6  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5232  0104B8  0100               	movlb	0	; () banked
  5233  0104BA  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5234                           
  5235                           ; BSR set to: 0
  5236                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  5237  0104BC  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  5238  0104C0  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5239  0104C4  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5240  0104C8  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5241  0104CC  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  5242  0104D0  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5243  0104D4  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5244  0104D8  0100               	movlb	0	; () banked
  5245  0104DA  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  5246  0104DC  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5247  0104E0  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5248  0104E4  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5249  0104E8  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5250                           
  5251                           ; BSR set to: 0
  5252                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  5253  0104EC  C07A  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5254                           
  5255                           ; BSR set to: 0
  5256                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  5257  0104F0  0100               	movlb	0	; () banked
  5258  0104F2  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5259  0104F4  D003               	goto	l485
  5260                           
  5261                           ; BSR set to: 0
  5262                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  5263  0104F6  010F               	movlb	15	; () banked
  5264  0104F8  8101               	bsf	1,0,b	;volatile
  5265  0104FA  D002               	goto	l486
  5266  0104FC                     l485:
  5267                           
  5268                           ; BSR set to: 0
  5269                           ;inc\CANlib.h: 844: else
  5270                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  5271  0104FC  010F               	movlb	15	; () banked
  5272  0104FE  9101               	bcf	1,0,b	;volatile
  5273  010500                     l486:
  5274                           
  5275                           ; BSR set to: 15
  5276                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  5277  010500  0100               	movlb	0	; () banked
  5278  010502  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5279  010504  D003               	goto	l487
  5280                           
  5281                           ; BSR set to: 0
  5282                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  5283  010506  010F               	movlb	15	; () banked
  5284  010508  8301               	bsf	1,1,b	;volatile
  5285  01050A  D002               	goto	l488
  5286  01050C                     l487:
  5287                           
  5288                           ; BSR set to: 0
  5289                           ;inc\CANlib.h: 849: else
  5290                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  5291  01050C  010F               	movlb	15	; () banked
  5292  01050E  9301               	bcf	1,1,b	;volatile
  5293  010510                     l488:
  5294                           
  5295                           ; BSR set to: 15
  5296                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  5297  010510  0100               	movlb	0	; () banked
  5298  010512  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5299  010514  D003               	goto	l489
  5300                           
  5301                           ; BSR set to: 0
  5302                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  5303  010516  010F               	movlb	15	; () banked
  5304  010518  8B01               	bsf	1,5,b	;volatile
  5305  01051A  D002               	goto	l490
  5306  01051C                     l489:
  5307                           
  5308                           ; BSR set to: 0
  5309                           ;inc\CANlib.h: 854: else
  5310                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  5311  01051C  010F               	movlb	15	; () banked
  5312  01051E  9B01               	bcf	1,5,b	;volatile
  5313  010520                     l490:
  5314                           
  5315                           ; BSR set to: 15
  5316                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  5317  010520  0100               	movlb	0	; () banked
  5318  010522  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5319  010524  D003               	goto	l491
  5320                           
  5321                           ; BSR set to: 0
  5322                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  5323  010526  010F               	movlb	15	; () banked
  5324  010528  8D01               	bsf	1,6,b	;volatile
  5325  01052A  D002               	goto	l492
  5326  01052C                     l491:
  5327                           
  5328                           ; BSR set to: 0
  5329                           ;inc\CANlib.h: 859: else
  5330                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  5331  01052C  010F               	movlb	15	; () banked
  5332  01052E  9D01               	bcf	1,6,b	;volatile
  5333  010530                     l492:
  5334                           
  5335                           ; BSR set to: 15
  5336                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  5337  010530  0100               	movlb	0	; () banked
  5338  010532  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5339  010534  D003               	goto	l493
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  5343  010536  010F               	movlb	15	; () banked
  5344  010538  8F01               	bsf	1,7,b	;volatile
  5345  01053A  D003               	goto	l5114
  5346  01053C                     l493:
  5347                           
  5348                           ; BSR set to: 0
  5349                           ;inc\CANlib.h: 864: else
  5350                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  5351  01053C  010F               	movlb	15	; () banked
  5352  01053E  9F01               	bcf	1,7,b	;volatile
  5353  010540  D000               	goto	l5114
  5354  010542                     l5114:
  5355                           
  5356                           ; BSR set to: 15
  5357                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  5358  010542  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  5359  010546  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5360  01054A  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5361  01054E  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5362  010552  0E16               	movlw	22
  5363  010554  D006               	goto	u5680
  5364  010556                     u5685:
  5365  010556  0100               	movlb	0	; () banked
  5366  010558  90D8               	bcf	status,0,c
  5367  01055A  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5368  01055C  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5369  01055E  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5370  010560  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  5371  010562                     u5680:
  5372  010562  2EE8               	decfsz	wreg,f,c
  5373  010564  D7F8               	goto	u5685
  5374  010566  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5375  01056A  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5376  01056E  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5377  010572  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5378                           
  5379                           ; BSR set to: 0
  5380                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  5381  010576  0100               	movlb	0	; () banked
  5382  010578  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  5383  01057A  0100               	movlb	0	; () banked
  5384  01057C  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5385  01057E  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5386  010580  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5387  010582  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5388                           
  5389                           ; BSR set to: 0
  5390                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5391  010584  C07A  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5392  010588  D000               	goto	l5120
  5393  01058A                     l5120:
  5394                           
  5395                           ; BSR set to: 0
  5396                           ;inc\CANlib.h: 870: }
  5397                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5398  01058A  0100               	movlb	0	; () banked
  5399  01058C  0579               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5400  01058E  A4D8               	btfss	status,2,c
  5401  010590  D08B               	goto	l5154
  5402                           
  5403                           ; BSR set to: 0
  5404  010592  0EF7               	movlw	247
  5405  010594  0100               	movlb	0	; () banked
  5406  010596  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  5407  010598  A4D8               	btfss	status,2,c
  5408  01059A  D086               	goto	l5154
  5409                           
  5410                           ; BSR set to: 0
  5411                           ;inc\CANlib.h: 873: {
  5412                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5413  01059C  010F               	movlb	15	; () banked
  5414  01059E  8705               	bsf	5,3,b	;volatile
  5415                           
  5416                           ; BSR set to: 15
  5417                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  5418  0105A0  0100               	movlb	0	; () banked
  5419  0105A2  5170               	movf	CANSetFilter@filter& (0+255),w,b
  5420  0105A4  0100               	movlb	0	; () banked
  5421  0105A6  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5422  0105A8  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5423  0105AA  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5424  0105AC  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5425                           
  5426                           ; BSR set to: 0
  5427                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5428  0105AE  C07A  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5429                           
  5430                           ; BSR set to: 0
  5431                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  5432  0105B2  0E00               	movlw	0
  5433  0105B4  0100               	movlb	0	; () banked
  5434  0105B6  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  5435  0105B8  0100               	movlb	0	; () banked
  5436  0105BA  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5437  0105BC  0EFF               	movlw	255
  5438  0105BE  0100               	movlb	0	; () banked
  5439  0105C0  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5440  0105C2  0100               	movlb	0	; () banked
  5441  0105C4  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5442  0105C6  0E00               	movlw	0
  5443  0105C8  0100               	movlb	0	; () banked
  5444  0105CA  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5445  0105CC  0100               	movlb	0	; () banked
  5446  0105CE  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5447  0105D0  0E00               	movlw	0
  5448  0105D2  0100               	movlb	0	; () banked
  5449  0105D4  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5450  0105D6  0100               	movlb	0	; () banked
  5451  0105D8  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5452                           
  5453                           ; BSR set to: 0
  5454                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  5455  0105DA  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  5456  0105DE  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5457  0105E2  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5458  0105E6  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5459  0105EA  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  5460  0105EE  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5461  0105F2  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5462  0105F6  0100               	movlb	0	; () banked
  5463  0105F8  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  5464  0105FA  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5465  0105FE  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5466  010602  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5467  010606  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5468                           
  5469                           ; BSR set to: 0
  5470                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5471  01060A  C07A  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5472                           
  5473                           ; BSR set to: 0
  5474                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  5475  01060E  0100               	movlb	0	; () banked
  5476  010610  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5477  010612  D003               	goto	l496
  5478                           
  5479                           ; BSR set to: 0
  5480                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5481  010614  010F               	movlb	15	; () banked
  5482  010616  8105               	bsf	5,0,b	;volatile
  5483  010618  D002               	goto	l497
  5484  01061A                     l496:
  5485                           
  5486                           ; BSR set to: 0
  5487                           ;inc\CANlib.h: 885: else
  5488                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5489  01061A  010F               	movlb	15	; () banked
  5490  01061C  9105               	bcf	5,0,b	;volatile
  5491  01061E                     l497:
  5492                           
  5493                           ; BSR set to: 15
  5494                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  5495  01061E  0100               	movlb	0	; () banked
  5496  010620  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5497  010622  D003               	goto	l498
  5498                           
  5499                           ; BSR set to: 0
  5500                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5501  010624  010F               	movlb	15	; () banked
  5502  010626  8305               	bsf	5,1,b	;volatile
  5503  010628  D002               	goto	l499
  5504  01062A                     l498:
  5505                           
  5506                           ; BSR set to: 0
  5507                           ;inc\CANlib.h: 890: else
  5508                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5509  01062A  010F               	movlb	15	; () banked
  5510  01062C  9305               	bcf	5,1,b	;volatile
  5511  01062E                     l499:
  5512                           
  5513                           ; BSR set to: 15
  5514                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  5515  01062E  0100               	movlb	0	; () banked
  5516  010630  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5517  010632  D003               	goto	l500
  5518                           
  5519                           ; BSR set to: 0
  5520                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5521  010634  010F               	movlb	15	; () banked
  5522  010636  8B05               	bsf	5,5,b	;volatile
  5523  010638  D002               	goto	l501
  5524  01063A                     l500:
  5525                           
  5526                           ; BSR set to: 0
  5527                           ;inc\CANlib.h: 895: else
  5528                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5529  01063A  010F               	movlb	15	; () banked
  5530  01063C  9B05               	bcf	5,5,b	;volatile
  5531  01063E                     l501:
  5532                           
  5533                           ; BSR set to: 15
  5534                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  5535  01063E  0100               	movlb	0	; () banked
  5536  010640  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5537  010642  D003               	goto	l502
  5538                           
  5539                           ; BSR set to: 0
  5540                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5541  010644  010F               	movlb	15	; () banked
  5542  010646  8D05               	bsf	5,6,b	;volatile
  5543  010648  D002               	goto	l503
  5544  01064A                     l502:
  5545                           
  5546                           ; BSR set to: 0
  5547                           ;inc\CANlib.h: 900: else
  5548                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5549  01064A  010F               	movlb	15	; () banked
  5550  01064C  9D05               	bcf	5,6,b	;volatile
  5551  01064E                     l503:
  5552                           
  5553                           ; BSR set to: 15
  5554                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  5555  01064E  0100               	movlb	0	; () banked
  5556  010650  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5557  010652  D003               	goto	l504
  5558                           
  5559                           ; BSR set to: 0
  5560                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5561  010654  010F               	movlb	15	; () banked
  5562  010656  8F05               	bsf	5,7,b	;volatile
  5563  010658  D003               	goto	l5148
  5564  01065A                     l504:
  5565                           
  5566                           ; BSR set to: 0
  5567                           ;inc\CANlib.h: 905: else
  5568                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5569  01065A  010F               	movlb	15	; () banked
  5570  01065C  9F05               	bcf	5,7,b	;volatile
  5571  01065E  D000               	goto	l5148
  5572  010660                     l5148:
  5573                           
  5574                           ; BSR set to: 15
  5575                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5576  010660  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  5577  010664  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5578  010668  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5579  01066C  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5580  010670  0E16               	movlw	22
  5581  010672  D006               	goto	u5760
  5582  010674                     u5765:
  5583  010674  0100               	movlb	0	; () banked
  5584  010676  90D8               	bcf	status,0,c
  5585  010678  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5586  01067A  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5587  01067C  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5588  01067E  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  5589  010680                     u5760:
  5590  010680  2EE8               	decfsz	wreg,f,c
  5591  010682  D7F8               	goto	u5765
  5592  010684  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5593  010688  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5594  01068C  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5595  010690  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5596                           
  5597                           ; BSR set to: 0
  5598                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5599  010694  0100               	movlb	0	; () banked
  5600  010696  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  5601  010698  0100               	movlb	0	; () banked
  5602  01069A  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5603  01069C  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5604  01069E  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5605  0106A0  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5606                           
  5607                           ; BSR set to: 0
  5608                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5609  0106A2  C07A  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5610  0106A6  D000               	goto	l5154
  5611  0106A8                     l5154:
  5612                           
  5613                           ; BSR set to: 0
  5614                           ;inc\CANlib.h: 911: }
  5615                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5616  0106A8  0E02               	movlw	2
  5617  0106AA  0100               	movlb	0	; () banked
  5618  0106AC  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5619  0106AE  A4D8               	btfss	status,2,c
  5620  0106B0  D08B               	goto	l5188
  5621                           
  5622                           ; BSR set to: 0
  5623  0106B2  0EF7               	movlw	247
  5624  0106B4  0100               	movlb	0	; () banked
  5625  0106B6  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  5626  0106B8  A4D8               	btfss	status,2,c
  5627  0106BA  D086               	goto	l5188
  5628                           
  5629                           ; BSR set to: 0
  5630                           ;inc\CANlib.h: 915: {
  5631                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5632  0106BC  010F               	movlb	15	; () banked
  5633  0106BE  8709               	bsf	9,3,b	;volatile
  5634                           
  5635                           ; BSR set to: 15
  5636                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5637  0106C0  0100               	movlb	0	; () banked
  5638  0106C2  5170               	movf	CANSetFilter@filter& (0+255),w,b
  5639  0106C4  0100               	movlb	0	; () banked
  5640  0106C6  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5641  0106C8  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5642  0106CA  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5643  0106CC  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5644                           
  5645                           ; BSR set to: 0
  5646                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5647  0106CE  C07A  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5648                           
  5649                           ; BSR set to: 0
  5650                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5651  0106D2  0E00               	movlw	0
  5652  0106D4  0100               	movlb	0	; () banked
  5653  0106D6  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  5654  0106D8  0100               	movlb	0	; () banked
  5655  0106DA  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5656  0106DC  0EFF               	movlw	255
  5657  0106DE  0100               	movlb	0	; () banked
  5658  0106E0  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5659  0106E2  0100               	movlb	0	; () banked
  5660  0106E4  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5661  0106E6  0E00               	movlw	0
  5662  0106E8  0100               	movlb	0	; () banked
  5663  0106EA  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5664  0106EC  0100               	movlb	0	; () banked
  5665  0106EE  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5666  0106F0  0E00               	movlw	0
  5667  0106F2  0100               	movlb	0	; () banked
  5668  0106F4  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5669  0106F6  0100               	movlb	0	; () banked
  5670  0106F8  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5671                           
  5672                           ; BSR set to: 0
  5673                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5674  0106FA  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  5675  0106FE  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5676  010702  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5677  010706  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5678  01070A  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  5679  01070E  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5680  010712  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5681  010716  0100               	movlb	0	; () banked
  5682  010718  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  5683  01071A  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5684  01071E  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5685  010722  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5686  010726  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5687                           
  5688                           ; BSR set to: 0
  5689                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5690  01072A  C07A  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5691                           
  5692                           ; BSR set to: 0
  5693                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5694  01072E  0100               	movlb	0	; () banked
  5695  010730  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5696  010732  D003               	goto	l507
  5697                           
  5698                           ; BSR set to: 0
  5699                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5700  010734  010F               	movlb	15	; () banked
  5701  010736  8109               	bsf	9,0,b	;volatile
  5702  010738  D002               	goto	l508
  5703  01073A                     l507:
  5704                           
  5705                           ; BSR set to: 0
  5706                           ;inc\CANlib.h: 927: else
  5707                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5708  01073A  010F               	movlb	15	; () banked
  5709  01073C  9109               	bcf	9,0,b	;volatile
  5710  01073E                     l508:
  5711                           
  5712                           ; BSR set to: 15
  5713                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5714  01073E  0100               	movlb	0	; () banked
  5715  010740  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5716  010742  D003               	goto	l509
  5717                           
  5718                           ; BSR set to: 0
  5719                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5720  010744  010F               	movlb	15	; () banked
  5721  010746  8309               	bsf	9,1,b	;volatile
  5722  010748  D002               	goto	l510
  5723  01074A                     l509:
  5724                           
  5725                           ; BSR set to: 0
  5726                           ;inc\CANlib.h: 932: else
  5727                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5728  01074A  010F               	movlb	15	; () banked
  5729  01074C  9309               	bcf	9,1,b	;volatile
  5730  01074E                     l510:
  5731                           
  5732                           ; BSR set to: 15
  5733                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5734  01074E  0100               	movlb	0	; () banked
  5735  010750  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5736  010752  D003               	goto	l511
  5737                           
  5738                           ; BSR set to: 0
  5739                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5740  010754  010F               	movlb	15	; () banked
  5741  010756  8B09               	bsf	9,5,b	;volatile
  5742  010758  D002               	goto	l512
  5743  01075A                     l511:
  5744                           
  5745                           ; BSR set to: 0
  5746                           ;inc\CANlib.h: 937: else
  5747                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5748  01075A  010F               	movlb	15	; () banked
  5749  01075C  9B09               	bcf	9,5,b	;volatile
  5750  01075E                     l512:
  5751                           
  5752                           ; BSR set to: 15
  5753                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5754  01075E  0100               	movlb	0	; () banked
  5755  010760  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5756  010762  D003               	goto	l513
  5757                           
  5758                           ; BSR set to: 0
  5759                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5760  010764  010F               	movlb	15	; () banked
  5761  010766  8D09               	bsf	9,6,b	;volatile
  5762  010768  D002               	goto	l514
  5763  01076A                     l513:
  5764                           
  5765                           ; BSR set to: 0
  5766                           ;inc\CANlib.h: 942: else
  5767                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5768  01076A  010F               	movlb	15	; () banked
  5769  01076C  9D09               	bcf	9,6,b	;volatile
  5770  01076E                     l514:
  5771                           
  5772                           ; BSR set to: 15
  5773                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5774  01076E  0100               	movlb	0	; () banked
  5775  010770  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5776  010772  D003               	goto	l515
  5777                           
  5778                           ; BSR set to: 0
  5779                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5780  010774  010F               	movlb	15	; () banked
  5781  010776  8F09               	bsf	9,7,b	;volatile
  5782  010778  D003               	goto	l5182
  5783  01077A                     l515:
  5784                           
  5785                           ; BSR set to: 0
  5786                           ;inc\CANlib.h: 947: else
  5787                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5788  01077A  010F               	movlb	15	; () banked
  5789  01077C  9F09               	bcf	9,7,b	;volatile
  5790  01077E  D000               	goto	l5182
  5791  010780                     l5182:
  5792                           
  5793                           ; BSR set to: 15
  5794                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5795  010780  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  5796  010784  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5797  010788  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5798  01078C  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5799  010790  0E16               	movlw	22
  5800  010792  D006               	goto	u5840
  5801  010794                     u5845:
  5802  010794  0100               	movlb	0	; () banked
  5803  010796  90D8               	bcf	status,0,c
  5804  010798  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5805  01079A  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5806  01079C  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5807  01079E  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  5808  0107A0                     u5840:
  5809  0107A0  2EE8               	decfsz	wreg,f,c
  5810  0107A2  D7F8               	goto	u5845
  5811  0107A4  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5812  0107A8  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5813  0107AC  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5814  0107B0  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5815                           
  5816                           ; BSR set to: 0
  5817                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5818  0107B4  0100               	movlb	0	; () banked
  5819  0107B6  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  5820  0107B8  0100               	movlb	0	; () banked
  5821  0107BA  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5822  0107BC  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5823  0107BE  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5824  0107C0  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5825                           
  5826                           ; BSR set to: 0
  5827                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5828  0107C2  C07A  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5829  0107C6  D000               	goto	l5188
  5830  0107C8                     l5188:
  5831                           
  5832                           ; BSR set to: 0
  5833                           ;inc\CANlib.h: 953: }
  5834                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5835  0107C8  0E03               	movlw	3
  5836  0107CA  0100               	movlb	0	; () banked
  5837  0107CC  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5838  0107CE  A4D8               	btfss	status,2,c
  5839  0107D0  D08B               	goto	l5222
  5840                           
  5841                           ; BSR set to: 0
  5842  0107D2  0EF7               	movlw	247
  5843  0107D4  0100               	movlb	0	; () banked
  5844  0107D6  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  5845  0107D8  A4D8               	btfss	status,2,c
  5846  0107DA  D086               	goto	l5222
  5847                           
  5848                           ; BSR set to: 0
  5849                           ;inc\CANlib.h: 956: {
  5850                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5851  0107DC  010F               	movlb	15	; () banked
  5852  0107DE  870D               	bsf	13,3,b	;volatile
  5853                           
  5854                           ; BSR set to: 15
  5855                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5856  0107E0  0100               	movlb	0	; () banked
  5857  0107E2  5170               	movf	CANSetFilter@filter& (0+255),w,b
  5858  0107E4  0100               	movlb	0	; () banked
  5859  0107E6  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5860  0107E8  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5861  0107EA  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5862  0107EC  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5863                           
  5864                           ; BSR set to: 0
  5865                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5866  0107EE  C07A  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5867                           
  5868                           ; BSR set to: 0
  5869                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5870  0107F2  0E00               	movlw	0
  5871  0107F4  0100               	movlb	0	; () banked
  5872  0107F6  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  5873  0107F8  0100               	movlb	0	; () banked
  5874  0107FA  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5875  0107FC  0EFF               	movlw	255
  5876  0107FE  0100               	movlb	0	; () banked
  5877  010800  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5878  010802  0100               	movlb	0	; () banked
  5879  010804  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5880  010806  0E00               	movlw	0
  5881  010808  0100               	movlb	0	; () banked
  5882  01080A  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5883  01080C  0100               	movlb	0	; () banked
  5884  01080E  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5885  010810  0E00               	movlw	0
  5886  010812  0100               	movlb	0	; () banked
  5887  010814  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5888  010816  0100               	movlb	0	; () banked
  5889  010818  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5890                           
  5891                           ; BSR set to: 0
  5892                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5893  01081A  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  5894  01081E  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5895  010822  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5896  010826  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5897  01082A  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  5898  01082E  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5899  010832  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5900  010836  0100               	movlb	0	; () banked
  5901  010838  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  5902  01083A  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5903  01083E  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5904  010842  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5905  010846  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5906                           
  5907                           ; BSR set to: 0
  5908                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5909  01084A  C07A  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5910                           
  5911                           ; BSR set to: 0
  5912                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5913  01084E  0100               	movlb	0	; () banked
  5914  010850  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5915  010852  D003               	goto	l518
  5916                           
  5917                           ; BSR set to: 0
  5918                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5919  010854  010F               	movlb	15	; () banked
  5920  010856  810D               	bsf	13,0,b	;volatile
  5921  010858  D002               	goto	l519
  5922  01085A                     l518:
  5923                           
  5924                           ; BSR set to: 0
  5925                           ;inc\CANlib.h: 968: else
  5926                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5927  01085A  010F               	movlb	15	; () banked
  5928  01085C  910D               	bcf	13,0,b	;volatile
  5929  01085E                     l519:
  5930                           
  5931                           ; BSR set to: 15
  5932                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  5933  01085E  0100               	movlb	0	; () banked
  5934  010860  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5935  010862  D003               	goto	l520
  5936                           
  5937                           ; BSR set to: 0
  5938                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5939  010864  010F               	movlb	15	; () banked
  5940  010866  830D               	bsf	13,1,b	;volatile
  5941  010868  D002               	goto	l521
  5942  01086A                     l520:
  5943                           
  5944                           ; BSR set to: 0
  5945                           ;inc\CANlib.h: 973: else
  5946                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5947  01086A  010F               	movlb	15	; () banked
  5948  01086C  930D               	bcf	13,1,b	;volatile
  5949  01086E                     l521:
  5950                           
  5951                           ; BSR set to: 15
  5952                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  5953  01086E  0100               	movlb	0	; () banked
  5954  010870  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5955  010872  D003               	goto	l522
  5956                           
  5957                           ; BSR set to: 0
  5958                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  5959  010874  010F               	movlb	15	; () banked
  5960  010876  8B0D               	bsf	13,5,b	;volatile
  5961  010878  D002               	goto	l523
  5962  01087A                     l522:
  5963                           
  5964                           ; BSR set to: 0
  5965                           ;inc\CANlib.h: 978: else
  5966                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  5967  01087A  010F               	movlb	15	; () banked
  5968  01087C  9B0D               	bcf	13,5,b	;volatile
  5969  01087E                     l523:
  5970                           
  5971                           ; BSR set to: 15
  5972                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  5973  01087E  0100               	movlb	0	; () banked
  5974  010880  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5975  010882  D003               	goto	l524
  5976                           
  5977                           ; BSR set to: 0
  5978                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  5979  010884  010F               	movlb	15	; () banked
  5980  010886  8D0D               	bsf	13,6,b	;volatile
  5981  010888  D002               	goto	l525
  5982  01088A                     l524:
  5983                           
  5984                           ; BSR set to: 0
  5985                           ;inc\CANlib.h: 983: else
  5986                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  5987  01088A  010F               	movlb	15	; () banked
  5988  01088C  9D0D               	bcf	13,6,b	;volatile
  5989  01088E                     l525:
  5990                           
  5991                           ; BSR set to: 15
  5992                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  5993  01088E  0100               	movlb	0	; () banked
  5994  010890  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5995  010892  D003               	goto	l526
  5996                           
  5997                           ; BSR set to: 0
  5998                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  5999  010894  010F               	movlb	15	; () banked
  6000  010896  8F0D               	bsf	13,7,b	;volatile
  6001  010898  D003               	goto	l5216
  6002  01089A                     l526:
  6003                           
  6004                           ; BSR set to: 0
  6005                           ;inc\CANlib.h: 988: else
  6006                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  6007  01089A  010F               	movlb	15	; () banked
  6008  01089C  9F0D               	bcf	13,7,b	;volatile
  6009  01089E  D000               	goto	l5216
  6010  0108A0                     l5216:
  6011                           
  6012                           ; BSR set to: 15
  6013                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  6014  0108A0  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  6015  0108A4  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6016  0108A8  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6017  0108AC  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6018  0108B0  0E16               	movlw	22
  6019  0108B2  D006               	goto	u5920
  6020  0108B4                     u5925:
  6021  0108B4  0100               	movlb	0	; () banked
  6022  0108B6  90D8               	bcf	status,0,c
  6023  0108B8  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6024  0108BA  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6025  0108BC  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6026  0108BE  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  6027  0108C0                     u5920:
  6028  0108C0  2EE8               	decfsz	wreg,f,c
  6029  0108C2  D7F8               	goto	u5925
  6030  0108C4  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  6031  0108C8  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6032  0108CC  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6033  0108D0  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6034                           
  6035                           ; BSR set to: 0
  6036                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  6037  0108D4  0100               	movlb	0	; () banked
  6038  0108D6  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  6039  0108D8  0100               	movlb	0	; () banked
  6040  0108DA  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  6041  0108DC  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6042  0108DE  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6043  0108E0  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6044                           
  6045                           ; BSR set to: 0
  6046                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  6047  0108E2  C07A  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  6048  0108E6  D000               	goto	l5222
  6049  0108E8                     l5222:
  6050                           
  6051                           ; BSR set to: 0
  6052                           ;inc\CANlib.h: 994: }
  6053                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  6054  0108E8  0E04               	movlw	4
  6055  0108EA  0100               	movlb	0	; () banked
  6056  0108EC  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6057  0108EE  A4D8               	btfss	status,2,c
  6058  0108F0  D08B               	goto	l5256
  6059                           
  6060                           ; BSR set to: 0
  6061  0108F2  0EF7               	movlw	247
  6062  0108F4  0100               	movlb	0	; () banked
  6063  0108F6  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  6064  0108F8  A4D8               	btfss	status,2,c
  6065  0108FA  D086               	goto	l5256
  6066                           
  6067                           ; BSR set to: 0
  6068                           ;inc\CANlib.h: 997: {
  6069                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  6070  0108FC  010F               	movlb	15	; () banked
  6071  0108FE  8711               	bsf	17,3,b	;volatile
  6072                           
  6073                           ; BSR set to: 15
  6074                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  6075  010900  0100               	movlb	0	; () banked
  6076  010902  5170               	movf	CANSetFilter@filter& (0+255),w,b
  6077  010904  0100               	movlb	0	; () banked
  6078  010906  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  6079  010908  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6080  01090A  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6081  01090C  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6082                           
  6083                           ; BSR set to: 0
  6084                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  6085  01090E  C07A  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  6086                           
  6087                           ; BSR set to: 0
  6088                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  6089  010912  0E00               	movlw	0
  6090  010914  0100               	movlb	0	; () banked
  6091  010916  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  6092  010918  0100               	movlb	0	; () banked
  6093  01091A  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  6094  01091C  0EFF               	movlw	255
  6095  01091E  0100               	movlb	0	; () banked
  6096  010920  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6097  010922  0100               	movlb	0	; () banked
  6098  010924  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6099  010926  0E00               	movlw	0
  6100  010928  0100               	movlb	0	; () banked
  6101  01092A  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6102  01092C  0100               	movlb	0	; () banked
  6103  01092E  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6104  010930  0E00               	movlw	0
  6105  010932  0100               	movlb	0	; () banked
  6106  010934  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6107  010936  0100               	movlb	0	; () banked
  6108  010938  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6109                           
  6110                           ; BSR set to: 0
  6111                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  6112  01093A  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  6113  01093E  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6114  010942  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6115  010946  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6116  01094A  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  6117  01094E  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6118  010952  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6119  010956  0100               	movlb	0	; () banked
  6120  010958  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  6121  01095A  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  6122  01095E  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6123  010962  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6124  010966  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6125                           
  6126                           ; BSR set to: 0
  6127                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  6128  01096A  C07A  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  6129                           
  6130                           ; BSR set to: 0
  6131                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  6132  01096E  0100               	movlb	0	; () banked
  6133  010970  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6134  010972  D003               	goto	l529
  6135                           
  6136                           ; BSR set to: 0
  6137                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  6138  010974  010F               	movlb	15	; () banked
  6139  010976  8111               	bsf	17,0,b	;volatile
  6140  010978  D002               	goto	l530
  6141  01097A                     l529:
  6142                           
  6143                           ; BSR set to: 0
  6144                           ;inc\CANlib.h: 1009: else
  6145                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  6146  01097A  010F               	movlb	15	; () banked
  6147  01097C  9111               	bcf	17,0,b	;volatile
  6148  01097E                     l530:
  6149                           
  6150                           ; BSR set to: 15
  6151                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  6152  01097E  0100               	movlb	0	; () banked
  6153  010980  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6154  010982  D003               	goto	l531
  6155                           
  6156                           ; BSR set to: 0
  6157                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  6158  010984  010F               	movlb	15	; () banked
  6159  010986  8311               	bsf	17,1,b	;volatile
  6160  010988  D002               	goto	l532
  6161  01098A                     l531:
  6162                           
  6163                           ; BSR set to: 0
  6164                           ;inc\CANlib.h: 1014: else
  6165                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  6166  01098A  010F               	movlb	15	; () banked
  6167  01098C  9311               	bcf	17,1,b	;volatile
  6168  01098E                     l532:
  6169                           
  6170                           ; BSR set to: 15
  6171                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  6172  01098E  0100               	movlb	0	; () banked
  6173  010990  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6174  010992  D003               	goto	l533
  6175                           
  6176                           ; BSR set to: 0
  6177                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  6178  010994  010F               	movlb	15	; () banked
  6179  010996  8B11               	bsf	17,5,b	;volatile
  6180  010998  D002               	goto	l534
  6181  01099A                     l533:
  6182                           
  6183                           ; BSR set to: 0
  6184                           ;inc\CANlib.h: 1019: else
  6185                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  6186  01099A  010F               	movlb	15	; () banked
  6187  01099C  9B11               	bcf	17,5,b	;volatile
  6188  01099E                     l534:
  6189                           
  6190                           ; BSR set to: 15
  6191                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  6192  01099E  0100               	movlb	0	; () banked
  6193  0109A0  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6194  0109A2  D003               	goto	l535
  6195                           
  6196                           ; BSR set to: 0
  6197                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  6198  0109A4  010F               	movlb	15	; () banked
  6199  0109A6  8D11               	bsf	17,6,b	;volatile
  6200  0109A8  D002               	goto	l536
  6201  0109AA                     l535:
  6202                           
  6203                           ; BSR set to: 0
  6204                           ;inc\CANlib.h: 1024: else
  6205                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  6206  0109AA  010F               	movlb	15	; () banked
  6207  0109AC  9D11               	bcf	17,6,b	;volatile
  6208  0109AE                     l536:
  6209                           
  6210                           ; BSR set to: 15
  6211                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  6212  0109AE  0100               	movlb	0	; () banked
  6213  0109B0  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6214  0109B2  D003               	goto	l537
  6215                           
  6216                           ; BSR set to: 0
  6217                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  6218  0109B4  010F               	movlb	15	; () banked
  6219  0109B6  8F11               	bsf	17,7,b	;volatile
  6220  0109B8  D003               	goto	l5250
  6221  0109BA                     l537:
  6222                           
  6223                           ; BSR set to: 0
  6224                           ;inc\CANlib.h: 1029: else
  6225                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  6226  0109BA  010F               	movlb	15	; () banked
  6227  0109BC  9F11               	bcf	17,7,b	;volatile
  6228  0109BE  D000               	goto	l5250
  6229  0109C0                     l5250:
  6230                           
  6231                           ; BSR set to: 15
  6232                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  6233  0109C0  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  6234  0109C4  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6235  0109C8  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6236  0109CC  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6237  0109D0  0E16               	movlw	22
  6238  0109D2  D006               	goto	u6000
  6239  0109D4                     u6005:
  6240  0109D4  0100               	movlb	0	; () banked
  6241  0109D6  90D8               	bcf	status,0,c
  6242  0109D8  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6243  0109DA  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6244  0109DC  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6245  0109DE  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  6246  0109E0                     u6000:
  6247  0109E0  2EE8               	decfsz	wreg,f,c
  6248  0109E2  D7F8               	goto	u6005
  6249  0109E4  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  6250  0109E8  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6251  0109EC  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6252  0109F0  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6253                           
  6254                           ; BSR set to: 0
  6255                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  6256  0109F4  0100               	movlb	0	; () banked
  6257  0109F6  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  6258  0109F8  0100               	movlb	0	; () banked
  6259  0109FA  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  6260  0109FC  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6261  0109FE  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6262  010A00  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6263                           
  6264                           ; BSR set to: 0
  6265                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  6266  010A02  C07A  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6267  010A06  D000               	goto	l5256
  6268  010A08                     l5256:
  6269                           
  6270                           ; BSR set to: 0
  6271                           ;inc\CANlib.h: 1035: }
  6272                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6273  010A08  0E05               	movlw	5
  6274  010A0A  0100               	movlb	0	; () banked
  6275  010A0C  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6276  010A0E  A4D8               	btfss	status,2,c
  6277  010A10  0012               	return	
  6278                           
  6279                           ; BSR set to: 0
  6280  010A12  0EF7               	movlw	247
  6281  010A14  0100               	movlb	0	; () banked
  6282  010A16  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  6283  010A18  A4D8               	btfss	status,2,c
  6284  010A1A  0012               	return	
  6285                           
  6286                           ; BSR set to: 0
  6287                           ;inc\CANlib.h: 1038: {
  6288                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  6289  010A1C  010F               	movlb	15	; () banked
  6290  010A1E  8715               	bsf	21,3,b	;volatile
  6291                           
  6292                           ; BSR set to: 15
  6293                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  6294  010A20  0100               	movlb	0	; () banked
  6295  010A22  5170               	movf	CANSetFilter@filter& (0+255),w,b
  6296  010A24  0100               	movlb	0	; () banked
  6297  010A26  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  6298  010A28  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6299  010A2A  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6300  010A2C  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6301                           
  6302                           ; BSR set to: 0
  6303                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  6304  010A2E  C07A  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6305                           
  6306                           ; BSR set to: 0
  6307                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  6308  010A32  0E00               	movlw	0
  6309  010A34  0100               	movlb	0	; () banked
  6310  010A36  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  6311  010A38  0100               	movlb	0	; () banked
  6312  010A3A  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  6313  010A3C  0EFF               	movlw	255
  6314  010A3E  0100               	movlb	0	; () banked
  6315  010A40  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6316  010A42  0100               	movlb	0	; () banked
  6317  010A44  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6318  010A46  0E00               	movlw	0
  6319  010A48  0100               	movlb	0	; () banked
  6320  010A4A  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6321  010A4C  0100               	movlb	0	; () banked
  6322  010A4E  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6323  010A50  0E00               	movlw	0
  6324  010A52  0100               	movlb	0	; () banked
  6325  010A54  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6326  010A56  0100               	movlb	0	; () banked
  6327  010A58  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6328                           
  6329                           ; BSR set to: 0
  6330                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  6331  010A5A  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  6332  010A5E  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6333  010A62  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6334  010A66  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6335  010A6A  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  6336  010A6E  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6337  010A72  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6338  010A76  0100               	movlb	0	; () banked
  6339  010A78  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  6340  010A7A  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  6341  010A7E  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6342  010A82  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6343  010A86  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6344                           
  6345                           ; BSR set to: 0
  6346                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  6347  010A8A  C07A  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6348                           
  6349                           ; BSR set to: 0
  6350                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  6351  010A8E  0100               	movlb	0	; () banked
  6352  010A90  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6353  010A92  D003               	goto	l540
  6354                           
  6355                           ; BSR set to: 0
  6356                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  6357  010A94  010F               	movlb	15	; () banked
  6358  010A96  8115               	bsf	21,0,b	;volatile
  6359  010A98  D002               	goto	l541
  6360  010A9A                     l540:
  6361                           
  6362                           ; BSR set to: 0
  6363                           ;inc\CANlib.h: 1050: else
  6364                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  6365  010A9A  010F               	movlb	15	; () banked
  6366  010A9C  9115               	bcf	21,0,b	;volatile
  6367  010A9E                     l541:
  6368                           
  6369                           ; BSR set to: 15
  6370                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  6371  010A9E  0100               	movlb	0	; () banked
  6372  010AA0  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6373  010AA2  D003               	goto	l542
  6374                           
  6375                           ; BSR set to: 0
  6376                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  6377  010AA4  010F               	movlb	15	; () banked
  6378  010AA6  8315               	bsf	21,1,b	;volatile
  6379  010AA8  D002               	goto	l543
  6380  010AAA                     l542:
  6381                           
  6382                           ; BSR set to: 0
  6383                           ;inc\CANlib.h: 1055: else
  6384                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6385  010AAA  010F               	movlb	15	; () banked
  6386  010AAC  9315               	bcf	21,1,b	;volatile
  6387  010AAE                     l543:
  6388                           
  6389                           ; BSR set to: 15
  6390                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  6391  010AAE  0100               	movlb	0	; () banked
  6392  010AB0  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6393  010AB2  D003               	goto	l544
  6394                           
  6395                           ; BSR set to: 0
  6396                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6397  010AB4  010F               	movlb	15	; () banked
  6398  010AB6  8B15               	bsf	21,5,b	;volatile
  6399  010AB8  D002               	goto	l545
  6400  010ABA                     l544:
  6401                           
  6402                           ; BSR set to: 0
  6403                           ;inc\CANlib.h: 1060: else
  6404                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6405  010ABA  010F               	movlb	15	; () banked
  6406  010ABC  9B15               	bcf	21,5,b	;volatile
  6407  010ABE                     l545:
  6408                           
  6409                           ; BSR set to: 15
  6410                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  6411  010ABE  0100               	movlb	0	; () banked
  6412  010AC0  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6413  010AC2  D003               	goto	l546
  6414                           
  6415                           ; BSR set to: 0
  6416                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6417  010AC4  010F               	movlb	15	; () banked
  6418  010AC6  8D15               	bsf	21,6,b	;volatile
  6419  010AC8  D002               	goto	l547
  6420  010ACA                     l546:
  6421                           
  6422                           ; BSR set to: 0
  6423                           ;inc\CANlib.h: 1065: else
  6424                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6425  010ACA  010F               	movlb	15	; () banked
  6426  010ACC  9D15               	bcf	21,6,b	;volatile
  6427  010ACE                     l547:
  6428                           
  6429                           ; BSR set to: 15
  6430                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  6431  010ACE  0100               	movlb	0	; () banked
  6432  010AD0  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6433  010AD2  D003               	goto	l548
  6434                           
  6435                           ; BSR set to: 0
  6436                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6437  010AD4  010F               	movlb	15	; () banked
  6438  010AD6  8F15               	bsf	21,7,b	;volatile
  6439  010AD8  D003               	goto	l5284
  6440  010ADA                     l548:
  6441                           
  6442                           ; BSR set to: 0
  6443                           ;inc\CANlib.h: 1070: else
  6444                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6445  010ADA  010F               	movlb	15	; () banked
  6446  010ADC  9F15               	bcf	21,7,b	;volatile
  6447  010ADE  D000               	goto	l5284
  6448  010AE0                     l5284:
  6449                           
  6450                           ; BSR set to: 15
  6451                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  6452  010AE0  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  6453  010AE4  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6454  010AE8  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6455  010AEC  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6456  010AF0  0E16               	movlw	22
  6457  010AF2  D006               	goto	u6080
  6458  010AF4                     u6085:
  6459  010AF4  0100               	movlb	0	; () banked
  6460  010AF6  90D8               	bcf	status,0,c
  6461  010AF8  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6462  010AFA  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6463  010AFC  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6464  010AFE  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  6465  010B00                     u6080:
  6466  010B00  2EE8               	decfsz	wreg,f,c
  6467  010B02  D7F8               	goto	u6085
  6468  010B04  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  6469  010B08  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6470  010B0C  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6471  010B10  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6472                           
  6473                           ; BSR set to: 0
  6474                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6475  010B14  0100               	movlb	0	; () banked
  6476  010B16  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  6477  010B18  0100               	movlb	0	; () banked
  6478  010B1A  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  6479  010B1C  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6480  010B1E  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6481  010B20  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6482                           
  6483                           ; BSR set to: 0
  6484                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6485  010B22  C07A  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6486  010B26  0012               	return	
  6487                           
  6488                           ; BSR set to: 0
  6489                           
  6490                           ; BSR set to: 0
  6491  010B28  0012               	return		;funcret
  6492  010B2A                     __end_of_CANSetFilter:
  6493                           	opt stack 0
  6494                           tblptru	equ	0xFF8
  6495                           tblptrh	equ	0xFF7
  6496                           tblptrl	equ	0xFF6
  6497                           tablat	equ	0xFF5
  6498                           intcon	equ	0xFF2
  6499                           postinc0	equ	0xFEE
  6500                           wreg	equ	0xFE8
  6501                           status	equ	0xFD8
  6502                           
  6503 ;; *************** function _CANOperationMode *****************
  6504 ;; Defined at:
  6505 ;;		line 206 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  6506 ;; Parameters:    Size  Location     Type
  6507 ;;  mode            1    wreg     enum E16922
  6508 ;; Auto vars:     Size  Location     Type
  6509 ;;  mode            1   16[BANK0 ] enum E16922
  6510 ;; Return value:  Size  Location     Type
  6511 ;;		None               void
  6512 ;; Registers used:
  6513 ;;		wreg, status,2, status,0
  6514 ;; Tracked objects:
  6515 ;;		On entry : 0/0
  6516 ;;		On exit  : 0/0
  6517 ;;		Unchanged: 0/0
  6518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6520 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6522 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6523 ;;Total ram usage:        1 bytes
  6524 ;; Hardware stack levels used:    1
  6525 ;; Hardware stack levels required when called:    3
  6526 ;; This function calls:
  6527 ;;		Nothing
  6528 ;; This function is called by:
  6529 ;;		_CANInitialize
  6530 ;; This function uses a non-reentrant model
  6531 ;;
  6532                           
  6533                           	psect	text5
  6534  015EEC                     __ptext5:
  6535                           	opt stack 0
  6536  015EEC                     _CANOperationMode:
  6537                           	opt stack 25
  6538                           
  6539                           ; BSR set to: 0
  6540                           ;incstack = 0
  6541                           ;CANOperationMode@mode stored from wreg
  6542  015EEC  0100               	movlb	0	; () banked
  6543  015EEE  6F70               	movwf	CANOperationMode@mode& (0+255),b
  6544                           
  6545                           ; BSR set to: 0
  6546                           ;inc\CANlib.h: 208: CANCON = mode;
  6547  015EF0  C070  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6548                           
  6549                           ; BSR set to: 0
  6550                           
  6551                           ;inc\CANlib.h: 210: while((CANSTAT & 0b11100000) != mode );
  6552  015EF4  D000               	goto	l4880
  6553  015EF6                     l4880:
  6554                           
  6555                           ; BSR set to: 0
  6556  015EF6  506E               	movf	3950,w,c	;volatile
  6557  015EF8  0BE0               	andlw	224
  6558  015EFA  0100               	movlb	0	; () banked
  6559  015EFC  1970               	xorwf	CANOperationMode@mode& (0+255),w,b
  6560  015EFE  A4D8               	btfss	status,2,c
  6561  015F00  D7FA               	goto	l4880
  6562                           
  6563                           ; BSR set to: 0
  6564                           
  6565                           ; BSR set to: 0
  6566  015F02  0012               	return		;funcret
  6567  015F04                     __end_of_CANOperationMode:
  6568                           	opt stack 0
  6569                           tblptru	equ	0xFF8
  6570                           tblptrh	equ	0xFF7
  6571                           tblptrl	equ	0xFF6
  6572                           tablat	equ	0xFF5
  6573                           intcon	equ	0xFF2
  6574                           postinc0	equ	0xFEE
  6575                           wreg	equ	0xFE8
  6576                           status	equ	0xFD8
  6577                           
  6578 ;; *************** function ___lbtofl *****************
  6579 ;; Defined at:
  6580 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbtofl.c"
  6581 ;; Parameters:    Size  Location     Type
  6582 ;;  c               1    wreg     unsigned char 
  6583 ;; Auto vars:     Size  Location     Type
  6584 ;;  c               1   30[BANK0 ] unsigned char 
  6585 ;; Return value:  Size  Location     Type
  6586 ;;                  4   26[BANK0 ] unsigned char 
  6587 ;; Registers used:
  6588 ;;		wreg, status,2, status,0, cstack
  6589 ;; Tracked objects:
  6590 ;;		On entry : 0/0
  6591 ;;		On exit  : 0/0
  6592 ;;		Unchanged: 0/0
  6593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6594 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6595 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6597 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6598 ;;Total ram usage:        5 bytes
  6599 ;; Hardware stack levels used:    1
  6600 ;; Hardware stack levels required when called:    4
  6601 ;; This function calls:
  6602 ;;		___flpack
  6603 ;; This function is called by:
  6604 ;;		_main
  6605 ;; This function uses a non-reentrant model
  6606 ;;
  6607                           
  6608                           	psect	text6
  6609  015CDC                     __ptext6:
  6610                           	opt stack 0
  6611  015CDC                     ___lbtofl:
  6612                           	opt stack 26
  6613                           
  6614                           ; BSR set to: 0
  6615                           ;incstack = 0
  6616                           ;___lbtofl@c stored from wreg
  6617  015CDC  0100               	movlb	0	; () banked
  6618  015CDE  6F7E               	movwf	___lbtofl@c& (0+255),b
  6619                           
  6620                           ; BSR set to: 0
  6621  015CE0  0100               	movlb	0	; () banked
  6622  015CE2  517E               	movf	___lbtofl@c& (0+255),w,b
  6623  015CE4  0100               	movlb	0	; () banked
  6624  015CE6  6F70               	movwf	___flpack@arg& (0+255),b
  6625  015CE8  6B71               	clrf	(___flpack@arg+1)& (0+255),b
  6626  015CEA  6B72               	clrf	(___flpack@arg+2)& (0+255),b
  6627  015CEC  6B73               	clrf	(___flpack@arg+3)& (0+255),b
  6628  015CEE  0E96               	movlw	150
  6629  015CF0  0100               	movlb	0	; () banked
  6630  015CF2  6F74               	movwf	___flpack@exp& (0+255),b
  6631  015CF4  0E00               	movlw	0
  6632  015CF6  0100               	movlb	0	; () banked
  6633  015CF8  6F75               	movwf	___flpack@sign& (0+255),b
  6634  015CFA  EC4D  F0A4         	call	___flpack	;wreg free
  6635  015CFE  C070  F07A         	movff	?___flpack,?___lbtofl
  6636  015D02  C071  F07B         	movff	?___flpack+1,?___lbtofl+1
  6637  015D06  C072  F07C         	movff	?___flpack+2,?___lbtofl+2
  6638  015D0A  C073  F07D         	movff	?___flpack+3,?___lbtofl+3
  6639  015D0E  0012               	return	
  6640  015D10  0012               	return		;funcret
  6641  015D12                     __end_of___lbtofl:
  6642                           	opt stack 0
  6643                           tblptru	equ	0xFF8
  6644                           tblptrh	equ	0xFF7
  6645                           tblptrl	equ	0xFF6
  6646                           tablat	equ	0xFF5
  6647                           intcon	equ	0xFF2
  6648                           postinc0	equ	0xFEE
  6649                           wreg	equ	0xFE8
  6650                           status	equ	0xFD8
  6651                           
  6652 ;; *************** function ___awtofl *****************
  6653 ;; Defined at:
  6654 ;;		line 31 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtofl.c"
  6655 ;; Parameters:    Size  Location     Type
  6656 ;;  c               2   26[BANK0 ] int 
  6657 ;; Auto vars:     Size  Location     Type
  6658 ;;  f1              4    0        int 
  6659 ;;  sign            1   30[BANK0 ] unsigned char 
  6660 ;; Return value:  Size  Location     Type
  6661 ;;                  4   26[BANK0 ] unsigned char 
  6662 ;; Registers used:
  6663 ;;		wreg, status,2, status,0, cstack
  6664 ;; Tracked objects:
  6665 ;;		On entry : 0/0
  6666 ;;		On exit  : 0/0
  6667 ;;		Unchanged: 0/0
  6668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6669 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6670 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6672 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6673 ;;Total ram usage:        5 bytes
  6674 ;; Hardware stack levels used:    1
  6675 ;; Hardware stack levels required when called:    4
  6676 ;; This function calls:
  6677 ;;		___flpack
  6678 ;; This function is called by:
  6679 ;;		_main
  6680 ;; This function uses a non-reentrant model
  6681 ;;
  6682                           
  6683                           	psect	text7
  6684  015AD8                     __ptext7:
  6685                           	opt stack 0
  6686  015AD8                     ___awtofl:
  6687                           	opt stack 26
  6688                           
  6689                           ;incstack = 0
  6690  015AD8  0E00               	movlw	0
  6691  015ADA  0100               	movlb	0	; () banked
  6692  015ADC  6F7E               	movwf	___awtofl@sign& (0+255),b
  6693                           
  6694                           ; BSR set to: 0
  6695  015ADE  0100               	movlb	0	; () banked
  6696  015AE0  AF7B               	btfss	(___awtofl@c+1)& (0+255),7,b
  6697  015AE2  D008               	goto	l8436
  6698                           
  6699                           ; BSR set to: 0
  6700  015AE4  0100               	movlb	0	; () banked
  6701  015AE6  6D7A               	negf	___awtofl@c& (0+255),b
  6702  015AE8  1F7B               	comf	(___awtofl@c+1)& (0+255),f,b
  6703  015AEA  B0D8               	btfsc	status,0,c
  6704  015AEC  2B7B               	incf	(___awtofl@c+1)& (0+255),f,b
  6705  015AEE  0100               	movlb	0	; () banked
  6706  015AF0  2B7E               	incf	___awtofl@sign& (0+255),f,b
  6707  015AF2  D000               	goto	l8436
  6708  015AF4                     l8436:
  6709                           
  6710                           ; BSR set to: 0
  6711  015AF4  C07A  F070         	movff	___awtofl@c,___flpack@arg
  6712  015AF8  C07B  F071         	movff	___awtofl@c+1,___flpack@arg+1
  6713  015AFC  0100               	movlb	0	; () banked
  6714  015AFE  6B72               	clrf	(___flpack@arg+2)& (0+255),b
  6715  015B00  6B73               	clrf	(___flpack@arg+3)& (0+255),b
  6716  015B02  0E96               	movlw	150
  6717  015B04  0100               	movlb	0	; () banked
  6718  015B06  6F74               	movwf	___flpack@exp& (0+255),b
  6719  015B08  C07E  F075         	movff	___awtofl@sign,___flpack@sign
  6720  015B0C  EC4D  F0A4         	call	___flpack	;wreg free
  6721  015B10  C070  F07A         	movff	?___flpack,?___awtofl
  6722  015B14  C071  F07B         	movff	?___flpack+1,?___awtofl+1
  6723  015B18  C072  F07C         	movff	?___flpack+2,?___awtofl+2
  6724  015B1C  C073  F07D         	movff	?___flpack+3,?___awtofl+3
  6725  015B20  0012               	return	
  6726  015B22  0012               	return		;funcret
  6727  015B24                     __end_of___awtofl:
  6728                           	opt stack 0
  6729                           tblptru	equ	0xFF8
  6730                           tblptrh	equ	0xFF7
  6731                           tblptrl	equ	0xFF6
  6732                           tablat	equ	0xFF5
  6733                           intcon	equ	0xFF2
  6734                           postinc0	equ	0xFEE
  6735                           wreg	equ	0xFE8
  6736                           status	equ	0xFD8
  6737                           
  6738 ;; *************** function _PWR_Button_Polling *****************
  6739 ;; Defined at:
  6740 ;;		line 571 in file "RemoteCan.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;		None
  6743 ;; Auto vars:     Size  Location     Type
  6744 ;;		None
  6745 ;; Return value:  Size  Location     Type
  6746 ;;		None               void
  6747 ;; Registers used:
  6748 ;;		None
  6749 ;; Tracked objects:
  6750 ;;		On entry : 0/0
  6751 ;;		On exit  : 0/0
  6752 ;;		Unchanged: 0/0
  6753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6758 ;;Total ram usage:        0 bytes
  6759 ;; Hardware stack levels used:    1
  6760 ;; Hardware stack levels required when called:    3
  6761 ;; This function calls:
  6762 ;;		Nothing
  6763 ;; This function is called by:
  6764 ;;		_main
  6765 ;; This function uses a non-reentrant model
  6766 ;;
  6767                           
  6768                           	psect	text8
  6769  015F1C                     __ptext8:
  6770                           	opt stack 0
  6771  015F1C                     _PWR_Button_Polling:
  6772                           	opt stack 27
  6773                           
  6774                           ;RemoteCan.c: 572: if ((PORTBbits.RB5 == 0) || (wait_low_1 == 0)) {
  6775                           
  6776                           ;incstack = 0
  6777  015F1C  AA81               	btfss	3969,5,c	;volatile
  6778  015F1E  D002               	goto	l928
  6779  015F20  B44D               	btfsc	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  6780  015F22  0012               	return	
  6781  015F24                     l928:
  6782                           
  6783                           ;RemoteCan.c: 573: wait_low_1 = 0;
  6784  015F24  944D               	bcf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  6785                           
  6786                           ;RemoteCan.c: 574: if (PORTBbits.RB5 == 1) {
  6787  015F26  AA81               	btfss	3969,5,c	;volatile
  6788  015F28  0012               	return	
  6789                           
  6790                           ;RemoteCan.c: 575: power_switch = ~power_switch;
  6791  015F2A  7C4C               	btg	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  6792                           
  6793                           ;RemoteCan.c: 576: wait_low_1 = 1;
  6794  015F2C  844D               	bsf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  6795  015F2E  0012               	return	
  6796  015F30  0012               	return		;funcret
  6797  015F32                     __end_of_PWR_Button_Polling:
  6798                           	opt stack 0
  6799                           tblptru	equ	0xFF8
  6800                           tblptrh	equ	0xFF7
  6801                           tblptrl	equ	0xFF6
  6802                           tablat	equ	0xFF5
  6803                           intcon	equ	0xFF2
  6804                           postinc0	equ	0xFEE
  6805                           wreg	equ	0xFE8
  6806                           status	equ	0xFD8
  6807                           
  6808 ;; *************** function _LCD_Parking *****************
  6809 ;; Defined at:
  6810 ;;		line 532 in file "RemoteCan.c"
  6811 ;; Parameters:    Size  Location     Type
  6812 ;;		None
  6813 ;; Auto vars:     Size  Location     Type
  6814 ;;		None
  6815 ;; Return value:  Size  Location     Type
  6816 ;;		None               void
  6817 ;; Registers used:
  6818 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6819 ;; Tracked objects:
  6820 ;;		On entry : 0/0
  6821 ;;		On exit  : 0/0
  6822 ;;		Unchanged: 0/0
  6823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6828 ;;Total ram usage:        0 bytes
  6829 ;; Hardware stack levels used:    1
  6830 ;; Hardware stack levels required when called:    9
  6831 ;; This function calls:
  6832 ;;		_LCD_clear
  6833 ;;		_LCD_goto_line
  6834 ;;		_LCD_initialize
  6835 ;;		_LCD_write_message
  6836 ;; This function is called by:
  6837 ;;		_main
  6838 ;; This function uses a non-reentrant model
  6839 ;;
  6840                           
  6841                           	psect	text9
  6842  015836                     __ptext9:
  6843                           	opt stack 0
  6844  015836                     _LCD_Parking:
  6845                           	opt stack 21
  6846                           
  6847                           ;RemoteCan.c: 533: LCD_initialize(16);
  6848                           
  6849                           ;incstack = 0
  6850  015836  0E10               	movlw	16
  6851  015838  EC0D  F0A5         	call	_LCD_initialize
  6852                           
  6853                           ;RemoteCan.c: 534: LCD_clear();
  6854  01583C  ECF0  F0AE         	call	_LCD_clear	;wreg free
  6855                           
  6856                           ;RemoteCan.c: 535: LCD_goto_line(1);
  6857  015840  0E01               	movlw	1
  6858  015842  EC1A  F0A8         	call	_LCD_goto_line
  6859                           
  6860                           ;RemoteCan.c: 536: LCD_write_message("= PARKING MESSAGES =");
  6861  015846  0E40               	movlw	low STR_16
  6862  015848  0100               	movlb	0	; () banked
  6863  01584A  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6864  01584C  0EFF               	movlw	high STR_16
  6865  01584E  0100               	movlb	0	; () banked
  6866  015850  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6867  015852  EC89  F0AE         	call	_LCD_write_message	;wreg free
  6868                           
  6869                           ;RemoteCan.c: 537: LCD_goto_line(2);
  6870  015856  0E02               	movlw	2
  6871  015858  EC1A  F0A8         	call	_LCD_goto_line
  6872                           
  6873                           ;RemoteCan.c: 538: LCD_write_message("=    Parking in    =");
  6874  01585C  0E16               	movlw	low STR_25
  6875  01585E  0100               	movlb	0	; () banked
  6876  015860  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6877  015862  0EFF               	movlw	high STR_25
  6878  015864  0100               	movlb	0	; () banked
  6879  015866  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6880  015868  EC89  F0AE         	call	_LCD_write_message	;wreg free
  6881                           
  6882                           ;RemoteCan.c: 539: LCD_goto_line(3);
  6883  01586C  0E03               	movlw	3
  6884  01586E  EC1A  F0A8         	call	_LCD_goto_line
  6885                           
  6886                           ;RemoteCan.c: 540: LCD_write_message("=    progress...   =");
  6887  015872  0E2B               	movlw	low STR_26
  6888  015874  0100               	movlb	0	; () banked
  6889  015876  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6890  015878  0EFF               	movlw	high STR_26
  6891  01587A  0100               	movlb	0	; () banked
  6892  01587C  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6893  01587E  EC89  F0AE         	call	_LCD_write_message	;wreg free
  6894                           
  6895                           ;RemoteCan.c: 541: LCD_goto_line(4);
  6896  015882  0E04               	movlw	4
  6897  015884  EC1A  F0A8         	call	_LCD_goto_line
  6898                           
  6899                           ;RemoteCan.c: 542: LCD_write_message("====================");
  6900  015888  0E7F               	movlw	low STR_1
  6901  01588A  0100               	movlb	0	; () banked
  6902  01588C  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6903  01588E  0EFF               	movlw	high STR_1
  6904  015890  0100               	movlb	0	; () banked
  6905  015892  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6906  015894  EC89  F0AE         	call	_LCD_write_message	;wreg free
  6907  015898  0012               	return		;funcret
  6908  01589A                     __end_of_LCD_Parking:
  6909                           	opt stack 0
  6910                           tblptru	equ	0xFF8
  6911                           tblptrh	equ	0xFF7
  6912                           tblptrl	equ	0xFF6
  6913                           tablat	equ	0xFF5
  6914                           intcon	equ	0xFF2
  6915                           postinc0	equ	0xFEE
  6916                           wreg	equ	0xFE8
  6917                           status	equ	0xFD8
  6918                           
  6919 ;; *************** function _LCD_Park *****************
  6920 ;; Defined at:
  6921 ;;		line 519 in file "RemoteCan.c"
  6922 ;; Parameters:    Size  Location     Type
  6923 ;;		None
  6924 ;; Auto vars:     Size  Location     Type
  6925 ;;		None
  6926 ;; Return value:  Size  Location     Type
  6927 ;;		None               void
  6928 ;; Registers used:
  6929 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6930 ;; Tracked objects:
  6931 ;;		On entry : 0/0
  6932 ;;		On exit  : 0/0
  6933 ;;		Unchanged: 0/0
  6934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6939 ;;Total ram usage:        0 bytes
  6940 ;; Hardware stack levels used:    1
  6941 ;; Hardware stack levels required when called:    9
  6942 ;; This function calls:
  6943 ;;		_LCD_clear
  6944 ;;		_LCD_goto_line
  6945 ;;		_LCD_initialize
  6946 ;;		_LCD_write_message
  6947 ;; This function is called by:
  6948 ;;		_main
  6949 ;; This function uses a non-reentrant model
  6950 ;;
  6951                           
  6952                           	psect	text10
  6953  01589A                     __ptext10:
  6954                           	opt stack 0
  6955  01589A                     _LCD_Park:
  6956                           	opt stack 21
  6957                           
  6958                           ;RemoteCan.c: 520: LCD_initialize(16);
  6959                           
  6960                           ;incstack = 0
  6961  01589A  0E10               	movlw	16
  6962  01589C  EC0D  F0A5         	call	_LCD_initialize
  6963                           
  6964                           ;RemoteCan.c: 521: LCD_clear();
  6965  0158A0  ECF0  F0AE         	call	_LCD_clear	;wreg free
  6966                           
  6967                           ;RemoteCan.c: 522: LCD_goto_line(1);
  6968  0158A4  0E01               	movlw	1
  6969  0158A6  EC1A  F0A8         	call	_LCD_goto_line
  6970                           
  6971                           ;RemoteCan.c: 523: LCD_write_message("= PARKING MESSAGES =");
  6972  0158AA  0E40               	movlw	low STR_16
  6973  0158AC  0100               	movlb	0	; () banked
  6974  0158AE  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6975  0158B0  0EFF               	movlw	high STR_16
  6976  0158B2  0100               	movlb	0	; () banked
  6977  0158B4  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6978  0158B6  EC89  F0AE         	call	_LCD_write_message	;wreg free
  6979                           
  6980                           ;RemoteCan.c: 524: LCD_goto_line(2);
  6981  0158BA  0E02               	movlw	2
  6982  0158BC  EC1A  F0A8         	call	_LCD_goto_line
  6983                           
  6984                           ;RemoteCan.c: 525: LCD_write_message("- Distance REACHED -");
  6985  0158C0  0EEC               	movlw	low STR_21
  6986  0158C2  0100               	movlb	0	; () banked
  6987  0158C4  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6988  0158C6  0EFE               	movlw	high STR_21
  6989  0158C8  0100               	movlb	0	; () banked
  6990  0158CA  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6991  0158CC  EC89  F0AE         	call	_LCD_write_message	;wreg free
  6992                           
  6993                           ;RemoteCan.c: 526: LCD_goto_line(3);
  6994  0158D0  0E03               	movlw	3
  6995  0158D2  EC1A  F0A8         	call	_LCD_goto_line
  6996                           
  6997                           ;RemoteCan.c: 527: LCD_write_message("Press the BUTTON to ");
  6998  0158D6  0EC2               	movlw	low STR_22
  6999  0158D8  0100               	movlb	0	; () banked
  7000  0158DA  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  7001  0158DC  0EFE               	movlw	high STR_22
  7002  0158DE  0100               	movlb	0	; () banked
  7003  0158E0  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7004  0158E2  EC89  F0AE         	call	_LCD_write_message	;wreg free
  7005                           
  7006                           ;RemoteCan.c: 528: LCD_goto_line(4);
  7007  0158E6  0E04               	movlw	4
  7008  0158E8  EC1A  F0A8         	call	_LCD_goto_line
  7009                           
  7010                           ;RemoteCan.c: 529: LCD_write_message("   start parking    ");
  7011  0158EC  0E6E               	movlw	low STR_23
  7012  0158EE  0100               	movlb	0	; () banked
  7013  0158F0  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  7014  0158F2  0EFE               	movlw	high STR_23
  7015  0158F4  0100               	movlb	0	; () banked
  7016  0158F6  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7017  0158F8  EC89  F0AE         	call	_LCD_write_message	;wreg free
  7018  0158FC  0012               	return		;funcret
  7019  0158FE                     __end_of_LCD_Park:
  7020                           	opt stack 0
  7021                           tblptru	equ	0xFF8
  7022                           tblptrh	equ	0xFF7
  7023                           tblptrl	equ	0xFF6
  7024                           tablat	equ	0xFF5
  7025                           intcon	equ	0xFF2
  7026                           postinc0	equ	0xFEE
  7027                           wreg	equ	0xFE8
  7028                           status	equ	0xFD8
  7029                           
  7030 ;; *************** function _LCD_Handler *****************
  7031 ;; Defined at:
  7032 ;;		line 448 in file "RemoteCan.c"
  7033 ;; Parameters:    Size  Location     Type
  7034 ;;		None
  7035 ;; Auto vars:     Size  Location     Type
  7036 ;;		None
  7037 ;; Return value:  Size  Location     Type
  7038 ;;		None               void
  7039 ;; Registers used:
  7040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7041 ;; Tracked objects:
  7042 ;;		On entry : 0/0
  7043 ;;		On exit  : 0/0
  7044 ;;		Unchanged: 0/0
  7045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7050 ;;Total ram usage:        0 bytes
  7051 ;; Hardware stack levels used:    1
  7052 ;; Hardware stack levels required when called:   10
  7053 ;; This function calls:
  7054 ;;		_CANisTxReady
  7055 ;;		_CANsendMessage
  7056 ;;		_LCD_clear
  7057 ;;		_LCD_goto_line
  7058 ;;		_LCD_goto_xy
  7059 ;;		_LCD_initialize
  7060 ;;		_LCD_write_integer
  7061 ;;		_LCD_write_message
  7062 ;;		_LCD_write_string
  7063 ;;		___fldiv
  7064 ;;		___lwtofl
  7065 ;;		_sprintf
  7066 ;; This function is called by:
  7067 ;;		_main
  7068 ;; This function uses a non-reentrant model
  7069 ;;
  7070                           
  7071                           	psect	text11
  7072  013FCA                     __ptext11:
  7073                           	opt stack 0
  7074  013FCA                     _LCD_Handler:
  7075                           	opt stack 20
  7076                           
  7077                           ;RemoteCan.c: 450: while (CANisTxReady() != 1);
  7078                           
  7079                           ;incstack = 0
  7080  013FCA  D000               	goto	l8350
  7081  013FCC                     l8350:
  7082  013FCC  EC34  F0AF         	call	_CANisTxReady	;wreg free
  7083  013FD0  06E8               	decf	wreg,f,c
  7084  013FD2  A4D8               	btfss	status,2,c
  7085  013FD4  D7FB               	goto	l8350
  7086                           
  7087                           ;RemoteCan.c: 451: CANsendMessage(0b00000001000, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  7088  013FD6  0E08               	movlw	8
  7089  013FD8  0100               	movlb	0	; () banked
  7090  013FDA  6F70               	movwf	CANsendMessage@identifier& (0+255),b
  7091  013FDC  0E00               	movlw	0
  7092  013FDE  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  7093  013FE0  0E00               	movlw	0
  7094  013FE2  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  7095  013FE4  0E00               	movlw	0
  7096  013FE6  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  7097  013FE8  0EE9               	movlw	low _data_speed
  7098  013FEA  0100               	movlb	0	; () banked
  7099  013FEC  6F74               	movwf	CANsendMessage@data& (0+255),b
  7100  013FEE  0E00               	movlw	high _data_speed
  7101  013FF0  0100               	movlb	0	; () banked
  7102  013FF2  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
  7103  013FF4  0E08               	movlw	8
  7104  013FF6  0100               	movlb	0	; () banked
  7105  013FF8  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
  7106  013FFA  0EFC               	movlw	252
  7107  013FFC  0100               	movlb	0	; () banked
  7108  013FFE  6F77               	movwf	CANsendMessage@flags& (0+255),b
  7109  014000  EC1B  F08A         	call	_CANsendMessage	;wreg free
  7110                           
  7111                           ;RemoteCan.c: 453: actual_speed_kmh = ((actual_speed) / 278.0);
  7112  014004  C0DD  F07A         	movff	_actual_speed,___lwtofl@c	;volatile
  7113  014008  C0DE  F07B         	movff	_actual_speed+1,___lwtofl@c+1	;volatile
  7114  01400C  ECBE  F0AE         	call	___lwtofl	;wreg free
  7115  014010  C07A  F07E         	movff	?___lwtofl,___fldiv@f1
  7116  014014  C07B  F07F         	movff	?___lwtofl+1,___fldiv@f1+1
  7117  014018  C07C  F080         	movff	?___lwtofl+2,___fldiv@f1+2
  7118  01401C  C07D  F081         	movff	?___lwtofl+3,___fldiv@f1+3
  7119  014020  0E00               	movlw	0
  7120  014022  0100               	movlb	0	; () banked
  7121  014024  6F82               	movwf	___fldiv@f2& (0+255),b
  7122  014026  0E00               	movlw	0
  7123  014028  6F83               	movwf	(___fldiv@f2+1)& (0+255),b
  7124  01402A  0E8B               	movlw	139
  7125  01402C  6F84               	movwf	(___fldiv@f2+2)& (0+255),b
  7126  01402E  0E43               	movlw	67
  7127  014030  6F85               	movwf	(___fldiv@f2+3)& (0+255),b
  7128  014032  EC76  F0A6         	call	___fldiv	;wreg free
  7129  014036  C07E  F001         	movff	?___fldiv,_actual_speed_kmh	;volatile
  7130  01403A  C07F  F002         	movff	?___fldiv+1,_actual_speed_kmh+1	;volatile
  7131  01403E  C080  F003         	movff	?___fldiv+2,_actual_speed_kmh+2	;volatile
  7132  014042  C081  F004         	movff	?___fldiv+3,_actual_speed_kmh+3	;volatile
  7133                           
  7134                           ;RemoteCan.c: 454: sprintf(str, "%.2f", actual_speed_kmh);
  7135  014046  0E0D               	movlw	low _str
  7136  014048  0100               	movlb	0	; () banked
  7137  01404A  6FB1               	movwf	sprintf@sp& (0+255),b
  7138  01404C  0E01               	movlw	high _str
  7139  01404E  0100               	movlb	0	; () banked
  7140  014050  6FB2               	movwf	(sprintf@sp+1)& (0+255),b
  7141  014052  0EFA               	movlw	low STR_5
  7142  014054  0100               	movlb	0	; () banked
  7143  014056  6FB3               	movwf	sprintf@f& (0+255),b
  7144  014058  0EFF               	movlw	high STR_5
  7145  01405A  0100               	movlb	0	; () banked
  7146  01405C  6FB4               	movwf	(sprintf@f+1)& (0+255),b
  7147  01405E  C001  F0B5         	movff	_actual_speed_kmh,?_sprintf+4	;volatile
  7148  014062  C002  F0B6         	movff	_actual_speed_kmh+1,?_sprintf+5	;volatile
  7149  014066  C003  F0B7         	movff	_actual_speed_kmh+2,?_sprintf+6	;volatile
  7150  01406A  C004  F0B8         	movff	_actual_speed_kmh+3,?_sprintf+7	;volatile
  7151  01406E  EC95  F085         	call	_sprintf	;wreg free
  7152                           
  7153                           ;RemoteCan.c: 455: str[11] = '\0';
  7154  014072  0E00               	movlw	0
  7155  014074  0101               	movlb	1	; () banked
  7156  014076  6F18               	movwf	(_str+11)& (0+255),b	;volatile
  7157                           
  7158                           ; BSR set to: 1
  7159                           ;RemoteCan.c: 457: if (display_refresh == 1) {
  7160  014078  A44C               	btfss	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  7161  01407A  D03E               	goto	l8378
  7162                           
  7163                           ; BSR set to: 1
  7164                           ;RemoteCan.c: 458: LCD_initialize(16);
  7165  01407C  0E10               	movlw	16
  7166  01407E  EC0D  F0A5         	call	_LCD_initialize
  7167                           
  7168                           ;RemoteCan.c: 459: LCD_clear();
  7169  014082  ECF0  F0AE         	call	_LCD_clear	;wreg free
  7170                           
  7171                           ;RemoteCan.c: 460: LCD_goto_line(1);
  7172  014086  0E01               	movlw	1
  7173  014088  EC1A  F0A8         	call	_LCD_goto_line
  7174                           
  7175                           ;RemoteCan.c: 461: LCD_write_message("=== VEHICLE DATA ===");
  7176  01408C  0E6A               	movlw	low STR_6
  7177  01408E  0100               	movlb	0	; () banked
  7178  014090  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  7179  014092  0EFF               	movlw	high STR_6
  7180  014094  0100               	movlb	0	; () banked
  7181  014096  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7182  014098  EC89  F0AE         	call	_LCD_write_message	;wreg free
  7183                           
  7184                           ;RemoteCan.c: 462: LCD_goto_line(2);
  7185  01409C  0E02               	movlw	2
  7186  01409E  EC1A  F0A8         	call	_LCD_goto_line
  7187                           
  7188                           ;RemoteCan.c: 463: LCD_write_message("Direction: ");
  7189  0140A2  0EC8               	movlw	low STR_7
  7190  0140A4  0100               	movlb	0	; () banked
  7191  0140A6  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  7192  0140A8  0EFF               	movlw	high STR_7
  7193  0140AA  0100               	movlb	0	; () banked
  7194  0140AC  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7195  0140AE  EC89  F0AE         	call	_LCD_write_message	;wreg free
  7196                           
  7197                           ;RemoteCan.c: 464: LCD_goto_line(3);
  7198  0140B2  0E03               	movlw	3
  7199  0140B4  EC1A  F0A8         	call	_LCD_goto_line
  7200                           
  7201                           ;RemoteCan.c: 465: LCD_write_message("Speed: 0.00 Km/h");
  7202  0140B8  0EA9               	movlw	low STR_8
  7203  0140BA  0100               	movlb	0	; () banked
  7204  0140BC  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  7205  0140BE  0EFF               	movlw	high STR_8
  7206  0140C0  0100               	movlb	0	; () banked
  7207  0140C2  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7208  0140C4  EC89  F0AE         	call	_LCD_write_message	;wreg free
  7209                           
  7210                           ;RemoteCan.c: 466: LCD_goto_line(4);
  7211  0140C8  0E04               	movlw	4
  7212  0140CA  EC1A  F0A8         	call	_LCD_goto_line
  7213                           
  7214                           ;RemoteCan.c: 467: if (1 == 0) {
  7215  0140CE  D009               	goto	l8374
  7216                           
  7217                           ;RemoteCan.c: 468: LCD_write_message("Park assist: ");
  7218  0140D0  0EBA               	movlw	low STR_9
  7219  0140D2  0100               	movlb	0	; () banked
  7220  0140D4  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  7221  0140D6  0EFF               	movlw	high STR_9
  7222  0140D8  0100               	movlb	0	; () banked
  7223  0140DA  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7224  0140DC  EC89  F0AE         	call	_LCD_write_message	;wreg free
  7225                           
  7226                           ;RemoteCan.c: 469: } else {
  7227  0140E0  D009               	goto	l8376
  7228  0140E2                     l8374:
  7229                           
  7230                           ;RemoteCan.c: 470: LCD_write_message("Data: ");
  7231  0140E2  0EE4               	movlw	low STR_10
  7232  0140E4  0100               	movlb	0	; () banked
  7233  0140E6  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  7234  0140E8  0EFF               	movlw	high STR_10
  7235  0140EA  0100               	movlb	0	; () banked
  7236  0140EC  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7237  0140EE  EC89  F0AE         	call	_LCD_write_message	;wreg free
  7238  0140F2  D000               	goto	l8376
  7239  0140F4                     l8376:
  7240                           
  7241                           ;RemoteCan.c: 471: }
  7242                           ;RemoteCan.c: 472: display_refresh = 0;
  7243  0140F4  944C               	bcf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  7244  0140F6  D000               	goto	l8378
  7245  0140F8                     l8378:
  7246                           
  7247                           ;RemoteCan.c: 473: }
  7248                           ;RemoteCan.c: 476: LCD_goto_xy(12, 2);
  7249  0140F8  0E02               	movlw	2
  7250  0140FA  0100               	movlb	0	; () banked
  7251  0140FC  6F7F               	movwf	LCD_goto_xy@y& (0+255),b
  7252  0140FE  0E0C               	movlw	12
  7253  014100  EC68  F0AF         	call	_LCD_goto_xy
  7254                           
  7255                           ;RemoteCan.c: 477: if (switch_position != 0) {
  7256  014104  0100               	movlb	0	; () banked
  7257  014106  51E7               	movf	_switch_position& (0+255),w,b	;volatile
  7258  014108  B4D8               	btfsc	status,2,c
  7259  01410A  D016               	goto	l8388
  7260                           
  7261                           ; BSR set to: 0
  7262                           ;RemoteCan.c: 478: if (dir == 1) {
  7263  01410C  0100               	movlb	0	; () banked
  7264  01410E  05E3               	decf	_dir& (0+255),w,b	;volatile
  7265  014110  A4D8               	btfss	status,2,c
  7266  014112  D009               	goto	l8386
  7267                           
  7268                           ; BSR set to: 0
  7269                           ;RemoteCan.c: 479: LCD_write_message("FWD ");
  7270  014114  0EF0               	movlw	low STR_11
  7271  014116  0100               	movlb	0	; () banked
  7272  014118  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  7273  01411A  0EFF               	movlw	high STR_11
  7274  01411C  0100               	movlb	0	; () banked
  7275  01411E  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7276  014120  EC89  F0AE         	call	_LCD_write_message	;wreg free
  7277                           
  7278                           ;RemoteCan.c: 480: } else {
  7279  014124  D012               	goto	l8390
  7280  014126                     l8386:
  7281                           
  7282                           ;RemoteCan.c: 481: LCD_write_message("BKWD");
  7283  014126  0EF5               	movlw	low STR_12
  7284  014128  0100               	movlb	0	; () banked
  7285  01412A  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  7286  01412C  0EFF               	movlw	high STR_12
  7287  01412E  0100               	movlb	0	; () banked
  7288  014130  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7289  014132  EC89  F0AE         	call	_LCD_write_message	;wreg free
  7290                           
  7291                           ;RemoteCan.c: 482: }
  7292                           ;RemoteCan.c: 483: } else {
  7293  014136  D009               	goto	l8390
  7294  014138                     l8388:
  7295                           
  7296                           ;RemoteCan.c: 484: LCD_write_message("P   ");
  7297  014138  0EEB               	movlw	low STR_13
  7298  01413A  0100               	movlb	0	; () banked
  7299  01413C  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  7300  01413E  0EFF               	movlw	high STR_13
  7301  014140  0100               	movlb	0	; () banked
  7302  014142  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7303  014144  EC89  F0AE         	call	_LCD_write_message	;wreg free
  7304  014148  D000               	goto	l8390
  7305  01414A                     l8390:
  7306                           
  7307                           ;RemoteCan.c: 485: }
  7308                           ;RemoteCan.c: 488: LCD_goto_xy(8, 3);
  7309  01414A  0E03               	movlw	3
  7310  01414C  0100               	movlb	0	; () banked
  7311  01414E  6F7F               	movwf	LCD_goto_xy@y& (0+255),b
  7312  014150  0E08               	movlw	8
  7313  014152  EC68  F0AF         	call	_LCD_goto_xy
  7314                           
  7315                           ;RemoteCan.c: 489: LCD_write_string(str);
  7316  014156  0E0D               	movlw	low _str
  7317  014158  0100               	movlb	0	; () banked
  7318  01415A  6F81               	movwf	LCD_write_string@buffer& (0+255),b
  7319  01415C  0E01               	movlw	high _str
  7320  01415E  0100               	movlb	0	; () banked
  7321  014160  6F82               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  7322  014162  EC20  F0AF         	call	_LCD_write_string	;wreg free
  7323                           
  7324                           ;RemoteCan.c: 491: if (1 == 0) {
  7325  014166  D01C               	goto	l8402
  7326                           
  7327                           ;RemoteCan.c: 493: LCD_goto_xy(14, 4);
  7328  014168  0E04               	movlw	4
  7329  01416A  0100               	movlb	0	; () banked
  7330  01416C  6F7F               	movwf	LCD_goto_xy@y& (0+255),b
  7331  01416E  0E0E               	movlw	14
  7332  014170  EC68  F0AF         	call	_LCD_goto_xy
  7333                           
  7334                           ;RemoteCan.c: 494: if (parking_state == 0) {
  7335  014174  0100               	movlb	0	; () banked
  7336  014176  51E5               	movf	_parking_state& (0+255),w,b	;volatile
  7337  014178  A4D8               	btfss	status,2,c
  7338  01417A  D009               	goto	l8400
  7339                           
  7340                           ; BSR set to: 0
  7341                           ;RemoteCan.c: 495: LCD_write_message("OFF    ");
  7342  01417C  0ED4               	movlw	low STR_14
  7343  01417E  0100               	movlb	0	; () banked
  7344  014180  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  7345  014182  0EFF               	movlw	high STR_14
  7346  014184  0100               	movlb	0	; () banked
  7347  014186  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7348  014188  EC89  F0AE         	call	_LCD_write_message	;wreg free
  7349                           
  7350                           ;RemoteCan.c: 496: } else {
  7351  01418C  0012               	return	
  7352  01418E                     l8400:
  7353                           
  7354                           ;RemoteCan.c: 497: LCD_write_message("SEARCH ");
  7355  01418E  0EDC               	movlw	low STR_15
  7356  014190  0100               	movlb	0	; () banked
  7357  014192  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  7358  014194  0EFF               	movlw	high STR_15
  7359  014196  0100               	movlb	0	; () banked
  7360  014198  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7361  01419A  EC89  F0AE         	call	_LCD_write_message	;wreg free
  7362                           
  7363                           ;RemoteCan.c: 498: }
  7364                           ;RemoteCan.c: 499: } else {
  7365  01419E  0012               	return	
  7366  0141A0                     l8402:
  7367                           
  7368                           ;RemoteCan.c: 501: LCD_goto_xy(7, 4);
  7369  0141A0  0E04               	movlw	4
  7370  0141A2  0100               	movlb	0	; () banked
  7371  0141A4  6F7F               	movwf	LCD_goto_xy@y& (0+255),b
  7372  0141A6  0E07               	movlw	7
  7373  0141A8  EC68  F0AF         	call	_LCD_goto_xy
  7374                           
  7375                           ;RemoteCan.c: 502: LCD_write_integer(user_data, 0, 0x01);
  7376  0141AC  C015  F088         	movff	_user_data,LCD_write_integer@value	;volatile
  7377  0141B0  C016  F089         	movff	_user_data+1,LCD_write_integer@value+1	;volatile
  7378  0141B4  0E00               	movlw	0
  7379  0141B6  0100               	movlb	0	; () banked
  7380  0141B8  6F8A               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  7381  0141BA  0E01               	movlw	1
  7382  0141BC  0100               	movlb	0	; () banked
  7383  0141BE  6F8B               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  7384  0141C0  ECCB  F0A1         	call	_LCD_write_integer	;wreg free
  7385  0141C4  0012               	return	
  7386  0141C6  0012               	return		;funcret
  7387  0141C8                     __end_of_LCD_Handler:
  7388                           	opt stack 0
  7389                           tblptru	equ	0xFF8
  7390                           tblptrh	equ	0xFF7
  7391                           tblptrl	equ	0xFF6
  7392                           tablat	equ	0xFF5
  7393                           intcon	equ	0xFF2
  7394                           postinc0	equ	0xFEE
  7395                           wreg	equ	0xFE8
  7396                           status	equ	0xFD8
  7397                           
  7398 ;; *************** function _sprintf *****************
  7399 ;; Defined at:
  7400 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  7401 ;; Parameters:    Size  Location     Type
  7402 ;;  sp              2   81[BANK0 ] PTR unsigned char 
  7403 ;;		 -> str(12), 
  7404 ;;  f               2   83[BANK0 ] PTR const unsigned char 
  7405 ;;		 -> STR_5(5), 
  7406 ;; Auto vars:     Size  Location     Type
  7407 ;;  fval            4   20[BANK1 ] PTR const unsigned char 
  7408 ;;  tmpval          4   14[BANK1 ] struct .
  7409 ;;  val             4    8[BANK1 ] unsigned long 
  7410 ;;  cp              3    0        PTR const unsigned char 
  7411 ;;  prec            2   18[BANK1 ] int 
  7412 ;;  exp             2   12[BANK1 ] int 
  7413 ;;  flag            2    6[BANK1 ] unsigned short 
  7414 ;;  ap              2    4[BANK1 ] PTR void [1]
  7415 ;;		 -> ?_sprintf(2), 
  7416 ;;  len             2    0        unsigned int 
  7417 ;;  width           2    0        int 
  7418 ;;  c               1   24[BANK1 ] char 
  7419 ;;  d               1    0        unsigned char 
  7420 ;; Return value:  Size  Location     Type
  7421 ;;                  2   81[BANK0 ] int 
  7422 ;; Registers used:
  7423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7424 ;; Tracked objects:
  7425 ;;		On entry : 0/0
  7426 ;;		On exit  : 0/0
  7427 ;;		Unchanged: 0/0
  7428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7429 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7430 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0
  7431 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7432 ;;      Totals:         0      10      25       0       0       0       0       0       0       0       0       0       
      +0       0
  7433 ;;Total ram usage:       35 bytes
  7434 ;; Hardware stack levels used:    1
  7435 ;; Hardware stack levels required when called:    6
  7436 ;; This function calls:
  7437 ;;		___awdiv
  7438 ;;		___fladd
  7439 ;;		___flge
  7440 ;;		___flmul
  7441 ;;		___flneg
  7442 ;;		___flsub
  7443 ;;		___fltol
  7444 ;;		___lldiv
  7445 ;;		___llmod
  7446 ;;		___lltofl
  7447 ;;		___wmul
  7448 ;;		__div_to_l_
  7449 ;;		__tdiv_to_l_
  7450 ;;		_fround
  7451 ;;		_isdigit
  7452 ;;		_scale
  7453 ;; This function is called by:
  7454 ;;		_LCD_Handler
  7455 ;; This function uses a non-reentrant model
  7456 ;;
  7457                           
  7458                           	psect	text12
  7459  010B2A                     __ptext12:
  7460                           	opt stack 0
  7461  010B2A                     _sprintf:
  7462                           	opt stack 23
  7463                           
  7464                           ;doprnt.c: 494: va_list ap;
  7465                           ;doprnt.c: 499: signed char c;
  7466                           ;doprnt.c: 501: int width;
  7467                           ;doprnt.c: 504: int prec;
  7468                           ;doprnt.c: 508: unsigned short flag;
  7469                           ;doprnt.c: 515: char d;
  7470                           ;doprnt.c: 516: double fval;
  7471                           ;doprnt.c: 517: int exp;
  7472                           ;doprnt.c: 523: union {
  7473                           ;doprnt.c: 524: unsigned long vd;
  7474                           ;doprnt.c: 525: double integ;
  7475                           ;doprnt.c: 526: } tmpval;
  7476                           ;doprnt.c: 528: unsigned long val;
  7477                           ;doprnt.c: 529: unsigned len;
  7478                           ;doprnt.c: 530: const char * cp;
  7479                           ;doprnt.c: 533: *ap = __va_start();
  7480                           
  7481                           ;incstack = 0
  7482  010B2A  0EB5               	movlw	low (?_sprintf+4)
  7483  010B2C  0101               	movlb	1	; () banked
  7484  010B2E  6F25               	movwf	sprintf@ap& (0+255),b
  7485  010B30  0E00               	movlw	high (?_sprintf+4)
  7486  010B32  0101               	movlb	1	; () banked
  7487  010B34  6F26               	movwf	(sprintf@ap+1)& (0+255),b
  7488                           
  7489                           ;doprnt.c: 536: while(c = *f++) {
  7490  010B36  EF00  F08A         	goto	l8192
  7491  010B3A                     l7994:
  7492                           
  7493                           ; BSR set to: 1
  7494                           ;doprnt.c: 538: if(c != '%')
  7495  010B3A  0E25               	movlw	37
  7496  010B3C  0101               	movlb	1	; () banked
  7497  010B3E  1939               	xorwf	sprintf@c& (0+255),w,b
  7498  010B40  B4D8               	btfsc	status,2,c
  7499  010B42  D008               	goto	l8000
  7500                           
  7501                           ; BSR set to: 1
  7502                           ;doprnt.c: 540: {
  7503                           ;doprnt.c: 541: ((*sp++ = (c)));
  7504  010B44  C0B1  FFD9         	movff	sprintf@sp,fsr2l
  7505  010B48  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
  7506  010B4C  C139  FFDF         	movff	sprintf@c,indf2
  7507  010B50  EFFC  F089         	goto	l8190
  7508  010B54                     l8000:
  7509                           
  7510                           ;doprnt.c: 543: }
  7511                           ;doprnt.c: 548: flag = 0;
  7512  010B54  0E00               	movlw	0
  7513  010B56  0101               	movlb	1	; () banked
  7514  010B58  6F28               	movwf	(sprintf@flag+1)& (0+255),b
  7515  010B5A  0E00               	movlw	0
  7516  010B5C  6F27               	movwf	sprintf@flag& (0+255),b
  7517                           
  7518                           ; BSR set to: 1
  7519                           ;doprnt.c: 611: if(*f == '.') {
  7520  010B5E  C0B3  FFF6         	movff	sprintf@f,tblptrl
  7521  010B62  C0B4  FFF7         	movff	sprintf@f+1,tblptrh
  7522  010B66                     	if	0	;tblptru may be non-zero
  7523  010B66                     	endif
  7524  010B66                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7525  010B66  0E00               	movlw	low (__mediumconst shr (0+16))
  7526  010B68  6EF8               	movwf	tblptru,c
  7527  010B6A                     	endif
  7528  010B6A  0008               	tblrd		*
  7529  010B6C  50F5               	movf	tablat,w,c
  7530  010B6E  0A2E               	xorlw	46
  7531  010B70  A4D8               	btfss	status,2,c
  7532  010B72  D03F               	goto	l8014
  7533                           
  7534                           ; BSR set to: 1
  7535                           ;doprnt.c: 612: flag |= 0x4000;
  7536  010B74  0101               	movlb	1	; () banked
  7537  010B76  8D28               	bsf	(sprintf@flag+1)& (0+255),6,b
  7538                           
  7539                           ;doprnt.c: 613: f++;
  7540  010B78  0100               	movlb	0	; () banked
  7541  010B7A  4BB3               	infsnz	sprintf@f& (0+255),f,b
  7542  010B7C  2BB4               	incf	(sprintf@f+1)& (0+255),f,b
  7543                           
  7544                           ; BSR set to: 0
  7545                           ;doprnt.c: 620: {
  7546                           ;doprnt.c: 621: prec = 0;
  7547  010B7E  0E00               	movlw	0
  7548  010B80  0101               	movlb	1	; () banked
  7549  010B82  6F34               	movwf	(sprintf@prec+1)& (0+255),b
  7550  010B84  0E00               	movlw	0
  7551  010B86  6F33               	movwf	sprintf@prec& (0+255),b
  7552                           
  7553                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  7554  010B88  D026               	goto	l8012
  7555  010B8A                     l8008:
  7556                           
  7557                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  7558  010B8A  C133  F070         	movff	sprintf@prec,___wmul@multiplier
  7559  010B8E  C134  F071         	movff	sprintf@prec+1,___wmul@multiplier+1
  7560  010B92  0E00               	movlw	0
  7561  010B94  0100               	movlb	0	; () banked
  7562  010B96  6F73               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7563  010B98  0E0A               	movlw	10
  7564  010B9A  6F72               	movwf	___wmul@multiplicand& (0+255),b
  7565  010B9C  EC52  F0AE         	call	___wmul	;wreg free
  7566  010BA0  C0B3  FFF6         	movff	sprintf@f,tblptrl
  7567  010BA4  C0B4  FFF7         	movff	sprintf@f+1,tblptrh
  7568  010BA8                     	if	0	;tblptru may be non-zero
  7569  010BA8                     	endif
  7570  010BA8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7571  010BA8  0E00               	movlw	low (__mediumconst shr (0+16))
  7572  010BAA  6EF8               	movwf	tblptru,c
  7573  010BAC                     	endif
  7574  010BAC  0008               	tblrd		*
  7575  010BAE  50F5               	movf	tablat,w,c
  7576  010BB0  0100               	movlb	0	; () banked
  7577  010BB2  2770               	addwf	?___wmul& (0+255),f,b
  7578  010BB4  0E00               	movlw	0
  7579  010BB6  0100               	movlb	0	; () banked
  7580  010BB8  2371               	addwfc	(?___wmul+1)& (0+255),f,b
  7581  010BBA  0ED0               	movlw	208
  7582  010BBC  0100               	movlb	0	; () banked
  7583  010BBE  2570               	addwf	?___wmul& (0+255),w,b
  7584  010BC0  0101               	movlb	1	; () banked
  7585  010BC2  6F33               	movwf	sprintf@prec& (0+255),b
  7586  010BC4  0EFF               	movlw	255
  7587  010BC6  0100               	movlb	0	; () banked
  7588  010BC8  2171               	addwfc	(?___wmul+1)& (0+255),w,b
  7589  010BCA  0101               	movlb	1	; () banked
  7590  010BCC  6F34               	movwf	(sprintf@prec+1)& (0+255),b
  7591                           
  7592                           ; BSR set to: 1
  7593  010BCE  0100               	movlb	0	; () banked
  7594  010BD0  4BB3               	infsnz	sprintf@f& (0+255),f,b
  7595  010BD2  2BB4               	incf	(sprintf@f+1)& (0+255),f,b
  7596  010BD4  D000               	goto	l8012
  7597  010BD6                     l8012:
  7598  010BD6  C0B3  FFF6         	movff	sprintf@f,tblptrl
  7599  010BDA  C0B4  FFF7         	movff	sprintf@f+1,tblptrh
  7600  010BDE                     	if	0	;tblptru may be non-zero
  7601  010BDE                     	endif
  7602  010BDE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7603  010BDE  0E00               	movlw	low (__mediumconst shr (0+16))
  7604  010BE0  6EF8               	movwf	tblptru,c
  7605  010BE2                     	endif
  7606  010BE2  0008               	tblrd		*
  7607  010BE4  50F5               	movf	tablat,w,c
  7608  010BE6  EC09  F0AF         	call	_isdigit
  7609  010BEA  A0D8               	btfss	status,0,c
  7610  010BEC  D011               	goto	l8022
  7611  010BEE  D7CD               	goto	l8008
  7612                           
  7613                           ;doprnt.c: 624: }
  7614                           ;doprnt.c: 625: } else {
  7615  010BF0  D00F               	goto	l8022
  7616  010BF2                     l8014:
  7617                           
  7618                           ;doprnt.c: 626: prec = 0;
  7619  010BF2  0E00               	movlw	0
  7620  010BF4  0101               	movlb	1	; () banked
  7621  010BF6  6F34               	movwf	(sprintf@prec+1)& (0+255),b
  7622  010BF8  0E00               	movlw	0
  7623  010BFA  6F33               	movwf	sprintf@prec& (0+255),b
  7624                           
  7625                           ; BSR set to: 1
  7626                           ;doprnt.c: 628: flag |= 0x1000;
  7627  010BFC  0101               	movlb	1	; () banked
  7628  010BFE  8928               	bsf	(sprintf@flag+1)& (0+255),4,b
  7629                           
  7630                           ; BSR set to: 1
  7631                           ;doprnt.c: 630: }
  7632                           ;doprnt.c: 635: switch(c = *f++) {
  7633  010C00  D007               	goto	l8022
  7634                           
  7635                           ; BSR set to: 1
  7636                           ;doprnt.c: 638: goto alldone;
  7637                           
  7638                           ;doprnt.c: 637: case 0:
  7639  010C02  EF13  F08A         	goto	l8194
  7640  010C06                     l8018:
  7641                           
  7642                           ; BSR set to: 1
  7643                           ;doprnt.c: 663: flag |= 0x400;
  7644  010C06  0101               	movlb	1	; () banked
  7645  010C08  8528               	bsf	(sprintf@flag+1)& (0+255),2,b
  7646                           
  7647                           ;doprnt.c: 664: break;
  7648  010C0A  D017               	goto	l8024
  7649                           
  7650                           ; BSR set to: 1
  7651                           ;doprnt.c: 813: continue;
  7652                           
  7653                           ;doprnt.c: 802: default:
  7654  010C0C  D3F9               	goto	l8192
  7655                           
  7656                           ; BSR set to: 1
  7657                           ;doprnt.c: 822: }
  7658  010C0E  D015               	goto	l8024
  7659  010C10                     l8022:
  7660  010C10  C0B3  FFF6         	movff	sprintf@f,tblptrl
  7661  010C14  C0B4  FFF7         	movff	sprintf@f+1,tblptrh
  7662  010C18  0100               	movlb	0	; () banked
  7663  010C1A  4BB3               	infsnz	sprintf@f& (0+255),f,b
  7664  010C1C  2BB4               	incf	(sprintf@f+1)& (0+255),f,b
  7665  010C1E                     	if	0	;tblptru may be non-zero
  7666  010C1E                     	endif
  7667  010C1E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7668  010C1E  0E00               	movlw	low (__mediumconst shr (0+16))
  7669  010C20  6EF8               	movwf	tblptru,c
  7670  010C22                     	endif
  7671  010C22  0008               	tblrd		*
  7672  010C24  CFF5 F139          	movff	tablat,sprintf@c
  7673  010C28  0101               	movlb	1	; () banked
  7674  010C2A  5139               	movf	sprintf@c& (0+255),w,b
  7675                           
  7676                           ; Switch size 1, requested type "space"
  7677                           ; Number of cases is 2, Range of values is 0 to 102
  7678                           ; switch strategies available:
  7679                           ; Name         Instructions Cycles
  7680                           ; simple_byte            7     4 (average)
  7681                           ;	Chosen strategy is simple_byte
  7682  010C2C  0A00               	xorlw	0	; case 0
  7683  010C2E  B4D8               	btfsc	status,2,c
  7684  010C30  D3FA               	goto	l8194
  7685  010C32  0A66               	xorlw	102	; case 102
  7686  010C34  B4D8               	btfsc	status,2,c
  7687  010C36  D7E7               	goto	l8018
  7688  010C38  D3E3               	goto	l8192
  7689  010C3A                     l8024:
  7690                           
  7691                           ; BSR set to: 1
  7692                           ;doprnt.c: 825: if(flag & (0x700)) {
  7693  010C3A  0E07               	movlw	7
  7694  010C3C  0101               	movlb	1	; () banked
  7695  010C3E  1528               	andwf	(sprintf@flag+1)& (0+255),w,b
  7696  010C40  B4D8               	btfsc	status,2,c
  7697  010C42  D383               	goto	l8172
  7698                           
  7699                           ; BSR set to: 1
  7700                           ;doprnt.c: 827: if(flag & 0x1000)
  7701  010C44  0101               	movlb	1	; () banked
  7702  010C46  A928               	btfss	(sprintf@flag+1)& (0+255),4,b
  7703  010C48  D006               	goto	l8030
  7704                           
  7705                           ; BSR set to: 1
  7706                           ;doprnt.c: 829: prec = 6;
  7707  010C4A  0E00               	movlw	0
  7708  010C4C  0101               	movlb	1	; () banked
  7709  010C4E  6F34               	movwf	(sprintf@prec+1)& (0+255),b
  7710  010C50  0E06               	movlw	6
  7711  010C52  6F33               	movwf	sprintf@prec& (0+255),b
  7712  010C54  D000               	goto	l8030
  7713  010C56                     l8030:
  7714                           
  7715                           ; BSR set to: 1
  7716                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  7717  010C56  C125  FFD9         	movff	sprintf@ap,fsr2l
  7718  010C5A  C126  FFDA         	movff	sprintf@ap+1,fsr2h
  7719  010C5E  CFDE F135          	movff	postinc2,sprintf@fval
  7720  010C62  CFDE F136          	movff	postinc2,sprintf@fval+1
  7721  010C66  CFDE F137          	movff	postinc2,sprintf@fval+2
  7722  010C6A  CFDE F138          	movff	postinc2,sprintf@fval+3
  7723                           
  7724                           ; BSR set to: 1
  7725  010C6E  0E04               	movlw	4
  7726  010C70  0101               	movlb	1	; () banked
  7727  010C72  2725               	addwf	sprintf@ap& (0+255),f,b
  7728  010C74  0E00               	movlw	0
  7729  010C76  2326               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7730                           
  7731                           ; BSR set to: 1
  7732                           ;doprnt.c: 831: if(fval < 0.0) {
  7733  010C78  0101               	movlb	1	; () banked
  7734  010C7A  AF38               	btfss	(sprintf@fval+3)& (0+255),7,b
  7735  010C7C  D016               	goto	l8040
  7736                           
  7737                           ; BSR set to: 1
  7738                           ;doprnt.c: 832: fval = -fval;
  7739  010C7E  C135  F08E         	movff	sprintf@fval,___flneg@f1
  7740  010C82  C136  F08F         	movff	sprintf@fval+1,___flneg@f1+1
  7741  010C86  C137  F090         	movff	sprintf@fval+2,___flneg@f1+2
  7742  010C8A  C138  F091         	movff	sprintf@fval+3,___flneg@f1+3
  7743  010C8E  ECFA  F0AD         	call	___flneg	;wreg free
  7744  010C92  C08E  F135         	movff	?___flneg,sprintf@fval
  7745  010C96  C08F  F136         	movff	?___flneg+1,sprintf@fval+1
  7746  010C9A  C090  F137         	movff	?___flneg+2,sprintf@fval+2
  7747  010C9E  C091  F138         	movff	?___flneg+3,sprintf@fval+3
  7748                           
  7749                           ;doprnt.c: 833: flag |= 0x03;
  7750  010CA2  0E03               	movlw	3
  7751  010CA4  0101               	movlb	1	; () banked
  7752  010CA6  1327               	iorwf	sprintf@flag& (0+255),f,b
  7753  010CA8  D000               	goto	l8040
  7754  010CAA                     l8040:
  7755                           
  7756                           ; BSR set to: 1
  7757                           ;doprnt.c: 834: }
  7758                           ;doprnt.c: 835: exp = 0;
  7759  010CAA  0E00               	movlw	0
  7760  010CAC  0101               	movlb	1	; () banked
  7761  010CAE  6F2E               	movwf	(sprintf@exp+1)& (0+255),b
  7762  010CB0  0E00               	movlw	0
  7763  010CB2  6F2D               	movwf	sprintf@exp& (0+255),b
  7764                           
  7765                           ; BSR set to: 1
  7766                           ;doprnt.c: 836: if( fval!=0) {
  7767  010CB4  0101               	movlb	1	; () banked
  7768  010CB6  5135               	movf	sprintf@fval& (0+255),w,b
  7769  010CB8  0101               	movlb	1	; () banked
  7770  010CBA  1136               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7771  010CBC  0101               	movlb	1	; () banked
  7772  010CBE  1137               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7773  010CC0  0101               	movlb	1	; () banked
  7774  010CC2  1138               	iorwf	(sprintf@fval+3)& (0+255),w,b
  7775  010CC4  B4D8               	btfsc	status,2,c
  7776  010CC6  D090               	goto	l8068
  7777                           
  7778                           ; BSR set to: 1
  7779                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  7780  010CC8  0101               	movlb	1	; () banked
  7781  010CCA  3537               	rlcf	(sprintf@fval+2)& (0+255),w,b
  7782  010CCC  3538               	rlcf	(sprintf@fval+3)& (0+255),w,b
  7783  010CCE  0F82               	addlw	130
  7784  010CD0  0101               	movlb	1	; () banked
  7785  010CD2  6F2D               	movwf	sprintf@exp& (0+255),b
  7786  010CD4  0101               	movlb	1	; () banked
  7787  010CD6  6B2E               	clrf	(sprintf@exp+1)& (0+255),b
  7788  010CD8  0EFF               	movlw	255
  7789  010CDA  232E               	addwfc	(sprintf@exp+1)& (0+255),f,b
  7790                           
  7791                           ; BSR set to: 1
  7792                           ;doprnt.c: 838: exp--;
  7793  010CDC  0101               	movlb	1	; () banked
  7794  010CDE  072D               	decf	sprintf@exp& (0+255),f,b
  7795  010CE0  A0D8               	btfss	status,0,c
  7796  010CE2  072E               	decf	(sprintf@exp+1)& (0+255),f,b
  7797                           
  7798                           ; BSR set to: 1
  7799                           ;doprnt.c: 839: exp *= 3;
  7800  010CE4  C12D  F070         	movff	sprintf@exp,___wmul@multiplier
  7801  010CE8  C12E  F071         	movff	sprintf@exp+1,___wmul@multiplier+1
  7802  010CEC  0E00               	movlw	0
  7803  010CEE  0100               	movlb	0	; () banked
  7804  010CF0  6F73               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7805  010CF2  0E03               	movlw	3
  7806  010CF4  6F72               	movwf	___wmul@multiplicand& (0+255),b
  7807  010CF6  EC52  F0AE         	call	___wmul	;wreg free
  7808  010CFA  C070  F12D         	movff	?___wmul,sprintf@exp
  7809  010CFE  C071  F12E         	movff	?___wmul+1,sprintf@exp+1
  7810                           
  7811                           ;doprnt.c: 840: exp /= 10;
  7812  010D02  C12D  F076         	movff	sprintf@exp,___awdiv@dividend
  7813  010D06  C12E  F077         	movff	sprintf@exp+1,___awdiv@dividend+1
  7814  010D0A  0E00               	movlw	0
  7815  010D0C  0100               	movlb	0	; () banked
  7816  010D0E  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  7817  010D10  0E0A               	movlw	10
  7818  010D12  6F78               	movwf	___awdiv@divisor& (0+255),b
  7819  010D14  EC91  F0A8         	call	___awdiv	;wreg free
  7820  010D18  C076  F12D         	movff	?___awdiv,sprintf@exp
  7821  010D1C  C077  F12E         	movff	?___awdiv+1,sprintf@exp+1
  7822                           
  7823                           ;doprnt.c: 841: if(exp < 0)
  7824  010D20  0101               	movlb	1	; () banked
  7825  010D22  AF2E               	btfss	(sprintf@exp+1)& (0+255),7,b
  7826  010D24  D005               	goto	l8056
  7827                           
  7828                           ; BSR set to: 1
  7829                           ;doprnt.c: 842: exp--;
  7830  010D26  0101               	movlb	1	; () banked
  7831  010D28  072D               	decf	sprintf@exp& (0+255),f,b
  7832  010D2A  A0D8               	btfss	status,0,c
  7833  010D2C  072E               	decf	(sprintf@exp+1)& (0+255),f,b
  7834  010D2E  D000               	goto	l8056
  7835  010D30                     l8056:
  7836                           
  7837                           ; BSR set to: 1
  7838                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  7839  010D30  0101               	movlb	1	; () banked
  7840  010D32  512D               	movf	sprintf@exp& (0+255),w,b
  7841  010D34  0800               	sublw	0
  7842  010D36  EC85  F097         	call	_scale
  7843  010D3A  C08E  F12F         	movff	?_scale,sprintf@tmpval
  7844  010D3E  C08F  F130         	movff	?_scale+1,sprintf@tmpval+1
  7845  010D42  C090  F131         	movff	?_scale+2,sprintf@tmpval+2
  7846  010D46  C091  F132         	movff	?_scale+3,sprintf@tmpval+3
  7847                           
  7848                           ;doprnt.c: 847: tmpval.integ *= fval;
  7849  010D4A  C12F  F07F         	movff	sprintf@tmpval,___flmul@f1
  7850  010D4E  C130  F080         	movff	sprintf@tmpval+1,___flmul@f1+1
  7851  010D52  C131  F081         	movff	sprintf@tmpval+2,___flmul@f1+2
  7852  010D56  C132  F082         	movff	sprintf@tmpval+3,___flmul@f1+3
  7853  010D5A  C135  F083         	movff	sprintf@fval,___flmul@f2
  7854  010D5E  C136  F084         	movff	sprintf@fval+1,___flmul@f2+1
  7855  010D62  C137  F085         	movff	sprintf@fval+2,___flmul@f2+2
  7856  010D66  C138  F086         	movff	sprintf@fval+3,___flmul@f2+3
  7857  010D6A  ECC4  F0A5         	call	___flmul	;wreg free
  7858  010D6E  C07F  F12F         	movff	?___flmul,sprintf@tmpval
  7859  010D72  C080  F130         	movff	?___flmul+1,sprintf@tmpval+1
  7860  010D76  C081  F131         	movff	?___flmul+2,sprintf@tmpval+2
  7861  010D7A  C082  F132         	movff	?___flmul+3,sprintf@tmpval+3
  7862                           
  7863                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  7864  010D7E  C12F  F070         	movff	sprintf@tmpval,___flge@ff1
  7865  010D82  C130  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  7866  010D86  C131  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  7867  010D8A  C132  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  7868  010D8E  0E00               	movlw	0
  7869  010D90  0100               	movlb	0	; () banked
  7870  010D92  6F74               	movwf	___flge@ff2& (0+255),b
  7871  010D94  0E00               	movlw	0
  7872  010D96  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  7873  010D98  0E80               	movlw	128
  7874  010D9A  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  7875  010D9C  0E3F               	movlw	63
  7876  010D9E  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  7877  010DA0  EC9E  F0A7         	call	___flge	;wreg free
  7878  010DA4  0100               	movlb	0	; () banked
  7879  010DA6  B0D8               	btfsc	status,0,c
  7880  010DA8  D005               	goto	l8064
  7881                           
  7882                           ; BSR set to: 0
  7883                           ;doprnt.c: 849: exp--;
  7884  010DAA  0101               	movlb	1	; () banked
  7885  010DAC  072D               	decf	sprintf@exp& (0+255),f,b
  7886  010DAE  A0D8               	btfss	status,0,c
  7887  010DB0  072E               	decf	(sprintf@exp+1)& (0+255),f,b
  7888  010DB2  D01A               	goto	l8068
  7889  010DB4                     l8064:
  7890                           
  7891                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  7892  010DB4  C12F  F070         	movff	sprintf@tmpval,___flge@ff1
  7893  010DB8  C130  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  7894  010DBC  C131  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  7895  010DC0  C132  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  7896  010DC4  0E00               	movlw	0
  7897  010DC6  0100               	movlb	0	; () banked
  7898  010DC8  6F74               	movwf	___flge@ff2& (0+255),b
  7899  010DCA  0E00               	movlw	0
  7900  010DCC  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  7901  010DCE  0E20               	movlw	32
  7902  010DD0  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  7903  010DD2  0E41               	movlw	65
  7904  010DD4  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  7905  010DD6  EC9E  F0A7         	call	___flge	;wreg free
  7906  010DDA  0100               	movlb	0	; () banked
  7907  010DDC  A0D8               	btfss	status,0,c
  7908  010DDE  D004               	goto	l8068
  7909                           
  7910                           ; BSR set to: 0
  7911                           ;doprnt.c: 851: exp++;
  7912  010DE0  0101               	movlb	1	; () banked
  7913  010DE2  4B2D               	infsnz	sprintf@exp& (0+255),f,b
  7914  010DE4  2B2E               	incf	(sprintf@exp+1)& (0+255),f,b
  7915                           
  7916                           ; BSR set to: 1
  7917                           
  7918                           ; BSR set to: 1
  7919  010DE6  D000               	goto	l8068
  7920  010DE8                     l8068:
  7921                           
  7922                           ;doprnt.c: 852: }
  7923                           ;doprnt.c: 1112: if(prec <= 12)
  7924  010DE8  0101               	movlb	1	; () banked
  7925  010DEA  BF34               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7926  010DEC  D008               	goto	l8070
  7927  010DEE  0101               	movlb	1	; () banked
  7928  010DF0  5134               	movf	(sprintf@prec+1)& (0+255),w,b
  7929  010DF2  E124               	bnz	l8072
  7930  010DF4  0E0D               	movlw	13
  7931  010DF6  0101               	movlb	1	; () banked
  7932  010DF8  5D33               	subwf	sprintf@prec& (0+255),w,b
  7933  010DFA  B0D8               	btfsc	status,0,c
  7934  010DFC  D01F               	goto	l8072
  7935  010DFE                     l8070:
  7936                           
  7937                           ; BSR set to: 1
  7938                           ;doprnt.c: 1113: fval += fround(prec);
  7939  010DFE  C135  F09B         	movff	sprintf@fval,___fladd@f1
  7940  010E02  C136  F09C         	movff	sprintf@fval+1,___fladd@f1+1
  7941  010E06  C137  F09D         	movff	sprintf@fval+2,___fladd@f1+2
  7942  010E0A  C138  F09E         	movff	sprintf@fval+3,___fladd@f1+3
  7943  010E0E  0101               	movlb	1	; () banked
  7944  010E10  5133               	movf	sprintf@prec& (0+255),w,b
  7945  010E12  ECEE  F09B         	call	_fround
  7946  010E16  C08E  F09F         	movff	?_fround,___fladd@f2
  7947  010E1A  C08F  F0A0         	movff	?_fround+1,___fladd@f2+1
  7948  010E1E  C090  F0A1         	movff	?_fround+2,___fladd@f2+2
  7949  010E22  C091  F0A2         	movff	?_fround+3,___fladd@f2+3
  7950  010E26  ECAF  F09E         	call	___fladd	;wreg free
  7951  010E2A  C09B  F135         	movff	?___fladd,sprintf@fval
  7952  010E2E  C09C  F136         	movff	?___fladd+1,sprintf@fval+1
  7953  010E32  C09D  F137         	movff	?___fladd+2,sprintf@fval+2
  7954  010E36  C09E  F138         	movff	?___fladd+3,sprintf@fval+3
  7955  010E3A  D000               	goto	l8072
  7956  010E3C                     l8072:
  7957                           
  7958                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  7959  010E3C  0101               	movlb	1	; () banked
  7960  010E3E  BF2E               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7961  010E40  D008               	goto	l8074
  7962  010E42  0101               	movlb	1	; () banked
  7963  010E44  512E               	movf	(sprintf@exp+1)& (0+255),w,b
  7964  010E46  E130               	bnz	l8080
  7965  010E48  0E0A               	movlw	10
  7966  010E4A  0101               	movlb	1	; () banked
  7967  010E4C  5D2D               	subwf	sprintf@exp& (0+255),w,b
  7968  010E4E  B0D8               	btfsc	status,0,c
  7969  010E50  D02B               	goto	l8080
  7970  010E52                     l8074:
  7971                           
  7972                           ; BSR set to: 1
  7973  010E52  0101               	movlb	1	; () banked
  7974  010E54  5135               	movf	sprintf@fval& (0+255),w,b
  7975  010E56  0101               	movlb	1	; () banked
  7976  010E58  1136               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7977  010E5A  0101               	movlb	1	; () banked
  7978  010E5C  1137               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7979  010E5E  0101               	movlb	1	; () banked
  7980  010E60  1138               	iorwf	(sprintf@fval+3)& (0+255),w,b
  7981  010E62  B4D8               	btfsc	status,2,c
  7982  010E64  D08C               	goto	l8094
  7983                           
  7984                           ; BSR set to: 1
  7985  010E66  C135  F0A7         	movff	sprintf@fval,___fltol@f1
  7986  010E6A  C136  F0A8         	movff	sprintf@fval+1,___fltol@f1+1
  7987  010E6E  C137  F0A9         	movff	sprintf@fval+2,___fltol@f1+2
  7988  010E72  C138  F0AA         	movff	sprintf@fval+3,___fltol@f1+3
  7989  010E76  EC11  F0A7         	call	___fltol	;wreg free
  7990  010E7A  0100               	movlb	0	; () banked
  7991  010E7C  51A7               	movf	?___fltol& (0+255),w,b
  7992  010E7E  0100               	movlb	0	; () banked
  7993  010E80  11A8               	iorwf	(?___fltol+1)& (0+255),w,b
  7994  010E82  0100               	movlb	0	; () banked
  7995  010E84  11A9               	iorwf	(?___fltol+2)& (0+255),w,b
  7996  010E86  0100               	movlb	0	; () banked
  7997  010E88  11AA               	iorwf	(?___fltol+3)& (0+255),w,b
  7998  010E8A  A4D8               	btfss	status,2,c
  7999  010E8C  D078               	goto	l8094
  8000                           
  8001                           ; BSR set to: 0
  8002  010E8E  0101               	movlb	1	; () banked
  8003  010E90  BF2E               	btfsc	(sprintf@exp+1)& (0+255),7,b
  8004  010E92  D075               	goto	l8094
  8005  010E94  0101               	movlb	1	; () banked
  8006  010E96  512E               	movf	(sprintf@exp+1)& (0+255),w,b
  8007  010E98  E107               	bnz	l8080
  8008  010E9A  0E02               	movlw	2
  8009  010E9C  0101               	movlb	1	; () banked
  8010  010E9E  5D2D               	subwf	sprintf@exp& (0+255),w,b
  8011  010EA0  B0D8               	btfsc	status,0,c
  8012  010EA2  D002               	goto	l8080
  8013  010EA4  D06C               	goto	l8094
  8014  010EA6  D000               	goto	l8080
  8015  010EA8                     l8080:
  8016                           
  8017                           ; BSR set to: 1
  8018                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  8019  010EA8  C12F  F070         	movff	sprintf@tmpval,___flge@ff1
  8020  010EAC  C130  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  8021  010EB0  C131  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  8022  010EB4  C132  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  8023  010EB8  0E5F               	movlw	95
  8024  010EBA  0100               	movlb	0	; () banked
  8025  010EBC  6F74               	movwf	___flge@ff2& (0+255),b
  8026  010EBE  0E70               	movlw	112
  8027  010EC0  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  8028  010EC2  0E89               	movlw	137
  8029  010EC4  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  8030  010EC6  0E40               	movlw	64
  8031  010EC8  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  8032  010ECA  EC9E  F0A7         	call	___flge	;wreg free
  8033  010ECE  0100               	movlb	0	; () banked
  8034  010ED0  B0D8               	btfsc	status,0,c
  8035  010ED2  D003               	goto	l8084
  8036                           
  8037                           ; BSR set to: 0
  8038                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  8039  010ED4  0101               	movlb	1	; () banked
  8040  010ED6  0EF7               	movlw	247
  8041  010ED8  D002               	goto	L4
  8042  010EDA                     l8084:
  8043                           
  8044                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  8045  010EDA  0101               	movlb	1	; () banked
  8046  010EDC  0EF8               	movlw	248
  8047  010EDE                     L4:
  8048  010EDE  272D               	addwf	sprintf@exp& (0+255),f,b
  8049  010EE0  0EFF               	movlw	255
  8050  010EE2  232E               	addwfc	(sprintf@exp+1)& (0+255),f,b
  8051  010EE4  D000               	goto	l8086
  8052  010EE6                     l8086:
  8053                           
  8054                           ; BSR set to: 1
  8055                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  8056  010EE6  0101               	movlb	1	; () banked
  8057  010EE8  512D               	movf	sprintf@exp& (0+255),w,b
  8058  010EEA  EC85  F097         	call	_scale
  8059  010EEE  C08E  F12F         	movff	?_scale,sprintf@tmpval
  8060  010EF2  C08F  F130         	movff	?_scale+1,sprintf@tmpval+1
  8061  010EF6  C090  F131         	movff	?_scale+2,sprintf@tmpval+2
  8062  010EFA  C091  F132         	movff	?_scale+3,sprintf@tmpval+3
  8063  010EFE  C135  F070         	movff	sprintf@fval,__div_to_l_@f1
  8064  010F02  C136  F071         	movff	sprintf@fval+1,__div_to_l_@f1+1
  8065  010F06  C137  F072         	movff	sprintf@fval+2,__div_to_l_@f1+2
  8066  010F0A  C138  F073         	movff	sprintf@fval+3,__div_to_l_@f1+3
  8067  010F0E  C12F  F074         	movff	sprintf@tmpval,__div_to_l_@f2
  8068  010F12  C130  F075         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  8069  010F16  C131  F076         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  8070  010F1A  C132  F077         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  8071  010F1E  EC83  F0A3         	call	__div_to_l_	;wreg free
  8072  010F22  C070  F129         	movff	?__div_to_l_,sprintf@val
  8073  010F26  C071  F12A         	movff	?__div_to_l_+1,sprintf@val+1
  8074  010F2A  C072  F12B         	movff	?__div_to_l_+2,sprintf@val+2
  8075  010F2E  C073  F12C         	movff	?__div_to_l_+3,sprintf@val+3
  8076  010F32  D01B               	goto	l8092
  8077  010F34  C135  F070         	movff	sprintf@fval,__tdiv_to_l_@f1
  8078  010F38  C136  F071         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  8079  010F3C  C137  F072         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  8080  010F40  C138  F073         	movff	sprintf@fval+3,__tdiv_to_l_@f1+3
  8081  010F44  C12F  F074         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  8082  010F48  C130  F075         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  8083  010F4C  C131  F076         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  8084  010F50  C132  F077         	movff	sprintf@tmpval+3,__tdiv_to_l_@f2+3
  8085  010F54  ECB0  F0A2         	call	__tdiv_to_l_	;wreg free
  8086  010F58  C070  F129         	movff	?__tdiv_to_l_,sprintf@val
  8087  010F5C  C071  F12A         	movff	?__tdiv_to_l_+1,sprintf@val+1
  8088  010F60  C072  F12B         	movff	?__tdiv_to_l_+2,sprintf@val+2
  8089  010F64  C073  F12C         	movff	?__tdiv_to_l_+3,sprintf@val+3
  8090  010F68  D000               	goto	l8092
  8091  010F6A                     l8092:
  8092                           
  8093                           ;doprnt.c: 1129: fval = 0.0;
  8094  010F6A  0E00               	movlw	0
  8095  010F6C  0101               	movlb	1	; () banked
  8096  010F6E  6F35               	movwf	sprintf@fval& (0+255),b
  8097  010F70  0E00               	movlw	0
  8098  010F72  6F36               	movwf	(sprintf@fval+1)& (0+255),b
  8099  010F74  0E00               	movlw	0
  8100  010F76  6F37               	movwf	(sprintf@fval+2)& (0+255),b
  8101  010F78  0E00               	movlw	0
  8102  010F7A  6F38               	movwf	(sprintf@fval+3)& (0+255),b
  8103                           
  8104                           ;doprnt.c: 1130: } else {
  8105  010F7C  D03C               	goto	l8098
  8106  010F7E                     l8094:
  8107                           
  8108                           ;doprnt.c: 1131: val = (unsigned long)fval;
  8109  010F7E  C135  F0A7         	movff	sprintf@fval,___fltol@f1
  8110  010F82  C136  F0A8         	movff	sprintf@fval+1,___fltol@f1+1
  8111  010F86  C137  F0A9         	movff	sprintf@fval+2,___fltol@f1+2
  8112  010F8A  C138  F0AA         	movff	sprintf@fval+3,___fltol@f1+3
  8113  010F8E  EC11  F0A7         	call	___fltol	;wreg free
  8114  010F92  C0A7  F129         	movff	?___fltol,sprintf@val
  8115  010F96  C0A8  F12A         	movff	?___fltol+1,sprintf@val+1
  8116  010F9A  C0A9  F12B         	movff	?___fltol+2,sprintf@val+2
  8117  010F9E  C0AA  F12C         	movff	?___fltol+3,sprintf@val+3
  8118                           
  8119                           ;doprnt.c: 1132: fval -= (double)val;
  8120  010FA2  C135  F0A7         	movff	sprintf@fval,___flsub@f1
  8121  010FA6  C136  F0A8         	movff	sprintf@fval+1,___flsub@f1+1
  8122  010FAA  C137  F0A9         	movff	sprintf@fval+2,___flsub@f1+2
  8123  010FAE  C138  F0AA         	movff	sprintf@fval+3,___flsub@f1+3
  8124  010FB2  C129  F07A         	movff	sprintf@val,___lltofl@c
  8125  010FB6  C12A  F07B         	movff	sprintf@val+1,___lltofl@c+1
  8126  010FBA  C12B  F07C         	movff	sprintf@val+2,___lltofl@c+2
  8127  010FBE  C12C  F07D         	movff	sprintf@val+3,___lltofl@c+3
  8128  010FC2  ECA4  F0AE         	call	___lltofl	;wreg free
  8129  010FC6  C07A  F0AB         	movff	?___lltofl,___flsub@f2
  8130  010FCA  C07B  F0AC         	movff	?___lltofl+1,___flsub@f2+1
  8131  010FCE  C07C  F0AD         	movff	?___lltofl+2,___flsub@f2+2
  8132  010FD2  C07D  F0AE         	movff	?___lltofl+3,___flsub@f2+3
  8133  010FD6  EC15  F0AD         	call	___flsub	;wreg free
  8134  010FDA  C0A7  F135         	movff	?___flsub,sprintf@fval
  8135  010FDE  C0A8  F136         	movff	?___flsub+1,sprintf@fval+1
  8136  010FE2  C0A9  F137         	movff	?___flsub+2,sprintf@fval+2
  8137  010FE6  C0AA  F138         	movff	?___flsub+3,sprintf@fval+3
  8138                           
  8139                           ;doprnt.c: 1133: exp = 0;
  8140  010FEA  0E00               	movlw	0
  8141  010FEC  0101               	movlb	1	; () banked
  8142  010FEE  6F2E               	movwf	(sprintf@exp+1)& (0+255),b
  8143  010FF0  0E00               	movlw	0
  8144  010FF2  6F2D               	movwf	sprintf@exp& (0+255),b
  8145  010FF4  D000               	goto	l8098
  8146  010FF6                     l8098:
  8147                           
  8148                           ; BSR set to: 1
  8149                           ;doprnt.c: 1134: }
  8150                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  8151  010FF6  0E01               	movlw	1
  8152  010FF8  0101               	movlb	1	; () banked
  8153  010FFA  6F39               	movwf	sprintf@c& (0+255),b
  8154  010FFC                     l8100:
  8155                           
  8156                           ; BSR set to: 1
  8157  010FFC  0E0A               	movlw	10
  8158  010FFE  0101               	movlb	1	; () banked
  8159  011000  1939               	xorwf	sprintf@c& (0+255),w,b
  8160  011002  B4D8               	btfsc	status,2,c
  8161  011004  D025               	goto	l8112
  8162  011006  D001               	goto	l8104
  8163                           
  8164                           ; BSR set to: 1
  8165  011008  D023               	goto	l8112
  8166  01100A                     l8104:
  8167                           
  8168                           ; BSR set to: 1
  8169                           ;doprnt.c: 1137: if(val < dpowers[c])
  8170  01100A  0101               	movlb	1	; () banked
  8171  01100C  5139               	movf	sprintf@c& (0+255),w,b
  8172  01100E  0D04               	mullw	4
  8173  011010  0E07               	movlw	low _dpowers
  8174  011012  24F3               	addwf	prodl,w,c
  8175  011014  6EF6               	movwf	tblptrl,c
  8176  011016  0EFE               	movlw	high _dpowers
  8177  011018  20F4               	addwfc	prodh,w,c
  8178  01101A  6EF7               	movwf	tblptrh,c
  8179  01101C                     	if	1	;There are 3 active tblptr bytes
  8180  01101C  6AF8               	clrf	tblptru,c
  8181  01101E  0E00               	movlw	low (__mediumconst shr (0+16))
  8182  011020  22F8               	addwfc	tblptru,f,c
  8183  011022                     	endif
  8184  011022  0009               	tblrd		*+
  8185  011024  50F5               	movf	tablat,w,c
  8186  011026  0101               	movlb	1	; () banked
  8187  011028  5D29               	subwf	sprintf@val& (0+255),w,b
  8188  01102A  0009               	tblrd		*+
  8189  01102C  50F5               	movf	tablat,w,c
  8190  01102E  0101               	movlb	1	; () banked
  8191  011030  592A               	subwfb	(sprintf@val+1)& (0+255),w,b
  8192  011032  0009               	tblrd		*+
  8193  011034  50F5               	movf	tablat,w,c
  8194  011036  0101               	movlb	1	; () banked
  8195  011038  592B               	subwfb	(sprintf@val+2)& (0+255),w,b
  8196  01103A  0009               	tblrd		*+
  8197  01103C  50F5               	movf	tablat,w,c
  8198  01103E  0101               	movlb	1	; () banked
  8199  011040  592C               	subwfb	(sprintf@val+3)& (0+255),w,b
  8200  011042  A0D8               	btfss	status,0,c
  8201  011044  D005               	goto	l8112
  8202  011046  D001               	goto	l8108
  8203                           
  8204                           ; BSR set to: 1
  8205                           ;doprnt.c: 1138: break;
  8206  011048  D003               	goto	l8112
  8207  01104A                     l8108:
  8208                           
  8209                           ; BSR set to: 1
  8210  01104A  0101               	movlb	1	; () banked
  8211  01104C  2B39               	incf	sprintf@c& (0+255),f,b
  8212  01104E  D7D6               	goto	l8100
  8213  011050                     l8112:
  8214                           
  8215                           ; BSR set to: 1
  8216                           ;doprnt.c: 1175: {
  8217                           ;doprnt.c: 1188: if(flag & 0x03)
  8218  011050  0E03               	movlw	3
  8219  011052  0101               	movlb	1	; () banked
  8220  011054  1527               	andwf	sprintf@flag& (0+255),w,b
  8221  011056  0100               	movlb	0	; () banked
  8222  011058  6FB9               	movwf	??_sprintf& (0+255),b
  8223  01105A  0E00               	movlw	0
  8224  01105C  0101               	movlb	1	; () banked
  8225  01105E  1528               	andwf	(sprintf@flag+1)& (0+255),w,b
  8226  011060  0100               	movlb	0	; () banked
  8227  011062  6FBA               	movwf	(??_sprintf+1)& (0+255),b
  8228  011064  0100               	movlb	0	; () banked
  8229  011066  51B9               	movf	??_sprintf& (0+255),w,b
  8230  011068  0100               	movlb	0	; () banked
  8231  01106A  11BA               	iorwf	(??_sprintf+1)& (0+255),w,b
  8232  01106C  B4D8               	btfsc	status,2,c
  8233  01106E  D058               	goto	l8126
  8234                           
  8235                           ; BSR set to: 0
  8236                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  8237  011070  C0B1  FFD9         	movff	sprintf@sp,fsr2l
  8238  011074  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
  8239  011078  0E2D               	movlw	45
  8240  01107A  D050               	goto	L5
  8241  01107C                     l8116:
  8242                           
  8243                           ; BSR set to: 0
  8244  01107C  0100               	movlb	0	; () banked
  8245  01107E  4BB1               	infsnz	sprintf@sp& (0+255),f,b
  8246  011080  2BB2               	incf	(sprintf@sp+1)& (0+255),f,b
  8247                           
  8248                           ; BSR set to: 0
  8249                           ;doprnt.c: 1195: }
  8250                           ;doprnt.c: 1196: while(c--) {
  8251  011082  D04E               	goto	l8126
  8252  011084                     l8118:
  8253                           
  8254                           ;doprnt.c: 1200: {
  8255                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  8256  011084  C129  F070         	movff	sprintf@val,___lldiv@dividend
  8257  011088  C12A  F071         	movff	sprintf@val+1,___lldiv@dividend+1
  8258  01108C  C12B  F072         	movff	sprintf@val+2,___lldiv@dividend+2
  8259  011090  C12C  F073         	movff	sprintf@val+3,___lldiv@dividend+3
  8260  011094  0101               	movlb	1	; () banked
  8261  011096  5139               	movf	sprintf@c& (0+255),w,b
  8262  011098  0D04               	mullw	4
  8263  01109A  0E07               	movlw	low _dpowers
  8264  01109C  24F3               	addwf	prodl,w,c
  8265  01109E  6EF6               	movwf	tblptrl,c
  8266  0110A0  0EFE               	movlw	high _dpowers
  8267  0110A2  20F4               	addwfc	prodh,w,c
  8268  0110A4  6EF7               	movwf	tblptrh,c
  8269  0110A6                     	if	1	;There are 3 active tblptr bytes
  8270  0110A6  6AF8               	clrf	tblptru,c
  8271  0110A8  0E00               	movlw	low (__mediumconst shr (0+16))
  8272  0110AA  22F8               	addwfc	tblptru,f,c
  8273  0110AC                     	endif
  8274  0110AC  0009               	tblrd		*+
  8275  0110AE  CFF5 F074          	movff	tablat,___lldiv@divisor
  8276  0110B2  0009               	tblrd		*+
  8277  0110B4  CFF5 F075          	movff	tablat,___lldiv@divisor+1
  8278  0110B8  0009               	tblrd		*+
  8279  0110BA  CFF5 F076          	movff	tablat,___lldiv@divisor+2
  8280  0110BE  000A               	tblrd		*-
  8281  0110C0  CFF5 F077          	movff	tablat,___lldiv@divisor+3
  8282  0110C4  ECF9  F0A8         	call	___lldiv	;wreg free
  8283  0110C8  C070  F12F         	movff	?___lldiv,sprintf@tmpval
  8284  0110CC  C071  F130         	movff	?___lldiv+1,sprintf@tmpval+1
  8285  0110D0  C072  F131         	movff	?___lldiv+2,sprintf@tmpval+2
  8286  0110D4  C073  F132         	movff	?___lldiv+3,sprintf@tmpval+3
  8287                           
  8288                           ;doprnt.c: 1202: tmpval.vd %= 10;
  8289  0110D8  C12F  F070         	movff	sprintf@tmpval,___llmod@dividend
  8290  0110DC  C130  F071         	movff	sprintf@tmpval+1,___llmod@dividend+1
  8291  0110E0  C131  F072         	movff	sprintf@tmpval+2,___llmod@dividend+2
  8292  0110E4  C132  F073         	movff	sprintf@tmpval+3,___llmod@dividend+3
  8293  0110E8  0E0A               	movlw	10
  8294  0110EA  0100               	movlb	0	; () banked
  8295  0110EC  6F74               	movwf	___llmod@divisor& (0+255),b
  8296  0110EE  0E00               	movlw	0
  8297  0110F0  6F75               	movwf	(___llmod@divisor+1)& (0+255),b
  8298  0110F2  0E00               	movlw	0
  8299  0110F4  6F76               	movwf	(___llmod@divisor+2)& (0+255),b
  8300  0110F6  0E00               	movlw	0
  8301  0110F8  6F77               	movwf	(___llmod@divisor+3)& (0+255),b
  8302  0110FA  ECCA  F0AA         	call	___llmod	;wreg free
  8303  0110FE  C070  F12F         	movff	?___llmod,sprintf@tmpval
  8304  011102  C071  F130         	movff	?___llmod+1,sprintf@tmpval+1
  8305  011106  C072  F131         	movff	?___llmod+2,sprintf@tmpval+2
  8306  01110A  C073  F132         	movff	?___llmod+3,sprintf@tmpval+3
  8307                           
  8308                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  8309  01110E  0101               	movlb	1	; () banked
  8310  011110  512F               	movf	sprintf@tmpval& (0+255),w,b
  8311  011112  0F30               	addlw	48
  8312  011114  C0B1  FFD9         	movff	sprintf@sp,fsr2l
  8313  011118  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
  8314  01111C                     L5:
  8315  01111C  6EDF               	movwf	indf2,c
  8316  01111E  D7AE               	goto	l8116
  8317  011120                     l8126:
  8318                           
  8319                           ; BSR set to: 0
  8320  011120  0101               	movlb	1	; () banked
  8321  011122  0739               	decf	sprintf@c& (0+255),f,b
  8322  011124  0101               	movlb	1	; () banked
  8323  011126  2939               	incf	sprintf@c& (0+255),w,b
  8324  011128  B4D8               	btfsc	status,2,c
  8325  01112A  D010               	goto	l8134
  8326  01112C  D7AB               	goto	l8118
  8327                           
  8328                           ; BSR set to: 1
  8329                           ;doprnt.c: 1204: }
  8330                           ;doprnt.c: 1206: }
  8331                           ;doprnt.c: 1207: while(exp > 0) {
  8332  01112E  D00E               	goto	l8134
  8333  011130                     l8128:
  8334                           
  8335                           ; BSR set to: 1
  8336                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  8337  011130  C0B1  FFD9         	movff	sprintf@sp,fsr2l
  8338  011134  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
  8339  011138  0E30               	movlw	48
  8340  01113A  6EDF               	movwf	indf2,c
  8341                           
  8342                           ; BSR set to: 1
  8343  01113C  0100               	movlb	0	; () banked
  8344  01113E  4BB1               	infsnz	sprintf@sp& (0+255),f,b
  8345  011140  2BB2               	incf	(sprintf@sp+1)& (0+255),f,b
  8346                           
  8347                           ; BSR set to: 0
  8348                           ;doprnt.c: 1209: exp--;
  8349  011142  0101               	movlb	1	; () banked
  8350  011144  072D               	decf	sprintf@exp& (0+255),f,b
  8351  011146  A0D8               	btfss	status,0,c
  8352  011148  072E               	decf	(sprintf@exp+1)& (0+255),f,b
  8353  01114A  D000               	goto	l8134
  8354  01114C                     l8134:
  8355                           
  8356                           ; BSR set to: 1
  8357  01114C  0101               	movlb	1	; () banked
  8358  01114E  BF2E               	btfsc	(sprintf@exp+1)& (0+255),7,b
  8359  011150  D007               	goto	l8136
  8360  011152  0101               	movlb	1	; () banked
  8361  011154  512E               	movf	(sprintf@exp+1)& (0+255),w,b
  8362  011156  E1EC               	bnz	l8128
  8363  011158  0101               	movlb	1	; () banked
  8364  01115A  052D               	decf	sprintf@exp& (0+255),w,b
  8365  01115C  B0D8               	btfsc	status,0,c
  8366  01115E  D7E8               	goto	l8128
  8367  011160                     l8136:
  8368                           
  8369                           ; BSR set to: 1
  8370                           ;doprnt.c: 1210: }
  8371                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  8372  011160  0101               	movlb	1	; () banked
  8373  011162  BF34               	btfsc	(sprintf@prec+1)& (0+255),7,b
  8374  011164  D00C               	goto	l1050
  8375  011166  0101               	movlb	1	; () banked
  8376  011168  5134               	movf	(sprintf@prec+1)& (0+255),w,b
  8377  01116A  E105               	bnz	u10300
  8378  01116C  0E09               	movlw	9
  8379  01116E  0101               	movlb	1	; () banked
  8380  011170  5D33               	subwf	sprintf@prec& (0+255),w,b
  8381  011172  A0D8               	btfss	status,0,c
  8382  011174  D004               	goto	l1050
  8383  011176                     u10300:
  8384                           
  8385                           ; BSR set to: 1
  8386                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  8387  011176  0E08               	movlw	8
  8388  011178  0101               	movlb	1	; () banked
  8389  01117A  6F39               	movwf	sprintf@c& (0+255),b
  8390  01117C  D003               	goto	l8140
  8391  01117E                     l1050:
  8392                           
  8393                           ; BSR set to: 1
  8394                           ;doprnt.c: 1213: else
  8395                           ;doprnt.c: 1214: c = prec;
  8396  01117E  C133  F139         	movff	sprintf@prec,sprintf@c
  8397  011182  D000               	goto	l8140
  8398  011184                     l8140:
  8399                           
  8400                           ; BSR set to: 1
  8401                           ;doprnt.c: 1215: prec -= c;
  8402  011184  0101               	movlb	1	; () banked
  8403  011186  5139               	movf	sprintf@c& (0+255),w,b
  8404  011188  0101               	movlb	1	; () banked
  8405  01118A  5F33               	subwf	sprintf@prec& (0+255),f,b
  8406  01118C  0E00               	movlw	0
  8407  01118E  0101               	movlb	1	; () banked
  8408  011190  BF39               	btfsc	sprintf@c& (0+255),7,b
  8409  011192  0EFF               	movlw	255
  8410  011194  0101               	movlb	1	; () banked
  8411  011196  5B34               	subwfb	(sprintf@prec+1)& (0+255),f,b
  8412                           
  8413                           ; BSR set to: 1
  8414                           ;doprnt.c: 1219: if(c)
  8415  011198  0101               	movlb	1	; () banked
  8416  01119A  5139               	movf	sprintf@c& (0+255),w,b
  8417  01119C  0101               	movlb	1	; () banked
  8418  01119E  B4D8               	btfsc	status,2,c
  8419  0111A0  D00A               	goto	l8148
  8420                           
  8421                           ; BSR set to: 1
  8422                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  8423  0111A2  C0B1  FFD9         	movff	sprintf@sp,fsr2l
  8424  0111A6  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
  8425  0111AA  0E2E               	movlw	46
  8426  0111AC  6EDF               	movwf	indf2,c
  8427                           
  8428                           ; BSR set to: 1
  8429  0111AE  0100               	movlb	0	; () banked
  8430  0111B0  4BB1               	infsnz	sprintf@sp& (0+255),f,b
  8431  0111B2  2BB2               	incf	(sprintf@sp+1)& (0+255),f,b
  8432  0111B4  D000               	goto	l8148
  8433  0111B6                     l8148:
  8434                           
  8435                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  8436  0111B6  0101               	movlb	1	; () banked
  8437  0111B8  5139               	movf	sprintf@c& (0+255),w,b
  8438  0111BA  EC85  F097         	call	_scale
  8439  0111BE  C08E  F121         	movff	?_scale,_sprintf$4237
  8440  0111C2  C08F  F122         	movff	?_scale+1,_sprintf$4237+1
  8441  0111C6  C090  F123         	movff	?_scale+2,_sprintf$4237+2
  8442  0111CA  C091  F124         	movff	?_scale+3,_sprintf$4237+3
  8443                           
  8444                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  8445  0111CE  C135  F083         	movff	sprintf@fval,___flmul@f2
  8446  0111D2  C136  F084         	movff	sprintf@fval+1,___flmul@f2+1
  8447  0111D6  C137  F085         	movff	sprintf@fval+2,___flmul@f2+2
  8448  0111DA  C138  F086         	movff	sprintf@fval+3,___flmul@f2+3
  8449  0111DE  C121  F07F         	movff	_sprintf$4237,___flmul@f1
  8450  0111E2  C122  F080         	movff	_sprintf$4237+1,___flmul@f1+1
  8451  0111E6  C123  F081         	movff	_sprintf$4237+2,___flmul@f1+2
  8452  0111EA  C124  F082         	movff	_sprintf$4237+3,___flmul@f1+3
  8453  0111EE  ECC4  F0A5         	call	___flmul	;wreg free
  8454  0111F2  C07F  F0A7         	movff	?___flmul,___fltol@f1
  8455  0111F6  C080  F0A8         	movff	?___flmul+1,___fltol@f1+1
  8456  0111FA  C081  F0A9         	movff	?___flmul+2,___fltol@f1+2
  8457  0111FE  C082  F0AA         	movff	?___flmul+3,___fltol@f1+3
  8458  011202  EC11  F0A7         	call	___fltol	;wreg free
  8459  011206  C0A7  F129         	movff	?___fltol,sprintf@val
  8460  01120A  C0A8  F12A         	movff	?___fltol+1,sprintf@val+1
  8461  01120E  C0A9  F12B         	movff	?___fltol+2,sprintf@val+2
  8462  011212  C0AA  F12C         	movff	?___fltol+3,sprintf@val+3
  8463                           
  8464                           ;doprnt.c: 1228: while(c--) {
  8465  011216  D07B               	goto	l8162
  8466  011218                     l8152:
  8467                           
  8468                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  8469  011218  C129  F070         	movff	sprintf@val,___lldiv@dividend
  8470  01121C  C12A  F071         	movff	sprintf@val+1,___lldiv@dividend+1
  8471  011220  C12B  F072         	movff	sprintf@val+2,___lldiv@dividend+2
  8472  011224  C12C  F073         	movff	sprintf@val+3,___lldiv@dividend+3
  8473  011228  0101               	movlb	1	; () banked
  8474  01122A  5139               	movf	sprintf@c& (0+255),w,b
  8475  01122C  0D04               	mullw	4
  8476  01122E  0E07               	movlw	low _dpowers
  8477  011230  24F3               	addwf	prodl,w,c
  8478  011232  6EF6               	movwf	tblptrl,c
  8479  011234  0EFE               	movlw	high _dpowers
  8480  011236  20F4               	addwfc	prodh,w,c
  8481  011238  6EF7               	movwf	tblptrh,c
  8482  01123A                     	if	1	;There are 3 active tblptr bytes
  8483  01123A  6AF8               	clrf	tblptru,c
  8484  01123C  0E00               	movlw	low (__mediumconst shr (0+16))
  8485  01123E  22F8               	addwfc	tblptru,f,c
  8486  011240                     	endif
  8487  011240  0009               	tblrd		*+
  8488  011242  CFF5 F074          	movff	tablat,___lldiv@divisor
  8489  011246  0009               	tblrd		*+
  8490  011248  CFF5 F075          	movff	tablat,___lldiv@divisor+1
  8491  01124C  0009               	tblrd		*+
  8492  01124E  CFF5 F076          	movff	tablat,___lldiv@divisor+2
  8493  011252  000A               	tblrd		*-
  8494  011254  CFF5 F077          	movff	tablat,___lldiv@divisor+3
  8495  011258  ECF9  F0A8         	call	___lldiv	;wreg free
  8496  01125C  C070  F12F         	movff	?___lldiv,sprintf@tmpval
  8497  011260  C071  F130         	movff	?___lldiv+1,sprintf@tmpval+1
  8498  011264  C072  F131         	movff	?___lldiv+2,sprintf@tmpval+2
  8499  011268  C073  F132         	movff	?___lldiv+3,sprintf@tmpval+3
  8500                           
  8501                           ;doprnt.c: 1230: tmpval.vd %= 10;
  8502  01126C  C12F  F070         	movff	sprintf@tmpval,___llmod@dividend
  8503  011270  C130  F071         	movff	sprintf@tmpval+1,___llmod@dividend+1
  8504  011274  C131  F072         	movff	sprintf@tmpval+2,___llmod@dividend+2
  8505  011278  C132  F073         	movff	sprintf@tmpval+3,___llmod@dividend+3
  8506  01127C  0E0A               	movlw	10
  8507  01127E  0100               	movlb	0	; () banked
  8508  011280  6F74               	movwf	___llmod@divisor& (0+255),b
  8509  011282  0E00               	movlw	0
  8510  011284  6F75               	movwf	(___llmod@divisor+1)& (0+255),b
  8511  011286  0E00               	movlw	0
  8512  011288  6F76               	movwf	(___llmod@divisor+2)& (0+255),b
  8513  01128A  0E00               	movlw	0
  8514  01128C  6F77               	movwf	(___llmod@divisor+3)& (0+255),b
  8515  01128E  ECCA  F0AA         	call	___llmod	;wreg free
  8516  011292  C070  F12F         	movff	?___llmod,sprintf@tmpval
  8517  011296  C071  F130         	movff	?___llmod+1,sprintf@tmpval+1
  8518  01129A  C072  F131         	movff	?___llmod+2,sprintf@tmpval+2
  8519  01129E  C073  F132         	movff	?___llmod+3,sprintf@tmpval+3
  8520                           
  8521                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  8522  0112A2  0101               	movlb	1	; () banked
  8523  0112A4  512F               	movf	sprintf@tmpval& (0+255),w,b
  8524  0112A6  0F30               	addlw	48
  8525  0112A8  C0B1  FFD9         	movff	sprintf@sp,fsr2l
  8526  0112AC  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
  8527  0112B0  6EDF               	movwf	indf2,c
  8528                           
  8529                           ; BSR set to: 1
  8530  0112B2  0100               	movlb	0	; () banked
  8531  0112B4  4BB1               	infsnz	sprintf@sp& (0+255),f,b
  8532  0112B6  2BB2               	incf	(sprintf@sp+1)& (0+255),f,b
  8533                           
  8534                           ; BSR set to: 0
  8535                           ;doprnt.c: 1232: val %= dpowers[c];
  8536  0112B8  C129  F070         	movff	sprintf@val,___llmod@dividend
  8537  0112BC  C12A  F071         	movff	sprintf@val+1,___llmod@dividend+1
  8538  0112C0  C12B  F072         	movff	sprintf@val+2,___llmod@dividend+2
  8539  0112C4  C12C  F073         	movff	sprintf@val+3,___llmod@dividend+3
  8540  0112C8  0101               	movlb	1	; () banked
  8541  0112CA  5139               	movf	sprintf@c& (0+255),w,b
  8542  0112CC  0D04               	mullw	4
  8543  0112CE  0E07               	movlw	low _dpowers
  8544  0112D0  24F3               	addwf	prodl,w,c
  8545  0112D2  6EF6               	movwf	tblptrl,c
  8546  0112D4  0EFE               	movlw	high _dpowers
  8547  0112D6  20F4               	addwfc	prodh,w,c
  8548  0112D8  6EF7               	movwf	tblptrh,c
  8549  0112DA                     	if	1	;There are 3 active tblptr bytes
  8550  0112DA  6AF8               	clrf	tblptru,c
  8551  0112DC  0E00               	movlw	low (__mediumconst shr (0+16))
  8552  0112DE  22F8               	addwfc	tblptru,f,c
  8553  0112E0                     	endif
  8554  0112E0  0009               	tblrd		*+
  8555  0112E2  CFF5 F074          	movff	tablat,___llmod@divisor
  8556  0112E6  0009               	tblrd		*+
  8557  0112E8  CFF5 F075          	movff	tablat,___llmod@divisor+1
  8558  0112EC  0009               	tblrd		*+
  8559  0112EE  CFF5 F076          	movff	tablat,___llmod@divisor+2
  8560  0112F2  000A               	tblrd		*-
  8561  0112F4  CFF5 F077          	movff	tablat,___llmod@divisor+3
  8562  0112F8  ECCA  F0AA         	call	___llmod	;wreg free
  8563  0112FC  C070  F129         	movff	?___llmod,sprintf@val
  8564  011300  C071  F12A         	movff	?___llmod+1,sprintf@val+1
  8565  011304  C072  F12B         	movff	?___llmod+2,sprintf@val+2
  8566  011308  C073  F12C         	movff	?___llmod+3,sprintf@val+3
  8567  01130C  D000               	goto	l8162
  8568  01130E                     l8162:
  8569  01130E  0101               	movlb	1	; () banked
  8570  011310  0739               	decf	sprintf@c& (0+255),f,b
  8571  011312  0101               	movlb	1	; () banked
  8572  011314  2939               	incf	sprintf@c& (0+255),w,b
  8573  011316  B4D8               	btfsc	status,2,c
  8574  011318  D010               	goto	l8170
  8575  01131A  D77E               	goto	l8152
  8576                           
  8577                           ; BSR set to: 1
  8578                           ;doprnt.c: 1233: }
  8579                           ;doprnt.c: 1235: while(prec) {
  8580  01131C  D00E               	goto	l8170
  8581  01131E                     l8164:
  8582                           
  8583                           ; BSR set to: 1
  8584                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  8585  01131E  C0B1  FFD9         	movff	sprintf@sp,fsr2l
  8586  011322  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
  8587  011326  0E30               	movlw	48
  8588  011328  6EDF               	movwf	indf2,c
  8589                           
  8590                           ; BSR set to: 1
  8591  01132A  0100               	movlb	0	; () banked
  8592  01132C  4BB1               	infsnz	sprintf@sp& (0+255),f,b
  8593  01132E  2BB2               	incf	(sprintf@sp+1)& (0+255),f,b
  8594                           
  8595                           ; BSR set to: 0
  8596                           ;doprnt.c: 1237: prec--;
  8597  011330  0101               	movlb	1	; () banked
  8598  011332  0733               	decf	sprintf@prec& (0+255),f,b
  8599  011334  A0D8               	btfss	status,0,c
  8600  011336  0734               	decf	(sprintf@prec+1)& (0+255),f,b
  8601  011338  D000               	goto	l8170
  8602  01133A                     l8170:
  8603                           
  8604                           ; BSR set to: 1
  8605  01133A  0101               	movlb	1	; () banked
  8606  01133C  5133               	movf	sprintf@prec& (0+255),w,b
  8607  01133E  0101               	movlb	1	; () banked
  8608  011340  1134               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8609  011342  B4D8               	btfsc	status,2,c
  8610  011344  D05D               	goto	l8192
  8611  011346  D7EB               	goto	l8164
  8612                           
  8613                           ; BSR set to: 1
  8614                           ;doprnt.c: 1238: }
  8615                           ;doprnt.c: 1245: continue;
  8616  011348  D05B               	goto	l8192
  8617  01134A                     l8172:
  8618                           
  8619                           ; BSR set to: 1
  8620                           ;doprnt.c: 1246: }
  8621                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  8622  01134A  0101               	movlb	1	; () banked
  8623  01134C  5133               	movf	sprintf@prec& (0+255),w,b
  8624  01134E  0101               	movlb	1	; () banked
  8625  011350  1134               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8626  011352  A4D8               	btfss	status,2,c
  8627  011354  D00E               	goto	l8178
  8628                           
  8629                           ; BSR set to: 1
  8630  011356  0101               	movlb	1	; () banked
  8631  011358  5129               	movf	sprintf@val& (0+255),w,b
  8632  01135A  0101               	movlb	1	; () banked
  8633  01135C  112A               	iorwf	(sprintf@val+1)& (0+255),w,b
  8634  01135E  0101               	movlb	1	; () banked
  8635  011360  112B               	iorwf	(sprintf@val+2)& (0+255),w,b
  8636  011362  0101               	movlb	1	; () banked
  8637  011364  112C               	iorwf	(sprintf@val+3)& (0+255),w,b
  8638  011366  A4D8               	btfss	status,2,c
  8639  011368  D004               	goto	l8178
  8640                           
  8641                           ; BSR set to: 1
  8642                           ;doprnt.c: 1291: prec++;
  8643  01136A  0101               	movlb	1	; () banked
  8644  01136C  4B33               	infsnz	sprintf@prec& (0+255),f,b
  8645  01136E  2B34               	incf	(sprintf@prec+1)& (0+255),f,b
  8646  011370  D000               	goto	l8178
  8647  011372                     l8178:
  8648                           
  8649                           ; BSR set to: 1
  8650                           ;doprnt.c: 1339: if(c < prec)
  8651  011372  0E80               	movlw	128
  8652  011374  0101               	movlb	1	; () banked
  8653  011376  BF39               	btfsc	sprintf@c& (0+255),7,b
  8654  011378  0E7F               	movlw	127
  8655  01137A  0100               	movlb	0	; () banked
  8656  01137C  6FB9               	movwf	??_sprintf& (0+255),b
  8657  01137E  0101               	movlb	1	; () banked
  8658  011380  5133               	movf	sprintf@prec& (0+255),w,b
  8659  011382  0101               	movlb	1	; () banked
  8660  011384  5D39               	subwf	sprintf@c& (0+255),w,b
  8661  011386  0101               	movlb	1	; () banked
  8662  011388  5134               	movf	(sprintf@prec+1)& (0+255),w,b
  8663  01138A  0A80               	xorlw	128
  8664  01138C  0100               	movlb	0	; () banked
  8665  01138E  59B9               	subwfb	??_sprintf& (0+255),w,b
  8666  011390  B0D8               	btfsc	status,0,c
  8667  011392  D003               	goto	l8182
  8668                           
  8669                           ; BSR set to: 0
  8670                           ;doprnt.c: 1340: c = prec;
  8671  011394  C133  F139         	movff	sprintf@prec,sprintf@c
  8672  011398  D019               	goto	l8186
  8673  01139A                     l8182:
  8674                           
  8675                           ; BSR set to: 0
  8676                           ;doprnt.c: 1341: else if(prec < c)
  8677  01139A  0101               	movlb	1	; () banked
  8678  01139C  5134               	movf	(sprintf@prec+1)& (0+255),w,b
  8679  01139E  0A80               	xorlw	128
  8680  0113A0  0100               	movlb	0	; () banked
  8681  0113A2  6FB9               	movwf	??_sprintf& (0+255),b
  8682  0113A4  0101               	movlb	1	; () banked
  8683  0113A6  5139               	movf	sprintf@c& (0+255),w,b
  8684  0113A8  0101               	movlb	1	; () banked
  8685  0113AA  5D33               	subwf	sprintf@prec& (0+255),w,b
  8686  0113AC  0E80               	movlw	128
  8687  0113AE  0101               	movlb	1	; () banked
  8688  0113B0  BF39               	btfsc	sprintf@c& (0+255),7,b
  8689  0113B2  0E7F               	movlw	127
  8690  0113B4  0100               	movlb	0	; () banked
  8691  0113B6  59B9               	subwfb	??_sprintf& (0+255),w,b
  8692  0113B8  B0D8               	btfsc	status,0,c
  8693  0113BA  D008               	goto	l8186
  8694                           
  8695                           ; BSR set to: 0
  8696                           ;doprnt.c: 1342: prec = c;
  8697  0113BC  0101               	movlb	1	; () banked
  8698  0113BE  5139               	movf	sprintf@c& (0+255),w,b
  8699  0113C0  0101               	movlb	1	; () banked
  8700  0113C2  6F33               	movwf	sprintf@prec& (0+255),b
  8701  0113C4  6B34               	clrf	(sprintf@prec+1)& (0+255),b
  8702  0113C6  BF33               	btfsc	sprintf@prec& (0+255),7,b
  8703  0113C8  0734               	decf	(sprintf@prec+1)& (0+255),f,b
  8704                           
  8705                           ; BSR set to: 1
  8706  0113CA  D000               	goto	l8186
  8707  0113CC                     l8186:
  8708                           
  8709                           ;doprnt.c: 1422: {
  8710                           ;doprnt.c: 1438: if(flag & 0x03)
  8711  0113CC  0E03               	movlw	3
  8712  0113CE  0101               	movlb	1	; () banked
  8713  0113D0  1527               	andwf	sprintf@flag& (0+255),w,b
  8714  0113D2  0100               	movlb	0	; () banked
  8715  0113D4  6FB9               	movwf	??_sprintf& (0+255),b
  8716  0113D6  0E00               	movlw	0
  8717  0113D8  0101               	movlb	1	; () banked
  8718  0113DA  1528               	andwf	(sprintf@flag+1)& (0+255),w,b
  8719  0113DC  0100               	movlb	0	; () banked
  8720  0113DE  6FBA               	movwf	(??_sprintf+1)& (0+255),b
  8721  0113E0  0100               	movlb	0	; () banked
  8722  0113E2  51B9               	movf	??_sprintf& (0+255),w,b
  8723  0113E4  0100               	movlb	0	; () banked
  8724  0113E6  11BA               	iorwf	(??_sprintf+1)& (0+255),w,b
  8725  0113E8  B4D8               	btfsc	status,2,c
  8726  0113EA  D00A               	goto	l8192
  8727                           
  8728                           ; BSR set to: 0
  8729                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  8730  0113EC  C0B1  FFD9         	movff	sprintf@sp,fsr2l
  8731  0113F0  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
  8732  0113F4  0E2D               	movlw	45
  8733  0113F6  6EDF               	movwf	indf2,c
  8734  0113F8                     l8190:
  8735                           
  8736                           ; BSR set to: 0
  8737  0113F8  0100               	movlb	0	; () banked
  8738  0113FA  4BB1               	infsnz	sprintf@sp& (0+255),f,b
  8739  0113FC  2BB2               	incf	(sprintf@sp+1)& (0+255),f,b
  8740                           
  8741                           ; BSR set to: 0
  8742  0113FE  D000               	goto	l8192
  8743  011400                     l8192:
  8744  011400  C0B3  FFF6         	movff	sprintf@f,tblptrl
  8745  011404  C0B4  FFF7         	movff	sprintf@f+1,tblptrh
  8746  011408  0100               	movlb	0	; () banked
  8747  01140A  4BB3               	infsnz	sprintf@f& (0+255),f,b
  8748  01140C  2BB4               	incf	(sprintf@f+1)& (0+255),f,b
  8749  01140E                     	if	0	;tblptru may be non-zero
  8750  01140E                     	endif
  8751  01140E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8752  01140E  0E00               	movlw	low (__mediumconst shr (0+16))
  8753  011410  6EF8               	movwf	tblptru,c
  8754  011412                     	endif
  8755  011412  0008               	tblrd		*
  8756  011414  CFF5 F139          	movff	tablat,sprintf@c
  8757  011418  0101               	movlb	1	; () banked
  8758  01141A  5139               	movf	sprintf@c& (0+255),w,b
  8759  01141C  B4D8               	btfsc	status,2,c
  8760  01141E  D003               	goto	l8194
  8761  011420  EF9D  F085         	goto	l7994
  8762                           
  8763                           ; BSR set to: 1
  8764  011424  D000               	goto	l8194
  8765  011426                     l8194:
  8766                           
  8767                           ; BSR set to: 1
  8768                           ;doprnt.c: 1538: *sp = 0;
  8769  011426  C0B1  FFD9         	movff	sprintf@sp,fsr2l
  8770  01142A  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
  8771  01142E  0E00               	movlw	0
  8772  011430  6EDF               	movwf	indf2,c
  8773  011432  0012               	return	
  8774                           
  8775                           ; BSR set to: 1
  8776                           
  8777                           ; BSR set to: 1
  8778                           ;doprnt.c: 1540: return 0;
  8779                           ;	Return value of _sprintf is never used
  8780  011434  0012               	return		;funcret
  8781  011436                     __end_of_sprintf:
  8782                           	opt stack 0
  8783                           tblptru	equ	0xFF8
  8784                           tblptrh	equ	0xFF7
  8785                           tblptrl	equ	0xFF6
  8786                           tablat	equ	0xFF5
  8787                           prodh	equ	0xFF4
  8788                           prodl	equ	0xFF3
  8789                           intcon	equ	0xFF2
  8790                           postinc0	equ	0xFEE
  8791                           wreg	equ	0xFE8
  8792                           indf2	equ	0xFDF
  8793                           postinc2	equ	0xFDE
  8794                           fsr2h	equ	0xFDA
  8795                           fsr2l	equ	0xFD9
  8796                           status	equ	0xFD8
  8797                           
  8798 ;; *************** function _scale *****************
  8799 ;; Defined at:
  8800 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  8801 ;; Parameters:    Size  Location     Type
  8802 ;;  scl             1    wreg     char 
  8803 ;; Auto vars:     Size  Location     Type
  8804 ;;  scl             1   54[BANK0 ] char 
  8805 ;; Return value:  Size  Location     Type
  8806 ;;                  4   46[BANK0 ] char 
  8807 ;; Registers used:
  8808 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8809 ;; Tracked objects:
  8810 ;;		On entry : 0/0
  8811 ;;		On exit  : 0/0
  8812 ;;		Unchanged: 0/0
  8813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8814 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8815 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8817 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8818 ;;Total ram usage:        9 bytes
  8819 ;; Hardware stack levels used:    1
  8820 ;; Hardware stack levels required when called:    5
  8821 ;; This function calls:
  8822 ;;		___awdiv
  8823 ;;		___awmod
  8824 ;;		___flmul
  8825 ;; This function is called by:
  8826 ;;		_sprintf
  8827 ;; This function uses a non-reentrant model
  8828 ;;
  8829                           
  8830                           	psect	text13
  8831  012F0A                     __ptext13:
  8832                           	opt stack 0
  8833  012F0A                     _scale:
  8834                           	opt stack 23
  8835                           
  8836                           ; BSR set to: 1
  8837                           ;incstack = 0
  8838                           ;scale@scl stored from wreg
  8839  012F0A  0100               	movlb	0	; () banked
  8840  012F0C  6F96               	movwf	scale@scl& (0+255),b
  8841                           
  8842                           ; BSR set to: 0
  8843                           ;doprnt.c: 428: if(scl < 0) {
  8844  012F0E  0100               	movlb	0	; () banked
  8845  012F10  AF96               	btfss	scale@scl& (0+255),7,b
  8846  012F12  D148               	goto	l7646
  8847                           
  8848                           ; BSR set to: 0
  8849                           ;doprnt.c: 429: scl = -scl;
  8850  012F14  0100               	movlb	0	; () banked
  8851  012F16  6D96               	negf	scale@scl& (0+255),b
  8852                           
  8853                           ;doprnt.c: 430: if(scl>=110)
  8854  012F18  0100               	movlb	0	; () banked
  8855  012F1A  5196               	movf	scale@scl& (0+255),w,b
  8856  012F1C  0A80               	xorlw	128
  8857  012F1E  0F12               	addlw	-238
  8858  012F20  A0D8               	btfss	status,0,c
  8859  012F22  D0BC               	goto	l7636
  8860                           
  8861                           ; BSR set to: 0
  8862                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8863  012F24  0E00               	movlw	0
  8864  012F26  0100               	movlb	0	; () banked
  8865  012F28  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  8866  012F2A  0E0A               	movlw	10
  8867  012F2C  6F78               	movwf	___awdiv@divisor& (0+255),b
  8868  012F2E  0E00               	movlw	0
  8869  012F30  0100               	movlb	0	; () banked
  8870  012F32  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  8871  012F34  0E64               	movlw	100
  8872  012F36  6F72               	movwf	___awmod@divisor& (0+255),b
  8873  012F38  0100               	movlb	0	; () banked
  8874  012F3A  5196               	movf	scale@scl& (0+255),w,b
  8875  012F3C  0100               	movlb	0	; () banked
  8876  012F3E  6F70               	movwf	___awmod@dividend& (0+255),b
  8877  012F40  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  8878  012F42  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  8879  012F44  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  8880  012F46  EC1E  F0AA         	call	___awmod	;wreg free
  8881  012F4A  C070  F076         	movff	?___awmod,___awdiv@dividend
  8882  012F4E  C071  F077         	movff	?___awmod+1,___awdiv@dividend+1
  8883  012F52  EC91  F0A8         	call	___awdiv	;wreg free
  8884  012F56  0100               	movlb	0	; () banked
  8885  012F58  90D8               	bcf	status,0,c
  8886  012F5A  3776               	rlcf	?___awdiv& (0+255),f,b
  8887  012F5C  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8888  012F5E  0100               	movlb	0	; () banked
  8889  012F60  90D8               	bcf	status,0,c
  8890  012F62  3776               	rlcf	?___awdiv& (0+255),f,b
  8891  012F64  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8892  012F66  0E24               	movlw	36
  8893  012F68  0100               	movlb	0	; () banked
  8894  012F6A  2776               	addwf	?___awdiv& (0+255),f,b
  8895  012F6C  0E00               	movlw	0
  8896  012F6E  0100               	movlb	0	; () banked
  8897  012F70  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  8898  012F72  0E9F               	movlw	low __npowers_
  8899  012F74  0100               	movlb	0	; () banked
  8900  012F76  2576               	addwf	?___awdiv& (0+255),w,b
  8901  012F78  6EF6               	movwf	tblptrl,c
  8902  012F7A  0EFD               	movlw	high __npowers_
  8903  012F7C  0100               	movlb	0	; () banked
  8904  012F7E  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  8905  012F80  6EF7               	movwf	tblptrh,c
  8906  012F82                     	if	1	;There are 3 active tblptr bytes
  8907  012F82  6AF8               	clrf	tblptru,c
  8908  012F84  0E00               	movlw	low (__mediumconst shr (0+16))
  8909  012F86  22F8               	addwfc	tblptru,f,c
  8910  012F88                     	endif
  8911  012F88  0009               	tblrd		*+
  8912  012F8A  CFF5 F083          	movff	tablat,___flmul@f2
  8913  012F8E  0009               	tblrd		*+
  8914  012F90  CFF5 F084          	movff	tablat,___flmul@f2+1
  8915  012F94  0009               	tblrd		*+
  8916  012F96  CFF5 F085          	movff	tablat,___flmul@f2+2
  8917  012F9A  000A               	tblrd		*-
  8918  012F9C  CFF5 F086          	movff	tablat,___flmul@f2+3
  8919  012FA0  0E00               	movlw	0
  8920  012FA2  0100               	movlb	0	; () banked
  8921  012FA4  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  8922  012FA6  0E64               	movlw	100
  8923  012FA8  6F78               	movwf	___awdiv@divisor& (0+255),b
  8924  012FAA  0100               	movlb	0	; () banked
  8925  012FAC  5196               	movf	scale@scl& (0+255),w,b
  8926  012FAE  0100               	movlb	0	; () banked
  8927  012FB0  6F76               	movwf	___awdiv@dividend& (0+255),b
  8928  012FB2  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  8929  012FB4  BF76               	btfsc	___awdiv@dividend& (0+255),7,b
  8930  012FB6  0777               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8931  012FB8  EC91  F0A8         	call	___awdiv	;wreg free
  8932  012FBC  0100               	movlb	0	; () banked
  8933  012FBE  90D8               	bcf	status,0,c
  8934  012FC0  3776               	rlcf	?___awdiv& (0+255),f,b
  8935  012FC2  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8936  012FC4  0100               	movlb	0	; () banked
  8937  012FC6  90D8               	bcf	status,0,c
  8938  012FC8  3776               	rlcf	?___awdiv& (0+255),f,b
  8939  012FCA  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8940  012FCC  0E48               	movlw	72
  8941  012FCE  0100               	movlb	0	; () banked
  8942  012FD0  2776               	addwf	?___awdiv& (0+255),f,b
  8943  012FD2  0E00               	movlw	0
  8944  012FD4  0100               	movlb	0	; () banked
  8945  012FD6  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  8946  012FD8  0E9F               	movlw	low __npowers_
  8947  012FDA  0100               	movlb	0	; () banked
  8948  012FDC  2576               	addwf	?___awdiv& (0+255),w,b
  8949  012FDE  6EF6               	movwf	tblptrl,c
  8950  012FE0  0EFD               	movlw	high __npowers_
  8951  012FE2  0100               	movlb	0	; () banked
  8952  012FE4  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  8953  012FE6  6EF7               	movwf	tblptrh,c
  8954  012FE8                     	if	1	;There are 3 active tblptr bytes
  8955  012FE8  6AF8               	clrf	tblptru,c
  8956  012FEA  0E00               	movlw	low (__mediumconst shr (0+16))
  8957  012FEC  22F8               	addwfc	tblptru,f,c
  8958  012FEE                     	endif
  8959  012FEE  0009               	tblrd		*+
  8960  012FF0  CFF5 F07F          	movff	tablat,___flmul@f1
  8961  012FF4  0009               	tblrd		*+
  8962  012FF6  CFF5 F080          	movff	tablat,___flmul@f1+1
  8963  012FFA  0009               	tblrd		*+
  8964  012FFC  CFF5 F081          	movff	tablat,___flmul@f1+2
  8965  013000  000A               	tblrd		*-
  8966  013002  CFF5 F082          	movff	tablat,___flmul@f1+3
  8967  013006  ECC4  F0A5         	call	___flmul	;wreg free
  8968  01300A  C07F  F092         	movff	?___flmul,_scale$4236
  8969  01300E  C080  F093         	movff	?___flmul+1,_scale$4236+1
  8970  013012  C081  F094         	movff	?___flmul+2,_scale$4236+2
  8971  013016  C082  F095         	movff	?___flmul+3,_scale$4236+3
  8972                           
  8973                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8974  01301A  C092  F07F         	movff	_scale$4236,___flmul@f1
  8975  01301E  C093  F080         	movff	_scale$4236+1,___flmul@f1+1
  8976  013022  C094  F081         	movff	_scale$4236+2,___flmul@f1+2
  8977  013026  C095  F082         	movff	_scale$4236+3,___flmul@f1+3
  8978  01302A  0E00               	movlw	0
  8979  01302C  0100               	movlb	0	; () banked
  8980  01302E  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  8981  013030  0E0A               	movlw	10
  8982  013032  6F72               	movwf	___awmod@divisor& (0+255),b
  8983  013034  0100               	movlb	0	; () banked
  8984  013036  5196               	movf	scale@scl& (0+255),w,b
  8985  013038  0100               	movlb	0	; () banked
  8986  01303A  6F70               	movwf	___awmod@dividend& (0+255),b
  8987  01303C  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  8988  01303E  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  8989  013040  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  8990  013042  EC1E  F0AA         	call	___awmod	;wreg free
  8991  013046  0100               	movlb	0	; () banked
  8992  013048  90D8               	bcf	status,0,c
  8993  01304A  3770               	rlcf	?___awmod& (0+255),f,b
  8994  01304C  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8995  01304E  0100               	movlb	0	; () banked
  8996  013050  90D8               	bcf	status,0,c
  8997  013052  3770               	rlcf	?___awmod& (0+255),f,b
  8998  013054  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8999  013056  0E9F               	movlw	low __npowers_
  9000  013058  0100               	movlb	0	; () banked
  9001  01305A  2570               	addwf	?___awmod& (0+255),w,b
  9002  01305C  6EF6               	movwf	tblptrl,c
  9003  01305E  0EFD               	movlw	high __npowers_
  9004  013060  0100               	movlb	0	; () banked
  9005  013062  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  9006  013064  6EF7               	movwf	tblptrh,c
  9007  013066                     	if	1	;There are 3 active tblptr bytes
  9008  013066  6AF8               	clrf	tblptru,c
  9009  013068  0E00               	movlw	low (__mediumconst shr (0+16))
  9010  01306A  22F8               	addwfc	tblptru,f,c
  9011  01306C                     	endif
  9012  01306C  0009               	tblrd		*+
  9013  01306E  CFF5 F083          	movff	tablat,___flmul@f2
  9014  013072  0009               	tblrd		*+
  9015  013074  CFF5 F084          	movff	tablat,___flmul@f2+1
  9016  013078  0009               	tblrd		*+
  9017  01307A  CFF5 F085          	movff	tablat,___flmul@f2+2
  9018  01307E  000A               	tblrd		*-
  9019  013080  CFF5 F086          	movff	tablat,___flmul@f2+3
  9020  013084  ECC4  F0A5         	call	___flmul	;wreg free
  9021  013088  C07F  F08E         	movff	?___flmul,?_scale
  9022  01308C  C080  F08F         	movff	?___flmul+1,?_scale+1
  9023  013090  C081  F090         	movff	?___flmul+2,?_scale+2
  9024  013094  C082  F091         	movff	?___flmul+3,?_scale+3
  9025  013098  0012               	return	
  9026  01309A  D06B               	goto	l7642
  9027  01309C                     l7636:
  9028                           
  9029                           ;doprnt.c: 432: else if(scl > 10)
  9030  01309C  0100               	movlb	0	; () banked
  9031  01309E  5196               	movf	scale@scl& (0+255),w,b
  9032  0130A0  0A80               	xorlw	128
  9033  0130A2  0F75               	addlw	-139
  9034  0130A4  A0D8               	btfss	status,0,c
  9035  0130A6  D065               	goto	l7642
  9036                           
  9037                           ; BSR set to: 0
  9038                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  9039  0130A8  0E00               	movlw	0
  9040  0130AA  0100               	movlb	0	; () banked
  9041  0130AC  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  9042  0130AE  0E0A               	movlw	10
  9043  0130B0  6F78               	movwf	___awdiv@divisor& (0+255),b
  9044  0130B2  0100               	movlb	0	; () banked
  9045  0130B4  5196               	movf	scale@scl& (0+255),w,b
  9046  0130B6  0100               	movlb	0	; () banked
  9047  0130B8  6F76               	movwf	___awdiv@dividend& (0+255),b
  9048  0130BA  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  9049  0130BC  BF76               	btfsc	___awdiv@dividend& (0+255),7,b
  9050  0130BE  0777               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9051  0130C0  EC91  F0A8         	call	___awdiv	;wreg free
  9052  0130C4  0100               	movlb	0	; () banked
  9053  0130C6  90D8               	bcf	status,0,c
  9054  0130C8  3776               	rlcf	?___awdiv& (0+255),f,b
  9055  0130CA  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9056  0130CC  0100               	movlb	0	; () banked
  9057  0130CE  90D8               	bcf	status,0,c
  9058  0130D0  3776               	rlcf	?___awdiv& (0+255),f,b
  9059  0130D2  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9060  0130D4  0E24               	movlw	36
  9061  0130D6  0100               	movlb	0	; () banked
  9062  0130D8  2776               	addwf	?___awdiv& (0+255),f,b
  9063  0130DA  0E00               	movlw	0
  9064  0130DC  0100               	movlb	0	; () banked
  9065  0130DE  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  9066  0130E0  0E9F               	movlw	low __npowers_
  9067  0130E2  0100               	movlb	0	; () banked
  9068  0130E4  2576               	addwf	?___awdiv& (0+255),w,b
  9069  0130E6  6EF6               	movwf	tblptrl,c
  9070  0130E8  0EFD               	movlw	high __npowers_
  9071  0130EA  0100               	movlb	0	; () banked
  9072  0130EC  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  9073  0130EE  6EF7               	movwf	tblptrh,c
  9074  0130F0                     	if	1	;There are 3 active tblptr bytes
  9075  0130F0  6AF8               	clrf	tblptru,c
  9076  0130F2  0E00               	movlw	low (__mediumconst shr (0+16))
  9077  0130F4  22F8               	addwfc	tblptru,f,c
  9078  0130F6                     	endif
  9079  0130F6  0009               	tblrd		*+
  9080  0130F8  CFF5 F07F          	movff	tablat,___flmul@f1
  9081  0130FC  0009               	tblrd		*+
  9082  0130FE  CFF5 F080          	movff	tablat,___flmul@f1+1
  9083  013102  0009               	tblrd		*+
  9084  013104  CFF5 F081          	movff	tablat,___flmul@f1+2
  9085  013108  000A               	tblrd		*-
  9086  01310A  CFF5 F082          	movff	tablat,___flmul@f1+3
  9087  01310E  0E00               	movlw	0
  9088  013110  0100               	movlb	0	; () banked
  9089  013112  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  9090  013114  0E0A               	movlw	10
  9091  013116  6F72               	movwf	___awmod@divisor& (0+255),b
  9092  013118  0100               	movlb	0	; () banked
  9093  01311A  5196               	movf	scale@scl& (0+255),w,b
  9094  01311C  0100               	movlb	0	; () banked
  9095  01311E  6F70               	movwf	___awmod@dividend& (0+255),b
  9096  013120  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  9097  013122  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  9098  013124  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  9099  013126  EC1E  F0AA         	call	___awmod	;wreg free
  9100  01312A  0100               	movlb	0	; () banked
  9101  01312C  90D8               	bcf	status,0,c
  9102  01312E  3770               	rlcf	?___awmod& (0+255),f,b
  9103  013130  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  9104  013132  0100               	movlb	0	; () banked
  9105  013134  90D8               	bcf	status,0,c
  9106  013136  3770               	rlcf	?___awmod& (0+255),f,b
  9107  013138  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  9108  01313A  0E9F               	movlw	low __npowers_
  9109  01313C  0100               	movlb	0	; () banked
  9110  01313E  2570               	addwf	?___awmod& (0+255),w,b
  9111  013140  6EF6               	movwf	tblptrl,c
  9112  013142  0EFD               	movlw	high __npowers_
  9113  013144  0100               	movlb	0	; () banked
  9114  013146  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  9115  013148  6EF7               	movwf	tblptrh,c
  9116  01314A                     	if	1	;There are 3 active tblptr bytes
  9117  01314A  6AF8               	clrf	tblptru,c
  9118  01314C  0E00               	movlw	low (__mediumconst shr (0+16))
  9119  01314E  22F8               	addwfc	tblptru,f,c
  9120  013150                     	endif
  9121  013150  0009               	tblrd		*+
  9122  013152  CFF5 F083          	movff	tablat,___flmul@f2
  9123  013156  0009               	tblrd		*+
  9124  013158  CFF5 F084          	movff	tablat,___flmul@f2+1
  9125  01315C  0009               	tblrd		*+
  9126  01315E  CFF5 F085          	movff	tablat,___flmul@f2+2
  9127  013162  000A               	tblrd		*-
  9128  013164  CFF5 F086          	movff	tablat,___flmul@f2+3
  9129  013168  ECC4  F0A5         	call	___flmul	;wreg free
  9130  01316C  D78D               	goto	L6
  9131  01316E  0012               	return	
  9132  013170  D000               	goto	l7642
  9133  013172                     l7642:
  9134                           
  9135                           ;doprnt.c: 434: return _npowers_[scl];
  9136  013172  0100               	movlb	0	; () banked
  9137  013174  5196               	movf	scale@scl& (0+255),w,b
  9138  013176  0D04               	mullw	4
  9139  013178  0E9F               	movlw	low __npowers_
  9140  01317A  24F3               	addwf	prodl,w,c
  9141  01317C  6EF6               	movwf	tblptrl,c
  9142  01317E  0EFD               	movlw	high __npowers_
  9143  013180  20F4               	addwfc	prodh,w,c
  9144  013182  6EF7               	movwf	tblptrh,c
  9145  013184                     	if	1	;There are 3 active tblptr bytes
  9146  013184  6AF8               	clrf	tblptru,c
  9147  013186  0E00               	movlw	low (__mediumconst shr (0+16))
  9148  013188  22F8               	addwfc	tblptru,f,c
  9149  01318A                     	endif
  9150  01318A  0009               	tblrd		*+
  9151  01318C  CFF5 F08E          	movff	tablat,?_scale
  9152  013190  0009               	tblrd		*+
  9153  013192  CFF5 F08F          	movff	tablat,?_scale+1
  9154  013196  0009               	tblrd		*+
  9155  013198  CFF5 F090          	movff	tablat,?_scale+2
  9156  01319C  000A               	tblrd		*-
  9157  01319E  CFF5 F091          	movff	tablat,?_scale+3
  9158                           
  9159                           ; BSR set to: 0
  9160  0131A2  0012               	return	
  9161  0131A4                     l7646:
  9162                           
  9163                           ; BSR set to: 0
  9164                           ;doprnt.c: 435: }
  9165                           ;doprnt.c: 436: if(scl>=110)
  9166  0131A4  0100               	movlb	0	; () banked
  9167  0131A6  5196               	movf	scale@scl& (0+255),w,b
  9168  0131A8  0A80               	xorlw	128
  9169  0131AA  0F12               	addlw	-238
  9170  0131AC  A0D8               	btfss	status,0,c
  9171  0131AE  D0BC               	goto	l7654
  9172                           
  9173                           ; BSR set to: 0
  9174                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  9175  0131B0  0E00               	movlw	0
  9176  0131B2  0100               	movlb	0	; () banked
  9177  0131B4  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  9178  0131B6  0E0A               	movlw	10
  9179  0131B8  6F78               	movwf	___awdiv@divisor& (0+255),b
  9180  0131BA  0E00               	movlw	0
  9181  0131BC  0100               	movlb	0	; () banked
  9182  0131BE  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  9183  0131C0  0E64               	movlw	100
  9184  0131C2  6F72               	movwf	___awmod@divisor& (0+255),b
  9185  0131C4  0100               	movlb	0	; () banked
  9186  0131C6  5196               	movf	scale@scl& (0+255),w,b
  9187  0131C8  0100               	movlb	0	; () banked
  9188  0131CA  6F70               	movwf	___awmod@dividend& (0+255),b
  9189  0131CC  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  9190  0131CE  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  9191  0131D0  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  9192  0131D2  EC1E  F0AA         	call	___awmod	;wreg free
  9193  0131D6  C070  F076         	movff	?___awmod,___awdiv@dividend
  9194  0131DA  C071  F077         	movff	?___awmod+1,___awdiv@dividend+1
  9195  0131DE  EC91  F0A8         	call	___awdiv	;wreg free
  9196  0131E2  0100               	movlb	0	; () banked
  9197  0131E4  90D8               	bcf	status,0,c
  9198  0131E6  3776               	rlcf	?___awdiv& (0+255),f,b
  9199  0131E8  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9200  0131EA  0100               	movlb	0	; () banked
  9201  0131EC  90D8               	bcf	status,0,c
  9202  0131EE  3776               	rlcf	?___awdiv& (0+255),f,b
  9203  0131F0  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9204  0131F2  0E24               	movlw	36
  9205  0131F4  0100               	movlb	0	; () banked
  9206  0131F6  2776               	addwf	?___awdiv& (0+255),f,b
  9207  0131F8  0E00               	movlw	0
  9208  0131FA  0100               	movlb	0	; () banked
  9209  0131FC  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  9210  0131FE  0ED3               	movlw	low __powers_
  9211  013200  0100               	movlb	0	; () banked
  9212  013202  2576               	addwf	?___awdiv& (0+255),w,b
  9213  013204  6EF6               	movwf	tblptrl,c
  9214  013206  0EFD               	movlw	high __powers_
  9215  013208  0100               	movlb	0	; () banked
  9216  01320A  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  9217  01320C  6EF7               	movwf	tblptrh,c
  9218  01320E                     	if	1	;There are 3 active tblptr bytes
  9219  01320E  6AF8               	clrf	tblptru,c
  9220  013210  0E00               	movlw	low (__mediumconst shr (0+16))
  9221  013212  22F8               	addwfc	tblptru,f,c
  9222  013214                     	endif
  9223  013214  0009               	tblrd		*+
  9224  013216  CFF5 F083          	movff	tablat,___flmul@f2
  9225  01321A  0009               	tblrd		*+
  9226  01321C  CFF5 F084          	movff	tablat,___flmul@f2+1
  9227  013220  0009               	tblrd		*+
  9228  013222  CFF5 F085          	movff	tablat,___flmul@f2+2
  9229  013226  000A               	tblrd		*-
  9230  013228  CFF5 F086          	movff	tablat,___flmul@f2+3
  9231  01322C  0E00               	movlw	0
  9232  01322E  0100               	movlb	0	; () banked
  9233  013230  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  9234  013232  0E64               	movlw	100
  9235  013234  6F78               	movwf	___awdiv@divisor& (0+255),b
  9236  013236  0100               	movlb	0	; () banked
  9237  013238  5196               	movf	scale@scl& (0+255),w,b
  9238  01323A  0100               	movlb	0	; () banked
  9239  01323C  6F76               	movwf	___awdiv@dividend& (0+255),b
  9240  01323E  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  9241  013240  BF76               	btfsc	___awdiv@dividend& (0+255),7,b
  9242  013242  0777               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9243  013244  EC91  F0A8         	call	___awdiv	;wreg free
  9244  013248  0100               	movlb	0	; () banked
  9245  01324A  90D8               	bcf	status,0,c
  9246  01324C  3776               	rlcf	?___awdiv& (0+255),f,b
  9247  01324E  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9248  013250  0100               	movlb	0	; () banked
  9249  013252  90D8               	bcf	status,0,c
  9250  013254  3776               	rlcf	?___awdiv& (0+255),f,b
  9251  013256  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9252  013258  0E48               	movlw	72
  9253  01325A  0100               	movlb	0	; () banked
  9254  01325C  2776               	addwf	?___awdiv& (0+255),f,b
  9255  01325E  0E00               	movlw	0
  9256  013260  0100               	movlb	0	; () banked
  9257  013262  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  9258  013264  0ED3               	movlw	low __powers_
  9259  013266  0100               	movlb	0	; () banked
  9260  013268  2576               	addwf	?___awdiv& (0+255),w,b
  9261  01326A  6EF6               	movwf	tblptrl,c
  9262  01326C  0EFD               	movlw	high __powers_
  9263  01326E  0100               	movlb	0	; () banked
  9264  013270  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  9265  013272  6EF7               	movwf	tblptrh,c
  9266  013274                     	if	1	;There are 3 active tblptr bytes
  9267  013274  6AF8               	clrf	tblptru,c
  9268  013276  0E00               	movlw	low (__mediumconst shr (0+16))
  9269  013278  22F8               	addwfc	tblptru,f,c
  9270  01327A                     	endif
  9271  01327A  0009               	tblrd		*+
  9272  01327C  CFF5 F07F          	movff	tablat,___flmul@f1
  9273  013280  0009               	tblrd		*+
  9274  013282  CFF5 F080          	movff	tablat,___flmul@f1+1
  9275  013286  0009               	tblrd		*+
  9276  013288  CFF5 F081          	movff	tablat,___flmul@f1+2
  9277  01328C  000A               	tblrd		*-
  9278  01328E  CFF5 F082          	movff	tablat,___flmul@f1+3
  9279  013292  ECC4  F0A5         	call	___flmul	;wreg free
  9280  013296  C07F  F092         	movff	?___flmul,_scale$4236
  9281  01329A  C080  F093         	movff	?___flmul+1,_scale$4236+1
  9282  01329E  C081  F094         	movff	?___flmul+2,_scale$4236+2
  9283  0132A2  C082  F095         	movff	?___flmul+3,_scale$4236+3
  9284                           
  9285                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  9286  0132A6  C092  F07F         	movff	_scale$4236,___flmul@f1
  9287  0132AA  C093  F080         	movff	_scale$4236+1,___flmul@f1+1
  9288  0132AE  C094  F081         	movff	_scale$4236+2,___flmul@f1+2
  9289  0132B2  C095  F082         	movff	_scale$4236+3,___flmul@f1+3
  9290  0132B6  0E00               	movlw	0
  9291  0132B8  0100               	movlb	0	; () banked
  9292  0132BA  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  9293  0132BC  0E0A               	movlw	10
  9294  0132BE  6F72               	movwf	___awmod@divisor& (0+255),b
  9295  0132C0  0100               	movlb	0	; () banked
  9296  0132C2  5196               	movf	scale@scl& (0+255),w,b
  9297  0132C4  0100               	movlb	0	; () banked
  9298  0132C6  6F70               	movwf	___awmod@dividend& (0+255),b
  9299  0132C8  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  9300  0132CA  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  9301  0132CC  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  9302  0132CE  EC1E  F0AA         	call	___awmod	;wreg free
  9303  0132D2  0100               	movlb	0	; () banked
  9304  0132D4  90D8               	bcf	status,0,c
  9305  0132D6  3770               	rlcf	?___awmod& (0+255),f,b
  9306  0132D8  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  9307  0132DA  0100               	movlb	0	; () banked
  9308  0132DC  90D8               	bcf	status,0,c
  9309  0132DE  3770               	rlcf	?___awmod& (0+255),f,b
  9310  0132E0  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  9311  0132E2  0ED3               	movlw	low __powers_
  9312  0132E4  0100               	movlb	0	; () banked
  9313  0132E6  2570               	addwf	?___awmod& (0+255),w,b
  9314  0132E8  6EF6               	movwf	tblptrl,c
  9315  0132EA  0EFD               	movlw	high __powers_
  9316  0132EC  0100               	movlb	0	; () banked
  9317  0132EE  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  9318  0132F0  6EF7               	movwf	tblptrh,c
  9319  0132F2                     	if	1	;There are 3 active tblptr bytes
  9320  0132F2  6AF8               	clrf	tblptru,c
  9321  0132F4  0E00               	movlw	low (__mediumconst shr (0+16))
  9322  0132F6  22F8               	addwfc	tblptru,f,c
  9323  0132F8                     	endif
  9324  0132F8  0009               	tblrd		*+
  9325  0132FA  CFF5 F083          	movff	tablat,___flmul@f2
  9326  0132FE  0009               	tblrd		*+
  9327  013300  CFF5 F084          	movff	tablat,___flmul@f2+1
  9328  013304  0009               	tblrd		*+
  9329  013306  CFF5 F085          	movff	tablat,___flmul@f2+2
  9330  01330A  000A               	tblrd		*-
  9331  01330C  CFF5 F086          	movff	tablat,___flmul@f2+3
  9332  013310  ECC4  F0A5         	call	___flmul	;wreg free
  9333  013314  C07F  F08E         	movff	?___flmul,?_scale
  9334  013318  C080  F08F         	movff	?___flmul+1,?_scale+1
  9335  01331C  C081  F090         	movff	?___flmul+2,?_scale+2
  9336  013320  C082  F091         	movff	?___flmul+3,?_scale+3
  9337  013324  0012               	return	
  9338  013326  D06B               	goto	l7660
  9339  013328                     l7654:
  9340                           
  9341                           ;doprnt.c: 438: else if(scl > 10)
  9342  013328  0100               	movlb	0	; () banked
  9343  01332A  5196               	movf	scale@scl& (0+255),w,b
  9344  01332C  0A80               	xorlw	128
  9345  01332E  0F75               	addlw	-139
  9346  013330  A0D8               	btfss	status,0,c
  9347  013332  D065               	goto	l7660
  9348                           
  9349                           ; BSR set to: 0
  9350                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  9351  013334  0E00               	movlw	0
  9352  013336  0100               	movlb	0	; () banked
  9353  013338  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  9354  01333A  0E0A               	movlw	10
  9355  01333C  6F78               	movwf	___awdiv@divisor& (0+255),b
  9356  01333E  0100               	movlb	0	; () banked
  9357  013340  5196               	movf	scale@scl& (0+255),w,b
  9358  013342  0100               	movlb	0	; () banked
  9359  013344  6F76               	movwf	___awdiv@dividend& (0+255),b
  9360  013346  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  9361  013348  BF76               	btfsc	___awdiv@dividend& (0+255),7,b
  9362  01334A  0777               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9363  01334C  EC91  F0A8         	call	___awdiv	;wreg free
  9364  013350  0100               	movlb	0	; () banked
  9365  013352  90D8               	bcf	status,0,c
  9366  013354  3776               	rlcf	?___awdiv& (0+255),f,b
  9367  013356  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9368  013358  0100               	movlb	0	; () banked
  9369  01335A  90D8               	bcf	status,0,c
  9370  01335C  3776               	rlcf	?___awdiv& (0+255),f,b
  9371  01335E  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9372  013360  0E24               	movlw	36
  9373  013362  0100               	movlb	0	; () banked
  9374  013364  2776               	addwf	?___awdiv& (0+255),f,b
  9375  013366  0E00               	movlw	0
  9376  013368  0100               	movlb	0	; () banked
  9377  01336A  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  9378  01336C  0ED3               	movlw	low __powers_
  9379  01336E  0100               	movlb	0	; () banked
  9380  013370  2576               	addwf	?___awdiv& (0+255),w,b
  9381  013372  6EF6               	movwf	tblptrl,c
  9382  013374  0EFD               	movlw	high __powers_
  9383  013376  0100               	movlb	0	; () banked
  9384  013378  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  9385  01337A  6EF7               	movwf	tblptrh,c
  9386  01337C                     	if	1	;There are 3 active tblptr bytes
  9387  01337C  6AF8               	clrf	tblptru,c
  9388  01337E  0E00               	movlw	low (__mediumconst shr (0+16))
  9389  013380  22F8               	addwfc	tblptru,f,c
  9390  013382                     	endif
  9391  013382  0009               	tblrd		*+
  9392  013384  CFF5 F07F          	movff	tablat,___flmul@f1
  9393  013388  0009               	tblrd		*+
  9394  01338A  CFF5 F080          	movff	tablat,___flmul@f1+1
  9395  01338E  0009               	tblrd		*+
  9396  013390  CFF5 F081          	movff	tablat,___flmul@f1+2
  9397  013394  000A               	tblrd		*-
  9398  013396  CFF5 F082          	movff	tablat,___flmul@f1+3
  9399  01339A  0E00               	movlw	0
  9400  01339C  0100               	movlb	0	; () banked
  9401  01339E  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  9402  0133A0  0E0A               	movlw	10
  9403  0133A2  6F72               	movwf	___awmod@divisor& (0+255),b
  9404  0133A4  0100               	movlb	0	; () banked
  9405  0133A6  5196               	movf	scale@scl& (0+255),w,b
  9406  0133A8  0100               	movlb	0	; () banked
  9407  0133AA  6F70               	movwf	___awmod@dividend& (0+255),b
  9408  0133AC  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  9409  0133AE  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  9410  0133B0  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  9411  0133B2  EC1E  F0AA         	call	___awmod	;wreg free
  9412  0133B6  0100               	movlb	0	; () banked
  9413  0133B8  90D8               	bcf	status,0,c
  9414  0133BA  3770               	rlcf	?___awmod& (0+255),f,b
  9415  0133BC  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  9416  0133BE  0100               	movlb	0	; () banked
  9417  0133C0  90D8               	bcf	status,0,c
  9418  0133C2  3770               	rlcf	?___awmod& (0+255),f,b
  9419  0133C4  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  9420  0133C6  0ED3               	movlw	low __powers_
  9421  0133C8  0100               	movlb	0	; () banked
  9422  0133CA  2570               	addwf	?___awmod& (0+255),w,b
  9423  0133CC  6EF6               	movwf	tblptrl,c
  9424  0133CE  0EFD               	movlw	high __powers_
  9425  0133D0  0100               	movlb	0	; () banked
  9426  0133D2  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  9427  0133D4  6EF7               	movwf	tblptrh,c
  9428  0133D6                     	if	1	;There are 3 active tblptr bytes
  9429  0133D6  6AF8               	clrf	tblptru,c
  9430  0133D8  0E00               	movlw	low (__mediumconst shr (0+16))
  9431  0133DA  22F8               	addwfc	tblptru,f,c
  9432  0133DC                     	endif
  9433  0133DC  0009               	tblrd		*+
  9434  0133DE  CFF5 F083          	movff	tablat,___flmul@f2
  9435  0133E2  0009               	tblrd		*+
  9436  0133E4  CFF5 F084          	movff	tablat,___flmul@f2+1
  9437  0133E8  0009               	tblrd		*+
  9438  0133EA  CFF5 F085          	movff	tablat,___flmul@f2+2
  9439  0133EE  000A               	tblrd		*-
  9440  0133F0  CFF5 F086          	movff	tablat,___flmul@f2+3
  9441  0133F4  ECC4  F0A5         	call	___flmul	;wreg free
  9442  0133F8  D78D               	goto	L7
  9443  0133FA  0012               	return	
  9444  0133FC  D000               	goto	l7660
  9445  0133FE                     l7660:
  9446                           
  9447                           ;doprnt.c: 440: return _powers_[scl];
  9448  0133FE  0100               	movlb	0	; () banked
  9449  013400  5196               	movf	scale@scl& (0+255),w,b
  9450  013402  0D04               	mullw	4
  9451  013404  0ED3               	movlw	low __powers_
  9452  013406  24F3               	addwf	prodl,w,c
  9453  013408  6EF6               	movwf	tblptrl,c
  9454  01340A  0EFD               	movlw	high __powers_
  9455  01340C  20F4               	addwfc	prodh,w,c
  9456  01340E  6EF7               	movwf	tblptrh,c
  9457  013410                     	if	1	;There are 3 active tblptr bytes
  9458  013410  6AF8               	clrf	tblptru,c
  9459  013412  0E00               	movlw	low (__mediumconst shr (0+16))
  9460  013414  22F8               	addwfc	tblptru,f,c
  9461  013416                     	endif
  9462  013416  0009               	tblrd		*+
  9463  013418  CFF5 F08E          	movff	tablat,?_scale
  9464  01341C  0009               	tblrd		*+
  9465  01341E  CFF5 F08F          	movff	tablat,?_scale+1
  9466  013422  0009               	tblrd		*+
  9467  013424  CFF5 F090          	movff	tablat,?_scale+2
  9468  013428  000A               	tblrd		*-
  9469  01342A  CFF5 F091          	movff	tablat,?_scale+3
  9470  01342E  0012               	return	
  9471                           
  9472                           ; BSR set to: 0
  9473  013430  0012               	return		;funcret
  9474  013432                     __end_of_scale:
  9475                           	opt stack 0
  9476                           tblptru	equ	0xFF8
  9477                           tblptrh	equ	0xFF7
  9478                           tblptrl	equ	0xFF6
  9479                           tablat	equ	0xFF5
  9480                           prodh	equ	0xFF4
  9481                           prodl	equ	0xFF3
  9482                           intcon	equ	0xFF2
  9483                           postinc0	equ	0xFEE
  9484                           wreg	equ	0xFE8
  9485                           indf2	equ	0xFDF
  9486                           postinc2	equ	0xFDE
  9487                           fsr2h	equ	0xFDA
  9488                           fsr2l	equ	0xFD9
  9489                           status	equ	0xFD8
  9490                           
  9491 ;; *************** function _isdigit *****************
  9492 ;; Defined at:
  9493 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  9494 ;; Parameters:    Size  Location     Type
  9495 ;;  c               1    wreg     unsigned char 
  9496 ;; Auto vars:     Size  Location     Type
  9497 ;;  c               1   18[BANK0 ] unsigned char 
  9498 ;; Return value:  Size  Location     Type
  9499 ;;		None               void
  9500 ;; Registers used:
  9501 ;;		wreg, status,2, status,0
  9502 ;; Tracked objects:
  9503 ;;		On entry : 0/0
  9504 ;;		On exit  : 0/0
  9505 ;;		Unchanged: 0/0
  9506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9508 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9509 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9510 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9511 ;;Total ram usage:        3 bytes
  9512 ;; Hardware stack levels used:    1
  9513 ;; Hardware stack levels required when called:    3
  9514 ;; This function calls:
  9515 ;;		Nothing
  9516 ;; This function is called by:
  9517 ;;		_sprintf
  9518 ;; This function uses a non-reentrant model
  9519 ;;
  9520                           
  9521                           	psect	text14
  9522  015E12                     __ptext14:
  9523                           	opt stack 0
  9524  015E12                     _isdigit:
  9525                           	opt stack 25
  9526                           
  9527                           ;incstack = 0
  9528                           ;isdigit@c stored from wreg
  9529  015E12  0100               	movlb	0	; () banked
  9530  015E14  6F72               	movwf	isdigit@c& (0+255),b
  9531                           
  9532                           ; BSR set to: 0
  9533  015E16  0E00               	movlw	0
  9534  015E18  0100               	movlb	0	; () banked
  9535  015E1A  6F71               	movwf	_isdigit$3910& (0+255),b
  9536                           
  9537                           ; BSR set to: 0
  9538  015E1C  0E3A               	movlw	58
  9539  015E1E  0100               	movlb	0	; () banked
  9540  015E20  6172               	cpfslt	isdigit@c& (0+255),b
  9541  015E22  D008               	goto	l7672
  9542                           
  9543                           ; BSR set to: 0
  9544  015E24  0E2F               	movlw	47
  9545  015E26  0100               	movlb	0	; () banked
  9546  015E28  6572               	cpfsgt	isdigit@c& (0+255),b
  9547  015E2A  D004               	goto	l7672
  9548                           
  9549                           ; BSR set to: 0
  9550  015E2C  0E01               	movlw	1
  9551  015E2E  0100               	movlb	0	; () banked
  9552  015E30  6F71               	movwf	_isdigit$3910& (0+255),b
  9553  015E32  D000               	goto	l7672
  9554  015E34                     l7672:
  9555                           
  9556                           ; BSR set to: 0
  9557  015E34  C071  F070         	movff	_isdigit$3910,??_isdigit
  9558  015E38  0100               	movlb	0	; () banked
  9559  015E3A  3170               	rrcf	??_isdigit& (0+255),w,b
  9560  015E3C  0012               	return	
  9561                           
  9562                           ; BSR set to: 0
  9563                           
  9564                           ; BSR set to: 0
  9565  015E3E  0012               	return		;funcret
  9566  015E40                     __end_of_isdigit:
  9567                           	opt stack 0
  9568                           tblptru	equ	0xFF8
  9569                           tblptrh	equ	0xFF7
  9570                           tblptrl	equ	0xFF6
  9571                           tablat	equ	0xFF5
  9572                           prodh	equ	0xFF4
  9573                           prodl	equ	0xFF3
  9574                           intcon	equ	0xFF2
  9575                           postinc0	equ	0xFEE
  9576                           wreg	equ	0xFE8
  9577                           indf2	equ	0xFDF
  9578                           postinc2	equ	0xFDE
  9579                           fsr2h	equ	0xFDA
  9580                           fsr2l	equ	0xFD9
  9581                           status	equ	0xFD8
  9582                           
  9583 ;; *************** function _fround *****************
  9584 ;; Defined at:
  9585 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  9586 ;; Parameters:    Size  Location     Type
  9587 ;;  prec            1    wreg     unsigned char 
  9588 ;; Auto vars:     Size  Location     Type
  9589 ;;  prec            1   58[BANK0 ] unsigned char 
  9590 ;; Return value:  Size  Location     Type
  9591 ;;                  4   46[BANK0 ] unsigned char 
  9592 ;; Registers used:
  9593 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9594 ;; Tracked objects:
  9595 ;;		On entry : 0/0
  9596 ;;		On exit  : 0/0
  9597 ;;		Unchanged: 0/0
  9598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9599 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9600 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9602 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9603 ;;Total ram usage:       13 bytes
  9604 ;; Hardware stack levels used:    1
  9605 ;; Hardware stack levels required when called:    5
  9606 ;; This function calls:
  9607 ;;		___awdiv
  9608 ;;		___awmod
  9609 ;;		___flmul
  9610 ;; This function is called by:
  9611 ;;		_sprintf
  9612 ;; This function uses a non-reentrant model
  9613 ;;
  9614                           
  9615                           	psect	text15
  9616  0137DC                     __ptext15:
  9617                           	opt stack 0
  9618  0137DC                     _fround:
  9619                           	opt stack 23
  9620                           
  9621                           ; BSR set to: 0
  9622                           ;incstack = 0
  9623                           ;fround@prec stored from wreg
  9624  0137DC  0100               	movlb	0	; () banked
  9625  0137DE  6F9A               	movwf	fround@prec& (0+255),b
  9626                           
  9627                           ; BSR set to: 0
  9628                           ;doprnt.c: 413: if(prec>=110)
  9629  0137E0  0E6D               	movlw	109
  9630  0137E2  0100               	movlb	0	; () banked
  9631  0137E4  659A               	cpfsgt	fround@prec& (0+255),b
  9632  0137E6  D0CE               	goto	l7614
  9633                           
  9634                           ; BSR set to: 0
  9635                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9636  0137E8  0E00               	movlw	0
  9637  0137EA  0100               	movlb	0	; () banked
  9638  0137EC  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  9639  0137EE  0E0A               	movlw	10
  9640  0137F0  6F78               	movwf	___awdiv@divisor& (0+255),b
  9641  0137F2  0E00               	movlw	0
  9642  0137F4  0100               	movlb	0	; () banked
  9643  0137F6  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  9644  0137F8  0E64               	movlw	100
  9645  0137FA  6F72               	movwf	___awmod@divisor& (0+255),b
  9646  0137FC  C09A  F070         	movff	fround@prec,___awmod@dividend
  9647  013800  0100               	movlb	0	; () banked
  9648  013802  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  9649  013804  EC1E  F0AA         	call	___awmod	;wreg free
  9650  013808  C070  F076         	movff	?___awmod,___awdiv@dividend
  9651  01380C  C071  F077         	movff	?___awmod+1,___awdiv@dividend+1
  9652  013810  EC91  F0A8         	call	___awdiv	;wreg free
  9653  013814  0100               	movlb	0	; () banked
  9654  013816  90D8               	bcf	status,0,c
  9655  013818  3776               	rlcf	?___awdiv& (0+255),f,b
  9656  01381A  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9657  01381C  0100               	movlb	0	; () banked
  9658  01381E  90D8               	bcf	status,0,c
  9659  013820  3776               	rlcf	?___awdiv& (0+255),f,b
  9660  013822  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9661  013824  0E24               	movlw	36
  9662  013826  0100               	movlb	0	; () banked
  9663  013828  2776               	addwf	?___awdiv& (0+255),f,b
  9664  01382A  0E00               	movlw	0
  9665  01382C  0100               	movlb	0	; () banked
  9666  01382E  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  9667  013830  0E9F               	movlw	low __npowers_
  9668  013832  0100               	movlb	0	; () banked
  9669  013834  2576               	addwf	?___awdiv& (0+255),w,b
  9670  013836  6EF6               	movwf	tblptrl,c
  9671  013838  0EFD               	movlw	high __npowers_
  9672  01383A  0100               	movlb	0	; () banked
  9673  01383C  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  9674  01383E  6EF7               	movwf	tblptrh,c
  9675  013840                     	if	1	;There are 3 active tblptr bytes
  9676  013840  6AF8               	clrf	tblptru,c
  9677  013842  0E00               	movlw	low (__mediumconst shr (0+16))
  9678  013844  22F8               	addwfc	tblptru,f,c
  9679  013846                     	endif
  9680  013846  0009               	tblrd		*+
  9681  013848  CFF5 F083          	movff	tablat,___flmul@f2
  9682  01384C  0009               	tblrd		*+
  9683  01384E  CFF5 F084          	movff	tablat,___flmul@f2+1
  9684  013852  0009               	tblrd		*+
  9685  013854  CFF5 F085          	movff	tablat,___flmul@f2+2
  9686  013858  000A               	tblrd		*-
  9687  01385A  CFF5 F086          	movff	tablat,___flmul@f2+3
  9688  01385E  0E00               	movlw	0
  9689  013860  0100               	movlb	0	; () banked
  9690  013862  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  9691  013864  0E64               	movlw	100
  9692  013866  6F78               	movwf	___awdiv@divisor& (0+255),b
  9693  013868  C09A  F076         	movff	fround@prec,___awdiv@dividend
  9694  01386C  0100               	movlb	0	; () banked
  9695  01386E  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  9696  013870  EC91  F0A8         	call	___awdiv	;wreg free
  9697  013874  0100               	movlb	0	; () banked
  9698  013876  90D8               	bcf	status,0,c
  9699  013878  3776               	rlcf	?___awdiv& (0+255),f,b
  9700  01387A  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9701  01387C  0100               	movlb	0	; () banked
  9702  01387E  90D8               	bcf	status,0,c
  9703  013880  3776               	rlcf	?___awdiv& (0+255),f,b
  9704  013882  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9705  013884  0E48               	movlw	72
  9706  013886  0100               	movlb	0	; () banked
  9707  013888  2776               	addwf	?___awdiv& (0+255),f,b
  9708  01388A  0E00               	movlw	0
  9709  01388C  0100               	movlb	0	; () banked
  9710  01388E  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  9711  013890  0E9F               	movlw	low __npowers_
  9712  013892  0100               	movlb	0	; () banked
  9713  013894  2576               	addwf	?___awdiv& (0+255),w,b
  9714  013896  6EF6               	movwf	tblptrl,c
  9715  013898  0EFD               	movlw	high __npowers_
  9716  01389A  0100               	movlb	0	; () banked
  9717  01389C  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  9718  01389E  6EF7               	movwf	tblptrh,c
  9719  0138A0                     	if	1	;There are 3 active tblptr bytes
  9720  0138A0  6AF8               	clrf	tblptru,c
  9721  0138A2  0E00               	movlw	low (__mediumconst shr (0+16))
  9722  0138A4  22F8               	addwfc	tblptru,f,c
  9723  0138A6                     	endif
  9724  0138A6  0009               	tblrd		*+
  9725  0138A8  CFF5 F07F          	movff	tablat,___flmul@f1
  9726  0138AC  0009               	tblrd		*+
  9727  0138AE  CFF5 F080          	movff	tablat,___flmul@f1+1
  9728  0138B2  0009               	tblrd		*+
  9729  0138B4  CFF5 F081          	movff	tablat,___flmul@f1+2
  9730  0138B8  000A               	tblrd		*-
  9731  0138BA  CFF5 F082          	movff	tablat,___flmul@f1+3
  9732  0138BE  ECC4  F0A5         	call	___flmul	;wreg free
  9733  0138C2  C07F  F096         	movff	?___flmul,_fround$4234
  9734  0138C6  C080  F097         	movff	?___flmul+1,_fround$4234+1
  9735  0138CA  C081  F098         	movff	?___flmul+2,_fround$4234+2
  9736  0138CE  C082  F099         	movff	?___flmul+3,_fround$4234+3
  9737                           
  9738                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9739  0138D2  0E00               	movlw	0
  9740  0138D4  0100               	movlb	0	; () banked
  9741  0138D6  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  9742  0138D8  0E0A               	movlw	10
  9743  0138DA  6F72               	movwf	___awmod@divisor& (0+255),b
  9744  0138DC  C09A  F070         	movff	fround@prec,___awmod@dividend
  9745  0138E0  0100               	movlb	0	; () banked
  9746  0138E2  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  9747  0138E4  EC1E  F0AA         	call	___awmod	;wreg free
  9748  0138E8  0100               	movlb	0	; () banked
  9749  0138EA  90D8               	bcf	status,0,c
  9750  0138EC  3770               	rlcf	?___awmod& (0+255),f,b
  9751  0138EE  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  9752  0138F0  0100               	movlb	0	; () banked
  9753  0138F2  90D8               	bcf	status,0,c
  9754  0138F4  3770               	rlcf	?___awmod& (0+255),f,b
  9755  0138F6  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  9756  0138F8  0E9F               	movlw	low __npowers_
  9757  0138FA  0100               	movlb	0	; () banked
  9758  0138FC  2570               	addwf	?___awmod& (0+255),w,b
  9759  0138FE  6EF6               	movwf	tblptrl,c
  9760  013900  0EFD               	movlw	high __npowers_
  9761  013902  0100               	movlb	0	; () banked
  9762  013904  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  9763  013906  6EF7               	movwf	tblptrh,c
  9764  013908                     	if	1	;There are 3 active tblptr bytes
  9765  013908  6AF8               	clrf	tblptru,c
  9766  01390A  0E00               	movlw	low (__mediumconst shr (0+16))
  9767  01390C  22F8               	addwfc	tblptru,f,c
  9768  01390E                     	endif
  9769  01390E  0009               	tblrd		*+
  9770  013910  CFF5 F083          	movff	tablat,___flmul@f2
  9771  013914  0009               	tblrd		*+
  9772  013916  CFF5 F084          	movff	tablat,___flmul@f2+1
  9773  01391A  0009               	tblrd		*+
  9774  01391C  CFF5 F085          	movff	tablat,___flmul@f2+2
  9775  013920  000A               	tblrd		*-
  9776  013922  CFF5 F086          	movff	tablat,___flmul@f2+3
  9777  013926  C096  F07F         	movff	_fround$4234,___flmul@f1
  9778  01392A  C097  F080         	movff	_fround$4234+1,___flmul@f1+1
  9779  01392E  C098  F081         	movff	_fround$4234+2,___flmul@f1+2
  9780  013932  C099  F082         	movff	_fround$4234+3,___flmul@f1+3
  9781  013936  ECC4  F0A5         	call	___flmul	;wreg free
  9782  01393A  C07F  F092         	movff	?___flmul,_fround$4235
  9783  01393E  C080  F093         	movff	?___flmul+1,_fround$4235+1
  9784  013942  C081  F094         	movff	?___flmul+2,_fround$4235+2
  9785  013946  C082  F095         	movff	?___flmul+3,_fround$4235+3
  9786                           
  9787                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9788  01394A  C092  F07F         	movff	_fround$4235,___flmul@f1
  9789  01394E  C093  F080         	movff	_fround$4235+1,___flmul@f1+1
  9790  013952  C094  F081         	movff	_fround$4235+2,___flmul@f1+2
  9791  013956  C095  F082         	movff	_fround$4235+3,___flmul@f1+3
  9792  01395A  0E00               	movlw	0
  9793  01395C  0100               	movlb	0	; () banked
  9794  01395E  6F83               	movwf	___flmul@f2& (0+255),b
  9795  013960  0E00               	movlw	0
  9796  013962  6F84               	movwf	(___flmul@f2+1)& (0+255),b
  9797  013964  0E00               	movlw	0
  9798  013966  6F85               	movwf	(___flmul@f2+2)& (0+255),b
  9799  013968  0E3F               	movlw	63
  9800  01396A  6F86               	movwf	(___flmul@f2+3)& (0+255),b
  9801  01396C  ECC4  F0A5         	call	___flmul	;wreg free
  9802  013970  C07F  F08E         	movff	?___flmul,?_fround
  9803  013974  C080  F08F         	movff	?___flmul+1,?_fround+1
  9804  013978  C081  F090         	movff	?___flmul+2,?_fround+2
  9805  01397C  C082  F091         	movff	?___flmul+3,?_fround+3
  9806  013980  0012               	return	
  9807  013982  D07E               	goto	l7622
  9808  013984                     l7614:
  9809                           
  9810                           ;doprnt.c: 415: else if(prec > 10)
  9811  013984  0E0A               	movlw	10
  9812  013986  0100               	movlb	0	; () banked
  9813  013988  659A               	cpfsgt	fround@prec& (0+255),b
  9814  01398A  D07A               	goto	l7622
  9815                           
  9816                           ; BSR set to: 0
  9817                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9818  01398C  0E00               	movlw	0
  9819  01398E  0100               	movlb	0	; () banked
  9820  013990  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  9821  013992  0E0A               	movlw	10
  9822  013994  6F72               	movwf	___awmod@divisor& (0+255),b
  9823  013996  C09A  F070         	movff	fround@prec,___awmod@dividend
  9824  01399A  0100               	movlb	0	; () banked
  9825  01399C  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  9826  01399E  EC1E  F0AA         	call	___awmod	;wreg free
  9827  0139A2  0100               	movlb	0	; () banked
  9828  0139A4  90D8               	bcf	status,0,c
  9829  0139A6  3770               	rlcf	?___awmod& (0+255),f,b
  9830  0139A8  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  9831  0139AA  0100               	movlb	0	; () banked
  9832  0139AC  90D8               	bcf	status,0,c
  9833  0139AE  3770               	rlcf	?___awmod& (0+255),f,b
  9834  0139B0  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  9835  0139B2  0E9F               	movlw	low __npowers_
  9836  0139B4  0100               	movlb	0	; () banked
  9837  0139B6  2570               	addwf	?___awmod& (0+255),w,b
  9838  0139B8  6EF6               	movwf	tblptrl,c
  9839  0139BA  0EFD               	movlw	high __npowers_
  9840  0139BC  0100               	movlb	0	; () banked
  9841  0139BE  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  9842  0139C0  6EF7               	movwf	tblptrh,c
  9843  0139C2                     	if	1	;There are 3 active tblptr bytes
  9844  0139C2  6AF8               	clrf	tblptru,c
  9845  0139C4  0E00               	movlw	low (__mediumconst shr (0+16))
  9846  0139C6  22F8               	addwfc	tblptru,f,c
  9847  0139C8                     	endif
  9848  0139C8  0009               	tblrd		*+
  9849  0139CA  CFF5 F083          	movff	tablat,___flmul@f2
  9850  0139CE  0009               	tblrd		*+
  9851  0139D0  CFF5 F084          	movff	tablat,___flmul@f2+1
  9852  0139D4  0009               	tblrd		*+
  9853  0139D6  CFF5 F085          	movff	tablat,___flmul@f2+2
  9854  0139DA  000A               	tblrd		*-
  9855  0139DC  CFF5 F086          	movff	tablat,___flmul@f2+3
  9856  0139E0  0E00               	movlw	0
  9857  0139E2  0100               	movlb	0	; () banked
  9858  0139E4  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  9859  0139E6  0E0A               	movlw	10
  9860  0139E8  6F78               	movwf	___awdiv@divisor& (0+255),b
  9861  0139EA  C09A  F076         	movff	fround@prec,___awdiv@dividend
  9862  0139EE  0100               	movlb	0	; () banked
  9863  0139F0  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  9864  0139F2  EC91  F0A8         	call	___awdiv	;wreg free
  9865  0139F6  0100               	movlb	0	; () banked
  9866  0139F8  90D8               	bcf	status,0,c
  9867  0139FA  3776               	rlcf	?___awdiv& (0+255),f,b
  9868  0139FC  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9869  0139FE  0100               	movlb	0	; () banked
  9870  013A00  90D8               	bcf	status,0,c
  9871  013A02  3776               	rlcf	?___awdiv& (0+255),f,b
  9872  013A04  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9873  013A06  0E24               	movlw	36
  9874  013A08  0100               	movlb	0	; () banked
  9875  013A0A  2776               	addwf	?___awdiv& (0+255),f,b
  9876  013A0C  0E00               	movlw	0
  9877  013A0E  0100               	movlb	0	; () banked
  9878  013A10  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  9879  013A12  0E9F               	movlw	low __npowers_
  9880  013A14  0100               	movlb	0	; () banked
  9881  013A16  2576               	addwf	?___awdiv& (0+255),w,b
  9882  013A18  6EF6               	movwf	tblptrl,c
  9883  013A1A  0EFD               	movlw	high __npowers_
  9884  013A1C  0100               	movlb	0	; () banked
  9885  013A1E  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  9886  013A20  6EF7               	movwf	tblptrh,c
  9887  013A22                     	if	1	;There are 3 active tblptr bytes
  9888  013A22  6AF8               	clrf	tblptru,c
  9889  013A24  0E00               	movlw	low (__mediumconst shr (0+16))
  9890  013A26  22F8               	addwfc	tblptru,f,c
  9891  013A28                     	endif
  9892  013A28  0009               	tblrd		*+
  9893  013A2A  CFF5 F07F          	movff	tablat,___flmul@f1
  9894  013A2E  0009               	tblrd		*+
  9895  013A30  CFF5 F080          	movff	tablat,___flmul@f1+1
  9896  013A34  0009               	tblrd		*+
  9897  013A36  CFF5 F081          	movff	tablat,___flmul@f1+2
  9898  013A3A  000A               	tblrd		*-
  9899  013A3C  CFF5 F082          	movff	tablat,___flmul@f1+3
  9900  013A40  ECC4  F0A5         	call	___flmul	;wreg free
  9901  013A44  C07F  F096         	movff	?___flmul,_fround$4234
  9902  013A48  C080  F097         	movff	?___flmul+1,_fround$4234+1
  9903  013A4C  C081  F098         	movff	?___flmul+2,_fround$4234+2
  9904  013A50  C082  F099         	movff	?___flmul+3,_fround$4234+3
  9905                           
  9906                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9907  013A54  C096  F07F         	movff	_fround$4234,___flmul@f1
  9908  013A58  C097  F080         	movff	_fround$4234+1,___flmul@f1+1
  9909  013A5C  C098  F081         	movff	_fround$4234+2,___flmul@f1+2
  9910  013A60  C099  F082         	movff	_fround$4234+3,___flmul@f1+3
  9911  013A64  0E00               	movlw	0
  9912  013A66  0100               	movlb	0	; () banked
  9913  013A68  6F83               	movwf	___flmul@f2& (0+255),b
  9914  013A6A  0E00               	movlw	0
  9915  013A6C  6F84               	movwf	(___flmul@f2+1)& (0+255),b
  9916  013A6E  0E00               	movlw	0
  9917  013A70  6F85               	movwf	(___flmul@f2+2)& (0+255),b
  9918  013A72  0E3F               	movlw	63
  9919  013A74  6F86               	movwf	(___flmul@f2+3)& (0+255),b
  9920  013A76  ECC4  F0A5         	call	___flmul	;wreg free
  9921  013A7A  D77A               	goto	L8
  9922  013A7C  0012               	return	
  9923  013A7E  D000               	goto	l7622
  9924  013A80                     l7622:
  9925                           
  9926                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  9927  013A80  0100               	movlb	0	; () banked
  9928  013A82  519A               	movf	fround@prec& (0+255),w,b
  9929  013A84  0D04               	mullw	4
  9930  013A86  0E9F               	movlw	low __npowers_
  9931  013A88  24F3               	addwf	prodl,w,c
  9932  013A8A  6EF6               	movwf	tblptrl,c
  9933  013A8C  0EFD               	movlw	high __npowers_
  9934  013A8E  20F4               	addwfc	prodh,w,c
  9935  013A90  6EF7               	movwf	tblptrh,c
  9936  013A92                     	if	1	;There are 3 active tblptr bytes
  9937  013A92  6AF8               	clrf	tblptru,c
  9938  013A94  0E00               	movlw	low (__mediumconst shr (0+16))
  9939  013A96  22F8               	addwfc	tblptru,f,c
  9940  013A98                     	endif
  9941  013A98  0009               	tblrd		*+
  9942  013A9A  CFF5 F07F          	movff	tablat,___flmul@f1
  9943  013A9E  0009               	tblrd		*+
  9944  013AA0  CFF5 F080          	movff	tablat,___flmul@f1+1
  9945  013AA4  0009               	tblrd		*+
  9946  013AA6  CFF5 F081          	movff	tablat,___flmul@f1+2
  9947  013AAA  000A               	tblrd		*-
  9948  013AAC  CFF5 F082          	movff	tablat,___flmul@f1+3
  9949  013AB0  0E00               	movlw	0
  9950  013AB2  0100               	movlb	0	; () banked
  9951  013AB4  6F83               	movwf	___flmul@f2& (0+255),b
  9952  013AB6  0E00               	movlw	0
  9953  013AB8  6F84               	movwf	(___flmul@f2+1)& (0+255),b
  9954  013ABA  0E00               	movlw	0
  9955  013ABC  6F85               	movwf	(___flmul@f2+2)& (0+255),b
  9956  013ABE  0E3F               	movlw	63
  9957  013AC0  6F86               	movwf	(___flmul@f2+3)& (0+255),b
  9958  013AC2  ECC4  F0A5         	call	___flmul	;wreg free
  9959  013AC6  C07F  F08E         	movff	?___flmul,?_fround
  9960  013ACA  C080  F08F         	movff	?___flmul+1,?_fround+1
  9961  013ACE  C081  F090         	movff	?___flmul+2,?_fround+2
  9962  013AD2  C082  F091         	movff	?___flmul+3,?_fround+3
  9963  013AD6  0012               	return	
  9964  013AD8  0012               	return		;funcret
  9965  013ADA                     __end_of_fround:
  9966                           	opt stack 0
  9967                           tblptru	equ	0xFF8
  9968                           tblptrh	equ	0xFF7
  9969                           tblptrl	equ	0xFF6
  9970                           tablat	equ	0xFF5
  9971                           prodh	equ	0xFF4
  9972                           prodl	equ	0xFF3
  9973                           intcon	equ	0xFF2
  9974                           postinc0	equ	0xFEE
  9975                           wreg	equ	0xFE8
  9976                           indf2	equ	0xFDF
  9977                           postinc2	equ	0xFDE
  9978                           fsr2h	equ	0xFDA
  9979                           fsr2l	equ	0xFD9
  9980                           status	equ	0xFD8
  9981                           
  9982 ;; *************** function ___flmul *****************
  9983 ;; Defined at:
  9984 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flmul.c"
  9985 ;; Parameters:    Size  Location     Type
  9986 ;;  f1              4   31[BANK0 ] unsigned char 
  9987 ;;  f2              4   35[BANK0 ] unsigned char 
  9988 ;; Auto vars:     Size  Location     Type
  9989 ;;  f3_as_produc    4   40[BANK0 ] unsigned long 
  9990 ;;  sign            1   45[BANK0 ] unsigned char 
  9991 ;;  cntr            1   44[BANK0 ] unsigned char 
  9992 ;;  exp             1   39[BANK0 ] unsigned char 
  9993 ;; Return value:  Size  Location     Type
  9994 ;;                  4   31[BANK0 ] unsigned char 
  9995 ;; Registers used:
  9996 ;;		wreg, status,2, status,0, cstack
  9997 ;; Tracked objects:
  9998 ;;		On entry : 0/0
  9999 ;;		On exit  : 0/0
 10000 ;;		Unchanged: 0/0
 10001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10002 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10003 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10005 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10006 ;;Total ram usage:       15 bytes
 10007 ;; Hardware stack levels used:    1
 10008 ;; Hardware stack levels required when called:    4
 10009 ;; This function calls:
 10010 ;;		___flpack
 10011 ;; This function is called by:
 10012 ;;		_main
 10013 ;;		_fround
 10014 ;;		_scale
 10015 ;;		_sprintf
 10016 ;; This function uses a non-reentrant model
 10017 ;;
 10018                           
 10019                           	psect	text16
 10020  014B88                     __ptext16:
 10021                           	opt stack 0
 10022  014B88                     ___flmul:
 10023                           	opt stack 26
 10024                           
 10025                           ;incstack = 0
 10026  014B88  0100               	movlb	0	; () banked
 10027  014B8A  3581               	rlcf	(___flmul@f1+2)& (0+255),w,b
 10028  014B8C  3582               	rlcf	(___flmul@f1+3)& (0+255),w,b
 10029  014B8E  0100               	movlb	0	; () banked
 10030  014B90  6F87               	movwf	___flmul@exp& (0+255),b
 10031  014B92  0100               	movlb	0	; () banked
 10032  014B94  5187               	movf	___flmul@exp& (0+255),w,b
 10033  014B96  A4D8               	btfss	status,2,c
 10034  014B98  D00A               	goto	l7448
 10035                           
 10036                           ; BSR set to: 0
 10037  014B9A  0E00               	movlw	0
 10038  014B9C  0100               	movlb	0	; () banked
 10039  014B9E  6F7F               	movwf	?___flmul& (0+255),b
 10040  014BA0  0E00               	movlw	0
 10041  014BA2  6F80               	movwf	(?___flmul+1)& (0+255),b
 10042  014BA4  0E00               	movlw	0
 10043  014BA6  6F81               	movwf	(?___flmul+2)& (0+255),b
 10044  014BA8  0E00               	movlw	0
 10045  014BAA  6F82               	movwf	(?___flmul+3)& (0+255),b
 10046                           
 10047                           ; BSR set to: 0
 10048  014BAC  0012               	return	
 10049  014BAE                     l7448:
 10050                           
 10051                           ; BSR set to: 0
 10052  014BAE  0100               	movlb	0	; () banked
 10053  014BB0  3585               	rlcf	(___flmul@f2+2)& (0+255),w,b
 10054  014BB2  3586               	rlcf	(___flmul@f2+3)& (0+255),w,b
 10055  014BB4  0100               	movlb	0	; () banked
 10056  014BB6  6F8D               	movwf	___flmul@sign& (0+255),b
 10057  014BB8  0100               	movlb	0	; () banked
 10058  014BBA  518D               	movf	___flmul@sign& (0+255),w,b
 10059  014BBC  A4D8               	btfss	status,2,c
 10060  014BBE  D00A               	goto	l7454
 10061                           
 10062                           ; BSR set to: 0
 10063  014BC0  0E00               	movlw	0
 10064  014BC2  0100               	movlb	0	; () banked
 10065  014BC4  6F7F               	movwf	?___flmul& (0+255),b
 10066  014BC6  0E00               	movlw	0
 10067  014BC8  6F80               	movwf	(?___flmul+1)& (0+255),b
 10068  014BCA  0E00               	movlw	0
 10069  014BCC  6F81               	movwf	(?___flmul+2)& (0+255),b
 10070  014BCE  0E00               	movlw	0
 10071  014BD0  6F82               	movwf	(?___flmul+3)& (0+255),b
 10072                           
 10073                           ; BSR set to: 0
 10074  014BD2  0012               	return	
 10075  014BD4                     l7454:
 10076                           
 10077                           ; BSR set to: 0
 10078  014BD4  0100               	movlb	0	; () banked
 10079  014BD6  518D               	movf	___flmul@sign& (0+255),w,b
 10080  014BD8  0F7B               	addlw	123
 10081  014BDA  0100               	movlb	0	; () banked
 10082  014BDC  2787               	addwf	___flmul@exp& (0+255),f,b
 10083                           
 10084                           ; BSR set to: 0
 10085  014BDE  C082  F08D         	movff	___flmul@f1+3,___flmul@sign
 10086  014BE2  0100               	movlb	0	; () banked
 10087  014BE4  5186               	movf	(___flmul@f2+3)& (0+255),w,b
 10088  014BE6  0100               	movlb	0	; () banked
 10089  014BE8  1B8D               	xorwf	___flmul@sign& (0+255),f,b
 10090  014BEA  0E80               	movlw	128
 10091  014BEC  0100               	movlb	0	; () banked
 10092  014BEE  178D               	andwf	___flmul@sign& (0+255),f,b
 10093                           
 10094                           ; BSR set to: 0
 10095  014BF0  0100               	movlb	0	; () banked
 10096  014BF2  8F81               	bsf	(___flmul@f1+2)& (0+255),7,b
 10097                           
 10098                           ; BSR set to: 0
 10099  014BF4  0100               	movlb	0	; () banked
 10100  014BF6  8F85               	bsf	(___flmul@f2+2)& (0+255),7,b
 10101  014BF8  0EFF               	movlw	255
 10102  014BFA  0100               	movlb	0	; () banked
 10103  014BFC  1783               	andwf	___flmul@f2& (0+255),f,b
 10104  014BFE  0EFF               	movlw	255
 10105  014C00  1784               	andwf	(___flmul@f2+1)& (0+255),f,b
 10106  014C02  0EFF               	movlw	255
 10107  014C04  1785               	andwf	(___flmul@f2+2)& (0+255),f,b
 10108  014C06  0E00               	movlw	0
 10109  014C08  1786               	andwf	(___flmul@f2+3)& (0+255),f,b
 10110                           
 10111                           ; BSR set to: 0
 10112  014C0A  0E00               	movlw	0
 10113  014C0C  0100               	movlb	0	; () banked
 10114  014C0E  6F88               	movwf	___flmul@f3_as_product& (0+255),b
 10115  014C10  0E00               	movlw	0
 10116  014C12  6F89               	movwf	(___flmul@f3_as_product+1)& (0+255),b
 10117  014C14  0E00               	movlw	0
 10118  014C16  6F8A               	movwf	(___flmul@f3_as_product+2)& (0+255),b
 10119  014C18  0E00               	movlw	0
 10120  014C1A  6F8B               	movwf	(___flmul@f3_as_product+3)& (0+255),b
 10121                           
 10122                           ; BSR set to: 0
 10123  014C1C  0E07               	movlw	7
 10124  014C1E  0100               	movlb	0	; () banked
 10125  014C20  6F8C               	movwf	___flmul@cntr& (0+255),b
 10126  014C22  D000               	goto	l7466
 10127  014C24                     l7466:
 10128                           
 10129                           ; BSR set to: 0
 10130  014C24  0100               	movlb	0	; () banked
 10131  014C26  A17F               	btfss	___flmul@f1& (0+255),0,b
 10132  014C28  D011               	goto	l7470
 10133                           
 10134                           ; BSR set to: 0
 10135  014C2A  0100               	movlb	0	; () banked
 10136  014C2C  5183               	movf	___flmul@f2& (0+255),w,b
 10137  014C2E  0100               	movlb	0	; () banked
 10138  014C30  2788               	addwf	___flmul@f3_as_product& (0+255),f,b
 10139  014C32  0100               	movlb	0	; () banked
 10140  014C34  5184               	movf	(___flmul@f2+1)& (0+255),w,b
 10141  014C36  0100               	movlb	0	; () banked
 10142  014C38  2389               	addwfc	(___flmul@f3_as_product+1)& (0+255),f,b
 10143  014C3A  0100               	movlb	0	; () banked
 10144  014C3C  5185               	movf	(___flmul@f2+2)& (0+255),w,b
 10145  014C3E  0100               	movlb	0	; () banked
 10146  014C40  238A               	addwfc	(___flmul@f3_as_product+2)& (0+255),f,b
 10147  014C42  0100               	movlb	0	; () banked
 10148  014C44  5186               	movf	(___flmul@f2+3)& (0+255),w,b
 10149  014C46  0100               	movlb	0	; () banked
 10150  014C48  238B               	addwfc	(___flmul@f3_as_product+3)& (0+255),f,b
 10151  014C4A  D000               	goto	l7470
 10152  014C4C                     l7470:
 10153                           
 10154                           ; BSR set to: 0
 10155  014C4C  0100               	movlb	0	; () banked
 10156  014C4E  90D8               	bcf	status,0,c
 10157  014C50  3382               	rrcf	(___flmul@f1+3)& (0+255),f,b
 10158  014C52  3381               	rrcf	(___flmul@f1+2)& (0+255),f,b
 10159  014C54  3380               	rrcf	(___flmul@f1+1)& (0+255),f,b
 10160  014C56  337F               	rrcf	___flmul@f1& (0+255),f,b
 10161                           
 10162                           ; BSR set to: 0
 10163  014C58  0100               	movlb	0	; () banked
 10164  014C5A  90D8               	bcf	status,0,c
 10165  014C5C  3783               	rlcf	___flmul@f2& (0+255),f,b
 10166  014C5E  3784               	rlcf	(___flmul@f2+1)& (0+255),f,b
 10167  014C60  3785               	rlcf	(___flmul@f2+2)& (0+255),f,b
 10168  014C62  3786               	rlcf	(___flmul@f2+3)& (0+255),f,b
 10169                           
 10170                           ; BSR set to: 0
 10171  014C64  0100               	movlb	0	; () banked
 10172  014C66  2F8C               	decfsz	___flmul@cntr& (0+255),f,b
 10173  014C68  D7DD               	goto	l7466
 10174  014C6A  D000               	goto	l7476
 10175  014C6C                     l7476:
 10176                           
 10177                           ; BSR set to: 0
 10178  014C6C  0E11               	movlw	17
 10179  014C6E  0100               	movlb	0	; () banked
 10180  014C70  6F8C               	movwf	___flmul@cntr& (0+255),b
 10181  014C72  D000               	goto	l7478
 10182  014C74                     l7478:
 10183                           
 10184                           ; BSR set to: 0
 10185  014C74  0100               	movlb	0	; () banked
 10186  014C76  A17F               	btfss	___flmul@f1& (0+255),0,b
 10187  014C78  D011               	goto	l7482
 10188                           
 10189                           ; BSR set to: 0
 10190  014C7A  0100               	movlb	0	; () banked
 10191  014C7C  5183               	movf	___flmul@f2& (0+255),w,b
 10192  014C7E  0100               	movlb	0	; () banked
 10193  014C80  2788               	addwf	___flmul@f3_as_product& (0+255),f,b
 10194  014C82  0100               	movlb	0	; () banked
 10195  014C84  5184               	movf	(___flmul@f2+1)& (0+255),w,b
 10196  014C86  0100               	movlb	0	; () banked
 10197  014C88  2389               	addwfc	(___flmul@f3_as_product+1)& (0+255),f,b
 10198  014C8A  0100               	movlb	0	; () banked
 10199  014C8C  5185               	movf	(___flmul@f2+2)& (0+255),w,b
 10200  014C8E  0100               	movlb	0	; () banked
 10201  014C90  238A               	addwfc	(___flmul@f3_as_product+2)& (0+255),f,b
 10202  014C92  0100               	movlb	0	; () banked
 10203  014C94  5186               	movf	(___flmul@f2+3)& (0+255),w,b
 10204  014C96  0100               	movlb	0	; () banked
 10205  014C98  238B               	addwfc	(___flmul@f3_as_product+3)& (0+255),f,b
 10206  014C9A  D000               	goto	l7482
 10207  014C9C                     l7482:
 10208                           
 10209                           ; BSR set to: 0
 10210  014C9C  0100               	movlb	0	; () banked
 10211  014C9E  90D8               	bcf	status,0,c
 10212  014CA0  3382               	rrcf	(___flmul@f1+3)& (0+255),f,b
 10213  014CA2  3381               	rrcf	(___flmul@f1+2)& (0+255),f,b
 10214  014CA4  3380               	rrcf	(___flmul@f1+1)& (0+255),f,b
 10215  014CA6  337F               	rrcf	___flmul@f1& (0+255),f,b
 10216                           
 10217                           ; BSR set to: 0
 10218  014CA8  0100               	movlb	0	; () banked
 10219  014CAA  90D8               	bcf	status,0,c
 10220  014CAC  338B               	rrcf	(___flmul@f3_as_product+3)& (0+255),f,b
 10221  014CAE  338A               	rrcf	(___flmul@f3_as_product+2)& (0+255),f,b
 10222  014CB0  3389               	rrcf	(___flmul@f3_as_product+1)& (0+255),f,b
 10223  014CB2  3388               	rrcf	___flmul@f3_as_product& (0+255),f,b
 10224                           
 10225                           ; BSR set to: 0
 10226  014CB4  0100               	movlb	0	; () banked
 10227  014CB6  2F8C               	decfsz	___flmul@cntr& (0+255),f,b
 10228  014CB8  D7DD               	goto	l7478
 10229  014CBA  D000               	goto	l7488
 10230  014CBC                     l7488:
 10231                           
 10232                           ; BSR set to: 0
 10233  014CBC  C088  F070         	movff	___flmul@f3_as_product,___flpack@arg
 10234  014CC0  C089  F071         	movff	___flmul@f3_as_product+1,___flpack@arg+1
 10235  014CC4  C08A  F072         	movff	___flmul@f3_as_product+2,___flpack@arg+2
 10236  014CC8  C08B  F073         	movff	___flmul@f3_as_product+3,___flpack@arg+3
 10237  014CCC  C087  F074         	movff	___flmul@exp,___flpack@exp
 10238  014CD0  C08D  F075         	movff	___flmul@sign,___flpack@sign
 10239  014CD4  EC4D  F0A4         	call	___flpack	;wreg free
 10240  014CD8  C070  F07F         	movff	?___flpack,?___flmul
 10241  014CDC  C071  F080         	movff	?___flpack+1,?___flmul+1
 10242  014CE0  C072  F081         	movff	?___flpack+2,?___flmul+2
 10243  014CE4  C073  F082         	movff	?___flpack+3,?___flmul+3
 10244  014CE8  0012               	return	
 10245  014CEA  0012               	return		;funcret
 10246  014CEC                     __end_of___flmul:
 10247                           	opt stack 0
 10248                           tblptru	equ	0xFF8
 10249                           tblptrh	equ	0xFF7
 10250                           tblptrl	equ	0xFF6
 10251                           tablat	equ	0xFF5
 10252                           prodh	equ	0xFF4
 10253                           prodl	equ	0xFF3
 10254                           intcon	equ	0xFF2
 10255                           postinc0	equ	0xFEE
 10256                           wreg	equ	0xFE8
 10257                           indf2	equ	0xFDF
 10258                           postinc2	equ	0xFDE
 10259                           fsr2h	equ	0xFDA
 10260                           fsr2l	equ	0xFD9
 10261                           status	equ	0xFD8
 10262                           
 10263 ;; *************** function ___awmod *****************
 10264 ;; Defined at:
 10265 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
 10266 ;; Parameters:    Size  Location     Type
 10267 ;;  dividend        2   16[BANK0 ] int 
 10268 ;;  divisor         2   18[BANK0 ] int 
 10269 ;; Auto vars:     Size  Location     Type
 10270 ;;  sign            1   21[BANK0 ] unsigned char 
 10271 ;;  counter         1   20[BANK0 ] unsigned char 
 10272 ;; Return value:  Size  Location     Type
 10273 ;;                  2   16[BANK0 ] int 
 10274 ;; Registers used:
 10275 ;;		wreg, status,2, status,0
 10276 ;; Tracked objects:
 10277 ;;		On entry : 0/0
 10278 ;;		On exit  : 0/0
 10279 ;;		Unchanged: 0/0
 10280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10281 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10282 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10284 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10285 ;;Total ram usage:        6 bytes
 10286 ;; Hardware stack levels used:    1
 10287 ;; Hardware stack levels required when called:    3
 10288 ;; This function calls:
 10289 ;;		Nothing
 10290 ;; This function is called by:
 10291 ;;		_fround
 10292 ;;		_scale
 10293 ;; This function uses a non-reentrant model
 10294 ;;
 10295                           
 10296                           	psect	text17
 10297  01543C                     __ptext17:
 10298                           	opt stack 0
 10299  01543C                     ___awmod:
 10300                           	opt stack 24
 10301                           
 10302                           ;incstack = 0
 10303  01543C  0E00               	movlw	0
 10304  01543E  0100               	movlb	0	; () banked
 10305  015440  6F75               	movwf	___awmod@sign& (0+255),b
 10306                           
 10307                           ; BSR set to: 0
 10308  015442  0100               	movlb	0	; () banked
 10309  015444  AF71               	btfss	(___awmod@dividend+1)& (0+255),7,b
 10310  015446  D009               	goto	l7544
 10311                           
 10312                           ; BSR set to: 0
 10313  015448  0100               	movlb	0	; () banked
 10314  01544A  6D70               	negf	___awmod@dividend& (0+255),b
 10315  01544C  1F71               	comf	(___awmod@dividend+1)& (0+255),f,b
 10316  01544E  B0D8               	btfsc	status,0,c
 10317  015450  2B71               	incf	(___awmod@dividend+1)& (0+255),f,b
 10318                           
 10319                           ; BSR set to: 0
 10320  015452  0E01               	movlw	1
 10321  015454  0100               	movlb	0	; () banked
 10322  015456  6F75               	movwf	___awmod@sign& (0+255),b
 10323  015458  D000               	goto	l7544
 10324  01545A                     l7544:
 10325                           
 10326                           ; BSR set to: 0
 10327  01545A  0100               	movlb	0	; () banked
 10328  01545C  AF73               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10329  01545E  D006               	goto	l7548
 10330                           
 10331                           ; BSR set to: 0
 10332  015460  0100               	movlb	0	; () banked
 10333  015462  6D72               	negf	___awmod@divisor& (0+255),b
 10334  015464  1F73               	comf	(___awmod@divisor+1)& (0+255),f,b
 10335  015466  B0D8               	btfsc	status,0,c
 10336  015468  2B73               	incf	(___awmod@divisor+1)& (0+255),f,b
 10337  01546A  D000               	goto	l7548
 10338  01546C                     l7548:
 10339                           
 10340                           ; BSR set to: 0
 10341  01546C  0100               	movlb	0	; () banked
 10342  01546E  5172               	movf	___awmod@divisor& (0+255),w,b
 10343  015470  0100               	movlb	0	; () banked
 10344  015472  1173               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 10345  015474  B4D8               	btfsc	status,2,c
 10346  015476  D02B               	goto	l7564
 10347                           
 10348                           ; BSR set to: 0
 10349  015478  0E01               	movlw	1
 10350  01547A  0100               	movlb	0	; () banked
 10351  01547C  6F74               	movwf	___awmod@counter& (0+255),b
 10352  01547E  D007               	goto	l7554
 10353  015480                     l7552:
 10354                           
 10355                           ; BSR set to: 0
 10356  015480  0100               	movlb	0	; () banked
 10357  015482  90D8               	bcf	status,0,c
 10358  015484  3772               	rlcf	___awmod@divisor& (0+255),f,b
 10359  015486  3773               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 10360  015488  0100               	movlb	0	; () banked
 10361  01548A  2B74               	incf	___awmod@counter& (0+255),f,b
 10362  01548C  D000               	goto	l7554
 10363  01548E                     l7554:
 10364                           
 10365                           ; BSR set to: 0
 10366  01548E  0100               	movlb	0	; () banked
 10367  015490  BF73               	btfsc	(___awmod@divisor+1)& (0+255),7,b
 10368  015492  D002               	goto	l7556
 10369  015494  D7F5               	goto	l7552
 10370                           
 10371                           ; BSR set to: 0
 10372  015496  D000               	goto	l7556
 10373  015498                     l7556:
 10374                           
 10375                           ; BSR set to: 0
 10376  015498  0100               	movlb	0	; () banked
 10377  01549A  5172               	movf	___awmod@divisor& (0+255),w,b
 10378  01549C  0100               	movlb	0	; () banked
 10379  01549E  5D70               	subwf	___awmod@dividend& (0+255),w,b
 10380  0154A0  0100               	movlb	0	; () banked
 10381  0154A2  5173               	movf	(___awmod@divisor+1)& (0+255),w,b
 10382  0154A4  0100               	movlb	0	; () banked
 10383  0154A6  5971               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 10384  0154A8  A0D8               	btfss	status,0,c
 10385  0154AA  D009               	goto	l7560
 10386                           
 10387                           ; BSR set to: 0
 10388  0154AC  0100               	movlb	0	; () banked
 10389  0154AE  5172               	movf	___awmod@divisor& (0+255),w,b
 10390  0154B0  0100               	movlb	0	; () banked
 10391  0154B2  5F70               	subwf	___awmod@dividend& (0+255),f,b
 10392  0154B4  0100               	movlb	0	; () banked
 10393  0154B6  5173               	movf	(___awmod@divisor+1)& (0+255),w,b
 10394  0154B8  0100               	movlb	0	; () banked
 10395  0154BA  5B71               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 10396  0154BC  D000               	goto	l7560
 10397  0154BE                     l7560:
 10398                           
 10399                           ; BSR set to: 0
 10400  0154BE  0100               	movlb	0	; () banked
 10401  0154C0  90D8               	bcf	status,0,c
 10402  0154C2  3373               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 10403  0154C4  3372               	rrcf	___awmod@divisor& (0+255),f,b
 10404                           
 10405                           ; BSR set to: 0
 10406  0154C6  0100               	movlb	0	; () banked
 10407  0154C8  2F74               	decfsz	___awmod@counter& (0+255),f,b
 10408  0154CA  D7E6               	goto	l7556
 10409                           
 10410                           ; BSR set to: 0
 10411  0154CC  D000               	goto	l7564
 10412  0154CE                     l7564:
 10413                           
 10414                           ; BSR set to: 0
 10415  0154CE  0100               	movlb	0	; () banked
 10416  0154D0  5175               	movf	___awmod@sign& (0+255),w,b
 10417  0154D2  0100               	movlb	0	; () banked
 10418  0154D4  B4D8               	btfsc	status,2,c
 10419  0154D6  D006               	goto	l7568
 10420                           
 10421                           ; BSR set to: 0
 10422  0154D8  0100               	movlb	0	; () banked
 10423  0154DA  6D70               	negf	___awmod@dividend& (0+255),b
 10424  0154DC  1F71               	comf	(___awmod@dividend+1)& (0+255),f,b
 10425  0154DE  B0D8               	btfsc	status,0,c
 10426  0154E0  2B71               	incf	(___awmod@dividend+1)& (0+255),f,b
 10427  0154E2  D000               	goto	l7568
 10428  0154E4                     l7568:
 10429                           
 10430                           ; BSR set to: 0
 10431  0154E4  C070  F070         	movff	___awmod@dividend,?___awmod
 10432  0154E8  C071  F071         	movff	___awmod@dividend+1,?___awmod+1
 10433  0154EC  0012               	return	
 10434                           
 10435                           ; BSR set to: 0
 10436                           
 10437                           ; BSR set to: 0
 10438  0154EE  0012               	return		;funcret
 10439  0154F0                     __end_of___awmod:
 10440                           	opt stack 0
 10441                           tblptru	equ	0xFF8
 10442                           tblptrh	equ	0xFF7
 10443                           tblptrl	equ	0xFF6
 10444                           tablat	equ	0xFF5
 10445                           prodh	equ	0xFF4
 10446                           prodl	equ	0xFF3
 10447                           intcon	equ	0xFF2
 10448                           postinc0	equ	0xFEE
 10449                           wreg	equ	0xFE8
 10450                           indf2	equ	0xFDF
 10451                           postinc2	equ	0xFDE
 10452                           fsr2h	equ	0xFDA
 10453                           fsr2l	equ	0xFD9
 10454                           status	equ	0xFD8
 10455                           
 10456 ;; *************** function ___awdiv *****************
 10457 ;; Defined at:
 10458 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
 10459 ;; Parameters:    Size  Location     Type
 10460 ;;  dividend        2   22[BANK0 ] int 
 10461 ;;  divisor         2   24[BANK0 ] int 
 10462 ;; Auto vars:     Size  Location     Type
 10463 ;;  quotient        2   28[BANK0 ] int 
 10464 ;;  sign            1   27[BANK0 ] unsigned char 
 10465 ;;  counter         1   26[BANK0 ] unsigned char 
 10466 ;; Return value:  Size  Location     Type
 10467 ;;                  2   22[BANK0 ] int 
 10468 ;; Registers used:
 10469 ;;		wreg, status,2, status,0
 10470 ;; Tracked objects:
 10471 ;;		On entry : 0/0
 10472 ;;		On exit  : 0/0
 10473 ;;		Unchanged: 0/0
 10474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10475 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10476 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10478 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10479 ;;Total ram usage:        8 bytes
 10480 ;; Hardware stack levels used:    1
 10481 ;; Hardware stack levels required when called:    3
 10482 ;; This function calls:
 10483 ;;		Nothing
 10484 ;; This function is called by:
 10485 ;;		_fround
 10486 ;;		_scale
 10487 ;;		_sprintf
 10488 ;; This function uses a non-reentrant model
 10489 ;;
 10490                           
 10491                           	psect	text18
 10492  015122                     __ptext18:
 10493                           	opt stack 0
 10494  015122                     ___awdiv:
 10495                           	opt stack 24
 10496                           
 10497                           ; BSR set to: 0
 10498                           ;incstack = 0
 10499  015122  0E00               	movlw	0
 10500  015124  0100               	movlb	0	; () banked
 10501  015126  6F7B               	movwf	___awdiv@sign& (0+255),b
 10502                           
 10503                           ; BSR set to: 0
 10504  015128  0100               	movlb	0	; () banked
 10505  01512A  AF79               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10506  01512C  D009               	goto	l7500
 10507                           
 10508                           ; BSR set to: 0
 10509  01512E  0100               	movlb	0	; () banked
 10510  015130  6D78               	negf	___awdiv@divisor& (0+255),b
 10511  015132  1F79               	comf	(___awdiv@divisor+1)& (0+255),f,b
 10512  015134  B0D8               	btfsc	status,0,c
 10513  015136  2B79               	incf	(___awdiv@divisor+1)& (0+255),f,b
 10514                           
 10515                           ; BSR set to: 0
 10516  015138  0E01               	movlw	1
 10517  01513A  0100               	movlb	0	; () banked
 10518  01513C  6F7B               	movwf	___awdiv@sign& (0+255),b
 10519  01513E  D000               	goto	l7500
 10520  015140                     l7500:
 10521                           
 10522                           ; BSR set to: 0
 10523  015140  0100               	movlb	0	; () banked
 10524  015142  AF77               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 10525  015144  D009               	goto	l7506
 10526                           
 10527                           ; BSR set to: 0
 10528  015146  0100               	movlb	0	; () banked
 10529  015148  6D76               	negf	___awdiv@dividend& (0+255),b
 10530  01514A  1F77               	comf	(___awdiv@dividend+1)& (0+255),f,b
 10531  01514C  B0D8               	btfsc	status,0,c
 10532  01514E  2B77               	incf	(___awdiv@dividend+1)& (0+255),f,b
 10533                           
 10534                           ; BSR set to: 0
 10535  015150  0E01               	movlw	1
 10536  015152  0100               	movlb	0	; () banked
 10537  015154  1B7B               	xorwf	___awdiv@sign& (0+255),f,b
 10538  015156  D000               	goto	l7506
 10539  015158                     l7506:
 10540                           
 10541                           ; BSR set to: 0
 10542  015158  0E00               	movlw	0
 10543  01515A  0100               	movlb	0	; () banked
 10544  01515C  6F7D               	movwf	(___awdiv@quotient+1)& (0+255),b
 10545  01515E  0E00               	movlw	0
 10546  015160  6F7C               	movwf	___awdiv@quotient& (0+255),b
 10547                           
 10548                           ; BSR set to: 0
 10549  015162  0100               	movlb	0	; () banked
 10550  015164  5178               	movf	___awdiv@divisor& (0+255),w,b
 10551  015166  0100               	movlb	0	; () banked
 10552  015168  1179               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 10553  01516A  B4D8               	btfsc	status,2,c
 10554  01516C  D031               	goto	l7528
 10555                           
 10556                           ; BSR set to: 0
 10557  01516E  0E01               	movlw	1
 10558  015170  0100               	movlb	0	; () banked
 10559  015172  6F7A               	movwf	___awdiv@counter& (0+255),b
 10560  015174  D007               	goto	l7514
 10561  015176                     l7512:
 10562                           
 10563                           ; BSR set to: 0
 10564  015176  0100               	movlb	0	; () banked
 10565  015178  90D8               	bcf	status,0,c
 10566  01517A  3778               	rlcf	___awdiv@divisor& (0+255),f,b
 10567  01517C  3779               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 10568  01517E  0100               	movlb	0	; () banked
 10569  015180  2B7A               	incf	___awdiv@counter& (0+255),f,b
 10570  015182  D000               	goto	l7514
 10571  015184                     l7514:
 10572                           
 10573                           ; BSR set to: 0
 10574  015184  0100               	movlb	0	; () banked
 10575  015186  BF79               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
 10576  015188  D002               	goto	l7516
 10577  01518A  D7F5               	goto	l7512
 10578                           
 10579                           ; BSR set to: 0
 10580  01518C  D000               	goto	l7516
 10581  01518E                     l7516:
 10582                           
 10583                           ; BSR set to: 0
 10584  01518E  0100               	movlb	0	; () banked
 10585  015190  90D8               	bcf	status,0,c
 10586  015192  377C               	rlcf	___awdiv@quotient& (0+255),f,b
 10587  015194  377D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 10588                           
 10589                           ; BSR set to: 0
 10590  015196  0100               	movlb	0	; () banked
 10591  015198  5178               	movf	___awdiv@divisor& (0+255),w,b
 10592  01519A  0100               	movlb	0	; () banked
 10593  01519C  5D76               	subwf	___awdiv@dividend& (0+255),w,b
 10594  01519E  0100               	movlb	0	; () banked
 10595  0151A0  5179               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10596  0151A2  0100               	movlb	0	; () banked
 10597  0151A4  5977               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 10598  0151A6  A0D8               	btfss	status,0,c
 10599  0151A8  D00B               	goto	l7524
 10600                           
 10601                           ; BSR set to: 0
 10602  0151AA  0100               	movlb	0	; () banked
 10603  0151AC  5178               	movf	___awdiv@divisor& (0+255),w,b
 10604  0151AE  0100               	movlb	0	; () banked
 10605  0151B0  5F76               	subwf	___awdiv@dividend& (0+255),f,b
 10606  0151B2  0100               	movlb	0	; () banked
 10607  0151B4  5179               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10608  0151B6  0100               	movlb	0	; () banked
 10609  0151B8  5B77               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 10610                           
 10611                           ; BSR set to: 0
 10612  0151BA  0100               	movlb	0	; () banked
 10613  0151BC  817C               	bsf	___awdiv@quotient& (0+255),0,b
 10614  0151BE  D000               	goto	l7524
 10615  0151C0                     l7524:
 10616                           
 10617                           ; BSR set to: 0
 10618  0151C0  0100               	movlb	0	; () banked
 10619  0151C2  90D8               	bcf	status,0,c
 10620  0151C4  3379               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 10621  0151C6  3378               	rrcf	___awdiv@divisor& (0+255),f,b
 10622                           
 10623                           ; BSR set to: 0
 10624  0151C8  0100               	movlb	0	; () banked
 10625  0151CA  2F7A               	decfsz	___awdiv@counter& (0+255),f,b
 10626  0151CC  D7E0               	goto	l7516
 10627                           
 10628                           ; BSR set to: 0
 10629  0151CE  D000               	goto	l7528
 10630  0151D0                     l7528:
 10631                           
 10632                           ; BSR set to: 0
 10633  0151D0  0100               	movlb	0	; () banked
 10634  0151D2  517B               	movf	___awdiv@sign& (0+255),w,b
 10635  0151D4  0100               	movlb	0	; () banked
 10636  0151D6  B4D8               	btfsc	status,2,c
 10637  0151D8  D006               	goto	l7532
 10638                           
 10639                           ; BSR set to: 0
 10640  0151DA  0100               	movlb	0	; () banked
 10641  0151DC  6D7C               	negf	___awdiv@quotient& (0+255),b
 10642  0151DE  1F7D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 10643  0151E0  B0D8               	btfsc	status,0,c
 10644  0151E2  2B7D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 10645  0151E4  D000               	goto	l7532
 10646  0151E6                     l7532:
 10647                           
 10648                           ; BSR set to: 0
 10649  0151E6  C07C  F076         	movff	___awdiv@quotient,?___awdiv
 10650  0151EA  C07D  F077         	movff	___awdiv@quotient+1,?___awdiv+1
 10651  0151EE  0012               	return	
 10652                           
 10653                           ; BSR set to: 0
 10654                           
 10655                           ; BSR set to: 0
 10656  0151F0  0012               	return		;funcret
 10657  0151F2                     __end_of___awdiv:
 10658                           	opt stack 0
 10659                           tblptru	equ	0xFF8
 10660                           tblptrh	equ	0xFF7
 10661                           tblptrl	equ	0xFF6
 10662                           tablat	equ	0xFF5
 10663                           prodh	equ	0xFF4
 10664                           prodl	equ	0xFF3
 10665                           intcon	equ	0xFF2
 10666                           postinc0	equ	0xFEE
 10667                           wreg	equ	0xFE8
 10668                           indf2	equ	0xFDF
 10669                           postinc2	equ	0xFDE
 10670                           fsr2h	equ	0xFDA
 10671                           fsr2l	equ	0xFD9
 10672                           status	equ	0xFD8
 10673                           
 10674 ;; *************** function __tdiv_to_l_ *****************
 10675 ;; Defined at:
 10676 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdivl.c"
 10677 ;; Parameters:    Size  Location     Type
 10678 ;;  f1              4   16[BANK0 ] float 
 10679 ;;  f2              4   20[BANK0 ] float 
 10680 ;; Auto vars:     Size  Location     Type
 10681 ;;  quot            4   27[BANK0 ] unsigned long 
 10682 ;;  exp1            1   32[BANK0 ] unsigned char 
 10683 ;;  cntr            1   31[BANK0 ] unsigned char 
 10684 ;; Return value:  Size  Location     Type
 10685 ;;                  4   16[BANK0 ] unsigned long 
 10686 ;; Registers used:
 10687 ;;		wreg, status,2, status,0
 10688 ;; Tracked objects:
 10689 ;;		On entry : 0/0
 10690 ;;		On exit  : 0/0
 10691 ;;		Unchanged: 0/0
 10692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10693 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10694 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10695 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10696 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10697 ;;Total ram usage:       17 bytes
 10698 ;; Hardware stack levels used:    1
 10699 ;; Hardware stack levels required when called:    3
 10700 ;; This function calls:
 10701 ;;		Nothing
 10702 ;; This function is called by:
 10703 ;;		_sprintf
 10704 ;; This function uses a non-reentrant model
 10705 ;;
 10706                           
 10707                           	psect	text19
 10708  014560                     __ptext19:
 10709                           	opt stack 0
 10710  014560                     __tdiv_to_l_:
 10711                           	opt stack 25
 10712                           
 10713                           ; BSR set to: 0
 10714                           ;incstack = 0
 10715  014560  C072  F078         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 10716  014564  0100               	movlb	0	; () banked
 10717  014566  6B79               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 10718  014568  6B7A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 10719  01456A  0100               	movlb	0	; () banked
 10720  01456C  3571               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10721  01456E  0100               	movlb	0	; () banked
 10722  014570  3778               	rlcf	??__tdiv_to_l_& (0+255),f,b
 10723  014572  E301               	bnc	u9661
 10724  014574  8179               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 10725  014576                     u9661:
 10726  014576  0100               	movlb	0	; () banked
 10727  014578  5178               	movf	??__tdiv_to_l_& (0+255),w,b
 10728  01457A  0100               	movlb	0	; () banked
 10729  01457C  6F80               	movwf	__tdiv_to_l_@exp1& (0+255),b
 10730  01457E  0100               	movlb	0	; () banked
 10731  014580  5180               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10732  014582  A4D8               	btfss	status,2,c
 10733  014584  D00A               	goto	l7682
 10734                           
 10735                           ; BSR set to: 0
 10736  014586  0E00               	movlw	0
 10737  014588  0100               	movlb	0	; () banked
 10738  01458A  6F70               	movwf	?__tdiv_to_l_& (0+255),b
 10739  01458C  0E00               	movlw	0
 10740  01458E  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10741  014590  0E00               	movlw	0
 10742  014592  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10743  014594  0E00               	movlw	0
 10744  014596  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10745                           
 10746                           ; BSR set to: 0
 10747  014598  0012               	return	
 10748  01459A                     l7682:
 10749                           
 10750                           ; BSR set to: 0
 10751  01459A  C076  F078         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 10752  01459E  0100               	movlb	0	; () banked
 10753  0145A0  6B79               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 10754  0145A2  6B7A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 10755  0145A4  0100               	movlb	0	; () banked
 10756  0145A6  3575               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10757  0145A8  0100               	movlb	0	; () banked
 10758  0145AA  3778               	rlcf	??__tdiv_to_l_& (0+255),f,b
 10759  0145AC  E301               	bnc	u9681
 10760  0145AE  8179               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 10761  0145B0                     u9681:
 10762  0145B0  0100               	movlb	0	; () banked
 10763  0145B2  5178               	movf	??__tdiv_to_l_& (0+255),w,b
 10764  0145B4  0100               	movlb	0	; () banked
 10765  0145B6  6F7F               	movwf	__tdiv_to_l_@cntr& (0+255),b
 10766  0145B8  0100               	movlb	0	; () banked
 10767  0145BA  517F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 10768  0145BC  A4D8               	btfss	status,2,c
 10769  0145BE  D00A               	goto	l7688
 10770                           
 10771                           ; BSR set to: 0
 10772  0145C0  0E00               	movlw	0
 10773  0145C2  0100               	movlb	0	; () banked
 10774  0145C4  6F70               	movwf	?__tdiv_to_l_& (0+255),b
 10775  0145C6  0E00               	movlw	0
 10776  0145C8  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10777  0145CA  0E00               	movlw	0
 10778  0145CC  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10779  0145CE  0E00               	movlw	0
 10780  0145D0  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10781                           
 10782                           ; BSR set to: 0
 10783  0145D2  0012               	return	
 10784  0145D4                     l7688:
 10785                           
 10786                           ; BSR set to: 0
 10787  0145D4  0100               	movlb	0	; () banked
 10788  0145D6  8F71               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 10789                           
 10790                           ; BSR set to: 0
 10791  0145D8  0EFF               	movlw	255
 10792  0145DA  0100               	movlb	0	; () banked
 10793  0145DC  1770               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 10794  0145DE  0EFF               	movlw	255
 10795  0145E0  0100               	movlb	0	; () banked
 10796  0145E2  1771               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10797  0145E4  0E00               	movlw	0
 10798  0145E6  0100               	movlb	0	; () banked
 10799  0145E8  1772               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10800  0145EA  0100               	movlb	0	; () banked
 10801  0145EC  8F75               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 10802                           
 10803                           ; BSR set to: 0
 10804  0145EE  0EFF               	movlw	255
 10805  0145F0  0100               	movlb	0	; () banked
 10806  0145F2  1774               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 10807  0145F4  0EFF               	movlw	255
 10808  0145F6  0100               	movlb	0	; () banked
 10809  0145F8  1775               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 10810  0145FA  0E00               	movlw	0
 10811  0145FC  0100               	movlb	0	; () banked
 10812  0145FE  1776               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 10813                           
 10814                           ; BSR set to: 0
 10815  014600  0E00               	movlw	0
 10816  014602  0100               	movlb	0	; () banked
 10817  014604  6F7B               	movwf	__tdiv_to_l_@quot& (0+255),b
 10818  014606  0E00               	movlw	0
 10819  014608  6F7C               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 10820  01460A  0E00               	movlw	0
 10821  01460C  6F7D               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 10822  01460E  0E00               	movlw	0
 10823  014610  6F7E               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 10824                           
 10825                           ; BSR set to: 0
 10826  014612  0E7F               	movlw	127
 10827  014614  0100               	movlb	0	; () banked
 10828  014616  5F80               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 10829                           
 10830                           ; BSR set to: 0
 10831  014618  0100               	movlb	0	; () banked
 10832  01461A  517F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 10833  01461C  0F98               	addlw	152
 10834  01461E  0100               	movlb	0	; () banked
 10835  014620  5F80               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 10836                           
 10837                           ; BSR set to: 0
 10838  014622  0E18               	movlw	24
 10839  014624  0100               	movlb	0	; () banked
 10840  014626  6F7F               	movwf	__tdiv_to_l_@cntr& (0+255),b
 10841  014628                     l1475:
 10842                           
 10843                           ; BSR set to: 0
 10844  014628  0100               	movlb	0	; () banked
 10845  01462A  90D8               	bcf	status,0,c
 10846  01462C  377B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10847  01462E  377C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10848  014630  377D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10849  014632  377E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10850                           
 10851                           ; BSR set to: 0
 10852  014634  0100               	movlb	0	; () banked
 10853  014636  5174               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10854  014638  0100               	movlb	0	; () banked
 10855  01463A  5D70               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 10856  01463C  0100               	movlb	0	; () banked
 10857  01463E  5175               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10858  014640  0100               	movlb	0	; () banked
 10859  014642  5971               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10860  014644  0100               	movlb	0	; () banked
 10861  014646  5176               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10862  014648  0100               	movlb	0	; () banked
 10863  01464A  5972               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 10864  01464C  A0D8               	btfss	status,0,c
 10865  01464E  D00E               	goto	l1476
 10866                           
 10867                           ; BSR set to: 0
 10868  014650  0100               	movlb	0	; () banked
 10869  014652  5174               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10870  014654  0100               	movlb	0	; () banked
 10871  014656  5F70               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 10872  014658  0100               	movlb	0	; () banked
 10873  01465A  5175               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10874  01465C  0100               	movlb	0	; () banked
 10875  01465E  5B71               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10876  014660  0100               	movlb	0	; () banked
 10877  014662  5176               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10878  014664  0100               	movlb	0	; () banked
 10879  014666  5B72               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10880                           
 10881                           ; BSR set to: 0
 10882  014668  0100               	movlb	0	; () banked
 10883  01466A  817B               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 10884  01466C                     l1476:
 10885                           
 10886                           ; BSR set to: 0
 10887  01466C  0100               	movlb	0	; () banked
 10888  01466E  90D8               	bcf	status,0,c
 10889  014670  3770               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 10890  014672  3771               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10891  014674  3772               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10892                           
 10893                           ; BSR set to: 0
 10894  014676  0100               	movlb	0	; () banked
 10895  014678  2F7F               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 10896  01467A  D7D6               	goto	l1475
 10897  01467C  D000               	goto	l7710
 10898  01467E                     l7710:
 10899                           
 10900                           ; BSR set to: 0
 10901  01467E  0100               	movlb	0	; () banked
 10902  014680  AF80               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 10903  014682  D01B               	goto	l7722
 10904                           
 10905                           ; BSR set to: 0
 10906  014684  0100               	movlb	0	; () banked
 10907  014686  5180               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10908  014688  0A80               	xorlw	128
 10909  01468A  0F97               	addlw	151
 10910  01468C  B0D8               	btfsc	status,0,c
 10911  01468E  D00B               	goto	l7718
 10912                           
 10913                           ; BSR set to: 0
 10914  014690  0E00               	movlw	0
 10915  014692  0100               	movlb	0	; () banked
 10916  014694  6F70               	movwf	?__tdiv_to_l_& (0+255),b
 10917  014696  0E00               	movlw	0
 10918  014698  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10919  01469A  0E00               	movlw	0
 10920  01469C  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10921  01469E  0E00               	movlw	0
 10922  0146A0  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10923                           
 10924                           ; BSR set to: 0
 10925  0146A2  0012               	return	
 10926                           
 10927                           ; BSR set to: 0
 10928  0146A4  D000               	goto	l7718
 10929  0146A6                     l7718:
 10930                           
 10931                           ; BSR set to: 0
 10932  0146A6  0100               	movlb	0	; () banked
 10933  0146A8  90D8               	bcf	status,0,c
 10934  0146AA  337E               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10935  0146AC  337D               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10936  0146AE  337C               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10937  0146B0  337B               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 10938                           
 10939                           ; BSR set to: 0
 10940  0146B2  0100               	movlb	0	; () banked
 10941  0146B4  3F80               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 10942  0146B6  D7F7               	goto	l7718
 10943                           
 10944                           ; BSR set to: 0
 10945  0146B8  D01D               	goto	l1482
 10946  0146BA                     l7722:
 10947                           
 10948                           ; BSR set to: 0
 10949  0146BA  0E17               	movlw	23
 10950  0146BC  0100               	movlb	0	; () banked
 10951  0146BE  6580               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 10952  0146C0  D014               	goto	l7730
 10953                           
 10954                           ; BSR set to: 0
 10955  0146C2  0E00               	movlw	0
 10956  0146C4  0100               	movlb	0	; () banked
 10957  0146C6  6F70               	movwf	?__tdiv_to_l_& (0+255),b
 10958  0146C8  0E00               	movlw	0
 10959  0146CA  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10960  0146CC  0E00               	movlw	0
 10961  0146CE  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10962  0146D0  0E00               	movlw	0
 10963  0146D2  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10964                           
 10965                           ; BSR set to: 0
 10966  0146D4  0012               	return	
 10967                           
 10968                           ; BSR set to: 0
 10969  0146D6  D009               	goto	l7730
 10970  0146D8                     l7728:
 10971                           
 10972                           ; BSR set to: 0
 10973  0146D8  0100               	movlb	0	; () banked
 10974  0146DA  90D8               	bcf	status,0,c
 10975  0146DC  377B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10976  0146DE  377C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10977  0146E0  377D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10978  0146E2  377E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10979  0146E4  0100               	movlb	0	; () banked
 10980  0146E6  0780               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 10981  0146E8  D000               	goto	l7730
 10982  0146EA                     l7730:
 10983                           
 10984                           ; BSR set to: 0
 10985  0146EA  0100               	movlb	0	; () banked
 10986  0146EC  5180               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10987  0146EE  0100               	movlb	0	; () banked
 10988  0146F0  A4D8               	btfss	status,2,c
 10989  0146F2  D7F2               	goto	l7728
 10990  0146F4                     l1482:
 10991                           
 10992                           ; BSR set to: 0
 10993  0146F4  C07B  F070         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 10994  0146F8  C07C  F071         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 10995  0146FC  C07D  F072         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 10996  014700  C07E  F073         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 10997                           
 10998                           ; BSR set to: 0
 10999  014704  0012               	return		;funcret
 11000  014706                     __end_of__tdiv_to_l_:
 11001                           	opt stack 0
 11002                           tblptru	equ	0xFF8
 11003                           tblptrh	equ	0xFF7
 11004                           tblptrl	equ	0xFF6
 11005                           tablat	equ	0xFF5
 11006                           prodh	equ	0xFF4
 11007                           prodl	equ	0xFF3
 11008                           intcon	equ	0xFF2
 11009                           postinc0	equ	0xFEE
 11010                           wreg	equ	0xFE8
 11011                           indf2	equ	0xFDF
 11012                           postinc2	equ	0xFDE
 11013                           fsr2h	equ	0xFDA
 11014                           fsr2l	equ	0xFD9
 11015                           status	equ	0xFD8
 11016                           
 11017 ;; *************** function __div_to_l_ *****************
 11018 ;; Defined at:
 11019 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldivl.c"
 11020 ;; Parameters:    Size  Location     Type
 11021 ;;  f1              4   16[BANK0 ] unsigned long 
 11022 ;;  f2              4   20[BANK0 ] unsigned long 
 11023 ;; Auto vars:     Size  Location     Type
 11024 ;;  quot            4   24[BANK0 ] unsigned long 
 11025 ;;  exp1            1   29[BANK0 ] unsigned char 
 11026 ;;  cntr            1   28[BANK0 ] unsigned char 
 11027 ;; Return value:  Size  Location     Type
 11028 ;;                  4   16[BANK0 ] unsigned long 
 11029 ;; Registers used:
 11030 ;;		wreg, status,2, status,0
 11031 ;; Tracked objects:
 11032 ;;		On entry : 0/0
 11033 ;;		On exit  : 0/0
 11034 ;;		Unchanged: 0/0
 11035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11036 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11037 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11039 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11040 ;;Total ram usage:       14 bytes
 11041 ;; Hardware stack levels used:    1
 11042 ;; Hardware stack levels required when called:    3
 11043 ;; This function calls:
 11044 ;;		Nothing
 11045 ;; This function is called by:
 11046 ;;		_sprintf
 11047 ;; This function uses a non-reentrant model
 11048 ;;
 11049                           
 11050                           	psect	text20
 11051  014706                     __ptext20:
 11052                           	opt stack 0
 11053  014706                     __div_to_l_:
 11054                           	opt stack 25
 11055                           
 11056                           ; BSR set to: 0
 11057                           ;incstack = 0
 11058  014706  0100               	movlb	0	; () banked
 11059  014708  3572               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 11060  01470A  3573               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 11061  01470C  0100               	movlb	0	; () banked
 11062  01470E  6F7D               	movwf	__div_to_l_@exp1& (0+255),b
 11063  014710  0100               	movlb	0	; () banked
 11064  014712  517D               	movf	__div_to_l_@exp1& (0+255),w,b
 11065  014714  A4D8               	btfss	status,2,c
 11066  014716  D00A               	goto	l7738
 11067                           
 11068                           ; BSR set to: 0
 11069  014718  0E00               	movlw	0
 11070  01471A  0100               	movlb	0	; () banked
 11071  01471C  6F70               	movwf	?__div_to_l_& (0+255),b
 11072  01471E  0E00               	movlw	0
 11073  014720  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
 11074  014722  0E00               	movlw	0
 11075  014724  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
 11076  014726  0E00               	movlw	0
 11077  014728  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
 11078                           
 11079                           ; BSR set to: 0
 11080  01472A  0012               	return	
 11081  01472C                     l7738:
 11082                           
 11083                           ; BSR set to: 0
 11084  01472C  0100               	movlb	0	; () banked
 11085  01472E  3576               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 11086  014730  3577               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 11087  014732  0100               	movlb	0	; () banked
 11088  014734  6F7C               	movwf	__div_to_l_@cntr& (0+255),b
 11089  014736  0100               	movlb	0	; () banked
 11090  014738  517C               	movf	__div_to_l_@cntr& (0+255),w,b
 11091  01473A  A4D8               	btfss	status,2,c
 11092  01473C  D00A               	goto	l7744
 11093                           
 11094                           ; BSR set to: 0
 11095  01473E  0E00               	movlw	0
 11096  014740  0100               	movlb	0	; () banked
 11097  014742  6F70               	movwf	?__div_to_l_& (0+255),b
 11098  014744  0E00               	movlw	0
 11099  014746  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
 11100  014748  0E00               	movlw	0
 11101  01474A  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
 11102  01474C  0E00               	movlw	0
 11103  01474E  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
 11104                           
 11105                           ; BSR set to: 0
 11106  014750  0012               	return	
 11107  014752                     l7744:
 11108                           
 11109                           ; BSR set to: 0
 11110  014752  0100               	movlb	0	; () banked
 11111  014754  8F72               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 11112                           
 11113                           ; BSR set to: 0
 11114  014756  0EFF               	movlw	255
 11115  014758  0100               	movlb	0	; () banked
 11116  01475A  1770               	andwf	__div_to_l_@f1& (0+255),f,b
 11117  01475C  0EFF               	movlw	255
 11118  01475E  1771               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 11119  014760  0EFF               	movlw	255
 11120  014762  1772               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 11121  014764  0E00               	movlw	0
 11122  014766  1773               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 11123                           
 11124                           ; BSR set to: 0
 11125  014768  0100               	movlb	0	; () banked
 11126  01476A  8F76               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 11127  01476C  0EFF               	movlw	255
 11128  01476E  0100               	movlb	0	; () banked
 11129  014770  1774               	andwf	__div_to_l_@f2& (0+255),f,b
 11130  014772  0EFF               	movlw	255
 11131  014774  1775               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 11132  014776  0EFF               	movlw	255
 11133  014778  1776               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 11134  01477A  0E00               	movlw	0
 11135  01477C  1777               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 11136                           
 11137                           ; BSR set to: 0
 11138  01477E  0E00               	movlw	0
 11139  014780  0100               	movlb	0	; () banked
 11140  014782  6F78               	movwf	__div_to_l_@quot& (0+255),b
 11141  014784  0E00               	movlw	0
 11142  014786  6F79               	movwf	(__div_to_l_@quot+1)& (0+255),b
 11143  014788  0E00               	movlw	0
 11144  01478A  6F7A               	movwf	(__div_to_l_@quot+2)& (0+255),b
 11145  01478C  0E00               	movlw	0
 11146  01478E  6F7B               	movwf	(__div_to_l_@quot+3)& (0+255),b
 11147                           
 11148                           ; BSR set to: 0
 11149  014790  0E7F               	movlw	127
 11150  014792  0100               	movlb	0	; () banked
 11151  014794  5F7D               	subwf	__div_to_l_@exp1& (0+255),f,b
 11152                           
 11153                           ; BSR set to: 0
 11154  014796  0100               	movlb	0	; () banked
 11155  014798  517C               	movf	__div_to_l_@cntr& (0+255),w,b
 11156  01479A  0FA0               	addlw	160
 11157  01479C  0100               	movlb	0	; () banked
 11158  01479E  5F7D               	subwf	__div_to_l_@exp1& (0+255),f,b
 11159                           
 11160                           ; BSR set to: 0
 11161  0147A0  0E20               	movlw	32
 11162  0147A2  0100               	movlb	0	; () banked
 11163  0147A4  6F7C               	movwf	__div_to_l_@cntr& (0+255),b
 11164  0147A6  D000               	goto	l7758
 11165  0147A8                     l7758:
 11166                           
 11167                           ; BSR set to: 0
 11168  0147A8  0100               	movlb	0	; () banked
 11169  0147AA  90D8               	bcf	status,0,c
 11170  0147AC  3778               	rlcf	__div_to_l_@quot& (0+255),f,b
 11171  0147AE  3779               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 11172  0147B0  377A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 11173  0147B2  377B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 11174                           
 11175                           ; BSR set to: 0
 11176  0147B4  0100               	movlb	0	; () banked
 11177  0147B6  5174               	movf	__div_to_l_@f2& (0+255),w,b
 11178  0147B8  0100               	movlb	0	; () banked
 11179  0147BA  5D70               	subwf	__div_to_l_@f1& (0+255),w,b
 11180  0147BC  0100               	movlb	0	; () banked
 11181  0147BE  5175               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 11182  0147C0  0100               	movlb	0	; () banked
 11183  0147C2  5971               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 11184  0147C4  0100               	movlb	0	; () banked
 11185  0147C6  5176               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 11186  0147C8  0100               	movlb	0	; () banked
 11187  0147CA  5972               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 11188  0147CC  0100               	movlb	0	; () banked
 11189  0147CE  5177               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 11190  0147D0  0100               	movlb	0	; () banked
 11191  0147D2  5973               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 11192  0147D4  A0D8               	btfss	status,0,c
 11193  0147D6  D013               	goto	l7766
 11194                           
 11195                           ; BSR set to: 0
 11196  0147D8  0100               	movlb	0	; () banked
 11197  0147DA  5174               	movf	__div_to_l_@f2& (0+255),w,b
 11198  0147DC  0100               	movlb	0	; () banked
 11199  0147DE  5F70               	subwf	__div_to_l_@f1& (0+255),f,b
 11200  0147E0  0100               	movlb	0	; () banked
 11201  0147E2  5175               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 11202  0147E4  0100               	movlb	0	; () banked
 11203  0147E6  5B71               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 11204  0147E8  0100               	movlb	0	; () banked
 11205  0147EA  5176               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 11206  0147EC  0100               	movlb	0	; () banked
 11207  0147EE  5B72               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 11208  0147F0  0100               	movlb	0	; () banked
 11209  0147F2  5177               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 11210  0147F4  0100               	movlb	0	; () banked
 11211  0147F6  5B73               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 11212                           
 11213                           ; BSR set to: 0
 11214  0147F8  0100               	movlb	0	; () banked
 11215  0147FA  8178               	bsf	__div_to_l_@quot& (0+255),0,b
 11216  0147FC  D000               	goto	l7766
 11217  0147FE                     l7766:
 11218                           
 11219                           ; BSR set to: 0
 11220  0147FE  0100               	movlb	0	; () banked
 11221  014800  90D8               	bcf	status,0,c
 11222  014802  3770               	rlcf	__div_to_l_@f1& (0+255),f,b
 11223  014804  3771               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 11224  014806  3772               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 11225  014808  3773               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 11226                           
 11227                           ; BSR set to: 0
 11228  01480A  0100               	movlb	0	; () banked
 11229  01480C  2F7C               	decfsz	__div_to_l_@cntr& (0+255),f,b
 11230  01480E  D7CC               	goto	l7758
 11231  014810  D000               	goto	l7770
 11232  014812                     l7770:
 11233                           
 11234                           ; BSR set to: 0
 11235  014812  0100               	movlb	0	; () banked
 11236  014814  AF7D               	btfss	__div_to_l_@exp1& (0+255),7,b
 11237  014816  D01B               	goto	l7782
 11238                           
 11239                           ; BSR set to: 0
 11240  014818  0100               	movlb	0	; () banked
 11241  01481A  517D               	movf	__div_to_l_@exp1& (0+255),w,b
 11242  01481C  0A80               	xorlw	128
 11243  01481E  0F9F               	addlw	159
 11244  014820  B0D8               	btfsc	status,0,c
 11245  014822  D00B               	goto	l7778
 11246                           
 11247                           ; BSR set to: 0
 11248  014824  0E00               	movlw	0
 11249  014826  0100               	movlb	0	; () banked
 11250  014828  6F70               	movwf	?__div_to_l_& (0+255),b
 11251  01482A  0E00               	movlw	0
 11252  01482C  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
 11253  01482E  0E00               	movlw	0
 11254  014830  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
 11255  014832  0E00               	movlw	0
 11256  014834  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
 11257                           
 11258                           ; BSR set to: 0
 11259  014836  0012               	return	
 11260                           
 11261                           ; BSR set to: 0
 11262  014838  D000               	goto	l7778
 11263  01483A                     l7778:
 11264                           
 11265                           ; BSR set to: 0
 11266  01483A  0100               	movlb	0	; () banked
 11267  01483C  90D8               	bcf	status,0,c
 11268  01483E  337B               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 11269  014840  337A               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 11270  014842  3379               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 11271  014844  3378               	rrcf	__div_to_l_@quot& (0+255),f,b
 11272                           
 11273                           ; BSR set to: 0
 11274  014846  0100               	movlb	0	; () banked
 11275  014848  3F7D               	incfsz	__div_to_l_@exp1& (0+255),f,b
 11276  01484A  D7F7               	goto	l7778
 11277                           
 11278                           ; BSR set to: 0
 11279  01484C  D01D               	goto	l1361
 11280  01484E                     l7782:
 11281                           
 11282                           ; BSR set to: 0
 11283  01484E  0E1F               	movlw	31
 11284  014850  0100               	movlb	0	; () banked
 11285  014852  657D               	cpfsgt	__div_to_l_@exp1& (0+255),b
 11286  014854  D014               	goto	l7790
 11287                           
 11288                           ; BSR set to: 0
 11289  014856  0E00               	movlw	0
 11290  014858  0100               	movlb	0	; () banked
 11291  01485A  6F70               	movwf	?__div_to_l_& (0+255),b
 11292  01485C  0E00               	movlw	0
 11293  01485E  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
 11294  014860  0E00               	movlw	0
 11295  014862  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
 11296  014864  0E00               	movlw	0
 11297  014866  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
 11298                           
 11299                           ; BSR set to: 0
 11300  014868  0012               	return	
 11301                           
 11302                           ; BSR set to: 0
 11303  01486A  D009               	goto	l7790
 11304  01486C                     l7788:
 11305                           
 11306                           ; BSR set to: 0
 11307  01486C  0100               	movlb	0	; () banked
 11308  01486E  90D8               	bcf	status,0,c
 11309  014870  3778               	rlcf	__div_to_l_@quot& (0+255),f,b
 11310  014872  3779               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 11311  014874  377A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 11312  014876  377B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 11313  014878  0100               	movlb	0	; () banked
 11314  01487A  077D               	decf	__div_to_l_@exp1& (0+255),f,b
 11315  01487C  D000               	goto	l7790
 11316  01487E                     l7790:
 11317                           
 11318                           ; BSR set to: 0
 11319  01487E  0100               	movlb	0	; () banked
 11320  014880  517D               	movf	__div_to_l_@exp1& (0+255),w,b
 11321  014882  0100               	movlb	0	; () banked
 11322  014884  A4D8               	btfss	status,2,c
 11323  014886  D7F2               	goto	l7788
 11324  014888                     l1361:
 11325                           
 11326                           ; BSR set to: 0
 11327  014888  C078  F070         	movff	__div_to_l_@quot,?__div_to_l_
 11328  01488C  C079  F071         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 11329  014890  C07A  F072         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 11330  014894  C07B  F073         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 11331                           
 11332                           ; BSR set to: 0
 11333  014898  0012               	return		;funcret
 11334  01489A                     __end_of__div_to_l_:
 11335                           	opt stack 0
 11336                           tblptru	equ	0xFF8
 11337                           tblptrh	equ	0xFF7
 11338                           tblptrl	equ	0xFF6
 11339                           tablat	equ	0xFF5
 11340                           prodh	equ	0xFF4
 11341                           prodl	equ	0xFF3
 11342                           intcon	equ	0xFF2
 11343                           postinc0	equ	0xFEE
 11344                           wreg	equ	0xFE8
 11345                           indf2	equ	0xFDF
 11346                           postinc2	equ	0xFDE
 11347                           fsr2h	equ	0xFDA
 11348                           fsr2l	equ	0xFD9
 11349                           status	equ	0xFD8
 11350                           
 11351 ;; *************** function ___lltofl *****************
 11352 ;; Defined at:
 11353 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltofl.c"
 11354 ;; Parameters:    Size  Location     Type
 11355 ;;  c               4   26[BANK0 ] unsigned long 
 11356 ;; Auto vars:     Size  Location     Type
 11357 ;;		None
 11358 ;; Return value:  Size  Location     Type
 11359 ;;                  4   26[BANK0 ] unsigned long 
 11360 ;; Registers used:
 11361 ;;		wreg, status,2, status,0, cstack
 11362 ;; Tracked objects:
 11363 ;;		On entry : 0/0
 11364 ;;		On exit  : 0/0
 11365 ;;		Unchanged: 0/0
 11366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11367 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11370 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11371 ;;Total ram usage:        4 bytes
 11372 ;; Hardware stack levels used:    1
 11373 ;; Hardware stack levels required when called:    4
 11374 ;; This function calls:
 11375 ;;		___flpack
 11376 ;; This function is called by:
 11377 ;;		_sprintf
 11378 ;; This function uses a non-reentrant model
 11379 ;;
 11380                           
 11381                           	psect	text21
 11382  015D48                     __ptext21:
 11383                           	opt stack 0
 11384  015D48                     ___lltofl:
 11385                           	opt stack 24
 11386                           
 11387                           ; BSR set to: 0
 11388                           ;incstack = 0
 11389  015D48  C07A  F070         	movff	___lltofl@c,___flpack@arg
 11390  015D4C  C07B  F071         	movff	___lltofl@c+1,___flpack@arg+1
 11391  015D50  C07C  F072         	movff	___lltofl@c+2,___flpack@arg+2
 11392  015D54  C07D  F073         	movff	___lltofl@c+3,___flpack@arg+3
 11393  015D58  0E96               	movlw	150
 11394  015D5A  0100               	movlb	0	; () banked
 11395  015D5C  6F74               	movwf	___flpack@exp& (0+255),b
 11396  015D5E  0E00               	movlw	0
 11397  015D60  0100               	movlb	0	; () banked
 11398  015D62  6F75               	movwf	___flpack@sign& (0+255),b
 11399  015D64  EC4D  F0A4         	call	___flpack	;wreg free
 11400  015D68  C070  F07A         	movff	?___flpack,?___lltofl
 11401  015D6C  C071  F07B         	movff	?___flpack+1,?___lltofl+1
 11402  015D70  C072  F07C         	movff	?___flpack+2,?___lltofl+2
 11403  015D74  C073  F07D         	movff	?___flpack+3,?___lltofl+3
 11404  015D78  0012               	return	
 11405  015D7A  0012               	return		;funcret
 11406  015D7C                     __end_of___lltofl:
 11407                           	opt stack 0
 11408                           tblptru	equ	0xFF8
 11409                           tblptrh	equ	0xFF7
 11410                           tblptrl	equ	0xFF6
 11411                           tablat	equ	0xFF5
 11412                           prodh	equ	0xFF4
 11413                           prodl	equ	0xFF3
 11414                           intcon	equ	0xFF2
 11415                           postinc0	equ	0xFEE
 11416                           wreg	equ	0xFE8
 11417                           indf2	equ	0xFDF
 11418                           postinc2	equ	0xFDE
 11419                           fsr2h	equ	0xFDA
 11420                           fsr2l	equ	0xFD9
 11421                           status	equ	0xFD8
 11422                           
 11423 ;; *************** function ___llmod *****************
 11424 ;; Defined at:
 11425 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
 11426 ;; Parameters:    Size  Location     Type
 11427 ;;  dividend        4   16[BANK0 ] unsigned long 
 11428 ;;  divisor         4   20[BANK0 ] unsigned long 
 11429 ;; Auto vars:     Size  Location     Type
 11430 ;;  counter         1   24[BANK0 ] unsigned char 
 11431 ;; Return value:  Size  Location     Type
 11432 ;;                  4   16[BANK0 ] unsigned long 
 11433 ;; Registers used:
 11434 ;;		wreg, status,2, status,0
 11435 ;; Tracked objects:
 11436 ;;		On entry : 0/0
 11437 ;;		On exit  : 0/0
 11438 ;;		Unchanged: 0/0
 11439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11440 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11441 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11443 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11444 ;;Total ram usage:        9 bytes
 11445 ;; Hardware stack levels used:    1
 11446 ;; Hardware stack levels required when called:    3
 11447 ;; This function calls:
 11448 ;;		Nothing
 11449 ;; This function is called by:
 11450 ;;		_sprintf
 11451 ;; This function uses a non-reentrant model
 11452 ;;
 11453                           
 11454                           	psect	text22
 11455  015594                     __ptext22:
 11456                           	opt stack 0
 11457  015594                     ___llmod:
 11458                           	opt stack 25
 11459                           
 11460                           ;incstack = 0
 11461  015594  0100               	movlb	0	; () banked
 11462  015596  5174               	movf	___llmod@divisor& (0+255),w,b
 11463  015598  0100               	movlb	0	; () banked
 11464  01559A  1175               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 11465  01559C  0100               	movlb	0	; () banked
 11466  01559E  1176               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 11467  0155A0  0100               	movlb	0	; () banked
 11468  0155A2  1177               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 11469  0155A4  B4D8               	btfsc	status,2,c
 11470  0155A6  D03F               	goto	l1586
 11471                           
 11472                           ; BSR set to: 0
 11473  0155A8  0E01               	movlw	1
 11474  0155AA  0100               	movlb	0	; () banked
 11475  0155AC  6F78               	movwf	___llmod@counter& (0+255),b
 11476  0155AE  D009               	goto	l7894
 11477  0155B0                     l7892:
 11478                           
 11479                           ; BSR set to: 0
 11480  0155B0  0100               	movlb	0	; () banked
 11481  0155B2  90D8               	bcf	status,0,c
 11482  0155B4  3774               	rlcf	___llmod@divisor& (0+255),f,b
 11483  0155B6  3775               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 11484  0155B8  3776               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 11485  0155BA  3777               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 11486  0155BC  0100               	movlb	0	; () banked
 11487  0155BE  2B78               	incf	___llmod@counter& (0+255),f,b
 11488  0155C0  D000               	goto	l7894
 11489  0155C2                     l7894:
 11490                           
 11491                           ; BSR set to: 0
 11492  0155C2  0100               	movlb	0	; () banked
 11493  0155C4  BF77               	btfsc	(___llmod@divisor+3)& (0+255),7,b
 11494  0155C6  D002               	goto	l7896
 11495  0155C8  D7F3               	goto	l7892
 11496                           
 11497                           ; BSR set to: 0
 11498  0155CA  D000               	goto	l7896
 11499  0155CC                     l7896:
 11500                           
 11501                           ; BSR set to: 0
 11502  0155CC  0100               	movlb	0	; () banked
 11503  0155CE  5174               	movf	___llmod@divisor& (0+255),w,b
 11504  0155D0  0100               	movlb	0	; () banked
 11505  0155D2  5D70               	subwf	___llmod@dividend& (0+255),w,b
 11506  0155D4  0100               	movlb	0	; () banked
 11507  0155D6  5175               	movf	(___llmod@divisor+1)& (0+255),w,b
 11508  0155D8  0100               	movlb	0	; () banked
 11509  0155DA  5971               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 11510  0155DC  0100               	movlb	0	; () banked
 11511  0155DE  5176               	movf	(___llmod@divisor+2)& (0+255),w,b
 11512  0155E0  0100               	movlb	0	; () banked
 11513  0155E2  5972               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 11514  0155E4  0100               	movlb	0	; () banked
 11515  0155E6  5177               	movf	(___llmod@divisor+3)& (0+255),w,b
 11516  0155E8  0100               	movlb	0	; () banked
 11517  0155EA  5973               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 11518  0155EC  A0D8               	btfss	status,0,c
 11519  0155EE  D011               	goto	l7900
 11520                           
 11521                           ; BSR set to: 0
 11522  0155F0  0100               	movlb	0	; () banked
 11523  0155F2  5174               	movf	___llmod@divisor& (0+255),w,b
 11524  0155F4  0100               	movlb	0	; () banked
 11525  0155F6  5F70               	subwf	___llmod@dividend& (0+255),f,b
 11526  0155F8  0100               	movlb	0	; () banked
 11527  0155FA  5175               	movf	(___llmod@divisor+1)& (0+255),w,b
 11528  0155FC  0100               	movlb	0	; () banked
 11529  0155FE  5B71               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 11530  015600  0100               	movlb	0	; () banked
 11531  015602  5176               	movf	(___llmod@divisor+2)& (0+255),w,b
 11532  015604  0100               	movlb	0	; () banked
 11533  015606  5B72               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 11534  015608  0100               	movlb	0	; () banked
 11535  01560A  5177               	movf	(___llmod@divisor+3)& (0+255),w,b
 11536  01560C  0100               	movlb	0	; () banked
 11537  01560E  5B73               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 11538  015610  D000               	goto	l7900
 11539  015612                     l7900:
 11540                           
 11541                           ; BSR set to: 0
 11542  015612  0100               	movlb	0	; () banked
 11543  015614  90D8               	bcf	status,0,c
 11544  015616  3377               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 11545  015618  3376               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 11546  01561A  3375               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 11547  01561C  3374               	rrcf	___llmod@divisor& (0+255),f,b
 11548                           
 11549                           ; BSR set to: 0
 11550  01561E  0100               	movlb	0	; () banked
 11551  015620  2F78               	decfsz	___llmod@counter& (0+255),f,b
 11552  015622  D7D4               	goto	l7896
 11553  015624  D000               	goto	l1586
 11554  015626                     l1586:
 11555                           
 11556                           ; BSR set to: 0
 11557  015626  C070  F070         	movff	___llmod@dividend,?___llmod
 11558  01562A  C071  F071         	movff	___llmod@dividend+1,?___llmod+1
 11559  01562E  C072  F072         	movff	___llmod@dividend+2,?___llmod+2
 11560  015632  C073  F073         	movff	___llmod@dividend+3,?___llmod+3
 11561                           
 11562                           ; BSR set to: 0
 11563  015636  0012               	return		;funcret
 11564  015638                     __end_of___llmod:
 11565                           	opt stack 0
 11566                           tblptru	equ	0xFF8
 11567                           tblptrh	equ	0xFF7
 11568                           tblptrl	equ	0xFF6
 11569                           tablat	equ	0xFF5
 11570                           prodh	equ	0xFF4
 11571                           prodl	equ	0xFF3
 11572                           intcon	equ	0xFF2
 11573                           postinc0	equ	0xFEE
 11574                           wreg	equ	0xFE8
 11575                           indf2	equ	0xFDF
 11576                           postinc2	equ	0xFDE
 11577                           fsr2h	equ	0xFDA
 11578                           fsr2l	equ	0xFD9
 11579                           status	equ	0xFD8
 11580                           
 11581 ;; *************** function ___lldiv *****************
 11582 ;; Defined at:
 11583 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
 11584 ;; Parameters:    Size  Location     Type
 11585 ;;  dividend        4   16[BANK0 ] unsigned long 
 11586 ;;  divisor         4   20[BANK0 ] unsigned long 
 11587 ;; Auto vars:     Size  Location     Type
 11588 ;;  quotient        4   24[BANK0 ] unsigned long 
 11589 ;;  counter         1   28[BANK0 ] unsigned char 
 11590 ;; Return value:  Size  Location     Type
 11591 ;;                  4   16[BANK0 ] unsigned long 
 11592 ;; Registers used:
 11593 ;;		wreg, status,2, status,0
 11594 ;; Tracked objects:
 11595 ;;		On entry : 0/0
 11596 ;;		On exit  : 0/0
 11597 ;;		Unchanged: 0/0
 11598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11599 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11600 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11602 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11603 ;;Total ram usage:       13 bytes
 11604 ;; Hardware stack levels used:    1
 11605 ;; Hardware stack levels required when called:    3
 11606 ;; This function calls:
 11607 ;;		Nothing
 11608 ;; This function is called by:
 11609 ;;		_sprintf
 11610 ;; This function uses a non-reentrant model
 11611 ;;
 11612                           
 11613                           	psect	text23
 11614  0151F2                     __ptext23:
 11615                           	opt stack 0
 11616  0151F2                     ___lldiv:
 11617                           	opt stack 25
 11618                           
 11619                           ; BSR set to: 0
 11620                           ;incstack = 0
 11621  0151F2  0E00               	movlw	0
 11622  0151F4  0100               	movlb	0	; () banked
 11623  0151F6  6F78               	movwf	___lldiv@quotient& (0+255),b
 11624  0151F8  0E00               	movlw	0
 11625  0151FA  6F79               	movwf	(___lldiv@quotient+1)& (0+255),b
 11626  0151FC  0E00               	movlw	0
 11627  0151FE  6F7A               	movwf	(___lldiv@quotient+2)& (0+255),b
 11628  015200  0E00               	movlw	0
 11629  015202  6F7B               	movwf	(___lldiv@quotient+3)& (0+255),b
 11630                           
 11631                           ; BSR set to: 0
 11632  015204  0100               	movlb	0	; () banked
 11633  015206  5174               	movf	___lldiv@divisor& (0+255),w,b
 11634  015208  0100               	movlb	0	; () banked
 11635  01520A  1175               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 11636  01520C  0100               	movlb	0	; () banked
 11637  01520E  1176               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 11638  015210  0100               	movlb	0	; () banked
 11639  015212  1177               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 11640  015214  B4D8               	btfsc	status,2,c
 11641  015216  D047               	goto	l1576
 11642                           
 11643                           ; BSR set to: 0
 11644  015218  0E01               	movlw	1
 11645  01521A  0100               	movlb	0	; () banked
 11646  01521C  6F7C               	movwf	___lldiv@counter& (0+255),b
 11647  01521E  D009               	goto	l7874
 11648  015220                     l7872:
 11649                           
 11650                           ; BSR set to: 0
 11651  015220  0100               	movlb	0	; () banked
 11652  015222  90D8               	bcf	status,0,c
 11653  015224  3774               	rlcf	___lldiv@divisor& (0+255),f,b
 11654  015226  3775               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 11655  015228  3776               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 11656  01522A  3777               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 11657  01522C  0100               	movlb	0	; () banked
 11658  01522E  2B7C               	incf	___lldiv@counter& (0+255),f,b
 11659  015230  D000               	goto	l7874
 11660  015232                     l7874:
 11661                           
 11662                           ; BSR set to: 0
 11663  015232  0100               	movlb	0	; () banked
 11664  015234  BF77               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
 11665  015236  D002               	goto	l7876
 11666  015238  D7F3               	goto	l7872
 11667                           
 11668                           ; BSR set to: 0
 11669  01523A  D000               	goto	l7876
 11670  01523C                     l7876:
 11671                           
 11672                           ; BSR set to: 0
 11673  01523C  0100               	movlb	0	; () banked
 11674  01523E  90D8               	bcf	status,0,c
 11675  015240  3778               	rlcf	___lldiv@quotient& (0+255),f,b
 11676  015242  3779               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 11677  015244  377A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 11678  015246  377B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 11679                           
 11680                           ; BSR set to: 0
 11681  015248  0100               	movlb	0	; () banked
 11682  01524A  5174               	movf	___lldiv@divisor& (0+255),w,b
 11683  01524C  0100               	movlb	0	; () banked
 11684  01524E  5D70               	subwf	___lldiv@dividend& (0+255),w,b
 11685  015250  0100               	movlb	0	; () banked
 11686  015252  5175               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11687  015254  0100               	movlb	0	; () banked
 11688  015256  5971               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 11689  015258  0100               	movlb	0	; () banked
 11690  01525A  5176               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11691  01525C  0100               	movlb	0	; () banked
 11692  01525E  5972               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 11693  015260  0100               	movlb	0	; () banked
 11694  015262  5177               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11695  015264  0100               	movlb	0	; () banked
 11696  015266  5973               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 11697  015268  A0D8               	btfss	status,0,c
 11698  01526A  D013               	goto	l7884
 11699                           
 11700                           ; BSR set to: 0
 11701  01526C  0100               	movlb	0	; () banked
 11702  01526E  5174               	movf	___lldiv@divisor& (0+255),w,b
 11703  015270  0100               	movlb	0	; () banked
 11704  015272  5F70               	subwf	___lldiv@dividend& (0+255),f,b
 11705  015274  0100               	movlb	0	; () banked
 11706  015276  5175               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11707  015278  0100               	movlb	0	; () banked
 11708  01527A  5B71               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 11709  01527C  0100               	movlb	0	; () banked
 11710  01527E  5176               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11711  015280  0100               	movlb	0	; () banked
 11712  015282  5B72               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 11713  015284  0100               	movlb	0	; () banked
 11714  015286  5177               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11715  015288  0100               	movlb	0	; () banked
 11716  01528A  5B73               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 11717                           
 11718                           ; BSR set to: 0
 11719  01528C  0100               	movlb	0	; () banked
 11720  01528E  8178               	bsf	___lldiv@quotient& (0+255),0,b
 11721  015290  D000               	goto	l7884
 11722  015292                     l7884:
 11723                           
 11724                           ; BSR set to: 0
 11725  015292  0100               	movlb	0	; () banked
 11726  015294  90D8               	bcf	status,0,c
 11727  015296  3377               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 11728  015298  3376               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 11729  01529A  3375               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 11730  01529C  3374               	rrcf	___lldiv@divisor& (0+255),f,b
 11731                           
 11732                           ; BSR set to: 0
 11733  01529E  0100               	movlb	0	; () banked
 11734  0152A0  2F7C               	decfsz	___lldiv@counter& (0+255),f,b
 11735  0152A2  D7CC               	goto	l7876
 11736  0152A4  D000               	goto	l1576
 11737  0152A6                     l1576:
 11738                           
 11739                           ; BSR set to: 0
 11740  0152A6  C078  F070         	movff	___lldiv@quotient,?___lldiv
 11741  0152AA  C079  F071         	movff	___lldiv@quotient+1,?___lldiv+1
 11742  0152AE  C07A  F072         	movff	___lldiv@quotient+2,?___lldiv+2
 11743  0152B2  C07B  F073         	movff	___lldiv@quotient+3,?___lldiv+3
 11744                           
 11745                           ; BSR set to: 0
 11746  0152B6  0012               	return		;funcret
 11747  0152B8                     __end_of___lldiv:
 11748                           	opt stack 0
 11749                           tblptru	equ	0xFF8
 11750                           tblptrh	equ	0xFF7
 11751                           tblptrl	equ	0xFF6
 11752                           tablat	equ	0xFF5
 11753                           prodh	equ	0xFF4
 11754                           prodl	equ	0xFF3
 11755                           intcon	equ	0xFF2
 11756                           postinc0	equ	0xFEE
 11757                           wreg	equ	0xFE8
 11758                           indf2	equ	0xFDF
 11759                           postinc2	equ	0xFDE
 11760                           fsr2h	equ	0xFDA
 11761                           fsr2l	equ	0xFD9
 11762                           status	equ	0xFD8
 11763                           
 11764 ;; *************** function ___fltol *****************
 11765 ;; Defined at:
 11766 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fltol.c"
 11767 ;; Parameters:    Size  Location     Type
 11768 ;;  f1              4   71[BANK0 ] unsigned long 
 11769 ;; Auto vars:     Size  Location     Type
 11770 ;;  exp1            1   80[BANK0 ] unsigned char 
 11771 ;;  sign1           1   79[BANK0 ] unsigned char 
 11772 ;; Return value:  Size  Location     Type
 11773 ;;                  4   71[BANK0 ] long 
 11774 ;; Registers used:
 11775 ;;		wreg, status,2, status,0
 11776 ;; Tracked objects:
 11777 ;;		On entry : 0/0
 11778 ;;		On exit  : 0/0
 11779 ;;		Unchanged: 0/0
 11780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11781 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11782 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11783 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11784 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11785 ;;Total ram usage:       10 bytes
 11786 ;; Hardware stack levels used:    1
 11787 ;; Hardware stack levels required when called:    3
 11788 ;; This function calls:
 11789 ;;		Nothing
 11790 ;; This function is called by:
 11791 ;;		_main
 11792 ;;		_sprintf
 11793 ;; This function uses a non-reentrant model
 11794 ;;
 11795                           
 11796                           	psect	text24
 11797  014E22                     __ptext24:
 11798                           	opt stack 0
 11799  014E22                     ___fltol:
 11800                           	opt stack 27
 11801                           
 11802                           ; BSR set to: 0
 11803                           ;incstack = 0
 11804  014E22  0100               	movlb	0	; () banked
 11805  014E24  35A9               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11806  014E26  35AA               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11807  014E28  0100               	movlb	0	; () banked
 11808  014E2A  6FB0               	movwf	___fltol@exp1& (0+255),b
 11809  014E2C  0100               	movlb	0	; () banked
 11810  014E2E  51B0               	movf	___fltol@exp1& (0+255),w,b
 11811  014E30  A4D8               	btfss	status,2,c
 11812  014E32  D00A               	goto	l7828
 11813                           
 11814                           ; BSR set to: 0
 11815  014E34  0E00               	movlw	0
 11816  014E36  0100               	movlb	0	; () banked
 11817  014E38  6FA7               	movwf	?___fltol& (0+255),b
 11818  014E3A  0E00               	movlw	0
 11819  014E3C  6FA8               	movwf	(?___fltol+1)& (0+255),b
 11820  014E3E  0E00               	movlw	0
 11821  014E40  6FA9               	movwf	(?___fltol+2)& (0+255),b
 11822  014E42  0E00               	movlw	0
 11823  014E44  6FAA               	movwf	(?___fltol+3)& (0+255),b
 11824                           
 11825                           ; BSR set to: 0
 11826  014E46  0012               	return	
 11827  014E48                     l7828:
 11828                           
 11829                           ; BSR set to: 0
 11830  014E48  C0A7  F0AB         	movff	___fltol@f1,??___fltol
 11831  014E4C  C0A8  F0AC         	movff	___fltol@f1+1,??___fltol+1
 11832  014E50  C0A9  F0AD         	movff	___fltol@f1+2,??___fltol+2
 11833  014E54  C0AA  F0AE         	movff	___fltol@f1+3,??___fltol+3
 11834  014E58  0E20               	movlw	32
 11835  014E5A  D006               	goto	u9880
 11836  014E5C                     u9885:
 11837  014E5C  0100               	movlb	0	; () banked
 11838  014E5E  90D8               	bcf	status,0,c
 11839  014E60  33AE               	rrcf	(??___fltol+3)& (0+255),f,b
 11840  014E62  33AD               	rrcf	(??___fltol+2)& (0+255),f,b
 11841  014E64  33AC               	rrcf	(??___fltol+1)& (0+255),f,b
 11842  014E66  33AB               	rrcf	??___fltol& (0+255),f,b
 11843  014E68                     u9880:
 11844  014E68  2EE8               	decfsz	wreg,f,c
 11845  014E6A  D7F8               	goto	u9885
 11846  014E6C  0100               	movlb	0	; () banked
 11847  014E6E  51AB               	movf	??___fltol& (0+255),w,b
 11848  014E70  0100               	movlb	0	; () banked
 11849  014E72  6FAF               	movwf	___fltol@sign1& (0+255),b
 11850                           
 11851                           ; BSR set to: 0
 11852  014E74  0100               	movlb	0	; () banked
 11853  014E76  8FA9               	bsf	(___fltol@f1+2)& (0+255),7,b
 11854                           
 11855                           ; BSR set to: 0
 11856  014E78  0EFF               	movlw	255
 11857  014E7A  0100               	movlb	0	; () banked
 11858  014E7C  17A7               	andwf	___fltol@f1& (0+255),f,b
 11859  014E7E  0EFF               	movlw	255
 11860  014E80  17A8               	andwf	(___fltol@f1+1)& (0+255),f,b
 11861  014E82  0EFF               	movlw	255
 11862  014E84  17A9               	andwf	(___fltol@f1+2)& (0+255),f,b
 11863  014E86  0E00               	movlw	0
 11864  014E88  17AA               	andwf	(___fltol@f1+3)& (0+255),f,b
 11865                           
 11866                           ; BSR set to: 0
 11867  014E8A  0E96               	movlw	150
 11868  014E8C  0100               	movlb	0	; () banked
 11869  014E8E  5FB0               	subwf	___fltol@exp1& (0+255),f,b
 11870                           
 11871                           ; BSR set to: 0
 11872  014E90  0100               	movlb	0	; () banked
 11873  014E92  AFB0               	btfss	___fltol@exp1& (0+255),7,b
 11874  014E94  D01B               	goto	l7848
 11875                           
 11876                           ; BSR set to: 0
 11877  014E96  0100               	movlb	0	; () banked
 11878  014E98  51B0               	movf	___fltol@exp1& (0+255),w,b
 11879  014E9A  0A80               	xorlw	128
 11880  014E9C  0F97               	addlw	151
 11881  014E9E  B0D8               	btfsc	status,0,c
 11882  014EA0  D00B               	goto	l7844
 11883                           
 11884                           ; BSR set to: 0
 11885  014EA2  0E00               	movlw	0
 11886  014EA4  0100               	movlb	0	; () banked
 11887  014EA6  6FA7               	movwf	?___fltol& (0+255),b
 11888  014EA8  0E00               	movlw	0
 11889  014EAA  6FA8               	movwf	(?___fltol+1)& (0+255),b
 11890  014EAC  0E00               	movlw	0
 11891  014EAE  6FA9               	movwf	(?___fltol+2)& (0+255),b
 11892  014EB0  0E00               	movlw	0
 11893  014EB2  6FAA               	movwf	(?___fltol+3)& (0+255),b
 11894                           
 11895                           ; BSR set to: 0
 11896  014EB4  0012               	return	
 11897                           
 11898                           ; BSR set to: 0
 11899  014EB6  D000               	goto	l7844
 11900  014EB8                     l7844:
 11901                           
 11902                           ; BSR set to: 0
 11903  014EB8  0100               	movlb	0	; () banked
 11904  014EBA  90D8               	bcf	status,0,c
 11905  014EBC  33AA               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11906  014EBE  33A9               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11907  014EC0  33A8               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11908  014EC2  33A7               	rrcf	___fltol@f1& (0+255),f,b
 11909                           
 11910                           ; BSR set to: 0
 11911  014EC4  0100               	movlb	0	; () banked
 11912  014EC6  3FB0               	incfsz	___fltol@exp1& (0+255),f,b
 11913  014EC8  D7F7               	goto	l7844
 11914                           
 11915                           ; BSR set to: 0
 11916  014ECA  D01F               	goto	l7858
 11917  014ECC                     l7848:
 11918                           
 11919                           ; BSR set to: 0
 11920  014ECC  0E1F               	movlw	31
 11921  014ECE  0100               	movlb	0	; () banked
 11922  014ED0  65B0               	cpfsgt	___fltol@exp1& (0+255),b
 11923  014ED2  D014               	goto	l7856
 11924                           
 11925                           ; BSR set to: 0
 11926  014ED4  0E00               	movlw	0
 11927  014ED6  0100               	movlb	0	; () banked
 11928  014ED8  6FA7               	movwf	?___fltol& (0+255),b
 11929  014EDA  0E00               	movlw	0
 11930  014EDC  6FA8               	movwf	(?___fltol+1)& (0+255),b
 11931  014EDE  0E00               	movlw	0
 11932  014EE0  6FA9               	movwf	(?___fltol+2)& (0+255),b
 11933  014EE2  0E00               	movlw	0
 11934  014EE4  6FAA               	movwf	(?___fltol+3)& (0+255),b
 11935                           
 11936                           ; BSR set to: 0
 11937  014EE6  0012               	return	
 11938                           
 11939                           ; BSR set to: 0
 11940  014EE8  D009               	goto	l7856
 11941  014EEA                     l7854:
 11942                           
 11943                           ; BSR set to: 0
 11944  014EEA  0100               	movlb	0	; () banked
 11945  014EEC  90D8               	bcf	status,0,c
 11946  014EEE  37A7               	rlcf	___fltol@f1& (0+255),f,b
 11947  014EF0  37A8               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11948  014EF2  37A9               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11949  014EF4  37AA               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11950  014EF6  0100               	movlb	0	; () banked
 11951  014EF8  07B0               	decf	___fltol@exp1& (0+255),f,b
 11952  014EFA  D000               	goto	l7856
 11953  014EFC                     l7856:
 11954                           
 11955                           ; BSR set to: 0
 11956  014EFC  0100               	movlb	0	; () banked
 11957  014EFE  51B0               	movf	___fltol@exp1& (0+255),w,b
 11958  014F00  0100               	movlb	0	; () banked
 11959  014F02  B4D8               	btfsc	status,2,c
 11960  014F04  D002               	goto	l7858
 11961  014F06  D7F1               	goto	l7854
 11962                           
 11963                           ; BSR set to: 0
 11964  014F08  D000               	goto	l7858
 11965  014F0A                     l7858:
 11966                           
 11967                           ; BSR set to: 0
 11968  014F0A  0100               	movlb	0	; () banked
 11969  014F0C  51AF               	movf	___fltol@sign1& (0+255),w,b
 11970  014F0E  0100               	movlb	0	; () banked
 11971  014F10  B4D8               	btfsc	status,2,c
 11972  014F12  D00A               	goto	l7862
 11973                           
 11974                           ; BSR set to: 0
 11975  014F14  0100               	movlb	0	; () banked
 11976  014F16  1FAA               	comf	(___fltol@f1+3)& (0+255),f,b
 11977  014F18  1FA9               	comf	(___fltol@f1+2)& (0+255),f,b
 11978  014F1A  1FA8               	comf	(___fltol@f1+1)& (0+255),f,b
 11979  014F1C  6DA7               	negf	___fltol@f1& (0+255),b
 11980  014F1E  0E00               	movlw	0
 11981  014F20  23A8               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11982  014F22  23A9               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11983  014F24  23AA               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11984  014F26  D000               	goto	l7862
 11985  014F28                     l7862:
 11986                           
 11987                           ; BSR set to: 0
 11988  014F28  C0A7  F0A7         	movff	___fltol@f1,?___fltol
 11989  014F2C  C0A8  F0A8         	movff	___fltol@f1+1,?___fltol+1
 11990  014F30  C0A9  F0A9         	movff	___fltol@f1+2,?___fltol+2
 11991  014F34  C0AA  F0AA         	movff	___fltol@f1+3,?___fltol+3
 11992  014F38  0012               	return	
 11993                           
 11994                           ; BSR set to: 0
 11995                           
 11996                           ; BSR set to: 0
 11997  014F3A  0012               	return		;funcret
 11998  014F3C                     __end_of___fltol:
 11999                           	opt stack 0
 12000                           tblptru	equ	0xFF8
 12001                           tblptrh	equ	0xFF7
 12002                           tblptrl	equ	0xFF6
 12003                           tablat	equ	0xFF5
 12004                           prodh	equ	0xFF4
 12005                           prodl	equ	0xFF3
 12006                           intcon	equ	0xFF2
 12007                           postinc0	equ	0xFEE
 12008                           wreg	equ	0xFE8
 12009                           indf2	equ	0xFDF
 12010                           postinc2	equ	0xFDE
 12011                           fsr2h	equ	0xFDA
 12012                           fsr2l	equ	0xFD9
 12013                           status	equ	0xFD8
 12014                           
 12015 ;; *************** function ___flsub *****************
 12016 ;; Defined at:
 12017 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flsub.c"
 12018 ;; Parameters:    Size  Location     Type
 12019 ;;  f1              4   71[BANK0 ] long 
 12020 ;;  f2              4   75[BANK0 ] long 
 12021 ;; Auto vars:     Size  Location     Type
 12022 ;;		None
 12023 ;; Return value:  Size  Location     Type
 12024 ;;                  4   71[BANK0 ] long 
 12025 ;; Registers used:
 12026 ;;		wreg, status,2, status,0, cstack
 12027 ;; Tracked objects:
 12028 ;;		On entry : 0/0
 12029 ;;		On exit  : 0/0
 12030 ;;		Unchanged: 0/0
 12031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12032 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12035 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12036 ;;Total ram usage:        8 bytes
 12037 ;; Hardware stack levels used:    1
 12038 ;; Hardware stack levels required when called:    5
 12039 ;; This function calls:
 12040 ;;		___fladd
 12041 ;; This function is called by:
 12042 ;;		_sprintf
 12043 ;; This function uses a non-reentrant model
 12044 ;;
 12045                           
 12046                           	psect	text25
 12047  015A2A                     __ptext25:
 12048                           	opt stack 0
 12049  015A2A                     ___flsub:
 12050                           	opt stack 23
 12051                           
 12052                           ; BSR set to: 0
 12053                           ;incstack = 0
 12054  015A2A  0100               	movlb	0	; () banked
 12055  015A2C  51AB               	movf	___flsub@f2& (0+255),w,b
 12056  015A2E  0100               	movlb	0	; () banked
 12057  015A30  11AC               	iorwf	(___flsub@f2+1)& (0+255),w,b
 12058  015A32  0100               	movlb	0	; () banked
 12059  015A34  11AD               	iorwf	(___flsub@f2+2)& (0+255),w,b
 12060  015A36  0100               	movlb	0	; () banked
 12061  015A38  11AE               	iorwf	(___flsub@f2+3)& (0+255),w,b
 12062  015A3A  B4D8               	btfsc	status,2,c
 12063  015A3C  D00A               	goto	l7796
 12064                           
 12065                           ; BSR set to: 0
 12066  015A3E  0E00               	movlw	0
 12067  015A40  0100               	movlb	0	; () banked
 12068  015A42  1BAB               	xorwf	___flsub@f2& (0+255),f,b
 12069  015A44  0E00               	movlw	0
 12070  015A46  1BAC               	xorwf	(___flsub@f2+1)& (0+255),f,b
 12071  015A48  0E00               	movlw	0
 12072  015A4A  1BAD               	xorwf	(___flsub@f2+2)& (0+255),f,b
 12073  015A4C  0E80               	movlw	128
 12074  015A4E  1BAE               	xorwf	(___flsub@f2+3)& (0+255),f,b
 12075  015A50  D000               	goto	l7796
 12076  015A52                     l7796:
 12077                           
 12078                           ; BSR set to: 0
 12079  015A52  C0A7  F09B         	movff	___flsub@f1,___fladd@f1
 12080  015A56  C0A8  F09C         	movff	___flsub@f1+1,___fladd@f1+1
 12081  015A5A  C0A9  F09D         	movff	___flsub@f1+2,___fladd@f1+2
 12082  015A5E  C0AA  F09E         	movff	___flsub@f1+3,___fladd@f1+3
 12083  015A62  C0AB  F09F         	movff	___flsub@f2,___fladd@f2
 12084  015A66  C0AC  F0A0         	movff	___flsub@f2+1,___fladd@f2+1
 12085  015A6A  C0AD  F0A1         	movff	___flsub@f2+2,___fladd@f2+2
 12086  015A6E  C0AE  F0A2         	movff	___flsub@f2+3,___fladd@f2+3
 12087  015A72  ECAF  F09E         	call	___fladd	;wreg free
 12088  015A76  C09B  F0A7         	movff	?___fladd,?___flsub
 12089  015A7A  C09C  F0A8         	movff	?___fladd+1,?___flsub+1
 12090  015A7E  C09D  F0A9         	movff	?___fladd+2,?___flsub+2
 12091  015A82  C09E  F0AA         	movff	?___fladd+3,?___flsub+3
 12092  015A86  0012               	return	
 12093  015A88  0012               	return		;funcret
 12094  015A8A                     __end_of___flsub:
 12095                           	opt stack 0
 12096                           tblptru	equ	0xFF8
 12097                           tblptrh	equ	0xFF7
 12098                           tblptrl	equ	0xFF6
 12099                           tablat	equ	0xFF5
 12100                           prodh	equ	0xFF4
 12101                           prodl	equ	0xFF3
 12102                           intcon	equ	0xFF2
 12103                           postinc0	equ	0xFEE
 12104                           wreg	equ	0xFE8
 12105                           indf2	equ	0xFDF
 12106                           postinc2	equ	0xFDE
 12107                           fsr2h	equ	0xFDA
 12108                           fsr2l	equ	0xFD9
 12109                           status	equ	0xFD8
 12110                           
 12111 ;; *************** function ___fladd *****************
 12112 ;; Defined at:
 12113 ;;		line 88 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fladd.c"
 12114 ;; Parameters:    Size  Location     Type
 12115 ;;  f1              4   59[BANK0 ] long 
 12116 ;;  f2              4   63[BANK0 ] long 
 12117 ;; Auto vars:     Size  Location     Type
 12118 ;;  exp1            1   70[BANK0 ] unsigned char 
 12119 ;;  exp2            1   69[BANK0 ] unsigned char 
 12120 ;;  sign            1   68[BANK0 ] unsigned char 
 12121 ;; Return value:  Size  Location     Type
 12122 ;;                  4   59[BANK0 ] unsigned char 
 12123 ;; Registers used:
 12124 ;;		wreg, status,2, status,0, cstack
 12125 ;; Tracked objects:
 12126 ;;		On entry : 0/0
 12127 ;;		On exit  : 0/0
 12128 ;;		Unchanged: 0/0
 12129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12130 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12131 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12132 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12133 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12134 ;;Total ram usage:       12 bytes
 12135 ;; Hardware stack levels used:    1
 12136 ;; Hardware stack levels required when called:    4
 12137 ;; This function calls:
 12138 ;;		___flpack
 12139 ;; This function is called by:
 12140 ;;		_main
 12141 ;;		_sprintf
 12142 ;;		___flsub
 12143 ;; This function uses a non-reentrant model
 12144 ;;
 12145                           
 12146                           	psect	text26
 12147  013D5E                     __ptext26:
 12148                           	opt stack 0
 12149  013D5E                     ___fladd:
 12150                           	opt stack 26
 12151                           
 12152                           ;incstack = 0
 12153  013D5E  0100               	movlb	0	; () banked
 12154  013D60  359D               	rlcf	(___fladd@f1+2)& (0+255),w,b
 12155  013D62  359E               	rlcf	(___fladd@f1+3)& (0+255),w,b
 12156  013D64  0100               	movlb	0	; () banked
 12157  013D66  6FA6               	movwf	___fladd@exp1& (0+255),b
 12158  013D68  0100               	movlb	0	; () banked
 12159  013D6A  35A1               	rlcf	(___fladd@f2+2)& (0+255),w,b
 12160  013D6C  35A2               	rlcf	(___fladd@f2+3)& (0+255),w,b
 12161  013D6E  0100               	movlb	0	; () banked
 12162  013D70  6FA5               	movwf	___fladd@exp2& (0+255),b
 12163  013D72  0100               	movlb	0	; () banked
 12164  013D74  51A6               	movf	___fladd@exp1& (0+255),w,b
 12165  013D76  0100               	movlb	0	; () banked
 12166  013D78  B4D8               	btfsc	status,2,c
 12167  013D7A  D011               	goto	l1312
 12168                           
 12169                           ; BSR set to: 0
 12170  013D7C  0100               	movlb	0	; () banked
 12171  013D7E  51A5               	movf	___fladd@exp2& (0+255),w,b
 12172  013D80  0100               	movlb	0	; () banked
 12173  013D82  5DA6               	subwf	___fladd@exp1& (0+255),w,b
 12174  013D84  B0D8               	btfsc	status,0,c
 12175  013D86  D014               	goto	l7380
 12176                           
 12177                           ; BSR set to: 0
 12178  013D88  0100               	movlb	0	; () banked
 12179  013D8A  51A6               	movf	___fladd@exp1& (0+255),w,b
 12180  013D8C  0800               	sublw	0
 12181  013D8E  0100               	movlb	0	; () banked
 12182  013D90  25A5               	addwf	___fladd@exp2& (0+255),w,b
 12183  013D92  0100               	movlb	0	; () banked
 12184  013D94  6FA3               	movwf	??___fladd& (0+255),b
 12185  013D96  0E20               	movlw	32
 12186  013D98  0100               	movlb	0	; () banked
 12187  013D9A  65A3               	cpfsgt	??___fladd& (0+255),b
 12188  013D9C  D009               	goto	l7380
 12189  013D9E                     l1312:
 12190                           
 12191                           ; BSR set to: 0
 12192  013D9E  C09F  F09B         	movff	___fladd@f2,?___fladd
 12193  013DA2  C0A0  F09C         	movff	___fladd@f2+1,?___fladd+1
 12194  013DA6  C0A1  F09D         	movff	___fladd@f2+2,?___fladd+2
 12195  013DAA  C0A2  F09E         	movff	___fladd@f2+3,?___fladd+3
 12196  013DAE  0012               	return	
 12197  013DB0                     l7380:
 12198                           
 12199                           ; BSR set to: 0
 12200  013DB0  0100               	movlb	0	; () banked
 12201  013DB2  51A5               	movf	___fladd@exp2& (0+255),w,b
 12202  013DB4  0100               	movlb	0	; () banked
 12203  013DB6  B4D8               	btfsc	status,2,c
 12204  013DB8  D011               	goto	l1316
 12205                           
 12206                           ; BSR set to: 0
 12207  013DBA  0100               	movlb	0	; () banked
 12208  013DBC  51A6               	movf	___fladd@exp1& (0+255),w,b
 12209  013DBE  0100               	movlb	0	; () banked
 12210  013DC0  5DA5               	subwf	___fladd@exp2& (0+255),w,b
 12211  013DC2  B0D8               	btfsc	status,0,c
 12212  013DC4  D014               	goto	l7386
 12213                           
 12214                           ; BSR set to: 0
 12215  013DC6  0100               	movlb	0	; () banked
 12216  013DC8  51A5               	movf	___fladd@exp2& (0+255),w,b
 12217  013DCA  0800               	sublw	0
 12218  013DCC  0100               	movlb	0	; () banked
 12219  013DCE  25A6               	addwf	___fladd@exp1& (0+255),w,b
 12220  013DD0  0100               	movlb	0	; () banked
 12221  013DD2  6FA3               	movwf	??___fladd& (0+255),b
 12222  013DD4  0E20               	movlw	32
 12223  013DD6  0100               	movlb	0	; () banked
 12224  013DD8  65A3               	cpfsgt	??___fladd& (0+255),b
 12225  013DDA  D009               	goto	l7386
 12226  013DDC                     l1316:
 12227                           
 12228                           ; BSR set to: 0
 12229  013DDC  C09B  F09B         	movff	___fladd@f1,?___fladd
 12230  013DE0  C09C  F09C         	movff	___fladd@f1+1,?___fladd+1
 12231  013DE4  C09D  F09D         	movff	___fladd@f1+2,?___fladd+2
 12232  013DE8  C09E  F09E         	movff	___fladd@f1+3,?___fladd+3
 12233  013DEC  0012               	return	
 12234  013DEE                     l7386:
 12235                           
 12236                           ; BSR set to: 0
 12237  013DEE  0E06               	movlw	6
 12238  013DF0  0100               	movlb	0	; () banked
 12239  013DF2  6FA4               	movwf	___fladd@sign& (0+255),b
 12240                           
 12241                           ; BSR set to: 0
 12242  013DF4  0100               	movlb	0	; () banked
 12243  013DF6  AF9E               	btfss	(___fladd@f1+3)& (0+255),7,b
 12244  013DF8  D003               	goto	l7392
 12245                           
 12246                           ; BSR set to: 0
 12247  013DFA  0100               	movlb	0	; () banked
 12248  013DFC  8FA4               	bsf	___fladd@sign& (0+255),7,b
 12249  013DFE  D000               	goto	l7392
 12250  013E00                     l7392:
 12251                           
 12252                           ; BSR set to: 0
 12253  013E00  0100               	movlb	0	; () banked
 12254  013E02  AFA2               	btfss	(___fladd@f2+3)& (0+255),7,b
 12255  013E04  D002               	goto	l1318
 12256                           
 12257                           ; BSR set to: 0
 12258  013E06  0100               	movlb	0	; () banked
 12259  013E08  8DA4               	bsf	___fladd@sign& (0+255),6,b
 12260  013E0A                     l1318:
 12261                           
 12262                           ; BSR set to: 0
 12263  013E0A  0100               	movlb	0	; () banked
 12264  013E0C  8F9D               	bsf	(___fladd@f1+2)& (0+255),7,b
 12265                           
 12266                           ; BSR set to: 0
 12267  013E0E  0EFF               	movlw	255
 12268  013E10  0100               	movlb	0	; () banked
 12269  013E12  179B               	andwf	___fladd@f1& (0+255),f,b
 12270  013E14  0EFF               	movlw	255
 12271  013E16  179C               	andwf	(___fladd@f1+1)& (0+255),f,b
 12272  013E18  0EFF               	movlw	255
 12273  013E1A  179D               	andwf	(___fladd@f1+2)& (0+255),f,b
 12274  013E1C  0E00               	movlw	0
 12275  013E1E  179E               	andwf	(___fladd@f1+3)& (0+255),f,b
 12276                           
 12277                           ; BSR set to: 0
 12278  013E20  0100               	movlb	0	; () banked
 12279  013E22  8FA1               	bsf	(___fladd@f2+2)& (0+255),7,b
 12280  013E24  0EFF               	movlw	255
 12281  013E26  0100               	movlb	0	; () banked
 12282  013E28  179F               	andwf	___fladd@f2& (0+255),f,b
 12283  013E2A  0EFF               	movlw	255
 12284  013E2C  17A0               	andwf	(___fladd@f2+1)& (0+255),f,b
 12285  013E2E  0EFF               	movlw	255
 12286  013E30  17A1               	andwf	(___fladd@f2+2)& (0+255),f,b
 12287  013E32  0E00               	movlw	0
 12288  013E34  17A2               	andwf	(___fladd@f2+3)& (0+255),f,b
 12289  013E36  0100               	movlb	0	; () banked
 12290  013E38  51A5               	movf	___fladd@exp2& (0+255),w,b
 12291  013E3A  0100               	movlb	0	; () banked
 12292  013E3C  5DA6               	subwf	___fladd@exp1& (0+255),w,b
 12293  013E3E  B0D8               	btfsc	status,0,c
 12294  013E40  D02A               	goto	l7410
 12295  013E42                     l7400:
 12296                           
 12297                           ; BSR set to: 0
 12298  013E42  0100               	movlb	0	; () banked
 12299  013E44  90D8               	bcf	status,0,c
 12300  013E46  379F               	rlcf	___fladd@f2& (0+255),f,b
 12301  013E48  37A0               	rlcf	(___fladd@f2+1)& (0+255),f,b
 12302  013E4A  37A1               	rlcf	(___fladd@f2+2)& (0+255),f,b
 12303  013E4C  37A2               	rlcf	(___fladd@f2+3)& (0+255),f,b
 12304  013E4E  0100               	movlb	0	; () banked
 12305  013E50  07A5               	decf	___fladd@exp2& (0+255),f,b
 12306                           
 12307                           ; BSR set to: 0
 12308  013E52  0100               	movlb	0	; () banked
 12309  013E54  51A6               	movf	___fladd@exp1& (0+255),w,b
 12310  013E56  0100               	movlb	0	; () banked
 12311  013E58  19A5               	xorwf	___fladd@exp2& (0+255),w,b
 12312  013E5A  B4D8               	btfsc	status,2,c
 12313  013E5C  D014               	goto	l7408
 12314                           
 12315                           ; BSR set to: 0
 12316  013E5E  0100               	movlb	0	; () banked
 12317  013E60  07A4               	decf	___fladd@sign& (0+255),f,b
 12318  013E62  C0A4  F0A3         	movff	___fladd@sign,??___fladd
 12319  013E66  0E07               	movlw	7
 12320  013E68  0100               	movlb	0	; () banked
 12321  013E6A  17A3               	andwf	??___fladd& (0+255),f,b
 12322  013E6C  B4D8               	btfsc	status,2,c
 12323  013E6E  D00B               	goto	l7408
 12324  013E70  D7E8               	goto	l7400
 12325                           
 12326                           ; BSR set to: 0
 12327                           
 12328                           ; BSR set to: 0
 12329  013E72  D009               	goto	l7408
 12330  013E74                     l7406:
 12331                           
 12332                           ; BSR set to: 0
 12333  013E74  0100               	movlb	0	; () banked
 12334  013E76  90D8               	bcf	status,0,c
 12335  013E78  339E               	rrcf	(___fladd@f1+3)& (0+255),f,b
 12336  013E7A  339D               	rrcf	(___fladd@f1+2)& (0+255),f,b
 12337  013E7C  339C               	rrcf	(___fladd@f1+1)& (0+255),f,b
 12338  013E7E  339B               	rrcf	___fladd@f1& (0+255),f,b
 12339  013E80  0100               	movlb	0	; () banked
 12340  013E82  2BA6               	incf	___fladd@exp1& (0+255),f,b
 12341  013E84  D000               	goto	l7408
 12342  013E86                     l7408:
 12343                           
 12344                           ; BSR set to: 0
 12345  013E86  0100               	movlb	0	; () banked
 12346  013E88  51A5               	movf	___fladd@exp2& (0+255),w,b
 12347  013E8A  0100               	movlb	0	; () banked
 12348  013E8C  19A6               	xorwf	___fladd@exp1& (0+255),w,b
 12349  013E8E  B4D8               	btfsc	status,2,c
 12350  013E90  D032               	goto	l1327
 12351  013E92  D7F0               	goto	l7406
 12352                           
 12353                           ; BSR set to: 0
 12354  013E94  D030               	goto	l1327
 12355  013E96                     l7410:
 12356                           
 12357                           ; BSR set to: 0
 12358  013E96  0100               	movlb	0	; () banked
 12359  013E98  51A6               	movf	___fladd@exp1& (0+255),w,b
 12360  013E9A  0100               	movlb	0	; () banked
 12361  013E9C  5DA5               	subwf	___fladd@exp2& (0+255),w,b
 12362  013E9E  B0D8               	btfsc	status,0,c
 12363  013EA0  D02A               	goto	l1327
 12364  013EA2                     l7412:
 12365                           
 12366                           ; BSR set to: 0
 12367  013EA2  0100               	movlb	0	; () banked
 12368  013EA4  90D8               	bcf	status,0,c
 12369  013EA6  379B               	rlcf	___fladd@f1& (0+255),f,b
 12370  013EA8  379C               	rlcf	(___fladd@f1+1)& (0+255),f,b
 12371  013EAA  379D               	rlcf	(___fladd@f1+2)& (0+255),f,b
 12372  013EAC  379E               	rlcf	(___fladd@f1+3)& (0+255),f,b
 12373  013EAE  0100               	movlb	0	; () banked
 12374  013EB0  07A6               	decf	___fladd@exp1& (0+255),f,b
 12375                           
 12376                           ; BSR set to: 0
 12377  013EB2  0100               	movlb	0	; () banked
 12378  013EB4  51A6               	movf	___fladd@exp1& (0+255),w,b
 12379  013EB6  0100               	movlb	0	; () banked
 12380  013EB8  19A5               	xorwf	___fladd@exp2& (0+255),w,b
 12381  013EBA  B4D8               	btfsc	status,2,c
 12382  013EBC  D014               	goto	l7420
 12383                           
 12384                           ; BSR set to: 0
 12385  013EBE  0100               	movlb	0	; () banked
 12386  013EC0  07A4               	decf	___fladd@sign& (0+255),f,b
 12387  013EC2  C0A4  F0A3         	movff	___fladd@sign,??___fladd
 12388  013EC6  0E07               	movlw	7
 12389  013EC8  0100               	movlb	0	; () banked
 12390  013ECA  17A3               	andwf	??___fladd& (0+255),f,b
 12391  013ECC  B4D8               	btfsc	status,2,c
 12392  013ECE  D00B               	goto	l7420
 12393  013ED0  D7E8               	goto	l7412
 12394                           
 12395                           ; BSR set to: 0
 12396                           
 12397                           ; BSR set to: 0
 12398  013ED2  D009               	goto	l7420
 12399  013ED4                     l7418:
 12400                           
 12401                           ; BSR set to: 0
 12402  013ED4  0100               	movlb	0	; () banked
 12403  013ED6  90D8               	bcf	status,0,c
 12404  013ED8  33A2               	rrcf	(___fladd@f2+3)& (0+255),f,b
 12405  013EDA  33A1               	rrcf	(___fladd@f2+2)& (0+255),f,b
 12406  013EDC  33A0               	rrcf	(___fladd@f2+1)& (0+255),f,b
 12407  013EDE  339F               	rrcf	___fladd@f2& (0+255),f,b
 12408  013EE0  0100               	movlb	0	; () banked
 12409  013EE2  2BA5               	incf	___fladd@exp2& (0+255),f,b
 12410  013EE4  D000               	goto	l7420
 12411  013EE6                     l7420:
 12412                           
 12413                           ; BSR set to: 0
 12414  013EE6  0100               	movlb	0	; () banked
 12415  013EE8  51A5               	movf	___fladd@exp2& (0+255),w,b
 12416  013EEA  0100               	movlb	0	; () banked
 12417  013EEC  19A6               	xorwf	___fladd@exp1& (0+255),w,b
 12418  013EEE  B4D8               	btfsc	status,2,c
 12419  013EF0  D002               	goto	l1327
 12420  013EF2  D7F0               	goto	l7418
 12421                           
 12422                           ; BSR set to: 0
 12423  013EF4  D000               	goto	l1327
 12424  013EF6                     l1327:
 12425                           
 12426                           ; BSR set to: 0
 12427  013EF6  0100               	movlb	0	; () banked
 12428  013EF8  AFA4               	btfss	___fladd@sign& (0+255),7,b
 12429  013EFA  D011               	goto	l7424
 12430                           
 12431                           ; BSR set to: 0
 12432  013EFC  0EFF               	movlw	255
 12433  013EFE  0100               	movlb	0	; () banked
 12434  013F00  1B9B               	xorwf	___fladd@f1& (0+255),f,b
 12435  013F02  0EFF               	movlw	255
 12436  013F04  1B9C               	xorwf	(___fladd@f1+1)& (0+255),f,b
 12437  013F06  0EFF               	movlw	255
 12438  013F08  1B9D               	xorwf	(___fladd@f1+2)& (0+255),f,b
 12439  013F0A  0EFF               	movlw	255
 12440  013F0C  1B9E               	xorwf	(___fladd@f1+3)& (0+255),f,b
 12441  013F0E  0E01               	movlw	1
 12442  013F10  0100               	movlb	0	; () banked
 12443  013F12  279B               	addwf	___fladd@f1& (0+255),f,b
 12444  013F14  0E00               	movlw	0
 12445  013F16  239C               	addwfc	(___fladd@f1+1)& (0+255),f,b
 12446  013F18  239D               	addwfc	(___fladd@f1+2)& (0+255),f,b
 12447  013F1A  239E               	addwfc	(___fladd@f1+3)& (0+255),f,b
 12448  013F1C  D000               	goto	l7424
 12449  013F1E                     l7424:
 12450                           
 12451                           ; BSR set to: 0
 12452  013F1E  0100               	movlb	0	; () banked
 12453  013F20  ADA4               	btfss	___fladd@sign& (0+255),6,b
 12454  013F22  D011               	goto	l7428
 12455                           
 12456                           ; BSR set to: 0
 12457  013F24  0EFF               	movlw	255
 12458  013F26  0100               	movlb	0	; () banked
 12459  013F28  1B9F               	xorwf	___fladd@f2& (0+255),f,b
 12460  013F2A  0EFF               	movlw	255
 12461  013F2C  1BA0               	xorwf	(___fladd@f2+1)& (0+255),f,b
 12462  013F2E  0EFF               	movlw	255
 12463  013F30  1BA1               	xorwf	(___fladd@f2+2)& (0+255),f,b
 12464  013F32  0EFF               	movlw	255
 12465  013F34  1BA2               	xorwf	(___fladd@f2+3)& (0+255),f,b
 12466  013F36  0E01               	movlw	1
 12467  013F38  0100               	movlb	0	; () banked
 12468  013F3A  279F               	addwf	___fladd@f2& (0+255),f,b
 12469  013F3C  0E00               	movlw	0
 12470  013F3E  23A0               	addwfc	(___fladd@f2+1)& (0+255),f,b
 12471  013F40  23A1               	addwfc	(___fladd@f2+2)& (0+255),f,b
 12472  013F42  23A2               	addwfc	(___fladd@f2+3)& (0+255),f,b
 12473  013F44  D000               	goto	l7428
 12474  013F46                     l7428:
 12475                           
 12476                           ; BSR set to: 0
 12477  013F46  0E00               	movlw	0
 12478  013F48  0100               	movlb	0	; () banked
 12479  013F4A  6FA4               	movwf	___fladd@sign& (0+255),b
 12480                           
 12481                           ; BSR set to: 0
 12482  013F4C  0100               	movlb	0	; () banked
 12483  013F4E  519B               	movf	___fladd@f1& (0+255),w,b
 12484  013F50  0100               	movlb	0	; () banked
 12485  013F52  279F               	addwf	___fladd@f2& (0+255),f,b
 12486  013F54  0100               	movlb	0	; () banked
 12487  013F56  519C               	movf	(___fladd@f1+1)& (0+255),w,b
 12488  013F58  0100               	movlb	0	; () banked
 12489  013F5A  23A0               	addwfc	(___fladd@f2+1)& (0+255),f,b
 12490  013F5C  0100               	movlb	0	; () banked
 12491  013F5E  519D               	movf	(___fladd@f1+2)& (0+255),w,b
 12492  013F60  0100               	movlb	0	; () banked
 12493  013F62  23A1               	addwfc	(___fladd@f2+2)& (0+255),f,b
 12494  013F64  0100               	movlb	0	; () banked
 12495  013F66  519E               	movf	(___fladd@f1+3)& (0+255),w,b
 12496  013F68  0100               	movlb	0	; () banked
 12497  013F6A  23A2               	addwfc	(___fladd@f2+3)& (0+255),f,b
 12498                           
 12499                           ; BSR set to: 0
 12500  013F6C  0100               	movlb	0	; () banked
 12501  013F6E  AFA2               	btfss	(___fladd@f2+3)& (0+255),7,b
 12502  013F70  D014               	goto	l7438
 12503                           
 12504                           ; BSR set to: 0
 12505  013F72  0EFF               	movlw	255
 12506  013F74  0100               	movlb	0	; () banked
 12507  013F76  1B9F               	xorwf	___fladd@f2& (0+255),f,b
 12508  013F78  0EFF               	movlw	255
 12509  013F7A  1BA0               	xorwf	(___fladd@f2+1)& (0+255),f,b
 12510  013F7C  0EFF               	movlw	255
 12511  013F7E  1BA1               	xorwf	(___fladd@f2+2)& (0+255),f,b
 12512  013F80  0EFF               	movlw	255
 12513  013F82  1BA2               	xorwf	(___fladd@f2+3)& (0+255),f,b
 12514  013F84  0E01               	movlw	1
 12515  013F86  0100               	movlb	0	; () banked
 12516  013F88  279F               	addwf	___fladd@f2& (0+255),f,b
 12517  013F8A  0E00               	movlw	0
 12518  013F8C  23A0               	addwfc	(___fladd@f2+1)& (0+255),f,b
 12519  013F8E  23A1               	addwfc	(___fladd@f2+2)& (0+255),f,b
 12520  013F90  23A2               	addwfc	(___fladd@f2+3)& (0+255),f,b
 12521                           
 12522                           ; BSR set to: 0
 12523  013F92  0E01               	movlw	1
 12524  013F94  0100               	movlb	0	; () banked
 12525  013F96  6FA4               	movwf	___fladd@sign& (0+255),b
 12526  013F98  D000               	goto	l7438
 12527  013F9A                     l7438:
 12528                           
 12529                           ; BSR set to: 0
 12530  013F9A  C09F  F070         	movff	___fladd@f2,___flpack@arg
 12531  013F9E  C0A0  F071         	movff	___fladd@f2+1,___flpack@arg+1
 12532  013FA2  C0A1  F072         	movff	___fladd@f2+2,___flpack@arg+2
 12533  013FA6  C0A2  F073         	movff	___fladd@f2+3,___flpack@arg+3
 12534  013FAA  C0A6  F074         	movff	___fladd@exp1,___flpack@exp
 12535  013FAE  C0A4  F075         	movff	___fladd@sign,___flpack@sign
 12536  013FB2  EC4D  F0A4         	call	___flpack	;wreg free
 12537  013FB6  C070  F09B         	movff	?___flpack,?___fladd
 12538  013FBA  C071  F09C         	movff	?___flpack+1,?___fladd+1
 12539  013FBE  C072  F09D         	movff	?___flpack+2,?___fladd+2
 12540  013FC2  C073  F09E         	movff	?___flpack+3,?___fladd+3
 12541  013FC6  0012               	return	
 12542  013FC8  0012               	return		;funcret
 12543  013FCA                     __end_of___fladd:
 12544                           	opt stack 0
 12545                           tblptru	equ	0xFF8
 12546                           tblptrh	equ	0xFF7
 12547                           tblptrl	equ	0xFF6
 12548                           tablat	equ	0xFF5
 12549                           prodh	equ	0xFF4
 12550                           prodl	equ	0xFF3
 12551                           intcon	equ	0xFF2
 12552                           postinc0	equ	0xFEE
 12553                           wreg	equ	0xFE8
 12554                           indf2	equ	0xFDF
 12555                           postinc2	equ	0xFDE
 12556                           fsr2h	equ	0xFDA
 12557                           fsr2l	equ	0xFD9
 12558                           status	equ	0xFD8
 12559                           
 12560 ;; *************** function ___flneg *****************
 12561 ;; Defined at:
 12562 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flneg.c"
 12563 ;; Parameters:    Size  Location     Type
 12564 ;;  f1              4   46[BANK0 ] unsigned char 
 12565 ;; Auto vars:     Size  Location     Type
 12566 ;;		None
 12567 ;; Return value:  Size  Location     Type
 12568 ;;                  4   46[BANK0 ] unsigned char 
 12569 ;; Registers used:
 12570 ;;		wreg, status,2, status,0
 12571 ;; Tracked objects:
 12572 ;;		On entry : 0/0
 12573 ;;		On exit  : 0/0
 12574 ;;		Unchanged: 0/0
 12575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12576 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12579 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12580 ;;Total ram usage:        4 bytes
 12581 ;; Hardware stack levels used:    1
 12582 ;; Hardware stack levels required when called:    3
 12583 ;; This function calls:
 12584 ;;		Nothing
 12585 ;; This function is called by:
 12586 ;;		_main
 12587 ;;		_sprintf
 12588 ;; This function uses a non-reentrant model
 12589 ;;
 12590                           
 12591                           	psect	text27
 12592  015BF4                     __ptext27:
 12593                           	opt stack 0
 12594  015BF4                     ___flneg:
 12595                           	opt stack 27
 12596                           
 12597                           ;incstack = 0
 12598  015BF4  0100               	movlb	0	; () banked
 12599  015BF6  518E               	movf	___flneg@f1& (0+255),w,b
 12600  015BF8  0100               	movlb	0	; () banked
 12601  015BFA  118F               	iorwf	(___flneg@f1+1)& (0+255),w,b
 12602  015BFC  0100               	movlb	0	; () banked
 12603  015BFE  1190               	iorwf	(___flneg@f1+2)& (0+255),w,b
 12604  015C00  0100               	movlb	0	; () banked
 12605  015C02  1191               	iorwf	(___flneg@f1+3)& (0+255),w,b
 12606  015C04  B4D8               	btfsc	status,2,c
 12607  015C06  D00A               	goto	l7818
 12608                           
 12609                           ; BSR set to: 0
 12610  015C08  0E00               	movlw	0
 12611  015C0A  0100               	movlb	0	; () banked
 12612  015C0C  1B8E               	xorwf	___flneg@f1& (0+255),f,b
 12613  015C0E  0E00               	movlw	0
 12614  015C10  1B8F               	xorwf	(___flneg@f1+1)& (0+255),f,b
 12615  015C12  0E00               	movlw	0
 12616  015C14  1B90               	xorwf	(___flneg@f1+2)& (0+255),f,b
 12617  015C16  0E80               	movlw	128
 12618  015C18  1B91               	xorwf	(___flneg@f1+3)& (0+255),f,b
 12619  015C1A  D000               	goto	l7818
 12620  015C1C                     l7818:
 12621                           
 12622                           ; BSR set to: 0
 12623  015C1C  C08E  F08E         	movff	___flneg@f1,?___flneg
 12624  015C20  C08F  F08F         	movff	___flneg@f1+1,?___flneg+1
 12625  015C24  C090  F090         	movff	___flneg@f1+2,?___flneg+2
 12626  015C28  C091  F091         	movff	___flneg@f1+3,?___flneg+3
 12627  015C2C  0012               	return	
 12628                           
 12629                           ; BSR set to: 0
 12630                           
 12631                           ; BSR set to: 0
 12632  015C2E  0012               	return		;funcret
 12633  015C30                     __end_of___flneg:
 12634                           	opt stack 0
 12635                           tblptru	equ	0xFF8
 12636                           tblptrh	equ	0xFF7
 12637                           tblptrl	equ	0xFF6
 12638                           tablat	equ	0xFF5
 12639                           prodh	equ	0xFF4
 12640                           prodl	equ	0xFF3
 12641                           intcon	equ	0xFF2
 12642                           postinc0	equ	0xFEE
 12643                           wreg	equ	0xFE8
 12644                           indf2	equ	0xFDF
 12645                           postinc2	equ	0xFDE
 12646                           fsr2h	equ	0xFDA
 12647                           fsr2l	equ	0xFD9
 12648                           status	equ	0xFD8
 12649                           
 12650 ;; *************** function ___flge *****************
 12651 ;; Defined at:
 12652 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flge.c"
 12653 ;; Parameters:    Size  Location     Type
 12654 ;;  ff1             4   16[BANK0 ] unsigned char 
 12655 ;;  ff2             4   20[BANK0 ] unsigned char 
 12656 ;; Auto vars:     Size  Location     Type
 12657 ;;		None
 12658 ;; Return value:  Size  Location     Type
 12659 ;;		None               void
 12660 ;; Registers used:
 12661 ;;		wreg, status,2, status,0
 12662 ;; Tracked objects:
 12663 ;;		On entry : 0/0
 12664 ;;		On exit  : 0/0
 12665 ;;		Unchanged: 0/0
 12666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12667 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12669 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12670 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12671 ;;Total ram usage:       12 bytes
 12672 ;; Hardware stack levels used:    1
 12673 ;; Hardware stack levels required when called:    3
 12674 ;; This function calls:
 12675 ;;		Nothing
 12676 ;; This function is called by:
 12677 ;;		_sprintf
 12678 ;; This function uses a non-reentrant model
 12679 ;;
 12680                           
 12681                           	psect	text28
 12682  014F3C                     __ptext28:
 12683                           	opt stack 0
 12684  014F3C                     ___flge:
 12685                           	opt stack 25
 12686                           
 12687                           ; BSR set to: 0
 12688                           ;incstack = 0
 12689  014F3C  0100               	movlb	0	; () banked
 12690  014F3E  AF73               	btfss	(___flge@ff1+3)& (0+255),7,b
 12691  014F40  D027               	goto	l7804
 12692                           
 12693                           ; BSR set to: 0
 12694  014F42  C070  F078         	movff	___flge@ff1,??___flge
 12695  014F46  C071  F079         	movff	___flge@ff1+1,??___flge+1
 12696  014F4A  C072  F07A         	movff	___flge@ff1+2,??___flge+2
 12697  014F4E  C073  F07B         	movff	___flge@ff1+3,??___flge+3
 12698  014F52  0100               	movlb	0	; () banked
 12699  014F54  1F78               	comf	??___flge& (0+255),f,b
 12700  014F56  1F79               	comf	(??___flge+1)& (0+255),f,b
 12701  014F58  1F7A               	comf	(??___flge+2)& (0+255),f,b
 12702  014F5A  1F7B               	comf	(??___flge+3)& (0+255),f,b
 12703  014F5C  2B78               	incf	??___flge& (0+255),f,b
 12704  014F5E  0E00               	movlw	0
 12705  014F60  2379               	addwfc	(??___flge+1)& (0+255),f,b
 12706  014F62  237A               	addwfc	(??___flge+2)& (0+255),f,b
 12707  014F64  237B               	addwfc	(??___flge+3)& (0+255),f,b
 12708  014F66  0E00               	movlw	0
 12709  014F68  0100               	movlb	0	; () banked
 12710  014F6A  2578               	addwf	??___flge& (0+255),w,b
 12711  014F6C  0100               	movlb	0	; () banked
 12712  014F6E  6F70               	movwf	___flge@ff1& (0+255),b
 12713  014F70  0E00               	movlw	0
 12714  014F72  0100               	movlb	0	; () banked
 12715  014F74  2179               	addwfc	(??___flge+1)& (0+255),w,b
 12716  014F76  0100               	movlb	0	; () banked
 12717  014F78  6F71               	movwf	(___flge@ff1+1)& (0+255),b
 12718  014F7A  0E00               	movlw	0
 12719  014F7C  0100               	movlb	0	; () banked
 12720  014F7E  217A               	addwfc	(??___flge+2)& (0+255),w,b
 12721  014F80  0100               	movlb	0	; () banked
 12722  014F82  6F72               	movwf	(___flge@ff1+2)& (0+255),b
 12723  014F84  0E80               	movlw	128
 12724  014F86  0100               	movlb	0	; () banked
 12725  014F88  217B               	addwfc	(??___flge+3)& (0+255),w,b
 12726  014F8A  0100               	movlb	0	; () banked
 12727  014F8C  6F73               	movwf	(___flge@ff1+3)& (0+255),b
 12728  014F8E  D000               	goto	l7804
 12729  014F90                     l7804:
 12730                           
 12731                           ; BSR set to: 0
 12732  014F90  0100               	movlb	0	; () banked
 12733  014F92  AF77               	btfss	(___flge@ff2+3)& (0+255),7,b
 12734  014F94  D026               	goto	l1369
 12735                           
 12736                           ; BSR set to: 0
 12737  014F96  C074  F078         	movff	___flge@ff2,??___flge
 12738  014F9A  C075  F079         	movff	___flge@ff2+1,??___flge+1
 12739  014F9E  C076  F07A         	movff	___flge@ff2+2,??___flge+2
 12740  014FA2  C077  F07B         	movff	___flge@ff2+3,??___flge+3
 12741  014FA6  0100               	movlb	0	; () banked
 12742  014FA8  1F78               	comf	??___flge& (0+255),f,b
 12743  014FAA  1F79               	comf	(??___flge+1)& (0+255),f,b
 12744  014FAC  1F7A               	comf	(??___flge+2)& (0+255),f,b
 12745  014FAE  1F7B               	comf	(??___flge+3)& (0+255),f,b
 12746  014FB0  2B78               	incf	??___flge& (0+255),f,b
 12747  014FB2  0E00               	movlw	0
 12748  014FB4  2379               	addwfc	(??___flge+1)& (0+255),f,b
 12749  014FB6  237A               	addwfc	(??___flge+2)& (0+255),f,b
 12750  014FB8  237B               	addwfc	(??___flge+3)& (0+255),f,b
 12751  014FBA  0E00               	movlw	0
 12752  014FBC  0100               	movlb	0	; () banked
 12753  014FBE  2578               	addwf	??___flge& (0+255),w,b
 12754  014FC0  0100               	movlb	0	; () banked
 12755  014FC2  6F74               	movwf	___flge@ff2& (0+255),b
 12756  014FC4  0E00               	movlw	0
 12757  014FC6  0100               	movlb	0	; () banked
 12758  014FC8  2179               	addwfc	(??___flge+1)& (0+255),w,b
 12759  014FCA  0100               	movlb	0	; () banked
 12760  014FCC  6F75               	movwf	(___flge@ff2+1)& (0+255),b
 12761  014FCE  0E00               	movlw	0
 12762  014FD0  0100               	movlb	0	; () banked
 12763  014FD2  217A               	addwfc	(??___flge+2)& (0+255),w,b
 12764  014FD4  0100               	movlb	0	; () banked
 12765  014FD6  6F76               	movwf	(___flge@ff2+2)& (0+255),b
 12766  014FD8  0E80               	movlw	128
 12767  014FDA  0100               	movlb	0	; () banked
 12768  014FDC  217B               	addwfc	(??___flge+3)& (0+255),w,b
 12769  014FDE  0100               	movlb	0	; () banked
 12770  014FE0  6F77               	movwf	(___flge@ff2+3)& (0+255),b
 12771  014FE2                     l1369:
 12772                           
 12773                           ; BSR set to: 0
 12774  014FE2  0E00               	movlw	0
 12775  014FE4  0100               	movlb	0	; () banked
 12776  014FE6  1B70               	xorwf	___flge@ff1& (0+255),f,b
 12777  014FE8  0E00               	movlw	0
 12778  014FEA  1B71               	xorwf	(___flge@ff1+1)& (0+255),f,b
 12779  014FEC  0E00               	movlw	0
 12780  014FEE  1B72               	xorwf	(___flge@ff1+2)& (0+255),f,b
 12781  014FF0  0E80               	movlw	128
 12782  014FF2  1B73               	xorwf	(___flge@ff1+3)& (0+255),f,b
 12783  014FF4  0E00               	movlw	0
 12784  014FF6  0100               	movlb	0	; () banked
 12785  014FF8  1B74               	xorwf	___flge@ff2& (0+255),f,b
 12786  014FFA  0E00               	movlw	0
 12787  014FFC  1B75               	xorwf	(___flge@ff2+1)& (0+255),f,b
 12788  014FFE  0E00               	movlw	0
 12789  015000  1B76               	xorwf	(___flge@ff2+2)& (0+255),f,b
 12790  015002  0E80               	movlw	128
 12791  015004  1B77               	xorwf	(___flge@ff2+3)& (0+255),f,b
 12792  015006  0100               	movlb	0	; () banked
 12793  015008  5174               	movf	___flge@ff2& (0+255),w,b
 12794  01500A  0100               	movlb	0	; () banked
 12795  01500C  5D70               	subwf	___flge@ff1& (0+255),w,b
 12796  01500E  0100               	movlb	0	; () banked
 12797  015010  5175               	movf	(___flge@ff2+1)& (0+255),w,b
 12798  015012  0100               	movlb	0	; () banked
 12799  015014  5971               	subwfb	(___flge@ff1+1)& (0+255),w,b
 12800  015016  0100               	movlb	0	; () banked
 12801  015018  5176               	movf	(___flge@ff2+2)& (0+255),w,b
 12802  01501A  0100               	movlb	0	; () banked
 12803  01501C  5972               	subwfb	(___flge@ff1+2)& (0+255),w,b
 12804  01501E  0100               	movlb	0	; () banked
 12805  015020  5177               	movf	(___flge@ff2+3)& (0+255),w,b
 12806  015022  0100               	movlb	0	; () banked
 12807  015024  5973               	subwfb	(___flge@ff1+3)& (0+255),w,b
 12808  015026  B0D8               	btfsc	status,0,c
 12809  015028  D002               	goto	l7810
 12810                           
 12811                           ; BSR set to: 0
 12812  01502A  90D8               	bcf	status,0,c
 12813  01502C  0012               	return	
 12814  01502E                     l7810:
 12815                           
 12816                           ; BSR set to: 0
 12817  01502E  80D8               	bsf	status,0,c
 12818                           
 12819                           ; BSR set to: 0
 12820  015030  0012               	return	
 12821                           
 12822                           ; BSR set to: 0
 12823                           
 12824                           ; BSR set to: 0
 12825  015032  0012               	return		;funcret
 12826  015034                     __end_of___flge:
 12827                           	opt stack 0
 12828                           tblptru	equ	0xFF8
 12829                           tblptrh	equ	0xFF7
 12830                           tblptrl	equ	0xFF6
 12831                           tablat	equ	0xFF5
 12832                           prodh	equ	0xFF4
 12833                           prodl	equ	0xFF3
 12834                           intcon	equ	0xFF2
 12835                           postinc0	equ	0xFEE
 12836                           wreg	equ	0xFE8
 12837                           indf2	equ	0xFDF
 12838                           postinc2	equ	0xFDE
 12839                           fsr2h	equ	0xFDA
 12840                           fsr2l	equ	0xFD9
 12841                           status	equ	0xFD8
 12842                           
 12843 ;; *************** function ___lwtofl *****************
 12844 ;; Defined at:
 12845 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtofl.c"
 12846 ;; Parameters:    Size  Location     Type
 12847 ;;  c               2   26[BANK0 ] unsigned int 
 12848 ;; Auto vars:     Size  Location     Type
 12849 ;;		None
 12850 ;; Return value:  Size  Location     Type
 12851 ;;                  4   26[BANK0 ] unsigned int 
 12852 ;; Registers used:
 12853 ;;		wreg, status,2, status,0, cstack
 12854 ;; Tracked objects:
 12855 ;;		On entry : 0/0
 12856 ;;		On exit  : 0/0
 12857 ;;		Unchanged: 0/0
 12858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12859 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12862 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12863 ;;Total ram usage:        4 bytes
 12864 ;; Hardware stack levels used:    1
 12865 ;; Hardware stack levels required when called:    4
 12866 ;; This function calls:
 12867 ;;		___flpack
 12868 ;; This function is called by:
 12869 ;;		_LCD_Handler
 12870 ;; This function uses a non-reentrant model
 12871 ;;
 12872                           
 12873                           	psect	text29
 12874  015D7C                     __ptext29:
 12875                           	opt stack 0
 12876  015D7C                     ___lwtofl:
 12877                           	opt stack 25
 12878                           
 12879                           ; BSR set to: 0
 12880                           ;incstack = 0
 12881  015D7C  C07A  F070         	movff	___lwtofl@c,___flpack@arg
 12882  015D80  C07B  F071         	movff	___lwtofl@c+1,___flpack@arg+1
 12883  015D84  0100               	movlb	0	; () banked
 12884  015D86  6B72               	clrf	(___flpack@arg+2)& (0+255),b
 12885  015D88  6B73               	clrf	(___flpack@arg+3)& (0+255),b
 12886  015D8A  0E96               	movlw	150
 12887  015D8C  0100               	movlb	0	; () banked
 12888  015D8E  6F74               	movwf	___flpack@exp& (0+255),b
 12889  015D90  0E00               	movlw	0
 12890  015D92  0100               	movlb	0	; () banked
 12891  015D94  6F75               	movwf	___flpack@sign& (0+255),b
 12892  015D96  EC4D  F0A4         	call	___flpack	;wreg free
 12893  015D9A  C070  F07A         	movff	?___flpack,?___lwtofl
 12894  015D9E  C071  F07B         	movff	?___flpack+1,?___lwtofl+1
 12895  015DA2  C072  F07C         	movff	?___flpack+2,?___lwtofl+2
 12896  015DA6  C073  F07D         	movff	?___flpack+3,?___lwtofl+3
 12897  015DAA  0012               	return	
 12898  015DAC  0012               	return		;funcret
 12899  015DAE                     __end_of___lwtofl:
 12900                           	opt stack 0
 12901                           tblptru	equ	0xFF8
 12902                           tblptrh	equ	0xFF7
 12903                           tblptrl	equ	0xFF6
 12904                           tablat	equ	0xFF5
 12905                           prodh	equ	0xFF4
 12906                           prodl	equ	0xFF3
 12907                           intcon	equ	0xFF2
 12908                           postinc0	equ	0xFEE
 12909                           wreg	equ	0xFE8
 12910                           indf2	equ	0xFDF
 12911                           postinc2	equ	0xFDE
 12912                           fsr2h	equ	0xFDA
 12913                           fsr2l	equ	0xFD9
 12914                           status	equ	0xFD8
 12915                           
 12916 ;; *************** function ___fldiv *****************
 12917 ;; Defined at:
 12918 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldiv.c"
 12919 ;; Parameters:    Size  Location     Type
 12920 ;;  f1              4   30[BANK0 ] unsigned int 
 12921 ;;  f2              4   34[BANK0 ] unsigned int 
 12922 ;; Auto vars:     Size  Location     Type
 12923 ;;  f3              4   38[BANK0 ] unsigned int 
 12924 ;;  sign            1   44[BANK0 ] unsigned char 
 12925 ;;  exp             1   43[BANK0 ] unsigned char 
 12926 ;;  cntr            1   42[BANK0 ] unsigned char 
 12927 ;; Return value:  Size  Location     Type
 12928 ;;                  4   30[BANK0 ] unsigned char 
 12929 ;; Registers used:
 12930 ;;		wreg, status,2, status,0, cstack
 12931 ;; Tracked objects:
 12932 ;;		On entry : 0/0
 12933 ;;		On exit  : 0/0
 12934 ;;		Unchanged: 0/0
 12935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12936 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12937 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12939 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12940 ;;Total ram usage:       15 bytes
 12941 ;; Hardware stack levels used:    1
 12942 ;; Hardware stack levels required when called:    4
 12943 ;; This function calls:
 12944 ;;		___flpack
 12945 ;; This function is called by:
 12946 ;;		_LCD_Handler
 12947 ;; This function uses a non-reentrant model
 12948 ;;
 12949                           
 12950                           	psect	text30
 12951  014CEC                     __ptext30:
 12952                           	opt stack 0
 12953  014CEC                     ___fldiv:
 12954                           	opt stack 25
 12955                           
 12956                           ;incstack = 0
 12957  014CEC  0100               	movlb	0	; () banked
 12958  014CEE  3580               	rlcf	(___fldiv@f1+2)& (0+255),w,b
 12959  014CF0  3581               	rlcf	(___fldiv@f1+3)& (0+255),w,b
 12960  014CF2  0100               	movlb	0	; () banked
 12961  014CF4  6F8B               	movwf	___fldiv@exp& (0+255),b
 12962  014CF6  0100               	movlb	0	; () banked
 12963  014CF8  518B               	movf	___fldiv@exp& (0+255),w,b
 12964  014CFA  A4D8               	btfss	status,2,c
 12965  014CFC  D00A               	goto	l8204
 12966                           
 12967                           ; BSR set to: 0
 12968  014CFE  0E00               	movlw	0
 12969  014D00  0100               	movlb	0	; () banked
 12970  014D02  6F7E               	movwf	?___fldiv& (0+255),b
 12971  014D04  0E00               	movlw	0
 12972  014D06  6F7F               	movwf	(?___fldiv+1)& (0+255),b
 12973  014D08  0E00               	movlw	0
 12974  014D0A  6F80               	movwf	(?___fldiv+2)& (0+255),b
 12975  014D0C  0E00               	movlw	0
 12976  014D0E  6F81               	movwf	(?___fldiv+3)& (0+255),b
 12977                           
 12978                           ; BSR set to: 0
 12979  014D10  0012               	return	
 12980  014D12                     l8204:
 12981                           
 12982                           ; BSR set to: 0
 12983  014D12  0100               	movlb	0	; () banked
 12984  014D14  3584               	rlcf	(___fldiv@f2+2)& (0+255),w,b
 12985  014D16  3585               	rlcf	(___fldiv@f2+3)& (0+255),w,b
 12986  014D18  0100               	movlb	0	; () banked
 12987  014D1A  6F8C               	movwf	___fldiv@sign& (0+255),b
 12988  014D1C  0100               	movlb	0	; () banked
 12989  014D1E  518C               	movf	___fldiv@sign& (0+255),w,b
 12990  014D20  A4D8               	btfss	status,2,c
 12991  014D22  D00A               	goto	l8210
 12992                           
 12993                           ; BSR set to: 0
 12994  014D24  0E00               	movlw	0
 12995  014D26  0100               	movlb	0	; () banked
 12996  014D28  6F7E               	movwf	?___fldiv& (0+255),b
 12997  014D2A  0E00               	movlw	0
 12998  014D2C  6F7F               	movwf	(?___fldiv+1)& (0+255),b
 12999  014D2E  0E00               	movlw	0
 13000  014D30  6F80               	movwf	(?___fldiv+2)& (0+255),b
 13001  014D32  0E00               	movlw	0
 13002  014D34  6F81               	movwf	(?___fldiv+3)& (0+255),b
 13003                           
 13004                           ; BSR set to: 0
 13005  014D36  0012               	return	
 13006  014D38                     l8210:
 13007                           
 13008                           ; BSR set to: 0
 13009  014D38  0100               	movlb	0	; () banked
 13010  014D3A  518C               	movf	___fldiv@sign& (0+255),w,b
 13011  014D3C  0F89               	addlw	137
 13012  014D3E  0100               	movlb	0	; () banked
 13013  014D40  5F8B               	subwf	___fldiv@exp& (0+255),f,b
 13014                           
 13015                           ; BSR set to: 0
 13016  014D42  C081  F08C         	movff	___fldiv@f1+3,___fldiv@sign
 13017  014D46  0100               	movlb	0	; () banked
 13018  014D48  5185               	movf	(___fldiv@f2+3)& (0+255),w,b
 13019  014D4A  0100               	movlb	0	; () banked
 13020  014D4C  1B8C               	xorwf	___fldiv@sign& (0+255),f,b
 13021  014D4E  0E80               	movlw	128
 13022  014D50  0100               	movlb	0	; () banked
 13023  014D52  178C               	andwf	___fldiv@sign& (0+255),f,b
 13024                           
 13025                           ; BSR set to: 0
 13026  014D54  0100               	movlb	0	; () banked
 13027  014D56  8F80               	bsf	(___fldiv@f1+2)& (0+255),7,b
 13028                           
 13029                           ; BSR set to: 0
 13030  014D58  0EFF               	movlw	255
 13031  014D5A  0100               	movlb	0	; () banked
 13032  014D5C  177E               	andwf	___fldiv@f1& (0+255),f,b
 13033  014D5E  0EFF               	movlw	255
 13034  014D60  177F               	andwf	(___fldiv@f1+1)& (0+255),f,b
 13035  014D62  0EFF               	movlw	255
 13036  014D64  1780               	andwf	(___fldiv@f1+2)& (0+255),f,b
 13037  014D66  0E00               	movlw	0
 13038  014D68  1781               	andwf	(___fldiv@f1+3)& (0+255),f,b
 13039  014D6A  0100               	movlb	0	; () banked
 13040  014D6C  8F84               	bsf	(___fldiv@f2+2)& (0+255),7,b
 13041                           
 13042                           ; BSR set to: 0
 13043  014D6E  0EFF               	movlw	255
 13044  014D70  0100               	movlb	0	; () banked
 13045  014D72  1782               	andwf	___fldiv@f2& (0+255),f,b
 13046  014D74  0EFF               	movlw	255
 13047  014D76  1783               	andwf	(___fldiv@f2+1)& (0+255),f,b
 13048  014D78  0EFF               	movlw	255
 13049  014D7A  1784               	andwf	(___fldiv@f2+2)& (0+255),f,b
 13050  014D7C  0E00               	movlw	0
 13051  014D7E  1785               	andwf	(___fldiv@f2+3)& (0+255),f,b
 13052                           
 13053                           ; BSR set to: 0
 13054  014D80  0E20               	movlw	32
 13055  014D82  0100               	movlb	0	; () banked
 13056  014D84  6F8A               	movwf	___fldiv@cntr& (0+255),b
 13057  014D86  D000               	goto	l8222
 13058  014D88                     l8222:
 13059                           
 13060                           ; BSR set to: 0
 13061  014D88  0100               	movlb	0	; () banked
 13062  014D8A  90D8               	bcf	status,0,c
 13063  014D8C  3786               	rlcf	___fldiv@f3& (0+255),f,b
 13064  014D8E  3787               	rlcf	(___fldiv@f3+1)& (0+255),f,b
 13065  014D90  3788               	rlcf	(___fldiv@f3+2)& (0+255),f,b
 13066  014D92  3789               	rlcf	(___fldiv@f3+3)& (0+255),f,b
 13067                           
 13068                           ; BSR set to: 0
 13069  014D94  0100               	movlb	0	; () banked
 13070  014D96  5182               	movf	___fldiv@f2& (0+255),w,b
 13071  014D98  0100               	movlb	0	; () banked
 13072  014D9A  5D7E               	subwf	___fldiv@f1& (0+255),w,b
 13073  014D9C  0100               	movlb	0	; () banked
 13074  014D9E  5183               	movf	(___fldiv@f2+1)& (0+255),w,b
 13075  014DA0  0100               	movlb	0	; () banked
 13076  014DA2  597F               	subwfb	(___fldiv@f1+1)& (0+255),w,b
 13077  014DA4  0100               	movlb	0	; () banked
 13078  014DA6  5184               	movf	(___fldiv@f2+2)& (0+255),w,b
 13079  014DA8  0100               	movlb	0	; () banked
 13080  014DAA  5980               	subwfb	(___fldiv@f1+2)& (0+255),w,b
 13081  014DAC  0100               	movlb	0	; () banked
 13082  014DAE  5185               	movf	(___fldiv@f2+3)& (0+255),w,b
 13083  014DB0  0100               	movlb	0	; () banked
 13084  014DB2  5981               	subwfb	(___fldiv@f1+3)& (0+255),w,b
 13085  014DB4  A0D8               	btfss	status,0,c
 13086  014DB6  D013               	goto	l8230
 13087                           
 13088                           ; BSR set to: 0
 13089  014DB8  0100               	movlb	0	; () banked
 13090  014DBA  5182               	movf	___fldiv@f2& (0+255),w,b
 13091  014DBC  0100               	movlb	0	; () banked
 13092  014DBE  5F7E               	subwf	___fldiv@f1& (0+255),f,b
 13093  014DC0  0100               	movlb	0	; () banked
 13094  014DC2  5183               	movf	(___fldiv@f2+1)& (0+255),w,b
 13095  014DC4  0100               	movlb	0	; () banked
 13096  014DC6  5B7F               	subwfb	(___fldiv@f1+1)& (0+255),f,b
 13097  014DC8  0100               	movlb	0	; () banked
 13098  014DCA  5184               	movf	(___fldiv@f2+2)& (0+255),w,b
 13099  014DCC  0100               	movlb	0	; () banked
 13100  014DCE  5B80               	subwfb	(___fldiv@f1+2)& (0+255),f,b
 13101  014DD0  0100               	movlb	0	; () banked
 13102  014DD2  5185               	movf	(___fldiv@f2+3)& (0+255),w,b
 13103  014DD4  0100               	movlb	0	; () banked
 13104  014DD6  5B81               	subwfb	(___fldiv@f1+3)& (0+255),f,b
 13105                           
 13106                           ; BSR set to: 0
 13107  014DD8  0100               	movlb	0	; () banked
 13108  014DDA  8186               	bsf	___fldiv@f3& (0+255),0,b
 13109  014DDC  D000               	goto	l8230
 13110  014DDE                     l8230:
 13111                           
 13112                           ; BSR set to: 0
 13113  014DDE  0100               	movlb	0	; () banked
 13114  014DE0  90D8               	bcf	status,0,c
 13115  014DE2  377E               	rlcf	___fldiv@f1& (0+255),f,b
 13116  014DE4  377F               	rlcf	(___fldiv@f1+1)& (0+255),f,b
 13117  014DE6  3780               	rlcf	(___fldiv@f1+2)& (0+255),f,b
 13118  014DE8  3781               	rlcf	(___fldiv@f1+3)& (0+255),f,b
 13119                           
 13120                           ; BSR set to: 0
 13121  014DEA  0100               	movlb	0	; () banked
 13122  014DEC  2F8A               	decfsz	___fldiv@cntr& (0+255),f,b
 13123  014DEE  D7CC               	goto	l8222
 13124  014DF0  D000               	goto	l8234
 13125  014DF2                     l8234:
 13126                           
 13127                           ; BSR set to: 0
 13128  014DF2  C086  F070         	movff	___fldiv@f3,___flpack@arg
 13129  014DF6  C087  F071         	movff	___fldiv@f3+1,___flpack@arg+1
 13130  014DFA  C088  F072         	movff	___fldiv@f3+2,___flpack@arg+2
 13131  014DFE  C089  F073         	movff	___fldiv@f3+3,___flpack@arg+3
 13132  014E02  C08B  F074         	movff	___fldiv@exp,___flpack@exp
 13133  014E06  C08C  F075         	movff	___fldiv@sign,___flpack@sign
 13134  014E0A  EC4D  F0A4         	call	___flpack	;wreg free
 13135  014E0E  C070  F07E         	movff	?___flpack,?___fldiv
 13136  014E12  C071  F07F         	movff	?___flpack+1,?___fldiv+1
 13137  014E16  C072  F080         	movff	?___flpack+2,?___fldiv+2
 13138  014E1A  C073  F081         	movff	?___flpack+3,?___fldiv+3
 13139  014E1E  0012               	return	
 13140  014E20  0012               	return		;funcret
 13141  014E22                     __end_of___fldiv:
 13142                           	opt stack 0
 13143                           tblptru	equ	0xFF8
 13144                           tblptrh	equ	0xFF7
 13145                           tblptrl	equ	0xFF6
 13146                           tablat	equ	0xFF5
 13147                           prodh	equ	0xFF4
 13148                           prodl	equ	0xFF3
 13149                           intcon	equ	0xFF2
 13150                           postinc0	equ	0xFEE
 13151                           wreg	equ	0xFE8
 13152                           indf2	equ	0xFDF
 13153                           postinc2	equ	0xFDE
 13154                           fsr2h	equ	0xFDA
 13155                           fsr2l	equ	0xFD9
 13156                           status	equ	0xFD8
 13157                           
 13158 ;; *************** function ___flpack *****************
 13159 ;; Defined at:
 13160 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\double.c"
 13161 ;; Parameters:    Size  Location     Type
 13162 ;;  arg             4   16[BANK0 ] unsigned long 
 13163 ;;  exp             1   20[BANK0 ] unsigned char 
 13164 ;;  sign            1   21[BANK0 ] unsigned char 
 13165 ;; Auto vars:     Size  Location     Type
 13166 ;;		None
 13167 ;; Return value:  Size  Location     Type
 13168 ;;                  4   16[BANK0 ] unsigned char 
 13169 ;; Registers used:
 13170 ;;		wreg, status,2, status,0
 13171 ;; Tracked objects:
 13172 ;;		On entry : 0/0
 13173 ;;		On exit  : 0/0
 13174 ;;		Unchanged: 0/0
 13175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13176 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13178 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13179 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13180 ;;Total ram usage:       10 bytes
 13181 ;; Hardware stack levels used:    1
 13182 ;; Hardware stack levels required when called:    3
 13183 ;; This function calls:
 13184 ;;		Nothing
 13185 ;; This function is called by:
 13186 ;;		___awtofl
 13187 ;;		___fladd
 13188 ;;		___fldiv
 13189 ;;		___flmul
 13190 ;;		___lbtofl
 13191 ;;		___lltofl
 13192 ;;		___lwtofl
 13193 ;; This function uses a non-reentrant model
 13194 ;;
 13195                           
 13196                           	psect	text31
 13197  01489A                     __ptext31:
 13198                           	opt stack 0
 13199  01489A                     ___flpack:
 13200                           	opt stack 26
 13201                           
 13202                           ;incstack = 0
 13203  01489A  0100               	movlb	0	; () banked
 13204  01489C  5174               	movf	___flpack@exp& (0+255),w,b
 13205  01489E  0100               	movlb	0	; () banked
 13206  0148A0  B4D8               	btfsc	status,2,c
 13207  0148A2  D00A               	goto	l7326
 13208                           
 13209                           ; BSR set to: 0
 13210  0148A4  0100               	movlb	0	; () banked
 13211  0148A6  5170               	movf	___flpack@arg& (0+255),w,b
 13212  0148A8  0100               	movlb	0	; () banked
 13213  0148AA  1171               	iorwf	(___flpack@arg+1)& (0+255),w,b
 13214  0148AC  0100               	movlb	0	; () banked
 13215  0148AE  1172               	iorwf	(___flpack@arg+2)& (0+255),w,b
 13216  0148B0  0100               	movlb	0	; () banked
 13217  0148B2  1173               	iorwf	(___flpack@arg+3)& (0+255),w,b
 13218  0148B4  A4D8               	btfss	status,2,c
 13219  0148B6  D014               	goto	l7332
 13220  0148B8                     l7326:
 13221                           
 13222                           ; BSR set to: 0
 13223  0148B8  0E00               	movlw	0
 13224  0148BA  0100               	movlb	0	; () banked
 13225  0148BC  6F70               	movwf	?___flpack& (0+255),b
 13226  0148BE  0E00               	movlw	0
 13227  0148C0  6F71               	movwf	(?___flpack+1)& (0+255),b
 13228  0148C2  0E00               	movlw	0
 13229  0148C4  6F72               	movwf	(?___flpack+2)& (0+255),b
 13230  0148C6  0E00               	movlw	0
 13231  0148C8  6F73               	movwf	(?___flpack+3)& (0+255),b
 13232                           
 13233                           ; BSR set to: 0
 13234  0148CA  0012               	return	
 13235                           
 13236                           ; BSR set to: 0
 13237  0148CC  D009               	goto	l7332
 13238  0148CE                     l7330:
 13239                           
 13240                           ; BSR set to: 0
 13241  0148CE  0100               	movlb	0	; () banked
 13242  0148D0  2B74               	incf	___flpack@exp& (0+255),f,b
 13243  0148D2  0100               	movlb	0	; () banked
 13244  0148D4  90D8               	bcf	status,0,c
 13245  0148D6  3373               	rrcf	(___flpack@arg+3)& (0+255),f,b
 13246  0148D8  3372               	rrcf	(___flpack@arg+2)& (0+255),f,b
 13247  0148DA  3371               	rrcf	(___flpack@arg+1)& (0+255),f,b
 13248  0148DC  3370               	rrcf	___flpack@arg& (0+255),f,b
 13249  0148DE  D000               	goto	l7332
 13250  0148E0                     l7332:
 13251                           
 13252                           ; BSR set to: 0
 13253  0148E0  0E00               	movlw	0
 13254  0148E2  0100               	movlb	0	; () banked
 13255  0148E4  1570               	andwf	___flpack@arg& (0+255),w,b
 13256  0148E6  0100               	movlb	0	; () banked
 13257  0148E8  6F76               	movwf	??___flpack& (0+255),b
 13258  0148EA  0E00               	movlw	0
 13259  0148EC  0100               	movlb	0	; () banked
 13260  0148EE  1571               	andwf	(___flpack@arg+1)& (0+255),w,b
 13261  0148F0  0100               	movlb	0	; () banked
 13262  0148F2  6F77               	movwf	(??___flpack+1)& (0+255),b
 13263  0148F4  0E00               	movlw	0
 13264  0148F6  0100               	movlb	0	; () banked
 13265  0148F8  1572               	andwf	(___flpack@arg+2)& (0+255),w,b
 13266  0148FA  0100               	movlb	0	; () banked
 13267  0148FC  6F78               	movwf	(??___flpack+2)& (0+255),b
 13268  0148FE  0EFE               	movlw	254
 13269  014900  0100               	movlb	0	; () banked
 13270  014902  1573               	andwf	(___flpack@arg+3)& (0+255),w,b
 13271  014904  0100               	movlb	0	; () banked
 13272  014906  6F79               	movwf	(??___flpack+3)& (0+255),b
 13273  014908  0100               	movlb	0	; () banked
 13274  01490A  5176               	movf	??___flpack& (0+255),w,b
 13275  01490C  0100               	movlb	0	; () banked
 13276  01490E  1177               	iorwf	(??___flpack+1)& (0+255),w,b
 13277  014910  0100               	movlb	0	; () banked
 13278  014912  1178               	iorwf	(??___flpack+2)& (0+255),w,b
 13279  014914  0100               	movlb	0	; () banked
 13280  014916  1179               	iorwf	(??___flpack+3)& (0+255),w,b
 13281  014918  B4D8               	btfsc	status,2,c
 13282  01491A  D011               	goto	l1296
 13283  01491C  D7D8               	goto	l7330
 13284                           
 13285                           ; BSR set to: 0
 13286  01491E  D00F               	goto	l1296
 13287  014920                     l7334:
 13288                           
 13289                           ; BSR set to: 0
 13290  014920  0100               	movlb	0	; () banked
 13291  014922  2B74               	incf	___flpack@exp& (0+255),f,b
 13292                           
 13293                           ; BSR set to: 0
 13294  014924  0E01               	movlw	1
 13295  014926  0100               	movlb	0	; () banked
 13296  014928  2770               	addwf	___flpack@arg& (0+255),f,b
 13297  01492A  0E00               	movlw	0
 13298  01492C  2371               	addwfc	(___flpack@arg+1)& (0+255),f,b
 13299  01492E  2372               	addwfc	(___flpack@arg+2)& (0+255),f,b
 13300  014930  2373               	addwfc	(___flpack@arg+3)& (0+255),f,b
 13301                           
 13302                           ; BSR set to: 0
 13303  014932  0100               	movlb	0	; () banked
 13304  014934  90D8               	bcf	status,0,c
 13305  014936  3373               	rrcf	(___flpack@arg+3)& (0+255),f,b
 13306  014938  3372               	rrcf	(___flpack@arg+2)& (0+255),f,b
 13307  01493A  3371               	rrcf	(___flpack@arg+1)& (0+255),f,b
 13308  01493C  3370               	rrcf	___flpack@arg& (0+255),f,b
 13309  01493E                     l1296:
 13310                           
 13311                           ; BSR set to: 0
 13312  01493E  0E00               	movlw	0
 13313  014940  0100               	movlb	0	; () banked
 13314  014942  1570               	andwf	___flpack@arg& (0+255),w,b
 13315  014944  0100               	movlb	0	; () banked
 13316  014946  6F76               	movwf	??___flpack& (0+255),b
 13317  014948  0E00               	movlw	0
 13318  01494A  0100               	movlb	0	; () banked
 13319  01494C  1571               	andwf	(___flpack@arg+1)& (0+255),w,b
 13320  01494E  0100               	movlb	0	; () banked
 13321  014950  6F77               	movwf	(??___flpack+1)& (0+255),b
 13322  014952  0E00               	movlw	0
 13323  014954  0100               	movlb	0	; () banked
 13324  014956  1572               	andwf	(___flpack@arg+2)& (0+255),w,b
 13325  014958  0100               	movlb	0	; () banked
 13326  01495A  6F78               	movwf	(??___flpack+2)& (0+255),b
 13327  01495C  0EFF               	movlw	255
 13328  01495E  0100               	movlb	0	; () banked
 13329  014960  1573               	andwf	(___flpack@arg+3)& (0+255),w,b
 13330  014962  0100               	movlb	0	; () banked
 13331  014964  6F79               	movwf	(??___flpack+3)& (0+255),b
 13332  014966  0100               	movlb	0	; () banked
 13333  014968  5176               	movf	??___flpack& (0+255),w,b
 13334  01496A  0100               	movlb	0	; () banked
 13335  01496C  1177               	iorwf	(??___flpack+1)& (0+255),w,b
 13336  01496E  0100               	movlb	0	; () banked
 13337  014970  1178               	iorwf	(??___flpack+2)& (0+255),w,b
 13338  014972  0100               	movlb	0	; () banked
 13339  014974  1179               	iorwf	(??___flpack+3)& (0+255),w,b
 13340  014976  B4D8               	btfsc	status,2,c
 13341  014978  D00B               	goto	l7342
 13342  01497A  D7D2               	goto	l7334
 13343                           
 13344                           ; BSR set to: 0
 13345  01497C  D009               	goto	l7342
 13346  01497E                     l7340:
 13347                           
 13348                           ; BSR set to: 0
 13349  01497E  0100               	movlb	0	; () banked
 13350  014980  0774               	decf	___flpack@exp& (0+255),f,b
 13351  014982  0100               	movlb	0	; () banked
 13352  014984  90D8               	bcf	status,0,c
 13353  014986  3770               	rlcf	___flpack@arg& (0+255),f,b
 13354  014988  3771               	rlcf	(___flpack@arg+1)& (0+255),f,b
 13355  01498A  3772               	rlcf	(___flpack@arg+2)& (0+255),f,b
 13356  01498C  3773               	rlcf	(___flpack@arg+3)& (0+255),f,b
 13357  01498E  D000               	goto	l7342
 13358  014990                     l7342:
 13359                           
 13360                           ; BSR set to: 0
 13361  014990  0100               	movlb	0	; () banked
 13362  014992  BF72               	btfsc	(___flpack@arg+2)& (0+255),7,b
 13363  014994  D005               	goto	l1303
 13364                           
 13365                           ; BSR set to: 0
 13366  014996  0E02               	movlw	2
 13367  014998  0100               	movlb	0	; () banked
 13368  01499A  6174               	cpfslt	___flpack@exp& (0+255),b
 13369  01499C  D7F0               	goto	l7340
 13370  01499E  D000               	goto	l1303
 13371  0149A0                     l1303:
 13372                           
 13373                           ; BSR set to: 0
 13374  0149A0  0100               	movlb	0	; () banked
 13375  0149A2  B174               	btfsc	___flpack@exp& (0+255),0,b
 13376  0149A4  D009               	goto	l1304
 13377                           
 13378                           ; BSR set to: 0
 13379  0149A6  0EFF               	movlw	255
 13380  0149A8  0100               	movlb	0	; () banked
 13381  0149AA  1770               	andwf	___flpack@arg& (0+255),f,b
 13382  0149AC  0EFF               	movlw	255
 13383  0149AE  1771               	andwf	(___flpack@arg+1)& (0+255),f,b
 13384  0149B0  0E7F               	movlw	127
 13385  0149B2  1772               	andwf	(___flpack@arg+2)& (0+255),f,b
 13386  0149B4  0EFF               	movlw	255
 13387  0149B6  1773               	andwf	(___flpack@arg+3)& (0+255),f,b
 13388  0149B8                     l1304:
 13389                           
 13390                           ; BSR set to: 0
 13391  0149B8  0100               	movlb	0	; () banked
 13392  0149BA  90D8               	bcf	status,0,c
 13393  0149BC  3374               	rrcf	___flpack@exp& (0+255),f,b
 13394  0149BE  C074  F076         	movff	___flpack@exp,??___flpack
 13395  0149C2  0100               	movlb	0	; () banked
 13396  0149C4  6B77               	clrf	(??___flpack+1)& (0+255),b
 13397  0149C6  6B78               	clrf	(??___flpack+2)& (0+255),b
 13398  0149C8  6B79               	clrf	(??___flpack+3)& (0+255),b
 13399  0149CA  C076  F079         	movff	??___flpack,??___flpack+3
 13400  0149CE  0100               	movlb	0	; () banked
 13401  0149D0  6B78               	clrf	(??___flpack+2)& (0+255),b
 13402  0149D2  6B77               	clrf	(??___flpack+1)& (0+255),b
 13403  0149D4  6B76               	clrf	??___flpack& (0+255),b
 13404  0149D6  0100               	movlb	0	; () banked
 13405  0149D8  5176               	movf	??___flpack& (0+255),w,b
 13406  0149DA  0100               	movlb	0	; () banked
 13407  0149DC  1370               	iorwf	___flpack@arg& (0+255),f,b
 13408  0149DE  0100               	movlb	0	; () banked
 13409  0149E0  5177               	movf	(??___flpack+1)& (0+255),w,b
 13410  0149E2  0100               	movlb	0	; () banked
 13411  0149E4  1371               	iorwf	(___flpack@arg+1)& (0+255),f,b
 13412  0149E6  0100               	movlb	0	; () banked
 13413  0149E8  5178               	movf	(??___flpack+2)& (0+255),w,b
 13414  0149EA  0100               	movlb	0	; () banked
 13415  0149EC  1372               	iorwf	(___flpack@arg+2)& (0+255),f,b
 13416  0149EE  0100               	movlb	0	; () banked
 13417  0149F0  5179               	movf	(??___flpack+3)& (0+255),w,b
 13418  0149F2  0100               	movlb	0	; () banked
 13419  0149F4  1373               	iorwf	(___flpack@arg+3)& (0+255),f,b
 13420                           
 13421                           ; BSR set to: 0
 13422  0149F6  0100               	movlb	0	; () banked
 13423  0149F8  5175               	movf	___flpack@sign& (0+255),w,b
 13424  0149FA  0100               	movlb	0	; () banked
 13425  0149FC  B4D8               	btfsc	status,2,c
 13426  0149FE  D003               	goto	l7352
 13427                           
 13428                           ; BSR set to: 0
 13429  014A00  0100               	movlb	0	; () banked
 13430  014A02  8F73               	bsf	(___flpack@arg+3)& (0+255),7,b
 13431  014A04  D000               	goto	l7352
 13432  014A06                     l7352:
 13433                           
 13434                           ; BSR set to: 0
 13435  014A06  C070  F070         	movff	___flpack@arg,?___flpack
 13436  014A0A  C071  F071         	movff	___flpack@arg+1,?___flpack+1
 13437  014A0E  C072  F072         	movff	___flpack@arg+2,?___flpack+2
 13438  014A12  C073  F073         	movff	___flpack@arg+3,?___flpack+3
 13439  014A16  0012               	return	
 13440                           
 13441                           ; BSR set to: 0
 13442                           
 13443                           ; BSR set to: 0
 13444  014A18  0012               	return		;funcret
 13445  014A1A                     __end_of___flpack:
 13446                           	opt stack 0
 13447                           tblptru	equ	0xFF8
 13448                           tblptrh	equ	0xFF7
 13449                           tblptrl	equ	0xFF6
 13450                           tablat	equ	0xFF5
 13451                           prodh	equ	0xFF4
 13452                           prodl	equ	0xFF3
 13453                           intcon	equ	0xFF2
 13454                           postinc0	equ	0xFEE
 13455                           wreg	equ	0xFE8
 13456                           indf2	equ	0xFDF
 13457                           postinc2	equ	0xFDE
 13458                           fsr2h	equ	0xFDA
 13459                           fsr2l	equ	0xFD9
 13460                           status	equ	0xFD8
 13461                           
 13462 ;; *************** function _LCD_write_integer *****************
 13463 ;; Defined at:
 13464 ;;		line 210 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 13465 ;; Parameters:    Size  Location     Type
 13466 ;;  value           2   40[BANK0 ] int 
 13467 ;;  number_of_di    1   42[BANK0 ] unsigned char 
 13468 ;;  zero_cleanin    1   43[BANK0 ] unsigned char 
 13469 ;; Auto vars:     Size  Location     Type
 13470 ;;  convertedInt    6   49[BANK0 ] unsigned char [6]
 13471 ;;  index           1   55[BANK0 ] unsigned char 
 13472 ;; Return value:  Size  Location     Type
 13473 ;;		None               void
 13474 ;; Registers used:
 13475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13476 ;; Tracked objects:
 13477 ;;		On entry : 0/0
 13478 ;;		On exit  : 0/0
 13479 ;;		Unchanged: 0/0
 13480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13481 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13482 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13483 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13484 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13485 ;;Total ram usage:       16 bytes
 13486 ;; Hardware stack levels used:    1
 13487 ;; Hardware stack levels required when called:    9
 13488 ;; This function calls:
 13489 ;;		_LCD_write_string
 13490 ;;		_itoa
 13491 ;; This function is called by:
 13492 ;;		_LCD_Handler
 13493 ;; This function uses a non-reentrant model
 13494 ;;
 13495                           
 13496                           	psect	text32
 13497  014396                     __ptext32:
 13498                           	opt stack 0
 13499  014396                     _LCD_write_integer:
 13500                           	opt stack 20
 13501                           
 13502                           ;src\LCD_44780.c: 213: unsigned char convertedInt [6] = {0,0,0,0,0,0};
 13503                           
 13504                           ; BSR set to: 0
 13505                           ;incstack = 0
 13506  014396  EE21  F007         	lfsr	2,LCD_write_integer@F17326
 13507  01439A  EE10  F091         	lfsr	1,LCD_write_integer@convertedInt
 13508  01439E  0E05               	movlw	5
 13509  0143A0                     u10011:
 13510  0143A0  CFDB FFE3          	movff	plusw2,plusw1
 13511  0143A4  06E8               	decf	wreg,f,c
 13512  0143A6  E2FC               	bc	u10011
 13513                           
 13514                           ;src\LCD_44780.c: 216: unsigned char index;
 13515                           ;src\LCD_44780.c: 224: itoa ((unsigned char*) convertedInt, value,10);
 13516  0143A8  0E91               	movlw	low LCD_write_integer@convertedInt
 13517  0143AA  0100               	movlb	0	; () banked
 13518  0143AC  6F80               	movwf	itoa@buf& (0+255),b
 13519  0143AE  0E00               	movlw	high LCD_write_integer@convertedInt
 13520  0143B0  0100               	movlb	0	; () banked
 13521  0143B2  6F81               	movwf	(itoa@buf+1)& (0+255),b
 13522  0143B4  C088  F082         	movff	LCD_write_integer@value,itoa@val
 13523  0143B8  C089  F083         	movff	LCD_write_integer@value+1,itoa@val+1
 13524  0143BC  0E00               	movlw	0
 13525  0143BE  0100               	movlb	0	; () banked
 13526  0143C0  6F85               	movwf	(itoa@base+1)& (0+255),b
 13527  0143C2  0E0A               	movlw	10
 13528  0143C4  6F84               	movwf	itoa@base& (0+255),b
 13529  0143C6  EC92  F0AD         	call	_itoa	;wreg free
 13530                           
 13531                           ;src\LCD_44780.c: 228: if (number_of_digits >0 ) {
 13532  0143CA  0100               	movlb	0	; () banked
 13533  0143CC  518A               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13534  0143CE  0100               	movlb	0	; () banked
 13535  0143D0  B4D8               	btfsc	status,2,c
 13536  0143D2  D0BD               	goto	l7948
 13537                           
 13538                           ; BSR set to: 0
 13539                           ;src\LCD_44780.c: 230: convertedInt[number_of_digits] = '\0';
 13540  0143D4  0100               	movlb	0	; () banked
 13541  0143D6  518A               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13542  0143D8  0D01               	mullw	1
 13543  0143DA  0E91               	movlw	low LCD_write_integer@convertedInt
 13544  0143DC  24F3               	addwf	prodl,w,c
 13545  0143DE  6ED9               	movwf	fsr2l,c
 13546  0143E0  0E00               	movlw	high LCD_write_integer@convertedInt
 13547  0143E2  20F4               	addwfc	prodh,w,c
 13548  0143E4  6EDA               	movwf	fsr2h,c
 13549  0143E6  0E00               	movlw	0
 13550  0143E8  6EDF               	movwf	indf2,c
 13551                           
 13552                           ;src\LCD_44780.c: 234: while (!(convertedInt[number_of_digits-1] <= '9' && convertedInt[
      +                          number_of_digits-1] >= '0')){
 13553  0143EA  D074               	goto	l7944
 13554  0143EC                     l7926:
 13555                           
 13556                           ; BSR set to: 0
 13557                           ;src\LCD_44780.c: 236: for (index = number_of_digits-1; index > 0; index--){
 13558  0143EC  0100               	movlb	0	; () banked
 13559  0143EE  058A               	decf	LCD_write_integer@number_of_digits& (0+255),w,b
 13560  0143F0  0100               	movlb	0	; () banked
 13561  0143F2  6F97               	movwf	LCD_write_integer@index& (0+255),b
 13562  0143F4                     l7928:
 13563                           
 13564                           ; BSR set to: 0
 13565  0143F4  0100               	movlb	0	; () banked
 13566  0143F6  5197               	movf	LCD_write_integer@index& (0+255),w,b
 13567  0143F8  0100               	movlb	0	; () banked
 13568  0143FA  B4D8               	btfsc	status,2,c
 13569  0143FC  D06B               	goto	l7944
 13570  0143FE  D001               	goto	l7932
 13571                           
 13572                           ; BSR set to: 0
 13573  014400  D069               	goto	l7944
 13574  014402                     l7932:
 13575                           
 13576                           ; BSR set to: 0
 13577                           ;src\LCD_44780.c: 237: convertedInt[index] = convertedInt[index-1];
 13578  014402  0EFF               	movlw	255
 13579  014404  0100               	movlb	0	; () banked
 13580  014406  6F8C               	movwf	??_LCD_write_integer& (0+255),b
 13581  014408  0EFF               	movlw	255
 13582  01440A  0100               	movlb	0	; () banked
 13583  01440C  6F8D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13584  01440E  0100               	movlb	0	; () banked
 13585  014410  5197               	movf	LCD_write_integer@index& (0+255),w,b
 13586  014412  0100               	movlb	0	; () banked
 13587  014414  6F8E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13588  014416  6B8F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13589  014418  0100               	movlb	0	; () banked
 13590  01441A  518C               	movf	??_LCD_write_integer& (0+255),w,b
 13591  01441C  0100               	movlb	0	; () banked
 13592  01441E  278E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13593  014420  0100               	movlb	0	; () banked
 13594  014422  518D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13595  014424  0100               	movlb	0	; () banked
 13596  014426  238F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13597  014428  0E91               	movlw	low LCD_write_integer@convertedInt
 13598  01442A  0100               	movlb	0	; () banked
 13599  01442C  258E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13600  01442E  6ED9               	movwf	fsr2l,c
 13601  014430  0E00               	movlw	high LCD_write_integer@convertedInt
 13602  014432  0100               	movlb	0	; () banked
 13603  014434  218F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13604  014436  6EDA               	movwf	fsr2h,c
 13605  014438  0100               	movlb	0	; () banked
 13606  01443A  5197               	movf	LCD_write_integer@index& (0+255),w,b
 13607  01443C  0D01               	mullw	1
 13608  01443E  0E91               	movlw	low LCD_write_integer@convertedInt
 13609  014440  24F3               	addwf	prodl,w,c
 13610  014442  6EE1               	movwf	fsr1l,c
 13611  014444  0E00               	movlw	high LCD_write_integer@convertedInt
 13612  014446  20F4               	addwfc	prodh,w,c
 13613  014448  6EE2               	movwf	fsr1h,c
 13614  01444A  CFDF FFE7          	movff	indf2,indf1
 13615                           
 13616                           ; BSR set to: 0
 13617                           ;src\LCD_44780.c: 239: if (zero_cleaning == 0x01) {
 13618  01444E  0100               	movlb	0	; () banked
 13619  014450  058B               	decf	LCD_write_integer@zero_cleaning& (0+255),w,b
 13620  014452  A4D8               	btfss	status,2,c
 13621  014454  D01D               	goto	l7938
 13622                           
 13623                           ; BSR set to: 0
 13624                           ;src\LCD_44780.c: 240: convertedInt[index-1] = ' ';
 13625  014456  0EFF               	movlw	255
 13626  014458  0100               	movlb	0	; () banked
 13627  01445A  6F8C               	movwf	??_LCD_write_integer& (0+255),b
 13628  01445C  0EFF               	movlw	255
 13629  01445E  0100               	movlb	0	; () banked
 13630  014460  6F8D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13631  014462  0100               	movlb	0	; () banked
 13632  014464  5197               	movf	LCD_write_integer@index& (0+255),w,b
 13633  014466  0100               	movlb	0	; () banked
 13634  014468  6F8E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13635  01446A  6B8F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13636  01446C  0100               	movlb	0	; () banked
 13637  01446E  518C               	movf	??_LCD_write_integer& (0+255),w,b
 13638  014470  0100               	movlb	0	; () banked
 13639  014472  278E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13640  014474  0100               	movlb	0	; () banked
 13641  014476  518D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13642  014478  0100               	movlb	0	; () banked
 13643  01447A  238F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13644  01447C  0E91               	movlw	low LCD_write_integer@convertedInt
 13645  01447E  0100               	movlb	0	; () banked
 13646  014480  258E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13647  014482  6ED9               	movwf	fsr2l,c
 13648  014484  0E00               	movlw	high LCD_write_integer@convertedInt
 13649  014486  0100               	movlb	0	; () banked
 13650  014488  218F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13651  01448A  6EDA               	movwf	fsr2h,c
 13652  01448C  0E20               	movlw	32
 13653  01448E  D01C               	goto	L9
 13654  014490                     l7938:
 13655                           
 13656                           ; BSR set to: 0
 13657                           ;src\LCD_44780.c: 242: convertedInt[index-1] = '0';
 13658  014490  0EFF               	movlw	255
 13659  014492  0100               	movlb	0	; () banked
 13660  014494  6F8C               	movwf	??_LCD_write_integer& (0+255),b
 13661  014496  0EFF               	movlw	255
 13662  014498  0100               	movlb	0	; () banked
 13663  01449A  6F8D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13664  01449C  0100               	movlb	0	; () banked
 13665  01449E  5197               	movf	LCD_write_integer@index& (0+255),w,b
 13666  0144A0  0100               	movlb	0	; () banked
 13667  0144A2  6F8E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13668  0144A4  6B8F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13669  0144A6  0100               	movlb	0	; () banked
 13670  0144A8  518C               	movf	??_LCD_write_integer& (0+255),w,b
 13671  0144AA  0100               	movlb	0	; () banked
 13672  0144AC  278E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13673  0144AE  0100               	movlb	0	; () banked
 13674  0144B0  518D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13675  0144B2  0100               	movlb	0	; () banked
 13676  0144B4  238F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13677  0144B6  0E91               	movlw	low LCD_write_integer@convertedInt
 13678  0144B8  0100               	movlb	0	; () banked
 13679  0144BA  258E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13680  0144BC  6ED9               	movwf	fsr2l,c
 13681  0144BE  0E00               	movlw	high LCD_write_integer@convertedInt
 13682  0144C0  0100               	movlb	0	; () banked
 13683  0144C2  218F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13684  0144C4  6EDA               	movwf	fsr2h,c
 13685  0144C6  0E30               	movlw	48
 13686  0144C8                     L9:
 13687  0144C8  6EDF               	movwf	indf2,c
 13688  0144CA  D000               	goto	l7940
 13689  0144CC                     l7940:
 13690                           
 13691                           ; BSR set to: 0
 13692  0144CC  0100               	movlb	0	; () banked
 13693  0144CE  0797               	decf	LCD_write_integer@index& (0+255),f,b
 13694  0144D0  D791               	goto	l7928
 13695                           
 13696                           ; BSR set to: 0
 13697                           
 13698                           ; BSR set to: 0
 13699  0144D2  D000               	goto	l7944
 13700  0144D4                     l7944:
 13701                           
 13702                           ; BSR set to: 0
 13703  0144D4  0EFF               	movlw	255
 13704  0144D6  0100               	movlb	0	; () banked
 13705  0144D8  6F8C               	movwf	??_LCD_write_integer& (0+255),b
 13706  0144DA  0EFF               	movlw	255
 13707  0144DC  0100               	movlb	0	; () banked
 13708  0144DE  6F8D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13709  0144E0  0100               	movlb	0	; () banked
 13710  0144E2  518A               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13711  0144E4  0100               	movlb	0	; () banked
 13712  0144E6  6F8E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13713  0144E8  6B8F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13714  0144EA  0100               	movlb	0	; () banked
 13715  0144EC  518C               	movf	??_LCD_write_integer& (0+255),w,b
 13716  0144EE  0100               	movlb	0	; () banked
 13717  0144F0  278E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13718  0144F2  0100               	movlb	0	; () banked
 13719  0144F4  518D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13720  0144F6  0100               	movlb	0	; () banked
 13721  0144F8  238F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13722  0144FA  0E91               	movlw	low LCD_write_integer@convertedInt
 13723  0144FC  0100               	movlb	0	; () banked
 13724  0144FE  258E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13725  014500  6ED9               	movwf	fsr2l,c
 13726  014502  0E00               	movlw	high LCD_write_integer@convertedInt
 13727  014504  0100               	movlb	0	; () banked
 13728  014506  218F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13729  014508  6EDA               	movwf	fsr2h,c
 13730  01450A  0E3A               	movlw	58
 13731  01450C  60DF               	cpfslt	indf2,c
 13732  01450E  D76E               	goto	l7926
 13733                           
 13734                           ; BSR set to: 0
 13735  014510  0EFF               	movlw	255
 13736  014512  0100               	movlb	0	; () banked
 13737  014514  6F8C               	movwf	??_LCD_write_integer& (0+255),b
 13738  014516  0EFF               	movlw	255
 13739  014518  0100               	movlb	0	; () banked
 13740  01451A  6F8D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13741  01451C  0100               	movlb	0	; () banked
 13742  01451E  518A               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13743  014520  0100               	movlb	0	; () banked
 13744  014522  6F8E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13745  014524  6B8F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13746  014526  0100               	movlb	0	; () banked
 13747  014528  518C               	movf	??_LCD_write_integer& (0+255),w,b
 13748  01452A  0100               	movlb	0	; () banked
 13749  01452C  278E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13750  01452E  0100               	movlb	0	; () banked
 13751  014530  518D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13752  014532  0100               	movlb	0	; () banked
 13753  014534  238F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13754  014536  0E91               	movlw	low LCD_write_integer@convertedInt
 13755  014538  0100               	movlb	0	; () banked
 13756  01453A  258E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13757  01453C  6ED9               	movwf	fsr2l,c
 13758  01453E  0E00               	movlw	high LCD_write_integer@convertedInt
 13759  014540  0100               	movlb	0	; () banked
 13760  014542  218F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13761  014544  6EDA               	movwf	fsr2h,c
 13762  014546  0E2F               	movlw	47
 13763  014548  64DF               	cpfsgt	indf2,c
 13764  01454A  D750               	goto	l7926
 13765                           
 13766                           ; BSR set to: 0
 13767  01454C  D000               	goto	l7948
 13768  01454E                     l7948:
 13769                           
 13770                           ; BSR set to: 0
 13771                           ;src\LCD_44780.c: 243: }
 13772                           ;src\LCD_44780.c: 245: }
 13773                           ;src\LCD_44780.c: 246: }
 13774                           ;src\LCD_44780.c: 247: }
 13775                           ;src\LCD_44780.c: 249: LCD_write_string (convertedInt);
 13776  01454E  0E91               	movlw	low LCD_write_integer@convertedInt
 13777  014550  0100               	movlb	0	; () banked
 13778  014552  6F81               	movwf	LCD_write_string@buffer& (0+255),b
 13779  014554  0E00               	movlw	high LCD_write_integer@convertedInt
 13780  014556  0100               	movlb	0	; () banked
 13781  014558  6F82               	movwf	(LCD_write_string@buffer+1)& (0+255),b
 13782  01455A  EC20  F0AF         	call	_LCD_write_string	;wreg free
 13783  01455E  0012               	return		;funcret
 13784  014560                     __end_of_LCD_write_integer:
 13785                           	opt stack 0
 13786                           tblptru	equ	0xFF8
 13787                           tblptrh	equ	0xFF7
 13788                           tblptrl	equ	0xFF6
 13789                           tablat	equ	0xFF5
 13790                           prodh	equ	0xFF4
 13791                           prodl	equ	0xFF3
 13792                           intcon	equ	0xFF2
 13793                           postinc0	equ	0xFEE
 13794                           wreg	equ	0xFE8
 13795                           indf1	equ	0xFE7
 13796                           plusw1	equ	0xFE3
 13797                           fsr1h	equ	0xFE2
 13798                           fsr1l	equ	0xFE1
 13799                           indf2	equ	0xFDF
 13800                           postinc2	equ	0xFDE
 13801                           plusw2	equ	0xFDB
 13802                           fsr2h	equ	0xFDA
 13803                           fsr2l	equ	0xFD9
 13804                           status	equ	0xFD8
 13805                           
 13806 ;; *************** function _itoa *****************
 13807 ;; Defined at:
 13808 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\itoa.c"
 13809 ;; Parameters:    Size  Location     Type
 13810 ;;  buf             2   32[BANK0 ] PTR unsigned char 
 13811 ;;		 -> LCD_write_integer@convertedInt(6), 
 13812 ;;  val             2   34[BANK0 ] int 
 13813 ;;  base            2   36[BANK0 ] int 
 13814 ;; Auto vars:     Size  Location     Type
 13815 ;;  cp              2   38[BANK0 ] PTR unsigned char 
 13816 ;;		 -> LCD_write_integer@convertedInt(6), 
 13817 ;; Return value:  Size  Location     Type
 13818 ;;                  2   32[BANK0 ] PTR unsigned char 
 13819 ;; Registers used:
 13820 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13821 ;; Tracked objects:
 13822 ;;		On entry : 0/0
 13823 ;;		On exit  : 0/0
 13824 ;;		Unchanged: 0/0
 13825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13826 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13827 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13829 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13830 ;;Total ram usage:        8 bytes
 13831 ;; Hardware stack levels used:    1
 13832 ;; Hardware stack levels required when called:    5
 13833 ;; This function calls:
 13834 ;;		_utoa
 13835 ;; This function is called by:
 13836 ;;		_LCD_write_integer
 13837 ;; This function uses a non-reentrant model
 13838 ;;
 13839                           
 13840                           	psect	text33
 13841  015B24                     __ptext33:
 13842                           	opt stack 0
 13843  015B24                     _itoa:
 13844                           	opt stack 23
 13845                           
 13846                           ;incstack = 0
 13847  015B24  C080  F086         	movff	itoa@buf,itoa@cp
 13848  015B28  C081  F087         	movff	itoa@buf+1,itoa@cp+1
 13849  015B2C  0100               	movlb	0	; () banked
 13850  015B2E  AF83               	btfss	(itoa@val+1)& (0+255),7,b
 13851  015B30  D00F               	goto	l5328
 13852                           
 13853                           ; BSR set to: 0
 13854  015B32  C080  FFD9         	movff	itoa@buf,fsr2l
 13855  015B36  C081  FFDA         	movff	itoa@buf+1,fsr2h
 13856  015B3A  0E2D               	movlw	45
 13857  015B3C  6EDF               	movwf	indf2,c
 13858                           
 13859                           ; BSR set to: 0
 13860  015B3E  0100               	movlb	0	; () banked
 13861  015B40  4B80               	infsnz	itoa@buf& (0+255),f,b
 13862  015B42  2B81               	incf	(itoa@buf+1)& (0+255),f,b
 13863                           
 13864                           ; BSR set to: 0
 13865  015B44  0100               	movlb	0	; () banked
 13866  015B46  6D82               	negf	itoa@val& (0+255),b
 13867  015B48  1F83               	comf	(itoa@val+1)& (0+255),f,b
 13868  015B4A  B0D8               	btfsc	status,0,c
 13869  015B4C  2B83               	incf	(itoa@val+1)& (0+255),f,b
 13870  015B4E  D000               	goto	l5328
 13871  015B50                     l5328:
 13872                           
 13873                           ; BSR set to: 0
 13874  015B50  C080  F077         	movff	itoa@buf,utoa@buf
 13875  015B54  C081  F078         	movff	itoa@buf+1,utoa@buf+1
 13876  015B58  C082  F079         	movff	itoa@val,utoa@val
 13877  015B5C  C083  F07A         	movff	itoa@val+1,utoa@val+1
 13878  015B60  C084  F07B         	movff	itoa@base,utoa@base
 13879  015B64  C085  F07C         	movff	itoa@base+1,utoa@base+1
 13880  015B68  EC5C  F0A9         	call	_utoa	;wreg free
 13881  015B6C  0012               	return	
 13882                           
 13883                           ;	Return value of _itoa is never used
 13884  015B6E  0012               	return		;funcret
 13885  015B70                     __end_of_itoa:
 13886                           	opt stack 0
 13887                           tblptru	equ	0xFF8
 13888                           tblptrh	equ	0xFF7
 13889                           tblptrl	equ	0xFF6
 13890                           tablat	equ	0xFF5
 13891                           prodh	equ	0xFF4
 13892                           prodl	equ	0xFF3
 13893                           intcon	equ	0xFF2
 13894                           postinc0	equ	0xFEE
 13895                           wreg	equ	0xFE8
 13896                           indf1	equ	0xFE7
 13897                           plusw1	equ	0xFE3
 13898                           fsr1h	equ	0xFE2
 13899                           fsr1l	equ	0xFE1
 13900                           indf2	equ	0xFDF
 13901                           postinc2	equ	0xFDE
 13902                           plusw2	equ	0xFDB
 13903                           fsr2h	equ	0xFDA
 13904                           fsr2l	equ	0xFD9
 13905                           status	equ	0xFD8
 13906                           
 13907 ;; *************** function _utoa *****************
 13908 ;; Defined at:
 13909 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\itoa.c"
 13910 ;; Parameters:    Size  Location     Type
 13911 ;;  buf             2   23[BANK0 ] PTR unsigned char 
 13912 ;;		 -> LCD_write_integer@convertedInt(6), 
 13913 ;;  val             2   25[BANK0 ] unsigned int 
 13914 ;;  base            2   27[BANK0 ] int 
 13915 ;; Auto vars:     Size  Location     Type
 13916 ;;  v               2   29[BANK0 ] unsigned int 
 13917 ;;  c               1   31[BANK0 ] unsigned char 
 13918 ;; Return value:  Size  Location     Type
 13919 ;;                  2   23[BANK0 ] PTR unsigned char 
 13920 ;; Registers used:
 13921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13922 ;; Tracked objects:
 13923 ;;		On entry : 0/0
 13924 ;;		On exit  : 0/0
 13925 ;;		Unchanged: 0/0
 13926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13927 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13928 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13930 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13931 ;;Total ram usage:        9 bytes
 13932 ;; Hardware stack levels used:    1
 13933 ;; Hardware stack levels required when called:    4
 13934 ;; This function calls:
 13935 ;;		___lwdiv
 13936 ;;		___lwmod
 13937 ;; This function is called by:
 13938 ;;		_itoa
 13939 ;; This function uses a non-reentrant model
 13940 ;;
 13941                           
 13942                           	psect	text34
 13943  0152B8                     __ptext34:
 13944                           	opt stack 0
 13945  0152B8                     _utoa:
 13946                           	opt stack 23
 13947                           
 13948                           ;incstack = 0
 13949  0152B8  C079  F07D         	movff	utoa@val,utoa@v
 13950  0152BC  C07A  F07E         	movff	utoa@val+1,utoa@v+1
 13951  0152C0  D000               	goto	l4850
 13952  0152C2                     l4850:
 13953  0152C2  C07D  F070         	movff	utoa@v,___lwdiv@dividend
 13954  0152C6  C07E  F071         	movff	utoa@v+1,___lwdiv@dividend+1
 13955  0152CA  C07B  F072         	movff	utoa@base,___lwdiv@divisor
 13956  0152CE  C07C  F073         	movff	utoa@base+1,___lwdiv@divisor+1
 13957  0152D2  EC67  F0AB         	call	___lwdiv	;wreg free
 13958  0152D6  C070  F07D         	movff	?___lwdiv,utoa@v
 13959  0152DA  C071  F07E         	movff	?___lwdiv+1,utoa@v+1
 13960  0152DE  0100               	movlb	0	; () banked
 13961  0152E0  4B77               	infsnz	utoa@buf& (0+255),f,b
 13962  0152E2  2B78               	incf	(utoa@buf+1)& (0+255),f,b
 13963                           
 13964                           ; BSR set to: 0
 13965  0152E4  0100               	movlb	0	; () banked
 13966  0152E6  517D               	movf	utoa@v& (0+255),w,b
 13967  0152E8  0100               	movlb	0	; () banked
 13968  0152EA  117E               	iorwf	(utoa@v+1)& (0+255),w,b
 13969  0152EC  A4D8               	btfss	status,2,c
 13970  0152EE  D7E9               	goto	l4850
 13971                           
 13972                           ; BSR set to: 0
 13973                           
 13974                           ; BSR set to: 0
 13975  0152F0  C077  FFD9         	movff	utoa@buf,fsr2l
 13976  0152F4  C078  FFDA         	movff	utoa@buf+1,fsr2h
 13977  0152F8  0E00               	movlw	0
 13978  0152FA  6EDF               	movwf	indf2,c
 13979                           
 13980                           ; BSR set to: 0
 13981  0152FC  0100               	movlb	0	; () banked
 13982  0152FE  0777               	decf	utoa@buf& (0+255),f,b
 13983  015300  A0D8               	btfss	status,0,c
 13984  015302  0778               	decf	(utoa@buf+1)& (0+255),f,b
 13985  015304  D000               	goto	l4860
 13986  015306                     l4860:
 13987                           
 13988                           ; BSR set to: 0
 13989  015306  C079  F070         	movff	utoa@val,___lwmod@dividend
 13990  01530A  C07A  F071         	movff	utoa@val+1,___lwmod@dividend+1
 13991  01530E  C07B  F072         	movff	utoa@base,___lwmod@divisor
 13992  015312  C07C  F073         	movff	utoa@base+1,___lwmod@divisor+1
 13993  015316  ECE5  F0AB         	call	___lwmod	;wreg free
 13994  01531A  0100               	movlb	0	; () banked
 13995  01531C  5170               	movf	?___lwmod& (0+255),w,b
 13996  01531E  0100               	movlb	0	; () banked
 13997  015320  6F7F               	movwf	utoa@c& (0+255),b
 13998                           
 13999                           ; BSR set to: 0
 14000  015322  C079  F070         	movff	utoa@val,___lwdiv@dividend
 14001  015326  C07A  F071         	movff	utoa@val+1,___lwdiv@dividend+1
 14002  01532A  C07B  F072         	movff	utoa@base,___lwdiv@divisor
 14003  01532E  C07C  F073         	movff	utoa@base+1,___lwdiv@divisor+1
 14004  015332  EC67  F0AB         	call	___lwdiv	;wreg free
 14005  015336  C070  F079         	movff	?___lwdiv,utoa@val
 14006  01533A  C071  F07A         	movff	?___lwdiv+1,utoa@val+1
 14007  01533E  0E09               	movlw	9
 14008  015340  0100               	movlb	0	; () banked
 14009  015342  657F               	cpfsgt	utoa@c& (0+255),b
 14010  015344  D003               	goto	l1545
 14011                           
 14012                           ; BSR set to: 0
 14013  015346  0E07               	movlw	7
 14014  015348  0100               	movlb	0	; () banked
 14015  01534A  277F               	addwf	utoa@c& (0+255),f,b
 14016  01534C                     l1545:
 14017                           
 14018                           ; BSR set to: 0
 14019  01534C  0E30               	movlw	48
 14020  01534E  0100               	movlb	0	; () banked
 14021  015350  277F               	addwf	utoa@c& (0+255),f,b
 14022                           
 14023                           ; BSR set to: 0
 14024  015352  C077  FFD9         	movff	utoa@buf,fsr2l
 14025  015356  C078  FFDA         	movff	utoa@buf+1,fsr2h
 14026  01535A  C07F  FFDF         	movff	utoa@c,indf2
 14027                           
 14028                           ; BSR set to: 0
 14029  01535E  0100               	movlb	0	; () banked
 14030  015360  0777               	decf	utoa@buf& (0+255),f,b
 14031  015362  A0D8               	btfss	status,0,c
 14032  015364  0778               	decf	(utoa@buf+1)& (0+255),f,b
 14033                           
 14034                           ; BSR set to: 0
 14035  015366  0100               	movlb	0	; () banked
 14036  015368  5179               	movf	utoa@val& (0+255),w,b
 14037  01536A  0100               	movlb	0	; () banked
 14038  01536C  117A               	iorwf	(utoa@val+1)& (0+255),w,b
 14039  01536E  A4D8               	btfss	status,2,c
 14040  015370  D7CA               	goto	l4860
 14041                           
 14042                           ; BSR set to: 0
 14043                           ;	Return value of _utoa is never used
 14044                           
 14045                           ; BSR set to: 0
 14046  015372  0100               	movlb	0	; () banked
 14047  015374  4B77               	infsnz	utoa@buf& (0+255),f,b
 14048  015376  2B78               	incf	(utoa@buf+1)& (0+255),f,b
 14049  015378  0012               	return	
 14050                           
 14051                           ; BSR set to: 0
 14052                           
 14053                           ; BSR set to: 0
 14054  01537A  0012               	return		;funcret
 14055  01537C                     __end_of_utoa:
 14056                           	opt stack 0
 14057                           tblptru	equ	0xFF8
 14058                           tblptrh	equ	0xFF7
 14059                           tblptrl	equ	0xFF6
 14060                           tablat	equ	0xFF5
 14061                           prodh	equ	0xFF4
 14062                           prodl	equ	0xFF3
 14063                           intcon	equ	0xFF2
 14064                           postinc0	equ	0xFEE
 14065                           wreg	equ	0xFE8
 14066                           indf1	equ	0xFE7
 14067                           plusw1	equ	0xFE3
 14068                           fsr1h	equ	0xFE2
 14069                           fsr1l	equ	0xFE1
 14070                           indf2	equ	0xFDF
 14071                           postinc2	equ	0xFDE
 14072                           plusw2	equ	0xFDB
 14073                           fsr2h	equ	0xFDA
 14074                           fsr2l	equ	0xFD9
 14075                           status	equ	0xFD8
 14076                           
 14077 ;; *************** function ___lwmod *****************
 14078 ;; Defined at:
 14079 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
 14080 ;; Parameters:    Size  Location     Type
 14081 ;;  dividend        2   16[BANK0 ] unsigned int 
 14082 ;;  divisor         2   18[BANK0 ] unsigned int 
 14083 ;; Auto vars:     Size  Location     Type
 14084 ;;  counter         1   20[BANK0 ] unsigned char 
 14085 ;; Return value:  Size  Location     Type
 14086 ;;                  2   16[BANK0 ] unsigned int 
 14087 ;; Registers used:
 14088 ;;		wreg, status,2, status,0
 14089 ;; Tracked objects:
 14090 ;;		On entry : 0/0
 14091 ;;		On exit  : 0/0
 14092 ;;		Unchanged: 0/0
 14093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14094 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14095 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14097 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14098 ;;Total ram usage:        5 bytes
 14099 ;; Hardware stack levels used:    1
 14100 ;; Hardware stack levels required when called:    3
 14101 ;; This function calls:
 14102 ;;		Nothing
 14103 ;; This function is called by:
 14104 ;;		_utoa
 14105 ;; This function uses a non-reentrant model
 14106 ;;
 14107                           
 14108                           	psect	text35
 14109  0157CA                     __ptext35:
 14110                           	opt stack 0
 14111  0157CA                     ___lwmod:
 14112                           	opt stack 23
 14113                           
 14114                           ; BSR set to: 0
 14115                           ;incstack = 0
 14116  0157CA  0100               	movlb	0	; () banked
 14117  0157CC  5172               	movf	___lwmod@divisor& (0+255),w,b
 14118  0157CE  0100               	movlb	0	; () banked
 14119  0157D0  1173               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 14120  0157D2  B4D8               	btfsc	status,2,c
 14121  0157D4  D02B               	goto	l1649
 14122                           
 14123                           ; BSR set to: 0
 14124  0157D6  0E01               	movlw	1
 14125  0157D8  0100               	movlb	0	; () banked
 14126  0157DA  6F74               	movwf	___lwmod@counter& (0+255),b
 14127  0157DC  D007               	goto	l4622
 14128  0157DE                     l4620:
 14129                           
 14130                           ; BSR set to: 0
 14131  0157DE  0100               	movlb	0	; () banked
 14132  0157E0  90D8               	bcf	status,0,c
 14133  0157E2  3772               	rlcf	___lwmod@divisor& (0+255),f,b
 14134  0157E4  3773               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 14135  0157E6  0100               	movlb	0	; () banked
 14136  0157E8  2B74               	incf	___lwmod@counter& (0+255),f,b
 14137  0157EA  D000               	goto	l4622
 14138  0157EC                     l4622:
 14139                           
 14140                           ; BSR set to: 0
 14141  0157EC  0100               	movlb	0	; () banked
 14142  0157EE  BF73               	btfsc	(___lwmod@divisor+1)& (0+255),7,b
 14143  0157F0  D002               	goto	l4624
 14144  0157F2  D7F5               	goto	l4620
 14145                           
 14146                           ; BSR set to: 0
 14147  0157F4  D000               	goto	l4624
 14148  0157F6                     l4624:
 14149                           
 14150                           ; BSR set to: 0
 14151  0157F6  0100               	movlb	0	; () banked
 14152  0157F8  5172               	movf	___lwmod@divisor& (0+255),w,b
 14153  0157FA  0100               	movlb	0	; () banked
 14154  0157FC  5D70               	subwf	___lwmod@dividend& (0+255),w,b
 14155  0157FE  0100               	movlb	0	; () banked
 14156  015800  5173               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14157  015802  0100               	movlb	0	; () banked
 14158  015804  5971               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 14159  015806  A0D8               	btfss	status,0,c
 14160  015808  D009               	goto	l4628
 14161                           
 14162                           ; BSR set to: 0
 14163  01580A  0100               	movlb	0	; () banked
 14164  01580C  5172               	movf	___lwmod@divisor& (0+255),w,b
 14165  01580E  0100               	movlb	0	; () banked
 14166  015810  5F70               	subwf	___lwmod@dividend& (0+255),f,b
 14167  015812  0100               	movlb	0	; () banked
 14168  015814  5173               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14169  015816  0100               	movlb	0	; () banked
 14170  015818  5B71               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 14171  01581A  D000               	goto	l4628
 14172  01581C                     l4628:
 14173                           
 14174                           ; BSR set to: 0
 14175  01581C  0100               	movlb	0	; () banked
 14176  01581E  90D8               	bcf	status,0,c
 14177  015820  3373               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 14178  015822  3372               	rrcf	___lwmod@divisor& (0+255),f,b
 14179                           
 14180                           ; BSR set to: 0
 14181  015824  0100               	movlb	0	; () banked
 14182  015826  2F74               	decfsz	___lwmod@counter& (0+255),f,b
 14183  015828  D7E6               	goto	l4624
 14184  01582A  D000               	goto	l1649
 14185  01582C                     l1649:
 14186                           
 14187                           ; BSR set to: 0
 14188  01582C  C070  F070         	movff	___lwmod@dividend,?___lwmod
 14189  015830  C071  F071         	movff	___lwmod@dividend+1,?___lwmod+1
 14190                           
 14191                           ; BSR set to: 0
 14192  015834  0012               	return		;funcret
 14193  015836                     __end_of___lwmod:
 14194                           	opt stack 0
 14195                           tblptru	equ	0xFF8
 14196                           tblptrh	equ	0xFF7
 14197                           tblptrl	equ	0xFF6
 14198                           tablat	equ	0xFF5
 14199                           prodh	equ	0xFF4
 14200                           prodl	equ	0xFF3
 14201                           intcon	equ	0xFF2
 14202                           postinc0	equ	0xFEE
 14203                           wreg	equ	0xFE8
 14204                           indf1	equ	0xFE7
 14205                           plusw1	equ	0xFE3
 14206                           fsr1h	equ	0xFE2
 14207                           fsr1l	equ	0xFE1
 14208                           indf2	equ	0xFDF
 14209                           postinc2	equ	0xFDE
 14210                           plusw2	equ	0xFDB
 14211                           fsr2h	equ	0xFDA
 14212                           fsr2l	equ	0xFD9
 14213                           status	equ	0xFD8
 14214                           
 14215 ;; *************** function ___lwdiv *****************
 14216 ;; Defined at:
 14217 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
 14218 ;; Parameters:    Size  Location     Type
 14219 ;;  dividend        2   16[BANK0 ] unsigned int 
 14220 ;;  divisor         2   18[BANK0 ] unsigned int 
 14221 ;; Auto vars:     Size  Location     Type
 14222 ;;  quotient        2   20[BANK0 ] unsigned int 
 14223 ;;  counter         1   22[BANK0 ] unsigned char 
 14224 ;; Return value:  Size  Location     Type
 14225 ;;                  2   16[BANK0 ] unsigned int 
 14226 ;; Registers used:
 14227 ;;		wreg, status,2, status,0
 14228 ;; Tracked objects:
 14229 ;;		On entry : 0/0
 14230 ;;		On exit  : 0/0
 14231 ;;		Unchanged: 0/0
 14232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14233 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14234 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14236 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14237 ;;Total ram usage:        7 bytes
 14238 ;; Hardware stack levels used:    1
 14239 ;; Hardware stack levels required when called:    3
 14240 ;; This function calls:
 14241 ;;		Nothing
 14242 ;; This function is called by:
 14243 ;;		_utoa
 14244 ;; This function uses a non-reentrant model
 14245 ;;
 14246                           
 14247                           	psect	text36
 14248  0156CE                     __ptext36:
 14249                           	opt stack 0
 14250  0156CE                     ___lwdiv:
 14251                           	opt stack 23
 14252                           
 14253                           ; BSR set to: 0
 14254                           ;incstack = 0
 14255  0156CE  0E00               	movlw	0
 14256  0156D0  0100               	movlb	0	; () banked
 14257  0156D2  6F75               	movwf	(___lwdiv@quotient+1)& (0+255),b
 14258  0156D4  0E00               	movlw	0
 14259  0156D6  6F74               	movwf	___lwdiv@quotient& (0+255),b
 14260                           
 14261                           ; BSR set to: 0
 14262  0156D8  0100               	movlb	0	; () banked
 14263  0156DA  5172               	movf	___lwdiv@divisor& (0+255),w,b
 14264  0156DC  0100               	movlb	0	; () banked
 14265  0156DE  1173               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 14266  0156E0  B4D8               	btfsc	status,2,c
 14267  0156E2  D031               	goto	l1639
 14268                           
 14269                           ; BSR set to: 0
 14270  0156E4  0E01               	movlw	1
 14271  0156E6  0100               	movlb	0	; () banked
 14272  0156E8  6F76               	movwf	___lwdiv@counter& (0+255),b
 14273  0156EA  D007               	goto	l4602
 14274  0156EC                     l4600:
 14275                           
 14276                           ; BSR set to: 0
 14277  0156EC  0100               	movlb	0	; () banked
 14278  0156EE  90D8               	bcf	status,0,c
 14279  0156F0  3772               	rlcf	___lwdiv@divisor& (0+255),f,b
 14280  0156F2  3773               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 14281  0156F4  0100               	movlb	0	; () banked
 14282  0156F6  2B76               	incf	___lwdiv@counter& (0+255),f,b
 14283  0156F8  D000               	goto	l4602
 14284  0156FA                     l4602:
 14285                           
 14286                           ; BSR set to: 0
 14287  0156FA  0100               	movlb	0	; () banked
 14288  0156FC  BF73               	btfsc	(___lwdiv@divisor+1)& (0+255),7,b
 14289  0156FE  D002               	goto	l4604
 14290  015700  D7F5               	goto	l4600
 14291                           
 14292                           ; BSR set to: 0
 14293  015702  D000               	goto	l4604
 14294  015704                     l4604:
 14295                           
 14296                           ; BSR set to: 0
 14297  015704  0100               	movlb	0	; () banked
 14298  015706  90D8               	bcf	status,0,c
 14299  015708  3774               	rlcf	___lwdiv@quotient& (0+255),f,b
 14300  01570A  3775               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 14301                           
 14302                           ; BSR set to: 0
 14303  01570C  0100               	movlb	0	; () banked
 14304  01570E  5172               	movf	___lwdiv@divisor& (0+255),w,b
 14305  015710  0100               	movlb	0	; () banked
 14306  015712  5D70               	subwf	___lwdiv@dividend& (0+255),w,b
 14307  015714  0100               	movlb	0	; () banked
 14308  015716  5173               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 14309  015718  0100               	movlb	0	; () banked
 14310  01571A  5971               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 14311  01571C  A0D8               	btfss	status,0,c
 14312  01571E  D00B               	goto	l4612
 14313                           
 14314                           ; BSR set to: 0
 14315  015720  0100               	movlb	0	; () banked
 14316  015722  5172               	movf	___lwdiv@divisor& (0+255),w,b
 14317  015724  0100               	movlb	0	; () banked
 14318  015726  5F70               	subwf	___lwdiv@dividend& (0+255),f,b
 14319  015728  0100               	movlb	0	; () banked
 14320  01572A  5173               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 14321  01572C  0100               	movlb	0	; () banked
 14322  01572E  5B71               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 14323                           
 14324                           ; BSR set to: 0
 14325  015730  0100               	movlb	0	; () banked
 14326  015732  8174               	bsf	___lwdiv@quotient& (0+255),0,b
 14327  015734  D000               	goto	l4612
 14328  015736                     l4612:
 14329                           
 14330                           ; BSR set to: 0
 14331  015736  0100               	movlb	0	; () banked
 14332  015738  90D8               	bcf	status,0,c
 14333  01573A  3373               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 14334  01573C  3372               	rrcf	___lwdiv@divisor& (0+255),f,b
 14335                           
 14336                           ; BSR set to: 0
 14337  01573E  0100               	movlb	0	; () banked
 14338  015740  2F76               	decfsz	___lwdiv@counter& (0+255),f,b
 14339  015742  D7E0               	goto	l4604
 14340  015744  D000               	goto	l1639
 14341  015746                     l1639:
 14342                           
 14343                           ; BSR set to: 0
 14344  015746  C074  F070         	movff	___lwdiv@quotient,?___lwdiv
 14345  01574A  C075  F071         	movff	___lwdiv@quotient+1,?___lwdiv+1
 14346                           
 14347                           ; BSR set to: 0
 14348  01574E  0012               	return		;funcret
 14349  015750                     __end_of___lwdiv:
 14350                           	opt stack 0
 14351                           tblptru	equ	0xFF8
 14352                           tblptrh	equ	0xFF7
 14353                           tblptrl	equ	0xFF6
 14354                           tablat	equ	0xFF5
 14355                           prodh	equ	0xFF4
 14356                           prodl	equ	0xFF3
 14357                           intcon	equ	0xFF2
 14358                           postinc0	equ	0xFEE
 14359                           wreg	equ	0xFE8
 14360                           indf1	equ	0xFE7
 14361                           plusw1	equ	0xFE3
 14362                           fsr1h	equ	0xFE2
 14363                           fsr1l	equ	0xFE1
 14364                           indf2	equ	0xFDF
 14365                           postinc2	equ	0xFDE
 14366                           plusw2	equ	0xFDB
 14367                           fsr2h	equ	0xFDA
 14368                           fsr2l	equ	0xFD9
 14369                           status	equ	0xFD8
 14370                           
 14371 ;; *************** function _LCD_write_string *****************
 14372 ;; Defined at:
 14373 ;;		line 194 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14374 ;; Parameters:    Size  Location     Type
 14375 ;;  buffer          2   33[BANK0 ] PTR unsigned char 
 14376 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
 14377 ;; Auto vars:     Size  Location     Type
 14378 ;;		None
 14379 ;; Return value:  Size  Location     Type
 14380 ;;		None               void
 14381 ;; Registers used:
 14382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14383 ;; Tracked objects:
 14384 ;;		On entry : 0/0
 14385 ;;		On exit  : 0/0
 14386 ;;		Unchanged: 0/0
 14387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14388 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14391 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14392 ;;Total ram usage:        2 bytes
 14393 ;; Hardware stack levels used:    1
 14394 ;; Hardware stack levels required when called:    8
 14395 ;; This function calls:
 14396 ;;		_LCD_write_char
 14397 ;; This function is called by:
 14398 ;;		_LCD_write_integer
 14399 ;;		_LCD_Handler
 14400 ;; This function uses a non-reentrant model
 14401 ;;
 14402                           
 14403                           	psect	text37
 14404  015E40                     __ptext37:
 14405                           	opt stack 0
 14406  015E40                     _LCD_write_string:
 14407                           	opt stack 21
 14408                           
 14409                           ;src\LCD_44780.c: 197: while(*buffer){
 14410                           
 14411                           ; BSR set to: 0
 14412                           ;incstack = 0
 14413  015E40  D00B               	goto	l7598
 14414  015E42                     l7594:
 14415                           
 14416                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 14417  015E42  C081  FFD9         	movff	LCD_write_string@buffer,fsr2l
 14418  015E46  C082  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 14419  015E4A  50DF               	movf	indf2,w,c
 14420  015E4C  EC1C  F0AB         	call	_LCD_write_char
 14421                           
 14422                           ;src\LCD_44780.c: 202: buffer++;
 14423  015E50  0100               	movlb	0	; () banked
 14424  015E52  4B81               	infsnz	LCD_write_string@buffer& (0+255),f,b
 14425  015E54  2B82               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 14426  015E56  D000               	goto	l7598
 14427  015E58                     l7598:
 14428  015E58  C081  FFD9         	movff	LCD_write_string@buffer,fsr2l
 14429  015E5C  C082  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 14430  015E60  50DF               	movf	indf2,w,c
 14431  015E62  A4D8               	btfss	status,2,c
 14432  015E64  D7EE               	goto	l7594
 14433  015E66  0012               	return		;funcret
 14434  015E68                     __end_of_LCD_write_string:
 14435                           	opt stack 0
 14436                           tblptru	equ	0xFF8
 14437                           tblptrh	equ	0xFF7
 14438                           tblptrl	equ	0xFF6
 14439                           tablat	equ	0xFF5
 14440                           prodh	equ	0xFF4
 14441                           prodl	equ	0xFF3
 14442                           intcon	equ	0xFF2
 14443                           postinc0	equ	0xFEE
 14444                           wreg	equ	0xFE8
 14445                           indf1	equ	0xFE7
 14446                           plusw1	equ	0xFE3
 14447                           fsr1h	equ	0xFE2
 14448                           fsr1l	equ	0xFE1
 14449                           indf2	equ	0xFDF
 14450                           postinc2	equ	0xFDE
 14451                           plusw2	equ	0xFDB
 14452                           fsr2h	equ	0xFDA
 14453                           fsr2l	equ	0xFD9
 14454                           status	equ	0xFD8
 14455                           
 14456 ;; *************** function _LCD_goto_xy *****************
 14457 ;; Defined at:
 14458 ;;		line 136 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14459 ;; Parameters:    Size  Location     Type
 14460 ;;  x               1    wreg     unsigned char 
 14461 ;;  y               1   31[BANK0 ] unsigned char 
 14462 ;; Auto vars:     Size  Location     Type
 14463 ;;  x               1   32[BANK0 ] unsigned char 
 14464 ;; Return value:  Size  Location     Type
 14465 ;;		None               void
 14466 ;; Registers used:
 14467 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14468 ;; Tracked objects:
 14469 ;;		On entry : 0/0
 14470 ;;		On exit  : 0/0
 14471 ;;		Unchanged: 0/0
 14472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14473 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14474 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14476 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14477 ;;Total ram usage:        2 bytes
 14478 ;; Hardware stack levels used:    1
 14479 ;; Hardware stack levels required when called:    8
 14480 ;; This function calls:
 14481 ;;		_LCD_goto_line
 14482 ;;		_LCD_shift_cursor
 14483 ;; This function is called by:
 14484 ;;		_LCD_Handler
 14485 ;; This function uses a non-reentrant model
 14486 ;;
 14487                           
 14488                           	psect	text38
 14489  015ED0                     __ptext38:
 14490                           	opt stack 0
 14491  015ED0                     _LCD_goto_xy:
 14492                           	opt stack 21
 14493                           
 14494                           ;incstack = 0
 14495                           ;LCD_goto_xy@x stored from wreg
 14496  015ED0  0100               	movlb	0	; () banked
 14497  015ED2  6F80               	movwf	LCD_goto_xy@x& (0+255),b
 14498                           
 14499                           ; BSR set to: 0
 14500                           ;src\LCD_44780.c: 138: LCD_goto_line (y);
 14501  015ED4  0100               	movlb	0	; () banked
 14502  015ED6  517F               	movf	LCD_goto_xy@y& (0+255),w,b
 14503  015ED8  EC1A  F0A8         	call	_LCD_goto_line
 14504                           
 14505                           ;src\LCD_44780.c: 139: LCD_shift_cursor (1, x-1);
 14506  015EDC  0100               	movlb	0	; () banked
 14507  015EDE  0580               	decf	LCD_goto_xy@x& (0+255),w,b
 14508  015EE0  0100               	movlb	0	; () banked
 14509  015EE2  6F7C               	movwf	LCD_shift_cursor@number_of_shift& (0+255),b
 14510  015EE4  0E01               	movlw	1
 14511  015EE6  EC45  F0AD         	call	_LCD_shift_cursor
 14512  015EEA  0012               	return		;funcret
 14513  015EEC                     __end_of_LCD_goto_xy:
 14514                           	opt stack 0
 14515                           tblptru	equ	0xFF8
 14516                           tblptrh	equ	0xFF7
 14517                           tblptrl	equ	0xFF6
 14518                           tablat	equ	0xFF5
 14519                           prodh	equ	0xFF4
 14520                           prodl	equ	0xFF3
 14521                           intcon	equ	0xFF2
 14522                           postinc0	equ	0xFEE
 14523                           wreg	equ	0xFE8
 14524                           indf1	equ	0xFE7
 14525                           plusw1	equ	0xFE3
 14526                           fsr1h	equ	0xFE2
 14527                           fsr1l	equ	0xFE1
 14528                           indf2	equ	0xFDF
 14529                           postinc2	equ	0xFDE
 14530                           plusw2	equ	0xFDB
 14531                           fsr2h	equ	0xFDA
 14532                           fsr2l	equ	0xFD9
 14533                           status	equ	0xFD8
 14534                           
 14535 ;; *************** function _LCD_shift_cursor *****************
 14536 ;; Defined at:
 14537 ;;		line 98 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14538 ;; Parameters:    Size  Location     Type
 14539 ;;  shift           1    wreg     unsigned char 
 14540 ;;  number_of_sh    1   28[BANK0 ] unsigned char 
 14541 ;; Auto vars:     Size  Location     Type
 14542 ;;  shift           1   29[BANK0 ] unsigned char 
 14543 ;;  i               1   30[BANK0 ] unsigned char 
 14544 ;; Return value:  Size  Location     Type
 14545 ;;		None               void
 14546 ;; Registers used:
 14547 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14548 ;; Tracked objects:
 14549 ;;		On entry : 0/0
 14550 ;;		On exit  : 0/0
 14551 ;;		Unchanged: 0/0
 14552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14553 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14554 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14556 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14557 ;;Total ram usage:        3 bytes
 14558 ;; Hardware stack levels used:    1
 14559 ;; Hardware stack levels required when called:    7
 14560 ;; This function calls:
 14561 ;;		_LCD_send_command
 14562 ;; This function is called by:
 14563 ;;		_LCD_goto_xy
 14564 ;; This function uses a non-reentrant model
 14565 ;;
 14566                           
 14567                           	psect	text39
 14568  015A8A                     __ptext39:
 14569                           	opt stack 0
 14570  015A8A                     _LCD_shift_cursor:
 14571                           	opt stack 21
 14572                           
 14573                           ;incstack = 0
 14574                           ;LCD_shift_cursor@shift stored from wreg
 14575  015A8A  0100               	movlb	0	; () banked
 14576  015A8C  6F7D               	movwf	LCD_shift_cursor@shift& (0+255),b
 14577                           
 14578                           ; BSR set to: 0
 14579                           ;src\LCD_44780.c: 100: unsigned char i;
 14580                           ;src\LCD_44780.c: 102: for (i=0; i < number_of_shift; i++) {
 14581  015A8E  0E00               	movlw	0
 14582  015A90  0100               	movlb	0	; () banked
 14583  015A92  6F7E               	movwf	LCD_shift_cursor@i& (0+255),b
 14584  015A94  D01A               	goto	l7578
 14585  015A96                     l7574:
 14586                           
 14587                           ; BSR set to: 0
 14588                           ;src\LCD_44780.c: 103: LCD_send_command (0,0,0,1);
 14589  015A96  0E00               	movlw	0
 14590  015A98  0100               	movlb	0	; () banked
 14591  015A9A  6F78               	movwf	LCD_send_command@D2& (0+255),b
 14592  015A9C  0E00               	movlw	0
 14593  015A9E  0100               	movlb	0	; () banked
 14594  015AA0  6F79               	movwf	LCD_send_command@D1& (0+255),b
 14595  015AA2  0E01               	movlw	1
 14596  015AA4  0100               	movlb	0	; () banked
 14597  015AA6  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 14598  015AA8  0E00               	movlw	0
 14599  015AAA  EC18  F0AE         	call	_LCD_send_command
 14600                           
 14601                           ;src\LCD_44780.c: 104: LCD_send_command (0,shift,0,0);
 14602  015AAE  C07D  F078         	movff	LCD_shift_cursor@shift,LCD_send_command@D2
 14603  015AB2  0E00               	movlw	0
 14604  015AB4  0100               	movlb	0	; () banked
 14605  015AB6  6F79               	movwf	LCD_send_command@D1& (0+255),b
 14606  015AB8  0E00               	movlw	0
 14607  015ABA  0100               	movlb	0	; () banked
 14608  015ABC  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 14609  015ABE  0E00               	movlw	0
 14610  015AC0  EC18  F0AE         	call	_LCD_send_command
 14611  015AC4  0100               	movlb	0	; () banked
 14612  015AC6  2B7E               	incf	LCD_shift_cursor@i& (0+255),f,b
 14613  015AC8  D000               	goto	l7578
 14614  015ACA                     l7578:
 14615                           
 14616                           ; BSR set to: 0
 14617  015ACA  0100               	movlb	0	; () banked
 14618  015ACC  517C               	movf	LCD_shift_cursor@number_of_shift& (0+255),w,b
 14619  015ACE  0100               	movlb	0	; () banked
 14620  015AD0  5D7E               	subwf	LCD_shift_cursor@i& (0+255),w,b
 14621  015AD2  A0D8               	btfss	status,0,c
 14622  015AD4  D7E0               	goto	l7574
 14623                           
 14624                           ; BSR set to: 0
 14625                           
 14626                           ; BSR set to: 0
 14627  015AD6  0012               	return		;funcret
 14628  015AD8                     __end_of_LCD_shift_cursor:
 14629                           	opt stack 0
 14630                           tblptru	equ	0xFF8
 14631                           tblptrh	equ	0xFF7
 14632                           tblptrl	equ	0xFF6
 14633                           tablat	equ	0xFF5
 14634                           prodh	equ	0xFF4
 14635                           prodl	equ	0xFF3
 14636                           intcon	equ	0xFF2
 14637                           postinc0	equ	0xFEE
 14638                           wreg	equ	0xFE8
 14639                           indf1	equ	0xFE7
 14640                           plusw1	equ	0xFE3
 14641                           fsr1h	equ	0xFE2
 14642                           fsr1l	equ	0xFE1
 14643                           indf2	equ	0xFDF
 14644                           postinc2	equ	0xFDE
 14645                           plusw2	equ	0xFDB
 14646                           fsr2h	equ	0xFDA
 14647                           fsr2l	equ	0xFD9
 14648                           status	equ	0xFD8
 14649                           
 14650 ;; *************** function _LCD_Gap *****************
 14651 ;; Defined at:
 14652 ;;		line 506 in file "RemoteCan.c"
 14653 ;; Parameters:    Size  Location     Type
 14654 ;;		None
 14655 ;; Auto vars:     Size  Location     Type
 14656 ;;		None
 14657 ;; Return value:  Size  Location     Type
 14658 ;;		None               void
 14659 ;; Registers used:
 14660 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14661 ;; Tracked objects:
 14662 ;;		On entry : 0/0
 14663 ;;		On exit  : 0/0
 14664 ;;		Unchanged: 0/0
 14665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14670 ;;Total ram usage:        0 bytes
 14671 ;; Hardware stack levels used:    1
 14672 ;; Hardware stack levels required when called:    9
 14673 ;; This function calls:
 14674 ;;		_LCD_clear
 14675 ;;		_LCD_goto_line
 14676 ;;		_LCD_initialize
 14677 ;;		_LCD_write_message
 14678 ;; This function is called by:
 14679 ;;		_main
 14680 ;; This function uses a non-reentrant model
 14681 ;;
 14682                           
 14683                           	psect	text40
 14684  0158FE                     __ptext40:
 14685                           	opt stack 0
 14686  0158FE                     _LCD_Gap:
 14687                           	opt stack 21
 14688                           
 14689                           ;RemoteCan.c: 507: LCD_initialize(16);
 14690                           
 14691                           ; BSR set to: 0
 14692                           ;incstack = 0
 14693  0158FE  0E10               	movlw	16
 14694  015900  EC0D  F0A5         	call	_LCD_initialize
 14695                           
 14696                           ;RemoteCan.c: 508: LCD_clear();
 14697  015904  ECF0  F0AE         	call	_LCD_clear	;wreg free
 14698                           
 14699                           ;RemoteCan.c: 509: LCD_goto_line(1);
 14700  015908  0E01               	movlw	1
 14701  01590A  EC1A  F0A8         	call	_LCD_goto_line
 14702                           
 14703                           ;RemoteCan.c: 510: LCD_write_message("= PARKING MESSAGES =");
 14704  01590E  0E40               	movlw	low STR_16
 14705  015910  0100               	movlb	0	; () banked
 14706  015912  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 14707  015914  0EFF               	movlw	high STR_16
 14708  015916  0100               	movlb	0	; () banked
 14709  015918  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 14710  01591A  EC89  F0AE         	call	_LCD_write_message	;wreg free
 14711                           
 14712                           ;RemoteCan.c: 511: LCD_goto_line(2);
 14713  01591E  0E02               	movlw	2
 14714  015920  EC1A  F0A8         	call	_LCD_goto_line
 14715                           
 14716                           ;RemoteCan.c: 512: LCD_write_message(" Parking space FOUND");
 14717  015924  0E94               	movlw	low STR_17
 14718  015926  0100               	movlb	0	; () banked
 14719  015928  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 14720  01592A  0EFF               	movlw	high STR_17
 14721  01592C  0100               	movlb	0	; () banked
 14722  01592E  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 14723  015930  EC89  F0AE         	call	_LCD_write_message	;wreg free
 14724                           
 14725                           ;RemoteCan.c: 513: LCD_goto_line(3);
 14726  015934  0E03               	movlw	3
 14727  015936  EC1A  F0A8         	call	_LCD_goto_line
 14728                           
 14729                           ;RemoteCan.c: 514: LCD_write_message("->  KEEP MOVING   <-");
 14730  01593A  0E01               	movlw	low STR_18
 14731  01593C  0100               	movlb	0	; () banked
 14732  01593E  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 14733  015940  0EFF               	movlw	high STR_18
 14734  015942  0100               	movlb	0	; () banked
 14735  015944  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 14736  015946  EC89  F0AE         	call	_LCD_write_message	;wreg free
 14737                           
 14738                           ;RemoteCan.c: 515: LCD_goto_line(4);
 14739  01594A  0E04               	movlw	4
 14740  01594C  EC1A  F0A8         	call	_LCD_goto_line
 14741                           
 14742                           ;RemoteCan.c: 516: LCD_write_message(" until next message ");
 14743  015950  0EAD               	movlw	low STR_19
 14744  015952  0100               	movlb	0	; () banked
 14745  015954  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 14746  015956  0EFE               	movlw	high STR_19
 14747  015958  0100               	movlb	0	; () banked
 14748  01595A  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 14749  01595C  EC89  F0AE         	call	_LCD_write_message	;wreg free
 14750  015960  0012               	return		;funcret
 14751  015962                     __end_of_LCD_Gap:
 14752                           	opt stack 0
 14753                           tblptru	equ	0xFF8
 14754                           tblptrh	equ	0xFF7
 14755                           tblptrl	equ	0xFF6
 14756                           tablat	equ	0xFF5
 14757                           prodh	equ	0xFF4
 14758                           prodl	equ	0xFF3
 14759                           intcon	equ	0xFF2
 14760                           postinc0	equ	0xFEE
 14761                           wreg	equ	0xFE8
 14762                           indf1	equ	0xFE7
 14763                           plusw1	equ	0xFE3
 14764                           fsr1h	equ	0xFE2
 14765                           fsr1l	equ	0xFE1
 14766                           indf2	equ	0xFDF
 14767                           postinc2	equ	0xFDE
 14768                           plusw2	equ	0xFDB
 14769                           fsr2h	equ	0xFDA
 14770                           fsr2l	equ	0xFD9
 14771                           status	equ	0xFD8
 14772                           
 14773 ;; *************** function _LCD_Error *****************
 14774 ;; Defined at:
 14775 ;;		line 558 in file "RemoteCan.c"
 14776 ;; Parameters:    Size  Location     Type
 14777 ;;		None
 14778 ;; Auto vars:     Size  Location     Type
 14779 ;;		None
 14780 ;; Return value:  Size  Location     Type
 14781 ;;		None               void
 14782 ;; Registers used:
 14783 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14784 ;; Tracked objects:
 14785 ;;		On entry : 0/0
 14786 ;;		On exit  : 0/0
 14787 ;;		Unchanged: 0/0
 14788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14793 ;;Total ram usage:        0 bytes
 14794 ;; Hardware stack levels used:    1
 14795 ;; Hardware stack levels required when called:    9
 14796 ;; This function calls:
 14797 ;;		_LCD_clear
 14798 ;;		_LCD_goto_line
 14799 ;;		_LCD_initialize
 14800 ;;		_LCD_write_message
 14801 ;; This function is called by:
 14802 ;;		_main
 14803 ;; This function uses a non-reentrant model
 14804 ;;
 14805                           
 14806                           	psect	text41
 14807  015962                     __ptext41:
 14808                           	opt stack 0
 14809  015962                     _LCD_Error:
 14810                           	opt stack 21
 14811                           
 14812                           ;RemoteCan.c: 559: LCD_initialize(16);
 14813                           
 14814                           ;incstack = 0
 14815  015962  0E10               	movlw	16
 14816  015964  EC0D  F0A5         	call	_LCD_initialize
 14817                           
 14818                           ;RemoteCan.c: 560: LCD_clear();
 14819  015968  ECF0  F0AE         	call	_LCD_clear	;wreg free
 14820                           
 14821                           ;RemoteCan.c: 561: LCD_goto_line(1);
 14822  01596C  0E01               	movlw	1
 14823  01596E  EC1A  F0A8         	call	_LCD_goto_line
 14824                           
 14825                           ;RemoteCan.c: 562: LCD_write_message("= PARKING MESSAGES =");
 14826  015972  0E40               	movlw	low STR_16
 14827  015974  0100               	movlb	0	; () banked
 14828  015976  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 14829  015978  0EFF               	movlw	high STR_16
 14830  01597A  0100               	movlb	0	; () banked
 14831  01597C  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 14832  01597E  EC89  F0AE         	call	_LCD_write_message	;wreg free
 14833                           
 14834                           ;RemoteCan.c: 563: LCD_goto_line(2);
 14835  015982  0E02               	movlw	2
 14836  015984  EC1A  F0A8         	call	_LCD_goto_line
 14837                           
 14838                           ;RemoteCan.c: 564: LCD_write_message(" Parking procedures ");
 14839  015988  0ED7               	movlw	low STR_29
 14840  01598A  0100               	movlb	0	; () banked
 14841  01598C  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 14842  01598E  0EFE               	movlw	high STR_29
 14843  015990  0100               	movlb	0	; () banked
 14844  015992  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 14845  015994  EC89  F0AE         	call	_LCD_write_message	;wreg free
 14846                           
 14847                           ;RemoteCan.c: 565: LCD_goto_line(3);
 14848  015998  0E03               	movlw	3
 14849  01599A  EC1A  F0A8         	call	_LCD_goto_line
 14850                           
 14851                           ;RemoteCan.c: 566: LCD_write_message("       FAILED!      ");
 14852  01599E  0E2F               	movlw	low STR_34
 14853  0159A0  0100               	movlb	0	; () banked
 14854  0159A2  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 14855  0159A4  0EFE               	movlw	high STR_34
 14856  0159A6  0100               	movlb	0	; () banked
 14857  0159A8  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 14858  0159AA  EC89  F0AE         	call	_LCD_write_message	;wreg free
 14859                           
 14860                           ;RemoteCan.c: 567: LCD_goto_line(4);
 14861  0159AE  0E04               	movlw	4
 14862  0159B0  EC1A  F0A8         	call	_LCD_goto_line
 14863                           
 14864                           ;RemoteCan.c: 568: LCD_write_message("   due to an error  ");
 14865  0159B4  0E98               	movlw	low STR_35
 14866  0159B6  0100               	movlb	0	; () banked
 14867  0159B8  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 14868  0159BA  0EFE               	movlw	high STR_35
 14869  0159BC  0100               	movlb	0	; () banked
 14870  0159BE  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 14871  0159C0  EC89  F0AE         	call	_LCD_write_message	;wreg free
 14872  0159C4  0012               	return		;funcret
 14873  0159C6                     __end_of_LCD_Error:
 14874                           	opt stack 0
 14875                           tblptru	equ	0xFF8
 14876                           tblptrh	equ	0xFF7
 14877                           tblptrl	equ	0xFF6
 14878                           tablat	equ	0xFF5
 14879                           prodh	equ	0xFF4
 14880                           prodl	equ	0xFF3
 14881                           intcon	equ	0xFF2
 14882                           postinc0	equ	0xFEE
 14883                           wreg	equ	0xFE8
 14884                           indf1	equ	0xFE7
 14885                           plusw1	equ	0xFE3
 14886                           fsr1h	equ	0xFE2
 14887                           fsr1l	equ	0xFE1
 14888                           indf2	equ	0xFDF
 14889                           postinc2	equ	0xFDE
 14890                           plusw2	equ	0xFDB
 14891                           fsr2h	equ	0xFDA
 14892                           fsr2l	equ	0xFD9
 14893                           status	equ	0xFD8
 14894                           
 14895 ;; *************** function _LCD_End *****************
 14896 ;; Defined at:
 14897 ;;		line 545 in file "RemoteCan.c"
 14898 ;; Parameters:    Size  Location     Type
 14899 ;;		None
 14900 ;; Auto vars:     Size  Location     Type
 14901 ;;		None
 14902 ;; Return value:  Size  Location     Type
 14903 ;;		None               void
 14904 ;; Registers used:
 14905 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14906 ;; Tracked objects:
 14907 ;;		On entry : 0/0
 14908 ;;		On exit  : 0/0
 14909 ;;		Unchanged: 0/0
 14910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14915 ;;Total ram usage:        0 bytes
 14916 ;; Hardware stack levels used:    1
 14917 ;; Hardware stack levels required when called:    9
 14918 ;; This function calls:
 14919 ;;		_LCD_clear
 14920 ;;		_LCD_goto_line
 14921 ;;		_LCD_initialize
 14922 ;;		_LCD_write_message
 14923 ;; This function is called by:
 14924 ;;		_main
 14925 ;; This function uses a non-reentrant model
 14926 ;;
 14927                           
 14928                           	psect	text42
 14929  0159C6                     __ptext42:
 14930                           	opt stack 0
 14931  0159C6                     _LCD_End:
 14932                           	opt stack 21
 14933                           
 14934                           ;RemoteCan.c: 546: LCD_initialize(16);
 14935                           
 14936                           ;incstack = 0
 14937  0159C6  0E10               	movlw	16
 14938  0159C8  EC0D  F0A5         	call	_LCD_initialize
 14939                           
 14940                           ;RemoteCan.c: 547: LCD_clear();
 14941  0159CC  ECF0  F0AE         	call	_LCD_clear	;wreg free
 14942                           
 14943                           ;RemoteCan.c: 548: LCD_goto_line(1);
 14944  0159D0  0E01               	movlw	1
 14945  0159D2  EC1A  F0A8         	call	_LCD_goto_line
 14946                           
 14947                           ;RemoteCan.c: 549: LCD_write_message("= PARKING MESSAGES =");
 14948  0159D6  0E40               	movlw	low STR_16
 14949  0159D8  0100               	movlb	0	; () banked
 14950  0159DA  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 14951  0159DC  0EFF               	movlw	high STR_16
 14952  0159DE  0100               	movlb	0	; () banked
 14953  0159E0  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 14954  0159E2  EC89  F0AE         	call	_LCD_write_message	;wreg free
 14955                           
 14956                           ;RemoteCan.c: 550: LCD_goto_line(2);
 14957  0159E6  0E02               	movlw	2
 14958  0159E8  EC1A  F0A8         	call	_LCD_goto_line
 14959                           
 14960                           ;RemoteCan.c: 551: LCD_write_message(" Parking procedures ");
 14961  0159EC  0ED7               	movlw	low STR_29
 14962  0159EE  0100               	movlb	0	; () banked
 14963  0159F0  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 14964  0159F2  0EFE               	movlw	high STR_29
 14965  0159F4  0100               	movlb	0	; () banked
 14966  0159F6  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 14967  0159F8  EC89  F0AE         	call	_LCD_write_message	;wreg free
 14968                           
 14969                           ;RemoteCan.c: 552: LCD_goto_line(3);
 14970  0159FC  0E03               	movlw	3
 14971  0159FE  EC1A  F0A8         	call	_LCD_goto_line
 14972                           
 14973                           ;RemoteCan.c: 553: LCD_write_message("    SUCCESSFULLY    ");
 14974  015A02  0E59               	movlw	low STR_30
 14975  015A04  0100               	movlb	0	; () banked
 14976  015A06  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 14977  015A08  0EFE               	movlw	high STR_30
 14978  015A0A  0100               	movlb	0	; () banked
 14979  015A0C  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 14980  015A0E  EC89  F0AE         	call	_LCD_write_message	;wreg free
 14981                           
 14982                           ;RemoteCan.c: 554: LCD_goto_line(4);
 14983  015A12  0E04               	movlw	4
 14984  015A14  EC1A  F0A8         	call	_LCD_goto_line
 14985                           
 14986                           ;RemoteCan.c: 555: LCD_write_message("     COMPLETED!     ");
 14987  015A18  0E44               	movlw	low STR_31
 14988  015A1A  0100               	movlb	0	; () banked
 14989  015A1C  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 14990  015A1E  0EFE               	movlw	high STR_31
 14991  015A20  0100               	movlb	0	; () banked
 14992  015A22  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 14993  015A24  EC89  F0AE         	call	_LCD_write_message	;wreg free
 14994  015A28  0012               	return		;funcret
 14995  015A2A                     __end_of_LCD_End:
 14996                           	opt stack 0
 14997                           tblptru	equ	0xFF8
 14998                           tblptrh	equ	0xFF7
 14999                           tblptrl	equ	0xFF6
 15000                           tablat	equ	0xFF5
 15001                           prodh	equ	0xFF4
 15002                           prodl	equ	0xFF3
 15003                           intcon	equ	0xFF2
 15004                           postinc0	equ	0xFEE
 15005                           wreg	equ	0xFE8
 15006                           indf1	equ	0xFE7
 15007                           plusw1	equ	0xFE3
 15008                           fsr1h	equ	0xFE2
 15009                           fsr1l	equ	0xFE1
 15010                           indf2	equ	0xFDF
 15011                           postinc2	equ	0xFDE
 15012                           plusw2	equ	0xFDB
 15013                           fsr2h	equ	0xFDA
 15014                           fsr2l	equ	0xFD9
 15015                           status	equ	0xFD8
 15016                           
 15017 ;; *************** function _LCD_write_message *****************
 15018 ;; Defined at:
 15019 ;;		line 178 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15020 ;; Parameters:    Size  Location     Type
 15021 ;;  buffer          2   33[BANK0 ] PTR const unsigned char 
 15022 ;;		 -> STR_35(21), STR_34(21), STR_33(21), STR_32(21), 
 15023 ;;		 -> STR_31(21), STR_30(21), STR_29(21), STR_28(21), 
 15024 ;;		 -> STR_27(21), STR_26(21), STR_25(21), STR_24(21), 
 15025 ;;		 -> STR_23(21), STR_22(21), STR_21(21), STR_20(21), 
 15026 ;;		 -> STR_19(21), STR_18(21), STR_17(21), STR_16(21), 
 15027 ;;		 -> STR_15(8), STR_14(8), STR_13(5), STR_12(5), 
 15028 ;;		 -> STR_11(5), STR_10(7), STR_9(14), STR_8(17), 
 15029 ;;		 -> STR_7(12), STR_6(21), STR_4(21), STR_3(21), 
 15030 ;;		 -> STR_2(21), STR_1(21), 
 15031 ;; Auto vars:     Size  Location     Type
 15032 ;;		None
 15033 ;; Return value:  Size  Location     Type
 15034 ;;		None               void
 15035 ;; Registers used:
 15036 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15037 ;; Tracked objects:
 15038 ;;		On entry : 0/0
 15039 ;;		On exit  : 0/0
 15040 ;;		Unchanged: 0/0
 15041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15042 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15045 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15046 ;;Total ram usage:        2 bytes
 15047 ;; Hardware stack levels used:    1
 15048 ;; Hardware stack levels required when called:    8
 15049 ;; This function calls:
 15050 ;;		_LCD_write_char
 15051 ;; This function is called by:
 15052 ;;		_main
 15053 ;;		_LCD_Handler
 15054 ;;		_LCD_Gap
 15055 ;;		_LCD_Park
 15056 ;;		_LCD_Parking
 15057 ;;		_LCD_End
 15058 ;;		_LCD_Error
 15059 ;; This function uses a non-reentrant model
 15060 ;;
 15061                           
 15062                           	psect	text43
 15063  015D12                     __ptext43:
 15064                           	opt stack 0
 15065  015D12                     _LCD_write_message:
 15066                           	opt stack 22
 15067                           
 15068                           ;src\LCD_44780.c: 181: while(*buffer) {
 15069                           
 15070                           ;incstack = 0
 15071  015D12  D00E               	goto	l7916
 15072  015D14                     l7912:
 15073                           
 15074                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
 15075  015D14  C081  FFF6         	movff	LCD_write_message@buffer,tblptrl
 15076  015D18  C082  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 15077  015D1C                     	if	0	;tblptru may be non-zero
 15078  015D1C                     	endif
 15079  015D1C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15080  015D1C  0E00               	movlw	low (__mediumconst shr (0+16))
 15081  015D1E  6EF8               	movwf	tblptru,c
 15082  015D20                     	endif
 15083  015D20  0008               	tblrd		*
 15084  015D22  50F5               	movf	tablat,w,c
 15085  015D24  EC1C  F0AB         	call	_LCD_write_char
 15086                           
 15087                           ;src\LCD_44780.c: 186: buffer++;
 15088  015D28  0100               	movlb	0	; () banked
 15089  015D2A  4B81               	infsnz	LCD_write_message@buffer& (0+255),f,b
 15090  015D2C  2B82               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
 15091  015D2E  D000               	goto	l7916
 15092  015D30                     l7916:
 15093  015D30  C081  FFF6         	movff	LCD_write_message@buffer,tblptrl
 15094  015D34  C082  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 15095  015D38                     	if	0	;tblptru may be non-zero
 15096  015D38                     	endif
 15097  015D38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15098  015D38  0E00               	movlw	low (__mediumconst shr (0+16))
 15099  015D3A  6EF8               	movwf	tblptru,c
 15100  015D3C                     	endif
 15101  015D3C  0008               	tblrd		*
 15102  015D3E  50F5               	movf	tablat,w,c
 15103  015D40  0900               	iorlw	0
 15104  015D42  A4D8               	btfss	status,2,c
 15105  015D44  D7E7               	goto	l7912
 15106  015D46  0012               	return		;funcret
 15107  015D48                     __end_of_LCD_write_message:
 15108                           	opt stack 0
 15109                           tblptru	equ	0xFF8
 15110                           tblptrh	equ	0xFF7
 15111                           tblptrl	equ	0xFF6
 15112                           tablat	equ	0xFF5
 15113                           prodh	equ	0xFF4
 15114                           prodl	equ	0xFF3
 15115                           intcon	equ	0xFF2
 15116                           postinc0	equ	0xFEE
 15117                           wreg	equ	0xFE8
 15118                           indf1	equ	0xFE7
 15119                           plusw1	equ	0xFE3
 15120                           fsr1h	equ	0xFE2
 15121                           fsr1l	equ	0xFE1
 15122                           indf2	equ	0xFDF
 15123                           postinc2	equ	0xFDE
 15124                           plusw2	equ	0xFDB
 15125                           fsr2h	equ	0xFDA
 15126                           fsr2l	equ	0xFD9
 15127                           status	equ	0xFD8
 15128                           
 15129 ;; *************** function _LCD_write_char *****************
 15130 ;; Defined at:
 15131 ;;		line 145 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15132 ;; Parameters:    Size  Location     Type
 15133 ;;  value           1    wreg     unsigned char 
 15134 ;; Auto vars:     Size  Location     Type
 15135 ;;  value           1   32[BANK0 ] unsigned char 
 15136 ;;  D0              1   31[BANK0 ] unsigned char 
 15137 ;;  D1              1   30[BANK0 ] unsigned char 
 15138 ;;  D2              1   29[BANK0 ] unsigned char 
 15139 ;;  D3              1   28[BANK0 ] unsigned char 
 15140 ;; Return value:  Size  Location     Type
 15141 ;;		None               void
 15142 ;; Registers used:
 15143 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15144 ;; Tracked objects:
 15145 ;;		On entry : 0/0
 15146 ;;		On exit  : 0/0
 15147 ;;		Unchanged: 0/0
 15148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15150 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15152 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15153 ;;Total ram usage:        5 bytes
 15154 ;; Hardware stack levels used:    1
 15155 ;; Hardware stack levels required when called:    7
 15156 ;; This function calls:
 15157 ;;		_LCD_send_command
 15158 ;; This function is called by:
 15159 ;;		_LCD_write_message
 15160 ;;		_LCD_write_string
 15161 ;; This function uses a non-reentrant model
 15162 ;;
 15163                           
 15164                           	psect	text44
 15165  015638                     __ptext44:
 15166                           	opt stack 0
 15167  015638                     _LCD_write_char:
 15168                           	opt stack 22
 15169                           
 15170                           ;incstack = 0
 15171                           ;LCD_write_char@value stored from wreg
 15172  015638  0100               	movlb	0	; () banked
 15173  01563A  6F80               	movwf	LCD_write_char@value& (0+255),b
 15174                           
 15175                           ; BSR set to: 0
 15176                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 15177                           ;src\LCD_44780.c: 149: LATEbits.LATE2 = 1;
 15178  01563C  848D               	bsf	3981,2,c	;volatile
 15179                           
 15180                           ; BSR set to: 0
 15181                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 15182  01563E  0100               	movlb	0	; () banked
 15183  015640  4580               	rlncf	LCD_write_char@value& (0+255),w,b
 15184  015642  0B01               	andlw	1
 15185  015644  0100               	movlb	0	; () banked
 15186  015646  6F7C               	movwf	LCD_write_char@D3& (0+255),b
 15187                           
 15188                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 15189  015648  0100               	movlb	0	; () banked
 15190  01564A  4580               	rlncf	LCD_write_char@value& (0+255),w,b
 15191  01564C  46E8               	rlncf	wreg,f,c
 15192  01564E  0B03               	andlw	3
 15193  015650  0B01               	andlw	1
 15194  015652  0100               	movlb	0	; () banked
 15195  015654  6F7D               	movwf	LCD_write_char@D2& (0+255),b
 15196                           
 15197                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 15198  015656  0100               	movlb	0	; () banked
 15199  015658  3980               	swapf	LCD_write_char@value& (0+255),w,b
 15200  01565A  42E8               	rrncf	wreg,f,c
 15201  01565C  0B07               	andlw	7
 15202  01565E  0B01               	andlw	1
 15203  015660  0100               	movlb	0	; () banked
 15204  015662  6F7E               	movwf	LCD_write_char@D1& (0+255),b
 15205                           
 15206                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 15207  015664  0100               	movlb	0	; () banked
 15208  015666  3980               	swapf	LCD_write_char@value& (0+255),w,b
 15209  015668  0B0F               	andlw	15
 15210  01566A  0B01               	andlw	1
 15211  01566C  0100               	movlb	0	; () banked
 15212  01566E  6F7F               	movwf	LCD_write_char@D0& (0+255),b
 15213                           
 15214                           ; BSR set to: 0
 15215                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 15216  015670  C07D  F078         	movff	LCD_write_char@D2,LCD_send_command@D2
 15217  015674  C07E  F079         	movff	LCD_write_char@D1,LCD_send_command@D1
 15218  015678  C07F  F07A         	movff	LCD_write_char@D0,LCD_send_command@D0
 15219  01567C  0100               	movlb	0	; () banked
 15220  01567E  517C               	movf	LCD_write_char@D3& (0+255),w,b
 15221  015680  EC18  F0AE         	call	_LCD_send_command
 15222                           
 15223                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 15224  015684  0100               	movlb	0	; () banked
 15225  015686  3980               	swapf	LCD_write_char@value& (0+255),w,b
 15226  015688  46E8               	rlncf	wreg,f,c
 15227  01568A  0B1F               	andlw	31
 15228  01568C  0B01               	andlw	1
 15229  01568E  0100               	movlb	0	; () banked
 15230  015690  6F7C               	movwf	LCD_write_char@D3& (0+255),b
 15231                           
 15232                           ; BSR set to: 0
 15233                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 15234  015692  0100               	movlb	0	; () banked
 15235  015694  4180               	rrncf	LCD_write_char@value& (0+255),w,b
 15236  015696  42E8               	rrncf	wreg,f,c
 15237  015698  0B3F               	andlw	63
 15238  01569A  0B01               	andlw	1
 15239  01569C  0100               	movlb	0	; () banked
 15240  01569E  6F7D               	movwf	LCD_write_char@D2& (0+255),b
 15241                           
 15242                           ; BSR set to: 0
 15243                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 15244  0156A0  0100               	movlb	0	; () banked
 15245  0156A2  90D8               	bcf	status,0,c
 15246  0156A4  3180               	rrcf	LCD_write_char@value& (0+255),w,b
 15247  0156A6  0B01               	andlw	1
 15248  0156A8  0100               	movlb	0	; () banked
 15249  0156AA  6F7E               	movwf	LCD_write_char@D1& (0+255),b
 15250                           
 15251                           ; BSR set to: 0
 15252                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 15253  0156AC  0100               	movlb	0	; () banked
 15254  0156AE  5180               	movf	LCD_write_char@value& (0+255),w,b
 15255  0156B0  0B01               	andlw	1
 15256  0156B2  0100               	movlb	0	; () banked
 15257  0156B4  6F7F               	movwf	LCD_write_char@D0& (0+255),b
 15258                           
 15259                           ; BSR set to: 0
 15260                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 15261  0156B6  C07D  F078         	movff	LCD_write_char@D2,LCD_send_command@D2
 15262  0156BA  C07E  F079         	movff	LCD_write_char@D1,LCD_send_command@D1
 15263  0156BE  C07F  F07A         	movff	LCD_write_char@D0,LCD_send_command@D0
 15264  0156C2  0100               	movlb	0	; () banked
 15265  0156C4  517C               	movf	LCD_write_char@D3& (0+255),w,b
 15266  0156C6  EC18  F0AE         	call	_LCD_send_command
 15267                           
 15268                           ;src\LCD_44780.c: 167: LATEbits.LATE2 = 0;
 15269  0156CA  948D               	bcf	3981,2,c	;volatile
 15270  0156CC  0012               	return		;funcret
 15271  0156CE                     __end_of_LCD_write_char:
 15272                           	opt stack 0
 15273                           tblptru	equ	0xFF8
 15274                           tblptrh	equ	0xFF7
 15275                           tblptrl	equ	0xFF6
 15276                           tablat	equ	0xFF5
 15277                           prodh	equ	0xFF4
 15278                           prodl	equ	0xFF3
 15279                           intcon	equ	0xFF2
 15280                           postinc0	equ	0xFEE
 15281                           wreg	equ	0xFE8
 15282                           indf1	equ	0xFE7
 15283                           plusw1	equ	0xFE3
 15284                           fsr1h	equ	0xFE2
 15285                           fsr1l	equ	0xFE1
 15286                           indf2	equ	0xFDF
 15287                           postinc2	equ	0xFDE
 15288                           plusw2	equ	0xFDB
 15289                           fsr2h	equ	0xFDA
 15290                           fsr2l	equ	0xFD9
 15291                           status	equ	0xFD8
 15292                           
 15293 ;; *************** function _LCD_initialize *****************
 15294 ;; Defined at:
 15295 ;;		line 283 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15296 ;; Parameters:    Size  Location     Type
 15297 ;;  quartz_frequ    1    wreg     unsigned char 
 15298 ;; Auto vars:     Size  Location     Type
 15299 ;;  quartz_frequ    1   30[BANK0 ] unsigned char 
 15300 ;; Return value:  Size  Location     Type
 15301 ;;		None               void
 15302 ;; Registers used:
 15303 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15304 ;; Tracked objects:
 15305 ;;		On entry : 0/0
 15306 ;;		On exit  : 0/0
 15307 ;;		Unchanged: 0/0
 15308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15310 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15312 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15313 ;;Total ram usage:        1 bytes
 15314 ;; Hardware stack levels used:    1
 15315 ;; Hardware stack levels required when called:    8
 15316 ;; This function calls:
 15317 ;;		_LCD_clear
 15318 ;;		_LCD_cursor
 15319 ;;		_LCD_send_command
 15320 ;;		_delay_ms
 15321 ;;		_delay_set_quartz
 15322 ;; This function is called by:
 15323 ;;		_main
 15324 ;;		_LCD_Handler
 15325 ;;		_LCD_Gap
 15326 ;;		_LCD_Park
 15327 ;;		_LCD_Parking
 15328 ;;		_LCD_End
 15329 ;;		_LCD_Error
 15330 ;;		_board_initialization
 15331 ;; This function uses a non-reentrant model
 15332 ;;
 15333                           
 15334                           	psect	text45
 15335  014A1A                     __ptext45:
 15336                           	opt stack 0
 15337  014A1A                     _LCD_initialize:
 15338                           	opt stack 21
 15339                           
 15340                           ;incstack = 0
 15341                           ;LCD_initialize@quartz_frequency stored from wreg
 15342  014A1A  0100               	movlb	0	; () banked
 15343  014A1C  6F7E               	movwf	LCD_initialize@quartz_frequency& (0+255),b
 15344                           
 15345                           ; BSR set to: 0
 15346                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
 15347  014A1E  0100               	movlb	0	; () banked
 15348  014A20  517E               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
 15349  014A22  ECAF  F0AF         	call	_delay_set_quartz
 15350                           
 15351                           ;src\LCD_44780.c: 287: LATEbits.LATE2 = 0x00;
 15352  014A26  948D               	bcf	3981,2,c	;volatile
 15353                           
 15354                           ;src\LCD_44780.c: 288: LATCbits.LATC1 = 0x00;
 15355  014A28  928B               	bcf	3979,1,c	;volatile
 15356                           
 15357                           ;src\LCD_44780.c: 289: LATCbits.LATC0 = 0x00;
 15358  014A2A  908B               	bcf	3979,0,c	;volatile
 15359                           
 15360                           ;src\LCD_44780.c: 291: delay_ms (100);
 15361  014A2C  0E00               	movlw	0
 15362  014A2E  0100               	movlb	0	; () banked
 15363  014A30  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
 15364  014A32  0E64               	movlw	100
 15365  014A34  6F76               	movwf	delay_ms@value_ms& (0+255),b
 15366  014A36  EC35  F0AE         	call	_delay_ms	;wreg free
 15367                           
 15368                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
 15369  014A3A  0E00               	movlw	0
 15370  014A3C  0100               	movlb	0	; () banked
 15371  014A3E  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15372  014A40  0E01               	movlw	1
 15373  014A42  0100               	movlb	0	; () banked
 15374  014A44  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15375  014A46  0E01               	movlw	1
 15376  014A48  0100               	movlb	0	; () banked
 15377  014A4A  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15378  014A4C  0E00               	movlw	0
 15379  014A4E  EC18  F0AE         	call	_LCD_send_command
 15380                           
 15381                           ;src\LCD_44780.c: 293: delay_ms (100);
 15382  014A52  0E00               	movlw	0
 15383  014A54  0100               	movlb	0	; () banked
 15384  014A56  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
 15385  014A58  0E64               	movlw	100
 15386  014A5A  6F76               	movwf	delay_ms@value_ms& (0+255),b
 15387  014A5C  EC35  F0AE         	call	_delay_ms	;wreg free
 15388                           
 15389                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
 15390  014A60  0E00               	movlw	0
 15391  014A62  0100               	movlb	0	; () banked
 15392  014A64  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15393  014A66  0E01               	movlw	1
 15394  014A68  0100               	movlb	0	; () banked
 15395  014A6A  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15396  014A6C  0E01               	movlw	1
 15397  014A6E  0100               	movlb	0	; () banked
 15398  014A70  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15399  014A72  0E00               	movlw	0
 15400  014A74  EC18  F0AE         	call	_LCD_send_command
 15401                           
 15402                           ;src\LCD_44780.c: 295: delay_ms (10);
 15403  014A78  0E00               	movlw	0
 15404  014A7A  0100               	movlb	0	; () banked
 15405  014A7C  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
 15406  014A7E  0E0A               	movlw	10
 15407  014A80  6F76               	movwf	delay_ms@value_ms& (0+255),b
 15408  014A82  EC35  F0AE         	call	_delay_ms	;wreg free
 15409                           
 15410                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
 15411  014A86  0E00               	movlw	0
 15412  014A88  0100               	movlb	0	; () banked
 15413  014A8A  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15414  014A8C  0E01               	movlw	1
 15415  014A8E  0100               	movlb	0	; () banked
 15416  014A90  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15417  014A92  0E01               	movlw	1
 15418  014A94  0100               	movlb	0	; () banked
 15419  014A96  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15420  014A98  0E00               	movlw	0
 15421  014A9A  EC18  F0AE         	call	_LCD_send_command
 15422                           
 15423                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
 15424  014A9E  0E00               	movlw	0
 15425  014AA0  0100               	movlb	0	; () banked
 15426  014AA2  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15427  014AA4  0E01               	movlw	1
 15428  014AA6  0100               	movlb	0	; () banked
 15429  014AA8  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15430  014AAA  0E00               	movlw	0
 15431  014AAC  0100               	movlb	0	; () banked
 15432  014AAE  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15433  014AB0  0E00               	movlw	0
 15434  014AB2  EC18  F0AE         	call	_LCD_send_command
 15435                           
 15436                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
 15437  014AB6  0E00               	movlw	0
 15438  014AB8  0100               	movlb	0	; () banked
 15439  014ABA  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15440  014ABC  0E01               	movlw	1
 15441  014ABE  0100               	movlb	0	; () banked
 15442  014AC0  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15443  014AC2  0E00               	movlw	0
 15444  014AC4  0100               	movlb	0	; () banked
 15445  014AC6  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15446  014AC8  0E00               	movlw	0
 15447  014ACA  EC18  F0AE         	call	_LCD_send_command
 15448                           
 15449                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
 15450  014ACE  0E00               	movlw	0
 15451  014AD0  0100               	movlb	0	; () banked
 15452  014AD2  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15453  014AD4  0E00               	movlw	0
 15454  014AD6  0100               	movlb	0	; () banked
 15455  014AD8  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15456  014ADA  0E00               	movlw	0
 15457  014ADC  0100               	movlb	0	; () banked
 15458  014ADE  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15459  014AE0  0E01               	movlw	1
 15460  014AE2  EC18  F0AE         	call	_LCD_send_command
 15461                           
 15462                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
 15463  014AE6  0E00               	movlw	0
 15464  014AE8  0100               	movlb	0	; () banked
 15465  014AEA  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15466  014AEC  0E00               	movlw	0
 15467  014AEE  0100               	movlb	0	; () banked
 15468  014AF0  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15469  014AF2  0E00               	movlw	0
 15470  014AF4  0100               	movlb	0	; () banked
 15471  014AF6  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15472  014AF8  0E00               	movlw	0
 15473  014AFA  EC18  F0AE         	call	_LCD_send_command
 15474                           
 15475                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
 15476  014AFE  0E00               	movlw	0
 15477  014B00  0100               	movlb	0	; () banked
 15478  014B02  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15479  014B04  0E00               	movlw	0
 15480  014B06  0100               	movlb	0	; () banked
 15481  014B08  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15482  014B0A  0E00               	movlw	0
 15483  014B0C  0100               	movlb	0	; () banked
 15484  014B0E  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15485  014B10  0E01               	movlw	1
 15486  014B12  EC18  F0AE         	call	_LCD_send_command
 15487                           
 15488                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
 15489  014B16  0E00               	movlw	0
 15490  014B18  0100               	movlb	0	; () banked
 15491  014B1A  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15492  014B1C  0E00               	movlw	0
 15493  014B1E  0100               	movlb	0	; () banked
 15494  014B20  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15495  014B22  0E00               	movlw	0
 15496  014B24  0100               	movlb	0	; () banked
 15497  014B26  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15498  014B28  0E00               	movlw	0
 15499  014B2A  EC18  F0AE         	call	_LCD_send_command
 15500                           
 15501                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
 15502  014B2E  0E00               	movlw	0
 15503  014B30  0100               	movlb	0	; () banked
 15504  014B32  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15505  014B34  0E00               	movlw	0
 15506  014B36  0100               	movlb	0	; () banked
 15507  014B38  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15508  014B3A  0E01               	movlw	1
 15509  014B3C  0100               	movlb	0	; () banked
 15510  014B3E  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15511  014B40  0E00               	movlw	0
 15512  014B42  EC18  F0AE         	call	_LCD_send_command
 15513                           
 15514                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
 15515  014B46  0E00               	movlw	0
 15516  014B48  0100               	movlb	0	; () banked
 15517  014B4A  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15518  014B4C  0E00               	movlw	0
 15519  014B4E  0100               	movlb	0	; () banked
 15520  014B50  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15521  014B52  0E00               	movlw	0
 15522  014B54  0100               	movlb	0	; () banked
 15523  014B56  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15524  014B58  0E00               	movlw	0
 15525  014B5A  EC18  F0AE         	call	_LCD_send_command
 15526                           
 15527                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
 15528  014B5E  0E01               	movlw	1
 15529  014B60  0100               	movlb	0	; () banked
 15530  014B62  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15531  014B64  0E01               	movlw	1
 15532  014B66  0100               	movlb	0	; () banked
 15533  014B68  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15534  014B6A  0E00               	movlw	0
 15535  014B6C  0100               	movlb	0	; () banked
 15536  014B6E  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15537  014B70  0E00               	movlw	0
 15538  014B72  EC18  F0AE         	call	_LCD_send_command
 15539                           
 15540                           ;src\LCD_44780.c: 312: LCD_clear ();
 15541  014B76  ECF0  F0AE         	call	_LCD_clear	;wreg free
 15542                           
 15543                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
 15544  014B7A  0E00               	movlw	0
 15545  014B7C  0100               	movlb	0	; () banked
 15546  014B7E  6F7C               	movwf	LCD_cursor@blinking& (0+255),b
 15547  014B80  0E00               	movlw	0
 15548  014B82  ECD7  F0AE         	call	_LCD_cursor
 15549  014B86  0012               	return		;funcret
 15550  014B88                     __end_of_LCD_initialize:
 15551                           	opt stack 0
 15552                           tblptru	equ	0xFF8
 15553                           tblptrh	equ	0xFF7
 15554                           tblptrl	equ	0xFF6
 15555                           tablat	equ	0xFF5
 15556                           prodh	equ	0xFF4
 15557                           prodl	equ	0xFF3
 15558                           intcon	equ	0xFF2
 15559                           postinc0	equ	0xFEE
 15560                           wreg	equ	0xFE8
 15561                           indf1	equ	0xFE7
 15562                           plusw1	equ	0xFE3
 15563                           fsr1h	equ	0xFE2
 15564                           fsr1l	equ	0xFE1
 15565                           indf2	equ	0xFDF
 15566                           postinc2	equ	0xFDE
 15567                           plusw2	equ	0xFDB
 15568                           fsr2h	equ	0xFDA
 15569                           fsr2l	equ	0xFD9
 15570                           status	equ	0xFD8
 15571                           
 15572 ;; *************** function _delay_set_quartz *****************
 15573 ;; Defined at:
 15574 ;;		line 115 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 15575 ;; Parameters:    Size  Location     Type
 15576 ;;  frequency       1    wreg     unsigned char 
 15577 ;; Auto vars:     Size  Location     Type
 15578 ;;  frequency       1   16[BANK0 ] unsigned char 
 15579 ;; Return value:  Size  Location     Type
 15580 ;;		None               void
 15581 ;; Registers used:
 15582 ;;		wreg
 15583 ;; Tracked objects:
 15584 ;;		On entry : 0/0
 15585 ;;		On exit  : 0/0
 15586 ;;		Unchanged: 0/0
 15587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15589 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15591 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15592 ;;Total ram usage:        1 bytes
 15593 ;; Hardware stack levels used:    1
 15594 ;; Hardware stack levels required when called:    3
 15595 ;; This function calls:
 15596 ;;		Nothing
 15597 ;; This function is called by:
 15598 ;;		_LCD_initialize
 15599 ;; This function uses a non-reentrant model
 15600 ;;
 15601                           
 15602                           	psect	text46
 15603  015F5E                     __ptext46:
 15604                           	opt stack 0
 15605  015F5E                     _delay_set_quartz:
 15606                           	opt stack 25
 15607                           
 15608                           ;incstack = 0
 15609                           ;delay_set_quartz@frequency stored from wreg
 15610  015F5E  0100               	movlb	0	; () banked
 15611  015F60  6F70               	movwf	delay_set_quartz@frequency& (0+255),b
 15612                           
 15613                           ; BSR set to: 0
 15614                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
 15615  015F62  C070  F0EB         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
 15616                           
 15617                           ; BSR set to: 0
 15618  015F66  0012               	return		;funcret
 15619  015F68                     __end_of_delay_set_quartz:
 15620                           	opt stack 0
 15621                           tblptru	equ	0xFF8
 15622                           tblptrh	equ	0xFF7
 15623                           tblptrl	equ	0xFF6
 15624                           tablat	equ	0xFF5
 15625                           prodh	equ	0xFF4
 15626                           prodl	equ	0xFF3
 15627                           intcon	equ	0xFF2
 15628                           postinc0	equ	0xFEE
 15629                           wreg	equ	0xFE8
 15630                           indf1	equ	0xFE7
 15631                           plusw1	equ	0xFE3
 15632                           fsr1h	equ	0xFE2
 15633                           fsr1l	equ	0xFE1
 15634                           indf2	equ	0xFDF
 15635                           postinc2	equ	0xFDE
 15636                           plusw2	equ	0xFDB
 15637                           fsr2h	equ	0xFDA
 15638                           fsr2l	equ	0xFD9
 15639                           status	equ	0xFD8
 15640                           
 15641 ;; *************** function _LCD_cursor *****************
 15642 ;; Defined at:
 15643 ;;		line 266 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15644 ;; Parameters:    Size  Location     Type
 15645 ;;  active          1    wreg     unsigned char 
 15646 ;;  blinking        1   28[BANK0 ] unsigned char 
 15647 ;; Auto vars:     Size  Location     Type
 15648 ;;  active          1   29[BANK0 ] unsigned char 
 15649 ;; Return value:  Size  Location     Type
 15650 ;;		None               void
 15651 ;; Registers used:
 15652 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15653 ;; Tracked objects:
 15654 ;;		On entry : 0/0
 15655 ;;		On exit  : 0/0
 15656 ;;		Unchanged: 0/0
 15657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15658 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15659 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15661 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15662 ;;Total ram usage:        2 bytes
 15663 ;; Hardware stack levels used:    1
 15664 ;; Hardware stack levels required when called:    7
 15665 ;; This function calls:
 15666 ;;		_LCD_send_command
 15667 ;; This function is called by:
 15668 ;;		_LCD_initialize
 15669 ;; This function uses a non-reentrant model
 15670 ;;
 15671                           
 15672                           	psect	text47
 15673  015DAE                     __ptext47:
 15674                           	opt stack 0
 15675  015DAE                     _LCD_cursor:
 15676                           	opt stack 21
 15677                           
 15678                           ; BSR set to: 0
 15679                           ;incstack = 0
 15680                           ;LCD_cursor@active stored from wreg
 15681  015DAE  0100               	movlb	0	; () banked
 15682  015DB0  6F7D               	movwf	LCD_cursor@active& (0+255),b
 15683                           
 15684                           ; BSR set to: 0
 15685                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
 15686  015DB2  0E00               	movlw	0
 15687  015DB4  0100               	movlb	0	; () banked
 15688  015DB6  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15689  015DB8  0E00               	movlw	0
 15690  015DBA  0100               	movlb	0	; () banked
 15691  015DBC  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15692  015DBE  0E00               	movlw	0
 15693  015DC0  0100               	movlb	0	; () banked
 15694  015DC2  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15695  015DC4  0E00               	movlw	0
 15696  015DC6  EC18  F0AE         	call	_LCD_send_command
 15697                           
 15698                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
 15699  015DCA  0E01               	movlw	1
 15700  015DCC  0100               	movlb	0	; () banked
 15701  015DCE  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15702  015DD0  C07D  F079         	movff	LCD_cursor@active,LCD_send_command@D1
 15703  015DD4  C07C  F07A         	movff	LCD_cursor@blinking,LCD_send_command@D0
 15704  015DD8  0E01               	movlw	1
 15705  015DDA  EC18  F0AE         	call	_LCD_send_command
 15706  015DDE  0012               	return		;funcret
 15707  015DE0                     __end_of_LCD_cursor:
 15708                           	opt stack 0
 15709                           tblptru	equ	0xFF8
 15710                           tblptrh	equ	0xFF7
 15711                           tblptrl	equ	0xFF6
 15712                           tablat	equ	0xFF5
 15713                           prodh	equ	0xFF4
 15714                           prodl	equ	0xFF3
 15715                           intcon	equ	0xFF2
 15716                           postinc0	equ	0xFEE
 15717                           wreg	equ	0xFE8
 15718                           indf1	equ	0xFE7
 15719                           plusw1	equ	0xFE3
 15720                           fsr1h	equ	0xFE2
 15721                           fsr1l	equ	0xFE1
 15722                           indf2	equ	0xFDF
 15723                           postinc2	equ	0xFDE
 15724                           plusw2	equ	0xFDB
 15725                           fsr2h	equ	0xFDA
 15726                           fsr2l	equ	0xFD9
 15727                           status	equ	0xFD8
 15728                           
 15729 ;; *************** function _LCD_clear *****************
 15730 ;; Defined at:
 15731 ;;		line 257 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15732 ;; Parameters:    Size  Location     Type
 15733 ;;		None
 15734 ;; Auto vars:     Size  Location     Type
 15735 ;;		None
 15736 ;; Return value:  Size  Location     Type
 15737 ;;		None               void
 15738 ;; Registers used:
 15739 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15740 ;; Tracked objects:
 15741 ;;		On entry : 0/0
 15742 ;;		On exit  : 0/0
 15743 ;;		Unchanged: 0/0
 15744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15749 ;;Total ram usage:        0 bytes
 15750 ;; Hardware stack levels used:    1
 15751 ;; Hardware stack levels required when called:    7
 15752 ;; This function calls:
 15753 ;;		_LCD_send_command
 15754 ;; This function is called by:
 15755 ;;		_LCD_initialize
 15756 ;;		_LCD_Handler
 15757 ;;		_LCD_Gap
 15758 ;;		_LCD_Park
 15759 ;;		_LCD_Parking
 15760 ;;		_LCD_End
 15761 ;;		_LCD_Error
 15762 ;;		_board_initialization
 15763 ;; This function uses a non-reentrant model
 15764 ;;
 15765                           
 15766                           	psect	text48
 15767  015DE0                     __ptext48:
 15768                           	opt stack 0
 15769  015DE0                     _LCD_clear:
 15770                           	opt stack 21
 15771                           
 15772                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 15773                           
 15774                           ;incstack = 0
 15775  015DE0  0E00               	movlw	0
 15776  015DE2  0100               	movlb	0	; () banked
 15777  015DE4  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15778  015DE6  0E00               	movlw	0
 15779  015DE8  0100               	movlb	0	; () banked
 15780  015DEA  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15781  015DEC  0E00               	movlw	0
 15782  015DEE  0100               	movlb	0	; () banked
 15783  015DF0  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15784  015DF2  0E00               	movlw	0
 15785  015DF4  EC18  F0AE         	call	_LCD_send_command
 15786                           
 15787                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 15788  015DF8  0E00               	movlw	0
 15789  015DFA  0100               	movlb	0	; () banked
 15790  015DFC  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15791  015DFE  0E00               	movlw	0
 15792  015E00  0100               	movlb	0	; () banked
 15793  015E02  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15794  015E04  0E01               	movlw	1
 15795  015E06  0100               	movlb	0	; () banked
 15796  015E08  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15797  015E0A  0E00               	movlw	0
 15798  015E0C  EC18  F0AE         	call	_LCD_send_command
 15799  015E10  0012               	return		;funcret
 15800  015E12                     __end_of_LCD_clear:
 15801                           	opt stack 0
 15802                           tblptru	equ	0xFF8
 15803                           tblptrh	equ	0xFF7
 15804                           tblptrl	equ	0xFF6
 15805                           tablat	equ	0xFF5
 15806                           prodh	equ	0xFF4
 15807                           prodl	equ	0xFF3
 15808                           intcon	equ	0xFF2
 15809                           postinc0	equ	0xFEE
 15810                           wreg	equ	0xFE8
 15811                           indf1	equ	0xFE7
 15812                           plusw1	equ	0xFE3
 15813                           fsr1h	equ	0xFE2
 15814                           fsr1l	equ	0xFE1
 15815                           indf2	equ	0xFDF
 15816                           postinc2	equ	0xFDE
 15817                           plusw2	equ	0xFDB
 15818                           fsr2h	equ	0xFDA
 15819                           fsr2l	equ	0xFD9
 15820                           status	equ	0xFD8
 15821                           
 15822 ;; *************** function _LCD_goto_line *****************
 15823 ;; Defined at:
 15824 ;;		line 111 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15825 ;; Parameters:    Size  Location     Type
 15826 ;;  line            1    wreg     unsigned char 
 15827 ;; Auto vars:     Size  Location     Type
 15828 ;;  line            1   28[BANK0 ] unsigned char 
 15829 ;; Return value:  Size  Location     Type
 15830 ;;		None               void
 15831 ;; Registers used:
 15832 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15833 ;; Tracked objects:
 15834 ;;		On entry : 0/0
 15835 ;;		On exit  : 0/0
 15836 ;;		Unchanged: 0/0
 15837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15839 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15841 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15842 ;;Total ram usage:        1 bytes
 15843 ;; Hardware stack levels used:    1
 15844 ;; Hardware stack levels required when called:    7
 15845 ;; This function calls:
 15846 ;;		_LCD_send_command
 15847 ;; This function is called by:
 15848 ;;		_LCD_goto_xy
 15849 ;;		_main
 15850 ;;		_LCD_Handler
 15851 ;;		_LCD_Gap
 15852 ;;		_LCD_Park
 15853 ;;		_LCD_Parking
 15854 ;;		_LCD_End
 15855 ;;		_LCD_Error
 15856 ;;		_board_initialization
 15857 ;; This function uses a non-reentrant model
 15858 ;;
 15859                           
 15860                           	psect	text49
 15861  015034                     __ptext49:
 15862                           	opt stack 0
 15863  015034                     _LCD_goto_line:
 15864                           	opt stack 22
 15865                           
 15866                           ;incstack = 0
 15867                           ;LCD_goto_line@line stored from wreg
 15868  015034  0100               	movlb	0	; () banked
 15869  015036  6F7C               	movwf	LCD_goto_line@line& (0+255),b
 15870                           
 15871                           ; BSR set to: 0
 15872                           ;src\LCD_44780.c: 113: switch(line) {
 15873  015038  D064               	goto	l7590
 15874  01503A                     l7582:
 15875                           
 15876                           ; BSR set to: 0
 15877  01503A  0E00               	movlw	0
 15878  01503C  0100               	movlb	0	; () banked
 15879  01503E  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15880  015040  0E00               	movlw	0
 15881  015042  0100               	movlb	0	; () banked
 15882  015044  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15883  015046  0E00               	movlw	0
 15884  015048  0100               	movlb	0	; () banked
 15885  01504A  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15886  01504C  0E01               	movlw	1
 15887  01504E  EC18  F0AE         	call	_LCD_send_command
 15888                           
 15889                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 15890  015052  0E00               	movlw	0
 15891  015054  0100               	movlb	0	; () banked
 15892  015056  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15893  015058  0E00               	movlw	0
 15894  01505A  0100               	movlb	0	; () banked
 15895  01505C  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15896  01505E  0E00               	movlw	0
 15897  015060  0100               	movlb	0	; () banked
 15898  015062  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15899  015064  0E00               	movlw	0
 15900  015066  EC18  F0AE         	call	_LCD_send_command
 15901                           
 15902                           ;src\LCD_44780.c: 117: break;
 15903  01506A  0012               	return	
 15904  01506C                     l7584:
 15905  01506C  0E01               	movlw	1
 15906  01506E  0100               	movlb	0	; () banked
 15907  015070  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15908  015072  0E00               	movlw	0
 15909  015074  0100               	movlb	0	; () banked
 15910  015076  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15911  015078  0E00               	movlw	0
 15912  01507A  0100               	movlb	0	; () banked
 15913  01507C  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15914  01507E  0E01               	movlw	1
 15915  015080  EC18  F0AE         	call	_LCD_send_command
 15916                           
 15917                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 15918  015084  0E00               	movlw	0
 15919  015086  0100               	movlb	0	; () banked
 15920  015088  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15921  01508A  0E00               	movlw	0
 15922  01508C  0100               	movlb	0	; () banked
 15923  01508E  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15924  015090  0E00               	movlw	0
 15925  015092  0100               	movlb	0	; () banked
 15926  015094  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15927  015096  0E00               	movlw	0
 15928  015098  EC18  F0AE         	call	_LCD_send_command
 15929                           
 15930                           ;src\LCD_44780.c: 121: break;
 15931  01509C  0012               	return	
 15932  01509E                     l7586:
 15933  01509E  0E00               	movlw	0
 15934  0150A0  0100               	movlb	0	; () banked
 15935  0150A2  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15936  0150A4  0E00               	movlw	0
 15937  0150A6  0100               	movlb	0	; () banked
 15938  0150A8  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15939  0150AA  0E01               	movlw	1
 15940  0150AC  0100               	movlb	0	; () banked
 15941  0150AE  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15942  0150B0  0E01               	movlw	1
 15943  0150B2  EC18  F0AE         	call	_LCD_send_command
 15944                           
 15945                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 15946  0150B6  0E01               	movlw	1
 15947  0150B8  0100               	movlb	0	; () banked
 15948  0150BA  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15949  0150BC  0E00               	movlw	0
 15950  0150BE  0100               	movlb	0	; () banked
 15951  0150C0  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15952  0150C2  0E00               	movlw	0
 15953  0150C4  0100               	movlb	0	; () banked
 15954  0150C6  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15955  0150C8  0E00               	movlw	0
 15956  0150CA  EC18  F0AE         	call	_LCD_send_command
 15957                           
 15958                           ;src\LCD_44780.c: 125: break;
 15959  0150CE  0012               	return	
 15960  0150D0                     l7588:
 15961  0150D0  0E01               	movlw	1
 15962  0150D2  0100               	movlb	0	; () banked
 15963  0150D4  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15964  0150D6  0E00               	movlw	0
 15965  0150D8  0100               	movlb	0	; () banked
 15966  0150DA  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15967  0150DC  0E01               	movlw	1
 15968  0150DE  0100               	movlb	0	; () banked
 15969  0150E0  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15970  0150E2  0E01               	movlw	1
 15971  0150E4  EC18  F0AE         	call	_LCD_send_command
 15972                           
 15973                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 15974  0150E8  0E01               	movlw	1
 15975  0150EA  0100               	movlb	0	; () banked
 15976  0150EC  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15977  0150EE  0E00               	movlw	0
 15978  0150F0  0100               	movlb	0	; () banked
 15979  0150F2  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15980  0150F4  0E00               	movlw	0
 15981  0150F6  0100               	movlb	0	; () banked
 15982  0150F8  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15983  0150FA  0E00               	movlw	0
 15984  0150FC  EC18  F0AE         	call	_LCD_send_command
 15985                           
 15986                           ;src\LCD_44780.c: 129: }
 15987  015100  0012               	return	
 15988  015102                     l7590:
 15989  015102  0100               	movlb	0	; () banked
 15990  015104  517C               	movf	LCD_goto_line@line& (0+255),w,b
 15991                           
 15992                           ; Switch size 1, requested type "space"
 15993                           ; Number of cases is 4, Range of values is 1 to 4
 15994                           ; switch strategies available:
 15995                           ; Name         Instructions Cycles
 15996                           ; simple_byte           13     7 (average)
 15997                           ;	Chosen strategy is simple_byte
 15998  015106  0A01               	xorlw	1	; case 1
 15999  015108  B4D8               	btfsc	status,2,c
 16000  01510A  D797               	goto	l7582
 16001  01510C  0A03               	xorlw	3	; case 2
 16002  01510E  B4D8               	btfsc	status,2,c
 16003  015110  D7AD               	goto	l7584
 16004  015112  0A01               	xorlw	1	; case 3
 16005  015114  B4D8               	btfsc	status,2,c
 16006  015116  D7C3               	goto	l7586
 16007  015118  0A07               	xorlw	7	; case 4
 16008  01511A  A4D8               	btfss	status,2,c
 16009  01511C  0012               	return	
 16010  01511E  D7D8               	goto	l7588
 16011                           
 16012                           ; BSR set to: 0
 16013  015120  0012               	return		;funcret
 16014  015122                     __end_of_LCD_goto_line:
 16015                           	opt stack 0
 16016                           tblptru	equ	0xFF8
 16017                           tblptrh	equ	0xFF7
 16018                           tblptrl	equ	0xFF6
 16019                           tablat	equ	0xFF5
 16020                           prodh	equ	0xFF4
 16021                           prodl	equ	0xFF3
 16022                           intcon	equ	0xFF2
 16023                           postinc0	equ	0xFEE
 16024                           wreg	equ	0xFE8
 16025                           indf1	equ	0xFE7
 16026                           plusw1	equ	0xFE3
 16027                           fsr1h	equ	0xFE2
 16028                           fsr1l	equ	0xFE1
 16029                           indf2	equ	0xFDF
 16030                           postinc2	equ	0xFDE
 16031                           plusw2	equ	0xFDB
 16032                           fsr2h	equ	0xFDA
 16033                           fsr2l	equ	0xFD9
 16034                           status	equ	0xFD8
 16035                           
 16036 ;; *************** function _LCD_send_command *****************
 16037 ;; Defined at:
 16038 ;;		line 61 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 16039 ;; Parameters:    Size  Location     Type
 16040 ;;  D3              1    wreg     unsigned char 
 16041 ;;  D2              1   24[BANK0 ] unsigned char 
 16042 ;;  D1              1   25[BANK0 ] unsigned char 
 16043 ;;  D0              1   26[BANK0 ] unsigned char 
 16044 ;; Auto vars:     Size  Location     Type
 16045 ;;  D3              1   27[BANK0 ] unsigned char 
 16046 ;; Return value:  Size  Location     Type
 16047 ;;		None               void
 16048 ;; Registers used:
 16049 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16050 ;; Tracked objects:
 16051 ;;		On entry : 0/0
 16052 ;;		On exit  : 0/0
 16053 ;;		Unchanged: 0/0
 16054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16055 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16056 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16058 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16059 ;;Total ram usage:        4 bytes
 16060 ;; Hardware stack levels used:    1
 16061 ;; Hardware stack levels required when called:    6
 16062 ;; This function calls:
 16063 ;;		_LCD_enable_pulse
 16064 ;; This function is called by:
 16065 ;;		_LCD_shift_cursor
 16066 ;;		_LCD_goto_line
 16067 ;;		_LCD_write_char
 16068 ;;		_LCD_clear
 16069 ;;		_LCD_cursor
 16070 ;;		_LCD_initialize
 16071 ;;		_LCD_home
 16072 ;;		_LCD_shift
 16073 ;; This function uses a non-reentrant model
 16074 ;;
 16075                           
 16076                           	psect	text50
 16077  015C30                     __ptext50:
 16078                           	opt stack 0
 16079  015C30                     _LCD_send_command:
 16080                           	opt stack 22
 16081                           
 16082                           ;incstack = 0
 16083                           ;LCD_send_command@D3 stored from wreg
 16084  015C30  0100               	movlb	0	; () banked
 16085  015C32  6F7B               	movwf	LCD_send_command@D3& (0+255),b
 16086                           
 16087                           ; BSR set to: 0
 16088                           ;src\LCD_44780.c: 63: LATCbits.LATC2 = D0;
 16089  015C34  0100               	movlb	0	; () banked
 16090  015C36  B17A               	btfsc	LCD_send_command@D0& (0+255),0,b
 16091  015C38  D002               	bra	u9085
 16092  015C3A  948B               	bcf	3979,2,c	;volatile
 16093  015C3C  D001               	bra	u9086
 16094  015C3E                     u9085:
 16095  015C3E  848B               	bsf	3979,2,c	;volatile
 16096  015C40                     u9086:
 16097                           
 16098                           ;src\LCD_44780.c: 64: LATCbits.LATC3 = D1;
 16099  015C40  0100               	movlb	0	; () banked
 16100  015C42  B179               	btfsc	LCD_send_command@D1& (0+255),0,b
 16101  015C44  D002               	bra	u9095
 16102  015C46  968B               	bcf	3979,3,c	;volatile
 16103  015C48  D001               	bra	u9096
 16104  015C4A                     u9095:
 16105  015C4A  868B               	bsf	3979,3,c	;volatile
 16106  015C4C                     u9096:
 16107                           
 16108                           ;src\LCD_44780.c: 65: LATDbits.LATD0 = D2;
 16109  015C4C  0100               	movlb	0	; () banked
 16110  015C4E  B178               	btfsc	LCD_send_command@D2& (0+255),0,b
 16111  015C50  D002               	bra	u9105
 16112  015C52  908C               	bcf	3980,0,c	;volatile
 16113  015C54  D001               	bra	u9106
 16114  015C56                     u9105:
 16115  015C56  808C               	bsf	3980,0,c	;volatile
 16116  015C58                     u9106:
 16117                           
 16118                           ;src\LCD_44780.c: 66: LATDbits.LATD1 = D3;
 16119  015C58  0100               	movlb	0	; () banked
 16120  015C5A  B17B               	btfsc	LCD_send_command@D3& (0+255),0,b
 16121  015C5C  D002               	bra	u9115
 16122  015C5E  928C               	bcf	3980,1,c	;volatile
 16123  015C60  D001               	bra	u9116
 16124  015C62                     u9115:
 16125  015C62  828C               	bsf	3980,1,c	;volatile
 16126  015C64                     u9116:
 16127                           
 16128                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 16129  015C64  EC47  F0AF         	call	_LCD_enable_pulse	;wreg free
 16130  015C68  0012               	return		;funcret
 16131  015C6A                     __end_of_LCD_send_command:
 16132                           	opt stack 0
 16133                           tblptru	equ	0xFF8
 16134                           tblptrh	equ	0xFF7
 16135                           tblptrl	equ	0xFF6
 16136                           tablat	equ	0xFF5
 16137                           prodh	equ	0xFF4
 16138                           prodl	equ	0xFF3
 16139                           intcon	equ	0xFF2
 16140                           postinc0	equ	0xFEE
 16141                           wreg	equ	0xFE8
 16142                           indf1	equ	0xFE7
 16143                           plusw1	equ	0xFE3
 16144                           fsr1h	equ	0xFE2
 16145                           fsr1l	equ	0xFE1
 16146                           indf2	equ	0xFDF
 16147                           postinc2	equ	0xFDE
 16148                           plusw2	equ	0xFDB
 16149                           fsr2h	equ	0xFDA
 16150                           fsr2l	equ	0xFD9
 16151                           status	equ	0xFD8
 16152                           
 16153 ;; *************** function _LCD_enable_pulse *****************
 16154 ;; Defined at:
 16155 ;;		line 49 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 16156 ;; Parameters:    Size  Location     Type
 16157 ;;		None
 16158 ;; Auto vars:     Size  Location     Type
 16159 ;;		None
 16160 ;; Return value:  Size  Location     Type
 16161 ;;		None               void
 16162 ;; Registers used:
 16163 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16164 ;; Tracked objects:
 16165 ;;		On entry : 0/0
 16166 ;;		On exit  : 0/0
 16167 ;;		Unchanged: 0/0
 16168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16173 ;;Total ram usage:        0 bytes
 16174 ;; Hardware stack levels used:    1
 16175 ;; Hardware stack levels required when called:    5
 16176 ;; This function calls:
 16177 ;;		_delay_ms
 16178 ;; This function is called by:
 16179 ;;		_LCD_send_command
 16180 ;; This function uses a non-reentrant model
 16181 ;;
 16182                           
 16183                           	psect	text51
 16184  015E8E                     __ptext51:
 16185                           	opt stack 0
 16186  015E8E                     _LCD_enable_pulse:
 16187                           	opt stack 22
 16188                           
 16189                           ;src\LCD_44780.c: 51: LATCbits.LATC1 = 1;
 16190                           
 16191                           ;incstack = 0
 16192  015E8E  828B               	bsf	3979,1,c	;volatile
 16193                           
 16194                           ;src\LCD_44780.c: 52: delay_ms (1);
 16195  015E90  0E00               	movlw	0
 16196  015E92  0100               	movlb	0	; () banked
 16197  015E94  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
 16198  015E96  0E01               	movlw	1
 16199  015E98  6F76               	movwf	delay_ms@value_ms& (0+255),b
 16200  015E9A  EC35  F0AE         	call	_delay_ms	;wreg free
 16201                           
 16202                           ;src\LCD_44780.c: 53: LATCbits.LATC1 = 0;
 16203  015E9E  928B               	bcf	3979,1,c	;volatile
 16204                           
 16205                           ;src\LCD_44780.c: 54: delay_ms (1);
 16206  015EA0  0E00               	movlw	0
 16207  015EA2  0100               	movlb	0	; () banked
 16208  015EA4  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
 16209  015EA6  0E01               	movlw	1
 16210  015EA8  6F76               	movwf	delay_ms@value_ms& (0+255),b
 16211  015EAA  EC35  F0AE         	call	_delay_ms	;wreg free
 16212  015EAE  0012               	return		;funcret
 16213  015EB0                     __end_of_LCD_enable_pulse:
 16214                           	opt stack 0
 16215                           tblptru	equ	0xFF8
 16216                           tblptrh	equ	0xFF7
 16217                           tblptrl	equ	0xFF6
 16218                           tablat	equ	0xFF5
 16219                           prodh	equ	0xFF4
 16220                           prodl	equ	0xFF3
 16221                           intcon	equ	0xFF2
 16222                           postinc0	equ	0xFEE
 16223                           wreg	equ	0xFE8
 16224                           indf1	equ	0xFE7
 16225                           plusw1	equ	0xFE3
 16226                           fsr1h	equ	0xFE2
 16227                           fsr1l	equ	0xFE1
 16228                           indf2	equ	0xFDF
 16229                           postinc2	equ	0xFDE
 16230                           plusw2	equ	0xFDB
 16231                           fsr2h	equ	0xFDA
 16232                           fsr2l	equ	0xFD9
 16233                           status	equ	0xFD8
 16234                           
 16235 ;; *************** function _delay_ms *****************
 16236 ;; Defined at:
 16237 ;;		line 61 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 16238 ;; Parameters:    Size  Location     Type
 16239 ;;  value_ms        2   22[BANK0 ] unsigned int 
 16240 ;; Auto vars:     Size  Location     Type
 16241 ;;		None
 16242 ;; Return value:  Size  Location     Type
 16243 ;;		None               void
 16244 ;; Registers used:
 16245 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16246 ;; Tracked objects:
 16247 ;;		On entry : 0/0
 16248 ;;		On exit  : 0/0
 16249 ;;		Unchanged: 0/0
 16250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16251 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16254 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16255 ;;Total ram usage:        2 bytes
 16256 ;; Hardware stack levels used:    1
 16257 ;; Hardware stack levels required when called:    4
 16258 ;; This function calls:
 16259 ;;		___wmul
 16260 ;; This function is called by:
 16261 ;;		_LCD_enable_pulse
 16262 ;;		_LCD_initialize
 16263 ;;		_main
 16264 ;;		_delay_s
 16265 ;; This function uses a non-reentrant model
 16266 ;;
 16267                           
 16268                           	psect	text52
 16269  015C6A                     __ptext52:
 16270                           	opt stack 0
 16271  015C6A                     _delay_ms:
 16272                           	opt stack 26
 16273                           
 16274                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 16275                           
 16276                           ;incstack = 0
 16277  015C6A  C0EB  F070         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 16278  015C6E  0100               	movlb	0	; () banked
 16279  015C70  6B71               	clrf	(___wmul@multiplier+1)& (0+255),b
 16280  015C72  C076  F072         	movff	delay_ms@value_ms,___wmul@multiplicand
 16281  015C76  C077  F073         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 16282  015C7A  EC52  F0AE         	call	___wmul	;wreg free
 16283  015C7E  C070  F0DF         	movff	?___wmul,_clock_counter_reference	;volatile
 16284  015C82  C071  F0E0         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 16285                           
 16286                           ;src\delay.c: 75: while (clock_counter_reference) {
 16287  015C86  D007               	goto	l591
 16288  015C88                     l7306:
 16289                           
 16290                           ;src\delay.c: 85: _delay(240);
 16291  015C88  0E50               	movlw	80
 16292  015C8A                     u11207:
 16293  015C8A  2EE8               	decfsz	wreg,f,c
 16294  015C8C  D7FE               	goto	u11207
 16295                           
 16296                           ;src\delay.c: 88: clock_counter_reference--;
 16297  015C8E  0100               	movlb	0	; () banked
 16298  015C90  07DF               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 16299  015C92  A0D8               	btfss	status,0,c
 16300  015C94  07E0               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 16301  015C96                     l591:
 16302  015C96  0100               	movlb	0	; () banked
 16303  015C98  51DF               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 16304  015C9A  0100               	movlb	0	; () banked
 16305  015C9C  11E0               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 16306  015C9E  A4D8               	btfss	status,2,c
 16307  015CA0  D7F3               	goto	l7306
 16308                           
 16309                           ; BSR set to: 0
 16310                           
 16311                           ; BSR set to: 0
 16312  015CA2  0012               	return		;funcret
 16313  015CA4                     __end_of_delay_ms:
 16314                           	opt stack 0
 16315                           tblptru	equ	0xFF8
 16316                           tblptrh	equ	0xFF7
 16317                           tblptrl	equ	0xFF6
 16318                           tablat	equ	0xFF5
 16319                           prodh	equ	0xFF4
 16320                           prodl	equ	0xFF3
 16321                           intcon	equ	0xFF2
 16322                           postinc0	equ	0xFEE
 16323                           wreg	equ	0xFE8
 16324                           indf1	equ	0xFE7
 16325                           plusw1	equ	0xFE3
 16326                           fsr1h	equ	0xFE2
 16327                           fsr1l	equ	0xFE1
 16328                           indf2	equ	0xFDF
 16329                           postinc2	equ	0xFDE
 16330                           plusw2	equ	0xFDB
 16331                           fsr2h	equ	0xFDA
 16332                           fsr2l	equ	0xFD9
 16333                           status	equ	0xFD8
 16334                           
 16335 ;; *************** function ___wmul *****************
 16336 ;; Defined at:
 16337 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
 16338 ;; Parameters:    Size  Location     Type
 16339 ;;  multiplier      2   16[BANK0 ] unsigned int 
 16340 ;;  multiplicand    2   18[BANK0 ] unsigned int 
 16341 ;; Auto vars:     Size  Location     Type
 16342 ;;  product         2   20[BANK0 ] unsigned int 
 16343 ;; Return value:  Size  Location     Type
 16344 ;;                  2   16[BANK0 ] unsigned int 
 16345 ;; Registers used:
 16346 ;;		wreg, status,2, status,0, prodl, prodh
 16347 ;; Tracked objects:
 16348 ;;		On entry : 0/0
 16349 ;;		On exit  : 0/0
 16350 ;;		Unchanged: 0/0
 16351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16352 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16353 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16355 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16356 ;;Total ram usage:        6 bytes
 16357 ;; Hardware stack levels used:    1
 16358 ;; Hardware stack levels required when called:    3
 16359 ;; This function calls:
 16360 ;;		Nothing
 16361 ;; This function is called by:
 16362 ;;		_delay_ms
 16363 ;;		_sprintf
 16364 ;; This function uses a non-reentrant model
 16365 ;;
 16366                           
 16367                           	psect	text53
 16368  015CA4                     __ptext53:
 16369                           	opt stack 0
 16370  015CA4                     ___wmul:
 16371                           	opt stack 26
 16372                           
 16373                           ; BSR set to: 0
 16374                           ;incstack = 0
 16375  015CA4  0100               	movlb	0	; () banked
 16376  015CA6  5170               	movf	___wmul@multiplier& (0+255),w,b
 16377  015CA8  0100               	movlb	0	; () banked
 16378  015CAA  0372               	mulwf	___wmul@multiplicand& (0+255),b
 16379  015CAC  CFF3 F074          	movff	prodl,___wmul@product
 16380  015CB0  CFF4 F075          	movff	prodh,___wmul@product+1
 16381  015CB4  0100               	movlb	0	; () banked
 16382  015CB6  5170               	movf	___wmul@multiplier& (0+255),w,b
 16383  015CB8  0100               	movlb	0	; () banked
 16384  015CBA  0373               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 16385  015CBC  50F3               	movf	prodl,w,c
 16386  015CBE  0100               	movlb	0	; () banked
 16387  015CC0  2775               	addwf	(___wmul@product+1)& (0+255),f,b
 16388  015CC2  0100               	movlb	0	; () banked
 16389  015CC4  5171               	movf	(___wmul@multiplier+1)& (0+255),w,b
 16390  015CC6  0100               	movlb	0	; () banked
 16391  015CC8  0372               	mulwf	___wmul@multiplicand& (0+255),b
 16392  015CCA  50F3               	movf	prodl,w,c
 16393  015CCC  0100               	movlb	0	; () banked
 16394  015CCE  2775               	addwf	(___wmul@product+1)& (0+255),f,b
 16395                           
 16396                           ; BSR set to: 0
 16397  015CD0  C074  F070         	movff	___wmul@product,?___wmul
 16398  015CD4  C075  F071         	movff	___wmul@product+1,?___wmul+1
 16399  015CD8  0012               	return	
 16400                           
 16401                           ; BSR set to: 0
 16402                           
 16403                           ; BSR set to: 0
 16404  015CDA  0012               	return		;funcret
 16405  015CDC                     __end_of___wmul:
 16406                           	opt stack 0
 16407                           tblptru	equ	0xFF8
 16408                           tblptrh	equ	0xFF7
 16409                           tblptrl	equ	0xFF6
 16410                           tablat	equ	0xFF5
 16411                           prodh	equ	0xFF4
 16412                           prodl	equ	0xFF3
 16413                           intcon	equ	0xFF2
 16414                           postinc0	equ	0xFEE
 16415                           wreg	equ	0xFE8
 16416                           indf1	equ	0xFE7
 16417                           plusw1	equ	0xFE3
 16418                           fsr1h	equ	0xFE2
 16419                           fsr1l	equ	0xFE1
 16420                           indf2	equ	0xFDF
 16421                           postinc2	equ	0xFDE
 16422                           plusw2	equ	0xFDB
 16423                           fsr2h	equ	0xFDA
 16424                           fsr2l	equ	0xFD9
 16425                           status	equ	0xFD8
 16426                           
 16427 ;; *************** function _Joystick_Polling *****************
 16428 ;; Defined at:
 16429 ;;		line 601 in file "RemoteCan.c"
 16430 ;; Parameters:    Size  Location     Type
 16431 ;;		None
 16432 ;; Auto vars:     Size  Location     Type
 16433 ;;  i               1   16[BANK0 ] unsigned char 
 16434 ;; Return value:  Size  Location     Type
 16435 ;;		None               void
 16436 ;; Registers used:
 16437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16438 ;; Tracked objects:
 16439 ;;		On entry : 0/0
 16440 ;;		On exit  : 0/0
 16441 ;;		Unchanged: 0/0
 16442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16444 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16446 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16447 ;;Total ram usage:        1 bytes
 16448 ;; Hardware stack levels used:    1
 16449 ;; Hardware stack levels required when called:    3
 16450 ;; This function calls:
 16451 ;;		Nothing
 16452 ;; This function is called by:
 16453 ;;		_main
 16454 ;; This function uses a non-reentrant model
 16455 ;;
 16456                           
 16457                           	psect	text54
 16458  015BB2                     __ptext54:
 16459                           	opt stack 0
 16460  015BB2                     _Joystick_Polling:
 16461                           	opt stack 27
 16462                           
 16463                           ;RemoteCan.c: 602: for (unsigned char i = 0; i < 2; i++) {
 16464                           
 16465                           ; BSR set to: 0
 16466                           ;incstack = 0
 16467  015BB2  0E00               	movlw	0
 16468  015BB4  0100               	movlb	0	; () banked
 16469  015BB6  6F70               	movwf	Joystick_Polling@i& (0+255),b
 16470                           
 16471                           ; BSR set to: 0
 16472  015BB8  0E01               	movlw	1
 16473  015BBA  0100               	movlb	0	; () banked
 16474  015BBC  6570               	cpfsgt	Joystick_Polling@i& (0+255),b
 16475  015BBE  D002               	goto	l947
 16476  015BC0  0012               	return	
 16477                           
 16478                           ; BSR set to: 0
 16479  015BC2  0012               	return	
 16480  015BC4                     l947:
 16481                           
 16482                           ; BSR set to: 0
 16483                           ;RemoteCan.c: 603: ADCON0bits.GO = 1;
 16484  015BC4  82C2               	bsf	4034,1,c	;volatile
 16485                           
 16486                           ;RemoteCan.c: 604: while (ADCON0bits.GO);
 16487  015BC6  D000               	goto	l949
 16488  015BC8                     l949:
 16489  015BC8  B2C2               	btfsc	4034,1,c	;volatile
 16490  015BCA  D7FE               	goto	l949
 16491                           
 16492                           ;RemoteCan.c: 605: JoystickValues[i] = ADRESH;
 16493  015BCC  0100               	movlb	0	; () banked
 16494  015BCE  5170               	movf	Joystick_Polling@i& (0+255),w,b
 16495  015BD0  0D01               	mullw	1
 16496  015BD2  0EDB               	movlw	low _JoystickValues
 16497  015BD4  24F3               	addwf	prodl,w,c
 16498  015BD6  6ED9               	movwf	fsr2l,c
 16499  015BD8  0E00               	movlw	high _JoystickValues
 16500  015BDA  20F4               	addwfc	prodh,w,c
 16501  015BDC  6EDA               	movwf	fsr2h,c
 16502  015BDE  CFC4 FFDF          	movff	4036,indf2	;volatile
 16503                           
 16504                           ; BSR set to: 0
 16505                           ;RemoteCan.c: 606: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 16506  015BE2  74C2               	btg	4034,2,c	;volatile
 16507                           
 16508                           ; BSR set to: 0
 16509  015BE4  0100               	movlb	0	; () banked
 16510  015BE6  2B70               	incf	Joystick_Polling@i& (0+255),f,b
 16511                           
 16512                           ; BSR set to: 0
 16513  015BE8  0E01               	movlw	1
 16514  015BEA  0100               	movlb	0	; () banked
 16515  015BEC  6570               	cpfsgt	Joystick_Polling@i& (0+255),b
 16516  015BEE  D7EA               	goto	l947
 16517  015BF0  0012               	return	
 16518                           
 16519                           ; BSR set to: 0
 16520                           
 16521                           ; BSR set to: 0
 16522  015BF2  0012               	return		;funcret
 16523  015BF4                     __end_of_Joystick_Polling:
 16524                           	opt stack 0
 16525                           tblptru	equ	0xFF8
 16526                           tblptrh	equ	0xFF7
 16527                           tblptrl	equ	0xFF6
 16528                           tablat	equ	0xFF5
 16529                           prodh	equ	0xFF4
 16530                           prodl	equ	0xFF3
 16531                           intcon	equ	0xFF2
 16532                           postinc0	equ	0xFEE
 16533                           wreg	equ	0xFE8
 16534                           indf1	equ	0xFE7
 16535                           plusw1	equ	0xFE3
 16536                           fsr1h	equ	0xFE2
 16537                           fsr1l	equ	0xFE1
 16538                           indf2	equ	0xFDF
 16539                           postinc2	equ	0xFDE
 16540                           plusw2	equ	0xFDB
 16541                           fsr2h	equ	0xFDA
 16542                           fsr2l	equ	0xFD9
 16543                           status	equ	0xFD8
 16544                           
 16545 ;; *************** function _F2_Button_Polling *****************
 16546 ;; Defined at:
 16547 ;;		line 591 in file "RemoteCan.c"
 16548 ;; Parameters:    Size  Location     Type
 16549 ;;		None
 16550 ;; Auto vars:     Size  Location     Type
 16551 ;;		None
 16552 ;; Return value:  Size  Location     Type
 16553 ;;		None               void
 16554 ;; Registers used:
 16555 ;;		None
 16556 ;; Tracked objects:
 16557 ;;		On entry : 0/0
 16558 ;;		On exit  : 0/0
 16559 ;;		Unchanged: 0/0
 16560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16565 ;;Total ram usage:        0 bytes
 16566 ;; Hardware stack levels used:    1
 16567 ;; Hardware stack levels required when called:    3
 16568 ;; This function calls:
 16569 ;;		Nothing
 16570 ;; This function is called by:
 16571 ;;		_main
 16572 ;; This function uses a non-reentrant model
 16573 ;;
 16574                           
 16575                           	psect	text55
 16576  015F32                     __ptext55:
 16577                           	opt stack 0
 16578  015F32                     _F2_Button_Polling:
 16579                           	opt stack 27
 16580                           
 16581                           ;RemoteCan.c: 592: if ((PORTBbits.RB1 == 0) || (wait_low_3 == 0)) {
 16582                           
 16583                           ; BSR set to: 0
 16584                           ;incstack = 0
 16585  015F32  A281               	btfss	3969,1,c	;volatile
 16586  015F34  D002               	goto	l942
 16587  015F36  B84D               	btfsc	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 16588  015F38  0012               	return	
 16589  015F3A                     l942:
 16590                           
 16591                           ;RemoteCan.c: 593: wait_low_3 = 0;
 16592  015F3A  984D               	bcf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 16593                           
 16594                           ;RemoteCan.c: 594: if (PORTBbits.RB1 == 1) {
 16595  015F3C  A281               	btfss	3969,1,c	;volatile
 16596  015F3E  0012               	return	
 16597                           
 16598                           ;RemoteCan.c: 595: F2_switch = ~F2_switch;
 16599  015F40  784B               	btg	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 16600                           
 16601                           ;RemoteCan.c: 596: wait_low_3 = 1;
 16602  015F42  884D               	bsf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 16603  015F44  0012               	return	
 16604  015F46  0012               	return		;funcret
 16605  015F48                     __end_of_F2_Button_Polling:
 16606                           	opt stack 0
 16607                           tblptru	equ	0xFF8
 16608                           tblptrh	equ	0xFF7
 16609                           tblptrl	equ	0xFF6
 16610                           tablat	equ	0xFF5
 16611                           prodh	equ	0xFF4
 16612                           prodl	equ	0xFF3
 16613                           intcon	equ	0xFF2
 16614                           postinc0	equ	0xFEE
 16615                           wreg	equ	0xFE8
 16616                           indf1	equ	0xFE7
 16617                           plusw1	equ	0xFE3
 16618                           fsr1h	equ	0xFE2
 16619                           fsr1l	equ	0xFE1
 16620                           indf2	equ	0xFDF
 16621                           postinc2	equ	0xFDE
 16622                           plusw2	equ	0xFDB
 16623                           fsr2h	equ	0xFDA
 16624                           fsr2l	equ	0xFD9
 16625                           status	equ	0xFD8
 16626                           
 16627 ;; *************** function _F1_Button_Polling *****************
 16628 ;; Defined at:
 16629 ;;		line 581 in file "RemoteCan.c"
 16630 ;; Parameters:    Size  Location     Type
 16631 ;;		None
 16632 ;; Auto vars:     Size  Location     Type
 16633 ;;		None
 16634 ;; Return value:  Size  Location     Type
 16635 ;;		None               void
 16636 ;; Registers used:
 16637 ;;		None
 16638 ;; Tracked objects:
 16639 ;;		On entry : 0/0
 16640 ;;		On exit  : 0/0
 16641 ;;		Unchanged: 0/0
 16642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16647 ;;Total ram usage:        0 bytes
 16648 ;; Hardware stack levels used:    1
 16649 ;; Hardware stack levels required when called:    3
 16650 ;; This function calls:
 16651 ;;		Nothing
 16652 ;; This function is called by:
 16653 ;;		_main
 16654 ;; This function uses a non-reentrant model
 16655 ;;
 16656                           
 16657                           	psect	text56
 16658  015F48                     __ptext56:
 16659                           	opt stack 0
 16660  015F48                     _F1_Button_Polling:
 16661                           	opt stack 27
 16662                           
 16663                           ;RemoteCan.c: 582: if ((PORTBbits.RB4 == 0) || (wait_low_2 == 0)) {
 16664                           
 16665                           ;incstack = 0
 16666  015F48  A881               	btfss	3969,4,c	;volatile
 16667  015F4A  D002               	goto	l935
 16668  015F4C  B64D               	btfsc	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 16669  015F4E  0012               	return	
 16670  015F50                     l935:
 16671                           
 16672                           ;RemoteCan.c: 583: wait_low_2 = 0;
 16673  015F50  964D               	bcf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 16674                           
 16675                           ;RemoteCan.c: 584: if (PORTBbits.RB4 == 1) {
 16676  015F52  A881               	btfss	3969,4,c	;volatile
 16677  015F54  0012               	return	
 16678                           
 16679                           ;RemoteCan.c: 585: F1_switch = ~F1_switch;
 16680  015F56  764B               	btg	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 16681                           
 16682                           ;RemoteCan.c: 586: wait_low_2 = 1;
 16683  015F58  864D               	bsf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 16684  015F5A  0012               	return	
 16685  015F5C  0012               	return		;funcret
 16686  015F5E                     __end_of_F1_Button_Polling:
 16687                           	opt stack 0
 16688                           tblptru	equ	0xFF8
 16689                           tblptrh	equ	0xFF7
 16690                           tblptrl	equ	0xFF6
 16691                           tablat	equ	0xFF5
 16692                           prodh	equ	0xFF4
 16693                           prodl	equ	0xFF3
 16694                           intcon	equ	0xFF2
 16695                           postinc0	equ	0xFEE
 16696                           wreg	equ	0xFE8
 16697                           indf1	equ	0xFE7
 16698                           plusw1	equ	0xFE3
 16699                           fsr1h	equ	0xFE2
 16700                           fsr1l	equ	0xFE1
 16701                           indf2	equ	0xFDF
 16702                           postinc2	equ	0xFDE
 16703                           plusw2	equ	0xFDB
 16704                           fsr2h	equ	0xFDA
 16705                           fsr2l	equ	0xFD9
 16706                           status	equ	0xFD8
 16707                           
 16708 ;; *************** function _CAN_Tx *****************
 16709 ;; Defined at:
 16710 ;;		line 610 in file "RemoteCan.c"
 16711 ;; Parameters:    Size  Location     Type
 16712 ;;		None
 16713 ;; Auto vars:     Size  Location     Type
 16714 ;;		None
 16715 ;; Return value:  Size  Location     Type
 16716 ;;		None               void
 16717 ;; Registers used:
 16718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16719 ;; Tracked objects:
 16720 ;;		On entry : 0/0
 16721 ;;		On exit  : 0/0
 16722 ;;		Unchanged: 0/0
 16723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16728 ;;Total ram usage:        0 bytes
 16729 ;; Hardware stack levels used:    1
 16730 ;; Hardware stack levels required when called:    4
 16731 ;; This function calls:
 16732 ;;		_CANisTxReady
 16733 ;;		_CANsendMessage
 16734 ;; This function is called by:
 16735 ;;		_main
 16736 ;; This function uses a non-reentrant model
 16737 ;;
 16738                           
 16739                           	psect	text57
 16740  01537C                     __ptext57:
 16741                           	opt stack 0
 16742  01537C                     _CAN_Tx:
 16743                           	opt stack 26
 16744                           
 16745                           ;RemoteCan.c: 612: while (CANisTxReady() != 1);
 16746                           
 16747                           ;incstack = 0
 16748  01537C  D000               	goto	l6504
 16749  01537E                     l6504:
 16750  01537E  EC34  F0AF         	call	_CANisTxReady	;wreg free
 16751  015382  06E8               	decf	wreg,f,c
 16752  015384  A4D8               	btfss	status,2,c
 16753  015386  D7FB               	goto	l6504
 16754                           
 16755                           ;RemoteCan.c: 613: CANsendMessage(0b00000000111, data_steering, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 16756  015388  0E07               	movlw	7
 16757  01538A  0100               	movlb	0	; () banked
 16758  01538C  6F70               	movwf	CANsendMessage@identifier& (0+255),b
 16759  01538E  0E00               	movlw	0
 16760  015390  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 16761  015392  0E00               	movlw	0
 16762  015394  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 16763  015396  0E00               	movlw	0
 16764  015398  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 16765  01539A  0EEA               	movlw	low _data_steering
 16766  01539C  0100               	movlb	0	; () banked
 16767  01539E  6F74               	movwf	CANsendMessage@data& (0+255),b
 16768  0153A0  0E00               	movlw	high _data_steering
 16769  0153A2  0100               	movlb	0	; () banked
 16770  0153A4  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
 16771  0153A6  0E08               	movlw	8
 16772  0153A8  0100               	movlb	0	; () banked
 16773  0153AA  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
 16774  0153AC  0EBC               	movlw	188
 16775  0153AE  0100               	movlb	0	; () banked
 16776  0153B0  6F77               	movwf	CANsendMessage@flags& (0+255),b
 16777  0153B2  EC1B  F08A         	call	_CANsendMessage	;wreg free
 16778                           
 16779                           ;RemoteCan.c: 616: data_speed[0] = set_speed;
 16780  0153B6  C0E1  F0E9         	movff	_set_speed,_data_speed	;volatile
 16781                           
 16782                           ;RemoteCan.c: 617: data_speed[1] = (set_speed >> 8);
 16783  0153BA  0100               	movlb	0	; () banked
 16784  0153BC  51E2               	movf	(_set_speed+1)& (0+255),w,b	;volatile
 16785  0153BE  0100               	movlb	0	; () banked
 16786  0153C0  6FEA               	movwf	(_data_speed+1)& (0+255),b
 16787                           
 16788                           ; BSR set to: 0
 16789                           ;RemoteCan.c: 618: data_speed[2] = dir;
 16790  0153C2  C0E3  F0EB         	movff	_dir,_data_speed+2	;volatile
 16791                           
 16792                           ; BSR set to: 0
 16793                           
 16794                           ;RemoteCan.c: 619: while (CANisTxReady() != 1);
 16795  0153C6  D000               	goto	l6514
 16796  0153C8                     l6514:
 16797  0153C8  EC34  F0AF         	call	_CANisTxReady	;wreg free
 16798  0153CC  06E8               	decf	wreg,f,c
 16799  0153CE  A4D8               	btfss	status,2,c
 16800  0153D0  D7FB               	goto	l6514
 16801                           
 16802                           ;RemoteCan.c: 620: CANsendMessage(0b00000000101, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 16803  0153D2  0E05               	movlw	5
 16804  0153D4  0100               	movlb	0	; () banked
 16805  0153D6  6F70               	movwf	CANsendMessage@identifier& (0+255),b
 16806  0153D8  0E00               	movlw	0
 16807  0153DA  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 16808  0153DC  0E00               	movlw	0
 16809  0153DE  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 16810  0153E0  0E00               	movlw	0
 16811  0153E2  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 16812  0153E4  0EE9               	movlw	low _data_speed
 16813  0153E6  0100               	movlb	0	; () banked
 16814  0153E8  6F74               	movwf	CANsendMessage@data& (0+255),b
 16815  0153EA  0E00               	movlw	high _data_speed
 16816  0153EC  0100               	movlb	0	; () banked
 16817  0153EE  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
 16818  0153F0  0E08               	movlw	8
 16819  0153F2  0100               	movlb	0	; () banked
 16820  0153F4  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
 16821  0153F6  0EBC               	movlw	188
 16822  0153F8  0100               	movlb	0	; () banked
 16823  0153FA  6F77               	movwf	CANsendMessage@flags& (0+255),b
 16824  0153FC  EC1B  F08A         	call	_CANsendMessage	;wreg free
 16825                           
 16826                           ;RemoteCan.c: 623: while (CANisTxReady() != 1);
 16827  015400  D000               	goto	l6518
 16828  015402                     l6518:
 16829  015402  EC34  F0AF         	call	_CANisTxReady	;wreg free
 16830  015406  06E8               	decf	wreg,f,c
 16831  015408  A4D8               	btfss	status,2,c
 16832  01540A  D7FB               	goto	l6518
 16833                           
 16834                           ;RemoteCan.c: 624: CANsendMessage(0b00000000110, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 16835  01540C  0E06               	movlw	6
 16836  01540E  0100               	movlb	0	; () banked
 16837  015410  6F70               	movwf	CANsendMessage@identifier& (0+255),b
 16838  015412  0E00               	movlw	0
 16839  015414  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 16840  015416  0E00               	movlw	0
 16841  015418  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 16842  01541A  0E00               	movlw	0
 16843  01541C  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 16844  01541E  0EE8               	movlw	low _data_brake
 16845  015420  0100               	movlb	0	; () banked
 16846  015422  6F74               	movwf	CANsendMessage@data& (0+255),b
 16847  015424  0E00               	movlw	high _data_brake
 16848  015426  0100               	movlb	0	; () banked
 16849  015428  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
 16850  01542A  0E08               	movlw	8
 16851  01542C  0100               	movlb	0	; () banked
 16852  01542E  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
 16853  015430  0EBC               	movlw	188
 16854  015432  0100               	movlb	0	; () banked
 16855  015434  6F77               	movwf	CANsendMessage@flags& (0+255),b
 16856  015436  EC1B  F08A         	call	_CANsendMessage	;wreg free
 16857  01543A  0012               	return		;funcret
 16858  01543C                     __end_of_CAN_Tx:
 16859                           	opt stack 0
 16860                           tblptru	equ	0xFF8
 16861                           tblptrh	equ	0xFF7
 16862                           tblptrl	equ	0xFF6
 16863                           tablat	equ	0xFF5
 16864                           prodh	equ	0xFF4
 16865                           prodl	equ	0xFF3
 16866                           intcon	equ	0xFF2
 16867                           postinc0	equ	0xFEE
 16868                           wreg	equ	0xFE8
 16869                           indf1	equ	0xFE7
 16870                           plusw1	equ	0xFE3
 16871                           fsr1h	equ	0xFE2
 16872                           fsr1l	equ	0xFE1
 16873                           indf2	equ	0xFDF
 16874                           postinc2	equ	0xFDE
 16875                           plusw2	equ	0xFDB
 16876                           fsr2h	equ	0xFDA
 16877                           fsr2l	equ	0xFD9
 16878                           status	equ	0xFD8
 16879                           
 16880 ;; *************** function _CANsendMessage *****************
 16881 ;; Defined at:
 16882 ;;		line 294 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 16883 ;; Parameters:    Size  Location     Type
 16884 ;;  identifier      4   16[BANK0 ] unsigned long 
 16885 ;;  data            2   20[BANK0 ] PTR unsigned char 
 16886 ;;		 -> data_speed(1), park_assist_state(8), data_steering(1), data_brake(1), 
 16887 ;;		 -> data(1), 
 16888 ;;  dataLength      1   22[BANK0 ] unsigned char 
 16889 ;;  flags           1   23[BANK0 ] enum E16950
 16890 ;; Auto vars:     Size  Location     Type
 16891 ;;  tamp            4   28[BANK0 ] unsigned long 
 16892 ;; Return value:  Size  Location     Type
 16893 ;;		None               void
 16894 ;; Registers used:
 16895 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16896 ;; Tracked objects:
 16897 ;;		On entry : 0/0
 16898 ;;		On exit  : 0/0
 16899 ;;		Unchanged: 0/0
 16900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16901 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16902 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16903 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16904 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16905 ;;Total ram usage:       16 bytes
 16906 ;; Hardware stack levels used:    1
 16907 ;; Hardware stack levels required when called:    3
 16908 ;; This function calls:
 16909 ;;		Nothing
 16910 ;; This function is called by:
 16911 ;;		_main
 16912 ;;		_LCD_Handler
 16913 ;;		_CAN_Tx
 16914 ;; This function uses a non-reentrant model
 16915 ;;
 16916                           
 16917                           	psect	text58
 16918  011436                     __ptext58:
 16919                           	opt stack 0
 16920  011436                     _CANsendMessage:
 16921                           	opt stack 26
 16922                           
 16923                           ;inc\CANlib.h: 296: unsigned long tamp;
 16924                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 16925                           
 16926                           ;incstack = 0
 16927  011436  010F               	movlb	15	; () banked
 16928  011438  B740               	btfsc	64,3,b	;volatile
 16929  01143A  D142               	goto	l385
 16930                           
 16931                           ; BSR set to: 15
 16932                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 16933  01143C  C076  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
 16934                           
 16935                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 16936  011440  0100               	movlb	0	; () banked
 16937  011442  AD77               	btfss	CANsendMessage@flags& (0+255),6,b
 16938  011444  D003               	goto	l386
 16939                           
 16940                           ; BSR set to: 0
 16941                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 16942  011446  010F               	movlb	15	; () banked
 16943  011448  8D45               	bsf	69,6,b	;volatile
 16944  01144A  D002               	goto	l387
 16945  01144C                     l386:
 16946                           
 16947                           ; BSR set to: 0
 16948                           ;inc\CANlib.h: 302: else
 16949                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 16950  01144C  010F               	movlb	15	; () banked
 16951  01144E  9D45               	bcf	69,6,b	;volatile
 16952  011450                     l387:
 16953                           
 16954                           ; BSR set to: 15
 16955                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 16956  011450  0100               	movlb	0	; () banked
 16957  011452  A777               	btfss	CANsendMessage@flags& (0+255),3,b
 16958  011454  D07A               	goto	l388
 16959                           
 16960                           ; BSR set to: 0
 16961                           ;inc\CANlib.h: 306: {
 16962                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 16963  011456  0100               	movlb	0	; () banked
 16964  011458  5170               	movf	CANsendMessage@identifier& (0+255),w,b
 16965  01145A  0100               	movlb	0	; () banked
 16966  01145C  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 16967  01145E  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16968  011460  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16969  011462  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16970                           
 16971                           ; BSR set to: 0
 16972                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 16973  011464  C07C  FF44         	movff	CANsendMessage@tamp,3908	;volatile
 16974                           
 16975                           ; BSR set to: 0
 16976                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 16977  011468  0E00               	movlw	0
 16978  01146A  0100               	movlb	0	; () banked
 16979  01146C  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 16980  01146E  0100               	movlb	0	; () banked
 16981  011470  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 16982  011472  0EFF               	movlw	255
 16983  011474  0100               	movlb	0	; () banked
 16984  011476  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16985  011478  0100               	movlb	0	; () banked
 16986  01147A  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16987  01147C  0E00               	movlw	0
 16988  01147E  0100               	movlb	0	; () banked
 16989  011480  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16990  011482  0100               	movlb	0	; () banked
 16991  011484  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16992  011486  0E00               	movlw	0
 16993  011488  0100               	movlb	0	; () banked
 16994  01148A  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16995  01148C  0100               	movlb	0	; () banked
 16996  01148E  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16997                           
 16998                           ; BSR set to: 0
 16999                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 17000  011490  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 17001  011494  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17002  011498  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17003  01149C  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17004  0114A0  C079  F078         	movff	??_CANsendMessage+1,??_CANsendMessage
 17005  0114A4  C07A  F079         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 17006  0114A8  C07B  F07A         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 17007  0114AC  0100               	movlb	0	; () banked
 17008  0114AE  6B7B               	clrf	(??_CANsendMessage+3)& (0+255),b
 17009  0114B0  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17010  0114B4  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17011  0114B8  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17012  0114BC  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17013                           
 17014                           ; BSR set to: 0
 17015                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 17016  0114C0  C07C  FF43         	movff	CANsendMessage@tamp,3907	;volatile
 17017                           
 17018                           ; BSR set to: 0
 17019                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 17020  0114C4  0E00               	movlw	0
 17021  0114C6  010F               	movlb	15	; () banked
 17022  0114C8  6F42               	movwf	66,b	;volatile
 17023                           
 17024                           ; BSR set to: 15
 17025                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 17026  0114CA  010F               	movlb	15	; () banked
 17027  0114CC  8742               	bsf	66,3,b	;volatile
 17028                           
 17029                           ; BSR set to: 15
 17030                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 17031  0114CE  0100               	movlb	0	; () banked
 17032  0114D0  A172               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 17033  0114D2  D002               	goto	l389
 17034                           
 17035                           ; BSR set to: 0
 17036                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 17037  0114D4  010F               	movlb	15	; () banked
 17038  0114D6  8142               	bsf	66,0,b	;volatile
 17039  0114D8                     l389:
 17040                           
 17041                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 17042  0114D8  0100               	movlb	0	; () banked
 17043  0114DA  A372               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 17044  0114DC  D002               	goto	l390
 17045                           
 17046                           ; BSR set to: 0
 17047                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 17048  0114DE  010F               	movlb	15	; () banked
 17049  0114E0  8342               	bsf	66,1,b	;volatile
 17050  0114E2                     l390:
 17051                           
 17052                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 17053  0114E2  0100               	movlb	0	; () banked
 17054  0114E4  A572               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 17055  0114E6  D002               	goto	l391
 17056                           
 17057                           ; BSR set to: 0
 17058                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 17059  0114E8  010F               	movlb	15	; () banked
 17060  0114EA  8B42               	bsf	66,5,b	;volatile
 17061  0114EC                     l391:
 17062                           
 17063                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 17064  0114EC  0100               	movlb	0	; () banked
 17065  0114EE  A772               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 17066  0114F0  D002               	goto	l392
 17067                           
 17068                           ; BSR set to: 0
 17069                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 17070  0114F2  010F               	movlb	15	; () banked
 17071  0114F4  8D42               	bsf	66,6,b	;volatile
 17072  0114F6                     l392:
 17073                           
 17074                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 17075  0114F6  0100               	movlb	0	; () banked
 17076  0114F8  A972               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 17077  0114FA  D003               	goto	l5724
 17078                           
 17079                           ; BSR set to: 0
 17080                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 17081  0114FC  010F               	movlb	15	; () banked
 17082  0114FE  8F42               	bsf	66,7,b	;volatile
 17083  011500  D000               	goto	l5724
 17084  011502                     l5724:
 17085                           
 17086                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 17087  011502  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 17088  011506  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17089  01150A  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17090  01150E  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17091  011512  0E16               	movlw	22
 17092  011514  D006               	goto	u6670
 17093  011516                     u6675:
 17094  011516  0100               	movlb	0	; () banked
 17095  011518  90D8               	bcf	status,0,c
 17096  01151A  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17097  01151C  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17098  01151E  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17099  011520  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 17100  011522                     u6670:
 17101  011522  2EE8               	decfsz	wreg,f,c
 17102  011524  D7F8               	goto	u6675
 17103  011526  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17104  01152A  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17105  01152E  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17106  011532  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17107                           
 17108                           ; BSR set to: 0
 17109                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 17110  011536  0100               	movlb	0	; () banked
 17111  011538  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 17112  01153A  0100               	movlb	0	; () banked
 17113  01153C  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17114  01153E  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17115  011540  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17116  011542  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17117                           
 17118                           ; BSR set to: 0
 17119                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 17120  011544  C07C  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 17121                           
 17122                           ;inc\CANlib.h: 332: }
 17123  011548  D05A               	goto	l5744
 17124  01154A                     l388:
 17125                           
 17126                           ; BSR set to: 0
 17127                           ;inc\CANlib.h: 334: else
 17128                           ;inc\CANlib.h: 336: {
 17129                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 17130  01154A  010F               	movlb	15	; () banked
 17131  01154C  9742               	bcf	66,3,b	;volatile
 17132                           
 17133                           ; BSR set to: 15
 17134                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 17135  01154E  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 17136  011552  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17137  011556  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17138  01155A  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17139  01155E  0E04               	movlw	4
 17140  011560  D006               	goto	u6680
 17141  011562                     u6685:
 17142  011562  0100               	movlb	0	; () banked
 17143  011564  90D8               	bcf	status,0,c
 17144  011566  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17145  011568  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17146  01156A  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17147  01156C  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 17148  01156E                     u6680:
 17149  01156E  2EE8               	decfsz	wreg,f,c
 17150  011570  D7F8               	goto	u6685
 17151  011572  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17152  011576  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17153  01157A  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17154  01157E  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17155                           
 17156                           ; BSR set to: 0
 17157                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 17158  011582  0100               	movlb	0	; () banked
 17159  011584  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 17160  011586  0100               	movlb	0	; () banked
 17161  011588  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17162  01158A  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17163  01158C  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17164  01158E  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17165                           
 17166                           ; BSR set to: 0
 17167                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 17168  011590  C07C  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 17169                           
 17170                           ; BSR set to: 0
 17171                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 17172  011594  0E07               	movlw	7
 17173  011596  0100               	movlb	0	; () banked
 17174  011598  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 17175  01159A  0100               	movlb	0	; () banked
 17176  01159C  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17177  01159E  0E00               	movlw	0
 17178  0115A0  0100               	movlb	0	; () banked
 17179  0115A2  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17180  0115A4  0100               	movlb	0	; () banked
 17181  0115A6  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17182  0115A8  0E00               	movlw	0
 17183  0115AA  0100               	movlb	0	; () banked
 17184  0115AC  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17185  0115AE  0100               	movlb	0	; () banked
 17186  0115B0  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17187  0115B2  0E00               	movlw	0
 17188  0115B4  0100               	movlb	0	; () banked
 17189  0115B6  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17190  0115B8  0100               	movlb	0	; () banked
 17191  0115BA  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17192                           
 17193                           ; BSR set to: 0
 17194                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 17195  0115BC  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 17196  0115C0  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17197  0115C4  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17198  0115C8  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17199  0115CC  0E05               	movlw	5
 17200  0115CE                     u6695:
 17201  0115CE  90D8               	bcf	status,0,c
 17202  0115D0  0100               	movlb	0	; () banked
 17203  0115D2  3778               	rlcf	??_CANsendMessage& (0+255),f,b
 17204  0115D4  3779               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 17205  0115D6  377A               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 17206  0115D8  377B               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 17207  0115DA  2EE8               	decfsz	wreg,f,c
 17208  0115DC  D7F8               	goto	u6695
 17209  0115DE  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17210  0115E2  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17211  0115E6  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17212  0115EA  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17213                           
 17214                           ; BSR set to: 0
 17215                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 17216  0115EE  010F               	movlb	15	; () banked
 17217  0115F0  5142               	movf	66,w,b	;volatile
 17218  0115F2  0B1F               	andlw	31
 17219  0115F4  010F               	movlb	15	; () banked
 17220  0115F6  6F42               	movwf	66,b	;volatile
 17221                           
 17222                           ; BSR set to: 15
 17223                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 17224  0115F8  C07C  FF42         	movff	CANsendMessage@tamp,3906	;volatile
 17225  0115FC  D000               	goto	l5744
 17226  0115FE                     l5744:
 17227                           
 17228                           ;inc\CANlib.h: 347: }
 17229                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 17230  0115FE  0100               	movlb	0	; () banked
 17231  011600  A177               	btfss	CANsendMessage@flags& (0+255),0,b
 17232  011602  D003               	goto	l395
 17233                           
 17234                           ; BSR set to: 0
 17235                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 17236  011604  010F               	movlb	15	; () banked
 17237  011606  8140               	bsf	64,0,b	;volatile
 17238  011608  D002               	goto	l396
 17239  01160A                     l395:
 17240                           
 17241                           ; BSR set to: 0
 17242                           ;inc\CANlib.h: 351: else
 17243                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 17244  01160A  010F               	movlb	15	; () banked
 17245  01160C  9140               	bcf	64,0,b	;volatile
 17246  01160E                     l396:
 17247                           
 17248                           ; BSR set to: 15
 17249                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 17250  01160E  0100               	movlb	0	; () banked
 17251  011610  A377               	btfss	CANsendMessage@flags& (0+255),1,b
 17252  011612  D003               	goto	l397
 17253                           
 17254                           ; BSR set to: 0
 17255                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 17256  011614  010F               	movlb	15	; () banked
 17257  011616  8340               	bsf	64,1,b	;volatile
 17258  011618  D003               	goto	l5750
 17259  01161A                     l397:
 17260                           
 17261                           ; BSR set to: 0
 17262                           ;inc\CANlib.h: 355: else
 17263                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 17264  01161A  010F               	movlb	15	; () banked
 17265  01161C  9340               	bcf	64,1,b	;volatile
 17266  01161E  D000               	goto	l5750
 17267  011620                     l5750:
 17268                           
 17269                           ; BSR set to: 15
 17270                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 17271  011620  C074  FFD9         	movff	CANsendMessage@data,fsr2l
 17272  011624  C075  FFDA         	movff	CANsendMessage@data+1,fsr2h
 17273  011628  50DF               	movf	indf2,w,c
 17274  01162A  010F               	movlb	15	; () banked
 17275  01162C  6F46               	movwf	70,b	;volatile
 17276                           
 17277                           ; BSR set to: 15
 17278                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 17279  01162E  0100               	movlb	0	; () banked
 17280  011630  EE20 F001          	lfsr	2,1
 17281  011634  5174               	movf	CANsendMessage@data& (0+255),w,b
 17282  011636  26D9               	addwf	fsr2l,f,c
 17283  011638  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17284  01163A  22DA               	addwfc	fsr2h,f,c
 17285  01163C  50DF               	movf	indf2,w,c
 17286  01163E  010F               	movlb	15	; () banked
 17287  011640  6F47               	movwf	71,b	;volatile
 17288                           
 17289                           ; BSR set to: 15
 17290                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 17291  011642  0100               	movlb	0	; () banked
 17292  011644  EE20 F002          	lfsr	2,2
 17293  011648  5174               	movf	CANsendMessage@data& (0+255),w,b
 17294  01164A  26D9               	addwf	fsr2l,f,c
 17295  01164C  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17296  01164E  22DA               	addwfc	fsr2h,f,c
 17297  011650  50DF               	movf	indf2,w,c
 17298  011652  010F               	movlb	15	; () banked
 17299  011654  6F48               	movwf	72,b	;volatile
 17300                           
 17301                           ; BSR set to: 15
 17302                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 17303  011656  0100               	movlb	0	; () banked
 17304  011658  EE20 F003          	lfsr	2,3
 17305  01165C  5174               	movf	CANsendMessage@data& (0+255),w,b
 17306  01165E  26D9               	addwf	fsr2l,f,c
 17307  011660  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17308  011662  22DA               	addwfc	fsr2h,f,c
 17309  011664  50DF               	movf	indf2,w,c
 17310  011666  010F               	movlb	15	; () banked
 17311  011668  6F49               	movwf	73,b	;volatile
 17312                           
 17313                           ; BSR set to: 15
 17314                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 17315  01166A  0100               	movlb	0	; () banked
 17316  01166C  EE20 F004          	lfsr	2,4
 17317  011670  5174               	movf	CANsendMessage@data& (0+255),w,b
 17318  011672  26D9               	addwf	fsr2l,f,c
 17319  011674  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17320  011676  22DA               	addwfc	fsr2h,f,c
 17321  011678  50DF               	movf	indf2,w,c
 17322  01167A  010F               	movlb	15	; () banked
 17323  01167C  6F4A               	movwf	74,b	;volatile
 17324                           
 17325                           ; BSR set to: 15
 17326                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 17327  01167E  0100               	movlb	0	; () banked
 17328  011680  EE20 F005          	lfsr	2,5
 17329  011684  5174               	movf	CANsendMessage@data& (0+255),w,b
 17330  011686  26D9               	addwf	fsr2l,f,c
 17331  011688  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17332  01168A  22DA               	addwfc	fsr2h,f,c
 17333  01168C  50DF               	movf	indf2,w,c
 17334  01168E  010F               	movlb	15	; () banked
 17335  011690  6F4B               	movwf	75,b	;volatile
 17336                           
 17337                           ; BSR set to: 15
 17338                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 17339  011692  0100               	movlb	0	; () banked
 17340  011694  EE20 F006          	lfsr	2,6
 17341  011698  5174               	movf	CANsendMessage@data& (0+255),w,b
 17342  01169A  26D9               	addwf	fsr2l,f,c
 17343  01169C  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17344  01169E  22DA               	addwfc	fsr2h,f,c
 17345  0116A0  50DF               	movf	indf2,w,c
 17346  0116A2  010F               	movlb	15	; () banked
 17347  0116A4  6F4C               	movwf	76,b	;volatile
 17348                           
 17349                           ; BSR set to: 15
 17350                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 17351  0116A6  0100               	movlb	0	; () banked
 17352  0116A8  EE20 F007          	lfsr	2,7
 17353  0116AC  5174               	movf	CANsendMessage@data& (0+255),w,b
 17354  0116AE  26D9               	addwf	fsr2l,f,c
 17355  0116B0  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17356  0116B2  22DA               	addwfc	fsr2h,f,c
 17357  0116B4  50DF               	movf	indf2,w,c
 17358  0116B6  010F               	movlb	15	; () banked
 17359  0116B8  6F4D               	movwf	77,b	;volatile
 17360                           
 17361                           ; BSR set to: 15
 17362                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 17363  0116BA  010F               	movlb	15	; () banked
 17364  0116BC  8740               	bsf	64,3,b	;volatile
 17365                           
 17366                           ; BSR set to: 15
 17367                           ;inc\CANlib.h: 368: return;
 17368  0116BE  0012               	return	
 17369  0116C0                     l385:
 17370                           
 17371                           ; BSR set to: 15
 17372                           ;inc\CANlib.h: 369: }
 17373                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 17374  0116C0  010F               	movlb	15	; () banked
 17375  0116C2  B730               	btfsc	48,3,b	;volatile
 17376  0116C4  D142               	goto	l400
 17377                           
 17378                           ; BSR set to: 15
 17379                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 17380  0116C6  C076  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
 17381                           
 17382                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 17383  0116CA  0100               	movlb	0	; () banked
 17384  0116CC  AD77               	btfss	CANsendMessage@flags& (0+255),6,b
 17385  0116CE  D003               	goto	l401
 17386                           
 17387                           ; BSR set to: 0
 17388                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 17389  0116D0  010F               	movlb	15	; () banked
 17390  0116D2  8D35               	bsf	53,6,b	;volatile
 17391  0116D4  D002               	goto	l402
 17392  0116D6                     l401:
 17393                           
 17394                           ; BSR set to: 0
 17395                           ;inc\CANlib.h: 378: else
 17396                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 17397  0116D6  010F               	movlb	15	; () banked
 17398  0116D8  9D35               	bcf	53,6,b	;volatile
 17399  0116DA                     l402:
 17400                           
 17401                           ; BSR set to: 15
 17402                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 17403  0116DA  0100               	movlb	0	; () banked
 17404  0116DC  A777               	btfss	CANsendMessage@flags& (0+255),3,b
 17405  0116DE  D07A               	goto	l403
 17406                           
 17407                           ; BSR set to: 0
 17408                           ;inc\CANlib.h: 382: {
 17409                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 17410  0116E0  0100               	movlb	0	; () banked
 17411  0116E2  5170               	movf	CANsendMessage@identifier& (0+255),w,b
 17412  0116E4  0100               	movlb	0	; () banked
 17413  0116E6  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17414  0116E8  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17415  0116EA  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17416  0116EC  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17417                           
 17418                           ; BSR set to: 0
 17419                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 17420  0116EE  C07C  FF34         	movff	CANsendMessage@tamp,3892	;volatile
 17421                           
 17422                           ; BSR set to: 0
 17423                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 17424  0116F2  0E00               	movlw	0
 17425  0116F4  0100               	movlb	0	; () banked
 17426  0116F6  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 17427  0116F8  0100               	movlb	0	; () banked
 17428  0116FA  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17429  0116FC  0EFF               	movlw	255
 17430  0116FE  0100               	movlb	0	; () banked
 17431  011700  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17432  011702  0100               	movlb	0	; () banked
 17433  011704  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17434  011706  0E00               	movlw	0
 17435  011708  0100               	movlb	0	; () banked
 17436  01170A  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17437  01170C  0100               	movlb	0	; () banked
 17438  01170E  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17439  011710  0E00               	movlw	0
 17440  011712  0100               	movlb	0	; () banked
 17441  011714  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17442  011716  0100               	movlb	0	; () banked
 17443  011718  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17444                           
 17445                           ; BSR set to: 0
 17446                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 17447  01171A  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 17448  01171E  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17449  011722  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17450  011726  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17451  01172A  C079  F078         	movff	??_CANsendMessage+1,??_CANsendMessage
 17452  01172E  C07A  F079         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 17453  011732  C07B  F07A         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 17454  011736  0100               	movlb	0	; () banked
 17455  011738  6B7B               	clrf	(??_CANsendMessage+3)& (0+255),b
 17456  01173A  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17457  01173E  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17458  011742  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17459  011746  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17460                           
 17461                           ; BSR set to: 0
 17462                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 17463  01174A  C07C  FF33         	movff	CANsendMessage@tamp,3891	;volatile
 17464                           
 17465                           ; BSR set to: 0
 17466                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 17467  01174E  0E00               	movlw	0
 17468  011750  010F               	movlb	15	; () banked
 17469  011752  6F32               	movwf	50,b	;volatile
 17470                           
 17471                           ; BSR set to: 15
 17472                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 17473  011754  010F               	movlb	15	; () banked
 17474  011756  8732               	bsf	50,3,b	;volatile
 17475                           
 17476                           ; BSR set to: 15
 17477                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 17478  011758  0100               	movlb	0	; () banked
 17479  01175A  A172               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 17480  01175C  D002               	goto	l404
 17481                           
 17482                           ; BSR set to: 0
 17483                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 17484  01175E  010F               	movlb	15	; () banked
 17485  011760  8132               	bsf	50,0,b	;volatile
 17486  011762                     l404:
 17487                           
 17488                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 17489  011762  0100               	movlb	0	; () banked
 17490  011764  A372               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 17491  011766  D002               	goto	l405
 17492                           
 17493                           ; BSR set to: 0
 17494                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 17495  011768  010F               	movlb	15	; () banked
 17496  01176A  8332               	bsf	50,1,b	;volatile
 17497  01176C                     l405:
 17498                           
 17499                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 17500  01176C  0100               	movlb	0	; () banked
 17501  01176E  A572               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 17502  011770  D002               	goto	l406
 17503                           
 17504                           ; BSR set to: 0
 17505                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 17506  011772  010F               	movlb	15	; () banked
 17507  011774  8B32               	bsf	50,5,b	;volatile
 17508  011776                     l406:
 17509                           
 17510                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 17511  011776  0100               	movlb	0	; () banked
 17512  011778  A772               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 17513  01177A  D002               	goto	l407
 17514                           
 17515                           ; BSR set to: 0
 17516                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 17517  01177C  010F               	movlb	15	; () banked
 17518  01177E  8D32               	bsf	50,6,b	;volatile
 17519  011780                     l407:
 17520                           
 17521                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 17522  011780  0100               	movlb	0	; () banked
 17523  011782  A972               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 17524  011784  D003               	goto	l5800
 17525                           
 17526                           ; BSR set to: 0
 17527                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 17528  011786  010F               	movlb	15	; () banked
 17529  011788  8F32               	bsf	50,7,b	;volatile
 17530  01178A  D000               	goto	l5800
 17531  01178C                     l5800:
 17532                           
 17533                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 17534  01178C  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 17535  011790  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17536  011794  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17537  011798  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17538  01179C  0E16               	movlw	22
 17539  01179E  D006               	goto	u6800
 17540  0117A0                     u6805:
 17541  0117A0  0100               	movlb	0	; () banked
 17542  0117A2  90D8               	bcf	status,0,c
 17543  0117A4  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17544  0117A6  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17545  0117A8  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17546  0117AA  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 17547  0117AC                     u6800:
 17548  0117AC  2EE8               	decfsz	wreg,f,c
 17549  0117AE  D7F8               	goto	u6805
 17550  0117B0  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17551  0117B4  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17552  0117B8  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17553  0117BC  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17554                           
 17555                           ; BSR set to: 0
 17556                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 17557  0117C0  0100               	movlb	0	; () banked
 17558  0117C2  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 17559  0117C4  0100               	movlb	0	; () banked
 17560  0117C6  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17561  0117C8  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17562  0117CA  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17563  0117CC  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17564                           
 17565                           ; BSR set to: 0
 17566                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 17567  0117CE  C07C  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 17568                           
 17569                           ;inc\CANlib.h: 407: }
 17570  0117D2  D05A               	goto	l5820
 17571  0117D4                     l403:
 17572                           
 17573                           ; BSR set to: 0
 17574                           ;inc\CANlib.h: 409: else
 17575                           ;inc\CANlib.h: 411: {
 17576                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 17577  0117D4  010F               	movlb	15	; () banked
 17578  0117D6  9732               	bcf	50,3,b	;volatile
 17579                           
 17580                           ; BSR set to: 15
 17581                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 17582  0117D8  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 17583  0117DC  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17584  0117E0  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17585  0117E4  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17586  0117E8  0E04               	movlw	4
 17587  0117EA  D006               	goto	u6810
 17588  0117EC                     u6815:
 17589  0117EC  0100               	movlb	0	; () banked
 17590  0117EE  90D8               	bcf	status,0,c
 17591  0117F0  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17592  0117F2  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17593  0117F4  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17594  0117F6  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 17595  0117F8                     u6810:
 17596  0117F8  2EE8               	decfsz	wreg,f,c
 17597  0117FA  D7F8               	goto	u6815
 17598  0117FC  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17599  011800  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17600  011804  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17601  011808  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17602                           
 17603                           ; BSR set to: 0
 17604                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 17605  01180C  0100               	movlb	0	; () banked
 17606  01180E  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 17607  011810  0100               	movlb	0	; () banked
 17608  011812  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17609  011814  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17610  011816  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17611  011818  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17612                           
 17613                           ; BSR set to: 0
 17614                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 17615  01181A  C07C  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 17616                           
 17617                           ; BSR set to: 0
 17618                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 17619  01181E  0E07               	movlw	7
 17620  011820  0100               	movlb	0	; () banked
 17621  011822  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 17622  011824  0100               	movlb	0	; () banked
 17623  011826  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17624  011828  0E00               	movlw	0
 17625  01182A  0100               	movlb	0	; () banked
 17626  01182C  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17627  01182E  0100               	movlb	0	; () banked
 17628  011830  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17629  011832  0E00               	movlw	0
 17630  011834  0100               	movlb	0	; () banked
 17631  011836  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17632  011838  0100               	movlb	0	; () banked
 17633  01183A  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17634  01183C  0E00               	movlw	0
 17635  01183E  0100               	movlb	0	; () banked
 17636  011840  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17637  011842  0100               	movlb	0	; () banked
 17638  011844  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17639                           
 17640                           ; BSR set to: 0
 17641                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 17642  011846  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 17643  01184A  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17644  01184E  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17645  011852  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17646  011856  0E05               	movlw	5
 17647  011858                     u6825:
 17648  011858  90D8               	bcf	status,0,c
 17649  01185A  0100               	movlb	0	; () banked
 17650  01185C  3778               	rlcf	??_CANsendMessage& (0+255),f,b
 17651  01185E  3779               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 17652  011860  377A               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 17653  011862  377B               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 17654  011864  2EE8               	decfsz	wreg,f,c
 17655  011866  D7F8               	goto	u6825
 17656  011868  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17657  01186C  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17658  011870  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17659  011874  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17660                           
 17661                           ; BSR set to: 0
 17662                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 17663  011878  010F               	movlb	15	; () banked
 17664  01187A  5132               	movf	50,w,b	;volatile
 17665  01187C  0B1F               	andlw	31
 17666  01187E  010F               	movlb	15	; () banked
 17667  011880  6F32               	movwf	50,b	;volatile
 17668                           
 17669                           ; BSR set to: 15
 17670                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 17671  011882  C07C  FF32         	movff	CANsendMessage@tamp,3890	;volatile
 17672  011886  D000               	goto	l5820
 17673  011888                     l5820:
 17674                           
 17675                           ;inc\CANlib.h: 422: }
 17676                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 17677  011888  0100               	movlb	0	; () banked
 17678  01188A  A177               	btfss	CANsendMessage@flags& (0+255),0,b
 17679  01188C  D003               	goto	l410
 17680                           
 17681                           ; BSR set to: 0
 17682                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 17683  01188E  010F               	movlb	15	; () banked
 17684  011890  8130               	bsf	48,0,b	;volatile
 17685  011892  D002               	goto	l411
 17686  011894                     l410:
 17687                           
 17688                           ; BSR set to: 0
 17689                           ;inc\CANlib.h: 426: else
 17690                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 17691  011894  010F               	movlb	15	; () banked
 17692  011896  9130               	bcf	48,0,b	;volatile
 17693  011898                     l411:
 17694                           
 17695                           ; BSR set to: 15
 17696                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 17697  011898  0100               	movlb	0	; () banked
 17698  01189A  A377               	btfss	CANsendMessage@flags& (0+255),1,b
 17699  01189C  D003               	goto	l412
 17700                           
 17701                           ; BSR set to: 0
 17702                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 17703  01189E  010F               	movlb	15	; () banked
 17704  0118A0  8330               	bsf	48,1,b	;volatile
 17705  0118A2  D003               	goto	l5826
 17706  0118A4                     l412:
 17707                           
 17708                           ; BSR set to: 0
 17709                           ;inc\CANlib.h: 430: else
 17710                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 17711  0118A4  010F               	movlb	15	; () banked
 17712  0118A6  9330               	bcf	48,1,b	;volatile
 17713  0118A8  D000               	goto	l5826
 17714  0118AA                     l5826:
 17715                           
 17716                           ; BSR set to: 15
 17717                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 17718  0118AA  C074  FFD9         	movff	CANsendMessage@data,fsr2l
 17719  0118AE  C075  FFDA         	movff	CANsendMessage@data+1,fsr2h
 17720  0118B2  50DF               	movf	indf2,w,c
 17721  0118B4  010F               	movlb	15	; () banked
 17722  0118B6  6F36               	movwf	54,b	;volatile
 17723                           
 17724                           ; BSR set to: 15
 17725                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 17726  0118B8  0100               	movlb	0	; () banked
 17727  0118BA  EE20 F001          	lfsr	2,1
 17728  0118BE  5174               	movf	CANsendMessage@data& (0+255),w,b
 17729  0118C0  26D9               	addwf	fsr2l,f,c
 17730  0118C2  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17731  0118C4  22DA               	addwfc	fsr2h,f,c
 17732  0118C6  50DF               	movf	indf2,w,c
 17733  0118C8  010F               	movlb	15	; () banked
 17734  0118CA  6F37               	movwf	55,b	;volatile
 17735                           
 17736                           ; BSR set to: 15
 17737                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 17738  0118CC  0100               	movlb	0	; () banked
 17739  0118CE  EE20 F002          	lfsr	2,2
 17740  0118D2  5174               	movf	CANsendMessage@data& (0+255),w,b
 17741  0118D4  26D9               	addwf	fsr2l,f,c
 17742  0118D6  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17743  0118D8  22DA               	addwfc	fsr2h,f,c
 17744  0118DA  50DF               	movf	indf2,w,c
 17745  0118DC  010F               	movlb	15	; () banked
 17746  0118DE  6F38               	movwf	56,b	;volatile
 17747                           
 17748                           ; BSR set to: 15
 17749                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 17750  0118E0  0100               	movlb	0	; () banked
 17751  0118E2  EE20 F003          	lfsr	2,3
 17752  0118E6  5174               	movf	CANsendMessage@data& (0+255),w,b
 17753  0118E8  26D9               	addwf	fsr2l,f,c
 17754  0118EA  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17755  0118EC  22DA               	addwfc	fsr2h,f,c
 17756  0118EE  50DF               	movf	indf2,w,c
 17757  0118F0  010F               	movlb	15	; () banked
 17758  0118F2  6F39               	movwf	57,b	;volatile
 17759                           
 17760                           ; BSR set to: 15
 17761                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 17762  0118F4  0100               	movlb	0	; () banked
 17763  0118F6  EE20 F004          	lfsr	2,4
 17764  0118FA  5174               	movf	CANsendMessage@data& (0+255),w,b
 17765  0118FC  26D9               	addwf	fsr2l,f,c
 17766  0118FE  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17767  011900  22DA               	addwfc	fsr2h,f,c
 17768  011902  50DF               	movf	indf2,w,c
 17769  011904  010F               	movlb	15	; () banked
 17770  011906  6F3A               	movwf	58,b	;volatile
 17771                           
 17772                           ; BSR set to: 15
 17773                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 17774  011908  0100               	movlb	0	; () banked
 17775  01190A  EE20 F005          	lfsr	2,5
 17776  01190E  5174               	movf	CANsendMessage@data& (0+255),w,b
 17777  011910  26D9               	addwf	fsr2l,f,c
 17778  011912  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17779  011914  22DA               	addwfc	fsr2h,f,c
 17780  011916  50DF               	movf	indf2,w,c
 17781  011918  010F               	movlb	15	; () banked
 17782  01191A  6F3B               	movwf	59,b	;volatile
 17783                           
 17784                           ; BSR set to: 15
 17785                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 17786  01191C  0100               	movlb	0	; () banked
 17787  01191E  EE20 F006          	lfsr	2,6
 17788  011922  5174               	movf	CANsendMessage@data& (0+255),w,b
 17789  011924  26D9               	addwf	fsr2l,f,c
 17790  011926  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17791  011928  22DA               	addwfc	fsr2h,f,c
 17792  01192A  50DF               	movf	indf2,w,c
 17793  01192C  010F               	movlb	15	; () banked
 17794  01192E  6F3C               	movwf	60,b	;volatile
 17795                           
 17796                           ; BSR set to: 15
 17797                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 17798  011930  0100               	movlb	0	; () banked
 17799  011932  EE20 F007          	lfsr	2,7
 17800  011936  5174               	movf	CANsendMessage@data& (0+255),w,b
 17801  011938  26D9               	addwf	fsr2l,f,c
 17802  01193A  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17803  01193C  22DA               	addwfc	fsr2h,f,c
 17804  01193E  50DF               	movf	indf2,w,c
 17805  011940  010F               	movlb	15	; () banked
 17806  011942  6F3D               	movwf	61,b	;volatile
 17807                           
 17808                           ; BSR set to: 15
 17809                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 17810  011944  010F               	movlb	15	; () banked
 17811  011946  8730               	bsf	48,3,b	;volatile
 17812                           
 17813                           ; BSR set to: 15
 17814                           ;inc\CANlib.h: 444: return;
 17815  011948  0012               	return	
 17816  01194A                     l400:
 17817                           
 17818                           ; BSR set to: 15
 17819                           ;inc\CANlib.h: 445: }
 17820                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 17821  01194A  010F               	movlb	15	; () banked
 17822  01194C  B720               	btfsc	32,3,b	;volatile
 17823  01194E  0012               	return	
 17824                           
 17825                           ; BSR set to: 15
 17826                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 17827  011950  C076  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
 17828                           
 17829                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 17830  011954  0100               	movlb	0	; () banked
 17831  011956  AD77               	btfss	CANsendMessage@flags& (0+255),6,b
 17832  011958  D003               	goto	l415
 17833                           
 17834                           ; BSR set to: 0
 17835                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 17836  01195A  010F               	movlb	15	; () banked
 17837  01195C  8D25               	bsf	37,6,b	;volatile
 17838  01195E  D002               	goto	l416
 17839  011960                     l415:
 17840                           
 17841                           ; BSR set to: 0
 17842                           ;inc\CANlib.h: 454: else
 17843                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 17844  011960  010F               	movlb	15	; () banked
 17845  011962  9D25               	bcf	37,6,b	;volatile
 17846  011964                     l416:
 17847                           
 17848                           ; BSR set to: 15
 17849                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 17850  011964  0100               	movlb	0	; () banked
 17851  011966  A777               	btfss	CANsendMessage@flags& (0+255),3,b
 17852  011968  D07A               	goto	l417
 17853                           
 17854                           ; BSR set to: 0
 17855                           ;inc\CANlib.h: 458: {
 17856                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 17857  01196A  0100               	movlb	0	; () banked
 17858  01196C  5170               	movf	CANsendMessage@identifier& (0+255),w,b
 17859  01196E  0100               	movlb	0	; () banked
 17860  011970  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17861  011972  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17862  011974  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17863  011976  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17864                           
 17865                           ; BSR set to: 0
 17866                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 17867  011978  C07C  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 17868                           
 17869                           ; BSR set to: 0
 17870                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 17871  01197C  0E00               	movlw	0
 17872  01197E  0100               	movlb	0	; () banked
 17873  011980  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 17874  011982  0100               	movlb	0	; () banked
 17875  011984  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17876  011986  0EFF               	movlw	255
 17877  011988  0100               	movlb	0	; () banked
 17878  01198A  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17879  01198C  0100               	movlb	0	; () banked
 17880  01198E  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17881  011990  0E00               	movlw	0
 17882  011992  0100               	movlb	0	; () banked
 17883  011994  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17884  011996  0100               	movlb	0	; () banked
 17885  011998  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17886  01199A  0E00               	movlw	0
 17887  01199C  0100               	movlb	0	; () banked
 17888  01199E  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17889  0119A0  0100               	movlb	0	; () banked
 17890  0119A2  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17891                           
 17892                           ; BSR set to: 0
 17893                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 17894  0119A4  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 17895  0119A8  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17896  0119AC  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17897  0119B0  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17898  0119B4  C079  F078         	movff	??_CANsendMessage+1,??_CANsendMessage
 17899  0119B8  C07A  F079         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 17900  0119BC  C07B  F07A         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 17901  0119C0  0100               	movlb	0	; () banked
 17902  0119C2  6B7B               	clrf	(??_CANsendMessage+3)& (0+255),b
 17903  0119C4  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17904  0119C8  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17905  0119CC  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17906  0119D0  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17907                           
 17908                           ; BSR set to: 0
 17909                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 17910  0119D4  C07C  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 17911                           
 17912                           ; BSR set to: 0
 17913                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 17914  0119D8  0E00               	movlw	0
 17915  0119DA  010F               	movlb	15	; () banked
 17916  0119DC  6F22               	movwf	34,b	;volatile
 17917                           
 17918                           ; BSR set to: 15
 17919                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 17920  0119DE  010F               	movlb	15	; () banked
 17921  0119E0  8722               	bsf	34,3,b	;volatile
 17922                           
 17923                           ; BSR set to: 15
 17924                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 17925  0119E2  0100               	movlb	0	; () banked
 17926  0119E4  A172               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 17927  0119E6  D002               	goto	l418
 17928                           
 17929                           ; BSR set to: 0
 17930                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 17931  0119E8  010F               	movlb	15	; () banked
 17932  0119EA  8122               	bsf	34,0,b	;volatile
 17933  0119EC                     l418:
 17934                           
 17935                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 17936  0119EC  0100               	movlb	0	; () banked
 17937  0119EE  A372               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 17938  0119F0  D002               	goto	l419
 17939                           
 17940                           ; BSR set to: 0
 17941                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 17942  0119F2  010F               	movlb	15	; () banked
 17943  0119F4  8322               	bsf	34,1,b	;volatile
 17944  0119F6                     l419:
 17945                           
 17946                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 17947  0119F6  0100               	movlb	0	; () banked
 17948  0119F8  A572               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 17949  0119FA  D002               	goto	l420
 17950                           
 17951                           ; BSR set to: 0
 17952                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 17953  0119FC  010F               	movlb	15	; () banked
 17954  0119FE  8B22               	bsf	34,5,b	;volatile
 17955  011A00                     l420:
 17956                           
 17957                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 17958  011A00  0100               	movlb	0	; () banked
 17959  011A02  A772               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 17960  011A04  D002               	goto	l421
 17961                           
 17962                           ; BSR set to: 0
 17963                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 17964  011A06  010F               	movlb	15	; () banked
 17965  011A08  8D22               	bsf	34,6,b	;volatile
 17966  011A0A                     l421:
 17967                           
 17968                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 17969  011A0A  0100               	movlb	0	; () banked
 17970  011A0C  A972               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 17971  011A0E  D003               	goto	l5876
 17972                           
 17973                           ; BSR set to: 0
 17974                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 17975  011A10  010F               	movlb	15	; () banked
 17976  011A12  8F22               	bsf	34,7,b	;volatile
 17977  011A14  D000               	goto	l5876
 17978  011A16                     l5876:
 17979                           
 17980                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 17981  011A16  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 17982  011A1A  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17983  011A1E  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17984  011A22  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17985  011A26  0E16               	movlw	22
 17986  011A28  D006               	goto	u6930
 17987  011A2A                     u6935:
 17988  011A2A  0100               	movlb	0	; () banked
 17989  011A2C  90D8               	bcf	status,0,c
 17990  011A2E  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17991  011A30  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17992  011A32  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17993  011A34  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 17994  011A36                     u6930:
 17995  011A36  2EE8               	decfsz	wreg,f,c
 17996  011A38  D7F8               	goto	u6935
 17997  011A3A  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17998  011A3E  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17999  011A42  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18000  011A46  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18001                           
 18002                           ; BSR set to: 0
 18003                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 18004  011A4A  0100               	movlb	0	; () banked
 18005  011A4C  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 18006  011A4E  0100               	movlb	0	; () banked
 18007  011A50  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 18008  011A52  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18009  011A54  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18010  011A56  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18011                           
 18012                           ; BSR set to: 0
 18013                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 18014  011A58  C07C  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 18015                           
 18016                           ;inc\CANlib.h: 483: }
 18017  011A5C  D05A               	goto	l5896
 18018  011A5E                     l417:
 18019                           
 18020                           ; BSR set to: 0
 18021                           ;inc\CANlib.h: 485: else
 18022                           ;inc\CANlib.h: 487: {
 18023                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 18024  011A5E  010F               	movlb	15	; () banked
 18025  011A60  9722               	bcf	34,3,b	;volatile
 18026                           
 18027                           ; BSR set to: 15
 18028                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 18029  011A62  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 18030  011A66  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18031  011A6A  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18032  011A6E  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18033  011A72  0E04               	movlw	4
 18034  011A74  D006               	goto	u6940
 18035  011A76                     u6945:
 18036  011A76  0100               	movlb	0	; () banked
 18037  011A78  90D8               	bcf	status,0,c
 18038  011A7A  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18039  011A7C  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18040  011A7E  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18041  011A80  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 18042  011A82                     u6940:
 18043  011A82  2EE8               	decfsz	wreg,f,c
 18044  011A84  D7F8               	goto	u6945
 18045  011A86  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 18046  011A8A  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18047  011A8E  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18048  011A92  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18049                           
 18050                           ; BSR set to: 0
 18051                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 18052  011A96  0100               	movlb	0	; () banked
 18053  011A98  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 18054  011A9A  0100               	movlb	0	; () banked
 18055  011A9C  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 18056  011A9E  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18057  011AA0  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18058  011AA2  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18059                           
 18060                           ; BSR set to: 0
 18061                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 18062  011AA4  C07C  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 18063                           
 18064                           ; BSR set to: 0
 18065                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 18066  011AA8  0E07               	movlw	7
 18067  011AAA  0100               	movlb	0	; () banked
 18068  011AAC  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 18069  011AAE  0100               	movlb	0	; () banked
 18070  011AB0  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 18071  011AB2  0E00               	movlw	0
 18072  011AB4  0100               	movlb	0	; () banked
 18073  011AB6  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 18074  011AB8  0100               	movlb	0	; () banked
 18075  011ABA  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 18076  011ABC  0E00               	movlw	0
 18077  011ABE  0100               	movlb	0	; () banked
 18078  011AC0  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 18079  011AC2  0100               	movlb	0	; () banked
 18080  011AC4  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18081  011AC6  0E00               	movlw	0
 18082  011AC8  0100               	movlb	0	; () banked
 18083  011ACA  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18084  011ACC  0100               	movlb	0	; () banked
 18085  011ACE  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18086                           
 18087                           ; BSR set to: 0
 18088                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 18089  011AD0  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 18090  011AD4  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18091  011AD8  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18092  011ADC  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18093  011AE0  0E05               	movlw	5
 18094  011AE2                     u6955:
 18095  011AE2  90D8               	bcf	status,0,c
 18096  011AE4  0100               	movlb	0	; () banked
 18097  011AE6  3778               	rlcf	??_CANsendMessage& (0+255),f,b
 18098  011AE8  3779               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 18099  011AEA  377A               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 18100  011AEC  377B               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 18101  011AEE  2EE8               	decfsz	wreg,f,c
 18102  011AF0  D7F8               	goto	u6955
 18103  011AF2  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 18104  011AF6  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18105  011AFA  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18106  011AFE  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18107                           
 18108                           ; BSR set to: 0
 18109                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 18110  011B02  010F               	movlb	15	; () banked
 18111  011B04  5122               	movf	34,w,b	;volatile
 18112  011B06  0B1F               	andlw	31
 18113  011B08  010F               	movlb	15	; () banked
 18114  011B0A  6F22               	movwf	34,b	;volatile
 18115                           
 18116                           ; BSR set to: 15
 18117                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 18118  011B0C  C07C  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 18119  011B10  D000               	goto	l5896
 18120  011B12                     l5896:
 18121                           
 18122                           ;inc\CANlib.h: 498: }
 18123                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 18124  011B12  0100               	movlb	0	; () banked
 18125  011B14  A177               	btfss	CANsendMessage@flags& (0+255),0,b
 18126  011B16  D003               	goto	l424
 18127                           
 18128                           ; BSR set to: 0
 18129                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 18130  011B18  010F               	movlb	15	; () banked
 18131  011B1A  8120               	bsf	32,0,b	;volatile
 18132  011B1C  D002               	goto	l425
 18133  011B1E                     l424:
 18134                           
 18135                           ; BSR set to: 0
 18136                           ;inc\CANlib.h: 502: else
 18137                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 18138  011B1E  010F               	movlb	15	; () banked
 18139  011B20  9120               	bcf	32,0,b	;volatile
 18140  011B22                     l425:
 18141                           
 18142                           ; BSR set to: 15
 18143                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 18144  011B22  0100               	movlb	0	; () banked
 18145  011B24  A377               	btfss	CANsendMessage@flags& (0+255),1,b
 18146  011B26  D003               	goto	l426
 18147                           
 18148                           ; BSR set to: 0
 18149                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 18150  011B28  010F               	movlb	15	; () banked
 18151  011B2A  8320               	bsf	32,1,b	;volatile
 18152  011B2C  D003               	goto	l5902
 18153  011B2E                     l426:
 18154                           
 18155                           ; BSR set to: 0
 18156                           ;inc\CANlib.h: 506: else
 18157                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 18158  011B2E  010F               	movlb	15	; () banked
 18159  011B30  9320               	bcf	32,1,b	;volatile
 18160  011B32  D000               	goto	l5902
 18161  011B34                     l5902:
 18162                           
 18163                           ; BSR set to: 15
 18164                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 18165  011B34  C074  FFD9         	movff	CANsendMessage@data,fsr2l
 18166  011B38  C075  FFDA         	movff	CANsendMessage@data+1,fsr2h
 18167  011B3C  50DF               	movf	indf2,w,c
 18168  011B3E  010F               	movlb	15	; () banked
 18169  011B40  6F26               	movwf	38,b	;volatile
 18170                           
 18171                           ; BSR set to: 15
 18172                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 18173  011B42  0100               	movlb	0	; () banked
 18174  011B44  EE20 F001          	lfsr	2,1
 18175  011B48  5174               	movf	CANsendMessage@data& (0+255),w,b
 18176  011B4A  26D9               	addwf	fsr2l,f,c
 18177  011B4C  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18178  011B4E  22DA               	addwfc	fsr2h,f,c
 18179  011B50  50DF               	movf	indf2,w,c
 18180  011B52  010F               	movlb	15	; () banked
 18181  011B54  6F27               	movwf	39,b	;volatile
 18182                           
 18183                           ; BSR set to: 15
 18184                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 18185  011B56  0100               	movlb	0	; () banked
 18186  011B58  EE20 F002          	lfsr	2,2
 18187  011B5C  5174               	movf	CANsendMessage@data& (0+255),w,b
 18188  011B5E  26D9               	addwf	fsr2l,f,c
 18189  011B60  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18190  011B62  22DA               	addwfc	fsr2h,f,c
 18191  011B64  50DF               	movf	indf2,w,c
 18192  011B66  010F               	movlb	15	; () banked
 18193  011B68  6F28               	movwf	40,b	;volatile
 18194                           
 18195                           ; BSR set to: 15
 18196                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 18197  011B6A  0100               	movlb	0	; () banked
 18198  011B6C  EE20 F003          	lfsr	2,3
 18199  011B70  5174               	movf	CANsendMessage@data& (0+255),w,b
 18200  011B72  26D9               	addwf	fsr2l,f,c
 18201  011B74  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18202  011B76  22DA               	addwfc	fsr2h,f,c
 18203  011B78  50DF               	movf	indf2,w,c
 18204  011B7A  010F               	movlb	15	; () banked
 18205  011B7C  6F29               	movwf	41,b	;volatile
 18206                           
 18207                           ; BSR set to: 15
 18208                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 18209  011B7E  0100               	movlb	0	; () banked
 18210  011B80  EE20 F004          	lfsr	2,4
 18211  011B84  5174               	movf	CANsendMessage@data& (0+255),w,b
 18212  011B86  26D9               	addwf	fsr2l,f,c
 18213  011B88  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18214  011B8A  22DA               	addwfc	fsr2h,f,c
 18215  011B8C  50DF               	movf	indf2,w,c
 18216  011B8E  010F               	movlb	15	; () banked
 18217  011B90  6F2A               	movwf	42,b	;volatile
 18218                           
 18219                           ; BSR set to: 15
 18220                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 18221  011B92  0100               	movlb	0	; () banked
 18222  011B94  EE20 F005          	lfsr	2,5
 18223  011B98  5174               	movf	CANsendMessage@data& (0+255),w,b
 18224  011B9A  26D9               	addwf	fsr2l,f,c
 18225  011B9C  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18226  011B9E  22DA               	addwfc	fsr2h,f,c
 18227  011BA0  50DF               	movf	indf2,w,c
 18228  011BA2  010F               	movlb	15	; () banked
 18229  011BA4  6F2B               	movwf	43,b	;volatile
 18230                           
 18231                           ; BSR set to: 15
 18232                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 18233  011BA6  0100               	movlb	0	; () banked
 18234  011BA8  EE20 F006          	lfsr	2,6
 18235  011BAC  5174               	movf	CANsendMessage@data& (0+255),w,b
 18236  011BAE  26D9               	addwf	fsr2l,f,c
 18237  011BB0  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18238  011BB2  22DA               	addwfc	fsr2h,f,c
 18239  011BB4  50DF               	movf	indf2,w,c
 18240  011BB6  010F               	movlb	15	; () banked
 18241  011BB8  6F2C               	movwf	44,b	;volatile
 18242                           
 18243                           ; BSR set to: 15
 18244                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 18245  011BBA  0100               	movlb	0	; () banked
 18246  011BBC  EE20 F007          	lfsr	2,7
 18247  011BC0  5174               	movf	CANsendMessage@data& (0+255),w,b
 18248  011BC2  26D9               	addwf	fsr2l,f,c
 18249  011BC4  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18250  011BC6  22DA               	addwfc	fsr2h,f,c
 18251  011BC8  50DF               	movf	indf2,w,c
 18252  011BCA  010F               	movlb	15	; () banked
 18253  011BCC  6F2D               	movwf	45,b	;volatile
 18254                           
 18255                           ; BSR set to: 15
 18256                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 18257  011BCE  010F               	movlb	15	; () banked
 18258  011BD0  8720               	bsf	32,3,b	;volatile
 18259                           
 18260                           ; BSR set to: 15
 18261                           ;inc\CANlib.h: 520: return;
 18262  011BD2  0012               	return	
 18263                           
 18264                           ; BSR set to: 15
 18265                           
 18266                           ; BSR set to: 15
 18267  011BD4  0012               	return		;funcret
 18268  011BD6                     __end_of_CANsendMessage:
 18269                           	opt stack 0
 18270                           tblptru	equ	0xFF8
 18271                           tblptrh	equ	0xFF7
 18272                           tblptrl	equ	0xFF6
 18273                           tablat	equ	0xFF5
 18274                           prodh	equ	0xFF4
 18275                           prodl	equ	0xFF3
 18276                           intcon	equ	0xFF2
 18277                           postinc0	equ	0xFEE
 18278                           wreg	equ	0xFE8
 18279                           indf1	equ	0xFE7
 18280                           plusw1	equ	0xFE3
 18281                           fsr1h	equ	0xFE2
 18282                           fsr1l	equ	0xFE1
 18283                           indf2	equ	0xFDF
 18284                           postinc2	equ	0xFDE
 18285                           plusw2	equ	0xFDB
 18286                           fsr2h	equ	0xFDA
 18287                           fsr2l	equ	0xFD9
 18288                           status	equ	0xFD8
 18289                           
 18290 ;; *************** function _CANisTxReady *****************
 18291 ;; Defined at:
 18292 ;;		line 1154 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 18293 ;; Parameters:    Size  Location     Type
 18294 ;;		None
 18295 ;; Auto vars:     Size  Location     Type
 18296 ;;		None
 18297 ;; Return value:  Size  Location     Type
 18298 ;;                  1    wreg      unsigned char 
 18299 ;; Registers used:
 18300 ;;		wreg, status,2
 18301 ;; Tracked objects:
 18302 ;;		On entry : 0/0
 18303 ;;		On exit  : 0/0
 18304 ;;		Unchanged: 0/0
 18305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18307 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18309 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18310 ;;Total ram usage:        1 bytes
 18311 ;; Hardware stack levels used:    1
 18312 ;; Hardware stack levels required when called:    3
 18313 ;; This function calls:
 18314 ;;		Nothing
 18315 ;; This function is called by:
 18316 ;;		_main
 18317 ;;		_LCD_Handler
 18318 ;;		_CAN_Tx
 18319 ;; This function uses a non-reentrant model
 18320 ;;
 18321                           
 18322                           	psect	text59
 18323  015E68                     __ptext59:
 18324                           	opt stack 0
 18325  015E68                     _CANisTxReady:
 18326                           	opt stack 26
 18327                           
 18328                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 18329                           
 18330                           ; BSR set to: 15
 18331                           ;incstack = 0
 18332  015E68  0E01               	movlw	1
 18333  015E6A  0100               	movlb	0	; () banked
 18334  015E6C  6F70               	movwf	_CANisTxReady$3255& (0+255),b
 18335                           
 18336                           ; BSR set to: 0
 18337  015E6E  010F               	movlb	15	; () banked
 18338  015E70  A740               	btfss	64,3,b	;volatile
 18339  015E72  D009               	goto	l578
 18340                           
 18341                           ; BSR set to: 15
 18342  015E74  010F               	movlb	15	; () banked
 18343  015E76  A730               	btfss	48,3,b	;volatile
 18344  015E78  D006               	goto	l578
 18345                           
 18346                           ; BSR set to: 15
 18347  015E7A  010F               	movlb	15	; () banked
 18348  015E7C  A720               	btfss	32,3,b	;volatile
 18349  015E7E  D003               	goto	l578
 18350                           
 18351                           ; BSR set to: 15
 18352  015E80  0E00               	movlw	0
 18353  015E82  0100               	movlb	0	; () banked
 18354  015E84  6F70               	movwf	_CANisTxReady$3255& (0+255),b
 18355  015E86                     l578:
 18356  015E86  0100               	movlb	0	; () banked
 18357  015E88  5170               	movf	_CANisTxReady$3255& (0+255),w,b
 18358  015E8A  0012               	return	
 18359                           
 18360                           ; BSR set to: 0
 18361                           
 18362                           ; BSR set to: 0
 18363  015E8C  0012               	return		;funcret
 18364  015E8E                     __end_of_CANisTxReady:
 18365                           	opt stack 0
 18366                           tblptru	equ	0xFF8
 18367                           tblptrh	equ	0xFF7
 18368                           tblptrl	equ	0xFF6
 18369                           tablat	equ	0xFF5
 18370                           prodh	equ	0xFF4
 18371                           prodl	equ	0xFF3
 18372                           intcon	equ	0xFF2
 18373                           postinc0	equ	0xFEE
 18374                           wreg	equ	0xFE8
 18375                           indf1	equ	0xFE7
 18376                           plusw1	equ	0xFE3
 18377                           fsr1h	equ	0xFE2
 18378                           fsr1l	equ	0xFE1
 18379                           indf2	equ	0xFDF
 18380                           postinc2	equ	0xFDE
 18381                           plusw2	equ	0xFDB
 18382                           fsr2h	equ	0xFDA
 18383                           fsr2l	equ	0xFD9
 18384                           status	equ	0xFD8
 18385                           
 18386 ;; *************** function _CAN_Rx *****************
 18387 ;; Defined at:
 18388 ;;		line 628 in file "RemoteCan.c"
 18389 ;; Parameters:    Size  Location     Type
 18390 ;;		None
 18391 ;; Auto vars:     Size  Location     Type
 18392 ;;		None
 18393 ;; Return value:  Size  Location     Type
 18394 ;;		None               void
 18395 ;; Registers used:
 18396 ;;		wreg, status,2, status,0
 18397 ;; Tracked objects:
 18398 ;;		On entry : 0/0
 18399 ;;		On exit  : 0/0
 18400 ;;		Unchanged: 0/0
 18401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18404 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18405 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18406 ;;Total ram usage:        4 bytes
 18407 ;; Hardware stack levels used:    1
 18408 ;; Hardware stack levels required when called:    3
 18409 ;; This function calls:
 18410 ;;		Nothing
 18411 ;; This function is called by:
 18412 ;;		_main
 18413 ;; This function uses a non-reentrant model
 18414 ;;
 18415                           
 18416                           	psect	text60
 18417  015750                     __ptext60:
 18418                           	opt stack 0
 18419  015750                     _CAN_Rx:
 18420                           	opt stack 27
 18421                           
 18422                           ;RemoteCan.c: 649: if ((id == 0b00000001000)&&(RTR_Flag == 0)) {
 18423                           
 18424                           ; BSR set to: 0
 18425                           ;incstack = 0
 18426  015750  0E08               	movlw	8
 18427  015752  1805               	xorwf	_id,w,c	;volatile
 18428  015754  1006               	iorwf	_id+1,w,c	;volatile
 18429  015756  1007               	iorwf	_id+2,w,c	;volatile
 18430  015758  1008               	iorwf	_id+3,w,c	;volatile
 18431  01575A  B4D8               	btfsc	status,2,c
 18432  01575C  BE4B               	btfsc	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 18433  01575E  D02A               	goto	l6548
 18434                           
 18435                           ;RemoteCan.c: 650: left_speed = data_speed_rx[1];
 18436  015760  C101  F011         	movff	_data_speed_rx+1,_left_speed	;volatile
 18437  015764  6A12               	clrf	_left_speed+1,c	;volatile
 18438                           
 18439                           ;RemoteCan.c: 651: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 18440  015766  5011               	movf	_left_speed,w,c	;volatile
 18441  015768  0100               	movlb	0	; () banked
 18442  01576A  6F70               	movwf	??_CAN_Rx& (0+255),b
 18443  01576C  0101               	movlb	1	; () banked
 18444  01576E  5100               	movf	_data_speed_rx& (0+255),w,b
 18445  015770  6E11               	movwf	_left_speed,c	;volatile
 18446  015772  C070  F012         	movff	??_CAN_Rx,_left_speed+1	;volatile
 18447                           
 18448                           ; BSR set to: 1
 18449                           ;RemoteCan.c: 652: right_speed = data_speed_rx[3];
 18450  015776  C103  F013         	movff	_data_speed_rx+3,_right_speed	;volatile
 18451  01577A  6A14               	clrf	_right_speed+1,c	;volatile
 18452                           
 18453                           ;RemoteCan.c: 653: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 18454  01577C  5013               	movf	_right_speed,w,c	;volatile
 18455  01577E  0100               	movlb	0	; () banked
 18456  015780  6F70               	movwf	??_CAN_Rx& (0+255),b
 18457  015782  0101               	movlb	1	; () banked
 18458  015784  5102               	movf	(_data_speed_rx+2)& (0+255),w,b
 18459  015786  6E13               	movwf	_right_speed,c	;volatile
 18460  015788  C070  F014         	movff	??_CAN_Rx,_right_speed+1	;volatile
 18461                           
 18462                           ; BSR set to: 1
 18463                           ;RemoteCan.c: 654: actual_speed = (right_speed + left_speed) / 2;
 18464  01578C  5011               	movf	_left_speed,w,c	;volatile
 18465  01578E  2413               	addwf	_right_speed,w,c	;volatile
 18466  015790  0100               	movlb	0	; () banked
 18467  015792  6F70               	movwf	??_CAN_Rx& (0+255),b
 18468  015794  5012               	movf	_left_speed+1,w,c	;volatile
 18469  015796  2014               	addwfc	_right_speed+1,w,c	;volatile
 18470  015798  0100               	movlb	0	; () banked
 18471  01579A  6F71               	movwf	(??_CAN_Rx+1)& (0+255),b
 18472  01579C  90D8               	bcf	status,0,c
 18473  01579E  0100               	movlb	0	; () banked
 18474  0157A0  3171               	rrcf	(??_CAN_Rx+1)& (0+255),w,b
 18475  0157A2  0100               	movlb	0	; () banked
 18476  0157A4  6F72               	movwf	(??_CAN_Rx+2)& (0+255),b
 18477  0157A6  0100               	movlb	0	; () banked
 18478  0157A8  3170               	rrcf	??_CAN_Rx& (0+255),w,b
 18479  0157AA  0100               	movlb	0	; () banked
 18480  0157AC  6FDD               	movwf	_actual_speed& (0+255),b	;volatile
 18481  0157AE  C072  F0DE         	movff	??_CAN_Rx+2,_actual_speed+1	;volatile
 18482  0157B2  D000               	goto	l6548
 18483  0157B4                     l6548:
 18484                           
 18485                           ;RemoteCan.c: 655: }
 18486                           ;RemoteCan.c: 657: if (id == 0b00000001011) {
 18487  0157B4  0E0B               	movlw	11
 18488  0157B6  1805               	xorwf	_id,w,c	;volatile
 18489  0157B8  1006               	iorwf	_id+1,w,c	;volatile
 18490  0157BA  1007               	iorwf	_id+2,w,c	;volatile
 18491  0157BC  1008               	iorwf	_id+3,w,c	;volatile
 18492  0157BE  A4D8               	btfss	status,2,c
 18493  0157C0  0012               	return	
 18494                           
 18495                           ;RemoteCan.c: 658: battery = data[0];
 18496  0157C2  C028  F017         	movff	_data,_battery	;volatile
 18497  0157C6  0012               	return	
 18498  0157C8  0012               	return		;funcret
 18499  0157CA                     __end_of_CAN_Rx:
 18500                           	opt stack 0
 18501                           tblptru	equ	0xFF8
 18502                           tblptrh	equ	0xFF7
 18503                           tblptrl	equ	0xFF6
 18504                           tablat	equ	0xFF5
 18505                           prodh	equ	0xFF4
 18506                           prodl	equ	0xFF3
 18507                           intcon	equ	0xFF2
 18508                           postinc0	equ	0xFEE
 18509                           wreg	equ	0xFE8
 18510                           indf1	equ	0xFE7
 18511                           plusw1	equ	0xFE3
 18512                           fsr1h	equ	0xFE2
 18513                           fsr1l	equ	0xFE1
 18514                           indf2	equ	0xFDF
 18515                           postinc2	equ	0xFDE
 18516                           plusw2	equ	0xFDB
 18517                           fsr2h	equ	0xFDA
 18518                           fsr2l	equ	0xFD9
 18519                           status	equ	0xFD8
 18520                           
 18521 ;; *************** function _ISR_bassa *****************
 18522 ;; Defined at:
 18523 ;;		line 200 in file "RemoteCan.c"
 18524 ;; Parameters:    Size  Location     Type
 18525 ;;		None
 18526 ;; Auto vars:     Size  Location     Type
 18527 ;;		None
 18528 ;; Return value:  Size  Location     Type
 18529 ;;		None               void
 18530 ;; Registers used:
 18531 ;;		wreg, status,2, status,0
 18532 ;; Tracked objects:
 18533 ;;		On entry : 0/0
 18534 ;;		On exit  : 0/0
 18535 ;;		Unchanged: 0/0
 18536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18539 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18540 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18541 ;;Total ram usage:       17 bytes
 18542 ;; Hardware stack levels used:    1
 18543 ;; Hardware stack levels required when called:    2
 18544 ;; This function calls:
 18545 ;;		Nothing
 18546 ;; This function is called by:
 18547 ;;		Interrupt level 1
 18548 ;; This function uses a non-reentrant model
 18549 ;;
 18550                           
 18551                           	psect	intcodelo
 18552  000018                     __pintcodelo:
 18553                           	opt stack 0
 18554  000018                     _ISR_bassa:
 18555                           	opt stack 20
 18556                           
 18557                           ;incstack = 0
 18558  000018  CFD8 F029          	movff	status,??_ISR_bassa
 18559  00001C  CFE8 F02A          	movff	wreg,??_ISR_bassa+1
 18560  000020  CFE0 F02B          	movff	bsr,??_ISR_bassa+2
 18561  000024  CFFA F02C          	movff	pclath,??_ISR_bassa+3
 18562  000028  CFFB F02D          	movff	pclatu,??_ISR_bassa+4
 18563  00002C  CFE9 F02E          	movff	fsr0l,??_ISR_bassa+5
 18564  000030  CFEA F02F          	movff	fsr0h,??_ISR_bassa+6
 18565  000034  CFE1 F030          	movff	fsr1l,??_ISR_bassa+7
 18566  000038  CFE2 F031          	movff	fsr1h,??_ISR_bassa+8
 18567  00003C  CFD9 F032          	movff	fsr2l,??_ISR_bassa+9
 18568  000040  CFDA F033          	movff	fsr2h,??_ISR_bassa+10
 18569  000044  CFF3 F034          	movff	prodl,??_ISR_bassa+11
 18570  000048  CFF4 F035          	movff	prodh,??_ISR_bassa+12
 18571  00004C  CFF6 F036          	movff	tblptrl,??_ISR_bassa+13
 18572  000050  CFF7 F037          	movff	tblptrh,??_ISR_bassa+14
 18573  000054  CFF8 F038          	movff	tblptru,??_ISR_bassa+15
 18574  000058  CFF5 F039          	movff	tablat,??_ISR_bassa+16
 18575                           
 18576                           ;RemoteCan.c: 201: if (PIR2bits.TMR3IF == 1) {
 18577  00005C  A2A1               	btfss	4001,1,c	;volatile
 18578  00005E  D00C               	goto	i1l815
 18579                           
 18580                           ;RemoteCan.c: 202: time_counter++;
 18581  000060  0E01               	movlw	1
 18582  000062  260D               	addwf	_time_counter,f,c	;volatile
 18583  000064  0E00               	movlw	0
 18584  000066  220E               	addwfc	_time_counter+1,f,c	;volatile
 18585  000068  220F               	addwfc	_time_counter+2,f,c	;volatile
 18586  00006A  2210               	addwfc	_time_counter+3,f,c	;volatile
 18587                           
 18588                           ;RemoteCan.c: 203: TMR3H = 0x63;
 18589  00006C  0E63               	movlw	99
 18590  00006E  6EB3               	movwf	4019,c	;volatile
 18591                           
 18592                           ;RemoteCan.c: 204: TMR3L = 0xC0;
 18593  000070  0EC0               	movlw	192
 18594  000072  6EB2               	movwf	4018,c	;volatile
 18595                           
 18596                           ;RemoteCan.c: 205: PIR2bits.TMR3IF = 0;
 18597  000074  92A1               	bcf	4001,1,c	;volatile
 18598  000076  D000               	goto	i1l815
 18599  000078                     i1l815:
 18600  000078  C039  FFF5         	movff	??_ISR_bassa+16,tablat
 18601  00007C  C038  FFF8         	movff	??_ISR_bassa+15,tblptru
 18602  000080  C037  FFF7         	movff	??_ISR_bassa+14,tblptrh
 18603  000084  C036  FFF6         	movff	??_ISR_bassa+13,tblptrl
 18604  000088  C035  FFF4         	movff	??_ISR_bassa+12,prodh
 18605  00008C  C034  FFF3         	movff	??_ISR_bassa+11,prodl
 18606  000090  C033  FFDA         	movff	??_ISR_bassa+10,fsr2h
 18607  000094  C032  FFD9         	movff	??_ISR_bassa+9,fsr2l
 18608  000098  C031  FFE2         	movff	??_ISR_bassa+8,fsr1h
 18609  00009C  C030  FFE1         	movff	??_ISR_bassa+7,fsr1l
 18610  0000A0  C02F  FFEA         	movff	??_ISR_bassa+6,fsr0h
 18611  0000A4  C02E  FFE9         	movff	??_ISR_bassa+5,fsr0l
 18612  0000A8  C02D  FFFB         	movff	??_ISR_bassa+4,pclatu
 18613  0000AC  C02C  FFFA         	movff	??_ISR_bassa+3,pclath
 18614  0000B0  C02B  FFE0         	movff	??_ISR_bassa+2,bsr
 18615  0000B4  C02A  FFE8         	movff	??_ISR_bassa+1,wreg
 18616  0000B8  C029  FFD8         	movff	??_ISR_bassa,status
 18617  0000BC  0010               	retfie	
 18618  0000BE                     __end_of_ISR_bassa:
 18619                           	opt stack 0
 18620                           pclatu	equ	0xFFB
 18621                           pclath	equ	0xFFA
 18622                           tblptru	equ	0xFF8
 18623                           tblptrh	equ	0xFF7
 18624                           tblptrl	equ	0xFF6
 18625                           tablat	equ	0xFF5
 18626                           prodh	equ	0xFF4
 18627                           prodl	equ	0xFF3
 18628                           intcon	equ	0xFF2
 18629                           postinc0	equ	0xFEE
 18630                           fsr0h	equ	0xFEA
 18631                           fsr0l	equ	0xFE9
 18632                           wreg	equ	0xFE8
 18633                           indf1	equ	0xFE7
 18634                           plusw1	equ	0xFE3
 18635                           fsr1h	equ	0xFE2
 18636                           fsr1l	equ	0xFE1
 18637                           bsr	equ	0xFE0
 18638                           indf2	equ	0xFDF
 18639                           postinc2	equ	0xFDE
 18640                           plusw2	equ	0xFDB
 18641                           fsr2h	equ	0xFDA
 18642                           fsr2l	equ	0xFD9
 18643                           status	equ	0xFD8
 18644                           
 18645 ;; *************** function _ISR_alta *****************
 18646 ;; Defined at:
 18647 ;;		line 124 in file "RemoteCan.c"
 18648 ;; Parameters:    Size  Location     Type
 18649 ;;		None
 18650 ;; Auto vars:     Size  Location     Type
 18651 ;;  i               1   33[COMRAM] unsigned char 
 18652 ;; Return value:  Size  Location     Type
 18653 ;;		None               void
 18654 ;; Registers used:
 18655 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18656 ;; Tracked objects:
 18657 ;;		On entry : 0/0
 18658 ;;		On exit  : 0/0
 18659 ;;		Unchanged: 0/0
 18660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18662 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18663 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18664 ;;      Totals:         1      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18665 ;;Total ram usage:       17 bytes
 18666 ;; Hardware stack levels used:    1
 18667 ;; Hardware stack levels required when called:    1
 18668 ;; This function calls:
 18669 ;;		_CANisRxReady
 18670 ;;		_CANreceiveMessage
 18671 ;;		i2_CANisTxReady
 18672 ;;		i2_CANsendMessage
 18673 ;; This function is called by:
 18674 ;;		Interrupt level 2
 18675 ;; This function uses a non-reentrant model
 18676 ;;
 18677                           
 18678                           	psect	intcode
 18679  000008                     __pintcode:
 18680                           	opt stack 0
 18681  000008                     _ISR_alta:
 18682                           	opt stack 20
 18683                           
 18684                           ;incstack = 0
 18685  000008  CFFA F062          	movff	pclath,??_ISR_alta+2
 18686  00000C  CFFB F063          	movff	pclatu,??_ISR_alta+3
 18687  000010  CFE9 F064          	movff	fsr0l,??_ISR_alta+4
 18688  000014  EF6D  F09D         	goto	int_func
 18689                           pclatu	equ	0xFFB
 18690                           pclath	equ	0xFFA
 18691                           tblptru	equ	0xFF8
 18692                           tblptrh	equ	0xFF7
 18693                           tblptrl	equ	0xFF6
 18694                           tablat	equ	0xFF5
 18695                           prodh	equ	0xFF4
 18696                           prodl	equ	0xFF3
 18697                           intcon	equ	0xFF2
 18698                           postinc0	equ	0xFEE
 18699                           fsr0h	equ	0xFEA
 18700                           fsr0l	equ	0xFE9
 18701                           wreg	equ	0xFE8
 18702                           indf1	equ	0xFE7
 18703                           plusw1	equ	0xFE3
 18704                           fsr1h	equ	0xFE2
 18705                           fsr1l	equ	0xFE1
 18706                           bsr	equ	0xFE0
 18707                           indf2	equ	0xFDF
 18708                           postinc2	equ	0xFDE
 18709                           plusw2	equ	0xFDB
 18710                           fsr2h	equ	0xFDA
 18711                           fsr2l	equ	0xFD9
 18712                           status	equ	0xFD8
 18713                           
 18714                           	psect	intcode_body
 18715  013ADA                     __pintcode_body:
 18716                           	opt stack 20
 18717  013ADA                     int_func:
 18718                           	opt stack 20
 18719  013ADA  CFEA F065          	movff	fsr0h,??_ISR_alta+5
 18720  013ADE  CFE1 F066          	movff	fsr1l,??_ISR_alta+6
 18721  013AE2  CFE2 F067          	movff	fsr1h,??_ISR_alta+7
 18722  013AE6  CFD9 F068          	movff	fsr2l,??_ISR_alta+8
 18723  013AEA  CFDA F069          	movff	fsr2h,??_ISR_alta+9
 18724  013AEE  CFF3 F06A          	movff	prodl,??_ISR_alta+10
 18725  013AF2  CFF4 F06B          	movff	prodh,??_ISR_alta+11
 18726  013AF6  CFF6 F06C          	movff	tblptrl,??_ISR_alta+12
 18727  013AFA  CFF7 F06D          	movff	tblptrh,??_ISR_alta+13
 18728  013AFE  CFF8 F06E          	movff	tblptru,??_ISR_alta+14
 18729  013B02  CFF5 F06F          	movff	tablat,??_ISR_alta+15
 18730                           
 18731                           ;RemoteCan.c: 125: if ((PIR3bits.RXB1IF == 1) || (PIR3bits.RXB0IF == 1)) {
 18732  013B06  B2A4               	btfsc	4004,1,c	;volatile
 18733  013B08  D002               	goto	i2l8466
 18734  013B0A  A0A4               	btfss	4004,0,c	;volatile
 18735  013B0C  D10B               	goto	i2l811
 18736  013B0E                     i2l8466:
 18737                           
 18738                           ;RemoteCan.c: 126: if (CANisRxReady()) {
 18739  013B0E  EC82  F0AF         	call	_CANisRxReady	;wreg free
 18740  013B12  0900               	iorlw	0
 18741  013B14  B4D8               	btfsc	status,2,c
 18742  013B16  D103               	goto	i2l8548
 18743                           
 18744                           ;RemoteCan.c: 127: CANreceiveMessage(&msg);
 18745  013B18  0E19               	movlw	low _msg
 18746  013B1A  6E3A               	movwf	CANreceiveMessage@msg,c
 18747  013B1C  0E00               	movlw	high _msg
 18748  013B1E  6E3B               	movwf	CANreceiveMessage@msg+1,c
 18749  013B20  ECEE  F094         	call	_CANreceiveMessage	;wreg free
 18750                           
 18751                           ;RemoteCan.c: 128: RTR_Flag = msg.RTR;
 18752  013B24  B027               	btfsc	_msg+14,0,c
 18753  013B26  D002               	bra	i2u1054_45
 18754  013B28  9E4B               	bcf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 18755  013B2A  D001               	bra	i2u1054_46
 18756  013B2C                     i2u1054_45:
 18757  013B2C  8E4B               	bsf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 18758  013B2E                     i2u1054_46:
 18759                           
 18760                           ;RemoteCan.c: 129: id = msg.identifier;
 18761  013B2E  C019  F005         	movff	_msg,_id	;volatile
 18762  013B32  C01A  F006         	movff	_msg+1,_id+1	;volatile
 18763  013B36  C01B  F007         	movff	_msg+2,_id+2	;volatile
 18764  013B3A  C01C  F008         	movff	_msg+3,_id+3	;volatile
 18765                           
 18766                           ;RemoteCan.c: 130: newMessageCan = 1;
 18767  013B3E  864C               	bsf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
 18768                           
 18769                           ;RemoteCan.c: 131: if (id == 0b00000001000) {
 18770  013B40  0E08               	movlw	8
 18771  013B42  1805               	xorwf	_id,w,c	;volatile
 18772  013B44  1006               	iorwf	_id+1,w,c	;volatile
 18773  013B46  1007               	iorwf	_id+2,w,c	;volatile
 18774  013B48  1008               	iorwf	_id+3,w,c	;volatile
 18775  013B4A  A4D8               	btfss	status,2,c
 18776  013B4C  D01B               	goto	i2l8490
 18777                           
 18778                           ;RemoteCan.c: 132: for (unsigned char i = 0; i < 8; i++) {
 18779  013B4E  0E00               	movlw	0
 18780  013B50  6E4A               	movwf	ISR_alta@i,c
 18781  013B52                     i2l8480:
 18782  013B52  0E07               	movlw	7
 18783  013B54  644A               	cpfsgt	ISR_alta@i,c
 18784  013B56  D001               	goto	i2l8484
 18785  013B58  D015               	goto	i2l8490
 18786  013B5A                     i2l8484:
 18787                           
 18788                           ;RemoteCan.c: 133: data_speed_rx[i] = msg.data[i];
 18789  013B5A  504A               	movf	ISR_alta@i,w,c
 18790  013B5C  0D01               	mullw	1
 18791  013B5E  0E1D               	movlw	low (_msg+4)
 18792  013B60  24F3               	addwf	prodl,w,c
 18793  013B62  6ED9               	movwf	fsr2l,c
 18794  013B64  0E00               	movlw	high (_msg+4)
 18795  013B66  20F4               	addwfc	prodh,w,c
 18796  013B68  6EDA               	movwf	fsr2h,c
 18797  013B6A  504A               	movf	ISR_alta@i,w,c
 18798  013B6C  0D01               	mullw	1
 18799  013B6E  0E00               	movlw	low _data_speed_rx
 18800  013B70  24F3               	addwf	prodl,w,c
 18801  013B72  6EE1               	movwf	fsr1l,c
 18802  013B74  0E01               	movlw	high _data_speed_rx
 18803  013B76  20F4               	addwfc	prodh,w,c
 18804  013B78  6EE2               	movwf	fsr1h,c
 18805  013B7A  CFDF FFE7          	movff	indf2,indf1
 18806  013B7E  2A4A               	incf	ISR_alta@i,f,c
 18807  013B80  D7E8               	goto	i2l8480
 18808  013B82  D000               	goto	i2l8490
 18809  013B84                     i2l8490:
 18810                           
 18811                           ;RemoteCan.c: 134: }
 18812                           ;RemoteCan.c: 135: }
 18813                           ;RemoteCan.c: 137: if (id == 0b00000001101) {
 18814  013B84  0E0D               	movlw	13
 18815  013B86  1805               	xorwf	_id,w,c	;volatile
 18816  013B88  1006               	iorwf	_id+1,w,c	;volatile
 18817  013B8A  1007               	iorwf	_id+2,w,c	;volatile
 18818  013B8C  1008               	iorwf	_id+3,w,c	;volatile
 18819  013B8E  A4D8               	btfss	status,2,c
 18820  013B90  D049               	goto	i2l8522
 18821                           
 18822                           ;RemoteCan.c: 138: if (msg.data[0] == 1) {
 18823  013B92  041D               	decf	_msg+4,w,c
 18824  013B94  A4D8               	btfss	status,2,c
 18825  013B96  D008               	goto	i2l8498
 18826                           
 18827                           ;RemoteCan.c: 139: space_available = 1;
 18828  013B98  8E4C               	bsf	_space_available/(0+8),_space_available& (0+7),c	;volatile
 18829                           
 18830                           ;RemoteCan.c: 140: space_gap_reached = 0;
 18831  013B9A  904D               	bcf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
 18832                           
 18833                           ;RemoteCan.c: 141: F2_switch = 0;
 18834  013B9C  984B               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 18835                           
 18836                           ;RemoteCan.c: 142: parking_message_E = 1;
 18837  013B9E  8A4C               	bsf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
 18838                           
 18839                           ;RemoteCan.c: 143: parking_message_ID = 0;
 18840  013BA0  0E00               	movlw	0
 18841  013BA2  0100               	movlb	0	; () banked
 18842  013BA4  6FE4               	movwf	_parking_message_ID& (0+255),b	;volatile
 18843  013BA6  D000               	goto	i2l8498
 18844  013BA8                     i2l8498:
 18845                           
 18846                           ;RemoteCan.c: 144: }
 18847                           ;RemoteCan.c: 146: if (msg.data[0] == 2) {
 18848  013BA8  0E02               	movlw	2
 18849  013BAA  181D               	xorwf	_msg+4,w,c
 18850  013BAC  A4D8               	btfss	status,2,c
 18851  013BAE  D007               	goto	i2l8504
 18852                           
 18853                           ;RemoteCan.c: 147: space_available = 1;
 18854  013BB0  8E4C               	bsf	_space_available/(0+8),_space_available& (0+7),c	;volatile
 18855                           
 18856                           ;RemoteCan.c: 148: space_gap_reached = 1;
 18857  013BB2  804D               	bsf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
 18858                           
 18859                           ;RemoteCan.c: 149: Can_Tx_Force = 1;
 18860  013BB4  844B               	bsf	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
 18861                           
 18862                           ;RemoteCan.c: 150: parking_message_ID = 2;
 18863  013BB6  0E02               	movlw	2
 18864  013BB8  0100               	movlb	0	; () banked
 18865  013BBA  6FE4               	movwf	_parking_message_ID& (0+255),b	;volatile
 18866  013BBC  D000               	goto	i2l8504
 18867  013BBE                     i2l8504:
 18868                           
 18869                           ;RemoteCan.c: 151: }
 18870                           ;RemoteCan.c: 153: if (msg.data[0] == 3) {
 18871  013BBE  0E03               	movlw	3
 18872  013BC0  181D               	xorwf	_msg+4,w,c
 18873  013BC2  A4D8               	btfss	status,2,c
 18874  013BC4  D015               	goto	i2l8512
 18875                           
 18876                           ;RemoteCan.c: 154: parking_message_ID = 6;
 18877  013BC6  0E06               	movlw	6
 18878  013BC8  0100               	movlb	0	; () banked
 18879  013BCA  6FE4               	movwf	_parking_message_ID& (0+255),b	;volatile
 18880                           
 18881                           ; BSR set to: 0
 18882                           ;RemoteCan.c: 155: F1_switch = 0;
 18883  013BCC  964B               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 18884                           
 18885                           ; BSR set to: 0
 18886                           ;RemoteCan.c: 156: pr_time_6 = time_counter + (2000 / 10);
 18887  013BCE  0EC8               	movlw	200
 18888  013BD0  240D               	addwf	_time_counter,w,c	;volatile
 18889  013BD2  0100               	movlb	0	; () banked
 18890  013BD4  6FD7               	movwf	_pr_time_6& (0+255),b	;volatile
 18891  013BD6  0E00               	movlw	0
 18892  013BD8  200E               	addwfc	_time_counter+1,w,c	;volatile
 18893  013BDA  0100               	movlb	0	; () banked
 18894  013BDC  6FD8               	movwf	(_pr_time_6+1)& (0+255),b	;volatile
 18895  013BDE  0E00               	movlw	0
 18896  013BE0  200F               	addwfc	_time_counter+2,w,c	;volatile
 18897  013BE2  0100               	movlb	0	; () banked
 18898  013BE4  6FD9               	movwf	(_pr_time_6+2)& (0+255),b	;volatile
 18899  013BE6  0E00               	movlw	0
 18900  013BE8  2010               	addwfc	_time_counter+3,w,c	;volatile
 18901  013BEA  0100               	movlb	0	; () banked
 18902  013BEC  6FDA               	movwf	(_pr_time_6+3)& (0+255),b	;volatile
 18903  013BEE  D000               	goto	i2l8512
 18904  013BF0                     i2l8512:
 18905                           
 18906                           ;RemoteCan.c: 157: }
 18907                           ;RemoteCan.c: 158: if (msg.data[0] == 4) {
 18908  013BF0  0E04               	movlw	4
 18909  013BF2  181D               	xorwf	_msg+4,w,c
 18910  013BF4  A4D8               	btfss	status,2,c
 18911  013BF6  D016               	goto	i2l8522
 18912                           
 18913                           ;RemoteCan.c: 159: parking_message_ID = 6;
 18914  013BF8  0E06               	movlw	6
 18915  013BFA  0100               	movlb	0	; () banked
 18916  013BFC  6FE4               	movwf	_parking_message_ID& (0+255),b	;volatile
 18917                           
 18918                           ; BSR set to: 0
 18919                           ;RemoteCan.c: 160: parking_error = 1;
 18920  013BFE  884C               	bsf	_parking_error/(0+8),_parking_error& (0+7),c	;volatile
 18921                           
 18922                           ; BSR set to: 0
 18923                           ;RemoteCan.c: 161: F1_switch = 0;
 18924  013C00  964B               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 18925                           
 18926                           ; BSR set to: 0
 18927                           ;RemoteCan.c: 162: pr_time_6 = time_counter + (2000 / 10);
 18928  013C02  0EC8               	movlw	200
 18929  013C04  240D               	addwf	_time_counter,w,c	;volatile
 18930  013C06  0100               	movlb	0	; () banked
 18931  013C08  6FD7               	movwf	_pr_time_6& (0+255),b	;volatile
 18932  013C0A  0E00               	movlw	0
 18933  013C0C  200E               	addwfc	_time_counter+1,w,c	;volatile
 18934  013C0E  0100               	movlb	0	; () banked
 18935  013C10  6FD8               	movwf	(_pr_time_6+1)& (0+255),b	;volatile
 18936  013C12  0E00               	movlw	0
 18937  013C14  200F               	addwfc	_time_counter+2,w,c	;volatile
 18938  013C16  0100               	movlb	0	; () banked
 18939  013C18  6FD9               	movwf	(_pr_time_6+2)& (0+255),b	;volatile
 18940  013C1A  0E00               	movlw	0
 18941  013C1C  2010               	addwfc	_time_counter+3,w,c	;volatile
 18942  013C1E  0100               	movlb	0	; () banked
 18943  013C20  6FDA               	movwf	(_pr_time_6+3)& (0+255),b	;volatile
 18944                           
 18945                           ; BSR set to: 0
 18946  013C22  D000               	goto	i2l8522
 18947  013C24                     i2l8522:
 18948                           
 18949                           ;RemoteCan.c: 163: }
 18950                           ;RemoteCan.c: 164: }
 18951                           ;RemoteCan.c: 166: if (id == 0b00000010000) {
 18952  013C24  0E10               	movlw	16
 18953  013C26  1805               	xorwf	_id,w,c	;volatile
 18954  013C28  1006               	iorwf	_id+1,w,c	;volatile
 18955  013C2A  1007               	iorwf	_id+2,w,c	;volatile
 18956  013C2C  1008               	iorwf	_id+3,w,c	;volatile
 18957  013C2E  A4D8               	btfss	status,2,c
 18958  013C30  D008               	goto	i2l8526
 18959                           
 18960                           ;RemoteCan.c: 167: steering_correction_dir = msg.data[1];
 18961  013C32  B01E               	btfsc	_msg+5,0,c
 18962  013C34  D002               	bra	i2u1064_45
 18963  013C36  924D               	bcf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
 18964  013C38  D001               	bra	i2u1064_46
 18965  013C3A                     i2u1064_45:
 18966  013C3A  824D               	bsf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
 18967  013C3C                     i2u1064_46:
 18968                           
 18969                           ;RemoteCan.c: 168: steering_correction = msg.data[0];
 18970  013C3C  C01D  F0E6         	movff	_msg+4,_steering_correction	;volatile
 18971  013C40  D000               	goto	i2l8526
 18972  013C42                     i2l8526:
 18973                           
 18974                           ;RemoteCan.c: 169: }
 18975                           ;RemoteCan.c: 171: if (id == 0b00000010001) {
 18976  013C42  0E11               	movlw	17
 18977  013C44  1805               	xorwf	_id,w,c	;volatile
 18978  013C46  1006               	iorwf	_id+1,w,c	;volatile
 18979  013C48  1007               	iorwf	_id+2,w,c	;volatile
 18980  013C4A  1008               	iorwf	_id+3,w,c	;volatile
 18981  013C4C  A4D8               	btfss	status,2,c
 18982  013C4E  D026               	goto	i2l804
 18983                           
 18984                           ;RemoteCan.c: 172: FWD_sensor = (msg.data[0] & 0b01000000) >> 6;
 18985  013C50  C01D  F060         	movff	_msg+4,??_ISR_alta
 18986  013C54  0E06               	movlw	6
 18987  013C56  0100               	movlb	0	; () banked
 18988  013C58  6F61               	movwf	(??_ISR_alta+1)& (0+255),b
 18989  013C5A                     i2u1066_45:
 18990  013C5A  0100               	movlb	0	; () banked
 18991  013C5C  90D8               	bcf	status,0,c
 18992  013C5E  3360               	rrcf	??_ISR_alta& (0+255),f,b
 18993  013C60  0100               	movlb	0	; () banked
 18994  013C62  2F61               	decfsz	(??_ISR_alta+1)& (0+255),f,b
 18995  013C64  D7FA               	goto	i2u1066_45
 18996  013C66  0100               	movlb	0	; () banked
 18997  013C68  3160               	rrcf	??_ISR_alta& (0+255),w,b
 18998  013C6A  0100               	movlb	0	; () banked
 18999  013C6C  B0D8               	btfsc	status,0,c
 19000  013C6E  D002               	bra	i2u1067_45
 19001  013C70  9A4B               	bcf	_FWD_sensor/(0+8),_FWD_sensor& (0+7),c	;volatile
 19002  013C72  D001               	bra	i2u1067_46
 19003  013C74                     i2u1067_45:
 19004  013C74  8A4B               	bsf	_FWD_sensor/(0+8),_FWD_sensor& (0+7),c	;volatile
 19005  013C76                     i2u1067_46:
 19006                           
 19007                           ;RemoteCan.c: 173: BKWD_sensor = (msg.data[0] & 0b00001000) >> 3;
 19008  013C76  C01D  F060         	movff	_msg+4,??_ISR_alta
 19009  013C7A  0100               	movlb	0	; () banked
 19010  013C7C  90D8               	bcf	status,0,c
 19011  013C7E  3360               	rrcf	??_ISR_alta& (0+255),f,b
 19012  013C80  0100               	movlb	0	; () banked
 19013  013C82  90D8               	bcf	status,0,c
 19014  013C84  3360               	rrcf	??_ISR_alta& (0+255),f,b
 19015  013C86  0100               	movlb	0	; () banked
 19016  013C88  90D8               	bcf	status,0,c
 19017  013C8A  3360               	rrcf	??_ISR_alta& (0+255),f,b
 19018  013C8C  0100               	movlb	0	; () banked
 19019  013C8E  3160               	rrcf	??_ISR_alta& (0+255),w,b
 19020  013C90  0100               	movlb	0	; () banked
 19021  013C92  B0D8               	btfsc	status,0,c
 19022  013C94  D002               	bra	i2u1068_45
 19023  013C96  924B               	bcf	_BKWD_sensor/(0+8),_BKWD_sensor& (0+7),c	;volatile
 19024  013C98  D001               	bra	i2u1068_46
 19025  013C9A                     i2u1068_45:
 19026  013C9A  824B               	bsf	_BKWD_sensor/(0+8),_BKWD_sensor& (0+7),c	;volatile
 19027  013C9C                     i2u1068_46:
 19028  013C9C                     i2l804:
 19029                           
 19030                           ;RemoteCan.c: 174: }
 19031                           ;RemoteCan.c: 175: if (id == 0xAA) {
 19032  013C9C  0EAA               	movlw	170
 19033  013C9E  1805               	xorwf	_id,w,c	;volatile
 19034  013CA0  1006               	iorwf	_id+1,w,c	;volatile
 19035  013CA2  1007               	iorwf	_id+2,w,c	;volatile
 19036  013CA4  1008               	iorwf	_id+3,w,c	;volatile
 19037  013CA6  A4D8               	btfss	status,2,c
 19038  013CA8  D00B               	goto	i2l8534
 19039                           
 19040                           ;RemoteCan.c: 176: user_data = msg.data[1];
 19041  013CAA  C01E  F015         	movff	_msg+5,_user_data	;volatile
 19042  013CAE  6A16               	clrf	_user_data+1,c	;volatile
 19043                           
 19044                           ;RemoteCan.c: 177: user_data = ((user_data << 8) | msg.data[0]);
 19045  013CB0  5015               	movf	_user_data,w,c	;volatile
 19046  013CB2  0100               	movlb	0	; () banked
 19047  013CB4  6F60               	movwf	??_ISR_alta& (0+255),b
 19048  013CB6  501D               	movf	_msg+4,w,c
 19049  013CB8  6E15               	movwf	_user_data,c	;volatile
 19050  013CBA  C060  F016         	movff	??_ISR_alta,_user_data+1	;volatile
 19051  013CBE  D000               	goto	i2l8534
 19052  013CC0                     i2l8534:
 19053                           
 19054                           ;RemoteCan.c: 178: }
 19055                           ;RemoteCan.c: 180: if (id == 0b00000000100) {
 19056  013CC0  0E04               	movlw	4
 19057  013CC2  1805               	xorwf	_id,w,c	;volatile
 19058  013CC4  1006               	iorwf	_id+1,w,c	;volatile
 19059  013CC6  1007               	iorwf	_id+2,w,c	;volatile
 19060  013CC8  1008               	iorwf	_id+3,w,c	;volatile
 19061  013CCA  B4D8               	btfsc	status,2,c
 19062                           
 19063                           ;RemoteCan.c: 181: if (RTR_Flag == 1) {
 19064  013CCC  AE4B               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 19065  013CCE  D027               	goto	i2l8548
 19066                           
 19067                           ;RemoteCan.c: 182: pr_time_4 = time_counter;
 19068  013CD0  C00D  F009         	movff	_time_counter,_pr_time_4	;volatile
 19069  013CD4  C00E  F00A         	movff	_time_counter+1,_pr_time_4+1	;volatile
 19070  013CD8  C00F  F00B         	movff	_time_counter+2,_pr_time_4+2	;volatile
 19071  013CDC  C010  F00C         	movff	_time_counter+3,_pr_time_4+3	;volatile
 19072                           
 19073                           ;RemoteCan.c: 183: data[0] = 0x03;
 19074  013CE0  0E03               	movlw	3
 19075  013CE2  6E28               	movwf	_data,c
 19076                           
 19077                           ;RemoteCan.c: 184: _delay((unsigned long)((10)*(16000000/4000000.0)));
 19078  013CE4  0E0D               	movlw	13
 19079  013CE6                     i2u1121_47:
 19080  013CE6  2EE8               	decfsz	wreg,f,c
 19081  013CE8  D7FE               	goto	i2u1121_47
 19082  013CEA  F000               	nop	
 19083                           
 19084                           ;RemoteCan.c: 185: while (CANisTxReady() != 1);
 19085  013CEC  D000               	goto	i2l8544
 19086  013CEE                     i2l8544:
 19087  013CEE  EC58  F0AF         	call	i2_CANisTxReady	;wreg free
 19088  013CF2  06E8               	decf	wreg,f,c
 19089  013CF4  A4D8               	btfss	status,2,c
 19090  013CF6  D7FB               	goto	i2l8544
 19091                           
 19092                           ;RemoteCan.c: 186: CANsendMessage(0b00000000100, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
 19093  013CF8  0E04               	movlw	4
 19094  013CFA  6E3A               	movwf	i2CANsendMessage@identifier,c
 19095  013CFC  0E00               	movlw	0
 19096  013CFE  6E3B               	movwf	i2CANsendMessage@identifier+1,c
 19097  013D00  0E00               	movlw	0
 19098  013D02  6E3C               	movwf	i2CANsendMessage@identifier+2,c
 19099  013D04  0E00               	movlw	0
 19100  013D06  6E3D               	movwf	i2CANsendMessage@identifier+3,c
 19101  013D08  0E28               	movlw	low _data
 19102  013D0A  6E3E               	movwf	i2CANsendMessage@data,c
 19103  013D0C  0E00               	movlw	high _data
 19104  013D0E  6E3F               	movwf	i2CANsendMessage@data+1,c
 19105  013D10  0E08               	movlw	8
 19106  013D12  6E40               	movwf	i2CANsendMessage@dataLength,c
 19107  013D14  0EBC               	movlw	188
 19108  013D16  6E41               	movwf	i2CANsendMessage@flags,c
 19109  013D18  EC9C  F091         	call	i2_CANsendMessage	;wreg free
 19110  013D1C  D000               	goto	i2l8548
 19111  013D1E                     i2l8548:
 19112                           
 19113                           ;RemoteCan.c: 192: }
 19114                           ;RemoteCan.c: 193: }
 19115                           ;RemoteCan.c: 194: }
 19116                           ;RemoteCan.c: 195: PIR3bits.RXB1IF = 0;
 19117  013D1E  92A4               	bcf	4004,1,c	;volatile
 19118                           
 19119                           ;RemoteCan.c: 196: PIR3bits.RXB0IF = 0;
 19120  013D20  90A4               	bcf	4004,0,c	;volatile
 19121  013D22  D000               	goto	i2l811
 19122  013D24                     i2l811:
 19123  013D24  C06F  FFF5         	movff	??_ISR_alta+15,tablat
 19124  013D28  C06E  FFF8         	movff	??_ISR_alta+14,tblptru
 19125  013D2C  C06D  FFF7         	movff	??_ISR_alta+13,tblptrh
 19126  013D30  C06C  FFF6         	movff	??_ISR_alta+12,tblptrl
 19127  013D34  C06B  FFF4         	movff	??_ISR_alta+11,prodh
 19128  013D38  C06A  FFF3         	movff	??_ISR_alta+10,prodl
 19129  013D3C  C069  FFDA         	movff	??_ISR_alta+9,fsr2h
 19130  013D40  C068  FFD9         	movff	??_ISR_alta+8,fsr2l
 19131  013D44  C067  FFE2         	movff	??_ISR_alta+7,fsr1h
 19132  013D48  C066  FFE1         	movff	??_ISR_alta+6,fsr1l
 19133  013D4C  C065  FFEA         	movff	??_ISR_alta+5,fsr0h
 19134  013D50  C064  FFE9         	movff	??_ISR_alta+4,fsr0l
 19135  013D54  C063  FFFB         	movff	??_ISR_alta+3,pclatu
 19136  013D58  C062  FFFA         	movff	??_ISR_alta+2,pclath
 19137  013D5C  0011               	retfie		f
 19138  013D5E                     __end_of_ISR_alta:
 19139                           	opt stack 0
 19140                           pclatu	equ	0xFFB
 19141                           pclath	equ	0xFFA
 19142                           tblptru	equ	0xFF8
 19143                           tblptrh	equ	0xFF7
 19144                           tblptrl	equ	0xFF6
 19145                           tablat	equ	0xFF5
 19146                           prodh	equ	0xFF4
 19147                           prodl	equ	0xFF3
 19148                           intcon	equ	0xFF2
 19149                           postinc0	equ	0xFEE
 19150                           fsr0h	equ	0xFEA
 19151                           fsr0l	equ	0xFE9
 19152                           wreg	equ	0xFE8
 19153                           indf1	equ	0xFE7
 19154                           plusw1	equ	0xFE3
 19155                           fsr1h	equ	0xFE2
 19156                           fsr1l	equ	0xFE1
 19157                           bsr	equ	0xFE0
 19158                           indf2	equ	0xFDF
 19159                           postinc2	equ	0xFDE
 19160                           plusw2	equ	0xFDB
 19161                           fsr2h	equ	0xFDA
 19162                           fsr2l	equ	0xFD9
 19163                           status	equ	0xFD8
 19164                           
 19165 ;; *************** function i2_CANsendMessage *****************
 19166 ;; Defined at:
 19167 ;;		line 294 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 19168 ;; Parameters:    Size  Location     Type
 19169 ;;  identifier      4   17[COMRAM] unsigned long 
 19170 ;;  data            2   21[COMRAM] PTR unsigned char 
 19171 ;;		 -> data_speed(1), park_assist_state(8), data_steering(1), data_brake(1), 
 19172 ;;		 -> data(1), 
 19173 ;;  dataLength      1   23[COMRAM] unsigned char 
 19174 ;;  flags           1   24[COMRAM] enum E16950
 19175 ;; Auto vars:     Size  Location     Type
 19176 ;;  CANsendMessa    4   29[COMRAM] unsigned long 
 19177 ;; Return value:  Size  Location     Type
 19178 ;;		None               void
 19179 ;; Registers used:
 19180 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19181 ;; Tracked objects:
 19182 ;;		On entry : 0/0
 19183 ;;		On exit  : 0/0
 19184 ;;		Unchanged: 0/0
 19185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19186 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19187 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19188 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19189 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19190 ;;Total ram usage:       16 bytes
 19191 ;; Hardware stack levels used:    1
 19192 ;; This function calls:
 19193 ;;		Nothing
 19194 ;; This function is called by:
 19195 ;;		_ISR_alta
 19196 ;; This function uses a non-reentrant model
 19197 ;;
 19198                           
 19199                           	psect	text63
 19200  012338                     __ptext63:
 19201                           	opt stack 0
 19202  012338                     i2_CANsendMessage:
 19203                           	opt stack 20
 19204                           
 19205                           ;inc\CANlib.h: 296: unsigned long tamp;
 19206                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 19207                           
 19208                           ;incstack = 0
 19209  012338  010F               	movlb	15	; () banked
 19210  01233A  B740               	btfsc	64,3,b	;volatile
 19211  01233C  D118               	goto	i2l385
 19212                           
 19213                           ; BSR set to: 15
 19214                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 19215  01233E  C040  FF45         	movff	i2CANsendMessage@dataLength,3909	;volatile
 19216                           
 19217                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 19218  012342  AC41               	btfss	i2CANsendMessage@flags,6,c
 19219  012344  D003               	goto	i2l386
 19220                           
 19221                           ; BSR set to: 15
 19222                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 19223  012346  010F               	movlb	15	; () banked
 19224  012348  8D45               	bsf	69,6,b	;volatile
 19225  01234A  D002               	goto	i2l387
 19226  01234C                     i2l386:
 19227                           
 19228                           ; BSR set to: 15
 19229                           ;inc\CANlib.h: 302: else
 19230                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 19231  01234C  010F               	movlb	15	; () banked
 19232  01234E  9D45               	bcf	69,6,b	;volatile
 19233  012350                     i2l387:
 19234                           
 19235                           ; BSR set to: 15
 19236                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 19237  012350  A641               	btfss	i2CANsendMessage@flags,3,c
 19238  012352  D067               	goto	i2l388
 19239                           
 19240                           ; BSR set to: 15
 19241                           ;inc\CANlib.h: 306: {
 19242                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 19243  012354  503A               	movf	i2CANsendMessage@identifier,w,c
 19244  012356  6E46               	movwf	i2CANsendMessage@tamp,c
 19245  012358  6A47               	clrf	i2CANsendMessage@tamp+1,c
 19246  01235A  6A48               	clrf	i2CANsendMessage@tamp+2,c
 19247  01235C  6A49               	clrf	i2CANsendMessage@tamp+3,c
 19248                           
 19249                           ; BSR set to: 15
 19250                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 19251  01235E  C046  FF44         	movff	i2CANsendMessage@tamp,3908	;volatile
 19252                           
 19253                           ; BSR set to: 15
 19254                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 19255  012362  0E00               	movlw	0
 19256  012364  143A               	andwf	i2CANsendMessage@identifier,w,c
 19257  012366  6E46               	movwf	i2CANsendMessage@tamp,c
 19258  012368  0EFF               	movlw	255
 19259  01236A  143B               	andwf	i2CANsendMessage@identifier+1,w,c
 19260  01236C  6E47               	movwf	i2CANsendMessage@tamp+1,c
 19261  01236E  0E00               	movlw	0
 19262  012370  143C               	andwf	i2CANsendMessage@identifier+2,w,c
 19263  012372  6E48               	movwf	i2CANsendMessage@tamp+2,c
 19264  012374  0E00               	movlw	0
 19265  012376  143D               	andwf	i2CANsendMessage@identifier+3,w,c
 19266  012378  6E49               	movwf	i2CANsendMessage@tamp+3,c
 19267                           
 19268                           ; BSR set to: 15
 19269                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 19270  01237A  C046  F042         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19271  01237E  C047  F043         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19272  012382  C048  F044         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19273  012386  C049  F045         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19274  01238A  C043  F042         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 19275  01238E  C044  F043         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 19276  012392  C045  F044         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 19277  012396  6A45               	clrf	??i2_CANsendMessage+3,c
 19278  012398  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19279  01239C  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19280  0123A0  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19281  0123A4  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19282                           
 19283                           ; BSR set to: 15
 19284                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 19285  0123A8  C046  FF43         	movff	i2CANsendMessage@tamp,3907	;volatile
 19286                           
 19287                           ; BSR set to: 15
 19288                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 19289  0123AC  0E00               	movlw	0
 19290  0123AE  010F               	movlb	15	; () banked
 19291  0123B0  6F42               	movwf	66,b	;volatile
 19292                           
 19293                           ; BSR set to: 15
 19294                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 19295  0123B2  010F               	movlb	15	; () banked
 19296  0123B4  8742               	bsf	66,3,b	;volatile
 19297                           
 19298                           ; BSR set to: 15
 19299                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 19300  0123B6  A03C               	btfss	i2CANsendMessage@identifier+2,0,c
 19301  0123B8  D002               	goto	i2l389
 19302                           
 19303                           ; BSR set to: 15
 19304                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 19305  0123BA  010F               	movlb	15	; () banked
 19306  0123BC  8142               	bsf	66,0,b	;volatile
 19307  0123BE                     i2l389:
 19308                           
 19309                           ; BSR set to: 15
 19310                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 19311  0123BE  A23C               	btfss	i2CANsendMessage@identifier+2,1,c
 19312  0123C0  D002               	goto	i2l390
 19313                           
 19314                           ; BSR set to: 15
 19315                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 19316  0123C2  010F               	movlb	15	; () banked
 19317  0123C4  8342               	bsf	66,1,b	;volatile
 19318  0123C6                     i2l390:
 19319                           
 19320                           ; BSR set to: 15
 19321                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 19322  0123C6  A43C               	btfss	i2CANsendMessage@identifier+2,2,c
 19323  0123C8  D002               	goto	i2l391
 19324                           
 19325                           ; BSR set to: 15
 19326                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 19327  0123CA  010F               	movlb	15	; () banked
 19328  0123CC  8B42               	bsf	66,5,b	;volatile
 19329  0123CE                     i2l391:
 19330                           
 19331                           ; BSR set to: 15
 19332                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 19333  0123CE  A63C               	btfss	i2CANsendMessage@identifier+2,3,c
 19334  0123D0  D002               	goto	i2l392
 19335                           
 19336                           ; BSR set to: 15
 19337                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 19338  0123D2  010F               	movlb	15	; () banked
 19339  0123D4  8D42               	bsf	66,6,b	;volatile
 19340  0123D6                     i2l392:
 19341                           
 19342                           ; BSR set to: 15
 19343                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 19344  0123D6  A83C               	btfss	i2CANsendMessage@identifier+2,4,c
 19345  0123D8  D003               	goto	i2l6716
 19346                           
 19347                           ; BSR set to: 15
 19348                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 19349  0123DA  010F               	movlb	15	; () banked
 19350  0123DC  8F42               	bsf	66,7,b	;volatile
 19351  0123DE  D000               	goto	i2l6716
 19352  0123E0                     i2l6716:
 19353                           
 19354                           ; BSR set to: 15
 19355                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 19356  0123E0  C03A  F042         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19357  0123E4  C03B  F043         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19358  0123E8  C03C  F044         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19359  0123EC  C03D  F045         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19360  0123F0  0E16               	movlw	22
 19361  0123F2  D005               	goto	i2u802_40
 19362  0123F4                     i2u802_45:
 19363  0123F4  90D8               	bcf	status,0,c
 19364  0123F6  3245               	rrcf	??i2_CANsendMessage+3,f,c
 19365  0123F8  3244               	rrcf	??i2_CANsendMessage+2,f,c
 19366  0123FA  3243               	rrcf	??i2_CANsendMessage+1,f,c
 19367  0123FC  3242               	rrcf	??i2_CANsendMessage,f,c
 19368  0123FE                     i2u802_40:
 19369  0123FE  2EE8               	decfsz	wreg,f,c
 19370  012400  D7F9               	goto	i2u802_45
 19371  012402  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19372  012406  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19373  01240A  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19374  01240E  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19375                           
 19376                           ; BSR set to: 15
 19377                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 19378  012412  5046               	movf	i2CANsendMessage@tamp,w,c
 19379  012414  6E46               	movwf	i2CANsendMessage@tamp,c
 19380  012416  6A47               	clrf	i2CANsendMessage@tamp+1,c
 19381  012418  6A48               	clrf	i2CANsendMessage@tamp+2,c
 19382  01241A  6A49               	clrf	i2CANsendMessage@tamp+3,c
 19383                           
 19384                           ; BSR set to: 15
 19385                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 19386  01241C  C046  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 19387                           
 19388                           ;inc\CANlib.h: 332: }
 19389  012420  D04E               	goto	i2l6736
 19390  012422                     i2l388:
 19391                           
 19392                           ; BSR set to: 15
 19393                           ;inc\CANlib.h: 334: else
 19394                           ;inc\CANlib.h: 336: {
 19395                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 19396  012422  010F               	movlb	15	; () banked
 19397  012424  9742               	bcf	66,3,b	;volatile
 19398                           
 19399                           ; BSR set to: 15
 19400                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 19401  012426  C03A  F042         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19402  01242A  C03B  F043         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19403  01242E  C03C  F044         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19404  012432  C03D  F045         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19405  012436  0E04               	movlw	4
 19406  012438  D005               	goto	i2u803_40
 19407  01243A                     i2u803_45:
 19408  01243A  90D8               	bcf	status,0,c
 19409  01243C  3245               	rrcf	??i2_CANsendMessage+3,f,c
 19410  01243E  3244               	rrcf	??i2_CANsendMessage+2,f,c
 19411  012440  3243               	rrcf	??i2_CANsendMessage+1,f,c
 19412  012442  3242               	rrcf	??i2_CANsendMessage,f,c
 19413  012444                     i2u803_40:
 19414  012444  2EE8               	decfsz	wreg,f,c
 19415  012446  D7F9               	goto	i2u803_45
 19416  012448  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19417  01244C  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19418  012450  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19419  012454  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19420                           
 19421                           ; BSR set to: 15
 19422                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 19423  012458  5046               	movf	i2CANsendMessage@tamp,w,c
 19424  01245A  6E46               	movwf	i2CANsendMessage@tamp,c
 19425  01245C  6A47               	clrf	i2CANsendMessage@tamp+1,c
 19426  01245E  6A48               	clrf	i2CANsendMessage@tamp+2,c
 19427  012460  6A49               	clrf	i2CANsendMessage@tamp+3,c
 19428                           
 19429                           ; BSR set to: 15
 19430                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 19431  012462  C046  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 19432                           
 19433                           ; BSR set to: 15
 19434                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 19435  012466  0E07               	movlw	7
 19436  012468  143A               	andwf	i2CANsendMessage@identifier,w,c
 19437  01246A  6E46               	movwf	i2CANsendMessage@tamp,c
 19438  01246C  0E00               	movlw	0
 19439  01246E  143B               	andwf	i2CANsendMessage@identifier+1,w,c
 19440  012470  6E47               	movwf	i2CANsendMessage@tamp+1,c
 19441  012472  0E00               	movlw	0
 19442  012474  143C               	andwf	i2CANsendMessage@identifier+2,w,c
 19443  012476  6E48               	movwf	i2CANsendMessage@tamp+2,c
 19444  012478  0E00               	movlw	0
 19445  01247A  143D               	andwf	i2CANsendMessage@identifier+3,w,c
 19446  01247C  6E49               	movwf	i2CANsendMessage@tamp+3,c
 19447                           
 19448                           ; BSR set to: 15
 19449                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 19450  01247E  C046  F042         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19451  012482  C047  F043         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19452  012486  C048  F044         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19453  01248A  C049  F045         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19454  01248E  0E05               	movlw	5
 19455  012490                     i2u804_45:
 19456  012490  90D8               	bcf	status,0,c
 19457  012492  3642               	rlcf	??i2_CANsendMessage,f,c
 19458  012494  3643               	rlcf	??i2_CANsendMessage+1,f,c
 19459  012496  3644               	rlcf	??i2_CANsendMessage+2,f,c
 19460  012498  3645               	rlcf	??i2_CANsendMessage+3,f,c
 19461  01249A  2EE8               	decfsz	wreg,f,c
 19462  01249C  D7F9               	goto	i2u804_45
 19463  01249E  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19464  0124A2  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19465  0124A6  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19466  0124AA  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19467                           
 19468                           ; BSR set to: 15
 19469                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 19470  0124AE  010F               	movlb	15	; () banked
 19471  0124B0  5142               	movf	66,w,b	;volatile
 19472  0124B2  0B1F               	andlw	31
 19473  0124B4  010F               	movlb	15	; () banked
 19474  0124B6  6F42               	movwf	66,b	;volatile
 19475                           
 19476                           ; BSR set to: 15
 19477                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 19478  0124B8  C046  FF42         	movff	i2CANsendMessage@tamp,3906	;volatile
 19479  0124BC  D000               	goto	i2l6736
 19480  0124BE                     i2l6736:
 19481                           
 19482                           ; BSR set to: 15
 19483                           ;inc\CANlib.h: 347: }
 19484                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 19485  0124BE  A041               	btfss	i2CANsendMessage@flags,0,c
 19486  0124C0  D003               	goto	i2l395
 19487                           
 19488                           ; BSR set to: 15
 19489                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 19490  0124C2  010F               	movlb	15	; () banked
 19491  0124C4  8140               	bsf	64,0,b	;volatile
 19492  0124C6  D002               	goto	i2l396
 19493  0124C8                     i2l395:
 19494                           
 19495                           ; BSR set to: 15
 19496                           ;inc\CANlib.h: 351: else
 19497                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 19498  0124C8  010F               	movlb	15	; () banked
 19499  0124CA  9140               	bcf	64,0,b	;volatile
 19500  0124CC                     i2l396:
 19501                           
 19502                           ; BSR set to: 15
 19503                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 19504  0124CC  A241               	btfss	i2CANsendMessage@flags,1,c
 19505  0124CE  D003               	goto	i2l397
 19506                           
 19507                           ; BSR set to: 15
 19508                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 19509  0124D0  010F               	movlb	15	; () banked
 19510  0124D2  8340               	bsf	64,1,b	;volatile
 19511  0124D4  D003               	goto	i2l6742
 19512  0124D6                     i2l397:
 19513                           
 19514                           ; BSR set to: 15
 19515                           ;inc\CANlib.h: 355: else
 19516                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 19517  0124D6  010F               	movlb	15	; () banked
 19518  0124D8  9340               	bcf	64,1,b	;volatile
 19519  0124DA  D000               	goto	i2l6742
 19520  0124DC                     i2l6742:
 19521                           
 19522                           ; BSR set to: 15
 19523                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 19524  0124DC  C03E  FFD9         	movff	i2CANsendMessage@data,fsr2l
 19525  0124E0  C03F  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 19526  0124E4  50DF               	movf	indf2,w,c
 19527  0124E6  010F               	movlb	15	; () banked
 19528  0124E8  6F46               	movwf	70,b	;volatile
 19529                           
 19530                           ; BSR set to: 15
 19531                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 19532  0124EA  EE20 F001          	lfsr	2,1
 19533  0124EE  503E               	movf	i2CANsendMessage@data,w,c
 19534  0124F0  26D9               	addwf	fsr2l,f,c
 19535  0124F2  503F               	movf	i2CANsendMessage@data+1,w,c
 19536  0124F4  22DA               	addwfc	fsr2h,f,c
 19537  0124F6  50DF               	movf	indf2,w,c
 19538  0124F8  010F               	movlb	15	; () banked
 19539  0124FA  6F47               	movwf	71,b	;volatile
 19540                           
 19541                           ; BSR set to: 15
 19542                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 19543  0124FC  EE20 F002          	lfsr	2,2
 19544  012500  503E               	movf	i2CANsendMessage@data,w,c
 19545  012502  26D9               	addwf	fsr2l,f,c
 19546  012504  503F               	movf	i2CANsendMessage@data+1,w,c
 19547  012506  22DA               	addwfc	fsr2h,f,c
 19548  012508  50DF               	movf	indf2,w,c
 19549  01250A  010F               	movlb	15	; () banked
 19550  01250C  6F48               	movwf	72,b	;volatile
 19551                           
 19552                           ; BSR set to: 15
 19553                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 19554  01250E  EE20 F003          	lfsr	2,3
 19555  012512  503E               	movf	i2CANsendMessage@data,w,c
 19556  012514  26D9               	addwf	fsr2l,f,c
 19557  012516  503F               	movf	i2CANsendMessage@data+1,w,c
 19558  012518  22DA               	addwfc	fsr2h,f,c
 19559  01251A  50DF               	movf	indf2,w,c
 19560  01251C  010F               	movlb	15	; () banked
 19561  01251E  6F49               	movwf	73,b	;volatile
 19562                           
 19563                           ; BSR set to: 15
 19564                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 19565  012520  EE20 F004          	lfsr	2,4
 19566  012524  503E               	movf	i2CANsendMessage@data,w,c
 19567  012526  26D9               	addwf	fsr2l,f,c
 19568  012528  503F               	movf	i2CANsendMessage@data+1,w,c
 19569  01252A  22DA               	addwfc	fsr2h,f,c
 19570  01252C  50DF               	movf	indf2,w,c
 19571  01252E  010F               	movlb	15	; () banked
 19572  012530  6F4A               	movwf	74,b	;volatile
 19573                           
 19574                           ; BSR set to: 15
 19575                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 19576  012532  EE20 F005          	lfsr	2,5
 19577  012536  503E               	movf	i2CANsendMessage@data,w,c
 19578  012538  26D9               	addwf	fsr2l,f,c
 19579  01253A  503F               	movf	i2CANsendMessage@data+1,w,c
 19580  01253C  22DA               	addwfc	fsr2h,f,c
 19581  01253E  50DF               	movf	indf2,w,c
 19582  012540  010F               	movlb	15	; () banked
 19583  012542  6F4B               	movwf	75,b	;volatile
 19584                           
 19585                           ; BSR set to: 15
 19586                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 19587  012544  EE20 F006          	lfsr	2,6
 19588  012548  503E               	movf	i2CANsendMessage@data,w,c
 19589  01254A  26D9               	addwf	fsr2l,f,c
 19590  01254C  503F               	movf	i2CANsendMessage@data+1,w,c
 19591  01254E  22DA               	addwfc	fsr2h,f,c
 19592  012550  50DF               	movf	indf2,w,c
 19593  012552  010F               	movlb	15	; () banked
 19594  012554  6F4C               	movwf	76,b	;volatile
 19595                           
 19596                           ; BSR set to: 15
 19597                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 19598  012556  EE20 F007          	lfsr	2,7
 19599  01255A  503E               	movf	i2CANsendMessage@data,w,c
 19600  01255C  26D9               	addwf	fsr2l,f,c
 19601  01255E  503F               	movf	i2CANsendMessage@data+1,w,c
 19602  012560  22DA               	addwfc	fsr2h,f,c
 19603  012562  50DF               	movf	indf2,w,c
 19604  012564  010F               	movlb	15	; () banked
 19605  012566  6F4D               	movwf	77,b	;volatile
 19606                           
 19607                           ; BSR set to: 15
 19608                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 19609  012568  010F               	movlb	15	; () banked
 19610  01256A  8740               	bsf	64,3,b	;volatile
 19611                           
 19612                           ; BSR set to: 15
 19613                           ;inc\CANlib.h: 368: return;
 19614  01256C  0012               	return	
 19615  01256E                     i2l385:
 19616                           
 19617                           ; BSR set to: 15
 19618                           ;inc\CANlib.h: 369: }
 19619                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 19620  01256E  010F               	movlb	15	; () banked
 19621  012570  B730               	btfsc	48,3,b	;volatile
 19622  012572  D118               	goto	i2l400
 19623                           
 19624                           ; BSR set to: 15
 19625                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 19626  012574  C040  FF35         	movff	i2CANsendMessage@dataLength,3893	;volatile
 19627                           
 19628                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 19629  012578  AC41               	btfss	i2CANsendMessage@flags,6,c
 19630  01257A  D003               	goto	i2l401
 19631                           
 19632                           ; BSR set to: 15
 19633                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 19634  01257C  010F               	movlb	15	; () banked
 19635  01257E  8D35               	bsf	53,6,b	;volatile
 19636  012580  D002               	goto	i2l402
 19637  012582                     i2l401:
 19638                           
 19639                           ; BSR set to: 15
 19640                           ;inc\CANlib.h: 378: else
 19641                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 19642  012582  010F               	movlb	15	; () banked
 19643  012584  9D35               	bcf	53,6,b	;volatile
 19644  012586                     i2l402:
 19645                           
 19646                           ; BSR set to: 15
 19647                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 19648  012586  A641               	btfss	i2CANsendMessage@flags,3,c
 19649  012588  D067               	goto	i2l403
 19650                           
 19651                           ; BSR set to: 15
 19652                           ;inc\CANlib.h: 382: {
 19653                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 19654  01258A  503A               	movf	i2CANsendMessage@identifier,w,c
 19655  01258C  6E46               	movwf	i2CANsendMessage@tamp,c
 19656  01258E  6A47               	clrf	i2CANsendMessage@tamp+1,c
 19657  012590  6A48               	clrf	i2CANsendMessage@tamp+2,c
 19658  012592  6A49               	clrf	i2CANsendMessage@tamp+3,c
 19659                           
 19660                           ; BSR set to: 15
 19661                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 19662  012594  C046  FF34         	movff	i2CANsendMessage@tamp,3892	;volatile
 19663                           
 19664                           ; BSR set to: 15
 19665                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 19666  012598  0E00               	movlw	0
 19667  01259A  143A               	andwf	i2CANsendMessage@identifier,w,c
 19668  01259C  6E46               	movwf	i2CANsendMessage@tamp,c
 19669  01259E  0EFF               	movlw	255
 19670  0125A0  143B               	andwf	i2CANsendMessage@identifier+1,w,c
 19671  0125A2  6E47               	movwf	i2CANsendMessage@tamp+1,c
 19672  0125A4  0E00               	movlw	0
 19673  0125A6  143C               	andwf	i2CANsendMessage@identifier+2,w,c
 19674  0125A8  6E48               	movwf	i2CANsendMessage@tamp+2,c
 19675  0125AA  0E00               	movlw	0
 19676  0125AC  143D               	andwf	i2CANsendMessage@identifier+3,w,c
 19677  0125AE  6E49               	movwf	i2CANsendMessage@tamp+3,c
 19678                           
 19679                           ; BSR set to: 15
 19680                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 19681  0125B0  C046  F042         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19682  0125B4  C047  F043         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19683  0125B8  C048  F044         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19684  0125BC  C049  F045         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19685  0125C0  C043  F042         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 19686  0125C4  C044  F043         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 19687  0125C8  C045  F044         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 19688  0125CC  6A45               	clrf	??i2_CANsendMessage+3,c
 19689  0125CE  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19690  0125D2  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19691  0125D6  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19692  0125DA  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19693                           
 19694                           ; BSR set to: 15
 19695                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 19696  0125DE  C046  FF33         	movff	i2CANsendMessage@tamp,3891	;volatile
 19697                           
 19698                           ; BSR set to: 15
 19699                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 19700  0125E2  0E00               	movlw	0
 19701  0125E4  010F               	movlb	15	; () banked
 19702  0125E6  6F32               	movwf	50,b	;volatile
 19703                           
 19704                           ; BSR set to: 15
 19705                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 19706  0125E8  010F               	movlb	15	; () banked
 19707  0125EA  8732               	bsf	50,3,b	;volatile
 19708                           
 19709                           ; BSR set to: 15
 19710                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 19711  0125EC  A03C               	btfss	i2CANsendMessage@identifier+2,0,c
 19712  0125EE  D002               	goto	i2l404
 19713                           
 19714                           ; BSR set to: 15
 19715                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 19716  0125F0  010F               	movlb	15	; () banked
 19717  0125F2  8132               	bsf	50,0,b	;volatile
 19718  0125F4                     i2l404:
 19719                           
 19720                           ; BSR set to: 15
 19721                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 19722  0125F4  A23C               	btfss	i2CANsendMessage@identifier+2,1,c
 19723  0125F6  D002               	goto	i2l405
 19724                           
 19725                           ; BSR set to: 15
 19726                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 19727  0125F8  010F               	movlb	15	; () banked
 19728  0125FA  8332               	bsf	50,1,b	;volatile
 19729  0125FC                     i2l405:
 19730                           
 19731                           ; BSR set to: 15
 19732                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 19733  0125FC  A43C               	btfss	i2CANsendMessage@identifier+2,2,c
 19734  0125FE  D002               	goto	i2l406
 19735                           
 19736                           ; BSR set to: 15
 19737                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 19738  012600  010F               	movlb	15	; () banked
 19739  012602  8B32               	bsf	50,5,b	;volatile
 19740  012604                     i2l406:
 19741                           
 19742                           ; BSR set to: 15
 19743                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 19744  012604  A63C               	btfss	i2CANsendMessage@identifier+2,3,c
 19745  012606  D002               	goto	i2l407
 19746                           
 19747                           ; BSR set to: 15
 19748                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 19749  012608  010F               	movlb	15	; () banked
 19750  01260A  8D32               	bsf	50,6,b	;volatile
 19751  01260C                     i2l407:
 19752                           
 19753                           ; BSR set to: 15
 19754                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 19755  01260C  A83C               	btfss	i2CANsendMessage@identifier+2,4,c
 19756  01260E  D003               	goto	i2l6792
 19757                           
 19758                           ; BSR set to: 15
 19759                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 19760  012610  010F               	movlb	15	; () banked
 19761  012612  8F32               	bsf	50,7,b	;volatile
 19762  012614  D000               	goto	i2l6792
 19763  012616                     i2l6792:
 19764                           
 19765                           ; BSR set to: 15
 19766                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 19767  012616  C03A  F042         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19768  01261A  C03B  F043         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19769  01261E  C03C  F044         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19770  012622  C03D  F045         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19771  012626  0E16               	movlw	22
 19772  012628  D005               	goto	i2u815_40
 19773  01262A                     i2u815_45:
 19774  01262A  90D8               	bcf	status,0,c
 19775  01262C  3245               	rrcf	??i2_CANsendMessage+3,f,c
 19776  01262E  3244               	rrcf	??i2_CANsendMessage+2,f,c
 19777  012630  3243               	rrcf	??i2_CANsendMessage+1,f,c
 19778  012632  3242               	rrcf	??i2_CANsendMessage,f,c
 19779  012634                     i2u815_40:
 19780  012634  2EE8               	decfsz	wreg,f,c
 19781  012636  D7F9               	goto	i2u815_45
 19782  012638  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19783  01263C  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19784  012640  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19785  012644  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19786                           
 19787                           ; BSR set to: 15
 19788                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 19789  012648  5046               	movf	i2CANsendMessage@tamp,w,c
 19790  01264A  6E46               	movwf	i2CANsendMessage@tamp,c
 19791  01264C  6A47               	clrf	i2CANsendMessage@tamp+1,c
 19792  01264E  6A48               	clrf	i2CANsendMessage@tamp+2,c
 19793  012650  6A49               	clrf	i2CANsendMessage@tamp+3,c
 19794                           
 19795                           ; BSR set to: 15
 19796                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 19797  012652  C046  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 19798                           
 19799                           ;inc\CANlib.h: 407: }
 19800  012656  D04E               	goto	i2l6812
 19801  012658                     i2l403:
 19802                           
 19803                           ; BSR set to: 15
 19804                           ;inc\CANlib.h: 409: else
 19805                           ;inc\CANlib.h: 411: {
 19806                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 19807  012658  010F               	movlb	15	; () banked
 19808  01265A  9732               	bcf	50,3,b	;volatile
 19809                           
 19810                           ; BSR set to: 15
 19811                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 19812  01265C  C03A  F042         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19813  012660  C03B  F043         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19814  012664  C03C  F044         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19815  012668  C03D  F045         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19816  01266C  0E04               	movlw	4
 19817  01266E  D005               	goto	i2u816_40
 19818  012670                     i2u816_45:
 19819  012670  90D8               	bcf	status,0,c
 19820  012672  3245               	rrcf	??i2_CANsendMessage+3,f,c
 19821  012674  3244               	rrcf	??i2_CANsendMessage+2,f,c
 19822  012676  3243               	rrcf	??i2_CANsendMessage+1,f,c
 19823  012678  3242               	rrcf	??i2_CANsendMessage,f,c
 19824  01267A                     i2u816_40:
 19825  01267A  2EE8               	decfsz	wreg,f,c
 19826  01267C  D7F9               	goto	i2u816_45
 19827  01267E  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19828  012682  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19829  012686  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19830  01268A  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19831                           
 19832                           ; BSR set to: 15
 19833                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 19834  01268E  5046               	movf	i2CANsendMessage@tamp,w,c
 19835  012690  6E46               	movwf	i2CANsendMessage@tamp,c
 19836  012692  6A47               	clrf	i2CANsendMessage@tamp+1,c
 19837  012694  6A48               	clrf	i2CANsendMessage@tamp+2,c
 19838  012696  6A49               	clrf	i2CANsendMessage@tamp+3,c
 19839                           
 19840                           ; BSR set to: 15
 19841                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 19842  012698  C046  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 19843                           
 19844                           ; BSR set to: 15
 19845                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 19846  01269C  0E07               	movlw	7
 19847  01269E  143A               	andwf	i2CANsendMessage@identifier,w,c
 19848  0126A0  6E46               	movwf	i2CANsendMessage@tamp,c
 19849  0126A2  0E00               	movlw	0
 19850  0126A4  143B               	andwf	i2CANsendMessage@identifier+1,w,c
 19851  0126A6  6E47               	movwf	i2CANsendMessage@tamp+1,c
 19852  0126A8  0E00               	movlw	0
 19853  0126AA  143C               	andwf	i2CANsendMessage@identifier+2,w,c
 19854  0126AC  6E48               	movwf	i2CANsendMessage@tamp+2,c
 19855  0126AE  0E00               	movlw	0
 19856  0126B0  143D               	andwf	i2CANsendMessage@identifier+3,w,c
 19857  0126B2  6E49               	movwf	i2CANsendMessage@tamp+3,c
 19858                           
 19859                           ; BSR set to: 15
 19860                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 19861  0126B4  C046  F042         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19862  0126B8  C047  F043         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19863  0126BC  C048  F044         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19864  0126C0  C049  F045         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19865  0126C4  0E05               	movlw	5
 19866  0126C6                     i2u817_45:
 19867  0126C6  90D8               	bcf	status,0,c
 19868  0126C8  3642               	rlcf	??i2_CANsendMessage,f,c
 19869  0126CA  3643               	rlcf	??i2_CANsendMessage+1,f,c
 19870  0126CC  3644               	rlcf	??i2_CANsendMessage+2,f,c
 19871  0126CE  3645               	rlcf	??i2_CANsendMessage+3,f,c
 19872  0126D0  2EE8               	decfsz	wreg,f,c
 19873  0126D2  D7F9               	goto	i2u817_45
 19874  0126D4  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19875  0126D8  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19876  0126DC  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19877  0126E0  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19878                           
 19879                           ; BSR set to: 15
 19880                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 19881  0126E4  010F               	movlb	15	; () banked
 19882  0126E6  5132               	movf	50,w,b	;volatile
 19883  0126E8  0B1F               	andlw	31
 19884  0126EA  010F               	movlb	15	; () banked
 19885  0126EC  6F32               	movwf	50,b	;volatile
 19886                           
 19887                           ; BSR set to: 15
 19888                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 19889  0126EE  C046  FF32         	movff	i2CANsendMessage@tamp,3890	;volatile
 19890  0126F2  D000               	goto	i2l6812
 19891  0126F4                     i2l6812:
 19892                           
 19893                           ; BSR set to: 15
 19894                           ;inc\CANlib.h: 422: }
 19895                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 19896  0126F4  A041               	btfss	i2CANsendMessage@flags,0,c
 19897  0126F6  D003               	goto	i2l410
 19898                           
 19899                           ; BSR set to: 15
 19900                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 19901  0126F8  010F               	movlb	15	; () banked
 19902  0126FA  8130               	bsf	48,0,b	;volatile
 19903  0126FC  D002               	goto	i2l411
 19904  0126FE                     i2l410:
 19905                           
 19906                           ; BSR set to: 15
 19907                           ;inc\CANlib.h: 426: else
 19908                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 19909  0126FE  010F               	movlb	15	; () banked
 19910  012700  9130               	bcf	48,0,b	;volatile
 19911  012702                     i2l411:
 19912                           
 19913                           ; BSR set to: 15
 19914                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 19915  012702  A241               	btfss	i2CANsendMessage@flags,1,c
 19916  012704  D003               	goto	i2l412
 19917                           
 19918                           ; BSR set to: 15
 19919                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 19920  012706  010F               	movlb	15	; () banked
 19921  012708  8330               	bsf	48,1,b	;volatile
 19922  01270A  D003               	goto	i2l6818
 19923  01270C                     i2l412:
 19924                           
 19925                           ; BSR set to: 15
 19926                           ;inc\CANlib.h: 430: else
 19927                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 19928  01270C  010F               	movlb	15	; () banked
 19929  01270E  9330               	bcf	48,1,b	;volatile
 19930  012710  D000               	goto	i2l6818
 19931  012712                     i2l6818:
 19932                           
 19933                           ; BSR set to: 15
 19934                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 19935  012712  C03E  FFD9         	movff	i2CANsendMessage@data,fsr2l
 19936  012716  C03F  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 19937  01271A  50DF               	movf	indf2,w,c
 19938  01271C  010F               	movlb	15	; () banked
 19939  01271E  6F36               	movwf	54,b	;volatile
 19940                           
 19941                           ; BSR set to: 15
 19942                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 19943  012720  EE20 F001          	lfsr	2,1
 19944  012724  503E               	movf	i2CANsendMessage@data,w,c
 19945  012726  26D9               	addwf	fsr2l,f,c
 19946  012728  503F               	movf	i2CANsendMessage@data+1,w,c
 19947  01272A  22DA               	addwfc	fsr2h,f,c
 19948  01272C  50DF               	movf	indf2,w,c
 19949  01272E  010F               	movlb	15	; () banked
 19950  012730  6F37               	movwf	55,b	;volatile
 19951                           
 19952                           ; BSR set to: 15
 19953                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 19954  012732  EE20 F002          	lfsr	2,2
 19955  012736  503E               	movf	i2CANsendMessage@data,w,c
 19956  012738  26D9               	addwf	fsr2l,f,c
 19957  01273A  503F               	movf	i2CANsendMessage@data+1,w,c
 19958  01273C  22DA               	addwfc	fsr2h,f,c
 19959  01273E  50DF               	movf	indf2,w,c
 19960  012740  010F               	movlb	15	; () banked
 19961  012742  6F38               	movwf	56,b	;volatile
 19962                           
 19963                           ; BSR set to: 15
 19964                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 19965  012744  EE20 F003          	lfsr	2,3
 19966  012748  503E               	movf	i2CANsendMessage@data,w,c
 19967  01274A  26D9               	addwf	fsr2l,f,c
 19968  01274C  503F               	movf	i2CANsendMessage@data+1,w,c
 19969  01274E  22DA               	addwfc	fsr2h,f,c
 19970  012750  50DF               	movf	indf2,w,c
 19971  012752  010F               	movlb	15	; () banked
 19972  012754  6F39               	movwf	57,b	;volatile
 19973                           
 19974                           ; BSR set to: 15
 19975                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 19976  012756  EE20 F004          	lfsr	2,4
 19977  01275A  503E               	movf	i2CANsendMessage@data,w,c
 19978  01275C  26D9               	addwf	fsr2l,f,c
 19979  01275E  503F               	movf	i2CANsendMessage@data+1,w,c
 19980  012760  22DA               	addwfc	fsr2h,f,c
 19981  012762  50DF               	movf	indf2,w,c
 19982  012764  010F               	movlb	15	; () banked
 19983  012766  6F3A               	movwf	58,b	;volatile
 19984                           
 19985                           ; BSR set to: 15
 19986                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 19987  012768  EE20 F005          	lfsr	2,5
 19988  01276C  503E               	movf	i2CANsendMessage@data,w,c
 19989  01276E  26D9               	addwf	fsr2l,f,c
 19990  012770  503F               	movf	i2CANsendMessage@data+1,w,c
 19991  012772  22DA               	addwfc	fsr2h,f,c
 19992  012774  50DF               	movf	indf2,w,c
 19993  012776  010F               	movlb	15	; () banked
 19994  012778  6F3B               	movwf	59,b	;volatile
 19995                           
 19996                           ; BSR set to: 15
 19997                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 19998  01277A  EE20 F006          	lfsr	2,6
 19999  01277E  503E               	movf	i2CANsendMessage@data,w,c
 20000  012780  26D9               	addwf	fsr2l,f,c
 20001  012782  503F               	movf	i2CANsendMessage@data+1,w,c
 20002  012784  22DA               	addwfc	fsr2h,f,c
 20003  012786  50DF               	movf	indf2,w,c
 20004  012788  010F               	movlb	15	; () banked
 20005  01278A  6F3C               	movwf	60,b	;volatile
 20006                           
 20007                           ; BSR set to: 15
 20008                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 20009  01278C  EE20 F007          	lfsr	2,7
 20010  012790  503E               	movf	i2CANsendMessage@data,w,c
 20011  012792  26D9               	addwf	fsr2l,f,c
 20012  012794  503F               	movf	i2CANsendMessage@data+1,w,c
 20013  012796  22DA               	addwfc	fsr2h,f,c
 20014  012798  50DF               	movf	indf2,w,c
 20015  01279A  010F               	movlb	15	; () banked
 20016  01279C  6F3D               	movwf	61,b	;volatile
 20017                           
 20018                           ; BSR set to: 15
 20019                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 20020  01279E  010F               	movlb	15	; () banked
 20021  0127A0  8730               	bsf	48,3,b	;volatile
 20022                           
 20023                           ; BSR set to: 15
 20024                           ;inc\CANlib.h: 444: return;
 20025  0127A2  0012               	return	
 20026  0127A4                     i2l400:
 20027                           
 20028                           ; BSR set to: 15
 20029                           ;inc\CANlib.h: 445: }
 20030                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 20031  0127A4  010F               	movlb	15	; () banked
 20032  0127A6  B720               	btfsc	32,3,b	;volatile
 20033  0127A8  0012               	return	
 20034                           
 20035                           ; BSR set to: 15
 20036                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 20037  0127AA  C040  FF25         	movff	i2CANsendMessage@dataLength,3877	;volatile
 20038                           
 20039                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 20040  0127AE  AC41               	btfss	i2CANsendMessage@flags,6,c
 20041  0127B0  D003               	goto	i2l415
 20042                           
 20043                           ; BSR set to: 15
 20044                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 20045  0127B2  010F               	movlb	15	; () banked
 20046  0127B4  8D25               	bsf	37,6,b	;volatile
 20047  0127B6  D002               	goto	i2l416
 20048  0127B8                     i2l415:
 20049                           
 20050                           ; BSR set to: 15
 20051                           ;inc\CANlib.h: 454: else
 20052                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 20053  0127B8  010F               	movlb	15	; () banked
 20054  0127BA  9D25               	bcf	37,6,b	;volatile
 20055  0127BC                     i2l416:
 20056                           
 20057                           ; BSR set to: 15
 20058                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 20059  0127BC  A641               	btfss	i2CANsendMessage@flags,3,c
 20060  0127BE  D067               	goto	i2l417
 20061                           
 20062                           ; BSR set to: 15
 20063                           ;inc\CANlib.h: 458: {
 20064                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 20065  0127C0  503A               	movf	i2CANsendMessage@identifier,w,c
 20066  0127C2  6E46               	movwf	i2CANsendMessage@tamp,c
 20067  0127C4  6A47               	clrf	i2CANsendMessage@tamp+1,c
 20068  0127C6  6A48               	clrf	i2CANsendMessage@tamp+2,c
 20069  0127C8  6A49               	clrf	i2CANsendMessage@tamp+3,c
 20070                           
 20071                           ; BSR set to: 15
 20072                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 20073  0127CA  C046  FF24         	movff	i2CANsendMessage@tamp,3876	;volatile
 20074                           
 20075                           ; BSR set to: 15
 20076                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 20077  0127CE  0E00               	movlw	0
 20078  0127D0  143A               	andwf	i2CANsendMessage@identifier,w,c
 20079  0127D2  6E46               	movwf	i2CANsendMessage@tamp,c
 20080  0127D4  0EFF               	movlw	255
 20081  0127D6  143B               	andwf	i2CANsendMessage@identifier+1,w,c
 20082  0127D8  6E47               	movwf	i2CANsendMessage@tamp+1,c
 20083  0127DA  0E00               	movlw	0
 20084  0127DC  143C               	andwf	i2CANsendMessage@identifier+2,w,c
 20085  0127DE  6E48               	movwf	i2CANsendMessage@tamp+2,c
 20086  0127E0  0E00               	movlw	0
 20087  0127E2  143D               	andwf	i2CANsendMessage@identifier+3,w,c
 20088  0127E4  6E49               	movwf	i2CANsendMessage@tamp+3,c
 20089                           
 20090                           ; BSR set to: 15
 20091                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 20092  0127E6  C046  F042         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20093  0127EA  C047  F043         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20094  0127EE  C048  F044         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20095  0127F2  C049  F045         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20096  0127F6  C043  F042         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 20097  0127FA  C044  F043         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 20098  0127FE  C045  F044         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 20099  012802  6A45               	clrf	??i2_CANsendMessage+3,c
 20100  012804  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20101  012808  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20102  01280C  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20103  012810  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20104                           
 20105                           ; BSR set to: 15
 20106                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 20107  012814  C046  FF23         	movff	i2CANsendMessage@tamp,3875	;volatile
 20108                           
 20109                           ; BSR set to: 15
 20110                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 20111  012818  0E00               	movlw	0
 20112  01281A  010F               	movlb	15	; () banked
 20113  01281C  6F22               	movwf	34,b	;volatile
 20114                           
 20115                           ; BSR set to: 15
 20116                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 20117  01281E  010F               	movlb	15	; () banked
 20118  012820  8722               	bsf	34,3,b	;volatile
 20119                           
 20120                           ; BSR set to: 15
 20121                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 20122  012822  A03C               	btfss	i2CANsendMessage@identifier+2,0,c
 20123  012824  D002               	goto	i2l418
 20124                           
 20125                           ; BSR set to: 15
 20126                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 20127  012826  010F               	movlb	15	; () banked
 20128  012828  8122               	bsf	34,0,b	;volatile
 20129  01282A                     i2l418:
 20130                           
 20131                           ; BSR set to: 15
 20132                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 20133  01282A  A23C               	btfss	i2CANsendMessage@identifier+2,1,c
 20134  01282C  D002               	goto	i2l419
 20135                           
 20136                           ; BSR set to: 15
 20137                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 20138  01282E  010F               	movlb	15	; () banked
 20139  012830  8322               	bsf	34,1,b	;volatile
 20140  012832                     i2l419:
 20141                           
 20142                           ; BSR set to: 15
 20143                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 20144  012832  A43C               	btfss	i2CANsendMessage@identifier+2,2,c
 20145  012834  D002               	goto	i2l420
 20146                           
 20147                           ; BSR set to: 15
 20148                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 20149  012836  010F               	movlb	15	; () banked
 20150  012838  8B22               	bsf	34,5,b	;volatile
 20151  01283A                     i2l420:
 20152                           
 20153                           ; BSR set to: 15
 20154                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 20155  01283A  A63C               	btfss	i2CANsendMessage@identifier+2,3,c
 20156  01283C  D002               	goto	i2l421
 20157                           
 20158                           ; BSR set to: 15
 20159                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 20160  01283E  010F               	movlb	15	; () banked
 20161  012840  8D22               	bsf	34,6,b	;volatile
 20162  012842                     i2l421:
 20163                           
 20164                           ; BSR set to: 15
 20165                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 20166  012842  A83C               	btfss	i2CANsendMessage@identifier+2,4,c
 20167  012844  D003               	goto	i2l6868
 20168                           
 20169                           ; BSR set to: 15
 20170                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 20171  012846  010F               	movlb	15	; () banked
 20172  012848  8F22               	bsf	34,7,b	;volatile
 20173  01284A  D000               	goto	i2l6868
 20174  01284C                     i2l6868:
 20175                           
 20176                           ; BSR set to: 15
 20177                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 20178  01284C  C03A  F042         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20179  012850  C03B  F043         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20180  012854  C03C  F044         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20181  012858  C03D  F045         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20182  01285C  0E16               	movlw	22
 20183  01285E  D005               	goto	i2u828_40
 20184  012860                     i2u828_45:
 20185  012860  90D8               	bcf	status,0,c
 20186  012862  3245               	rrcf	??i2_CANsendMessage+3,f,c
 20187  012864  3244               	rrcf	??i2_CANsendMessage+2,f,c
 20188  012866  3243               	rrcf	??i2_CANsendMessage+1,f,c
 20189  012868  3242               	rrcf	??i2_CANsendMessage,f,c
 20190  01286A                     i2u828_40:
 20191  01286A  2EE8               	decfsz	wreg,f,c
 20192  01286C  D7F9               	goto	i2u828_45
 20193  01286E  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20194  012872  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20195  012876  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20196  01287A  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20197                           
 20198                           ; BSR set to: 15
 20199                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 20200  01287E  5046               	movf	i2CANsendMessage@tamp,w,c
 20201  012880  6E46               	movwf	i2CANsendMessage@tamp,c
 20202  012882  6A47               	clrf	i2CANsendMessage@tamp+1,c
 20203  012884  6A48               	clrf	i2CANsendMessage@tamp+2,c
 20204  012886  6A49               	clrf	i2CANsendMessage@tamp+3,c
 20205                           
 20206                           ; BSR set to: 15
 20207                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 20208  012888  C046  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 20209                           
 20210                           ;inc\CANlib.h: 483: }
 20211  01288C  D04E               	goto	i2l6888
 20212  01288E                     i2l417:
 20213                           
 20214                           ; BSR set to: 15
 20215                           ;inc\CANlib.h: 485: else
 20216                           ;inc\CANlib.h: 487: {
 20217                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 20218  01288E  010F               	movlb	15	; () banked
 20219  012890  9722               	bcf	34,3,b	;volatile
 20220                           
 20221                           ; BSR set to: 15
 20222                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 20223  012892  C03A  F042         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20224  012896  C03B  F043         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20225  01289A  C03C  F044         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20226  01289E  C03D  F045         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20227  0128A2  0E04               	movlw	4
 20228  0128A4  D005               	goto	i2u829_40
 20229  0128A6                     i2u829_45:
 20230  0128A6  90D8               	bcf	status,0,c
 20231  0128A8  3245               	rrcf	??i2_CANsendMessage+3,f,c
 20232  0128AA  3244               	rrcf	??i2_CANsendMessage+2,f,c
 20233  0128AC  3243               	rrcf	??i2_CANsendMessage+1,f,c
 20234  0128AE  3242               	rrcf	??i2_CANsendMessage,f,c
 20235  0128B0                     i2u829_40:
 20236  0128B0  2EE8               	decfsz	wreg,f,c
 20237  0128B2  D7F9               	goto	i2u829_45
 20238  0128B4  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20239  0128B8  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20240  0128BC  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20241  0128C0  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20242                           
 20243                           ; BSR set to: 15
 20244                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 20245  0128C4  5046               	movf	i2CANsendMessage@tamp,w,c
 20246  0128C6  6E46               	movwf	i2CANsendMessage@tamp,c
 20247  0128C8  6A47               	clrf	i2CANsendMessage@tamp+1,c
 20248  0128CA  6A48               	clrf	i2CANsendMessage@tamp+2,c
 20249  0128CC  6A49               	clrf	i2CANsendMessage@tamp+3,c
 20250                           
 20251                           ; BSR set to: 15
 20252                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 20253  0128CE  C046  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 20254                           
 20255                           ; BSR set to: 15
 20256                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 20257  0128D2  0E07               	movlw	7
 20258  0128D4  143A               	andwf	i2CANsendMessage@identifier,w,c
 20259  0128D6  6E46               	movwf	i2CANsendMessage@tamp,c
 20260  0128D8  0E00               	movlw	0
 20261  0128DA  143B               	andwf	i2CANsendMessage@identifier+1,w,c
 20262  0128DC  6E47               	movwf	i2CANsendMessage@tamp+1,c
 20263  0128DE  0E00               	movlw	0
 20264  0128E0  143C               	andwf	i2CANsendMessage@identifier+2,w,c
 20265  0128E2  6E48               	movwf	i2CANsendMessage@tamp+2,c
 20266  0128E4  0E00               	movlw	0
 20267  0128E6  143D               	andwf	i2CANsendMessage@identifier+3,w,c
 20268  0128E8  6E49               	movwf	i2CANsendMessage@tamp+3,c
 20269                           
 20270                           ; BSR set to: 15
 20271                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 20272  0128EA  C046  F042         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20273  0128EE  C047  F043         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20274  0128F2  C048  F044         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20275  0128F6  C049  F045         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20276  0128FA  0E05               	movlw	5
 20277  0128FC                     i2u830_45:
 20278  0128FC  90D8               	bcf	status,0,c
 20279  0128FE  3642               	rlcf	??i2_CANsendMessage,f,c
 20280  012900  3643               	rlcf	??i2_CANsendMessage+1,f,c
 20281  012902  3644               	rlcf	??i2_CANsendMessage+2,f,c
 20282  012904  3645               	rlcf	??i2_CANsendMessage+3,f,c
 20283  012906  2EE8               	decfsz	wreg,f,c
 20284  012908  D7F9               	goto	i2u830_45
 20285  01290A  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20286  01290E  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20287  012912  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20288  012916  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20289                           
 20290                           ; BSR set to: 15
 20291                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 20292  01291A  010F               	movlb	15	; () banked
 20293  01291C  5122               	movf	34,w,b	;volatile
 20294  01291E  0B1F               	andlw	31
 20295  012920  010F               	movlb	15	; () banked
 20296  012922  6F22               	movwf	34,b	;volatile
 20297                           
 20298                           ; BSR set to: 15
 20299                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 20300  012924  C046  FF22         	movff	i2CANsendMessage@tamp,3874	;volatile
 20301  012928  D000               	goto	i2l6888
 20302  01292A                     i2l6888:
 20303                           
 20304                           ; BSR set to: 15
 20305                           ;inc\CANlib.h: 498: }
 20306                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 20307  01292A  A041               	btfss	i2CANsendMessage@flags,0,c
 20308  01292C  D003               	goto	i2l424
 20309                           
 20310                           ; BSR set to: 15
 20311                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 20312  01292E  010F               	movlb	15	; () banked
 20313  012930  8120               	bsf	32,0,b	;volatile
 20314  012932  D002               	goto	i2l425
 20315  012934                     i2l424:
 20316                           
 20317                           ; BSR set to: 15
 20318                           ;inc\CANlib.h: 502: else
 20319                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 20320  012934  010F               	movlb	15	; () banked
 20321  012936  9120               	bcf	32,0,b	;volatile
 20322  012938                     i2l425:
 20323                           
 20324                           ; BSR set to: 15
 20325                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 20326  012938  A241               	btfss	i2CANsendMessage@flags,1,c
 20327  01293A  D003               	goto	i2l426
 20328                           
 20329                           ; BSR set to: 15
 20330                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 20331  01293C  010F               	movlb	15	; () banked
 20332  01293E  8320               	bsf	32,1,b	;volatile
 20333  012940  D003               	goto	i2l6894
 20334  012942                     i2l426:
 20335                           
 20336                           ; BSR set to: 15
 20337                           ;inc\CANlib.h: 506: else
 20338                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 20339  012942  010F               	movlb	15	; () banked
 20340  012944  9320               	bcf	32,1,b	;volatile
 20341  012946  D000               	goto	i2l6894
 20342  012948                     i2l6894:
 20343                           
 20344                           ; BSR set to: 15
 20345                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 20346  012948  C03E  FFD9         	movff	i2CANsendMessage@data,fsr2l
 20347  01294C  C03F  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 20348  012950  50DF               	movf	indf2,w,c
 20349  012952  010F               	movlb	15	; () banked
 20350  012954  6F26               	movwf	38,b	;volatile
 20351                           
 20352                           ; BSR set to: 15
 20353                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 20354  012956  EE20 F001          	lfsr	2,1
 20355  01295A  503E               	movf	i2CANsendMessage@data,w,c
 20356  01295C  26D9               	addwf	fsr2l,f,c
 20357  01295E  503F               	movf	i2CANsendMessage@data+1,w,c
 20358  012960  22DA               	addwfc	fsr2h,f,c
 20359  012962  50DF               	movf	indf2,w,c
 20360  012964  010F               	movlb	15	; () banked
 20361  012966  6F27               	movwf	39,b	;volatile
 20362                           
 20363                           ; BSR set to: 15
 20364                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 20365  012968  EE20 F002          	lfsr	2,2
 20366  01296C  503E               	movf	i2CANsendMessage@data,w,c
 20367  01296E  26D9               	addwf	fsr2l,f,c
 20368  012970  503F               	movf	i2CANsendMessage@data+1,w,c
 20369  012972  22DA               	addwfc	fsr2h,f,c
 20370  012974  50DF               	movf	indf2,w,c
 20371  012976  010F               	movlb	15	; () banked
 20372  012978  6F28               	movwf	40,b	;volatile
 20373                           
 20374                           ; BSR set to: 15
 20375                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 20376  01297A  EE20 F003          	lfsr	2,3
 20377  01297E  503E               	movf	i2CANsendMessage@data,w,c
 20378  012980  26D9               	addwf	fsr2l,f,c
 20379  012982  503F               	movf	i2CANsendMessage@data+1,w,c
 20380  012984  22DA               	addwfc	fsr2h,f,c
 20381  012986  50DF               	movf	indf2,w,c
 20382  012988  010F               	movlb	15	; () banked
 20383  01298A  6F29               	movwf	41,b	;volatile
 20384                           
 20385                           ; BSR set to: 15
 20386                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 20387  01298C  EE20 F004          	lfsr	2,4
 20388  012990  503E               	movf	i2CANsendMessage@data,w,c
 20389  012992  26D9               	addwf	fsr2l,f,c
 20390  012994  503F               	movf	i2CANsendMessage@data+1,w,c
 20391  012996  22DA               	addwfc	fsr2h,f,c
 20392  012998  50DF               	movf	indf2,w,c
 20393  01299A  010F               	movlb	15	; () banked
 20394  01299C  6F2A               	movwf	42,b	;volatile
 20395                           
 20396                           ; BSR set to: 15
 20397                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 20398  01299E  EE20 F005          	lfsr	2,5
 20399  0129A2  503E               	movf	i2CANsendMessage@data,w,c
 20400  0129A4  26D9               	addwf	fsr2l,f,c
 20401  0129A6  503F               	movf	i2CANsendMessage@data+1,w,c
 20402  0129A8  22DA               	addwfc	fsr2h,f,c
 20403  0129AA  50DF               	movf	indf2,w,c
 20404  0129AC  010F               	movlb	15	; () banked
 20405  0129AE  6F2B               	movwf	43,b	;volatile
 20406                           
 20407                           ; BSR set to: 15
 20408                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 20409  0129B0  EE20 F006          	lfsr	2,6
 20410  0129B4  503E               	movf	i2CANsendMessage@data,w,c
 20411  0129B6  26D9               	addwf	fsr2l,f,c
 20412  0129B8  503F               	movf	i2CANsendMessage@data+1,w,c
 20413  0129BA  22DA               	addwfc	fsr2h,f,c
 20414  0129BC  50DF               	movf	indf2,w,c
 20415  0129BE  010F               	movlb	15	; () banked
 20416  0129C0  6F2C               	movwf	44,b	;volatile
 20417                           
 20418                           ; BSR set to: 15
 20419                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 20420  0129C2  EE20 F007          	lfsr	2,7
 20421  0129C6  503E               	movf	i2CANsendMessage@data,w,c
 20422  0129C8  26D9               	addwf	fsr2l,f,c
 20423  0129CA  503F               	movf	i2CANsendMessage@data+1,w,c
 20424  0129CC  22DA               	addwfc	fsr2h,f,c
 20425  0129CE  50DF               	movf	indf2,w,c
 20426  0129D0  010F               	movlb	15	; () banked
 20427  0129D2  6F2D               	movwf	45,b	;volatile
 20428                           
 20429                           ; BSR set to: 15
 20430                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 20431  0129D4  010F               	movlb	15	; () banked
 20432  0129D6  8720               	bsf	32,3,b	;volatile
 20433                           
 20434                           ; BSR set to: 15
 20435                           ;inc\CANlib.h: 520: return;
 20436  0129D8  0012               	return	
 20437                           
 20438                           ; BSR set to: 15
 20439                           
 20440                           ; BSR set to: 15
 20441  0129DA  0012               	return		;funcret
 20442  0129DC                     __end_ofi2_CANsendMessage:
 20443                           	opt stack 0
 20444                           pclatu	equ	0xFFB
 20445                           pclath	equ	0xFFA
 20446                           tblptru	equ	0xFF8
 20447                           tblptrh	equ	0xFF7
 20448                           tblptrl	equ	0xFF6
 20449                           tablat	equ	0xFF5
 20450                           prodh	equ	0xFF4
 20451                           prodl	equ	0xFF3
 20452                           intcon	equ	0xFF2
 20453                           postinc0	equ	0xFEE
 20454                           fsr0h	equ	0xFEA
 20455                           fsr0l	equ	0xFE9
 20456                           wreg	equ	0xFE8
 20457                           indf1	equ	0xFE7
 20458                           plusw1	equ	0xFE3
 20459                           fsr1h	equ	0xFE2
 20460                           fsr1l	equ	0xFE1
 20461                           bsr	equ	0xFE0
 20462                           indf2	equ	0xFDF
 20463                           postinc2	equ	0xFDE
 20464                           plusw2	equ	0xFDB
 20465                           fsr2h	equ	0xFDA
 20466                           fsr2l	equ	0xFD9
 20467                           status	equ	0xFD8
 20468                           
 20469 ;; *************** function i2_CANisTxReady *****************
 20470 ;; Defined at:
 20471 ;;		line 1154 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 20472 ;; Parameters:    Size  Location     Type
 20473 ;;		None
 20474 ;; Auto vars:     Size  Location     Type
 20475 ;;		None
 20476 ;; Return value:  Size  Location     Type
 20477 ;;                  1    wreg      unsigned char 
 20478 ;; Registers used:
 20479 ;;		wreg, status,2
 20480 ;; Tracked objects:
 20481 ;;		On entry : 0/0
 20482 ;;		On exit  : 0/0
 20483 ;;		Unchanged: 0/0
 20484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20486 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20488 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20489 ;;Total ram usage:        1 bytes
 20490 ;; Hardware stack levels used:    1
 20491 ;; This function calls:
 20492 ;;		Nothing
 20493 ;; This function is called by:
 20494 ;;		_ISR_alta
 20495 ;; This function uses a non-reentrant model
 20496 ;;
 20497                           
 20498                           	psect	text64
 20499  015EB0                     __ptext64:
 20500                           	opt stack 0
 20501  015EB0                     i2_CANisTxReady:
 20502                           	opt stack 20
 20503                           
 20504                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 20505                           
 20506                           ; BSR set to: 15
 20507                           ;incstack = 0
 20508  015EB0  0E01               	movlw	1
 20509  015EB2  6E3A               	movwf	i2_CANisTxReady$3255,c
 20510  015EB4  010F               	movlb	15	; () banked
 20511  015EB6  A740               	btfss	64,3,b	;volatile
 20512  015EB8  D008               	goto	i2l578
 20513                           
 20514                           ; BSR set to: 15
 20515  015EBA  010F               	movlb	15	; () banked
 20516  015EBC  A730               	btfss	48,3,b	;volatile
 20517  015EBE  D005               	goto	i2l578
 20518                           
 20519                           ; BSR set to: 15
 20520  015EC0  010F               	movlb	15	; () banked
 20521  015EC2  A720               	btfss	32,3,b	;volatile
 20522  015EC4  D002               	goto	i2l578
 20523                           
 20524                           ; BSR set to: 15
 20525  015EC6  0E00               	movlw	0
 20526  015EC8  6E3A               	movwf	i2_CANisTxReady$3255,c
 20527  015ECA                     i2l578:
 20528                           
 20529                           ; BSR set to: 15
 20530  015ECA  503A               	movf	i2_CANisTxReady$3255,w,c
 20531  015ECC  0012               	return	
 20532                           
 20533                           ; BSR set to: 15
 20534                           
 20535                           ; BSR set to: 15
 20536  015ECE  0012               	return		;funcret
 20537  015ED0                     __end_ofi2_CANisTxReady:
 20538                           	opt stack 0
 20539                           pclatu	equ	0xFFB
 20540                           pclath	equ	0xFFA
 20541                           tblptru	equ	0xFF8
 20542                           tblptrh	equ	0xFF7
 20543                           tblptrl	equ	0xFF6
 20544                           tablat	equ	0xFF5
 20545                           prodh	equ	0xFF4
 20546                           prodl	equ	0xFF3
 20547                           intcon	equ	0xFF2
 20548                           postinc0	equ	0xFEE
 20549                           fsr0h	equ	0xFEA
 20550                           fsr0l	equ	0xFE9
 20551                           wreg	equ	0xFE8
 20552                           indf1	equ	0xFE7
 20553                           plusw1	equ	0xFE3
 20554                           fsr1h	equ	0xFE2
 20555                           fsr1l	equ	0xFE1
 20556                           bsr	equ	0xFE0
 20557                           indf2	equ	0xFDF
 20558                           postinc2	equ	0xFDE
 20559                           plusw2	equ	0xFDB
 20560                           fsr2h	equ	0xFDA
 20561                           fsr2l	equ	0xFD9
 20562                           status	equ	0xFD8
 20563                           
 20564 ;; *************** function _CANreceiveMessage *****************
 20565 ;; Defined at:
 20566 ;;		line 528 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 20567 ;; Parameters:    Size  Location     Type
 20568 ;;  msg             2   17[COMRAM] PTR struct .
 20569 ;;		 -> msg(15), 
 20570 ;; Auto vars:     Size  Location     Type
 20571 ;;  tamp            1   28[COMRAM] unsigned char 
 20572 ;;  error           1   27[COMRAM] unsigned char 
 20573 ;; Return value:  Size  Location     Type
 20574 ;;                  1    wreg      unsigned char 
 20575 ;; Registers used:
 20576 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20577 ;; Tracked objects:
 20578 ;;		On entry : 0/0
 20579 ;;		On exit  : 0/0
 20580 ;;		Unchanged: 0/0
 20581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20582 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20583 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20584 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20585 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20586 ;;Total ram usage:       12 bytes
 20587 ;; Hardware stack levels used:    1
 20588 ;; This function calls:
 20589 ;;		Nothing
 20590 ;; This function is called by:
 20591 ;;		_ISR_alta
 20592 ;; This function uses a non-reentrant model
 20593 ;;
 20594                           
 20595                           	psect	text65
 20596  0129DC                     __ptext65:
 20597                           	opt stack 0
 20598  0129DC                     _CANreceiveMessage:
 20599                           	opt stack 20
 20600                           
 20601                           ;inc\CANlib.h: 530: BYTE tamp;
 20602                           ;inc\CANlib.h: 531: BYTE error = 0;
 20603                           
 20604                           ; BSR set to: 15
 20605                           ;incstack = 0
 20606  0129DC  0E00               	movlw	0
 20607  0129DE  6E44               	movwf	CANreceiveMessage@error,c
 20608                           
 20609                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 20610  0129E0  AE74               	btfss	3956,7,c	;volatile
 20611  0129E2  D002               	goto	i2l6274
 20612                           
 20613                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 20614  0129E4  8044               	bsf	CANreceiveMessage@error,0,c
 20615  0129E6  D000               	goto	i2l6274
 20616  0129E8                     i2l6274:
 20617                           
 20618                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 20619  0129E8  AC74               	btfss	3956,6,c	;volatile
 20620  0129EA  D002               	goto	i2l6278
 20621                           
 20622                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 20623  0129EC  8244               	bsf	CANreceiveMessage@error,1,c
 20624  0129EE  D000               	goto	i2l6278
 20625  0129F0                     i2l6278:
 20626                           
 20627                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 20628  0129F0  010F               	movlb	15	; () banked
 20629  0129F2  AF50               	btfss	80,7,b	;volatile
 20630  0129F4  D149               	goto	i2l432
 20631                           
 20632                           ; BSR set to: 15
 20633                           ;inc\CANlib.h: 541: {
 20634                           ;inc\CANlib.h: 542: msg->identifier = 0;
 20635  0129F6  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20636  0129FA  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20637  0129FE  6ADE               	clrf	postinc2,c
 20638  012A00  6ADE               	clrf	postinc2,c
 20639  012A02  6ADE               	clrf	postinc2,c
 20640  012A04  6ADD               	clrf	postdec2,c
 20641                           
 20642                           ; BSR set to: 15
 20643                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 20644  012A06  EE20 F004          	lfsr	2,4
 20645  012A0A  503A               	movf	CANreceiveMessage@msg,w,c
 20646  012A0C  26D9               	addwf	fsr2l,f,c
 20647  012A0E  503B               	movf	CANreceiveMessage@msg+1,w,c
 20648  012A10  22DA               	addwfc	fsr2h,f,c
 20649  012A12  CF56 FFDF          	movff	3926,indf2	;volatile
 20650                           
 20651                           ; BSR set to: 15
 20652                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 20653  012A16  EE20 F005          	lfsr	2,5
 20654  012A1A  503A               	movf	CANreceiveMessage@msg,w,c
 20655  012A1C  26D9               	addwf	fsr2l,f,c
 20656  012A1E  503B               	movf	CANreceiveMessage@msg+1,w,c
 20657  012A20  22DA               	addwfc	fsr2h,f,c
 20658  012A22  CF57 FFDF          	movff	3927,indf2	;volatile
 20659                           
 20660                           ; BSR set to: 15
 20661                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 20662  012A26  EE20 F006          	lfsr	2,6
 20663  012A2A  503A               	movf	CANreceiveMessage@msg,w,c
 20664  012A2C  26D9               	addwf	fsr2l,f,c
 20665  012A2E  503B               	movf	CANreceiveMessage@msg+1,w,c
 20666  012A30  22DA               	addwfc	fsr2h,f,c
 20667  012A32  CF58 FFDF          	movff	3928,indf2	;volatile
 20668                           
 20669                           ; BSR set to: 15
 20670                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 20671  012A36  EE20 F007          	lfsr	2,7
 20672  012A3A  503A               	movf	CANreceiveMessage@msg,w,c
 20673  012A3C  26D9               	addwf	fsr2l,f,c
 20674  012A3E  503B               	movf	CANreceiveMessage@msg+1,w,c
 20675  012A40  22DA               	addwfc	fsr2h,f,c
 20676  012A42  CF59 FFDF          	movff	3929,indf2	;volatile
 20677                           
 20678                           ; BSR set to: 15
 20679                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 20680  012A46  EE20 F008          	lfsr	2,8
 20681  012A4A  503A               	movf	CANreceiveMessage@msg,w,c
 20682  012A4C  26D9               	addwf	fsr2l,f,c
 20683  012A4E  503B               	movf	CANreceiveMessage@msg+1,w,c
 20684  012A50  22DA               	addwfc	fsr2h,f,c
 20685  012A52  CF5A FFDF          	movff	3930,indf2	;volatile
 20686                           
 20687                           ; BSR set to: 15
 20688                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 20689  012A56  EE20 F009          	lfsr	2,9
 20690  012A5A  503A               	movf	CANreceiveMessage@msg,w,c
 20691  012A5C  26D9               	addwf	fsr2l,f,c
 20692  012A5E  503B               	movf	CANreceiveMessage@msg+1,w,c
 20693  012A60  22DA               	addwfc	fsr2h,f,c
 20694  012A62  CF5B FFDF          	movff	3931,indf2	;volatile
 20695                           
 20696                           ; BSR set to: 15
 20697                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 20698  012A66  EE20 F00A          	lfsr	2,10
 20699  012A6A  503A               	movf	CANreceiveMessage@msg,w,c
 20700  012A6C  26D9               	addwf	fsr2l,f,c
 20701  012A6E  503B               	movf	CANreceiveMessage@msg+1,w,c
 20702  012A70  22DA               	addwfc	fsr2h,f,c
 20703  012A72  CF5C FFDF          	movff	3932,indf2	;volatile
 20704                           
 20705                           ; BSR set to: 15
 20706                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 20707  012A76  EE20 F00B          	lfsr	2,11
 20708  012A7A  503A               	movf	CANreceiveMessage@msg,w,c
 20709  012A7C  26D9               	addwf	fsr2l,f,c
 20710  012A7E  503B               	movf	CANreceiveMessage@msg+1,w,c
 20711  012A80  22DA               	addwfc	fsr2h,f,c
 20712  012A82  CF5D FFDF          	movff	3933,indf2	;volatile
 20713                           
 20714                           ; BSR set to: 15
 20715                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 20716  012A86  EE20 F00E          	lfsr	2,14
 20717  012A8A  503A               	movf	CANreceiveMessage@msg,w,c
 20718  012A8C  26D9               	addwf	fsr2l,f,c
 20719  012A8E  503B               	movf	CANreceiveMessage@msg+1,w,c
 20720  012A90  22DA               	addwfc	fsr2h,f,c
 20721  012A92  010F               	movlb	15	; () banked
 20722  012A94  AD55               	btfss	85,6,b	;volatile
 20723  012A96  D002               	goto	i2u747_40
 20724  012A98  0E01               	movlw	1
 20725  012A9A  D001               	goto	i2u747_46
 20726  012A9C                     i2u747_40:
 20727  012A9C  0E00               	movlw	0
 20728  012A9E                     i2u747_46:
 20729  012A9E  6EDF               	movwf	indf2,c
 20730                           
 20731                           ; BSR set to: 15
 20732                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 20733  012AA0  EE20 F00D          	lfsr	2,13
 20734  012AA4  503A               	movf	CANreceiveMessage@msg,w,c
 20735  012AA6  26D9               	addwf	fsr2l,f,c
 20736  012AA8  503B               	movf	CANreceiveMessage@msg+1,w,c
 20737  012AAA  22DA               	addwfc	fsr2h,f,c
 20738  012AAC  010F               	movlb	15	; () banked
 20739  012AAE  5155               	movf	85,w,b	;volatile
 20740  012AB0  0B0F               	andlw	15
 20741  012AB2  6EDF               	movwf	indf2,c
 20742                           
 20743                           ; BSR set to: 15
 20744                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 20745  012AB4  EE20 F00C          	lfsr	2,12
 20746  012AB8  503A               	movf	CANreceiveMessage@msg,w,c
 20747  012ABA  26D9               	addwf	fsr2l,f,c
 20748  012ABC  503B               	movf	CANreceiveMessage@msg+1,w,c
 20749  012ABE  22DA               	addwfc	fsr2h,f,c
 20750  012AC0  010F               	movlb	15	; () banked
 20751  012AC2  A752               	btfss	82,3,b	;volatile
 20752  012AC4  D002               	goto	i2u748_40
 20753  012AC6  0E01               	movlw	1
 20754  012AC8  D001               	goto	i2u748_46
 20755  012ACA                     i2u748_40:
 20756  012ACA  0E00               	movlw	0
 20757  012ACC                     i2u748_46:
 20758  012ACC  6EDF               	movwf	indf2,c
 20759                           
 20760                           ; BSR set to: 15
 20761                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 20762  012ACE  010F               	movlb	15	; () banked
 20763  012AD0  B752               	btfsc	82,3,b	;volatile
 20764  012AD2  D044               	goto	i2l6312
 20765                           
 20766                           ; BSR set to: 15
 20767                           ;inc\CANlib.h: 559: {
 20768                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 20769  012AD4  CF51 F03C          	movff	3921,??_CANreceiveMessage	;volatile
 20770  012AD8  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20771  012ADA  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20772  012ADC  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20773  012ADE  0E03               	movlw	3
 20774  012AE0                     i2u750_45:
 20775  012AE0  90D8               	bcf	status,0,c
 20776  012AE2  363C               	rlcf	??_CANreceiveMessage,f,c
 20777  012AE4  363D               	rlcf	??_CANreceiveMessage+1,f,c
 20778  012AE6  363E               	rlcf	??_CANreceiveMessage+2,f,c
 20779  012AE8  363F               	rlcf	??_CANreceiveMessage+3,f,c
 20780  012AEA  2EE8               	decfsz	wreg,f,c
 20781  012AEC  D7F9               	goto	i2u750_45
 20782  012AEE  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20783  012AF2  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20784  012AF6  C03C  FFDE         	movff	??_CANreceiveMessage,postinc2
 20785  012AFA  C03D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 20786  012AFE  C03E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 20787  012B02  C03F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 20788                           
 20789                           ; BSR set to: 15
 20790                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 20791  012B06  010F               	movlb	15	; () banked
 20792  012B08  3952               	swapf	82,w,b	;volatile
 20793  012B0A  42E8               	rrncf	wreg,f,c
 20794  012B0C  0B07               	andlw	7
 20795  012B0E  0B07               	andlw	7
 20796  012B10  6E45               	movwf	CANreceiveMessage@tamp,c
 20797                           
 20798                           ; BSR set to: 15
 20799                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 20800  012B12  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20801  012B16  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20802  012B1A  CFDE F03C          	movff	postinc2,??_CANreceiveMessage
 20803  012B1E  CFDE F03D          	movff	postinc2,??_CANreceiveMessage+1
 20804  012B22  CFDE F03E          	movff	postinc2,??_CANreceiveMessage+2
 20805  012B26  CFDE F03F          	movff	postinc2,??_CANreceiveMessage+3
 20806  012B2A  5045               	movf	CANreceiveMessage@tamp,w,c
 20807  012B2C  243C               	addwf	??_CANreceiveMessage,w,c
 20808  012B2E  6E40               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 20809  012B30  0E00               	movlw	0
 20810  012B32  203D               	addwfc	??_CANreceiveMessage+1,w,c
 20811  012B34  6E41               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 20812  012B36  0E00               	movlw	0
 20813  012B38  203E               	addwfc	??_CANreceiveMessage+2,w,c
 20814  012B3A  6E42               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 20815  012B3C  0E00               	movlw	0
 20816  012B3E  203F               	addwfc	??_CANreceiveMessage+3,w,c
 20817  012B40  6E43               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 20818  012B42  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20819  012B46  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20820  012B4A  C040  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 20821  012B4E  C041  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 20822  012B52  C042  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 20823  012B56  C043  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 20824                           
 20825                           ;inc\CANlib.h: 563: }
 20826  012B5A  D093               	goto	i2l6338
 20827  012B5C                     i2l6312:
 20828                           
 20829                           ; BSR set to: 15
 20830                           ;inc\CANlib.h: 564: else
 20831                           ;inc\CANlib.h: 565: {
 20832                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 20833  012B5C  CF54 F03C          	movff	3924,??_CANreceiveMessage	;volatile
 20834  012B60  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20835  012B62  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20836  012B64  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20837  012B66  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20838  012B6A  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20839  012B6E  C03C  FFDE         	movff	??_CANreceiveMessage,postinc2
 20840  012B72  C03D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 20841  012B76  C03E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 20842  012B7A  C03F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 20843                           
 20844                           ; BSR set to: 15
 20845                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 20846  012B7E  CF53 F03C          	movff	3923,??_CANreceiveMessage	;volatile
 20847  012B82  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20848  012B84  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20849  012B86  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20850  012B88  C03E  F03F         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 20851  012B8C  C03D  F03E         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 20852  012B90  C03C  F03D         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 20853  012B94  6A3C               	clrf	??_CANreceiveMessage,c
 20854  012B96  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20855  012B9A  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20856  012B9E  503C               	movf	??_CANreceiveMessage,w,c
 20857  012BA0  26DE               	addwf	postinc2,f,c
 20858  012BA2  503D               	movf	??_CANreceiveMessage+1,w,c
 20859  012BA4  22DE               	addwfc	postinc2,f,c
 20860  012BA6  503E               	movf	??_CANreceiveMessage+2,w,c
 20861  012BA8  22DE               	addwfc	postinc2,f,c
 20862  012BAA  503F               	movf	??_CANreceiveMessage+3,w,c
 20863  012BAC  22DE               	addwfc	postinc2,f,c
 20864                           
 20865                           ; BSR set to: 15
 20866                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 20867  012BAE  010F               	movlb	15	; () banked
 20868  012BB0  A152               	btfss	82,0,b	;volatile
 20869  012BB2  D00D               	goto	i2l6320
 20870                           
 20871                           ; BSR set to: 15
 20872                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 20873  012BB4  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20874  012BB8  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20875  012BBC  0E00               	movlw	0
 20876  012BBE  12DE               	iorwf	postinc2,f,c
 20877  012BC0  0E00               	movlw	0
 20878  012BC2  12DE               	iorwf	postinc2,f,c
 20879  012BC4  0E01               	movlw	1
 20880  012BC6  12DE               	iorwf	postinc2,f,c
 20881  012BC8  0E00               	movlw	0
 20882  012BCA  12DE               	iorwf	postinc2,f,c
 20883  012BCC  D000               	goto	i2l6320
 20884  012BCE                     i2l6320:
 20885                           
 20886                           ; BSR set to: 15
 20887                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 20888  012BCE  010F               	movlb	15	; () banked
 20889  012BD0  A352               	btfss	82,1,b	;volatile
 20890  012BD2  D00D               	goto	i2l6324
 20891                           
 20892                           ; BSR set to: 15
 20893                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 20894  012BD4  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20895  012BD8  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20896  012BDC  0E00               	movlw	0
 20897  012BDE  12DE               	iorwf	postinc2,f,c
 20898  012BE0  0E00               	movlw	0
 20899  012BE2  12DE               	iorwf	postinc2,f,c
 20900  012BE4  0E02               	movlw	2
 20901  012BE6  12DE               	iorwf	postinc2,f,c
 20902  012BE8  0E00               	movlw	0
 20903  012BEA  12DE               	iorwf	postinc2,f,c
 20904  012BEC  D000               	goto	i2l6324
 20905  012BEE                     i2l6324:
 20906                           
 20907                           ; BSR set to: 15
 20908                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 20909  012BEE  010F               	movlb	15	; () banked
 20910  012BF0  AB52               	btfss	82,5,b	;volatile
 20911  012BF2  D00D               	goto	i2l6328
 20912                           
 20913                           ; BSR set to: 15
 20914                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 20915  012BF4  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20916  012BF8  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20917  012BFC  0E00               	movlw	0
 20918  012BFE  12DE               	iorwf	postinc2,f,c
 20919  012C00  0E00               	movlw	0
 20920  012C02  12DE               	iorwf	postinc2,f,c
 20921  012C04  0E04               	movlw	4
 20922  012C06  12DE               	iorwf	postinc2,f,c
 20923  012C08  0E00               	movlw	0
 20924  012C0A  12DE               	iorwf	postinc2,f,c
 20925  012C0C  D000               	goto	i2l6328
 20926  012C0E                     i2l6328:
 20927                           
 20928                           ; BSR set to: 15
 20929                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 20930  012C0E  010F               	movlb	15	; () banked
 20931  012C10  AD52               	btfss	82,6,b	;volatile
 20932  012C12  D00D               	goto	i2l6332
 20933                           
 20934                           ; BSR set to: 15
 20935                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 20936  012C14  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20937  012C18  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20938  012C1C  0E00               	movlw	0
 20939  012C1E  12DE               	iorwf	postinc2,f,c
 20940  012C20  0E00               	movlw	0
 20941  012C22  12DE               	iorwf	postinc2,f,c
 20942  012C24  0E08               	movlw	8
 20943  012C26  12DE               	iorwf	postinc2,f,c
 20944  012C28  0E00               	movlw	0
 20945  012C2A  12DE               	iorwf	postinc2,f,c
 20946  012C2C  D000               	goto	i2l6332
 20947  012C2E                     i2l6332:
 20948                           
 20949                           ; BSR set to: 15
 20950                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 20951  012C2E  010F               	movlb	15	; () banked
 20952  012C30  AF52               	btfss	82,7,b	;volatile
 20953  012C32  D00D               	goto	i2l6336
 20954                           
 20955                           ; BSR set to: 15
 20956                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 20957  012C34  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20958  012C38  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20959  012C3C  0E00               	movlw	0
 20960  012C3E  12DE               	iorwf	postinc2,f,c
 20961  012C40  0E00               	movlw	0
 20962  012C42  12DE               	iorwf	postinc2,f,c
 20963  012C44  0E10               	movlw	16
 20964  012C46  12DE               	iorwf	postinc2,f,c
 20965  012C48  0E00               	movlw	0
 20966  012C4A  12DE               	iorwf	postinc2,f,c
 20967  012C4C  D000               	goto	i2l6336
 20968  012C4E                     i2l6336:
 20969                           
 20970                           ; BSR set to: 15
 20971                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 20972  012C4E  CF51 F03C          	movff	3921,??_CANreceiveMessage	;volatile
 20973  012C52  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20974  012C54  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20975  012C56  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20976  012C58  0E15               	movlw	21
 20977  012C5A                     i2u756_45:
 20978  012C5A  90D8               	bcf	status,0,c
 20979  012C5C  363C               	rlcf	??_CANreceiveMessage,f,c
 20980  012C5E  363D               	rlcf	??_CANreceiveMessage+1,f,c
 20981  012C60  363E               	rlcf	??_CANreceiveMessage+2,f,c
 20982  012C62  363F               	rlcf	??_CANreceiveMessage+3,f,c
 20983  012C64  2EE8               	decfsz	wreg,f,c
 20984  012C66  D7F9               	goto	i2u756_45
 20985  012C68  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20986  012C6C  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20987  012C70  503C               	movf	??_CANreceiveMessage,w,c
 20988  012C72  12DE               	iorwf	postinc2,f,c
 20989  012C74  503D               	movf	??_CANreceiveMessage+1,w,c
 20990  012C76  12DE               	iorwf	postinc2,f,c
 20991  012C78  503E               	movf	??_CANreceiveMessage+2,w,c
 20992  012C7A  12DE               	iorwf	postinc2,f,c
 20993  012C7C  503F               	movf	??_CANreceiveMessage+3,w,c
 20994  012C7E  12DE               	iorwf	postinc2,f,c
 20995  012C80  D000               	goto	i2l6338
 20996  012C82                     i2l6338:
 20997                           
 20998                           ; BSR set to: 15
 20999                           ;inc\CANlib.h: 581: }
 21000                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 21001  012C82  010F               	movlb	15	; () banked
 21002  012C84  9F50               	bcf	80,7,b	;volatile
 21003                           
 21004                           ; BSR set to: 15
 21005                           ;inc\CANlib.h: 584: return (error);
 21006                           ;	Return value of _CANreceiveMessage is never used
 21007  012C86  0012               	return	
 21008  012C88                     i2l432:
 21009                           
 21010                           ; BSR set to: 15
 21011                           ;inc\CANlib.h: 585: }
 21012                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 21013  012C88  AE60               	btfss	3936,7,c	;volatile
 21014  012C8A  0012               	return	
 21015                           
 21016                           ; BSR set to: 15
 21017                           ;inc\CANlib.h: 588: {
 21018                           ;inc\CANlib.h: 589: msg->identifier = 0;
 21019  012C8C  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21020  012C90  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21021  012C94  6ADE               	clrf	postinc2,c
 21022  012C96  6ADE               	clrf	postinc2,c
 21023  012C98  6ADE               	clrf	postinc2,c
 21024  012C9A  6ADD               	clrf	postdec2,c
 21025                           
 21026                           ; BSR set to: 15
 21027                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 21028  012C9C  EE20 F004          	lfsr	2,4
 21029  012CA0  503A               	movf	CANreceiveMessage@msg,w,c
 21030  012CA2  26D9               	addwf	fsr2l,f,c
 21031  012CA4  503B               	movf	CANreceiveMessage@msg+1,w,c
 21032  012CA6  22DA               	addwfc	fsr2h,f,c
 21033  012CA8  CF66 FFDF          	movff	3942,indf2	;volatile
 21034                           
 21035                           ; BSR set to: 15
 21036                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 21037  012CAC  EE20 F005          	lfsr	2,5
 21038  012CB0  503A               	movf	CANreceiveMessage@msg,w,c
 21039  012CB2  26D9               	addwf	fsr2l,f,c
 21040  012CB4  503B               	movf	CANreceiveMessage@msg+1,w,c
 21041  012CB6  22DA               	addwfc	fsr2h,f,c
 21042  012CB8  CF67 FFDF          	movff	3943,indf2	;volatile
 21043                           
 21044                           ; BSR set to: 15
 21045                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 21046  012CBC  EE20 F006          	lfsr	2,6
 21047  012CC0  503A               	movf	CANreceiveMessage@msg,w,c
 21048  012CC2  26D9               	addwf	fsr2l,f,c
 21049  012CC4  503B               	movf	CANreceiveMessage@msg+1,w,c
 21050  012CC6  22DA               	addwfc	fsr2h,f,c
 21051  012CC8  CF68 FFDF          	movff	3944,indf2	;volatile
 21052                           
 21053                           ; BSR set to: 15
 21054                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 21055  012CCC  EE20 F007          	lfsr	2,7
 21056  012CD0  503A               	movf	CANreceiveMessage@msg,w,c
 21057  012CD2  26D9               	addwf	fsr2l,f,c
 21058  012CD4  503B               	movf	CANreceiveMessage@msg+1,w,c
 21059  012CD6  22DA               	addwfc	fsr2h,f,c
 21060  012CD8  CF69 FFDF          	movff	3945,indf2	;volatile
 21061                           
 21062                           ; BSR set to: 15
 21063                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 21064  012CDC  EE20 F008          	lfsr	2,8
 21065  012CE0  503A               	movf	CANreceiveMessage@msg,w,c
 21066  012CE2  26D9               	addwf	fsr2l,f,c
 21067  012CE4  503B               	movf	CANreceiveMessage@msg+1,w,c
 21068  012CE6  22DA               	addwfc	fsr2h,f,c
 21069  012CE8  CF6A FFDF          	movff	3946,indf2	;volatile
 21070                           
 21071                           ; BSR set to: 15
 21072                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 21073  012CEC  EE20 F009          	lfsr	2,9
 21074  012CF0  503A               	movf	CANreceiveMessage@msg,w,c
 21075  012CF2  26D9               	addwf	fsr2l,f,c
 21076  012CF4  503B               	movf	CANreceiveMessage@msg+1,w,c
 21077  012CF6  22DA               	addwfc	fsr2h,f,c
 21078  012CF8  CF6B FFDF          	movff	3947,indf2	;volatile
 21079                           
 21080                           ; BSR set to: 15
 21081                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 21082  012CFC  EE20 F00A          	lfsr	2,10
 21083  012D00  503A               	movf	CANreceiveMessage@msg,w,c
 21084  012D02  26D9               	addwf	fsr2l,f,c
 21085  012D04  503B               	movf	CANreceiveMessage@msg+1,w,c
 21086  012D06  22DA               	addwfc	fsr2h,f,c
 21087  012D08  CF6C FFDF          	movff	3948,indf2	;volatile
 21088                           
 21089                           ; BSR set to: 15
 21090                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 21091  012D0C  EE20 F00B          	lfsr	2,11
 21092  012D10  503A               	movf	CANreceiveMessage@msg,w,c
 21093  012D12  26D9               	addwf	fsr2l,f,c
 21094  012D14  503B               	movf	CANreceiveMessage@msg+1,w,c
 21095  012D16  22DA               	addwfc	fsr2h,f,c
 21096  012D18  CF6D FFDF          	movff	3949,indf2	;volatile
 21097                           
 21098                           ; BSR set to: 15
 21099                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 21100  012D1C  EE20 F00E          	lfsr	2,14
 21101  012D20  503A               	movf	CANreceiveMessage@msg,w,c
 21102  012D22  26D9               	addwf	fsr2l,f,c
 21103  012D24  503B               	movf	CANreceiveMessage@msg+1,w,c
 21104  012D26  22DA               	addwfc	fsr2h,f,c
 21105  012D28  AC65               	btfss	3941,6,c	;volatile
 21106  012D2A  D002               	goto	i2u758_40
 21107  012D2C  0E01               	movlw	1
 21108  012D2E  D001               	goto	i2u758_46
 21109  012D30                     i2u758_40:
 21110  012D30  0E00               	movlw	0
 21111  012D32                     i2u758_46:
 21112  012D32  6EDF               	movwf	indf2,c
 21113                           
 21114                           ; BSR set to: 15
 21115                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 21116  012D34  EE20 F00D          	lfsr	2,13
 21117  012D38  503A               	movf	CANreceiveMessage@msg,w,c
 21118  012D3A  26D9               	addwf	fsr2l,f,c
 21119  012D3C  503B               	movf	CANreceiveMessage@msg+1,w,c
 21120  012D3E  22DA               	addwfc	fsr2h,f,c
 21121  012D40  5065               	movf	3941,w,c	;volatile
 21122  012D42  0B0F               	andlw	15
 21123  012D44  6EDF               	movwf	indf2,c
 21124                           
 21125                           ; BSR set to: 15
 21126                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 21127  012D46  EE20 F00C          	lfsr	2,12
 21128  012D4A  503A               	movf	CANreceiveMessage@msg,w,c
 21129  012D4C  26D9               	addwf	fsr2l,f,c
 21130  012D4E  503B               	movf	CANreceiveMessage@msg+1,w,c
 21131  012D50  22DA               	addwfc	fsr2h,f,c
 21132  012D52  A662               	btfss	3938,3,c	;volatile
 21133  012D54  D002               	goto	i2u759_40
 21134  012D56  0E01               	movlw	1
 21135  012D58  D001               	goto	i2u759_46
 21136  012D5A                     i2u759_40:
 21137  012D5A  0E00               	movlw	0
 21138  012D5C                     i2u759_46:
 21139  012D5C  6EDF               	movwf	indf2,c
 21140                           
 21141                           ; BSR set to: 15
 21142                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 21143  012D5E  B662               	btfsc	3938,3,c	;volatile
 21144  012D60  D043               	goto	i2l6374
 21145                           
 21146                           ; BSR set to: 15
 21147                           ;inc\CANlib.h: 606: {
 21148                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 21149  012D62  CF61 F03C          	movff	3937,??_CANreceiveMessage	;volatile
 21150  012D66  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21151  012D68  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21152  012D6A  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21153  012D6C  0E03               	movlw	3
 21154  012D6E                     i2u761_45:
 21155  012D6E  90D8               	bcf	status,0,c
 21156  012D70  363C               	rlcf	??_CANreceiveMessage,f,c
 21157  012D72  363D               	rlcf	??_CANreceiveMessage+1,f,c
 21158  012D74  363E               	rlcf	??_CANreceiveMessage+2,f,c
 21159  012D76  363F               	rlcf	??_CANreceiveMessage+3,f,c
 21160  012D78  2EE8               	decfsz	wreg,f,c
 21161  012D7A  D7F9               	goto	i2u761_45
 21162  012D7C  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21163  012D80  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21164  012D84  C03C  FFDE         	movff	??_CANreceiveMessage,postinc2
 21165  012D88  C03D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 21166  012D8C  C03E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 21167  012D90  C03F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 21168                           
 21169                           ; BSR set to: 15
 21170                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 21171  012D94  3862               	swapf	3938,w,c	;volatile
 21172  012D96  42E8               	rrncf	wreg,f,c
 21173  012D98  0B07               	andlw	7
 21174  012D9A  0B07               	andlw	7
 21175  012D9C  6E45               	movwf	CANreceiveMessage@tamp,c
 21176                           
 21177                           ; BSR set to: 15
 21178                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 21179  012D9E  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21180  012DA2  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21181  012DA6  CFDE F03C          	movff	postinc2,??_CANreceiveMessage
 21182  012DAA  CFDE F03D          	movff	postinc2,??_CANreceiveMessage+1
 21183  012DAE  CFDE F03E          	movff	postinc2,??_CANreceiveMessage+2
 21184  012DB2  CFDE F03F          	movff	postinc2,??_CANreceiveMessage+3
 21185  012DB6  5045               	movf	CANreceiveMessage@tamp,w,c
 21186  012DB8  243C               	addwf	??_CANreceiveMessage,w,c
 21187  012DBA  6E40               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 21188  012DBC  0E00               	movlw	0
 21189  012DBE  203D               	addwfc	??_CANreceiveMessage+1,w,c
 21190  012DC0  6E41               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 21191  012DC2  0E00               	movlw	0
 21192  012DC4  203E               	addwfc	??_CANreceiveMessage+2,w,c
 21193  012DC6  6E42               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 21194  012DC8  0E00               	movlw	0
 21195  012DCA  203F               	addwfc	??_CANreceiveMessage+3,w,c
 21196  012DCC  6E43               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 21197  012DCE  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21198  012DD2  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21199  012DD6  C040  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 21200  012DDA  C041  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 21201  012DDE  C042  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 21202  012DE2  C043  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 21203                           
 21204                           ;inc\CANlib.h: 610: }
 21205  012DE6  D08E               	goto	i2l6400
 21206  012DE8                     i2l6374:
 21207                           
 21208                           ; BSR set to: 15
 21209                           ;inc\CANlib.h: 611: else
 21210                           ;inc\CANlib.h: 612: {
 21211                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 21212  012DE8  CF64 F03C          	movff	3940,??_CANreceiveMessage	;volatile
 21213  012DEC  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21214  012DEE  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21215  012DF0  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21216  012DF2  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21217  012DF6  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21218  012DFA  C03C  FFDE         	movff	??_CANreceiveMessage,postinc2
 21219  012DFE  C03D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 21220  012E02  C03E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 21221  012E06  C03F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 21222                           
 21223                           ; BSR set to: 15
 21224                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 21225  012E0A  CF63 F03C          	movff	3939,??_CANreceiveMessage	;volatile
 21226  012E0E  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21227  012E10  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21228  012E12  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21229  012E14  C03E  F03F         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 21230  012E18  C03D  F03E         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 21231  012E1C  C03C  F03D         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 21232  012E20  6A3C               	clrf	??_CANreceiveMessage,c
 21233  012E22  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21234  012E26  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21235  012E2A  503C               	movf	??_CANreceiveMessage,w,c
 21236  012E2C  26DE               	addwf	postinc2,f,c
 21237  012E2E  503D               	movf	??_CANreceiveMessage+1,w,c
 21238  012E30  22DE               	addwfc	postinc2,f,c
 21239  012E32  503E               	movf	??_CANreceiveMessage+2,w,c
 21240  012E34  22DE               	addwfc	postinc2,f,c
 21241  012E36  503F               	movf	??_CANreceiveMessage+3,w,c
 21242  012E38  22DE               	addwfc	postinc2,f,c
 21243                           
 21244                           ; BSR set to: 15
 21245                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 21246  012E3A  A062               	btfss	3938,0,c	;volatile
 21247  012E3C  D00D               	goto	i2l6382
 21248                           
 21249                           ; BSR set to: 15
 21250                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 21251  012E3E  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21252  012E42  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21253  012E46  0E00               	movlw	0
 21254  012E48  12DE               	iorwf	postinc2,f,c
 21255  012E4A  0E00               	movlw	0
 21256  012E4C  12DE               	iorwf	postinc2,f,c
 21257  012E4E  0E01               	movlw	1
 21258  012E50  12DE               	iorwf	postinc2,f,c
 21259  012E52  0E00               	movlw	0
 21260  012E54  12DE               	iorwf	postinc2,f,c
 21261  012E56  D000               	goto	i2l6382
 21262  012E58                     i2l6382:
 21263                           
 21264                           ; BSR set to: 15
 21265                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 21266  012E58  A262               	btfss	3938,1,c	;volatile
 21267  012E5A  D00D               	goto	i2l6386
 21268                           
 21269                           ; BSR set to: 15
 21270                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 21271  012E5C  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21272  012E60  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21273  012E64  0E00               	movlw	0
 21274  012E66  12DE               	iorwf	postinc2,f,c
 21275  012E68  0E00               	movlw	0
 21276  012E6A  12DE               	iorwf	postinc2,f,c
 21277  012E6C  0E02               	movlw	2
 21278  012E6E  12DE               	iorwf	postinc2,f,c
 21279  012E70  0E00               	movlw	0
 21280  012E72  12DE               	iorwf	postinc2,f,c
 21281  012E74  D000               	goto	i2l6386
 21282  012E76                     i2l6386:
 21283                           
 21284                           ; BSR set to: 15
 21285                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 21286  012E76  AA62               	btfss	3938,5,c	;volatile
 21287  012E78  D00D               	goto	i2l6390
 21288                           
 21289                           ; BSR set to: 15
 21290                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 21291  012E7A  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21292  012E7E  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21293  012E82  0E00               	movlw	0
 21294  012E84  12DE               	iorwf	postinc2,f,c
 21295  012E86  0E00               	movlw	0
 21296  012E88  12DE               	iorwf	postinc2,f,c
 21297  012E8A  0E04               	movlw	4
 21298  012E8C  12DE               	iorwf	postinc2,f,c
 21299  012E8E  0E00               	movlw	0
 21300  012E90  12DE               	iorwf	postinc2,f,c
 21301  012E92  D000               	goto	i2l6390
 21302  012E94                     i2l6390:
 21303                           
 21304                           ; BSR set to: 15
 21305                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 21306  012E94  AC62               	btfss	3938,6,c	;volatile
 21307  012E96  D00D               	goto	i2l6394
 21308                           
 21309                           ; BSR set to: 15
 21310                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 21311  012E98  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21312  012E9C  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21313  012EA0  0E00               	movlw	0
 21314  012EA2  12DE               	iorwf	postinc2,f,c
 21315  012EA4  0E00               	movlw	0
 21316  012EA6  12DE               	iorwf	postinc2,f,c
 21317  012EA8  0E08               	movlw	8
 21318  012EAA  12DE               	iorwf	postinc2,f,c
 21319  012EAC  0E00               	movlw	0
 21320  012EAE  12DE               	iorwf	postinc2,f,c
 21321  012EB0  D000               	goto	i2l6394
 21322  012EB2                     i2l6394:
 21323                           
 21324                           ; BSR set to: 15
 21325                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 21326  012EB2  AE62               	btfss	3938,7,c	;volatile
 21327  012EB4  D00D               	goto	i2l6398
 21328                           
 21329                           ; BSR set to: 15
 21330                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 21331  012EB6  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21332  012EBA  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21333  012EBE  0E00               	movlw	0
 21334  012EC0  12DE               	iorwf	postinc2,f,c
 21335  012EC2  0E00               	movlw	0
 21336  012EC4  12DE               	iorwf	postinc2,f,c
 21337  012EC6  0E10               	movlw	16
 21338  012EC8  12DE               	iorwf	postinc2,f,c
 21339  012ECA  0E00               	movlw	0
 21340  012ECC  12DE               	iorwf	postinc2,f,c
 21341  012ECE  D000               	goto	i2l6398
 21342  012ED0                     i2l6398:
 21343                           
 21344                           ; BSR set to: 15
 21345                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 21346  012ED0  CF61 F03C          	movff	3937,??_CANreceiveMessage	;volatile
 21347  012ED4  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21348  012ED6  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21349  012ED8  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21350  012EDA  0E15               	movlw	21
 21351  012EDC                     i2u767_45:
 21352  012EDC  90D8               	bcf	status,0,c
 21353  012EDE  363C               	rlcf	??_CANreceiveMessage,f,c
 21354  012EE0  363D               	rlcf	??_CANreceiveMessage+1,f,c
 21355  012EE2  363E               	rlcf	??_CANreceiveMessage+2,f,c
 21356  012EE4  363F               	rlcf	??_CANreceiveMessage+3,f,c
 21357  012EE6  2EE8               	decfsz	wreg,f,c
 21358  012EE8  D7F9               	goto	i2u767_45
 21359  012EEA  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21360  012EEE  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21361  012EF2  503C               	movf	??_CANreceiveMessage,w,c
 21362  012EF4  12DE               	iorwf	postinc2,f,c
 21363  012EF6  503D               	movf	??_CANreceiveMessage+1,w,c
 21364  012EF8  12DE               	iorwf	postinc2,f,c
 21365  012EFA  503E               	movf	??_CANreceiveMessage+2,w,c
 21366  012EFC  12DE               	iorwf	postinc2,f,c
 21367  012EFE  503F               	movf	??_CANreceiveMessage+3,w,c
 21368  012F00  12DE               	iorwf	postinc2,f,c
 21369  012F02  D000               	goto	i2l6400
 21370  012F04                     i2l6400:
 21371                           
 21372                           ; BSR set to: 15
 21373                           ;inc\CANlib.h: 629: }
 21374                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 21375  012F04  9E60               	bcf	3936,7,c	;volatile
 21376                           
 21377                           ; BSR set to: 15
 21378                           ;inc\CANlib.h: 632: return (error);
 21379                           ;	Return value of _CANreceiveMessage is never used
 21380  012F06  0012               	return	
 21381                           
 21382                           ; BSR set to: 15
 21383                           
 21384                           ; BSR set to: 15
 21385  012F08  0012               	return		;funcret
 21386  012F0A                     __end_of_CANreceiveMessage:
 21387                           	opt stack 0
 21388                           pclatu	equ	0xFFB
 21389                           pclath	equ	0xFFA
 21390                           tblptru	equ	0xFF8
 21391                           tblptrh	equ	0xFF7
 21392                           tblptrl	equ	0xFF6
 21393                           tablat	equ	0xFF5
 21394                           prodh	equ	0xFF4
 21395                           prodl	equ	0xFF3
 21396                           intcon	equ	0xFF2
 21397                           postinc0	equ	0xFEE
 21398                           fsr0h	equ	0xFEA
 21399                           fsr0l	equ	0xFE9
 21400                           wreg	equ	0xFE8
 21401                           indf1	equ	0xFE7
 21402                           plusw1	equ	0xFE3
 21403                           fsr1h	equ	0xFE2
 21404                           fsr1l	equ	0xFE1
 21405                           bsr	equ	0xFE0
 21406                           indf2	equ	0xFDF
 21407                           postinc2	equ	0xFDE
 21408                           postdec2	equ	0xFDD
 21409                           plusw2	equ	0xFDB
 21410                           fsr2h	equ	0xFDA
 21411                           fsr2l	equ	0xFD9
 21412                           status	equ	0xFD8
 21413                           
 21414 ;; *************** function _CANisRxReady *****************
 21415 ;; Defined at:
 21416 ;;		line 1163 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 21417 ;; Parameters:    Size  Location     Type
 21418 ;;		None
 21419 ;; Auto vars:     Size  Location     Type
 21420 ;;		None
 21421 ;; Return value:  Size  Location     Type
 21422 ;;                  1    wreg      unsigned char 
 21423 ;; Registers used:
 21424 ;;		wreg, status,2
 21425 ;; Tracked objects:
 21426 ;;		On entry : 0/0
 21427 ;;		On exit  : 0/0
 21428 ;;		Unchanged: 0/0
 21429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21431 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21433 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21434 ;;Total ram usage:        1 bytes
 21435 ;; Hardware stack levels used:    1
 21436 ;; This function calls:
 21437 ;;		Nothing
 21438 ;; This function is called by:
 21439 ;;		_ISR_alta
 21440 ;; This function uses a non-reentrant model
 21441 ;;
 21442                           
 21443                           	psect	text66
 21444  015F04                     __ptext66:
 21445                           	opt stack 0
 21446  015F04                     _CANisRxReady:
 21447                           	opt stack 20
 21448                           
 21449                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
 21450                           
 21451                           ; BSR set to: 15
 21452                           ;incstack = 0
 21453  015F04  0E01               	movlw	1
 21454  015F06  6E3A               	movwf	_CANisRxReady$3257,c
 21455  015F08  BE60               	btfsc	3936,7,c	;volatile
 21456  015F0A  D005               	goto	i2l583
 21457  015F0C  010F               	movlb	15	; () banked
 21458  015F0E  BF50               	btfsc	80,7,b	;volatile
 21459  015F10  D002               	goto	i2l583
 21460                           
 21461                           ; BSR set to: 15
 21462  015F12  0E00               	movlw	0
 21463  015F14  6E3A               	movwf	_CANisRxReady$3257,c
 21464  015F16                     i2l583:
 21465  015F16  503A               	movf	_CANisRxReady$3257,w,c
 21466  015F18  0012               	return	
 21467  015F1A  0012               	return		;funcret
 21468  015F1C                     __end_of_CANisRxReady:
 21469                           	opt stack 0
 21470                           pclatu	equ	0xFFB
 21471                           pclath	equ	0xFFA
 21472                           tblptru	equ	0xFF8
 21473                           tblptrh	equ	0xFF7
 21474                           tblptrl	equ	0xFF6
 21475                           tablat	equ	0xFF5
 21476                           prodh	equ	0xFF4
 21477                           prodl	equ	0xFF3
 21478                           intcon	equ	0xFF2
 21479                           postinc0	equ	0xFEE
 21480                           fsr0h	equ	0xFEA
 21481                           fsr0l	equ	0xFE9
 21482                           wreg	equ	0xFE8
 21483                           indf1	equ	0xFE7
 21484                           plusw1	equ	0xFE3
 21485                           fsr1h	equ	0xFE2
 21486                           fsr1l	equ	0xFE1
 21487                           bsr	equ	0xFE0
 21488                           indf2	equ	0xFDF
 21489                           postinc2	equ	0xFDE
 21490                           postdec2	equ	0xFDD
 21491                           plusw2	equ	0xFDB
 21492                           fsr2h	equ	0xFDA
 21493                           fsr2l	equ	0xFD9
 21494                           status	equ	0xFD8
 21495                           pclatu	equ	0xFFB
 21496                           pclath	equ	0xFFA
 21497                           tblptru	equ	0xFF8
 21498                           tblptrh	equ	0xFF7
 21499                           tblptrl	equ	0xFF6
 21500                           tablat	equ	0xFF5
 21501                           prodh	equ	0xFF4
 21502                           prodl	equ	0xFF3
 21503                           intcon	equ	0xFF2
 21504                           postinc0	equ	0xFEE
 21505                           fsr0h	equ	0xFEA
 21506                           fsr0l	equ	0xFE9
 21507                           wreg	equ	0xFE8
 21508                           indf1	equ	0xFE7
 21509                           plusw1	equ	0xFE3
 21510                           fsr1h	equ	0xFE2
 21511                           fsr1l	equ	0xFE1
 21512                           bsr	equ	0xFE0
 21513                           indf2	equ	0xFDF
 21514                           postinc2	equ	0xFDE
 21515                           postdec2	equ	0xFDD
 21516                           plusw2	equ	0xFDB
 21517                           fsr2h	equ	0xFDA
 21518                           fsr2l	equ	0xFD9
 21519                           status	equ	0xFD8
 21520                           
 21521                           	psect	rparam
 21522  0000                     pclatu	equ	0xFFB
 21523                           pclath	equ	0xFFA
 21524                           tblptru	equ	0xFF8
 21525                           tblptrh	equ	0xFF7
 21526                           tblptrl	equ	0xFF6
 21527                           tablat	equ	0xFF5
 21528                           prodh	equ	0xFF4
 21529                           prodl	equ	0xFF3
 21530                           intcon	equ	0xFF2
 21531                           postinc0	equ	0xFEE
 21532                           fsr0h	equ	0xFEA
 21533                           fsr0l	equ	0xFE9
 21534                           wreg	equ	0xFE8
 21535                           indf1	equ	0xFE7
 21536                           plusw1	equ	0xFE3
 21537                           fsr1h	equ	0xFE2
 21538                           fsr1l	equ	0xFE1
 21539                           bsr	equ	0xFE0
 21540                           indf2	equ	0xFDF
 21541                           postinc2	equ	0xFDE
 21542                           postdec2	equ	0xFDD
 21543                           plusw2	equ	0xFDB
 21544                           fsr2h	equ	0xFDA
 21545                           fsr2l	equ	0xFD9
 21546                           status	equ	0xFD8


Data Sizes:
    Strings     464
    Constant    144
    Data        1
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     34      77
    BANK0           160     91     140
    BANK1           256     33      66
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_35(CODE[21]), STR_34(CODE[21]), STR_33(CODE[21]), STR_32(CODE[21]), 
		 -> STR_31(CODE[21]), STR_30(CODE[21]), STR_29(CODE[21]), STR_28(CODE[21]), 
		 -> STR_27(CODE[21]), STR_26(CODE[21]), STR_25(CODE[21]), STR_24(CODE[21]), 
		 -> STR_23(CODE[21]), STR_22(CODE[21]), STR_21(CODE[21]), STR_20(CODE[21]), 
		 -> STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[8]), STR_14(CODE[8]), STR_13(CODE[5]), STR_12(CODE[5]), 
		 -> STR_11(CODE[5]), STR_10(CODE[7]), STR_9(CODE[14]), STR_8(CODE[17]), 
		 -> STR_7(CODE[12]), STR_6(CODE[21]), STR_4(CODE[21]), STR_3(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(COMRAM[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_speed(BANK0[1]), park_assist_state(BANK1[8]), data_steering(BANK0[1]), data_brake(BANK0[1]), 
		 -> data(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->i2_CANsendMessage

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _board_initialization->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    ___lbtofl->___flpack
    ___awtofl->___flpack
    _LCD_Parking->_LCD_write_message
    _LCD_Park->_LCD_write_message
    _LCD_Handler->_sprintf
    _sprintf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awtofl
    ___flmul->___lbtofl
    ___awdiv->___awmod
    ___lltofl->___flpack
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->_fround
    ___flneg->___flmul
    ___lwtofl->___flpack
    ___fldiv->___lwtofl
    _LCD_write_integer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_write_string->_LCD_write_char
    _LCD_goto_xy->_LCD_shift_cursor
    _LCD_shift_cursor->_LCD_send_command
    _LCD_Gap->_LCD_write_message
    _LCD_Error->_LCD_write_message
    _LCD_End->_LCD_write_message
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul
    _CAN_Tx->_CANsendMessage

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_alta in BANK3

    None.

Critical Paths under _ISR_bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_alta in BANK4

    None.

Critical Paths under _ISR_bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_alta in BANK5

    None.

Critical Paths under _ISR_bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_alta in BANK6

    None.

Critical Paths under _ISR_bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_alta in BANK7

    None.

Critical Paths under _ISR_bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_alta in BANK8

    None.

Critical Paths under _ISR_bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_alta in BANK9

    None.

Critical Paths under _ISR_bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_alta in BANK10

    None.

Critical Paths under _ISR_bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_alta in BANK11

    None.

Critical Paths under _ISR_bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_alta in BANK12

    None.

Critical Paths under _ISR_bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  568576
                                             25 BANK1      8     8      0
                             _CAN_Rx
                             _CAN_Tx
                       _CANisTxReady
                     _CANsendMessage
                  _F1_Button_Polling
                  _F2_Button_Polling
                   _Joystick_Polling
                            _LCD_End
                          _LCD_Error
                            _LCD_Gap
                        _LCD_Handler
                           _LCD_Park
                        _LCD_Parking
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                 _PWR_Button_Polling
                           ___awtofl
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___lbtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   51321
                      _CANInitialize
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             30 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             16 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             16 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lbtofl                                             5     1      4    2675
                                             26 BANK0      5     1      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (1) ___awtofl                                             9     5      4    2854
                                             26 BANK0      5     1      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (1) _PWR_Button_Polling                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Parking                                          0     0      0   57370
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_Park                                             0     0      0   57370
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0  155132
                       _CANisTxReady
                     _CANsendMessage
                          _LCD_clear
                      _LCD_goto_line
                        _LCD_goto_xy
                     _LCD_initialize
                  _LCD_write_integer
                  _LCD_write_message
                   _LCD_write_string
                            ___fldiv
                           ___lwtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   47610
                                             81 BANK0     10     2      8
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                           ___lltofl
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4   10211
                                             46 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             16 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    9932
                                             46 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             15     7      8    5710
                                             31 BANK0     15     7      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtofl (ARG)
                           ___flpack
                           ___lbtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             22 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                             16 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                             16 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) ___lltofl                                             4     0      4    2752
                                             26 BANK0      4     0      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                             16 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                             16 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     722
                                             71 BANK0     10     6      4
                           ___awtofl (ARG)
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___lbtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    4809
                                             71 BANK0      8     0      8
                            ___fladd
                           ___lltofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             12     4      8    4445
                                             59 BANK0     12     4      8
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___flpack
                           ___lbtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     219
                                             46 BANK0      4     0      4
                            ___flmul (ARG)
                           ___lbtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     660
                                             16 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lwtofl                                             4     0      4    2752
                                             26 BANK0      4     0      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             15     7      8    3329
                                             30 BANK0     15     7      8
                           ___flpack
                           ___lwtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flpack                                            10     4      6    2644
                                             16 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (2) _LCD_write_integer                                   16    12      4   12052
                                             40 BANK0     16    12      4
                   _LCD_write_string
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    1554
                                             32 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1199
                                             23 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     287
                                             16 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     418
                                             16 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9519
                                             33 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_xy                                          2     1      1   18137
                                             31 BANK0      2     1      1
                      _LCD_goto_line
                   _LCD_shift_cursor
 ---------------------------------------------------------------------------------
 (3) _LCD_shift_cursor                                     3     2      1    8956
                                             28 BANK0      3     2      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _LCD_Gap                                              0     0      0   57370
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_Error                                            0     0      0   57370
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_End                                              0     0      0   57370
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_write_message                                    2     0      2   11983
                                             33 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_char                                       5     5      0    9300
                                             28 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   27796
                                             30 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    8919
                                             28 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    8780
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    8811
                                             28 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_send_command                                     4     1      3    8780
                                             24 BANK0      4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (4) _LCD_enable_pulse                                     0     0      0    1264
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1264
                                             22 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     1     1      0      68
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _F2_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _F1_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CAN_Tx                                               0     0      0    4363
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4339
                                             16 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CAN_Rx                                               4     4      0       0
                                             16 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR_alta                                           17    17      0    3558
                                             33 COMRAM     1     1      0
                                              0 BANK0     16    16      0
                       _CANisRxReady
                  _CANreceiveMessage
                     i2_CANisTxReady
                   i2_CANsendMessage
 ---------------------------------------------------------------------------------
 (11) i2_CANsendMessage                                   16     8      8    2243
                                             17 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (11) i2_CANisTxReady                                      1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _CANreceiveMessage                                  12    10      2    1137
                                             17 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (11) _CANisRxReady                                        1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_Rx
   _CAN_Tx
     _CANisTxReady
     _CANsendMessage
   _CANisTxReady
   _CANsendMessage
   _F1_Button_Polling
   _F2_Button_Polling
   _Joystick_Polling
   _LCD_End
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Error
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Gap
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Handler
     _CANisTxReady
     _CANsendMessage
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_xy
       _LCD_goto_line
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_shift_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_integer
       _LCD_write_string
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___fldiv
       ___flpack
       ___lwtofl (ARG)
         ___flpack
     ___lwtofl
       ___flpack
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
           ___lbtofl (ARG)
             ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
       ___flneg
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
         ___lbtofl (ARG)
           ___flpack
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               ___lbtofl (ARG)
                 ___flpack
             ___lbtofl (ARG)
               ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               ___lbtofl (ARG)
                 ___flpack
         ___lltofl (ARG)
           ___flpack
       ___fltol
         ___awtofl (ARG)
           ___flpack
         ___fladd (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               ___lbtofl (ARG)
                 ___flpack
             ___lbtofl (ARG)
               ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               ___lbtofl (ARG)
                 ___flpack
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
           ___lbtofl (ARG)
             ___flpack
         ___lbtofl (ARG)
           ___flpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
       ___lldiv
       ___llmod
       ___lltofl
         ___flpack
       ___wmul
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
   _LCD_Park
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Parking
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_initialize
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_cursor
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
     _delay_ms
       ___wmul
     _delay_set_quartz
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _PWR_Button_Polling
   ___awtofl
     ___flpack
   ___fladd
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtofl (ARG)
         ___flpack
       ___flpack (ARG)
       ___lbtofl (ARG)
         ___flpack
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
       ___lbtofl (ARG)
         ___flpack
     ___flpack (ARG)
     ___lbtofl (ARG)
       ___flpack
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtofl (ARG)
       ___flpack
     ___flpack (ARG)
     ___lbtofl (ARG)
       ___flpack
   ___flneg
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtofl (ARG)
         ___flpack
       ___flpack (ARG)
       ___lbtofl (ARG)
         ___flpack
     ___lbtofl (ARG)
       ___flpack
   ___fltol
     ___awtofl (ARG)
       ___flpack
     ___fladd (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
       ___flneg (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
         ___lbtofl (ARG)
           ___flpack
       ___flpack (ARG)
       ___lbtofl (ARG)
         ___flpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtofl (ARG)
         ___flpack
       ___flpack (ARG)
       ___lbtofl (ARG)
         ___flpack
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
       ___lbtofl (ARG)
         ___flpack
     ___lbtofl (ARG)
       ___flpack
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
   ___lbtofl
     ___flpack
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   i2_CANisTxReady
   i2_CANsendMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     21      42       7       25.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5B      8C       5       87.5%
BITCOMRAM           5F      0       3       0        3.2%
COMRAM              5F     22      4D       1       81.1%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11B      20        0.0%
DATA                 0      0     11B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue May 31 20:31:36 2016

                                _x 026D                                  _y 026E  
                                _z 026F          __size_of_delay_set_quartz 000A  
                     ___fldiv@cntr 008A               __end_of_CANSetFilter 0B2A  
                     ?_LCD_Handler 0029                       ___fldiv@sign 008C  
                     ___awdiv@sign 007B                                 _id 0005  
                               bsr 000FE0                ___wmul@multiplicand 0072  
                      __CFG_BORV$3 000000                       __CFG_CP0$OFF 000000  
                     __CFG_CP1$OFF 000000                       __CFG_CP2$OFF 000000  
                     ?_LCD_Parking 0029                       __CFG_CP3$OFF 000000  
                      __CFG_OSC$HS 000000                       __CFG_CP4$OFF 000000  
                     __CFG_CP5$OFF 000000                       ___flpack@arg 0070  
                     ___flpack@exp 0074                                l400 194A  
                              l401 16D6                                l410 1894  
                              l402 16DA                                l411 1898  
                              l403 17D4                                l420 1A00  
                              l412 18A4                                l404 1762  
                              l500 063A                                l421 1A0A  
                              l405 176C                                l501 063E  
                              l406 1776                                l510 074E  
                              l502 064A                                l415 1960  
                              l407 1780                                l511 075A  
                              l503 064E                                l424 1B1E  
                              l416 1964                                l520 086A  
                              l512 075E                                l504 065A  
                              l425 1B22                                l417 1A5E  
                              l521 086E                                l513 076A  
                              l426 1B2E                                l418 19EC  
                              l530 097E                                l522 087A  
                              l514 076E                                l419 19F6  
                              l531 098A                                l523 087E  
                              l515 077A                                l507 073A  
                              l540 0A9A                                l532 098E  
                              l524 088A                                l508 073E  
                              l460 3660                                l380 428C  
                              l541 0A9E                                l533 099A  
                              l525 088E                                l509 074A  
                              l461 3664                                l381 4296  
                              l390 14E2                                l542 0AAA  
                              l534 099E                                l526 089A  
                              l518 085A                                l470 3770  
                              l462 3670                                l454 3630  
                              l391 14EC                                l543 0AAE  
                              l535 09AA                                l519 085E  
                              l471 377C                                l455 3634  
                              l392 14F6                                l544 0ABA  
                              l536 09AE                                l472 3780  
                              l456 3640                                l385 16C0  
                              l545 0ABE                                l537 09BA  
                              l529 097A                                l473 378C  
                              l465 374C                                l457 3644  
                              l386 144C                                l546 0ACA  
                              l490 0520                                l466 3750  
                              l458 3650                                l395 160A  
                              l387 1450                                l547 0ACE  
                              l491 052C                                l467 375C  
                              l459 3654                                l396 160E  
                              l388 154A                                l548 0ADA  
                              l492 0530                                l468 3760  
                              l397 161A                                l389 14D8  
                              l493 053C                                l485 04FC  
                              l469 376C                                l486 0500  
                              l830 1D66                                l591 5C96  
                              l487 050C                                l496 061A  
                              l488 0510                                l832 1EC0  
                              l824 1D3A                                l497 061E  
                              l489 051C                                l825 1D6A  
                              l578 5E86                                l498 062A  
                              l499 062E                                l819 1D2E  
                              l860 2084                                l844 1EBA  
                              l853 207C                                l845 1EB6  
                              l837 1E2E                                l942 5F3A  
                              l935 5F50                                l871 21BE  
                              l928 5F24                                l873 21BA  
                              l947 5BC4                                l949 5BC8  
             ??_PWR_Button_Polling 0070                       __CFG_CPB$OFF 000000  
                     __CFG_CPD$OFF 000000                        ?_LCD_cursor 007C  
                              _dir 00E3                                _msg 0019  
                              _str 010D                       ___awmod@sign 0075  
                              prod 000FF3                                wreg 000FE8  
                     ___flmul@cntr 008C                       ___flmul@sign 008D  
                  __end_of_LCD_Gap 5962                       __CFG_LVP$OFF 000000  
                  __end_of_LCD_End 5A2A                      ___flpack@sign 0075  
           __size_of_LCD_goto_line 00EE                       ___fltol@exp1 00B0  
                     __CFG_WDT$OFF 000000                               l1050 117E  
                             l1303 49A0                               l1304 49B8  
                             l1312 3D9E                               l1316 3DDC  
                             l1318 3E0A                               l1327 3EF6  
                             l1361 4888                               l1296 493E  
                             l1545 534C                               l1369 4FE2  
                             l1482 46F4                               l1475 4628  
                             l1476 466C                               l5014 017A  
                             l1639 5746                               l1576 52A6  
                             l5120 058A                               l5032 0236  
                             l1649 582C                               l1586 5626  
                             l5114 0542                               l5050 02F2  
                             l5222 08E8                               l4600 56EC  
                             l5216 08A0                               l4602 56FA  
                             l5250 09C0                               l5154 06A8  
                             l4612 5736                               l4604 5704  
                             l4620 57DE                               l5148 0660  
                             l5068 03AE                               l4622 57EC  
                             l5182 0780                               l5086 046A  
                             l4624 57F6                               l5328 5B50  
                             l8000 0B54                               l5256 0A08  
                             l4628 581C                               l8100 0FFC  
                             l8012 0BD6                               l5284 0AE0  
                             l5188 07C8                               l8030 0C56  
                             l8022 0C10                               l8014 0BF2  
                             l5800 178C                               l6504 537E  
                             l7400 3E42                               l8112 1050  
                             l8104 100A                               l8040 0CAA  
                             l8024 0C3A                               l8008 0B8A  
                             l6514 53C8                               l7306 5C88  
                             l4850 52C2                               l7330 48CE  
                             l8210 4D38                               l7410 3E96  
                             l8018 0C06                               l4914 35A4  
                             l5820 1888                               l5724 1502  
                             l4860 5306                               l7340 497E  
                             l7332 48E0                               l8204 4D12  
                             l7420 3EE6                               l7412 3EA2  
                             l7500 5140                               l8140 1184  
                             l8116 107C                               l8108 104A  
                             l4940 3676                               l5902 1B34  
                             l5750 1620                               l6518 5402  
                             l7342 4990                               l7334 4920  
                             l7326 48B8                               l8230 4DDE  
                             l8222 4D88                               l7406 3E74  
                             l8134 114C                               l8118 1084  
                             l8126 1120                               l8070 0DFE  
                             l5744 15FE                               l7352 4A06  
                             l7424 3F1E                               l7408 3E86  
                             l7512 5176                               l8152 1218  
                             l8136 1160                               l8128 1130  
                             l8080 0EA8                               l8072 0E3C  
                             l8064 0DB4                               l8056 0D30  
                             l8400 418E                               l4880 5EF6  
                             l5680 429A                               l5672 422E  
                             l5826 18AA                               l8234 4DF2  
                             l7418 3ED4                               l7514 5184  
                             l7506 5158                               l8170 133A  
                             l8162 130E                               l8074 0E52  
                             l8402 41A0                               l4946 36BE  
                             l5666 421E                               l6548 57B4  
                             l7428 3F46                               l7380 3DB0  
                             l7532 51E6                               l7524 51C0  
                             l7516 518E                               l8164 131E  
                             l8148 11B6                               l8092 0F6A  
                             l8084 0EDA                               l8068 0DE8  
                             l8172 134A                               l4972 3792  
                             l5684 42A2                               l7438 3F9A  
                             l7710 467E                               l7470 4C4C  
                             l7454 4BD4                               l7622 3A80  
                             l7614 3984                               l8190 13F8  
                             l8182 139A                               l8086 0EE6  
                             l8094 0F7E                               l8350 3FCC  
                             l5686 42E6                               l5678 4284  
                             l7392 3E00                               l7528 51D0  
                             l7560 54BE                               l7552 5480  
                             l7544 545A                               l7448 4BAE  
                             l8192 1400                               l7810 502E  
                             l7386 3DEE                               l7730 46EA  
                             l7722 46BA                               l7554 548E  
                             l7482 4C9C                               l7466 4C24  
                             l7642 3172                               l8186 13CC  
                             l8178 1372                               l8098 0FF6  
                             l8194 1426                               l4898 34EC  
                             l8602 1D26                               l5876 1A16  
                             l7804 4F90                               l7900 5612  
                             l7556 5498                               l7564 54CE  
                             l7548 546C                               l7476 4C6C  
                             l7660 33FE                               l7636 309C  
                             l8436 5AF4                               l4996 00C0  
                             l8612 1D52                               l7582 503A  
                             l7590 5102                               l7574 5A96  
                             l7718 46A6                               l7478 4C74  
                             l7654 3328                               l7646 31A4  
                             l8390 414A                               l8374 40E2  
                             l8710 20FA                               l5896 1B12  
                             l7584 506C                               l7912 5D14  
                             l7744 4752                               l7728 46D8  
                             l7568 54E4                               l7488 4CBC  
                             l7672 5E34                               l8376 40F4  
                             l8720 2124                               l8616 1D62  
                             l8560 1C06                               l7586 509E  
                             l7578 5ACA                               l7594 5E42  
                             l7818 5C1C                               l7770 4812  
                             l7738 472C                               l7682 459A  
                             l8386 4126                               l8378 40F8  
                             l8626 1D92                               l8634 1DD4  
                             l7588 50D0                               l7916 5D30  
                             l7940 44CC                               l7932 4402  
                             l7844 4EB8                               l7828 4E48  
                             l8388 4138                               l8740 21E2  
                             l8732 214E                               l8716 2114  
                             l8724 2130                               l8644 1DF0  
                             l8652 1E32                               l7598 5E58  
                             l7926 43EC                               l7862 4F28  
                             l7854 4EEA                               l7790 487E  
                             l7782 484E                               l7766 47FE  
                             l7758 47A8                               l8726 2142  
                             l7928 43F4                               l7944 44D4  
                             l7856 4EFC                               l7848 4ECC  
                             l7872 5220                               l7688 45D4  
                             l8744 21F8                               l8664 1EEE  
                             l8672 1F30                               l7938 4490  
                             l7858 4F0A                               l7874 5232  
                             l7778 483A                               l8770 22C8  
                             l8690 204C                               l8674 1F32  
                             l8594 1C9A                               l7948 454E  
                             l7796 5A52                               l7884 5292  
                             l7876 523C                               l7892 55B0  
                             l7788 486C                               l8780 22E4  
                             l8764 22B4                               l8772 22CE  
                             l8692 2052                               l8676 1F36  
                             l7894 55C2                               l8758 22A0  
                             l8686 1FE6                               l8598 1D12  
                             l7896 55CC                               l8696 2074  
                             l7994 0B3A                               l8786 2324  
                             l8788 232A                               STR_1 FF7F  
                             STR_2 FF55                               STR_3 FE83  
                             STR_4 FF7F                               STR_5 FFFA  
                             STR_6 FF6A                               STR_7 FFC8  
                             STR_8 FFA9                               STR_9 FFBA  
                             _LATA 000F89                               _LATB 000F8A  
                             _LATC 000F8B                               _LATD 000F8C  
                             _LATE 000F8D                               u6000 09E0  
                             u6005 09D4                               u5205 357E  
                             u5150 3466                               u5155 345A  
                             u5405 009A                               u5165 34C6  
                             u5510 026C                               u5430 00F4  
                             u5190 351E                               u6080 0B00  
                             u5360 37B2                               u5280 3696  
                             u5515 0260                               u5435 00E8  
                             u5195 3512                               u6085 0AF4  
                             u5605 0444                               u5525 02CC  
                             u5445 0154                               u5365 37A6  
                             u5285 368A                               u5550 0328  
                             u5470 01B0                               u5390 003A  
                             u5555 031C                               u5475 01A4  
                             u5395 002E                  _F2_Button_Polling 5F32  
                             u5565 0388                               u5485 0210  
                             u5590 03E4                               u6800 17AC  
                             u5920 08C0                               u5840 07A0  
                             u5760 0680                               u5680 0562  
                             u9105 5C56                               u6810 17F8  
                             u9106 5C58                               u9115 5C62  
                             u5595 03D8                               u9116 5C64  
                             u6805 17A0                               u5925 08B4  
                             u5845 0794                               u5765 0674  
                             u5685 0556                               u6670 1522  
                             u6815 17EC                               u6680 156E  
                             u6825 1858                               u6930 1A36  
                             u6675 1516                               u6940 1A82  
                             u6685 1562                               u9085 5C3E  
                             u9086 5C40                               u6935 1A2A  
                             u6695 15CE                               u9095 5C4A  
                             u9096 5C4C                               u6945 1A76  
                             u6955 1AE2                               u9661 4576  
                             u9681 45B0                               u9880 4E68  
                             u9885 4E5C                __size_of_CANSetMask 03AA  
                     ?_LCD_goto_xy 007F                               _data 0028  
                             _main 1BD6                               _itoa 5B24  
               ?_F2_Button_Polling 0029          __size_of_LCD_send_command 003A  
                             fsr0h 000FEA                               fsr1h 000FE2  
                             fsr0l 000FE9                               fsr2h 000FDA  
                             indf1 000FE7                               fsr1l 000FE1  
                             indf2 000FDF                               fsr2l 000FD9  
                             _utoa 52B8                 __size_of_LCD_Error 0064  
                             pclat 000FFA                               prodh 000FF4  
                             prodl 000FF3                               start 00BE  
                    __CFG_IESO$OFF 000000                 __size_of_LCD_clear 0032  
                     _sprintf$4237 0121                      __CFG_MCLRE$ON 000000  
                     ___param_bank 000010                ??_F2_Button_Polling 0070  
         __end_of_LCD_enable_pulse 5EB0                   _CANOperationMode 5EEC  
                     _Can_Tx_Force 025A                   __end_of_LCD_Park 58FE  
                  _space_available 0267            __size_of_LCD_initialize 016E  
       __size_of_CANreceiveMessage 052E                      ___fltol@sign1 00AF  
                  __end_of___fladd 3FCA                              ?_main 0029  
                  __end_of___fldiv 4E22                              ?_itoa 0080  
                  __end_of___awdiv 51F2                    __end_of___flneg 5C30  
                            STR_10 FFE4                              STR_11 FFF0  
                            STR_20 FF40                              STR_12 FFF5  
                            STR_13 FFEB                              STR_21 FEEC  
                            STR_14 FFD4                              STR_22 FEC2  
                            STR_30 FE59                              STR_15 FFDC  
                            STR_23 FE6E                              STR_31 FE44  
                            STR_32 FF40                              STR_24 FF40  
                            STR_16 FF40                              STR_33 FED7  
                            STR_17 FF94                              STR_25 FF16  
                            STR_26 FF2B                              STR_18 FF01  
                            STR_34 FE2F                              STR_27 FF7F  
                            STR_19 FEAD                              STR_35 FE98  
                            STR_28 FF40                    __end_of___awmod 54F0  
                            STR_29 FED7                    __end_of___flmul 4CEC  
                  __end_of___flsub 5A8A                    __end_of___fltol 4F3C  
                            u10011 43A0                    __end_of___lldiv 52B8  
                            ?_utoa 0077                              u10300 1176  
                            u11120 2278                              u11070 21B2  
                            u11207 5C8A                    ___awdiv@divisor 0078  
                  __end_of___llmod 5638                              u10740 1CFE  
                            _T3CON 000FB1                              u10890 1E96  
                            u10990 2070                    __end_of___lwdiv 5750  
                  __end_of___lwmod 5836                              i2l400 27A4  
                            i2l401 2582                              i2l410 26FE  
                            i2l402 2586                              i2l411 2702  
                            i2l403 2658                              i2l420 283A  
                            i2l412 270C                              i2l404 25F4  
                            i2l421 2842                              i2l405 25FC  
                            i2l406 2604                              i2l415 27B8  
                            i2l407 260C                              i1l815 0078  
                            i2l432 2C88                              i2l424 2934  
                            i2l416 27BC                              i2l425 2938  
                            i2l417 288E                              i2l426 2942  
                            i2l418 282A                              i2l419 2832  
                            i2l390 23C6                              i2l391 23CE  
                            i2l392 23D6                              i2l385 256E  
                            i2l386 234C                              i2l395 24C8  
                            i2l387 2350                              i2l811 3D24  
                            i2l396 24CC                              i2l388 2422  
                            i2l804 3C9C                              i2l397 24D6  
                            i2l389 23BE                              i2l583 5F16  
                            i2l578 5ECA                    ___awdiv@counter 007A  
                            _TMR3H 000FB3                              _TMR3L 000FB2  
                _CANisRxReady$3257 003A                              _TRISA 000F92  
                            _TRISB 000F93                              _TRISC 000F94  
                            _TRISD 000F95                              _TRISE 000F96  
                    __CFG_PWRT$OFF 000000                      __CFG_WRT0$OFF 000000  
                    __CFG_WRT1$OFF 000000                      __CFG_WRT2$OFF 000000  
                    __CFG_WRT3$OFF 000000                      __CFG_WRT4$OFF 000000  
               __size_of_ISR_bassa 00A6                      __CFG_WRT5$OFF 000000  
                   __CFG_EBTR0$OFF 000000                     __CFG_FCMEN$OFF 000000  
                   __CFG_EBTR1$OFF 000000                 CANInitialize@flags 0082  
                   __CFG_EBTR2$OFF 000000                      ___awtofl@sign 007E  
                   __CFG_EBTR3$OFF 000000                     __CFG_EBTR4$OFF 000000  
                 __end_of_ISR_alta 3D5E                     __CFG_EBTR5$OFF 000000  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                              _check 00C3  
                   __CFG_EBTRB$OFF 000000          __end_of_F2_Button_Polling 5F48  
                  __end_of_dpowers FE2F                              _scale 2F0A  
                  __end_of_isdigit 5E40          __size_of_LCD_shift_cursor 004E  
                   __pbitbssCOMRAM 0258               __end_of_CANisRxReady 5F1C  
                            tablat 000FF5               __end_of_CANisTxReady 5E8E  
                            plusw1 000FE3                              plusw2 000FDB  
                            utoa@c 007F                              utoa@v 007D  
                            status 000FD8                    __end_of_sprintf 1436  
              __size_of_LCD_cursor 0032                    __initialization 5B70  
                     __end_of_main 2338                       __end_of_itoa 5B70  
    __size_of_board_initialization 00A4                      _LCD_goto_line 5034  
                     __end_of_utoa 537C                  ?_Joystick_Polling 0029  
               ??_Joystick_Polling 0070                  ?_LCD_write_string 0081  
                           ??_main 013A                             ??_itoa 0086  
                           ??_utoa 007D          __size_ofi2_CANsendMessage 06A4  
                    __activetblptr 000003                  __end_of_LCD_Error 59C6  
                        ??_LCD_Gap 0083                          ??_LCD_End 0083  
                   _JoystickValues 00DB                 ??_LCD_write_string 0083  
             __size_of__tdiv_to_l_ 01A6                  _CANisTxReady$3255 0070  
                __end_of_LCD_clear 5E12              i2CANsendMessage@flags 0041  
           LCD_write_string@buffer 0081                             _ADCON1 000FC1  
                           _CANCON 000F6F                   ___llmod@dividend 0070  
                           ?_scale 008E                             _ADRESH 000FC4  
                 __end_of___flpack 4A1A                   ___awdiv@dividend 0076  
                           _CAN_Rx 5750                   __end_of___awtofl 5B24  
                           _CAN_Tx 537C                    __CFG_BBSIZ$1024 000000  
                 __end_of___lbtofl 5D12                   __end_of___lltofl 5D7C  
                           i2l6400 2F04                             i2l6320 2BCE  
                           i2l6312 2B5C                             i2l6332 2C2E  
                           i2l6324 2BEE                             i2l6336 2C4E  
                           i2l6328 2C0E                             i2l6338 2C82  
                           i2l6274 29E8                             i2l6390 2E94  
                           i2l6382 2E58                             i2l6374 2DE8  
                           i2l6278 29F0                             i2l6394 2EB2  
                           i2l6386 2E76                             i2l6812 26F4  
                           i2l6716 23E0                             i2l6398 2ED0  
                           i2l6742 24DC                             i2l6736 24BE  
                           i2l8512 3BF0                             i2l8504 3BBE  
                           i2l6818 2712                             i2l8522 3C24  
                           i2l8534 3CC0                             i2l8526 3C42  
                           i2l6792 2616                             i2l8544 3CEE  
                           i2l8480 3B52                             i2l8490 3B84  
                           i2l8466 3B0E                             i2l6868 284C  
                           i2l8484 3B5A                             i2l8548 3D1E  
                           i2l6894 2948                             i2l6888 292A  
                           i2l8498 3BA8                   __end_of___lwtofl 5DAE  
                           _RXB0D0 000F66                             _RXB0D1 000F67  
                           _RXB0D2 000F68                             _RXB0D3 000F69  
                           _RXB0D4 000F6A                             _RXB1D0 000F56  
                           _RXB0D5 000F6B                             _RXB1D1 000F57  
                           _RXB0D6 000F6C                             _RXB1D2 000F58  
                           _RXB0D7 000F6D                             _RXB1D3 000F59  
                           _RXB1D4 000F5A                             _RXB1D5 000F5B  
                           _RXB1D6 000F5C                             _RXB1D7 000F5D  
                           _TXB0D0 000F46                             _TXB0D1 000F47  
                           _TXB0D2 000F48                             _TXB0D3 000F49  
                           _TXB1D0 000F36                             _TXB0D4 000F4A  
                           _TXB1D1 000F37                             _TXB0D5 000F4B  
                           _TXB1D2 000F38                             _TXB0D6 000F4C  
                           _TXB1D3 000F39                             _TXB0D7 000F4D  
                           _TXB2D0 000F26                             _TXB1D4 000F3A  
                           _TXB2D1 000F27                             _TXB1D5 000F3B  
                           _TXB2D2 000F28                             _TXB1D6 000F3C  
                           _TXB2D3 000F29                             _TXB1D7 000F3D  
                           _TXB2D4 000F2A                             _TXB2D5 000F2B  
                           _TXB2D6 000F2C                             _TXB2D7 000F2D  
               CANsendMessage@data 0074                 CANsendMessage@tamp 007C  
                  _switch_position 00E7                   __end_of_delay_ms 5CA4  
            __size_of_CANSetFilter 0B2A                     __CFG_XINST$OFF 000000  
                __end_of_ISR_bassa 00BE                   __end_of__powers_ FE07  
                       _MotoreFlag 025E                     ?_LCD_goto_line 0029  
                           ___flge 4F3C                          ??___fladd 00A3  
                 _delay_set_quartz 5F5E                             ___wmul 5CA4  
                        ??___fldiv 0086                          ??___awdiv 007A  
                        ??___flneg 0092                     __CFG_STVREN$ON 000000  
                        ??___awmod 0074                          ??___flmul 0087  
                        ??___flsub 00AF                          ??___fltol 00AB  
                        ??___lldiv 0078                          ??___llmod 0078  
                        ??___lwdiv 0074                       ??_CANSetMask 0075  
                        ??___lwmod 0074            __size_of_LCD_write_char 0096  
                           _fround 37DC     LCD_initialize@quartz_frequency 007E  
                           clear_0 5B76                             clear_1 5B82  
                           clear_2 5B94                   ___awdiv@quotient 007C  
                  ___awmod@divisor 0072               __size_of_LCD_Handler 01FE  
                  ___awmod@counter 0074                    __CFG_BOREN$BOHW 000000  
                _JoystickConstants 00BB                             itoa@cp 0086  
                        ??_isdigit 0070               __size_of_LCD_Parking 0064  
                     __mediumconst FD9E                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
       __size_of_F2_Button_Polling 0016                          ??_sprintf 00B9  
                     _CANSetFilter 0000                         ___fladd@f1 009B  
                       ___fladd@f2 009F                         ___flge@ff1 0070  
                       ___flge@ff2 0074                         ___fldiv@f1 007E  
                       ___fldiv@f2 0082                         ___fldiv@f3 0086  
                       __accesstop 0060            __end_of__initialization 5BAC  
               __end_of_CANSetMask 37DC                          ?_LCD_Park 0029  
                  __CFG_PBADEN$OFF 000000                         _SterzoFlag 0260  
                       ___flneg@f1 008E                   _LCD_send_command 5C30  
                       ___flmul@f1 007F                         ___flmul@f2 0083  
                    ___rparam_used 000001  LCD_write_integer@number_of_digits 008A  
                       ___flsub@f1 00A7                         ___flsub@f2 00AB  
                       ___fltol@f1 00A7               __size_of_LCD_goto_xy 001C  
                       ___awtofl@c 007A                         ___lbtofl@c 007E  
                   __pcstackCOMRAM 0029                       __pidataBANK0 5F68  
                        ?_ISR_alta 0029                         ___lltofl@c 007A  
                     LCD_goto_xy@x 0080                       LCD_goto_xy@y 007F  
                    __end_of_scale 3432                     _LCD_initialize 4A1A  
                _LCD_write_integer 4396                  _LCD_write_message 5D12  
                       ___lwtofl@c 007A              CANSetFilter@numBuffer 0079  
               ?_LCD_write_integer 0088             LCD_write_integer@index 0097  
               ?_LCD_write_message 0081                         __div_to_l_ 4706  
                     ??_LCD_cursor 007D             LCD_write_integer@value 0088  
    LCD_write_integer@convertedInt 0091                  _space_gap_reached 0268  
                    _newMessageCan 0263                       _actual_speed 00DD  
            __size_of_CANisRxReady 0018              __size_of_CANisTxReady 0026  
              ??_LCD_write_integer 008C                    __div_to_l_@exp1 007D  
              ??_LCD_write_message 0083                    __div_to_l_@cntr 007C  
                          ??_scale 0092                   _LCD_shift_cursor 5A8A  
                  __div_to_l_@quot 0078           __end_of_CANOperationMode 5F04  
                          ?_CAN_Rx 0029                            ?_CAN_Tx 0029  
                       __pbssBANK0 00BB                         __pbssBANK1 0100  
                       _data_brake 00E8                         ??_LCD_Park 0083  
          __size_of_CANsendMessage 07A0                         _data_speed 00E9  
                    __div_to_l_@f1 0070                      __div_to_l_@f2 0074  
                  ??_LCD_goto_line 007C                 __end_of_LCD_cursor 5DE0  
           __end_of_LCD_initialize 4B88                            ?___flge 0070  
                          ?___wmul 0070                         ??_ISR_alta 0060  
        __end_of_LCD_write_integer 4560          __end_of_LCD_write_message 5D48  
                ?_LCD_enable_pulse 0029                          ?___flpack 0070  
                          ?_fround 008E                       _CANisRxReady 5F04  
                          _CANSTAT 000F6E                          ?___awtofl 007A  
               ??_LCD_enable_pulse 0078                          ?___lbtofl 007A  
                     _CANisTxReady 5E68                          ISR_alta@i 004A  
                        ?___lltofl 007A                            _BRGCON1 000F70  
                          _BRGCON2 000F71                            _BRGCON3 000F72  
                 i2_CANsendMessage 2338                          ?___lwtofl 007A  
      __size_of_PWR_Button_Polling 0016                            _LCD_Gap 58FE  
                          _LCD_End 59C6            __size_ofi2_CANisTxReady 0020  
           __size_of_CANInitialize 01CE                   LCD_cursor@active 007D  
                        ?_delay_ms 0076                            _RXB0DLC 000F65  
                          _RXB1DLC 000F55                            _RXB0CON 000F60  
                          _RXB1CON 000F50                            _TXB0DLC 000F45  
                          _TXB1DLC 000F35                            _TXB2DLC 000F25  
              CANsendMessage@flags 0077                            _AbsFlag 0258  
                _parking_message_E 0265                    __size_of_CAN_Rx 007A  
                  __size_of_CAN_Tx 00C0                  __end_of__npowers_ FDD3  
                          __Hparam 0000                         _left_speed 0011  
                       _scale$4236 0092                            __Lparam 0000  
                 delay_ms@value_ms 0076                    ?_LCD_initialize 0029  
                  __size_of___flge 00F8                            ___fladd 3D5E  
                          ___fldiv 4CEC                            ___awdiv 5122  
                          ___flneg 5BF4                            ___awmod 543C  
                          ___flmul 4B88                            ___flsub 5A2A  
                          ___fltol 4E22                            ___lldiv 51F2  
                  __size_of___wmul 0038                     _LCD_write_char 5638  
                          ___llmod 5594                            ___lwdiv 56CE  
                          ___lwmod 57CA                         ??___flpack 0076  
             CANInitialize@propSeg 0087                            __pcinit 5B70  
                       ??___awtofl 007E                         ??___lbtofl 007E  
                          _battery 0017                    __size_of_fround 02FE  
                          __ramtop 0D00                LCD_write_char@value 0080  
                       ??___lltofl 007E                            __ptext0 1BD6  
                          __ptext1 54F0                            __ptext2 41C8  
                          __ptext3 3432                            __ptext4 0000  
                          __ptext5 5EEC                            __ptext6 5CDC  
                          __ptext7 5AD8                            __ptext8 5F1C  
                          __ptext9 5836                         ??___lwtofl 007E  
                      ?__div_to_l_ 0070                   LCD_write_char@D0 007F  
                 LCD_write_char@D1 007E                   LCD_write_char@D2 007D  
                 LCD_write_char@D3 007C                          _F1_switch 025B  
                          _dpowers FE07                          _F2_switch 025C  
                          _isdigit 5E12                   ___awmod@dividend 0070  
                       ??_delay_ms 0078             CANreceiveMessage@error 0044  
     __end_of_board_initialization 5594          __size_of_Joystick_Polling 0042  
                        _LCD_Error 5962           __end_of_delay_set_quartz 5F68  
                          _sprintf 0B2A                     __pintcode_body 3ADA  
                        _LCD_clear 5DE0               end_of_initialization 5BAC  
        __size_of_LCD_write_string 0028                            itoa@buf 0080  
                          itoa@val 0082                            int_func 3ADA  
                        i2u1121_47 3CE6                          i2u1054_45 3B2C  
                        i2u1054_46 3B2E                          i2u1064_45 3C3A  
                        i2u1064_46 3C3C                          i2u1066_45 3C5A  
                        i2u1067_45 3C74                          i2u1067_46 3C76  
                        i2u1068_45 3C9A                          i2u1068_46 3C9C  
                    _CANInitialize 41C8                      _parking_error 0264  
                  ___lldiv@divisor 0074                 LCD_cursor@blinking 007C  
                    _parking_state 00E5                    ___lldiv@counter 007C  
           __end_of_LCD_write_char 56CE                            postdec2 000FDD  
                          postinc0 000FEE                            postinc2 000FDE  
       __size_of_LCD_write_integer 01CA         __size_of_LCD_write_message 0036  
                          utoa@buf 0077                     __tdiv_to_l_@f1 0070  
                   __tdiv_to_l_@f2 0074                            utoa@val 0079  
                       _wait_low_1 026A                         _wait_low_2 026B  
                       _wait_low_3 026C                          _ISR_bassa 0018  
                    ??__tdiv_to_l_ 0078            _steering_correction_dir 0269  
                        _PORTAbits 000F80                          _PORTBbits 000F81  
                   CANSetMask@mask 0070                          _PORTDbits 000F83  
                   CANSetMask@tamp 007A           __end_of_LCD_send_command 5C6A  
                   CANSetMask@type 0074                        ___fldiv@exp 008B  
                _F1_Button_Polling 5F48                         ?_LCD_Error 0029  
                       ?_LCD_clear 0029                 ?_F1_Button_Polling 0029  
                   __end_of_CAN_Rx 57CA                     __end_of_CAN_Tx 543C  
          _clock_counter_reference 00DF                        ___flmul@exp 0087  
                   _CANsendMessage 1436                   CANInitialize@BRP 0081  
                 CANInitialize@SJW 0080                     ?_CANInitialize 007E  
              ??_F1_Button_Polling 0070                  __size_of_LCD_Park 0064  
              __size_of__div_to_l_ 0194            LCD_write_integer@F17326 0107  
                  ?_LCD_write_char 0029                      ??_LCD_Handler 00BB  
         __end_of_LCD_shift_cursor 5AD8                     __end_of___flge 5034  
                       ?_ISR_bassa 0029                     __end_of___wmul 5CDC  
                __size_of_ISR_alta 3D56                      ??_LCD_Parking 0083  
                LCD_shift_cursor@i 007E                     __end_of_fround 3ADA  
                   i2_CANisTxReady 5EB0          __end_of_F1_Button_Polling 5F5E  
              start_initialization 5B70                __end_of__tdiv_to_l_ 4706  
              CANSetMask@numBuffer 0079                      _data_speed_rx 0100  
           __end_of_CANsendMessage 1BD6                           ??_CAN_Rx 0070  
                         ??_CAN_Tx 0080                  ?_CANOperationMode 0029  
                    _data_steering 00EA                      ??_LCD_goto_xy 0080  
       i2CANsendMessage@dataLength 0040               i2CANsendMessage@data 003E  
               ??_CANOperationMode 0070               i2CANsendMessage@tamp 0046  
                  ___llmod@divisor 0074           __end_ofi2_CANsendMessage 29DC  
       CANInitialize@FilterConfig1 0088         CANInitialize@FilterConfig2 0089  
                  ___llmod@counter 0078                _steering_correction 00E6  
                         ??___flge 0078               _board_initialization 54F0  
                         ??___wmul 0074                        __pdataBANK0 00EB  
                 __CFG_LPT1OSC$OFF 000000                           ??_fround 0092  
           __end_ofi2_CANisTxReady 5ED0                      sprintf@tmpval 012F  
                __size_of___flpack 0180             CANInitialize@phaseSeg1 007E  
           CANInitialize@phaseSeg2 007F                         fround@prec 009A  
              __end_of_LCD_Handler 41C8                  __size_of___awtofl 004C  
                         ?_LCD_Gap 0029                  __size_of___lbtofl 0036  
                         ?_LCD_End 0029                  __size_of___lltofl 0034  
                      __pbssCOMRAM 0001                  __size_of___lwtofl 0032  
                    __pcstackBANK0 0060                      __pcstackBANK1 0121  
                      _BRGCON2bits 000F71                __end_of_LCD_Parking 589A  
                      _BRGCON3bits 000F72                   _Joystick_Polling 5BB2  
                      ??_LCD_Error 0083          __size_of_LCD_enable_pulse 0022  
                     _isdigit$3910 0071         i2CANsendMessage@identifier 003A  
                _park_assist_state 0119                  __size_of_delay_ms 003A  
                      ??_LCD_clear 007C                    ?_CANsendMessage 0070  
          LCD_write_message@buffer 0081                   _LCD_write_string 5E40  
                  ??_CANInitialize 0083                        sprintf@flag 0127  
                      sprintf@fval 0135                        sprintf@prec 0133  
                 ??_LCD_initialize 007E                 CANSetFilter@filter 0070  
        delay_set_quartz@frequency 0070                   ___lwdiv@dividend 0070  
               LCD_send_command@D0 007A                 LCD_send_command@D1 0079  
               LCD_send_command@D2 0078                 LCD_send_command@D3 007B  
              __end_of_LCD_goto_xy 5EEC              __end_of_LCD_goto_line 5122  
            ?_board_initialization 0029                          __pintcode 0008  
                    __pmediumconst FD9E                           ?___fladd 009B  
                         ?___fldiv 007E                           ?___awdiv 0076  
                         ?___flneg 008E                           ?___awmod 0070  
                         ?___flmul 007F                           ?___flsub 00A7  
                         ?___fltol 00A7                           ?___lldiv 0070  
                         ?___llmod 0070                          __npowers_ FD9F  
                         ?___lwdiv 0070                           ?___lwmod 0070  
                      ??_ISR_bassa 0029                        __pintcodelo 0018  
       __end_of_PWR_Button_Polling 5F32                    ?i2_CANisTxReady 0029  
                      __tdiv_to_l_ 4560                       ??__div_to_l_ 0078  
                      _COMSTATbits 000F74                           ?_isdigit 0029  
       __size_of_F1_Button_Polling 0016                        _BKWD_sensor 0259  
                 ___lwdiv@quotient 0074                           ?_sprintf 00B1  
                   __size_of_scale 0528                  ?_delay_set_quartz 0029  
            CANreceiveMessage@tamp 0045                 ??_delay_set_quartz 0070  
                         _LCD_Park 589A                     ___wmul@product 0074  
                         _LATCbits 000F8B                           _LATDbits 000F8C  
                         _LATEbits 000F8D                           _IPR2bits 000FA2  
     _delay_quartz_frequency_value 00EB                           _IPR3bits 000FA5  
                         _PIE2bits 000FA0                           _PIE3bits 000FA3  
               __end_of__div_to_l_ 489A                           _PIR2bits 000FA1  
                         _PIR3bits 000FA4                           i2u802_40 23FE  
                         i2u802_45 23F4                           i2u803_40 2444  
                         i2u803_45 243A                           i2u804_45 2490  
                         i2u750_45 2AE0                           i2u830_45 28FC  
                         i2u815_40 2634                           i2u815_45 262A  
                         i2u816_40 267A                           i2u816_45 2670  
                         i2u761_45 2D6E                           i2u817_45 26C6  
                         i2u747_40 2A9C                           i2u747_46 2A9E  
                         i2u748_40 2ACA                           i2u828_40 286A  
                         i2u756_45 2C5A                           i2u828_45 2860  
                         i2u748_46 2ACC                           i2u829_40 28B0  
                         i2u829_45 28A6                           i2u758_40 2D30  
                         i2u758_46 2D32                           i2u759_40 2D5A  
                         i2u767_45 2EDC                           i2u759_46 2D5C  
                         _RXB0EIDH 000F63                           _RXB0EIDL 000F64  
                         _RXB1EIDH 000F53                          _pr_time_1 00C7  
                        _pr_time_2 00CB                           _RXB1EIDL 000F54  
                        _pr_time_3 00CF                          _pr_time_4 0009  
                        _pr_time_5 00D3                          _pr_time_6 00D7  
                        _set_speed 00E1                           _RCONbits 000FD0  
                 __CFG_WDTPS$32768 000000                           _RXB0SIDH 000F61  
                         _RXB0SIDL 000F62                           _RXF0EIDH 000F02  
                         _RXB1SIDH 000F51                           _RXF0EIDL 000F03  
                         _RXB1SIDL 000F52                           _RXF1EIDH 000F06  
                         _RXF1EIDL 000F07                           _RXF2EIDH 000F0A  
                         _RXF2EIDL 000F0B                           _RXF3EIDH 000F0E  
                         _RXF3EIDL 000F0F                           _RXF4EIDH 000F12  
                         _RXF4EIDL 000F13                           _RXF5EIDH 000F16  
                         _RXF5EIDL 000F17                           _RXF0SIDH 000F00  
                         _RXF0SIDL 000F01                           _TXB0EIDH 000F43  
                         _RXF1SIDH 000F04                           _TXB0EIDL 000F44  
                         _RXF1SIDL 000F05                           _TXB1EIDH 000F33  
                         _RXF2SIDH 000F08                           _TXB1EIDL 000F34  
                         _RXF2SIDL 000F09                           _ISR_alta 0008  
                         _TXB2EIDH 000F23                           _RXF3SIDH 000F0C  
                         _TXB2EIDL 000F24                           _RXF3SIDL 000F0D  
                         _RXF4SIDH 000F10                           _RXF4SIDL 000F11  
                         _RXF5SIDH 000F14                           _RXF5SIDL 000F15  
                         _RXM0EIDH 000F1A                           _RXM0EIDL 000F1B  
                         _TXB0SIDH 000F41                           _RXM1EIDH 000F1E  
                         _TXB0SIDL 000F42                           _RXM1EIDL 000F1F  
                         _TXB1SIDH 000F31                           _TXB1SIDL 000F32  
                         _TXB2SIDH 000F21                           _TXB2SIDL 000F22  
                      _LCD_Handler 3FCA                           _RXM0SIDH 000F18  
                         _RXM0SIDL 000F19                           _RXM1SIDH 000F1C  
                         _RXM1SIDL 000F1D                           _RXERRCNT 000F75  
   LCD_write_integer@zero_cleaning 008B                 _parking_message_ID 00E4  
                         _TXERRCNT 000F76                         _ADCON0bits 000FC2  
                      _LCD_Parking 5836                         _ADCON2bits 000FC0  
                ___wmul@multiplier 0070                           _RTR_Flag 025F  
                ?_LCD_send_command 0078                   _actual_speed_kmh 0001  
                        _user_data 0015                   __size_of_LCD_Gap 0064  
                 __size_of_LCD_End 0064                 ??_LCD_send_command 007B  
                    ?_CANSetFilter 0070                         _CANCONbits 000F6F  
                      _LCD_goto_xy 5ED0                   ??_LCD_write_char 007C  
                LCD_goto_line@line 007C                           __Hrparam 0000  
                     _RXB0SIDLbits 000F62             ??_board_initialization 008A  
                         __Lrparam 0000                       _RXB1SIDLbits 000F52  
                 __size_of___fladd 026C                         _CANSetMask 3432  
                 __size_of___fldiv 0136                   __size_of___awdiv 00D0  
                 __size_of___flneg 003C                   __size_of___awmod 00B4  
                 __size_of___flmul 0164                  ?_LCD_shift_cursor 007C  
                 __size_of___flsub 0060                   __size_of___fltol 011A  
                 __size_of___lldiv 00C6                   __size_of___llmod 00A4  
                         ___flpack 489A                   __size_of___lwdiv 0082  
                 __size_of___lwmod 006C                           ___awtofl 5AD8  
                         ___lbtofl 5CDC                        _fround$4234 0096  
                      _fround$4235 0092                           ___lltofl 5D48  
               ??_LCD_shift_cursor 007D                           ___lwtofl 5D7C  
                       sprintf@exp 012D                         sprintf@val 0129  
                     _RXF0SIDLbits 000F01                   __size_of_isdigit 002E  
                         _delay_ms 5C6A                    ___lwdiv@divisor 0072  
                     _RXF1SIDLbits 000F05                    ___lwdiv@counter 0076  
                   ??_CANSetFilter 0075                   _LCD_enable_pulse 5E8E  
                         __ptext10 589A                           __ptext11 3FCA  
                         __ptext20 4706                           __ptext12 0B2A  
                         __ptext21 5D48                           __ptext13 2F0A  
                         __ptext30 4CEC                           __ptext22 5594  
                         __ptext14 5E12                           __ptext31 489A  
                         __ptext23 51F2                           __ptext15 37DC  
                         __ptext40 58FE                           __ptext32 4396  
                         __ptext24 4E22                           __ptext16 4B88  
                         __ptext41 5962                           __ptext33 5B24  
                         __ptext25 5A2A                           __ptext17 543C  
                         __ptext50 5C30                           __ptext42 59C6  
                         __ptext34 52B8                           __ptext26 3D5E  
                         __ptext18 5122                           __ptext51 5E8E  
                         __ptext43 5D12                           __ptext35 57CA  
                         __ptext27 5BF4                           __ptext19 4560  
                         __ptext60 5750                           __ptext52 5C6A  
                         __ptext44 5638                           __ptext36 56CE  
                         __ptext28 4F3C                           __ptext53 5CA4  
                         __ptext45 4A1A                           __ptext37 5E40  
                         __ptext29 5D7C                           __ptext54 5BB2  
                         __ptext46 5F5E                           __ptext38 5ED0  
                         __ptext63 2338                           __ptext55 5F32  
                         __ptext47 5DAE                           __ptext39 5A8A  
                         __ptext64 5EB0                           __ptext56 5F48  
                         __ptext48 5DE0                           __ptext65 29DC  
                         __ptext57 537C                           __ptext49 5034  
                         __ptext66 5F04                           __ptext58 1436  
                         __ptext59 5E68                       _RXF2SIDLbits 000F09  
                         __powers_ FDD3                       _RXF3SIDLbits 000F0D  
                 __size_of_sprintf 090C                       _RXF4SIDLbits 000F11  
                     _RXF5SIDLbits 000F15           CANsendMessage@dataLength 0076  
                    __size_of_main 0762                      __size_of_itoa 004C  
                    __size_of_utoa 00C4                  ?i2_CANsendMessage 003A  
             CANreceiveMessage@msg 003A              LCD_shift_cursor@shift 007D  
              i2_CANisTxReady$3255 003A                       _TXB0SIDLbits 000F42  
                Joystick_Polling@i 0070                 ??i2_CANsendMessage 0042  
                     _TXB1SIDLbits 000F32           __end_of_Joystick_Polling 5BF4  
                     _TXB2SIDLbits 000F22          __size_of_CANOperationMode 0018  
                    ?_CANisRxReady 0029                      ?_CANisTxReady 0029  
         __end_of_LCD_write_string 5E68                        _RXB0DLCbits 000F65  
            ___flmul@f3_as_product 0088                        _RXB1DLCbits 000F55  
                     _RXM0SIDLbits 000F19                        _RXB0CONbits 000F60  
                       _LCD_cursor 5DAE                        _RXB1CONbits 000F50  
                _CANreceiveMessage 29DC                       _RXM1SIDLbits 000F1D  
                       _INTCONbits 000FF2                       _set_steering 0018  
                 ??_CANsendMessage 0078                 ?_CANreceiveMessage 003A  
                         itoa@base 0084                           isdigit@c 0072  
                         scale@scl 0096           CANsendMessage@identifier 0070  
                     _time_counter 000D                           intlevel1 0000  
                         intlevel2 0000                          sprintf@ap 0125  
                 __tdiv_to_l_@exp1 0080                          sprintf@sp 00B1  
                 __tdiv_to_l_@cntr 007F                   CANSetFilter@tamp 007A  
                 __tdiv_to_l_@quot 007B                   CANSetFilter@type 0074  
              ??_CANreceiveMessage 003C                   ___lwmod@dividend 0070  
                 ___lldiv@dividend 0070                        _TXB0DLCbits 000F45  
                      _right_speed 0013                        _TXB1DLCbits 000F35  
                      _TXB0CONbits 000F40                        _TXB2DLCbits 000F25  
                      _TXB1CONbits 000F30                        _TXB2CONbits 000F20  
                       _FWD_sensor 025D                    _display_refresh 0262  
                 ??i2_CANisTxReady 003A               CANOperationMode@mode 0070  
                   ??_CANisRxReady 003A                        ?_CANSetMask 0070  
                   ??_CANisTxReady 0070                       ?__tdiv_to_l_ 0070  
        __end_of_CANreceiveMessage 2F0A                           utoa@base 007B  
                         sprintf@c 0139                           sprintf@f 00B3  
                 ___lldiv@quotient 0078                    ___lwmod@divisor 0072  
  LCD_shift_cursor@number_of_shift 007C                    ___lwmod@counter 0074  
                   _collision_risk 0261                 _PWR_Button_Polling 5F1C  
                     ___fladd@exp1 00A6                       ___fladd@exp2 00A5  
                     ___fladd@sign 00A4              __end_of_CANInitialize 4396  
              ?_PWR_Button_Polling 0029                       _power_switch 0266  
