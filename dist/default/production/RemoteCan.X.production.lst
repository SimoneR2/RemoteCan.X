

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Mar 30 17:57:38 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    73                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    74  0000                     
    75                           	psect	idataBANK0
    76  015EB8                     __pidataBANK0:
    77                           	opt stack 0
    78                           
    79                           ;initializer for _delay_quartz_frequency_value
    80  015EB8  10                 	db	16
    81                           
    82                           	psect	mediumconst
    83  00FEFE                     __pmediumconst:
    84                           	opt stack 0
    85  00FEFE  00                 	db	0
    86  00FEFF                     __npowers_:
    87                           	opt stack 0
    88  00FEFF  0000               	dw	0
    89  00FF01  3F80               	dw	16256
    90  00FF03  CCCD               	dw	52429
    91  00FF05  3DCC               	dw	15820
    92  00FF07  D70A               	dw	55050
    93  00FF09  3C23               	dw	15395
    94  00FF0B  126F               	dw	4719
    95  00FF0D  3A83               	dw	14979
    96  00FF0F  B717               	dw	46871
    97  00FF11  38D1               	dw	14545
    98  00FF13  C5AC               	dw	50604
    99  00FF15  3727               	dw	14119
   100  00FF17  37BD               	dw	14269
   101  00FF19  3586               	dw	13702
   102  00FF1B  BF95               	dw	49045
   103  00FF1D  33D6               	dw	13270
   104  00FF1F  CC77               	dw	52343
   105  00FF21  322B               	dw	12843
   106  00FF23  705F               	dw	28767
   107  00FF25  3089               	dw	12425
   108  00FF27  E6FF               	dw	59135
   109  00FF29  2EDB               	dw	11995
   110  00FF2B  E508               	dw	58632
   111  00FF2D  1E3C               	dw	7740
   112  00FF2F  4260               	dw	16992
   113  00FF31  0DA2               	dw	3490
   114  00FF33                     __end_of__npowers_:
   115                           	opt stack 0
   116  00FF33                     __powers_:
   117                           	opt stack 0
   118  00FF33  0000               	dw	0
   119  00FF35  3F80               	dw	16256
   120  00FF37  0000               	dw	0
   121  00FF39  4120               	dw	16672
   122  00FF3B  0000               	dw	0
   123  00FF3D  42C8               	dw	17096
   124  00FF3F  0000               	dw	0
   125  00FF41  447A               	dw	17530
   126  00FF43  4000               	dw	16384
   127  00FF45  461C               	dw	17948
   128  00FF47  5000               	dw	20480
   129  00FF49  47C3               	dw	18371
   130  00FF4B  2400               	dw	9216
   131  00FF4D  4974               	dw	18804
   132  00FF4F  9680               	dw	38528
   133  00FF51  4B18               	dw	19224
   134  00FF53  BC20               	dw	48160
   135  00FF55  4CBE               	dw	19646
   136  00FF57  6B28               	dw	27432
   137  00FF59  4E6E               	dw	20078
   138  00FF5B  02F9               	dw	761
   139  00FF5D  5015               	dw	20501
   140  00FF5F  78EC               	dw	30956
   141  00FF61  60AD               	dw	24749
   142  00FF63  F2CA               	dw	62154
   143  00FF65  7149               	dw	29001
   144  00FF67                     __end_of__powers_:
   145                           	opt stack 0
   146  00FF67                     _dpowers:
   147                           	opt stack 0
   148  00FF67  0001               	dw	1
   149  00FF69  0000               	dw	0
   150  00FF6B  000A               	dw	10
   151  00FF6D  0000               	dw	0
   152  00FF6F  0064               	dw	100
   153  00FF71  0000               	dw	0
   154  00FF73  03E8               	dw	1000
   155  00FF75  0000               	dw	0
   156  00FF77  2710               	dw	10000
   157  00FF79  0000               	dw	0
   158  00FF7B  86A0               	dw	34464
   159  00FF7D  0001               	dw	1
   160  00FF7F  4240               	dw	16960
   161  00FF81  000F               	dw	15
   162  00FF83  9680               	dw	38528
   163  00FF85  0098               	dw	152
   164  00FF87  E100               	dw	57600
   165  00FF89  05F5               	dw	1525
   166  00FF8B  CA00               	dw	51712
   167  00FF8D  3B9A               	dw	15258
   168  00FF8F                     __end_of_dpowers:
   169                           	opt stack 0
   170  0000                     _RXB1CON	set	3920
   171  0000                     _RXB1CONbits	set	3920
   172  0000                     _RXB1D0	set	3926
   173  0000                     _RXB1D1	set	3927
   174  0000                     _RXB1D2	set	3928
   175  0000                     _RXB1D3	set	3929
   176  0000                     _RXB1D4	set	3930
   177  0000                     _RXB1D5	set	3931
   178  0000                     _RXB1D6	set	3932
   179  0000                     _RXB1D7	set	3933
   180  0000                     _RXB1DLC	set	3925
   181  0000                     _RXB1DLCbits	set	3925
   182  0000                     _RXB1EIDH	set	3923
   183  0000                     _RXB1EIDL	set	3924
   184  0000                     _RXB1SIDH	set	3921
   185  0000                     _RXB1SIDL	set	3922
   186  0000                     _RXB1SIDLbits	set	3922
   187  0000                     _RXF0EIDH	set	3842
   188  0000                     _RXF0EIDL	set	3843
   189  0000                     _RXF0SIDH	set	3840
   190  0000                     _RXF0SIDL	set	3841
   191  0000                     _RXF0SIDLbits	set	3841
   192  0000                     _RXF1EIDH	set	3846
   193  0000                     _RXF1EIDL	set	3847
   194  0000                     _RXF1SIDH	set	3844
   195  0000                     _RXF1SIDL	set	3845
   196  0000                     _RXF1SIDLbits	set	3845
   197  0000                     _RXF2EIDH	set	3850
   198  0000                     _RXF2EIDL	set	3851
   199  0000                     _RXF2SIDH	set	3848
   200  0000                     _RXF2SIDL	set	3849
   201  0000                     _RXF2SIDLbits	set	3849
   202  0000                     _RXF3EIDH	set	3854
   203  0000                     _RXF3EIDL	set	3855
   204  0000                     _RXF3SIDH	set	3852
   205  0000                     _RXF3SIDL	set	3853
   206  0000                     _RXF3SIDLbits	set	3853
   207  0000                     _RXF4EIDH	set	3858
   208  0000                     _RXF4EIDL	set	3859
   209  0000                     _RXF4SIDH	set	3856
   210  0000                     _RXF4SIDL	set	3857
   211  0000                     _RXF4SIDLbits	set	3857
   212  0000                     _RXF5EIDH	set	3862
   213  0000                     _RXF5EIDL	set	3863
   214  0000                     _RXF5SIDH	set	3860
   215  0000                     _RXF5SIDL	set	3861
   216  0000                     _RXF5SIDLbits	set	3861
   217  0000                     _RXM0EIDH	set	3866
   218  0000                     _RXM0EIDL	set	3867
   219  0000                     _RXM0SIDH	set	3864
   220  0000                     _RXM0SIDL	set	3865
   221  0000                     _RXM0SIDLbits	set	3865
   222  0000                     _RXM1EIDH	set	3870
   223  0000                     _RXM1EIDL	set	3871
   224  0000                     _RXM1SIDH	set	3868
   225  0000                     _RXM1SIDL	set	3869
   226  0000                     _RXM1SIDLbits	set	3869
   227  0000                     _TXB0CONbits	set	3904
   228  0000                     _TXB0D0	set	3910
   229  0000                     _TXB0D1	set	3911
   230  0000                     _TXB0D2	set	3912
   231  0000                     _TXB0D3	set	3913
   232  0000                     _TXB0D4	set	3914
   233  0000                     _TXB0D5	set	3915
   234  0000                     _TXB0D6	set	3916
   235  0000                     _TXB0D7	set	3917
   236  0000                     _TXB0DLC	set	3909
   237  0000                     _TXB0DLCbits	set	3909
   238  0000                     _TXB0EIDH	set	3907
   239  0000                     _TXB0EIDL	set	3908
   240  0000                     _TXB0SIDH	set	3905
   241  0000                     _TXB0SIDL	set	3906
   242  0000                     _TXB0SIDLbits	set	3906
   243  0000                     _TXB1CONbits	set	3888
   244  0000                     _TXB1D0	set	3894
   245  0000                     _TXB1D1	set	3895
   246  0000                     _TXB1D2	set	3896
   247  0000                     _TXB1D3	set	3897
   248  0000                     _TXB1D4	set	3898
   249  0000                     _TXB1D5	set	3899
   250  0000                     _TXB1D6	set	3900
   251  0000                     _TXB1D7	set	3901
   252  0000                     _TXB1DLC	set	3893
   253  0000                     _TXB1DLCbits	set	3893
   254  0000                     _TXB1EIDH	set	3891
   255  0000                     _TXB1EIDL	set	3892
   256  0000                     _TXB1SIDH	set	3889
   257  0000                     _TXB1SIDL	set	3890
   258  0000                     _TXB1SIDLbits	set	3890
   259  0000                     _TXB2CONbits	set	3872
   260  0000                     _TXB2D0	set	3878
   261  0000                     _TXB2D1	set	3879
   262  0000                     _TXB2D2	set	3880
   263  0000                     _TXB2D3	set	3881
   264  0000                     _TXB2D4	set	3882
   265  0000                     _TXB2D5	set	3883
   266  0000                     _TXB2D6	set	3884
   267  0000                     _TXB2D7	set	3885
   268  0000                     _TXB2DLC	set	3877
   269  0000                     _TXB2DLCbits	set	3877
   270  0000                     _TXB2EIDH	set	3875
   271  0000                     _TXB2EIDL	set	3876
   272  0000                     _TXB2SIDH	set	3873
   273  0000                     _TXB2SIDL	set	3874
   274  0000                     _TXB2SIDLbits	set	3874
   275  0000                     _ADCON0bits	set	4034
   276  0000                     _ADCON1	set	4033
   277  0000                     _ADCON2bits	set	4032
   278  0000                     _ADRESH	set	4036
   279  0000                     _BRGCON1	set	3952
   280  0000                     _BRGCON2	set	3953
   281  0000                     _BRGCON2bits	set	3953
   282  0000                     _BRGCON3	set	3954
   283  0000                     _BRGCON3bits	set	3954
   284  0000                     _CANCON	set	3951
   285  0000                     _CANCONbits	set	3951
   286  0000                     _CANSTAT	set	3950
   287  0000                     _COMSTATbits	set	3956
   288  0000                     _INTCONbits	set	4082
   289  0000                     _IPR2bits	set	4002
   290  0000                     _IPR3bits	set	4005
   291  0000                     _LATA	set	3977
   292  0000                     _LATB	set	3978
   293  0000                     _LATC	set	3979
   294  0000                     _LATCbits	set	3979
   295  0000                     _LATD	set	3980
   296  0000                     _LATDbits	set	3980
   297  0000                     _LATE	set	3981
   298  0000                     _LATEbits	set	3981
   299  0000                     _PIE2bits	set	4000
   300  0000                     _PIE3bits	set	4003
   301  0000                     _PIR2bits	set	4001
   302  0000                     _PIR3bits	set	4004
   303  0000                     _PORTAbits	set	3968
   304  0000                     _PORTBbits	set	3969
   305  0000                     _PORTDbits	set	3971
   306  0000                     _RCONbits	set	4048
   307  0000                     _RXB0CON	set	3936
   308  0000                     _RXB0CONbits	set	3936
   309  0000                     _RXB0D0	set	3942
   310  0000                     _RXB0D1	set	3943
   311  0000                     _RXB0D2	set	3944
   312  0000                     _RXB0D3	set	3945
   313  0000                     _RXB0D4	set	3946
   314  0000                     _RXB0D5	set	3947
   315  0000                     _RXB0D6	set	3948
   316  0000                     _RXB0D7	set	3949
   317  0000                     _RXB0DLC	set	3941
   318  0000                     _RXB0DLCbits	set	3941
   319  0000                     _RXB0EIDH	set	3939
   320  0000                     _RXB0EIDL	set	3940
   321  0000                     _RXB0SIDH	set	3937
   322  0000                     _RXB0SIDL	set	3938
   323  0000                     _RXB0SIDLbits	set	3938
   324  0000                     _RXERRCNT	set	3957
   325  0000                     _T3CON	set	4017
   326  0000                     _TMR3H	set	4019
   327  0000                     _TMR3L	set	4018
   328  0000                     _TRISA	set	3986
   329  0000                     _TRISB	set	3987
   330  0000                     _TRISC	set	3988
   331  0000                     _TRISD	set	3989
   332  0000                     _TRISE	set	3990
   333  0000                     _TXERRCNT	set	3958
   334  00FF8F                     STR_3:
   335  00FF8F  54                 	db	84	;'T'
   336  00FF90  75                 	db	117	;'u'
   337  00FF91  72                 	db	114	;'r'
   338  00FF92  6E                 	db	110	;'n'
   339  00FF93  20                 	db	32
   340  00FF94  74                 	db	116	;'t'
   341  00FF95  68                 	db	104	;'h'
   342  00FF96  65                 	db	101	;'e'
   343  00FF97  20                 	db	32
   344  00FF98  73                 	db	115	;'s'
   345  00FF99  77                 	db	119	;'w'
   346  00FF9A  69                 	db	105	;'i'
   347  00FF9B  74                 	db	116	;'t'
   348  00FF9C  63                 	db	99	;'c'
   349  00FF9D  68                 	db	104	;'h'
   350  00FF9E  20                 	db	32
   351  00FF9F  4F                 	db	79	;'O'
   352  00FFA0  4E                 	db	78	;'N'
   353  00FFA1  21                 	db	33
   354  00FFA2  20                 	db	32
   355  00FFA3  00                 	db	0
   356  00FFA4                     STR_2:
   357  00FFA4  3D                 	db	61	;'='
   358  00FFA5  3D                 	db	61	;'='
   359  00FFA6  3E                 	db	62	;'>'
   360  00FFA7  20                 	db	32
   361  00FFA8  56                 	db	86	;'V'
   362  00FFA9  45                 	db	69	;'E'
   363  00FFAA  48                 	db	72	;'H'
   364  00FFAB  49                 	db	73	;'I'
   365  00FFAC  43                 	db	67	;'C'
   366  00FFAD  4C                 	db	76	;'L'
   367  00FFAE  45                 	db	69	;'E'
   368  00FFAF  20                 	db	32
   369  00FFB0  20                 	db	32
   370  00FFB1  4F                 	db	79	;'O'
   371  00FFB2  46                 	db	70	;'F'
   372  00FFB3  46                 	db	70	;'F'
   373  00FFB4  20                 	db	32
   374  00FFB5  3C                 	db	60	;'<'
   375  00FFB6  3D                 	db	61	;'='
   376  00FFB7  3D                 	db	61	;'='
   377  00FFB8  00                 	db	0
   378  00FFB9                     STR_1:
   379  00FFB9  3D                 	db	61	;'='
   380  00FFBA  3D                 	db	61	;'='
   381  00FFBB  3D                 	db	61	;'='
   382  00FFBC  3D                 	db	61	;'='
   383  00FFBD  3D                 	db	61	;'='
   384  00FFBE  3D                 	db	61	;'='
   385  00FFBF  3D                 	db	61	;'='
   386  00FFC0  3D                 	db	61	;'='
   387  00FFC1  3D                 	db	61	;'='
   388  00FFC2  3D                 	db	61	;'='
   389  00FFC3  3D                 	db	61	;'='
   390  00FFC4  3D                 	db	61	;'='
   391  00FFC5  3D                 	db	61	;'='
   392  00FFC6  3D                 	db	61	;'='
   393  00FFC7  3D                 	db	61	;'='
   394  00FFC8  3D                 	db	61	;'='
   395  00FFC9  3D                 	db	61	;'='
   396  00FFCA  3D                 	db	61	;'='
   397  00FFCB  3D                 	db	61	;'='
   398  00FFCC  3D                 	db	61	;'='
   399  00FFCD  00                 	db	0
   400  00FFCE                     STR_5:
   401  00FFCE  44                 	db	68	;'D'
   402  00FFCF  69                 	db	105	;'i'
   403  00FFD0  72                 	db	114	;'r'
   404  00FFD1  65                 	db	101	;'e'
   405  00FFD2  63                 	db	99	;'c'
   406  00FFD3  74                 	db	116	;'t'
   407  00FFD4  69                 	db	105	;'i'
   408  00FFD5  6F                 	db	111	;'o'
   409  00FFD6  6E                 	db	110	;'n'
   410  00FFD7  3A                 	db	58	;':'
   411  00FFD8  20                 	db	32
   412  00FFD9  00                 	db	0
   413  00FFDA                     STR_9:
   414  00FFDA  53                 	db	83	;'S'
   415  00FFDB  70                 	db	112	;'p'
   416  00FFDC  65                 	db	101	;'e'
   417  00FFDD  65                 	db	101	;'e'
   418  00FFDE  64                 	db	100	;'d'
   419  00FFDF  3A                 	db	58	;':'
   420  00FFE0  20                 	db	32
   421  00FFE1  25                 	db	37
   422  00FFE2  2E                 	db	46
   423  00FFE3  33                 	db	51	;'3'
   424  00FFE4  66                 	db	102	;'f'
   425  00FFE5  00                 	db	0
   426  00FFE6                     STR_12:
   427  00FFE6  57                 	db	87	;'W'
   428  00FFE7  61                 	db	97	;'a'
   429  00FFE8  69                 	db	105	;'i'
   430  00FFE9  74                 	db	116	;'t'
   431  00FFEA  2E                 	db	46
   432  00FFEB  2E                 	db	46
   433  00FFEC  2E                 	db	46
   434  00FFED  00                 	db	0
   435  00FFEE                     STR_7:
   436  00FFEE  42                 	db	66	;'B'
   437  00FFEF  4B                 	db	75	;'K'
   438  00FFF0  57                 	db	87	;'W'
   439  00FFF1  44                 	db	68	;'D'
   440  00FFF2  00                 	db	0
   441  00FFF3                     STR_10:
   442  00FFF3  4B                 	db	75	;'K'
   443  00FFF4  6D                 	db	109	;'m'
   444  00FFF5  2F                 	db	47
   445  00FFF6  68                 	db	104	;'h'
   446  00FFF7  00                 	db	0
   447  00FFF8                     STR_6:
   448  00FFF8  46                 	db	70	;'F'
   449  00FFF9  57                 	db	87	;'W'
   450  00FFFA  44                 	db	68	;'D'
   451  00FFFB  00                 	db	0
   452  00FFFC                     STR_8:
   453  00FFFC  50                 	db	80	;'P'
   454  00FFFD  00                 	db	0
   455  0000                     
   456                           ; #config settings
   457  00FFFE  00                 	db	0	; dummy byte at the end
   458  0000                     
   459                           	psect	cinit
   460  015BF6                     __pcinit:
   461                           	opt stack 0
   462  015BF6                     start_initialization:
   463                           	opt stack 0
   464  015BF6                     __initialization:
   465                           	opt stack 0
   466                           
   467                           ; Clear objects allocated to BANK1 (27 bytes)
   468  015BF6  EE01  F021         	lfsr	0,__pbssBANK1
   469  015BFA  0E1B               	movlw	27
   470  015BFC                     clear_0:
   471  015BFC  6AEE               	clrf	postinc0,c
   472  015BFE  06E8               	decf	wreg,f,c
   473  015C00  E1FD               	bnz	clear_0
   474                           
   475                           ; Clear objects allocated to BANK0 (33 bytes)
   476  015C02  EE00  F0CA         	lfsr	0,__pbssBANK0
   477  015C06  0E21               	movlw	33
   478  015C08                     clear_1:
   479  015C08  6AEE               	clrf	postinc0,c
   480  015C0A  06E8               	decf	wreg,f,c
   481  015C0C  E1FD               	bnz	clear_1
   482                           
   483                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   484  015C0E  6A47               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   485                           
   486                           ; Clear objects allocated to COMRAM (36 bytes)
   487  015C10  EE00  F001         	lfsr	0,__pbssCOMRAM
   488  015C14  0E24               	movlw	36
   489  015C16                     clear_2:
   490  015C16  6AEE               	clrf	postinc0,c
   491  015C18  06E8               	decf	wreg,f,c
   492  015C1A  E1FD               	bnz	clear_2
   493                           
   494                           ; Initialize objects allocated to BANK0 (1 bytes)
   495                           ; load TBLPTR registers with __pidataBANK0
   496  015C1C  0EB8               	movlw	low __pidataBANK0
   497  015C1E  6EF6               	movwf	tblptrl,c
   498  015C20  0E5E               	movlw	high __pidataBANK0
   499  015C22  6EF7               	movwf	tblptrh,c
   500  015C24  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   501  015C26  6EF8               	movwf	tblptru,c
   502  015C28  0009               	tblrd		*+	;fetch initializer
   503  015C2A  CFF5 F0EB          	movff	tablat,__pdataBANK0
   504  015C2E                     end_of_initialization:
   505                           	opt stack 0
   506  015C2E                     __end_of__initialization:
   507                           	opt stack 0
   508  015C2E  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   509  015C30  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   510  015C32  0100               	movlb	0
   511  015C34  EF95  F09A         	goto	_main	;jump to C main() function
   512                           tblptru	equ	0xFF8
   513                           tblptrh	equ	0xFF7
   514                           tblptrl	equ	0xFF6
   515                           tablat	equ	0xFF5
   516                           postinc0	equ	0xFEE
   517                           wreg	equ	0xFE8
   518                           
   519                           	psect	bitbssCOMRAM
   520  000238                     __pbitbssCOMRAM:
   521                           	opt stack 0
   522  000238                     _AbsFlag:
   523                           	opt stack 0
   524  000238                     	ds	1
   525  000239                     _MotoreFlag:
   526                           	opt stack 0
   527  000239                     	ds	1
   528  00023A                     _RTR_Flag:
   529                           	opt stack 0
   530  00023A                     	ds	1
   531  00023B                     _SterzoFlag:
   532                           	opt stack 0
   533  00023B                     	ds	1
   534  00023C                     _newMessageCan:
   535                           	opt stack 0
   536  00023C                     	ds	1
   537  00023D                     _power_switch:
   538                           	opt stack 0
   539  00023D                     	ds	1
   540  00023E                     _wait_low:
   541                           	opt stack 0
   542  00023E                     	ds	1
   543                           tblptru	equ	0xFF8
   544                           tblptrh	equ	0xFF7
   545                           tblptrl	equ	0xFF6
   546                           tablat	equ	0xFF5
   547                           postinc0	equ	0xFEE
   548                           wreg	equ	0xFE8
   549                           
   550                           	psect	bssCOMRAM
   551  000001                     __pbssCOMRAM:
   552                           	opt stack 0
   553  000001                     _data_speed_rx:
   554                           	opt stack 0
   555  000001                     	ds	7
   556  000008                     LCD_write_integer@F17272:
   557                           	opt stack 0
   558  000008                     	ds	6
   559  00000E                     _actual_speed_kmh:
   560                           	opt stack 0
   561  00000E                     	ds	4
   562  000012                     _id:
   563                           	opt stack 0
   564  000012                     	ds	4
   565  000016                     _pr_time_4:
   566                           	opt stack 0
   567  000016                     	ds	4
   568  00001A                     _time_counter:
   569                           	opt stack 0
   570  00001A                     	ds	4
   571  00001E                     _left_speed:
   572                           	opt stack 0
   573  00001E                     	ds	2
   574  000020                     _right_speed:
   575                           	opt stack 0
   576  000020                     	ds	2
   577  000022                     _battery:
   578                           	opt stack 0
   579  000022                     	ds	1
   580  000023                     _set_steering:
   581                           	opt stack 0
   582  000023                     	ds	1
   583  000024                     _data:
   584                           	opt stack 0
   585  000024                     	ds	1
   586                           tblptru	equ	0xFF8
   587                           tblptrh	equ	0xFF7
   588                           tblptrl	equ	0xFF6
   589                           tablat	equ	0xFF5
   590                           postinc0	equ	0xFEE
   591                           wreg	equ	0xFE8
   592                           
   593                           	psect	bssBANK0
   594  0000CA                     __pbssBANK0:
   595                           	opt stack 0
   596  0000CA                     _JoystickConstants:
   597                           	opt stack 0
   598  0000CA                     	ds	8
   599  0000D2                     _pr_time_1:
   600                           	opt stack 0
   601  0000D2                     	ds	4
   602  0000D6                     _pr_time_2:
   603                           	opt stack 0
   604  0000D6                     	ds	4
   605  0000DA                     _pr_time_3:
   606                           	opt stack 0
   607  0000DA                     	ds	4
   608  0000DE                     _JoystickValues:
   609                           	opt stack 0
   610  0000DE                     	ds	2
   611  0000E0                     _actual_speed:
   612                           	opt stack 0
   613  0000E0                     	ds	2
   614  0000E2                     _clock_counter_reference:
   615                           	opt stack 0
   616  0000E2                     	ds	2
   617  0000E4                     _set_speed:
   618                           	opt stack 0
   619  0000E4                     	ds	2
   620  0000E6                     _dir:
   621                           	opt stack 0
   622  0000E6                     	ds	1
   623  0000E7                     _switch_position:
   624                           	opt stack 0
   625  0000E7                     	ds	1
   626  0000E8                     _data_brake:
   627                           	opt stack 0
   628  0000E8                     	ds	1
   629  0000E9                     _data_speed:
   630                           	opt stack 0
   631  0000E9                     	ds	1
   632  0000EA                     _data_steering:
   633                           	opt stack 0
   634  0000EA                     	ds	1
   635                           tblptru	equ	0xFF8
   636                           tblptrh	equ	0xFF7
   637                           tblptrl	equ	0xFF6
   638                           tablat	equ	0xFF5
   639                           postinc0	equ	0xFEE
   640                           wreg	equ	0xFE8
   641                           
   642                           	psect	dataBANK0
   643  0000EB                     __pdataBANK0:
   644                           	opt stack 0
   645  0000EB                     _delay_quartz_frequency_value:
   646                           	opt stack 0
   647  0000EB                     	ds	1
   648                           tblptru	equ	0xFF8
   649                           tblptrh	equ	0xFF7
   650                           tblptrl	equ	0xFF6
   651                           tablat	equ	0xFF5
   652                           postinc0	equ	0xFEE
   653                           wreg	equ	0xFE8
   654                           
   655                           	psect	bssBANK1
   656  000121                     __pbssBANK1:
   657                           	opt stack 0
   658  000121                     _msg:
   659                           	opt stack 0
   660  000121                     	ds	15
   661  000130                     _str:
   662                           	opt stack 0
   663  000130                     	ds	12
   664                           tblptru	equ	0xFF8
   665                           tblptrh	equ	0xFF7
   666                           tblptrl	equ	0xFF6
   667                           tablat	equ	0xFF5
   668                           postinc0	equ	0xFEE
   669                           wreg	equ	0xFE8
   670                           
   671                           	psect	cstackBANK1
   672  000100                     __pcstackBANK1:
   673                           	opt stack 0
   674  000100                     _sprintf$4196:
   675                           	opt stack 0
   676                           
   677                           ; 4 bytes @ 0x0
   678  000100                     	ds	4
   679  000104                     sprintf@ap:
   680                           	opt stack 0
   681                           
   682                           ; 2 bytes @ 0x4
   683  000104                     	ds	2
   684  000106                     sprintf@flag:
   685                           	opt stack 0
   686                           
   687                           ; 2 bytes @ 0x6
   688  000106                     	ds	2
   689  000108                     sprintf@val:
   690                           	opt stack 0
   691                           
   692                           ; 4 bytes @ 0x8
   693  000108                     	ds	4
   694  00010C                     sprintf@exp:
   695                           	opt stack 0
   696                           
   697                           ; 2 bytes @ 0xC
   698  00010C                     	ds	2
   699  00010E                     sprintf@tmpval:
   700                           	opt stack 0
   701                           
   702                           ; 4 bytes @ 0xE
   703  00010E                     	ds	4
   704  000112                     sprintf@prec:
   705                           	opt stack 0
   706                           
   707                           ; 2 bytes @ 0x12
   708  000112                     	ds	2
   709  000114                     sprintf@fval:
   710                           	opt stack 0
   711                           
   712                           ; 4 bytes @ 0x14
   713  000114                     	ds	4
   714  000118                     sprintf@c:
   715                           	opt stack 0
   716                           
   717                           ; 1 bytes @ 0x18
   718  000118                     	ds	1
   719  000119                     ??_main:
   720                           
   721                           ; 0 bytes @ 0x19
   722  000119                     	ds	8
   723                           tblptru	equ	0xFF8
   724                           tblptrh	equ	0xFF7
   725                           tblptrl	equ	0xFF6
   726                           tablat	equ	0xFF5
   727                           postinc0	equ	0xFEE
   728                           wreg	equ	0xFE8
   729                           
   730                           	psect	cstackBANK0
   731  000060                     __pcstackBANK0:
   732                           	opt stack 0
   733  000060                     ??_ISR_alta:
   734                           
   735                           ; 0 bytes @ 0x0
   736  000060                     	ds	14
   737  00006E                     ??_Joystick_Polling:
   738  00006E                     ??_CAN_interpreter:
   739  00006E                     ??_isdigit:
   740  00006E                     ?___wmul:
   741                           	opt stack 0
   742  00006E                     ?___awmod:
   743                           	opt stack 0
   744  00006E                     ?___lwdiv:
   745                           	opt stack 0
   746  00006E                     ?___lwmod:
   747                           	opt stack 0
   748  00006E                     ?__tdiv_to_l_:
   749                           	opt stack 0
   750  00006E                     ?__div_to_l_:
   751                           	opt stack 0
   752  00006E                     ?___lldiv:
   753                           	opt stack 0
   754  00006E                     ?___llmod:
   755                           	opt stack 0
   756  00006E                     ?___xxtofl:
   757                           	opt stack 0
   758  00006E                     CANOperationMode@mode:
   759                           	opt stack 0
   760  00006E                     _CANisTxReady$3227:
   761                           	opt stack 0
   762  00006E                     delay_set_quartz@frequency:
   763                           	opt stack 0
   764  00006E                     ___wmul@multiplier:
   765                           	opt stack 0
   766  00006E                     ___awmod@dividend:
   767                           	opt stack 0
   768  00006E                     ___lwdiv@dividend:
   769                           	opt stack 0
   770  00006E                     ___lwmod@dividend:
   771                           	opt stack 0
   772  00006E                     CANsendMessage@identifier:
   773                           	opt stack 0
   774  00006E                     CANSetMask@mask:
   775                           	opt stack 0
   776  00006E                     CANSetFilter@filter:
   777                           	opt stack 0
   778  00006E                     __div_to_l_@f1:
   779                           	opt stack 0
   780  00006E                     ___flge@ff1:
   781                           	opt stack 0
   782  00006E                     __tdiv_to_l_@f1:
   783                           	opt stack 0
   784  00006E                     ___lldiv@dividend:
   785                           	opt stack 0
   786  00006E                     ___llmod@dividend:
   787                           	opt stack 0
   788  00006E                     ___xxtofl@val:
   789                           	opt stack 0
   790                           
   791                           ; 4 bytes @ 0xE
   792  00006E                     	ds	1
   793  00006F                     Joystick_Polling@i:
   794                           	opt stack 0
   795  00006F                     _isdigit$3775:
   796                           	opt stack 0
   797                           
   798                           ; 1 bytes @ 0xF
   799  00006F                     	ds	1
   800  000070                     isdigit@c:
   801                           	opt stack 0
   802  000070                     ___wmul@multiplicand:
   803                           	opt stack 0
   804  000070                     ___awmod@divisor:
   805                           	opt stack 0
   806  000070                     ___lwdiv@divisor:
   807                           	opt stack 0
   808  000070                     ___lwmod@divisor:
   809                           	opt stack 0
   810                           
   811                           ; 2 bytes @ 0x10
   812  000070                     	ds	2
   813  000072                     ??___xxtofl:
   814  000072                     CANSetMask@type:
   815                           	opt stack 0
   816  000072                     CANSetFilter@type:
   817                           	opt stack 0
   818  000072                     ___awmod@counter:
   819                           	opt stack 0
   820  000072                     ___lwmod@counter:
   821                           	opt stack 0
   822  000072                     CANsendMessage@data:
   823                           	opt stack 0
   824  000072                     ___wmul@product:
   825                           	opt stack 0
   826  000072                     ___lwdiv@quotient:
   827                           	opt stack 0
   828  000072                     __div_to_l_@f2:
   829                           	opt stack 0
   830  000072                     ___flge@ff2:
   831                           	opt stack 0
   832  000072                     __tdiv_to_l_@f2:
   833                           	opt stack 0
   834  000072                     ___lldiv@divisor:
   835                           	opt stack 0
   836  000072                     ___llmod@divisor:
   837                           	opt stack 0
   838                           
   839                           ; 4 bytes @ 0x12
   840  000072                     	ds	1
   841  000073                     ??_CANSetMask:
   842  000073                     ??_CANSetFilter:
   843  000073                     ___awmod@sign:
   844                           	opt stack 0
   845                           
   846                           ; 1 bytes @ 0x13
   847  000073                     	ds	1
   848  000074                     ?___awdiv:
   849                           	opt stack 0
   850  000074                     CANsendMessage@dataLength:
   851                           	opt stack 0
   852  000074                     ___lwdiv@counter:
   853                           	opt stack 0
   854  000074                     delay_ms@value_ms:
   855                           	opt stack 0
   856  000074                     ___awdiv@dividend:
   857                           	opt stack 0
   858                           
   859                           ; 2 bytes @ 0x14
   860  000074                     	ds	1
   861  000075                     CANsendMessage@flags:
   862                           	opt stack 0
   863  000075                     utoa@buf:
   864                           	opt stack 0
   865                           
   866                           ; 2 bytes @ 0x15
   867  000075                     	ds	1
   868  000076                     ??__tdiv_to_l_:
   869  000076                     ??_CANsendMessage:
   870  000076                     ??___flge:
   871  000076                     LCD_send_command@D2:
   872                           	opt stack 0
   873  000076                     ___llmod@counter:
   874                           	opt stack 0
   875  000076                     ___xxtofl@sign:
   876                           	opt stack 0
   877  000076                     ___awdiv@divisor:
   878                           	opt stack 0
   879  000076                     __div_to_l_@quot:
   880                           	opt stack 0
   881  000076                     ___lldiv@quotient:
   882                           	opt stack 0
   883                           
   884                           ; 4 bytes @ 0x16
   885  000076                     	ds	1
   886  000077                     CANSetMask@numBuffer:
   887                           	opt stack 0
   888  000077                     CANSetFilter@numBuffer:
   889                           	opt stack 0
   890  000077                     LCD_send_command@D1:
   891                           	opt stack 0
   892  000077                     ___xxtofl@exp:
   893                           	opt stack 0
   894  000077                     utoa@val:
   895                           	opt stack 0
   896                           
   897                           ; 2 bytes @ 0x17
   898  000077                     	ds	1
   899  000078                     LCD_send_command@D0:
   900                           	opt stack 0
   901  000078                     ___awdiv@counter:
   902                           	opt stack 0
   903  000078                     CANSetMask@tamp:
   904                           	opt stack 0
   905  000078                     CANSetFilter@tamp:
   906                           	opt stack 0
   907  000078                     ___xxtofl@arg:
   908                           	opt stack 0
   909                           
   910                           ; 4 bytes @ 0x18
   911  000078                     	ds	1
   912  000079                     LCD_send_command@D3:
   913                           	opt stack 0
   914  000079                     ___awdiv@sign:
   915                           	opt stack 0
   916  000079                     utoa@base:
   917                           	opt stack 0
   918  000079                     __tdiv_to_l_@quot:
   919                           	opt stack 0
   920                           
   921                           ; 4 bytes @ 0x19
   922  000079                     	ds	1
   923  00007A                     LCD_goto_line@line:
   924                           	opt stack 0
   925  00007A                     LCD_write_char@D3:
   926                           	opt stack 0
   927  00007A                     LCD_cursor@blinking:
   928                           	opt stack 0
   929  00007A                     __div_to_l_@cntr:
   930                           	opt stack 0
   931  00007A                     ___lldiv@counter:
   932                           	opt stack 0
   933  00007A                     ___awdiv@quotient:
   934                           	opt stack 0
   935  00007A                     CANsendMessage@tamp:
   936                           	opt stack 0
   937                           
   938                           ; 4 bytes @ 0x1A
   939  00007A                     	ds	1
   940  00007B                     LCD_write_char@D2:
   941                           	opt stack 0
   942  00007B                     LCD_cursor@active:
   943                           	opt stack 0
   944  00007B                     __div_to_l_@exp1:
   945                           	opt stack 0
   946  00007B                     utoa@v:
   947                           	opt stack 0
   948                           
   949                           ; 2 bytes @ 0x1B
   950  00007B                     	ds	1
   951  00007C                     ?___fldiv:
   952                           	opt stack 0
   953  00007C                     ?___flmul:
   954                           	opt stack 0
   955  00007C                     CANInitialize@phaseSeg1:
   956                           	opt stack 0
   957  00007C                     LCD_write_char@D1:
   958                           	opt stack 0
   959  00007C                     LCD_initialize@quartz_frequency:
   960                           	opt stack 0
   961  00007C                     ___fldiv@b:
   962                           	opt stack 0
   963  00007C                     ___flmul@b:
   964                           	opt stack 0
   965                           
   966                           ; 4 bytes @ 0x1C
   967  00007C                     	ds	1
   968  00007D                     CANInitialize@phaseSeg2:
   969                           	opt stack 0
   970  00007D                     LCD_write_char@D0:
   971                           	opt stack 0
   972  00007D                     __tdiv_to_l_@cntr:
   973                           	opt stack 0
   974  00007D                     utoa@c:
   975                           	opt stack 0
   976                           
   977                           ; 1 bytes @ 0x1D
   978  00007D                     	ds	1
   979  00007E                     CANInitialize@SJW:
   980                           	opt stack 0
   981  00007E                     LCD_write_char@value:
   982                           	opt stack 0
   983  00007E                     __tdiv_to_l_@exp1:
   984                           	opt stack 0
   985  00007E                     itoa@buf:
   986                           	opt stack 0
   987                           
   988                           ; 2 bytes @ 0x1E
   989  00007E                     	ds	1
   990  00007F                     CANInitialize@BRP:
   991                           	opt stack 0
   992  00007F                     LCD_write_message@buffer:
   993                           	opt stack 0
   994  00007F                     LCD_write_string@buffer:
   995                           	opt stack 0
   996                           
   997                           ; 2 bytes @ 0x1F
   998  00007F                     	ds	1
   999  000080                     CANInitialize@flags:
  1000                           	opt stack 0
  1001  000080                     itoa@val:
  1002                           	opt stack 0
  1003  000080                     ___fldiv@a:
  1004                           	opt stack 0
  1005  000080                     ___flmul@a:
  1006                           	opt stack 0
  1007                           
  1008                           ; 4 bytes @ 0x20
  1009  000080                     	ds	1
  1010  000081                     ??_CANInitialize:
  1011  000081                     
  1012                           ; 0 bytes @ 0x21
  1013  000081                     	ds	1
  1014  000082                     itoa@base:
  1015                           	opt stack 0
  1016                           
  1017                           ; 2 bytes @ 0x22
  1018  000082                     	ds	2
  1019  000084                     ??___fldiv:
  1020  000084                     ??___flmul:
  1021  000084                     itoa@cp:
  1022                           	opt stack 0
  1023                           
  1024                           ; 2 bytes @ 0x24
  1025  000084                     	ds	1
  1026  000085                     CANInitialize@propSeg:
  1027                           	opt stack 0
  1028                           
  1029                           ; 1 bytes @ 0x25
  1030  000085                     	ds	1
  1031  000086                     CANInitialize@FilterConfig1:
  1032                           	opt stack 0
  1033  000086                     LCD_write_integer@value:
  1034                           	opt stack 0
  1035                           
  1036                           ; 2 bytes @ 0x26
  1037  000086                     	ds	1
  1038  000087                     CANInitialize@FilterConfig2:
  1039                           	opt stack 0
  1040                           
  1041                           ; 1 bytes @ 0x27
  1042  000087                     	ds	1
  1043  000088                     LCD_write_integer@number_of_digits:
  1044                           	opt stack 0
  1045  000088                     ___fldiv@sign:
  1046                           	opt stack 0
  1047  000088                     ___flmul@sign:
  1048                           	opt stack 0
  1049                           
  1050                           ; 1 bytes @ 0x28
  1051  000088                     	ds	1
  1052  000089                     LCD_write_integer@zero_cleaning:
  1053                           	opt stack 0
  1054  000089                     ___flmul@aexp:
  1055                           	opt stack 0
  1056  000089                     ___fldiv@rem:
  1057                           	opt stack 0
  1058                           
  1059                           ; 4 bytes @ 0x29
  1060  000089                     	ds	1
  1061  00008A                     ??_LCD_write_integer:
  1062  00008A                     ___flmul@grs:
  1063                           	opt stack 0
  1064                           
  1065                           ; 4 bytes @ 0x2A
  1066  00008A                     	ds	3
  1067  00008D                     ___fldiv@new_exp:
  1068                           	opt stack 0
  1069                           
  1070                           ; 2 bytes @ 0x2D
  1071  00008D                     	ds	1
  1072  00008E                     ___flmul@bexp:
  1073                           	opt stack 0
  1074                           
  1075                           ; 1 bytes @ 0x2E
  1076  00008E                     	ds	1
  1077  00008F                     ___fldiv@grs:
  1078                           	opt stack 0
  1079  00008F                     ___flmul@prod:
  1080                           	opt stack 0
  1081  00008F                     LCD_write_integer@convertedInt:
  1082                           	opt stack 0
  1083                           
  1084                           ; 6 bytes @ 0x2F
  1085  00008F                     	ds	4
  1086  000093                     ___fldiv@bexp:
  1087                           	opt stack 0
  1088  000093                     ___flmul@temp:
  1089                           	opt stack 0
  1090                           
  1091                           ; 2 bytes @ 0x33
  1092  000093                     	ds	1
  1093  000094                     ___fldiv@aexp:
  1094                           	opt stack 0
  1095                           
  1096                           ; 1 bytes @ 0x34
  1097  000094                     	ds	1
  1098  000095                     ?_fround:
  1099                           	opt stack 0
  1100  000095                     ?_scale:
  1101                           	opt stack 0
  1102  000095                     ?___flneg:
  1103                           	opt stack 0
  1104  000095                     LCD_write_integer@index:
  1105                           	opt stack 0
  1106  000095                     ___flneg@f1:
  1107                           	opt stack 0
  1108                           
  1109                           ; 4 bytes @ 0x35
  1110  000095                     	ds	4
  1111  000099                     _fround$4194:
  1112                           	opt stack 0
  1113  000099                     _scale$4195:
  1114                           	opt stack 0
  1115                           
  1116                           ; 4 bytes @ 0x39
  1117  000099                     	ds	4
  1118  00009D                     scale@scl:
  1119                           	opt stack 0
  1120  00009D                     _fround$4193:
  1121                           	opt stack 0
  1122                           
  1123                           ; 4 bytes @ 0x3D
  1124  00009D                     	ds	4
  1125  0000A1                     fround@prec:
  1126                           	opt stack 0
  1127                           
  1128                           ; 1 bytes @ 0x41
  1129  0000A1                     	ds	1
  1130  0000A2                     ?___fladd:
  1131                           	opt stack 0
  1132  0000A2                     ___fladd@b:
  1133                           	opt stack 0
  1134                           
  1135                           ; 4 bytes @ 0x42
  1136  0000A2                     	ds	4
  1137  0000A6                     ___fladd@a:
  1138                           	opt stack 0
  1139                           
  1140                           ; 4 bytes @ 0x46
  1141  0000A6                     	ds	4
  1142  0000AA                     ??___fladd:
  1143                           
  1144                           ; 0 bytes @ 0x4A
  1145  0000AA                     	ds	8
  1146  0000B2                     ___fladd@signs:
  1147                           	opt stack 0
  1148                           
  1149                           ; 1 bytes @ 0x52
  1150  0000B2                     	ds	1
  1151  0000B3                     ___fladd@aexp:
  1152                           	opt stack 0
  1153                           
  1154                           ; 1 bytes @ 0x53
  1155  0000B3                     	ds	1
  1156  0000B4                     ___fladd@bexp:
  1157                           	opt stack 0
  1158                           
  1159                           ; 1 bytes @ 0x54
  1160  0000B4                     	ds	1
  1161  0000B5                     ___fladd@grs:
  1162                           	opt stack 0
  1163                           
  1164                           ; 1 bytes @ 0x55
  1165  0000B5                     	ds	1
  1166  0000B6                     ?___flsub:
  1167                           	opt stack 0
  1168  0000B6                     ?___fltol:
  1169                           	opt stack 0
  1170  0000B6                     ___fltol@f1:
  1171                           	opt stack 0
  1172  0000B6                     ___flsub@b:
  1173                           	opt stack 0
  1174                           
  1175                           ; 4 bytes @ 0x56
  1176  0000B6                     	ds	4
  1177  0000BA                     ??___fltol:
  1178  0000BA                     ___flsub@a:
  1179                           	opt stack 0
  1180                           
  1181                           ; 4 bytes @ 0x5A
  1182  0000BA                     	ds	4
  1183  0000BE                     ___fltol@sign1:
  1184                           	opt stack 0
  1185                           
  1186                           ; 1 bytes @ 0x5E
  1187  0000BE                     	ds	1
  1188  0000BF                     ___fltol@exp1:
  1189                           	opt stack 0
  1190                           
  1191                           ; 1 bytes @ 0x5F
  1192  0000BF                     	ds	1
  1193  0000C0                     ?_sprintf:
  1194                           	opt stack 0
  1195  0000C0                     sprintf@sp:
  1196                           	opt stack 0
  1197                           
  1198                           ; 2 bytes @ 0x60
  1199  0000C0                     	ds	2
  1200  0000C2                     sprintf@f:
  1201                           	opt stack 0
  1202                           
  1203                           ; 2 bytes @ 0x62
  1204  0000C2                     	ds	6
  1205  0000C8                     ??_sprintf:
  1206                           
  1207                           ; 0 bytes @ 0x68
  1208  0000C8                     	ds	2
  1209  0000CA                     tblptru	equ	0xFF8
  1210                           tblptrh	equ	0xFF7
  1211                           tblptrl	equ	0xFF6
  1212                           tablat	equ	0xFF5
  1213                           postinc0	equ	0xFEE
  1214                           wreg	equ	0xFE8
  1215                           
  1216                           ; 0 bytes @ 0x6A
  1217                           
  1218                           	psect	cstackCOMRAM
  1219  000025                     __pcstackCOMRAM:
  1220                           	opt stack 0
  1221  000025                     ??_ISR_bassa:
  1222  000025                     
  1223                           ; 1 bytes @ 0x0
  1224  000025                     	ds	17
  1225  000036                     _CANisRxReady$3229:
  1226                           	opt stack 0
  1227  000036                     i2_CANisTxReady$3227:
  1228                           	opt stack 0
  1229  000036                     CANreceiveMessage@msg:
  1230                           	opt stack 0
  1231  000036                     i2CANsendMessage@identifier:
  1232                           	opt stack 0
  1233                           
  1234                           ; 4 bytes @ 0x11
  1235  000036                     	ds	2
  1236  000038                     ??_CANreceiveMessage:
  1237                           
  1238                           ; 0 bytes @ 0x13
  1239  000038                     	ds	2
  1240  00003A                     i2CANsendMessage@data:
  1241                           	opt stack 0
  1242                           
  1243                           ; 2 bytes @ 0x15
  1244  00003A                     	ds	2
  1245  00003C                     i2CANsendMessage@dataLength:
  1246                           	opt stack 0
  1247                           
  1248                           ; 1 bytes @ 0x17
  1249  00003C                     	ds	1
  1250  00003D                     i2CANsendMessage@flags:
  1251                           	opt stack 0
  1252                           
  1253                           ; 1 bytes @ 0x18
  1254  00003D                     	ds	1
  1255  00003E                     ??i2_CANsendMessage:
  1256                           
  1257                           ; 0 bytes @ 0x19
  1258  00003E                     	ds	2
  1259  000040                     CANreceiveMessage@error:
  1260                           	opt stack 0
  1261                           
  1262                           ; 1 bytes @ 0x1B
  1263  000040                     	ds	1
  1264  000041                     CANreceiveMessage@tamp:
  1265                           	opt stack 0
  1266                           
  1267                           ; 1 bytes @ 0x1C
  1268  000041                     	ds	1
  1269  000042                     i2CANsendMessage@tamp:
  1270                           	opt stack 0
  1271                           
  1272                           ; 4 bytes @ 0x1D
  1273  000042                     	ds	4
  1274  000046                     ISR_alta@i:
  1275                           	opt stack 0
  1276                           
  1277                           ; 1 bytes @ 0x21
  1278  000046                     	ds	1
  1279                           tblptru	equ	0xFF8
  1280                           tblptrh	equ	0xFF7
  1281                           tblptrl	equ	0xFF6
  1282                           tablat	equ	0xFF5
  1283                           postinc0	equ	0xFEE
  1284                           wreg	equ	0xFE8
  1285                           
  1286 ;;
  1287 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1288 ;;
  1289 ;; *************** function _main *****************
  1290 ;; Defined at:
  1291 ;;		line 114 in file "RemoteCan.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;		None
  1294 ;; Auto vars:     Size  Location     Type
  1295 ;;		None
  1296 ;; Return value:  Size  Location     Type
  1297 ;;		None               void
  1298 ;; Registers used:
  1299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1300 ;; Tracked objects:
  1301 ;;		On entry : 0/0
  1302 ;;		On exit  : 0/0
  1303 ;;		Unchanged: 0/0
  1304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1307 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1308 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1309 ;;Total ram usage:        8 bytes
  1310 ;; Hardware stack levels required when called:   11
  1311 ;; This function calls:
  1312 ;;		_CAN_Send
  1313 ;;		_CAN_interpreter
  1314 ;;		_Joystick_Polling
  1315 ;;		_LCD_Handler
  1316 ;;		_LCD_goto_line
  1317 ;;		_LCD_initialize
  1318 ;;		_LCD_write_message
  1319 ;;		_PWR_Button_Polling
  1320 ;;		___fladd
  1321 ;;		___flmul
  1322 ;;		___flneg
  1323 ;;		___fltol
  1324 ;;		___xxtofl
  1325 ;;		_board_initialization
  1326 ;;		_delay_ms
  1327 ;; This function is called by:
  1328 ;;		Startup code after reset
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text0
  1333  01352A                     __ptext0:
  1334                           	opt stack 0
  1335  01352A                     _main:
  1336                           	opt stack 20
  1337                           
  1338                           ;RemoteCan.c: 115: board_initialization();
  1339                           
  1340                           ;incstack = 0
  1341  01352A  EC04  F0AA         	call	_board_initialization	;wreg free
  1342                           
  1343                           ;RemoteCan.c: 117: LATDbits.LD6 = 1;
  1344  01352E  8C8C               	bsf	3980,6,c	;volatile
  1345                           
  1346                           ;RemoteCan.c: 118: LATDbits.LD5 = 1;
  1347  013530  8A8C               	bsf	3980,5,c	;volatile
  1348                           
  1349                           ;RemoteCan.c: 119: delay_ms(500);
  1350  013532  0E01               	movlw	1
  1351  013534  0100               	movlb	0	; () banked
  1352  013536  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1353  013538  0EF4               	movlw	244
  1354  01353A  6F74               	movwf	delay_ms@value_ms& (0+255),b
  1355  01353C  EC39  F0AE         	call	_delay_ms	;wreg free
  1356                           
  1357                           ;RemoteCan.c: 120: LATDbits.LD6 = 0;
  1358  013540  9C8C               	bcf	3980,6,c	;volatile
  1359                           
  1360                           ;RemoteCan.c: 121: LATDbits.LD5 = 0;
  1361  013542  9A8C               	bcf	3980,5,c	;volatile
  1362                           
  1363                           ;RemoteCan.c: 123: JoystickConstants[0] = 0.703;
  1364  013544  0ECF               	movlw	207
  1365  013546  0100               	movlb	0	; () banked
  1366  013548  6FCA               	movwf	_JoystickConstants& (0+255),b	;volatile
  1367  01354A  0EF7               	movlw	247
  1368  01354C  6FCB               	movwf	(_JoystickConstants+1)& (0+255),b	;volatile
  1369  01354E  0E33               	movlw	51
  1370  013550  6FCC               	movwf	(_JoystickConstants+2)& (0+255),b	;volatile
  1371  013552  0E3F               	movlw	63
  1372  013554  6FCD               	movwf	(_JoystickConstants+3)& (0+255),b	;volatile
  1373                           
  1374                           ; BSR set to: 0
  1375                           ;RemoteCan.c: 124: JoystickConstants[1] = 5;
  1376  013556  0E00               	movlw	0
  1377  013558  0100               	movlb	0	; () banked
  1378  01355A  6FCE               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  1379  01355C  0E00               	movlw	0
  1380  01355E  6FCF               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  1381  013560  0EA0               	movlw	160
  1382  013562  6FD0               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  1383  013564  0E40               	movlw	64
  1384  013566  6FD1               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  1385  013568                     l8611:
  1386                           
  1387                           ;RemoteCan.c: 127: PWR_Button_Polling();
  1388  013568  EC33  F0AF         	call	_PWR_Button_Polling	;wreg free
  1389                           
  1390                           ;RemoteCan.c: 128: if (power_switch == 0) {
  1391  01356C  BA47               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1392  01356E  D09A               	goto	l8649
  1393                           
  1394                           ;RemoteCan.c: 129: dir = 1;
  1395  013570  0E01               	movlw	1
  1396  013572  0100               	movlb	0	; () banked
  1397  013574  6FE6               	movwf	_dir& (0+255),b	;volatile
  1398                           
  1399                           ;RemoteCan.c: 130: set_speed = 0;
  1400  013576  0E00               	movlw	0
  1401  013578  0100               	movlb	0	; () banked
  1402  01357A  6FE5               	movwf	(_set_speed+1)& (0+255),b	;volatile
  1403  01357C  0E00               	movlw	0
  1404  01357E  6FE4               	movwf	_set_speed& (0+255),b	;volatile
  1405                           
  1406                           ;RemoteCan.c: 131: data_steering [0] = 90;
  1407  013580  0E5A               	movlw	90
  1408  013582  0100               	movlb	0	; () banked
  1409  013584  6FEA               	movwf	_data_steering& (0+255),b
  1410                           
  1411                           ;RemoteCan.c: 132: data_brake [0] = 0;
  1412  013586  0E00               	movlw	0
  1413  013588  0100               	movlb	0	; () banked
  1414  01358A  6FE8               	movwf	_data_brake& (0+255),b
  1415                           
  1416                           ;RemoteCan.c: 133: data_brake [1] = 1;
  1417  01358C  0E01               	movlw	1
  1418  01358E  0100               	movlb	0	; () banked
  1419  013590  6FE9               	movwf	(_data_brake+1)& (0+255),b
  1420                           
  1421                           ; BSR set to: 0
  1422                           ;RemoteCan.c: 134: CAN_Send();
  1423  013592  EC81  F0AB         	call	_CAN_Send	;wreg free
  1424                           
  1425                           ;RemoteCan.c: 135: LCD_initialize(16);
  1426  013596  0E10               	movlw	16
  1427  013598  ECA8  F0A7         	call	_LCD_initialize
  1428                           
  1429                           ;RemoteCan.c: 136: LCD_goto_line(1);
  1430  01359C  0E01               	movlw	1
  1431  01359E  EC8E  F0A9         	call	_LCD_goto_line
  1432                           
  1433                           ;RemoteCan.c: 137: LCD_write_message("====================");
  1434  0135A2  0EB9               	movlw	low STR_1
  1435  0135A4  0100               	movlb	0	; () banked
  1436  0135A6  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  1437  0135A8  0EFF               	movlw	high STR_1
  1438  0135AA  0100               	movlb	0	; () banked
  1439  0135AC  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1440  0135AE  EC8D  F0AE         	call	_LCD_write_message	;wreg free
  1441                           
  1442                           ;RemoteCan.c: 138: LCD_goto_line(2);
  1443  0135B2  0E02               	movlw	2
  1444  0135B4  EC8E  F0A9         	call	_LCD_goto_line
  1445                           
  1446                           ;RemoteCan.c: 139: LCD_write_message("==> VEHICLE  OFF <==");
  1447  0135B8  0EA4               	movlw	low STR_2
  1448  0135BA  0100               	movlb	0	; () banked
  1449  0135BC  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  1450  0135BE  0EFF               	movlw	high STR_2
  1451  0135C0  0100               	movlb	0	; () banked
  1452  0135C2  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1453  0135C4  EC8D  F0AE         	call	_LCD_write_message	;wreg free
  1454                           
  1455                           ;RemoteCan.c: 140: LCD_goto_line(3);
  1456  0135C8  0E03               	movlw	3
  1457  0135CA  EC8E  F0A9         	call	_LCD_goto_line
  1458                           
  1459                           ;RemoteCan.c: 141: LCD_write_message("Turn the switch ON! ");
  1460  0135CE  0E8F               	movlw	low STR_3
  1461  0135D0  0100               	movlb	0	; () banked
  1462  0135D2  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  1463  0135D4  0EFF               	movlw	high STR_3
  1464  0135D6  0100               	movlb	0	; () banked
  1465  0135D8  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1466  0135DA  EC8D  F0AE         	call	_LCD_write_message	;wreg free
  1467                           
  1468                           ;RemoteCan.c: 142: LCD_goto_line(4);
  1469  0135DE  0E04               	movlw	4
  1470  0135E0  EC8E  F0A9         	call	_LCD_goto_line
  1471                           
  1472                           ;RemoteCan.c: 143: LCD_write_message("====================");
  1473  0135E4  0EB9               	movlw	low STR_1
  1474  0135E6  0100               	movlb	0	; () banked
  1475  0135E8  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  1476  0135EA  0EFF               	movlw	high STR_1
  1477  0135EC  0100               	movlb	0	; () banked
  1478  0135EE  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1479  0135F0  EC8D  F0AE         	call	_LCD_write_message	;wreg free
  1480                           
  1481                           ;RemoteCan.c: 144: while (power_switch == 0) {
  1482  0135F4  D054               	goto	l8647
  1483  0135F6                     l8637:
  1484                           
  1485                           ;RemoteCan.c: 145: if ((time_counter - pr_time_1) >= 30) {
  1486  0135F6  C0D2  F119         	movff	_pr_time_1,??_main	;volatile
  1487  0135FA  C0D3  F11A         	movff	_pr_time_1+1,??_main+1	;volatile
  1488  0135FE  C0D4  F11B         	movff	_pr_time_1+2,??_main+2	;volatile
  1489  013602  C0D5  F11C         	movff	_pr_time_1+3,??_main+3	;volatile
  1490  013606  0101               	movlb	1	; () banked
  1491  013608  1F19               	comf	??_main& (0+255),f,b
  1492  01360A  1F1A               	comf	(??_main+1)& (0+255),f,b
  1493  01360C  1F1B               	comf	(??_main+2)& (0+255),f,b
  1494  01360E  1F1C               	comf	(??_main+3)& (0+255),f,b
  1495  013610  2B19               	incf	??_main& (0+255),f,b
  1496  013612  0E00               	movlw	0
  1497  013614  231A               	addwfc	(??_main+1)& (0+255),f,b
  1498  013616  231B               	addwfc	(??_main+2)& (0+255),f,b
  1499  013618  231C               	addwfc	(??_main+3)& (0+255),f,b
  1500  01361A  501A               	movf	_time_counter,w,c	;volatile
  1501  01361C  0101               	movlb	1	; () banked
  1502  01361E  2519               	addwf	??_main& (0+255),w,b
  1503  013620  0101               	movlb	1	; () banked
  1504  013622  6F1D               	movwf	(??_main+4)& (0+255),b
  1505  013624  501B               	movf	_time_counter+1,w,c	;volatile
  1506  013626  0101               	movlb	1	; () banked
  1507  013628  211A               	addwfc	(??_main+1)& (0+255),w,b
  1508  01362A  0101               	movlb	1	; () banked
  1509  01362C  6F1E               	movwf	(??_main+5)& (0+255),b
  1510  01362E  501C               	movf	_time_counter+2,w,c	;volatile
  1511  013630  0101               	movlb	1	; () banked
  1512  013632  211B               	addwfc	(??_main+2)& (0+255),w,b
  1513  013634  0101               	movlb	1	; () banked
  1514  013636  6F1F               	movwf	(??_main+6)& (0+255),b
  1515  013638  501D               	movf	_time_counter+3,w,c	;volatile
  1516  01363A  0101               	movlb	1	; () banked
  1517  01363C  211C               	addwfc	(??_main+3)& (0+255),w,b
  1518  01363E  0101               	movlb	1	; () banked
  1519  013640  6F20               	movwf	(??_main+7)& (0+255),b
  1520  013642  0101               	movlb	1	; () banked
  1521  013644  5120               	movf	(??_main+7)& (0+255),w,b
  1522  013646  0101               	movlb	1	; () banked
  1523  013648  111F               	iorwf	(??_main+6)& (0+255),w,b
  1524  01364A  0101               	movlb	1	; () banked
  1525  01364C  111E               	iorwf	(??_main+5)& (0+255),w,b
  1526  01364E  E105               	bnz	u11130
  1527  013650  0E1E               	movlw	30
  1528  013652  0101               	movlb	1	; () banked
  1529  013654  5D1D               	subwf	(??_main+4)& (0+255),w,b
  1530  013656  A0D8               	btfss	status,0,c
  1531  013658  D019               	goto	l8643
  1532  01365A                     u11130:
  1533                           
  1534                           ; BSR set to: 1
  1535                           ;RemoteCan.c: 146: pr_time_1 = time_counter;
  1536  01365A  C01A  F0D2         	movff	_time_counter,_pr_time_1	;volatile
  1537  01365E  C01B  F0D3         	movff	_time_counter+1,_pr_time_1+1	;volatile
  1538  013662  C01C  F0D4         	movff	_time_counter+2,_pr_time_1+2	;volatile
  1539  013666  C01D  F0D5         	movff	_time_counter+3,_pr_time_1+3	;volatile
  1540                           
  1541                           ; BSR set to: 1
  1542                           ;RemoteCan.c: 147: PORTDbits.RD7 = ~PORTDbits.RD7;
  1543  01366A  AE83               	btfss	3971,7,c	;volatile
  1544  01366C  D002               	goto	u11140
  1545  01366E  0E01               	movlw	1
  1546  013670  D001               	goto	u11146
  1547  013672                     u11140:
  1548  013672  0E00               	movlw	0
  1549  013674                     u11146:
  1550  013674  0AFF               	xorlw	255
  1551  013676  0101               	movlb	1	; () banked
  1552  013678  6F19               	movwf	??_main& (0+255),b
  1553  01367A  0101               	movlb	1	; () banked
  1554  01367C  3319               	rrcf	??_main& (0+255),f,b
  1555  01367E  3319               	rrcf	??_main& (0+255),f,b
  1556  013680  5083               	movf	3971,w,c	;volatile
  1557  013682  0101               	movlb	1	; () banked
  1558  013684  1919               	xorwf	??_main& (0+255),w,b
  1559  013686  0B7F               	andlw	-129
  1560  013688  1919               	xorwf	??_main& (0+255),w,b
  1561  01368A  6E83               	movwf	3971,c	;volatile
  1562  01368C                     l8643:
  1563                           
  1564                           ; BSR set to: 1
  1565                           ;RemoteCan.c: 148: }
  1566                           ;RemoteCan.c: 149: PWR_Button_Polling();
  1567  01368C  EC33  F0AF         	call	_PWR_Button_Polling	;wreg free
  1568                           
  1569                           ;RemoteCan.c: 150: delay_ms(10);
  1570  013690  0E00               	movlw	0
  1571  013692  0100               	movlb	0	; () banked
  1572  013694  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1573  013696  0E0A               	movlw	10
  1574  013698  6F74               	movwf	delay_ms@value_ms& (0+255),b
  1575  01369A  EC39  F0AE         	call	_delay_ms	;wreg free
  1576  01369E                     l8647:
  1577  01369E  AA47               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1578  0136A0  D7AA               	goto	l8637
  1579                           
  1580                           ;RemoteCan.c: 151: }
  1581                           ;RemoteCan.c: 152: PORTDbits.RD7 = 0;
  1582  0136A2  9E83               	bcf	3971,7,c	;volatile
  1583  0136A4                     l8649:
  1584                           
  1585                           ;RemoteCan.c: 153: }
  1586                           ;RemoteCan.c: 155: Joystick_Polling();
  1587  0136A4  EC89  F0AD         	call	_Joystick_Polling	;wreg free
  1588                           
  1589                           ;RemoteCan.c: 158: if (PORTAbits.RA2 == 1) {
  1590  0136A8  A480               	btfss	3968,2,c	;volatile
  1591  0136AA  D004               	goto	l752
  1592                           
  1593                           ;RemoteCan.c: 159: switch_position = 0;
  1594  0136AC  0E00               	movlw	0
  1595  0136AE  0100               	movlb	0	; () banked
  1596  0136B0  6FE7               	movwf	_switch_position& (0+255),b	;volatile
  1597                           
  1598                           ;RemoteCan.c: 160: } else {
  1599  0136B2  D00D               	goto	l8659
  1600  0136B4                     l752:
  1601                           
  1602                           ;RemoteCan.c: 161: if (PORTAbits.RA3 == 0) {
  1603  0136B4  B680               	btfsc	3968,3,c	;volatile
  1604  0136B6  D005               	goto	l8657
  1605                           
  1606                           ;RemoteCan.c: 162: switch_position = 1;
  1607  0136B8  0E01               	movlw	1
  1608  0136BA  0100               	movlb	0	; () banked
  1609  0136BC  6FE7               	movwf	_switch_position& (0+255),b	;volatile
  1610                           
  1611                           ;RemoteCan.c: 163: dir = 1;
  1612  0136BE  0E01               	movlw	1
  1613  0136C0  D004               	goto	L1
  1614  0136C2                     l8657:
  1615                           
  1616                           ;RemoteCan.c: 165: switch_position = 2;
  1617  0136C2  0E02               	movlw	2
  1618  0136C4  0100               	movlb	0	; () banked
  1619  0136C6  6FE7               	movwf	_switch_position& (0+255),b	;volatile
  1620                           
  1621                           ;RemoteCan.c: 166: dir = 0;
  1622  0136C8  0E00               	movlw	0
  1623  0136CA                     L1:
  1624  0136CA  0100               	movlb	0	; () banked
  1625  0136CC  6FE6               	movwf	_dir& (0+255),b	;volatile
  1626  0136CE                     l8659:
  1627                           
  1628                           ; BSR set to: 0
  1629                           ;RemoteCan.c: 167: }
  1630                           ;RemoteCan.c: 168: }
  1631                           ;RemoteCan.c: 170: data_steering [0] = 180 - (JoystickValues[0])*(JoystickConstants[0]);
  1632  0136CE  0E00               	movlw	0
  1633  0136D0  0100               	movlb	0	; () banked
  1634  0136D2  6FA6               	movwf	___fladd@a& (0+255),b
  1635  0136D4  0E00               	movlw	0
  1636  0136D6  6FA7               	movwf	(___fladd@a+1)& (0+255),b
  1637  0136D8  0E34               	movlw	52
  1638  0136DA  6FA8               	movwf	(___fladd@a+2)& (0+255),b
  1639  0136DC  0E43               	movlw	67
  1640  0136DE  6FA9               	movwf	(___fladd@a+3)& (0+255),b
  1641  0136E0  C0CA  F080         	movff	_JoystickConstants,___flmul@a	;volatile
  1642  0136E4  C0CB  F081         	movff	_JoystickConstants+1,___flmul@a+1	;volatile
  1643  0136E8  C0CC  F082         	movff	_JoystickConstants+2,___flmul@a+2	;volatile
  1644  0136EC  C0CD  F083         	movff	_JoystickConstants+3,___flmul@a+3	;volatile
  1645  0136F0  0100               	movlb	0	; () banked
  1646  0136F2  51DE               	movf	_JoystickValues& (0+255),w,b	;volatile
  1647  0136F4  0100               	movlb	0	; () banked
  1648  0136F6  6F6E               	movwf	___xxtofl@val& (0+255),b
  1649  0136F8  6B6F               	clrf	(___xxtofl@val+1)& (0+255),b
  1650  0136FA  6B70               	clrf	(___xxtofl@val+2)& (0+255),b
  1651  0136FC  6B71               	clrf	(___xxtofl@val+3)& (0+255),b
  1652  0136FE  0E00               	movlw	0
  1653  013700  ECE2  F0A1         	call	___xxtofl
  1654  013704  C06E  F07C         	movff	?___xxtofl,___flmul@b
  1655  013708  C06F  F07D         	movff	?___xxtofl+1,___flmul@b+1
  1656  01370C  C070  F07E         	movff	?___xxtofl+2,___flmul@b+2
  1657  013710  C071  F07F         	movff	?___xxtofl+3,___flmul@b+3
  1658  013714  EC42  F098         	call	___flmul	;wreg free
  1659  013718  C07C  F095         	movff	?___flmul,___flneg@f1
  1660  01371C  C07D  F096         	movff	?___flmul+1,___flneg@f1+1
  1661  013720  C07E  F097         	movff	?___flmul+2,___flneg@f1+2
  1662  013724  C07F  F098         	movff	?___flmul+3,___flneg@f1+3
  1663  013728  EC56  F0AE         	call	___flneg	;wreg free
  1664  01372C  C095  F0A2         	movff	?___flneg,___fladd@b
  1665  013730  C096  F0A3         	movff	?___flneg+1,___fladd@b+1
  1666  013734  C097  F0A4         	movff	?___flneg+2,___fladd@b+2
  1667  013738  C098  F0A5         	movff	?___flneg+3,___fladd@b+3
  1668  01373C  ECEE  F095         	call	___fladd	;wreg free
  1669  013740  C0A2  F0B6         	movff	?___fladd,___fltol@f1
  1670  013744  C0A3  F0B7         	movff	?___fladd+1,___fltol@f1+1
  1671  013748  C0A4  F0B8         	movff	?___fladd+2,___fltol@f1+2
  1672  01374C  C0A5  F0B9         	movff	?___fladd+3,___fltol@f1+3
  1673  013750  EC08  F0A9         	call	___fltol	;wreg free
  1674  013754  0100               	movlb	0	; () banked
  1675  013756  51B6               	movf	?___fltol& (0+255),w,b
  1676  013758  0100               	movlb	0	; () banked
  1677  01375A  6FEA               	movwf	_data_steering& (0+255),b
  1678                           
  1679                           ; BSR set to: 0
  1680                           ;RemoteCan.c: 171: if (switch_position != 0) {
  1681  01375C  0100               	movlb	0	; () banked
  1682  01375E  51E7               	movf	_switch_position& (0+255),w,b	;volatile
  1683  013760  B4D8               	btfsc	status,2,c
  1684  013762  D088               	goto	l8673
  1685                           
  1686                           ; BSR set to: 0
  1687                           ;RemoteCan.c: 172: if (JoystickValues[1] > 132) {
  1688  013764  0E84               	movlw	132
  1689  013766  0100               	movlb	0	; () banked
  1690  013768  65DF               	cpfsgt	(_JoystickValues+1)& (0+255),b	;volatile
  1691  01376A  D042               	goto	l8669
  1692                           
  1693                           ; BSR set to: 0
  1694                           ;RemoteCan.c: 173: set_speed = (JoystickValues[1] - 130)*(JoystickConstants[1]);
  1695  01376C  C0CE  F080         	movff	_JoystickConstants+4,___flmul@a	;volatile
  1696  013770  C0CF  F081         	movff	_JoystickConstants+5,___flmul@a+1	;volatile
  1697  013774  C0D0  F082         	movff	_JoystickConstants+6,___flmul@a+2	;volatile
  1698  013778  C0D1  F083         	movff	_JoystickConstants+7,___flmul@a+3	;volatile
  1699  01377C  0E7E               	movlw	126
  1700  01377E  0101               	movlb	1	; () banked
  1701  013780  6F19               	movwf	??_main& (0+255),b
  1702  013782  0EFF               	movlw	255
  1703  013784  0101               	movlb	1	; () banked
  1704  013786  6F1A               	movwf	(??_main+1)& (0+255),b
  1705  013788  0100               	movlb	0	; () banked
  1706  01378A  51DF               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  1707  01378C  0101               	movlb	1	; () banked
  1708  01378E  6F1B               	movwf	(??_main+2)& (0+255),b
  1709  013790  6B1C               	clrf	(??_main+3)& (0+255),b
  1710  013792  0101               	movlb	1	; () banked
  1711  013794  5119               	movf	??_main& (0+255),w,b
  1712  013796  0101               	movlb	1	; () banked
  1713  013798  271B               	addwf	(??_main+2)& (0+255),f,b
  1714  01379A  0101               	movlb	1	; () banked
  1715  01379C  511A               	movf	(??_main+1)& (0+255),w,b
  1716  01379E  0101               	movlb	1	; () banked
  1717  0137A0  231C               	addwfc	(??_main+3)& (0+255),f,b
  1718  0137A2  C11B  F06E         	movff	??_main+2,___xxtofl@val
  1719  0137A6  C11C  F06F         	movff	??_main+3,___xxtofl@val+1
  1720  0137AA  0100               	movlb	0	; () banked
  1721  0137AC  0E00               	movlw	0
  1722  0137AE  BF6F               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1723  0137B0  0EFF               	movlw	-1
  1724  0137B2  6F70               	movwf	(___xxtofl@val+2)& (0+255),b
  1725  0137B4  6F71               	movwf	(___xxtofl@val+3)& (0+255),b
  1726  0137B6  0E01               	movlw	1
  1727  0137B8  ECE2  F0A1         	call	___xxtofl
  1728  0137BC  C06E  F07C         	movff	?___xxtofl,___flmul@b
  1729  0137C0  C06F  F07D         	movff	?___xxtofl+1,___flmul@b+1
  1730  0137C4  C070  F07E         	movff	?___xxtofl+2,___flmul@b+2
  1731  0137C8  C071  F07F         	movff	?___xxtofl+3,___flmul@b+3
  1732  0137CC  EC42  F098         	call	___flmul	;wreg free
  1733  0137D0  C07C  F0B6         	movff	?___flmul,___fltol@f1
  1734  0137D4  C07D  F0B7         	movff	?___flmul+1,___fltol@f1+1
  1735  0137D8  C07E  F0B8         	movff	?___flmul+2,___fltol@f1+2
  1736  0137DC  C07F  F0B9         	movff	?___flmul+3,___fltol@f1+3
  1737  0137E0  EC08  F0A9         	call	___fltol	;wreg free
  1738  0137E4  C0B6  F0E4         	movff	?___fltol,_set_speed	;volatile
  1739  0137E8  C0B7  F0E5         	movff	?___fltol+1,_set_speed+1	;volatile
  1740                           
  1741                           ;RemoteCan.c: 174: data_brake [0] = 0;
  1742  0137EC  0E00               	movlw	0
  1743  0137EE  D040               	goto	L2
  1744  0137F0                     l8669:
  1745                           
  1746                           ; BSR set to: 0
  1747                           ;RemoteCan.c: 176: set_speed = 0;
  1748  0137F0  0E00               	movlw	0
  1749  0137F2  0100               	movlb	0	; () banked
  1750  0137F4  6FE5               	movwf	(_set_speed+1)& (0+255),b	;volatile
  1751  0137F6  0E00               	movlw	0
  1752  0137F8  6FE4               	movwf	_set_speed& (0+255),b	;volatile
  1753                           
  1754                           ; BSR set to: 0
  1755                           ;RemoteCan.c: 177: data_brake [0] = ((130 - JoystickValues[1]))*(1.9);
  1756  0137FA  0E33               	movlw	51
  1757  0137FC  0100               	movlb	0	; () banked
  1758  0137FE  6F80               	movwf	___flmul@a& (0+255),b
  1759  013800  0E33               	movlw	51
  1760  013802  6F81               	movwf	(___flmul@a+1)& (0+255),b
  1761  013804  0EF3               	movlw	243
  1762  013806  6F82               	movwf	(___flmul@a+2)& (0+255),b
  1763  013808  0E3F               	movlw	63
  1764  01380A  6F83               	movwf	(___flmul@a+3)& (0+255),b
  1765  01380C  0100               	movlb	0	; () banked
  1766  01380E  51DF               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  1767  013810  0101               	movlb	1	; () banked
  1768  013812  6F19               	movwf	??_main& (0+255),b
  1769  013814  6B1A               	clrf	(??_main+1)& (0+255),b
  1770  013816  0101               	movlb	1	; () banked
  1771  013818  1F19               	comf	??_main& (0+255),f,b
  1772  01381A  1F1A               	comf	(??_main+1)& (0+255),f,b
  1773  01381C  4B19               	infsnz	??_main& (0+255),f,b
  1774  01381E  2B1A               	incf	(??_main+1)& (0+255),f,b
  1775  013820  0E82               	movlw	130
  1776  013822  0101               	movlb	1	; () banked
  1777  013824  2719               	addwf	??_main& (0+255),f,b
  1778  013826  0E00               	movlw	0
  1779  013828  231A               	addwfc	(??_main+1)& (0+255),f,b
  1780  01382A  C119  F06E         	movff	??_main,___xxtofl@val
  1781  01382E  C11A  F06F         	movff	??_main+1,___xxtofl@val+1
  1782  013832  0100               	movlb	0	; () banked
  1783  013834  0E00               	movlw	0
  1784  013836  BF6F               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1785  013838  0EFF               	movlw	-1
  1786  01383A  6F70               	movwf	(___xxtofl@val+2)& (0+255),b
  1787  01383C  6F71               	movwf	(___xxtofl@val+3)& (0+255),b
  1788  01383E  0E01               	movlw	1
  1789  013840  ECE2  F0A1         	call	___xxtofl
  1790  013844  C06E  F07C         	movff	?___xxtofl,___flmul@b
  1791  013848  C06F  F07D         	movff	?___xxtofl+1,___flmul@b+1
  1792  01384C  C070  F07E         	movff	?___xxtofl+2,___flmul@b+2
  1793  013850  C071  F07F         	movff	?___xxtofl+3,___flmul@b+3
  1794  013854  EC42  F098         	call	___flmul	;wreg free
  1795  013858  C07C  F0B6         	movff	?___flmul,___fltol@f1
  1796  01385C  C07D  F0B7         	movff	?___flmul+1,___fltol@f1+1
  1797  013860  C07E  F0B8         	movff	?___flmul+2,___fltol@f1+2
  1798  013864  C07F  F0B9         	movff	?___flmul+3,___fltol@f1+3
  1799  013868  EC08  F0A9         	call	___fltol	;wreg free
  1800  01386C  0100               	movlb	0	; () banked
  1801  01386E  51B6               	movf	?___fltol& (0+255),w,b
  1802  013870                     L2:
  1803  013870  0100               	movlb	0	; () banked
  1804  013872  6FE8               	movwf	_data_brake& (0+255),b
  1805  013874                     l8673:
  1806                           
  1807                           ; BSR set to: 0
  1808                           ;RemoteCan.c: 178: }
  1809                           ;RemoteCan.c: 179: }
  1810                           ;RemoteCan.c: 181: if (newMessageCan == 1) {
  1811  013874  A847               	btfss	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  1812  013876  D003               	goto	l8679
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;RemoteCan.c: 182: CAN_interpreter();
  1816  013878  ECDE  F0AB         	call	_CAN_interpreter	;wreg free
  1817                           
  1818                           ;RemoteCan.c: 183: newMessageCan = 0;
  1819  01387C  9847               	bcf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  1820  01387E                     l8679:
  1821                           
  1822                           ;RemoteCan.c: 184: }
  1823                           ;RemoteCan.c: 186: if ((time_counter - pr_time_2) >= 2) {
  1824  01387E  C0D6  F119         	movff	_pr_time_2,??_main	;volatile
  1825  013882  C0D7  F11A         	movff	_pr_time_2+1,??_main+1	;volatile
  1826  013886  C0D8  F11B         	movff	_pr_time_2+2,??_main+2	;volatile
  1827  01388A  C0D9  F11C         	movff	_pr_time_2+3,??_main+3	;volatile
  1828  01388E  0101               	movlb	1	; () banked
  1829  013890  1F19               	comf	??_main& (0+255),f,b
  1830  013892  1F1A               	comf	(??_main+1)& (0+255),f,b
  1831  013894  1F1B               	comf	(??_main+2)& (0+255),f,b
  1832  013896  1F1C               	comf	(??_main+3)& (0+255),f,b
  1833  013898  2B19               	incf	??_main& (0+255),f,b
  1834  01389A  0E00               	movlw	0
  1835  01389C  231A               	addwfc	(??_main+1)& (0+255),f,b
  1836  01389E  231B               	addwfc	(??_main+2)& (0+255),f,b
  1837  0138A0  231C               	addwfc	(??_main+3)& (0+255),f,b
  1838  0138A2  501A               	movf	_time_counter,w,c	;volatile
  1839  0138A4  0101               	movlb	1	; () banked
  1840  0138A6  2519               	addwf	??_main& (0+255),w,b
  1841  0138A8  0101               	movlb	1	; () banked
  1842  0138AA  6F1D               	movwf	(??_main+4)& (0+255),b
  1843  0138AC  501B               	movf	_time_counter+1,w,c	;volatile
  1844  0138AE  0101               	movlb	1	; () banked
  1845  0138B0  211A               	addwfc	(??_main+1)& (0+255),w,b
  1846  0138B2  0101               	movlb	1	; () banked
  1847  0138B4  6F1E               	movwf	(??_main+5)& (0+255),b
  1848  0138B6  501C               	movf	_time_counter+2,w,c	;volatile
  1849  0138B8  0101               	movlb	1	; () banked
  1850  0138BA  211B               	addwfc	(??_main+2)& (0+255),w,b
  1851  0138BC  0101               	movlb	1	; () banked
  1852  0138BE  6F1F               	movwf	(??_main+6)& (0+255),b
  1853  0138C0  501D               	movf	_time_counter+3,w,c	;volatile
  1854  0138C2  0101               	movlb	1	; () banked
  1855  0138C4  211C               	addwfc	(??_main+3)& (0+255),w,b
  1856  0138C6  0101               	movlb	1	; () banked
  1857  0138C8  6F20               	movwf	(??_main+7)& (0+255),b
  1858  0138CA  0101               	movlb	1	; () banked
  1859  0138CC  5120               	movf	(??_main+7)& (0+255),w,b
  1860  0138CE  0101               	movlb	1	; () banked
  1861  0138D0  111F               	iorwf	(??_main+6)& (0+255),w,b
  1862  0138D2  0101               	movlb	1	; () banked
  1863  0138D4  111E               	iorwf	(??_main+5)& (0+255),w,b
  1864  0138D6  E105               	bnz	u11210
  1865  0138D8  0E02               	movlw	2
  1866  0138DA  0101               	movlb	1	; () banked
  1867  0138DC  5D1D               	subwf	(??_main+4)& (0+255),w,b
  1868  0138DE  A0D8               	btfss	status,0,c
  1869  0138E0  D00A               	goto	l8685
  1870  0138E2                     u11210:
  1871                           
  1872                           ; BSR set to: 1
  1873                           ;RemoteCan.c: 187: pr_time_2 = time_counter;
  1874  0138E2  C01A  F0D6         	movff	_time_counter,_pr_time_2	;volatile
  1875  0138E6  C01B  F0D7         	movff	_time_counter+1,_pr_time_2+1	;volatile
  1876  0138EA  C01C  F0D8         	movff	_time_counter+2,_pr_time_2+2	;volatile
  1877  0138EE  C01D  F0D9         	movff	_time_counter+3,_pr_time_2+3	;volatile
  1878                           
  1879                           ; BSR set to: 1
  1880                           ;RemoteCan.c: 188: CAN_Send();
  1881  0138F2  EC81  F0AB         	call	_CAN_Send	;wreg free
  1882  0138F6                     l8685:
  1883                           
  1884                           ;RemoteCan.c: 189: }
  1885                           ;RemoteCan.c: 191: if ((time_counter - pr_time_3) >= 100) {
  1886  0138F6  C0DA  F119         	movff	_pr_time_3,??_main	;volatile
  1887  0138FA  C0DB  F11A         	movff	_pr_time_3+1,??_main+1	;volatile
  1888  0138FE  C0DC  F11B         	movff	_pr_time_3+2,??_main+2	;volatile
  1889  013902  C0DD  F11C         	movff	_pr_time_3+3,??_main+3	;volatile
  1890  013906  0101               	movlb	1	; () banked
  1891  013908  1F19               	comf	??_main& (0+255),f,b
  1892  01390A  1F1A               	comf	(??_main+1)& (0+255),f,b
  1893  01390C  1F1B               	comf	(??_main+2)& (0+255),f,b
  1894  01390E  1F1C               	comf	(??_main+3)& (0+255),f,b
  1895  013910  2B19               	incf	??_main& (0+255),f,b
  1896  013912  0E00               	movlw	0
  1897  013914  231A               	addwfc	(??_main+1)& (0+255),f,b
  1898  013916  231B               	addwfc	(??_main+2)& (0+255),f,b
  1899  013918  231C               	addwfc	(??_main+3)& (0+255),f,b
  1900  01391A  501A               	movf	_time_counter,w,c	;volatile
  1901  01391C  0101               	movlb	1	; () banked
  1902  01391E  2519               	addwf	??_main& (0+255),w,b
  1903  013920  0101               	movlb	1	; () banked
  1904  013922  6F1D               	movwf	(??_main+4)& (0+255),b
  1905  013924  501B               	movf	_time_counter+1,w,c	;volatile
  1906  013926  0101               	movlb	1	; () banked
  1907  013928  211A               	addwfc	(??_main+1)& (0+255),w,b
  1908  01392A  0101               	movlb	1	; () banked
  1909  01392C  6F1E               	movwf	(??_main+5)& (0+255),b
  1910  01392E  501C               	movf	_time_counter+2,w,c	;volatile
  1911  013930  0101               	movlb	1	; () banked
  1912  013932  211B               	addwfc	(??_main+2)& (0+255),w,b
  1913  013934  0101               	movlb	1	; () banked
  1914  013936  6F1F               	movwf	(??_main+6)& (0+255),b
  1915  013938  501D               	movf	_time_counter+3,w,c	;volatile
  1916  01393A  0101               	movlb	1	; () banked
  1917  01393C  211C               	addwfc	(??_main+3)& (0+255),w,b
  1918  01393E  0101               	movlb	1	; () banked
  1919  013940  6F20               	movwf	(??_main+7)& (0+255),b
  1920  013942  0101               	movlb	1	; () banked
  1921  013944  5120               	movf	(??_main+7)& (0+255),w,b
  1922  013946  0101               	movlb	1	; () banked
  1923  013948  111F               	iorwf	(??_main+6)& (0+255),w,b
  1924  01394A  0101               	movlb	1	; () banked
  1925  01394C  111E               	iorwf	(??_main+5)& (0+255),w,b
  1926  01394E  E105               	bnz	u11220
  1927  013950  0E64               	movlw	100
  1928  013952  0101               	movlb	1	; () banked
  1929  013954  5D1D               	subwf	(??_main+4)& (0+255),w,b
  1930  013956  A0D8               	btfss	status,0,c
  1931  013958  D607               	goto	l8611
  1932  01395A                     u11220:
  1933                           
  1934                           ; BSR set to: 1
  1935                           ;RemoteCan.c: 192: pr_time_3 = time_counter;
  1936  01395A  C01A  F0DA         	movff	_time_counter,_pr_time_3	;volatile
  1937  01395E  C01B  F0DB         	movff	_time_counter+1,_pr_time_3+1	;volatile
  1938  013962  C01C  F0DC         	movff	_time_counter+2,_pr_time_3+2	;volatile
  1939  013966  C01D  F0DD         	movff	_time_counter+3,_pr_time_3+3	;volatile
  1940                           
  1941                           ; BSR set to: 1
  1942                           ;RemoteCan.c: 193: LCD_Handler();
  1943  01396A  ECE7  F0A6         	call	_LCD_Handler	;wreg free
  1944  01396E  D5FC               	goto	l8611
  1945  013970                     __end_of_main:
  1946                           	opt stack 0
  1947                           tblptru	equ	0xFF8
  1948                           tblptrh	equ	0xFF7
  1949                           tblptrl	equ	0xFF6
  1950                           tablat	equ	0xFF5
  1951                           postinc0	equ	0xFEE
  1952                           wreg	equ	0xFE8
  1953                           status	equ	0xFD8
  1954                           
  1955 ;; *************** function _board_initialization *****************
  1956 ;; Defined at:
  1957 ;;		line 304 in file "RemoteCan.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;		None
  1960 ;; Auto vars:     Size  Location     Type
  1961 ;;		None
  1962 ;; Return value:  Size  Location     Type
  1963 ;;		None               void
  1964 ;; Registers used:
  1965 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1966 ;; Tracked objects:
  1967 ;;		On entry : 0/0
  1968 ;;		On exit  : 0/0
  1969 ;;		Unchanged: 0/0
  1970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1975 ;;Total ram usage:        0 bytes
  1976 ;; Hardware stack levels used:    1
  1977 ;; Hardware stack levels required when called:    9
  1978 ;; This function calls:
  1979 ;;		_CANInitialize
  1980 ;;		_LCD_clear
  1981 ;;		_LCD_goto_line
  1982 ;;		_LCD_initialize
  1983 ;;		_LCD_write_message
  1984 ;;		_delay_ms
  1985 ;; This function is called by:
  1986 ;;		_main
  1987 ;; This function uses a non-reentrant model
  1988 ;;
  1989                           
  1990                           	psect	text1
  1991  015408                     __ptext1:
  1992                           	opt stack 0
  1993  015408                     _board_initialization:
  1994                           	opt stack 21
  1995                           
  1996                           ;RemoteCan.c: 306: LATA = 0x00;
  1997                           
  1998                           ;incstack = 0
  1999  015408  0E00               	movlw	0
  2000  01540A  6E89               	movwf	3977,c	;volatile
  2001                           
  2002                           ;RemoteCan.c: 307: TRISA = 0b00011111;
  2003  01540C  0E1F               	movlw	31
  2004  01540E  6E92               	movwf	3986,c	;volatile
  2005                           
  2006                           ;RemoteCan.c: 308: LATB = 0x00;
  2007  015410  0E00               	movlw	0
  2008  015412  6E8A               	movwf	3978,c	;volatile
  2009                           
  2010                           ;RemoteCan.c: 309: TRISB = 0b11111011;
  2011  015414  0EFB               	movlw	251
  2012  015416  6E93               	movwf	3987,c	;volatile
  2013                           
  2014                           ;RemoteCan.c: 310: LATC = 0x00;
  2015  015418  0E00               	movlw	0
  2016  01541A  6E8B               	movwf	3979,c	;volatile
  2017                           
  2018                           ;RemoteCan.c: 311: TRISC = 0b11110000;
  2019  01541C  0EF0               	movlw	240
  2020  01541E  6E94               	movwf	3988,c	;volatile
  2021                           
  2022                           ;RemoteCan.c: 312: LATD = 0x00;
  2023  015420  0E00               	movlw	0
  2024  015422  6E8C               	movwf	3980,c	;volatile
  2025                           
  2026                           ;RemoteCan.c: 313: TRISD = 0x00;
  2027  015424  0E00               	movlw	0
  2028  015426  6E95               	movwf	3989,c	;volatile
  2029                           
  2030                           ;RemoteCan.c: 314: LATE = 0x00;
  2031  015428  0E00               	movlw	0
  2032  01542A  6E8D               	movwf	3981,c	;volatile
  2033                           
  2034                           ;RemoteCan.c: 315: TRISE = 0x00;
  2035  01542C  0E00               	movlw	0
  2036  01542E  6E96               	movwf	3990,c	;volatile
  2037                           
  2038                           ;RemoteCan.c: 317: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_
      +                          SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  2039  015430  0E06               	movlw	6
  2040  015432  0100               	movlb	0	; () banked
  2041  015434  6F7C               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2042  015436  0E05               	movlw	5
  2043  015438  0100               	movlb	0	; () banked
  2044  01543A  6F7D               	movwf	CANInitialize@phaseSeg2& (0+255),b
  2045  01543C  0E01               	movlw	1
  2046  01543E  0100               	movlb	0	; () banked
  2047  015440  6F7E               	movwf	CANInitialize@SJW& (0+255),b
  2048  015442  0E03               	movlw	3
  2049  015444  0100               	movlb	0	; () banked
  2050  015446  6F7F               	movwf	CANInitialize@BRP& (0+255),b
  2051  015448  0E9D               	movlw	157
  2052  01544A  0100               	movlb	0	; () banked
  2053  01544C  6F80               	movwf	CANInitialize@flags& (0+255),b
  2054  01544E  0E04               	movlw	4
  2055  015450  ECC9  F0A2         	call	_CANInitialize
  2056                           
  2057                           ;RemoteCan.c: 321: PIR2bits.TMR3IF = 0;
  2058  015454  92A1               	bcf	4001,1,c	;volatile
  2059                           
  2060                           ;RemoteCan.c: 322: PIR3bits.RXB1IF = 0;
  2061  015456  92A4               	bcf	4004,1,c	;volatile
  2062                           
  2063                           ;RemoteCan.c: 323: PIR3bits.RXB0IF = 0;
  2064  015458  90A4               	bcf	4004,0,c	;volatile
  2065                           
  2066                           ;RemoteCan.c: 326: RCONbits.IPEN = 1;
  2067  01545A  8ED0               	bsf	4048,7,c	;volatile
  2068                           
  2069                           ;RemoteCan.c: 327: IPR3bits.RXB1IP = 1;
  2070  01545C  82A5               	bsf	4005,1,c	;volatile
  2071                           
  2072                           ;RemoteCan.c: 328: IPR3bits.RXB0IP = 1;
  2073  01545E  80A5               	bsf	4005,0,c	;volatile
  2074                           
  2075                           ;RemoteCan.c: 329: IPR2bits.TMR3IP = 0;
  2076  015460  92A2               	bcf	4002,1,c	;volatile
  2077                           
  2078                           ;RemoteCan.c: 332: ADCON1 = 0b00001101;
  2079  015462  0E0D               	movlw	13
  2080  015464  6EC1               	movwf	4033,c	;volatile
  2081                           
  2082                           ;RemoteCan.c: 333: ADCON0bits.CHS2 = 0;
  2083  015466  98C2               	bcf	4034,4,c	;volatile
  2084                           
  2085                           ;RemoteCan.c: 334: ADCON0bits.CHS1 = 0;
  2086  015468  96C2               	bcf	4034,3,c	;volatile
  2087                           
  2088                           ;RemoteCan.c: 335: ADCON0bits.CHS0 = 0;
  2089  01546A  94C2               	bcf	4034,2,c	;volatile
  2090                           
  2091                           ;RemoteCan.c: 336: ADCON2bits.ACQT2 = 1;
  2092  01546C  8AC0               	bsf	4032,5,c	;volatile
  2093                           
  2094                           ;RemoteCan.c: 337: ADCON2bits.ACQT1 = 1;
  2095  01546E  88C0               	bsf	4032,4,c	;volatile
  2096                           
  2097                           ;RemoteCan.c: 338: ADCON2bits.ACQT0 = 0;
  2098  015470  96C0               	bcf	4032,3,c	;volatile
  2099                           
  2100                           ;RemoteCan.c: 339: ADCON2bits.ADCS2 = 1;
  2101  015472  84C0               	bsf	4032,2,c	;volatile
  2102                           
  2103                           ;RemoteCan.c: 340: ADCON2bits.ADCS1 = 0;
  2104  015474  92C0               	bcf	4032,1,c	;volatile
  2105                           
  2106                           ;RemoteCan.c: 341: ADCON2bits.ADCS0 = 1;
  2107  015476  80C0               	bsf	4032,0,c	;volatile
  2108                           
  2109                           ;RemoteCan.c: 342: ADCON2bits.ADFM = 0;
  2110  015478  9EC0               	bcf	4032,7,c	;volatile
  2111                           
  2112                           ;RemoteCan.c: 343: ADCON0bits.ADON = 1;
  2113  01547A  80C2               	bsf	4034,0,c	;volatile
  2114                           
  2115                           ;RemoteCan.c: 346: LCD_initialize(16);
  2116  01547C  0E10               	movlw	16
  2117  01547E  ECA8  F0A7         	call	_LCD_initialize
  2118                           
  2119                           ;RemoteCan.c: 348: LCD_clear();
  2120  015482  ECC0  F0AE         	call	_LCD_clear	;wreg free
  2121                           
  2122                           ;RemoteCan.c: 349: LCD_goto_line(1);
  2123  015486  0E01               	movlw	1
  2124  015488  EC8E  F0A9         	call	_LCD_goto_line
  2125                           
  2126                           ;RemoteCan.c: 350: LCD_write_message("Wait...");
  2127  01548C  0EE6               	movlw	low STR_12
  2128  01548E  0100               	movlb	0	; () banked
  2129  015490  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  2130  015492  0EFF               	movlw	high STR_12
  2131  015494  0100               	movlb	0	; () banked
  2132  015496  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2133  015498  EC8D  F0AE         	call	_LCD_write_message	;wreg free
  2134                           
  2135                           ;RemoteCan.c: 351: delay_ms(300);
  2136  01549C  0E01               	movlw	1
  2137  01549E  0100               	movlb	0	; () banked
  2138  0154A0  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2139  0154A2  0E2C               	movlw	44
  2140  0154A4  6F74               	movwf	delay_ms@value_ms& (0+255),b
  2141  0154A6  EC39  F0AE         	call	_delay_ms	;wreg free
  2142                           
  2143                           ;RemoteCan.c: 353: PORTDbits.RD2 = 0;
  2144  0154AA  9483               	bcf	3971,2,c	;volatile
  2145                           
  2146                           ;RemoteCan.c: 354: PORTDbits.RD3 = 0;
  2147  0154AC  9683               	bcf	3971,3,c	;volatile
  2148                           
  2149                           ;RemoteCan.c: 357: TMR3H = 0x63;
  2150  0154AE  0E63               	movlw	99
  2151  0154B0  6EB3               	movwf	4019,c	;volatile
  2152                           
  2153                           ;RemoteCan.c: 358: TMR3L = 0xC0;
  2154  0154B2  0EC0               	movlw	192
  2155  0154B4  6EB2               	movwf	4018,c	;volatile
  2156                           
  2157                           ;RemoteCan.c: 361: PIE3bits.RXB1IE = 1;
  2158  0154B6  82A3               	bsf	4003,1,c	;volatile
  2159                           
  2160                           ;RemoteCan.c: 362: PIE3bits.RXB0IE = 1;
  2161  0154B8  80A3               	bsf	4003,0,c	;volatile
  2162                           
  2163                           ;RemoteCan.c: 363: PIE2bits.TMR3IE = 1;
  2164  0154BA  82A0               	bsf	4000,1,c	;volatile
  2165                           
  2166                           ;RemoteCan.c: 366: T3CON = 0x01;
  2167  0154BC  0E01               	movlw	1
  2168  0154BE  6EB1               	movwf	4017,c	;volatile
  2169                           
  2170                           ;RemoteCan.c: 367: LCD_clear();
  2171  0154C0  ECC0  F0AE         	call	_LCD_clear	;wreg free
  2172                           
  2173                           ;RemoteCan.c: 368: INTCONbits.GIEH = 1;
  2174  0154C4  8EF2               	bsf	intcon,7,c	;volatile
  2175                           
  2176                           ;RemoteCan.c: 369: INTCONbits.GIEL = 1;
  2177  0154C6  8CF2               	bsf	intcon,6,c	;volatile
  2178  0154C8  0012               	return		;funcret
  2179  0154CA                     __end_of_board_initialization:
  2180                           	opt stack 0
  2181                           tblptru	equ	0xFF8
  2182                           tblptrh	equ	0xFF7
  2183                           tblptrl	equ	0xFF6
  2184                           tablat	equ	0xFF5
  2185                           intcon	equ	0xFF2
  2186                           postinc0	equ	0xFEE
  2187                           wreg	equ	0xFE8
  2188                           status	equ	0xFD8
  2189                           
  2190 ;; *************** function _CANInitialize *****************
  2191 ;; Defined at:
  2192 ;;		line 218 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;  propSeg         1    wreg     unsigned char 
  2195 ;;  phaseSeg1       1   28[BANK0 ] unsigned char 
  2196 ;;  phaseSeg2       1   29[BANK0 ] unsigned char 
  2197 ;;  SJW             1   30[BANK0 ] unsigned char 
  2198 ;;  BRP             1   31[BANK0 ] unsigned char 
  2199 ;;  flags           1   32[BANK0 ] enum E16887
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;  propSeg         1   37[BANK0 ] unsigned char 
  2202 ;;  FilterConfig    1   39[BANK0 ] unsigned char 
  2203 ;;  FilterConfig    1   38[BANK0 ] unsigned char 
  2204 ;; Return value:  Size  Location     Type
  2205 ;;		None               void
  2206 ;; Registers used:
  2207 ;;		wreg, status,2, status,0, cstack
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2213 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2214 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2215 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2216 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2217 ;;Total ram usage:       12 bytes
  2218 ;; Hardware stack levels used:    1
  2219 ;; Hardware stack levels required when called:    4
  2220 ;; This function calls:
  2221 ;;		_CANOperationMode
  2222 ;;		_CANSetFilter
  2223 ;;		_CANSetMask
  2224 ;; This function is called by:
  2225 ;;		_board_initialization
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           	psect	text2
  2230  014592                     __ptext2:
  2231                           	opt stack 0
  2232  014592                     _CANInitialize:
  2233                           	opt stack 25
  2234                           
  2235                           ;incstack = 0
  2236                           ;CANInitialize@propSeg stored from wreg
  2237  014592  0100               	movlb	0	; () banked
  2238  014594  6F85               	movwf	CANInitialize@propSeg& (0+255),b
  2239                           
  2240                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  2241                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  2242                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  2243  014596  0E80               	movlw	128
  2244  014598  EC41  F0AF         	call	_CANOperationMode
  2245                           
  2246                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  2247  01459C  0E00               	movlw	0
  2248  01459E  6E70               	movwf	3952,c	;volatile
  2249                           
  2250                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  2251  0145A0  0E00               	movlw	0
  2252  0145A2  6E71               	movwf	3953,c	;volatile
  2253                           
  2254                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  2255  0145A4  0E00               	movlw	0
  2256  0145A6  6E72               	movwf	3954,c	;volatile
  2257                           
  2258                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  2259  0145A8  0100               	movlb	0	; () banked
  2260  0145AA  417E               	rrncf	CANInitialize@SJW& (0+255),w,b
  2261  0145AC  42E8               	rrncf	wreg,f,c
  2262  0145AE  0BC0               	andlw	192
  2263  0145B0  0100               	movlb	0	; () banked
  2264  0145B2  6F7E               	movwf	CANInitialize@SJW& (0+255),b
  2265                           
  2266                           ; BSR set to: 0
  2267                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  2268  0145B4  0100               	movlb	0	; () banked
  2269  0145B6  517E               	movf	CANInitialize@SJW& (0+255),w,b
  2270  0145B8  1270               	iorwf	3952,f,c	;volatile
  2271                           
  2272                           ; BSR set to: 0
  2273                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  2274  0145BA  0100               	movlb	0	; () banked
  2275  0145BC  517F               	movf	CANInitialize@BRP& (0+255),w,b
  2276  0145BE  1270               	iorwf	3952,f,c	;volatile
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  2280  0145C0  0100               	movlb	0	; () banked
  2281  0145C2  5185               	movf	CANInitialize@propSeg& (0+255),w,b
  2282  0145C4  1271               	iorwf	3953,f,c	;volatile
  2283                           
  2284                           ; BSR set to: 0
  2285                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  2286  0145C6  0100               	movlb	0	; () banked
  2287  0145C8  397C               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  2288  0145CA  42E8               	rrncf	wreg,f,c
  2289  0145CC  0BF8               	andlw	248
  2290  0145CE  0100               	movlb	0	; () banked
  2291  0145D0  6F7C               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2292                           
  2293                           ; BSR set to: 0
  2294                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  2295  0145D2  0100               	movlb	0	; () banked
  2296  0145D4  517C               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  2297  0145D6  1271               	iorwf	3953,f,c	;volatile
  2298                           
  2299                           ; BSR set to: 0
  2300                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  2301  0145D8  0100               	movlb	0	; () banked
  2302  0145DA  A580               	btfss	CANInitialize@flags& (0+255),2,b
  2303                           
  2304                           ; BSR set to: 0
  2305                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  2306  0145DC  8C71               	bsf	3953,6,c	;volatile
  2307                           
  2308                           ; BSR set to: 0
  2309                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  2310  0145DE  0100               	movlb	0	; () banked
  2311  0145E0  B180               	btfsc	CANInitialize@flags& (0+255),0,b
  2312                           
  2313                           ; BSR set to: 0
  2314                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  2315  0145E2  8E71               	bsf	3953,7,c	;volatile
  2316                           
  2317                           ; BSR set to: 0
  2318                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  2319                           
  2320                           ; BSR set to: 0
  2321  0145E4  0100               	movlb	0	; () banked
  2322  0145E6  517D               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  2323  0145E8  1272               	iorwf	3954,f,c	;volatile
  2324                           
  2325                           ; BSR set to: 0
  2326                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  2327  0145EA  0100               	movlb	0	; () banked
  2328  0145EC  B380               	btfsc	CANInitialize@flags& (0+255),1,b
  2329                           
  2330                           ; BSR set to: 0
  2331                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  2332  0145EE  8C72               	bsf	3954,6,c	;volatile
  2333                           
  2334                           ; BSR set to: 0
  2335                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  2336                           
  2337                           ; BSR set to: 0
  2338  0145F0  0100               	movlb	0	; () banked
  2339  0145F2  5180               	movf	CANInitialize@flags& (0+255),w,b
  2340  0145F4  0B60               	andlw	96
  2341  0145F6  6E60               	movwf	3936,c	;volatile
  2342                           
  2343                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  2344  0145F8  0100               	movlb	0	; () banked
  2345  0145FA  5180               	movf	CANInitialize@flags& (0+255),w,b
  2346  0145FC  0B10               	andlw	16
  2347  0145FE  0AFF               	xorlw	255
  2348  014600  B4D8               	btfsc	status,2,c
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  2352  014602  8460               	bsf	3936,2,c	;volatile
  2353                           
  2354                           ; BSR set to: 0
  2355                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  2356  014604  CF60 FF50          	movff	3936,3920	;volatile
  2357                           
  2358                           ; BSR set to: 0
  2359                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  2360  014608  0E00               	movlw	0
  2361  01460A  0100               	movlb	0	; () banked
  2362  01460C  6F6E               	movwf	CANSetMask@mask& (0+255),b
  2363  01460E  0E00               	movlw	0
  2364  014610  6F6F               	movwf	(CANSetMask@mask+1)& (0+255),b
  2365  014612  0E00               	movlw	0
  2366  014614  6F70               	movwf	(CANSetMask@mask+2)& (0+255),b
  2367  014616  0E00               	movlw	0
  2368  014618  6F71               	movwf	(CANSetMask@mask+3)& (0+255),b
  2369  01461A  0EF7               	movlw	247
  2370  01461C  0100               	movlb	0	; () banked
  2371  01461E  6F72               	movwf	CANSetMask@type& (0+255),b
  2372  014620  0E01               	movlw	1
  2373  014622  EC98  F09E         	call	_CANSetMask
  2374                           
  2375                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  2376  014626  0E00               	movlw	0
  2377  014628  0100               	movlb	0	; () banked
  2378  01462A  6F6E               	movwf	CANSetMask@mask& (0+255),b
  2379  01462C  0E00               	movlw	0
  2380  01462E  6F6F               	movwf	(CANSetMask@mask+1)& (0+255),b
  2381  014630  0E00               	movlw	0
  2382  014632  6F70               	movwf	(CANSetMask@mask+2)& (0+255),b
  2383  014634  0E00               	movlw	0
  2384  014636  6F71               	movwf	(CANSetMask@mask+3)& (0+255),b
  2385  014638  0EF7               	movlw	247
  2386  01463A  0100               	movlb	0	; () banked
  2387  01463C  6F72               	movwf	CANSetMask@type& (0+255),b
  2388  01463E  0E02               	movlw	2
  2389  014640  EC98  F09E         	call	_CANSetMask
  2390                           
  2391                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  2392  014644  D00F               	goto	l5807
  2393  014646                     l5801:
  2394                           
  2395                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  2396  014646  0EF7               	movlw	247
  2397  014648  0100               	movlb	0	; () banked
  2398  01464A  6F86               	movwf	CANInitialize@FilterConfig1& (0+255),b
  2399  01464C  D007               	goto	l5803
  2400  01464E                     l366:
  2401                           
  2402                           ; BSR set to: 0
  2403                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2404  01464E  0100               	movlb	0	; () banked
  2405  014650  6986               	setf	CANInitialize@FilterConfig1& (0+255),b
  2406                           
  2407                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  2408  014652  0100               	movlb	0	; () banked
  2409  014654  6987               	setf	CANInitialize@FilterConfig2& (0+255),b
  2410                           
  2411                           ;inc\CANlib.h: 273: break;
  2412  014656  D028               	goto	l5809
  2413  014658                     l367:
  2414                           
  2415                           ; BSR set to: 0
  2416                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2417  014658  0100               	movlb	0	; () banked
  2418  01465A  6986               	setf	CANInitialize@FilterConfig1& (0+255),b
  2419  01465C                     l5803:
  2420                           
  2421                           ; BSR set to: 0
  2422                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  2423  01465C  0EF7               	movlw	247
  2424  01465E  0100               	movlb	0	; () banked
  2425  014660  6F87               	movwf	CANInitialize@FilterConfig2& (0+255),b
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;inc\CANlib.h: 278: }
  2429                           
  2430                           ;inc\CANlib.h: 277: break;
  2431  014662  D022               	goto	l5809
  2432  014664                     l5807:
  2433  014664  0E9F               	movlw	159
  2434  014666  0100               	movlb	0	; () banked
  2435  014668  6F81               	movwf	??_CANInitialize& (0+255),b
  2436  01466A  0EFF               	movlw	255
  2437  01466C  0100               	movlb	0	; () banked
  2438  01466E  6F82               	movwf	(??_CANInitialize+1)& (0+255),b
  2439  014670  0100               	movlb	0	; () banked
  2440  014672  5180               	movf	CANInitialize@flags& (0+255),w,b
  2441  014674  0B60               	andlw	96
  2442  014676  0100               	movlb	0	; () banked
  2443  014678  6F83               	movwf	(??_CANInitialize+2)& (0+255),b
  2444  01467A  6B84               	clrf	(??_CANInitialize+3)& (0+255),b
  2445  01467C  0100               	movlb	0	; () banked
  2446  01467E  5181               	movf	??_CANInitialize& (0+255),w,b
  2447  014680  0100               	movlb	0	; () banked
  2448  014682  1383               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  2449  014684  0100               	movlb	0	; () banked
  2450  014686  5182               	movf	(??_CANInitialize+1)& (0+255),w,b
  2451  014688  0100               	movlb	0	; () banked
  2452  01468A  1384               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  2453                           
  2454                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2455                           ; Switch size 1, requested type "space"
  2456                           ; Number of cases is 1, Range of values is 0 to 0
  2457                           ; switch strategies available:
  2458                           ; Name         Instructions Cycles
  2459                           ; simple_byte            4     3 (average)
  2460                           ;	Chosen strategy is simple_byte
  2461  01468C  0100               	movlb	0	; () banked
  2462  01468E  5184               	movf	(??_CANInitialize+3)& (0+255),w,b
  2463  014690  0A00               	xorlw	0	; case 0
  2464  014692  A4D8               	btfss	status,2,c
  2465  014694  D7E1               	goto	l367
  2466                           
  2467                           ; BSR set to: 0
  2468                           ; Switch size 1, requested type "space"
  2469                           ; Number of cases is 2, Range of values is 191 to 223
  2470                           ; switch strategies available:
  2471                           ; Name         Instructions Cycles
  2472                           ; simple_byte            7     4 (average)
  2473                           ;	Chosen strategy is simple_byte
  2474  014696  0100               	movlb	0	; () banked
  2475  014698  5183               	movf	(??_CANInitialize+2)& (0+255),w,b
  2476  01469A  0ABF               	xorlw	191	; case 191
  2477  01469C  B4D8               	btfsc	status,2,c
  2478  01469E  D7D7               	goto	l366
  2479  0146A0  0A60               	xorlw	96	; case 223
  2480  0146A2  B4D8               	btfsc	status,2,c
  2481  0146A4  D7D0               	goto	l5801
  2482  0146A6  D7D8               	goto	l367
  2483  0146A8                     l5809:
  2484                           
  2485                           ; BSR set to: 0
  2486                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  2487  0146A8  0E00               	movlw	0
  2488  0146AA  0100               	movlb	0	; () banked
  2489  0146AC  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2490  0146AE  0E00               	movlw	0
  2491  0146B0  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2492  0146B2  0E00               	movlw	0
  2493  0146B4  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2494  0146B6  0E00               	movlw	0
  2495  0146B8  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2496  0146BA  C086  F072         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2497  0146BE  0E00               	movlw	0
  2498  0146C0  EC00  F080         	call	_CANSetFilter
  2499                           
  2500                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  2501  0146C4  0E00               	movlw	0
  2502  0146C6  0100               	movlb	0	; () banked
  2503  0146C8  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2504  0146CA  0E00               	movlw	0
  2505  0146CC  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2506  0146CE  0E00               	movlw	0
  2507  0146D0  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2508  0146D2  0E00               	movlw	0
  2509  0146D4  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2510  0146D6  C086  F072         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2511  0146DA  0E01               	movlw	1
  2512  0146DC  EC00  F080         	call	_CANSetFilter
  2513                           
  2514                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  2515  0146E0  0E00               	movlw	0
  2516  0146E2  0100               	movlb	0	; () banked
  2517  0146E4  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2518  0146E6  0E00               	movlw	0
  2519  0146E8  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2520  0146EA  0E00               	movlw	0
  2521  0146EC  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2522  0146EE  0E00               	movlw	0
  2523  0146F0  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2524  0146F2  C087  F072         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2525  0146F6  0E02               	movlw	2
  2526  0146F8  EC00  F080         	call	_CANSetFilter
  2527                           
  2528                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  2529  0146FC  0E00               	movlw	0
  2530  0146FE  0100               	movlb	0	; () banked
  2531  014700  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2532  014702  0E00               	movlw	0
  2533  014704  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2534  014706  0E00               	movlw	0
  2535  014708  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2536  01470A  0E00               	movlw	0
  2537  01470C  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2538  01470E  C087  F072         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2539  014712  0E03               	movlw	3
  2540  014714  EC00  F080         	call	_CANSetFilter
  2541                           
  2542                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  2543  014718  0E00               	movlw	0
  2544  01471A  0100               	movlb	0	; () banked
  2545  01471C  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2546  01471E  0E00               	movlw	0
  2547  014720  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2548  014722  0E00               	movlw	0
  2549  014724  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2550  014726  0E00               	movlw	0
  2551  014728  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2552  01472A  C087  F072         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2553  01472E  0E04               	movlw	4
  2554  014730  EC00  F080         	call	_CANSetFilter
  2555                           
  2556                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  2557  014734  0E00               	movlw	0
  2558  014736  0100               	movlb	0	; () banked
  2559  014738  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2560  01473A  0E00               	movlw	0
  2561  01473C  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2562  01473E  0E00               	movlw	0
  2563  014740  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2564  014742  0E00               	movlw	0
  2565  014744  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2566  014746  C087  F072         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2567  01474A  0E05               	movlw	5
  2568  01474C  EC00  F080         	call	_CANSetFilter
  2569                           
  2570                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  2571  014750  0E00               	movlw	0
  2572  014752  EC41  F0AF         	call	_CANOperationMode
  2573  014756  0012               	return		;funcret
  2574  014758                     __end_of_CANInitialize:
  2575                           	opt stack 0
  2576                           tblptru	equ	0xFF8
  2577                           tblptrh	equ	0xFF7
  2578                           tblptrl	equ	0xFF6
  2579                           tablat	equ	0xFF5
  2580                           intcon	equ	0xFF2
  2581                           postinc0	equ	0xFEE
  2582                           wreg	equ	0xFE8
  2583                           status	equ	0xFD8
  2584                           
  2585 ;; *************** function _CANSetMask *****************
  2586 ;; Defined at:
  2587 ;;		line 640 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;  numBuffer       1    wreg     enum E16921
  2590 ;;  mask            4   14[BANK0 ] unsigned long 
  2591 ;;  type            1   18[BANK0 ] enum E16887
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;  numBuffer       1   23[BANK0 ] enum E16921
  2594 ;;  tamp            4   24[BANK0 ] unsigned long 
  2595 ;; Return value:  Size  Location     Type
  2596 ;;		None               void
  2597 ;; Registers used:
  2598 ;;		wreg, status,2, status,0
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2604 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2605 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2606 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2607 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2608 ;;Total ram usage:       14 bytes
  2609 ;; Hardware stack levels used:    1
  2610 ;; Hardware stack levels required when called:    3
  2611 ;; This function calls:
  2612 ;;		Nothing
  2613 ;; This function is called by:
  2614 ;;		_CANInitialize
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618                           	psect	text3
  2619  013D30                     __ptext3:
  2620                           	opt stack 0
  2621  013D30                     _CANSetMask:
  2622                           	opt stack 25
  2623                           
  2624                           ;incstack = 0
  2625                           ;CANSetMask@numBuffer stored from wreg
  2626  013D30  0100               	movlb	0	; () banked
  2627  013D32  6F77               	movwf	CANSetMask@numBuffer& (0+255),b
  2628                           
  2629                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  2630  013D34  0100               	movlb	0	; () banked
  2631  013D36  0577               	decf	CANSetMask@numBuffer& (0+255),w,b
  2632  013D38  A4D8               	btfss	status,2,c
  2633  013D3A  D056               	goto	l4997
  2634                           
  2635                           ; BSR set to: 0
  2636  013D3C  0100               	movlb	0	; () banked
  2637  013D3E  2972               	incf	CANSetMask@type& (0+255),w,b
  2638  013D40  A4D8               	btfss	status,2,c
  2639  013D42  D052               	goto	l4997
  2640                           
  2641                           ; BSR set to: 0
  2642                           ;inc\CANlib.h: 644: {
  2643                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  2644  013D44  C06E  F073         	movff	CANSetMask@mask,??_CANSetMask
  2645  013D48  C06F  F074         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2646  013D4C  C070  F075         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2647  013D50  C071  F076         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2648  013D54  0E04               	movlw	4
  2649  013D56  D006               	goto	u5510
  2650  013D58                     u5515:
  2651  013D58  0100               	movlb	0	; () banked
  2652  013D5A  90D8               	bcf	status,0,c
  2653  013D5C  3376               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2654  013D5E  3375               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2655  013D60  3374               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2656  013D62  3373               	rrcf	??_CANSetMask& (0+255),f,b
  2657  013D64                     u5510:
  2658  013D64  2EE8               	decfsz	wreg,f,c
  2659  013D66  D7F8               	goto	u5515
  2660  013D68  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  2661  013D6C  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2662  013D70  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2663  013D74  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2664                           
  2665                           ; BSR set to: 0
  2666                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  2667  013D78  0100               	movlb	0	; () banked
  2668  013D7A  5178               	movf	CANSetMask@tamp& (0+255),w,b
  2669  013D7C  0100               	movlb	0	; () banked
  2670  013D7E  6F78               	movwf	CANSetMask@tamp& (0+255),b
  2671  013D80  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2672  013D82  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2673  013D84  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2674                           
  2675                           ; BSR set to: 0
  2676                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  2677  013D86  C078  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2678                           
  2679                           ; BSR set to: 0
  2680                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  2681  013D8A  0E07               	movlw	7
  2682  013D8C  0100               	movlb	0	; () banked
  2683  013D8E  156E               	andwf	CANSetMask@mask& (0+255),w,b
  2684  013D90  0100               	movlb	0	; () banked
  2685  013D92  6F78               	movwf	CANSetMask@tamp& (0+255),b
  2686  013D94  0E00               	movlw	0
  2687  013D96  0100               	movlb	0	; () banked
  2688  013D98  156F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2689  013D9A  0100               	movlb	0	; () banked
  2690  013D9C  6F79               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2691  013D9E  0E00               	movlw	0
  2692  013DA0  0100               	movlb	0	; () banked
  2693  013DA2  1570               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2694  013DA4  0100               	movlb	0	; () banked
  2695  013DA6  6F7A               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2696  013DA8  0E00               	movlw	0
  2697  013DAA  0100               	movlb	0	; () banked
  2698  013DAC  1571               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2699  013DAE  0100               	movlb	0	; () banked
  2700  013DB0  6F7B               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2701                           
  2702                           ; BSR set to: 0
  2703                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  2704  013DB2  C078  F073         	movff	CANSetMask@tamp,??_CANSetMask
  2705  013DB6  C079  F074         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2706  013DBA  C07A  F075         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2707  013DBE  C07B  F076         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2708  013DC2  0E05               	movlw	5
  2709  013DC4                     u5525:
  2710  013DC4  90D8               	bcf	status,0,c
  2711  013DC6  0100               	movlb	0	; () banked
  2712  013DC8  3773               	rlcf	??_CANSetMask& (0+255),f,b
  2713  013DCA  3774               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2714  013DCC  3775               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2715  013DCE  3776               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2716  013DD0  2EE8               	decfsz	wreg,f,c
  2717  013DD2  D7F8               	goto	u5525
  2718  013DD4  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  2719  013DD8  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2720  013DDC  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2721  013DE0  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2722                           
  2723                           ; BSR set to: 0
  2724                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  2725  013DE4  C078  FF19         	movff	CANSetMask@tamp,3865	;volatile
  2726  013DE8                     l4997:
  2727                           
  2728                           ; BSR set to: 0
  2729                           ;inc\CANlib.h: 652: }
  2730                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  2731  013DE8  0E02               	movlw	2
  2732  013DEA  0100               	movlb	0	; () banked
  2733  013DEC  1977               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2734  013DEE  A4D8               	btfss	status,2,c
  2735  013DF0  D056               	goto	l5013
  2736                           
  2737                           ; BSR set to: 0
  2738  013DF2  0100               	movlb	0	; () banked
  2739  013DF4  2972               	incf	CANSetMask@type& (0+255),w,b
  2740  013DF6  A4D8               	btfss	status,2,c
  2741  013DF8  D052               	goto	l5013
  2742                           
  2743                           ; BSR set to: 0
  2744                           ;inc\CANlib.h: 655: {
  2745                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  2746  013DFA  C06E  F073         	movff	CANSetMask@mask,??_CANSetMask
  2747  013DFE  C06F  F074         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2748  013E02  C070  F075         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2749  013E06  C071  F076         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2750  013E0A  0E04               	movlw	4
  2751  013E0C  D006               	goto	u5550
  2752  013E0E                     u5555:
  2753  013E0E  0100               	movlb	0	; () banked
  2754  013E10  90D8               	bcf	status,0,c
  2755  013E12  3376               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2756  013E14  3375               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2757  013E16  3374               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2758  013E18  3373               	rrcf	??_CANSetMask& (0+255),f,b
  2759  013E1A                     u5550:
  2760  013E1A  2EE8               	decfsz	wreg,f,c
  2761  013E1C  D7F8               	goto	u5555
  2762  013E1E  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  2763  013E22  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2764  013E26  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2765  013E2A  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2766                           
  2767                           ; BSR set to: 0
  2768                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  2769  013E2E  0100               	movlb	0	; () banked
  2770  013E30  5178               	movf	CANSetMask@tamp& (0+255),w,b
  2771  013E32  0100               	movlb	0	; () banked
  2772  013E34  6F78               	movwf	CANSetMask@tamp& (0+255),b
  2773  013E36  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2774  013E38  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2775  013E3A  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2776                           
  2777                           ; BSR set to: 0
  2778                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  2779  013E3C  C078  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  2780                           
  2781                           ; BSR set to: 0
  2782                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  2783  013E40  0E07               	movlw	7
  2784  013E42  0100               	movlb	0	; () banked
  2785  013E44  156E               	andwf	CANSetMask@mask& (0+255),w,b
  2786  013E46  0100               	movlb	0	; () banked
  2787  013E48  6F78               	movwf	CANSetMask@tamp& (0+255),b
  2788  013E4A  0E00               	movlw	0
  2789  013E4C  0100               	movlb	0	; () banked
  2790  013E4E  156F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2791  013E50  0100               	movlb	0	; () banked
  2792  013E52  6F79               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2793  013E54  0E00               	movlw	0
  2794  013E56  0100               	movlb	0	; () banked
  2795  013E58  1570               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2796  013E5A  0100               	movlb	0	; () banked
  2797  013E5C  6F7A               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2798  013E5E  0E00               	movlw	0
  2799  013E60  0100               	movlb	0	; () banked
  2800  013E62  1571               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2801  013E64  0100               	movlb	0	; () banked
  2802  013E66  6F7B               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2803                           
  2804                           ; BSR set to: 0
  2805                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  2806  013E68  C078  F073         	movff	CANSetMask@tamp,??_CANSetMask
  2807  013E6C  C079  F074         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2808  013E70  C07A  F075         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2809  013E74  C07B  F076         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2810  013E78  0E05               	movlw	5
  2811  013E7A                     u5565:
  2812  013E7A  90D8               	bcf	status,0,c
  2813  013E7C  0100               	movlb	0	; () banked
  2814  013E7E  3773               	rlcf	??_CANSetMask& (0+255),f,b
  2815  013E80  3774               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2816  013E82  3775               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2817  013E84  3776               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2818  013E86  2EE8               	decfsz	wreg,f,c
  2819  013E88  D7F8               	goto	u5565
  2820  013E8A  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  2821  013E8E  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2822  013E92  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2823  013E96  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2824                           
  2825                           ; BSR set to: 0
  2826                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  2827  013E9A  C078  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  2828  013E9E                     l5013:
  2829                           
  2830                           ; BSR set to: 0
  2831                           ;inc\CANlib.h: 663: }
  2832                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  2833  013E9E  0100               	movlb	0	; () banked
  2834  013EA0  0577               	decf	CANSetMask@numBuffer& (0+255),w,b
  2835  013EA2  A4D8               	btfss	status,2,c
  2836  013EA4  D087               	goto	l5045
  2837                           
  2838                           ; BSR set to: 0
  2839  013EA6  0EF7               	movlw	247
  2840  013EA8  0100               	movlb	0	; () banked
  2841  013EAA  1972               	xorwf	CANSetMask@type& (0+255),w,b
  2842  013EAC  A4D8               	btfss	status,2,c
  2843  013EAE  D082               	goto	l5045
  2844                           
  2845                           ; BSR set to: 0
  2846                           ;inc\CANlib.h: 666: {
  2847                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  2848  013EB0  0100               	movlb	0	; () banked
  2849  013EB2  516E               	movf	CANSetMask@mask& (0+255),w,b
  2850  013EB4  0100               	movlb	0	; () banked
  2851  013EB6  6F78               	movwf	CANSetMask@tamp& (0+255),b
  2852  013EB8  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2853  013EBA  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2854  013EBC  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2855                           
  2856                           ; BSR set to: 0
  2857                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  2858  013EBE  C078  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  2859                           
  2860                           ; BSR set to: 0
  2861                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  2862  013EC2  0E00               	movlw	0
  2863  013EC4  0100               	movlb	0	; () banked
  2864  013EC6  156E               	andwf	CANSetMask@mask& (0+255),w,b
  2865  013EC8  0100               	movlb	0	; () banked
  2866  013ECA  6F78               	movwf	CANSetMask@tamp& (0+255),b
  2867  013ECC  0EFF               	movlw	255
  2868  013ECE  0100               	movlb	0	; () banked
  2869  013ED0  156F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2870  013ED2  0100               	movlb	0	; () banked
  2871  013ED4  6F79               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2872  013ED6  0E00               	movlw	0
  2873  013ED8  0100               	movlb	0	; () banked
  2874  013EDA  1570               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2875  013EDC  0100               	movlb	0	; () banked
  2876  013EDE  6F7A               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2877  013EE0  0E00               	movlw	0
  2878  013EE2  0100               	movlb	0	; () banked
  2879  013EE4  1571               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2880  013EE6  0100               	movlb	0	; () banked
  2881  013EE8  6F7B               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2882                           
  2883                           ; BSR set to: 0
  2884                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  2885  013EEA  C078  F073         	movff	CANSetMask@tamp,??_CANSetMask
  2886  013EEE  C079  F074         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2887  013EF2  C07A  F075         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2888  013EF6  C07B  F076         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2889  013EFA  C074  F073         	movff	??_CANSetMask+1,??_CANSetMask
  2890  013EFE  C075  F074         	movff	??_CANSetMask+2,??_CANSetMask+1
  2891  013F02  C076  F075         	movff	??_CANSetMask+3,??_CANSetMask+2
  2892  013F06  0100               	movlb	0	; () banked
  2893  013F08  6B76               	clrf	(??_CANSetMask+3)& (0+255),b
  2894  013F0A  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  2895  013F0E  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2896  013F12  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2897  013F16  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2898                           
  2899                           ; BSR set to: 0
  2900                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  2901  013F1A  C078  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  2902                           
  2903                           ; BSR set to: 0
  2904                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  2905  013F1E  0100               	movlb	0	; () banked
  2906  013F20  A170               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  2907  013F22  D003               	goto	l440
  2908                           
  2909                           ; BSR set to: 0
  2910                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  2911  013F24  010F               	movlb	15	; () banked
  2912  013F26  8119               	bsf	25,0,b	;volatile
  2913  013F28  D002               	goto	l441
  2914  013F2A                     l440:
  2915                           
  2916                           ; BSR set to: 0
  2917                           ;inc\CANlib.h: 676: else
  2918                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  2919  013F2A  010F               	movlb	15	; () banked
  2920  013F2C  9119               	bcf	25,0,b	;volatile
  2921  013F2E                     l441:
  2922                           
  2923                           ; BSR set to: 15
  2924                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  2925  013F2E  0100               	movlb	0	; () banked
  2926  013F30  A370               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  2927  013F32  D003               	goto	l442
  2928                           
  2929                           ; BSR set to: 0
  2930                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  2931  013F34  010F               	movlb	15	; () banked
  2932  013F36  8319               	bsf	25,1,b	;volatile
  2933  013F38  D002               	goto	l443
  2934  013F3A                     l442:
  2935                           
  2936                           ; BSR set to: 0
  2937                           ;inc\CANlib.h: 681: else
  2938                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  2939  013F3A  010F               	movlb	15	; () banked
  2940  013F3C  9319               	bcf	25,1,b	;volatile
  2941  013F3E                     l443:
  2942                           
  2943                           ; BSR set to: 15
  2944                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  2945  013F3E  0100               	movlb	0	; () banked
  2946  013F40  A570               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  2947  013F42  D003               	goto	l444
  2948                           
  2949                           ; BSR set to: 0
  2950                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  2951  013F44  010F               	movlb	15	; () banked
  2952  013F46  8B19               	bsf	25,5,b	;volatile
  2953  013F48  D002               	goto	l445
  2954  013F4A                     l444:
  2955                           
  2956                           ; BSR set to: 0
  2957                           ;inc\CANlib.h: 686: else
  2958                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  2959  013F4A  010F               	movlb	15	; () banked
  2960  013F4C  9B19               	bcf	25,5,b	;volatile
  2961  013F4E                     l445:
  2962                           
  2963                           ; BSR set to: 15
  2964                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  2965  013F4E  0100               	movlb	0	; () banked
  2966  013F50  A770               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  2967  013F52  D003               	goto	l446
  2968                           
  2969                           ; BSR set to: 0
  2970                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  2971  013F54  010F               	movlb	15	; () banked
  2972  013F56  8D19               	bsf	25,6,b	;volatile
  2973  013F58  D002               	goto	l447
  2974  013F5A                     l446:
  2975                           
  2976                           ; BSR set to: 0
  2977                           ;inc\CANlib.h: 691: else
  2978                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  2979  013F5A  010F               	movlb	15	; () banked
  2980  013F5C  9D19               	bcf	25,6,b	;volatile
  2981  013F5E                     l447:
  2982                           
  2983                           ; BSR set to: 15
  2984                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  2985  013F5E  0100               	movlb	0	; () banked
  2986  013F60  A970               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  2987  013F62  D003               	goto	l448
  2988                           
  2989                           ; BSR set to: 0
  2990                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  2991  013F64  010F               	movlb	15	; () banked
  2992  013F66  8F19               	bsf	25,7,b	;volatile
  2993  013F68  D002               	goto	l5039
  2994  013F6A                     l448:
  2995                           
  2996                           ; BSR set to: 0
  2997                           ;inc\CANlib.h: 696: else
  2998                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  2999  013F6A  010F               	movlb	15	; () banked
  3000  013F6C  9F19               	bcf	25,7,b	;volatile
  3001  013F6E                     l5039:
  3002                           
  3003                           ; BSR set to: 15
  3004                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  3005  013F6E  C06E  F073         	movff	CANSetMask@mask,??_CANSetMask
  3006  013F72  C06F  F074         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3007  013F76  C070  F075         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3008  013F7A  C071  F076         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3009  013F7E  0E16               	movlw	22
  3010  013F80  D006               	goto	u5640
  3011  013F82                     u5645:
  3012  013F82  0100               	movlb	0	; () banked
  3013  013F84  90D8               	bcf	status,0,c
  3014  013F86  3376               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3015  013F88  3375               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3016  013F8A  3374               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3017  013F8C  3373               	rrcf	??_CANSetMask& (0+255),f,b
  3018  013F8E                     u5640:
  3019  013F8E  2EE8               	decfsz	wreg,f,c
  3020  013F90  D7F8               	goto	u5645
  3021  013F92  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  3022  013F96  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3023  013F9A  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3024  013F9E  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3025                           
  3026                           ; BSR set to: 0
  3027                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  3028  013FA2  0100               	movlb	0	; () banked
  3029  013FA4  5178               	movf	CANSetMask@tamp& (0+255),w,b
  3030  013FA6  0100               	movlb	0	; () banked
  3031  013FA8  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3032  013FAA  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3033  013FAC  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3034  013FAE  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3035                           
  3036                           ; BSR set to: 0
  3037                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  3038  013FB0  C078  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3039  013FB4                     l5045:
  3040                           
  3041                           ; BSR set to: 0
  3042                           ;inc\CANlib.h: 702: }
  3043                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  3044  013FB4  0E02               	movlw	2
  3045  013FB6  0100               	movlb	0	; () banked
  3046  013FB8  1977               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3047  013FBA  A4D8               	btfss	status,2,c
  3048  013FBC  0012               	return	
  3049                           
  3050                           ; BSR set to: 0
  3051  013FBE  0EF7               	movlw	247
  3052  013FC0  0100               	movlb	0	; () banked
  3053  013FC2  1972               	xorwf	CANSetMask@type& (0+255),w,b
  3054  013FC4  A4D8               	btfss	status,2,c
  3055  013FC6  0012               	return	
  3056                           
  3057                           ; BSR set to: 0
  3058                           ;inc\CANlib.h: 705: {
  3059                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  3060  013FC8  0100               	movlb	0	; () banked
  3061  013FCA  516E               	movf	CANSetMask@mask& (0+255),w,b
  3062  013FCC  0100               	movlb	0	; () banked
  3063  013FCE  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3064  013FD0  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3065  013FD2  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3066  013FD4  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3067                           
  3068                           ; BSR set to: 0
  3069                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  3070  013FD6  C078  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  3074  013FDA  0E00               	movlw	0
  3075  013FDC  0100               	movlb	0	; () banked
  3076  013FDE  156E               	andwf	CANSetMask@mask& (0+255),w,b
  3077  013FE0  0100               	movlb	0	; () banked
  3078  013FE2  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3079  013FE4  0EFF               	movlw	255
  3080  013FE6  0100               	movlb	0	; () banked
  3081  013FE8  156F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3082  013FEA  0100               	movlb	0	; () banked
  3083  013FEC  6F79               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3084  013FEE  0E00               	movlw	0
  3085  013FF0  0100               	movlb	0	; () banked
  3086  013FF2  1570               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3087  013FF4  0100               	movlb	0	; () banked
  3088  013FF6  6F7A               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3089  013FF8  0E00               	movlw	0
  3090  013FFA  0100               	movlb	0	; () banked
  3091  013FFC  1571               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3092  013FFE  0100               	movlb	0	; () banked
  3093  014000  6F7B               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3094                           
  3095                           ; BSR set to: 0
  3096                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  3097  014002  C078  F073         	movff	CANSetMask@tamp,??_CANSetMask
  3098  014006  C079  F074         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3099  01400A  C07A  F075         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3100  01400E  C07B  F076         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3101  014012  C074  F073         	movff	??_CANSetMask+1,??_CANSetMask
  3102  014016  C075  F074         	movff	??_CANSetMask+2,??_CANSetMask+1
  3103  01401A  C076  F075         	movff	??_CANSetMask+3,??_CANSetMask+2
  3104  01401E  0100               	movlb	0	; () banked
  3105  014020  6B76               	clrf	(??_CANSetMask+3)& (0+255),b
  3106  014022  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  3107  014026  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3108  01402A  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3109  01402E  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3110                           
  3111                           ; BSR set to: 0
  3112                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  3113  014032  C078  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  3114                           
  3115                           ; BSR set to: 0
  3116                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  3117  014036  0100               	movlb	0	; () banked
  3118  014038  A170               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3119  01403A  D003               	goto	l451
  3120                           
  3121                           ; BSR set to: 0
  3122                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  3123  01403C  010F               	movlb	15	; () banked
  3124  01403E  811D               	bsf	29,0,b	;volatile
  3125  014040  D002               	goto	l452
  3126  014042                     l451:
  3127                           
  3128                           ; BSR set to: 0
  3129                           ;inc\CANlib.h: 715: else
  3130                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  3131  014042  010F               	movlb	15	; () banked
  3132  014044  911D               	bcf	29,0,b	;volatile
  3133  014046                     l452:
  3134                           
  3135                           ; BSR set to: 15
  3136                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  3137  014046  0100               	movlb	0	; () banked
  3138  014048  A370               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3139  01404A  D003               	goto	l453
  3140                           
  3141                           ; BSR set to: 0
  3142                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  3143  01404C  010F               	movlb	15	; () banked
  3144  01404E  831D               	bsf	29,1,b	;volatile
  3145  014050  D002               	goto	l454
  3146  014052                     l453:
  3147                           
  3148                           ; BSR set to: 0
  3149                           ;inc\CANlib.h: 720: else
  3150                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  3151  014052  010F               	movlb	15	; () banked
  3152  014054  931D               	bcf	29,1,b	;volatile
  3153  014056                     l454:
  3154                           
  3155                           ; BSR set to: 15
  3156                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  3157  014056  0100               	movlb	0	; () banked
  3158  014058  A570               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3159  01405A  D003               	goto	l455
  3160                           
  3161                           ; BSR set to: 0
  3162                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  3163  01405C  010F               	movlb	15	; () banked
  3164  01405E  8B1D               	bsf	29,5,b	;volatile
  3165  014060  D002               	goto	l456
  3166  014062                     l455:
  3167                           
  3168                           ; BSR set to: 0
  3169                           ;inc\CANlib.h: 725: else
  3170                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  3171  014062  010F               	movlb	15	; () banked
  3172  014064  9B1D               	bcf	29,5,b	;volatile
  3173  014066                     l456:
  3174                           
  3175                           ; BSR set to: 15
  3176                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  3177  014066  0100               	movlb	0	; () banked
  3178  014068  A770               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3179  01406A  D003               	goto	l457
  3180                           
  3181                           ; BSR set to: 0
  3182                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  3183  01406C  010F               	movlb	15	; () banked
  3184  01406E  8D1D               	bsf	29,6,b	;volatile
  3185  014070  D002               	goto	l458
  3186  014072                     l457:
  3187                           
  3188                           ; BSR set to: 0
  3189                           ;inc\CANlib.h: 730: else
  3190                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  3191  014072  010F               	movlb	15	; () banked
  3192  014074  9D1D               	bcf	29,6,b	;volatile
  3193  014076                     l458:
  3194                           
  3195                           ; BSR set to: 15
  3196                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  3197  014076  0100               	movlb	0	; () banked
  3198  014078  A970               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3199  01407A  D003               	goto	l459
  3200                           
  3201                           ; BSR set to: 0
  3202                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  3203  01407C  010F               	movlb	15	; () banked
  3204  01407E  8F1D               	bsf	29,7,b	;volatile
  3205  014080  D002               	goto	l5071
  3206  014082                     l459:
  3207                           
  3208                           ; BSR set to: 0
  3209                           ;inc\CANlib.h: 735: else
  3210                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  3211  014082  010F               	movlb	15	; () banked
  3212  014084  9F1D               	bcf	29,7,b	;volatile
  3213  014086                     l5071:
  3214                           
  3215                           ; BSR set to: 15
  3216                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  3217  014086  C06E  F073         	movff	CANSetMask@mask,??_CANSetMask
  3218  01408A  C06F  F074         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3219  01408E  C070  F075         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3220  014092  C071  F076         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3221  014096  0E16               	movlw	22
  3222  014098  D006               	goto	u5720
  3223  01409A                     u5725:
  3224  01409A  0100               	movlb	0	; () banked
  3225  01409C  90D8               	bcf	status,0,c
  3226  01409E  3376               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3227  0140A0  3375               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3228  0140A2  3374               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3229  0140A4  3373               	rrcf	??_CANSetMask& (0+255),f,b
  3230  0140A6                     u5720:
  3231  0140A6  2EE8               	decfsz	wreg,f,c
  3232  0140A8  D7F8               	goto	u5725
  3233  0140AA  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  3234  0140AE  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3235  0140B2  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3236  0140B6  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3237                           
  3238                           ; BSR set to: 0
  3239                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  3240  0140BA  0100               	movlb	0	; () banked
  3241  0140BC  5178               	movf	CANSetMask@tamp& (0+255),w,b
  3242  0140BE  0100               	movlb	0	; () banked
  3243  0140C0  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3244  0140C2  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3245  0140C4  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3246  0140C6  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3247                           
  3248                           ; BSR set to: 0
  3249                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  3250  0140C8  C078  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3251  0140CC  0012               	return	
  3252  0140CE                     __end_of_CANSetMask:
  3253                           	opt stack 0
  3254                           tblptru	equ	0xFF8
  3255                           tblptrh	equ	0xFF7
  3256                           tblptrl	equ	0xFF6
  3257                           tablat	equ	0xFF5
  3258                           intcon	equ	0xFF2
  3259                           postinc0	equ	0xFEE
  3260                           wreg	equ	0xFE8
  3261                           status	equ	0xFD8
  3262                           
  3263 ;; *************** function _CANSetFilter *****************
  3264 ;; Defined at:
  3265 ;;		line 748 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;  numBuffer       1    wreg     enum E16924
  3268 ;;  filter          4   14[BANK0 ] unsigned long 
  3269 ;;  type            1   18[BANK0 ] enum E16887
  3270 ;; Auto vars:     Size  Location     Type
  3271 ;;  numBuffer       1   23[BANK0 ] enum E16924
  3272 ;;  tamp            4   24[BANK0 ] unsigned long 
  3273 ;; Return value:  Size  Location     Type
  3274 ;;		None               void
  3275 ;; Registers used:
  3276 ;;		wreg, status,2, status,0
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3282 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3283 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3284 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3285 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3286 ;;Total ram usage:       14 bytes
  3287 ;; Hardware stack levels used:    1
  3288 ;; Hardware stack levels required when called:    3
  3289 ;; This function calls:
  3290 ;;		Nothing
  3291 ;; This function is called by:
  3292 ;;		_CANInitialize
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296                           	psect	text4
  3297  010000                     __ptext4:
  3298                           	opt stack 0
  3299  010000                     _CANSetFilter:
  3300                           	opt stack 25
  3301                           
  3302                           ; BSR set to: 0
  3303                           ;incstack = 0
  3304                           ;CANSetFilter@numBuffer stored from wreg
  3305  010000  0100               	movlb	0	; () banked
  3306  010002  6F77               	movwf	CANSetFilter@numBuffer& (0+255),b
  3307                           
  3308                           ;inc\CANlib.h: 750: unsigned long tamp;
  3309                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  3310  010004  0100               	movlb	0	; () banked
  3311  010006  5177               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3312  010008  0100               	movlb	0	; () banked
  3313  01000A  A4D8               	btfss	status,2,c
  3314  01000C  D058               	goto	l5095
  3315                           
  3316                           ; BSR set to: 0
  3317  01000E  0100               	movlb	0	; () banked
  3318  010010  2972               	incf	CANSetFilter@type& (0+255),w,b
  3319  010012  A4D8               	btfss	status,2,c
  3320  010014  D054               	goto	l5095
  3321                           
  3322                           ; BSR set to: 0
  3323                           ;inc\CANlib.h: 753: {
  3324                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  3325  010016  010F               	movlb	15	; () banked
  3326  010018  9701               	bcf	1,3,b	;volatile
  3327                           
  3328                           ; BSR set to: 15
  3329                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  3330  01001A  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  3331  01001E  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3332  010022  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3333  010026  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3334  01002A  0E04               	movlw	4
  3335  01002C  D006               	goto	u5750
  3336  01002E                     u5755:
  3337  01002E  0100               	movlb	0	; () banked
  3338  010030  90D8               	bcf	status,0,c
  3339  010032  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3340  010034  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3341  010036  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3342  010038  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  3343  01003A                     u5750:
  3344  01003A  2EE8               	decfsz	wreg,f,c
  3345  01003C  D7F8               	goto	u5755
  3346  01003E  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3347  010042  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3348  010046  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3349  01004A  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3350                           
  3351                           ; BSR set to: 0
  3352                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  3353  01004E  0100               	movlb	0	; () banked
  3354  010050  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  3355  010052  0100               	movlb	0	; () banked
  3356  010054  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3357  010056  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3358  010058  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3359  01005A  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3360                           
  3361                           ; BSR set to: 0
  3362                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  3363  01005C  C078  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3364                           
  3365                           ; BSR set to: 0
  3366                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  3367  010060  0E07               	movlw	7
  3368  010062  0100               	movlb	0	; () banked
  3369  010064  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3370  010066  0100               	movlb	0	; () banked
  3371  010068  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3372  01006A  0E00               	movlw	0
  3373  01006C  0100               	movlb	0	; () banked
  3374  01006E  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3375  010070  0100               	movlb	0	; () banked
  3376  010072  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3377  010074  0E00               	movlw	0
  3378  010076  0100               	movlb	0	; () banked
  3379  010078  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3380  01007A  0100               	movlb	0	; () banked
  3381  01007C  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3382  01007E  0E00               	movlw	0
  3383  010080  0100               	movlb	0	; () banked
  3384  010082  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3385  010084  0100               	movlb	0	; () banked
  3386  010086  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  3390  010088  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  3391  01008C  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3392  010090  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3393  010094  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3394  010098  0E05               	movlw	5
  3395  01009A                     u5765:
  3396  01009A  90D8               	bcf	status,0,c
  3397  01009C  0100               	movlb	0	; () banked
  3398  01009E  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  3399  0100A0  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3400  0100A2  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3401  0100A4  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3402  0100A6  2EE8               	decfsz	wreg,f,c
  3403  0100A8  D7F8               	goto	u5765
  3404  0100AA  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3405  0100AE  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3406  0100B2  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3407  0100B6  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3408                           
  3409                           ; BSR set to: 0
  3410                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  3411  0100BA  C078  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  3412  0100BE                     l5095:
  3413                           
  3414                           ; BSR set to: 0
  3415                           ;inc\CANlib.h: 763: }
  3416                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  3417  0100BE  0100               	movlb	0	; () banked
  3418  0100C0  0577               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3419  0100C2  A4D8               	btfss	status,2,c
  3420  0100C4  D058               	goto	l5113
  3421                           
  3422                           ; BSR set to: 0
  3423  0100C6  0100               	movlb	0	; () banked
  3424  0100C8  2972               	incf	CANSetFilter@type& (0+255),w,b
  3425  0100CA  A4D8               	btfss	status,2,c
  3426  0100CC  D054               	goto	l5113
  3427                           
  3428                           ; BSR set to: 0
  3429                           ;inc\CANlib.h: 766: {
  3430                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  3431  0100CE  010F               	movlb	15	; () banked
  3432  0100D0  9705               	bcf	5,3,b	;volatile
  3433                           
  3434                           ; BSR set to: 15
  3435                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  3436  0100D2  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  3437  0100D6  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3438  0100DA  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3439  0100DE  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3440  0100E2  0E04               	movlw	4
  3441  0100E4  D006               	goto	u5790
  3442  0100E6                     u5795:
  3443  0100E6  0100               	movlb	0	; () banked
  3444  0100E8  90D8               	bcf	status,0,c
  3445  0100EA  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3446  0100EC  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3447  0100EE  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3448  0100F0  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  3449  0100F2                     u5790:
  3450  0100F2  2EE8               	decfsz	wreg,f,c
  3451  0100F4  D7F8               	goto	u5795
  3452  0100F6  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3453  0100FA  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3454  0100FE  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3455  010102  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  3459  010106  0100               	movlb	0	; () banked
  3460  010108  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  3461  01010A  0100               	movlb	0	; () banked
  3462  01010C  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3463  01010E  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3464  010110  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3465  010112  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3466                           
  3467                           ; BSR set to: 0
  3468                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  3469  010114  C078  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  3470                           
  3471                           ; BSR set to: 0
  3472                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  3473  010118  0E07               	movlw	7
  3474  01011A  0100               	movlb	0	; () banked
  3475  01011C  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3476  01011E  0100               	movlb	0	; () banked
  3477  010120  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3478  010122  0E00               	movlw	0
  3479  010124  0100               	movlb	0	; () banked
  3480  010126  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3481  010128  0100               	movlb	0	; () banked
  3482  01012A  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3483  01012C  0E00               	movlw	0
  3484  01012E  0100               	movlb	0	; () banked
  3485  010130  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3486  010132  0100               	movlb	0	; () banked
  3487  010134  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3488  010136  0E00               	movlw	0
  3489  010138  0100               	movlb	0	; () banked
  3490  01013A  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3491  01013C  0100               	movlb	0	; () banked
  3492  01013E  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3493                           
  3494                           ; BSR set to: 0
  3495                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  3496  010140  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  3497  010144  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3498  010148  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3499  01014C  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3500  010150  0E05               	movlw	5
  3501  010152                     u5805:
  3502  010152  90D8               	bcf	status,0,c
  3503  010154  0100               	movlb	0	; () banked
  3504  010156  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  3505  010158  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3506  01015A  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3507  01015C  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3508  01015E  2EE8               	decfsz	wreg,f,c
  3509  010160  D7F8               	goto	u5805
  3510  010162  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3511  010166  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3512  01016A  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3513  01016E  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3514                           
  3515                           ; BSR set to: 0
  3516                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  3517  010172  C078  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  3518  010176                     l5113:
  3519                           
  3520                           ; BSR set to: 0
  3521                           ;inc\CANlib.h: 776: }
  3522                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  3523  010176  0E02               	movlw	2
  3524  010178  0100               	movlb	0	; () banked
  3525  01017A  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3526  01017C  A4D8               	btfss	status,2,c
  3527  01017E  D058               	goto	l5131
  3528                           
  3529                           ; BSR set to: 0
  3530  010180  0100               	movlb	0	; () banked
  3531  010182  2972               	incf	CANSetFilter@type& (0+255),w,b
  3532  010184  A4D8               	btfss	status,2,c
  3533  010186  D054               	goto	l5131
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;inc\CANlib.h: 779: {
  3537                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  3538  010188  010F               	movlb	15	; () banked
  3539  01018A  9709               	bcf	9,3,b	;volatile
  3540                           
  3541                           ; BSR set to: 15
  3542                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  3543  01018C  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  3544  010190  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3545  010194  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3546  010198  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3547  01019C  0E04               	movlw	4
  3548  01019E  D006               	goto	u5830
  3549  0101A0                     u5835:
  3550  0101A0  0100               	movlb	0	; () banked
  3551  0101A2  90D8               	bcf	status,0,c
  3552  0101A4  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3553  0101A6  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3554  0101A8  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3555  0101AA  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  3556  0101AC                     u5830:
  3557  0101AC  2EE8               	decfsz	wreg,f,c
  3558  0101AE  D7F8               	goto	u5835
  3559  0101B0  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3560  0101B4  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3561  0101B8  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3562  0101BC  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3563                           
  3564                           ; BSR set to: 0
  3565                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  3566  0101C0  0100               	movlb	0	; () banked
  3567  0101C2  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  3568  0101C4  0100               	movlb	0	; () banked
  3569  0101C6  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3570  0101C8  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3571  0101CA  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3572  0101CC  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3573                           
  3574                           ; BSR set to: 0
  3575                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  3576  0101CE  C078  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  3577                           
  3578                           ; BSR set to: 0
  3579                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  3580  0101D2  0E07               	movlw	7
  3581  0101D4  0100               	movlb	0	; () banked
  3582  0101D6  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3583  0101D8  0100               	movlb	0	; () banked
  3584  0101DA  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3585  0101DC  0E00               	movlw	0
  3586  0101DE  0100               	movlb	0	; () banked
  3587  0101E0  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3588  0101E2  0100               	movlb	0	; () banked
  3589  0101E4  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3590  0101E6  0E00               	movlw	0
  3591  0101E8  0100               	movlb	0	; () banked
  3592  0101EA  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3593  0101EC  0100               	movlb	0	; () banked
  3594  0101EE  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3595  0101F0  0E00               	movlw	0
  3596  0101F2  0100               	movlb	0	; () banked
  3597  0101F4  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3598  0101F6  0100               	movlb	0	; () banked
  3599  0101F8  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3600                           
  3601                           ; BSR set to: 0
  3602                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  3603  0101FA  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  3604  0101FE  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3605  010202  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3606  010206  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3607  01020A  0E05               	movlw	5
  3608  01020C                     u5845:
  3609  01020C  90D8               	bcf	status,0,c
  3610  01020E  0100               	movlb	0	; () banked
  3611  010210  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  3612  010212  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3613  010214  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3614  010216  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3615  010218  2EE8               	decfsz	wreg,f,c
  3616  01021A  D7F8               	goto	u5845
  3617  01021C  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3618  010220  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3619  010224  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3620  010228  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3621                           
  3622                           ; BSR set to: 0
  3623                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  3624  01022C  C078  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  3625  010230                     l5131:
  3626                           
  3627                           ; BSR set to: 0
  3628                           ;inc\CANlib.h: 789: }
  3629                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  3630  010230  0E03               	movlw	3
  3631  010232  0100               	movlb	0	; () banked
  3632  010234  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3633  010236  A4D8               	btfss	status,2,c
  3634  010238  D058               	goto	l5149
  3635                           
  3636                           ; BSR set to: 0
  3637  01023A  0100               	movlb	0	; () banked
  3638  01023C  2972               	incf	CANSetFilter@type& (0+255),w,b
  3639  01023E  A4D8               	btfss	status,2,c
  3640  010240  D054               	goto	l5149
  3641                           
  3642                           ; BSR set to: 0
  3643                           ;inc\CANlib.h: 792: {
  3644                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  3645  010242  010F               	movlb	15	; () banked
  3646  010244  970D               	bcf	13,3,b	;volatile
  3647                           
  3648                           ; BSR set to: 15
  3649                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  3650  010246  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  3651  01024A  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3652  01024E  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3653  010252  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3654  010256  0E04               	movlw	4
  3655  010258  D006               	goto	u5870
  3656  01025A                     u5875:
  3657  01025A  0100               	movlb	0	; () banked
  3658  01025C  90D8               	bcf	status,0,c
  3659  01025E  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3660  010260  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3661  010262  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3662  010264  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  3663  010266                     u5870:
  3664  010266  2EE8               	decfsz	wreg,f,c
  3665  010268  D7F8               	goto	u5875
  3666  01026A  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3667  01026E  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3668  010272  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3669  010276  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3670                           
  3671                           ; BSR set to: 0
  3672                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  3673  01027A  0100               	movlb	0	; () banked
  3674  01027C  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  3675  01027E  0100               	movlb	0	; () banked
  3676  010280  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3677  010282  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3678  010284  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3679  010286  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3680                           
  3681                           ; BSR set to: 0
  3682                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  3683  010288  C078  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  3684                           
  3685                           ; BSR set to: 0
  3686                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  3687  01028C  0E07               	movlw	7
  3688  01028E  0100               	movlb	0	; () banked
  3689  010290  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3690  010292  0100               	movlb	0	; () banked
  3691  010294  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3692  010296  0E00               	movlw	0
  3693  010298  0100               	movlb	0	; () banked
  3694  01029A  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3695  01029C  0100               	movlb	0	; () banked
  3696  01029E  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3697  0102A0  0E00               	movlw	0
  3698  0102A2  0100               	movlb	0	; () banked
  3699  0102A4  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3700  0102A6  0100               	movlb	0	; () banked
  3701  0102A8  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3702  0102AA  0E00               	movlw	0
  3703  0102AC  0100               	movlb	0	; () banked
  3704  0102AE  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3705  0102B0  0100               	movlb	0	; () banked
  3706  0102B2  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3707                           
  3708                           ; BSR set to: 0
  3709                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  3710  0102B4  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  3711  0102B8  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3712  0102BC  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3713  0102C0  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3714  0102C4  0E05               	movlw	5
  3715  0102C6                     u5885:
  3716  0102C6  90D8               	bcf	status,0,c
  3717  0102C8  0100               	movlb	0	; () banked
  3718  0102CA  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  3719  0102CC  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3720  0102CE  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3721  0102D0  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3722  0102D2  2EE8               	decfsz	wreg,f,c
  3723  0102D4  D7F8               	goto	u5885
  3724  0102D6  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3725  0102DA  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3726  0102DE  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3727  0102E2  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3728                           
  3729                           ; BSR set to: 0
  3730                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  3731  0102E6  C078  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  3732  0102EA                     l5149:
  3733                           
  3734                           ; BSR set to: 0
  3735                           ;inc\CANlib.h: 802: }
  3736                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  3737  0102EA  0E04               	movlw	4
  3738  0102EC  0100               	movlb	0	; () banked
  3739  0102EE  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3740  0102F0  A4D8               	btfss	status,2,c
  3741  0102F2  D058               	goto	l5167
  3742                           
  3743                           ; BSR set to: 0
  3744  0102F4  0100               	movlb	0	; () banked
  3745  0102F6  2972               	incf	CANSetFilter@type& (0+255),w,b
  3746  0102F8  A4D8               	btfss	status,2,c
  3747  0102FA  D054               	goto	l5167
  3748                           
  3749                           ; BSR set to: 0
  3750                           ;inc\CANlib.h: 805: {
  3751                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  3752  0102FC  010F               	movlb	15	; () banked
  3753  0102FE  9711               	bcf	17,3,b	;volatile
  3754                           
  3755                           ; BSR set to: 15
  3756                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  3757  010300  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  3758  010304  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3759  010308  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3760  01030C  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3761  010310  0E04               	movlw	4
  3762  010312  D006               	goto	u5910
  3763  010314                     u5915:
  3764  010314  0100               	movlb	0	; () banked
  3765  010316  90D8               	bcf	status,0,c
  3766  010318  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3767  01031A  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3768  01031C  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3769  01031E  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  3770  010320                     u5910:
  3771  010320  2EE8               	decfsz	wreg,f,c
  3772  010322  D7F8               	goto	u5915
  3773  010324  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3774  010328  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3775  01032C  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3776  010330  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3777                           
  3778                           ; BSR set to: 0
  3779                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  3780  010334  0100               	movlb	0	; () banked
  3781  010336  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  3782  010338  0100               	movlb	0	; () banked
  3783  01033A  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3784  01033C  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3785  01033E  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3786  010340  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3787                           
  3788                           ; BSR set to: 0
  3789                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  3790  010342  C078  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  3791                           
  3792                           ; BSR set to: 0
  3793                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  3794  010346  0E07               	movlw	7
  3795  010348  0100               	movlb	0	; () banked
  3796  01034A  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3797  01034C  0100               	movlb	0	; () banked
  3798  01034E  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3799  010350  0E00               	movlw	0
  3800  010352  0100               	movlb	0	; () banked
  3801  010354  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3802  010356  0100               	movlb	0	; () banked
  3803  010358  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3804  01035A  0E00               	movlw	0
  3805  01035C  0100               	movlb	0	; () banked
  3806  01035E  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3807  010360  0100               	movlb	0	; () banked
  3808  010362  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3809  010364  0E00               	movlw	0
  3810  010366  0100               	movlb	0	; () banked
  3811  010368  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3812  01036A  0100               	movlb	0	; () banked
  3813  01036C  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3814                           
  3815                           ; BSR set to: 0
  3816                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  3817  01036E  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  3818  010372  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3819  010376  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3820  01037A  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3821  01037E  0E05               	movlw	5
  3822  010380                     u5925:
  3823  010380  90D8               	bcf	status,0,c
  3824  010382  0100               	movlb	0	; () banked
  3825  010384  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  3826  010386  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3827  010388  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3828  01038A  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3829  01038C  2EE8               	decfsz	wreg,f,c
  3830  01038E  D7F8               	goto	u5925
  3831  010390  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3832  010394  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3833  010398  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3834  01039C  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3835                           
  3836                           ; BSR set to: 0
  3837                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  3838  0103A0  C078  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  3839  0103A4                     l5167:
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;inc\CANlib.h: 815: }
  3843                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  3844  0103A4  0E05               	movlw	5
  3845  0103A6  0100               	movlb	0	; () banked
  3846  0103A8  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3847  0103AA  A4D8               	btfss	status,2,c
  3848  0103AC  D058               	goto	l5185
  3849                           
  3850                           ; BSR set to: 0
  3851  0103AE  0100               	movlb	0	; () banked
  3852  0103B0  2972               	incf	CANSetFilter@type& (0+255),w,b
  3853  0103B2  A4D8               	btfss	status,2,c
  3854  0103B4  D054               	goto	l5185
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;inc\CANlib.h: 818: {
  3858                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  3859  0103B6  010F               	movlb	15	; () banked
  3860  0103B8  9715               	bcf	21,3,b	;volatile
  3861                           
  3862                           ; BSR set to: 15
  3863                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  3864  0103BA  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  3865  0103BE  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3866  0103C2  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3867  0103C6  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3868  0103CA  0E04               	movlw	4
  3869  0103CC  D006               	goto	u5950
  3870  0103CE                     u5955:
  3871  0103CE  0100               	movlb	0	; () banked
  3872  0103D0  90D8               	bcf	status,0,c
  3873  0103D2  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3874  0103D4  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3875  0103D6  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3876  0103D8  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  3877  0103DA                     u5950:
  3878  0103DA  2EE8               	decfsz	wreg,f,c
  3879  0103DC  D7F8               	goto	u5955
  3880  0103DE  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3881  0103E2  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3882  0103E6  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3883  0103EA  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3884                           
  3885                           ; BSR set to: 0
  3886                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  3887  0103EE  0100               	movlb	0	; () banked
  3888  0103F0  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  3889  0103F2  0100               	movlb	0	; () banked
  3890  0103F4  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3891  0103F6  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3892  0103F8  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3893  0103FA  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3894                           
  3895                           ; BSR set to: 0
  3896                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  3897  0103FC  C078  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  3898                           
  3899                           ; BSR set to: 0
  3900                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  3901  010400  0E07               	movlw	7
  3902  010402  0100               	movlb	0	; () banked
  3903  010404  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3904  010406  0100               	movlb	0	; () banked
  3905  010408  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3906  01040A  0E00               	movlw	0
  3907  01040C  0100               	movlb	0	; () banked
  3908  01040E  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3909  010410  0100               	movlb	0	; () banked
  3910  010412  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3911  010414  0E00               	movlw	0
  3912  010416  0100               	movlb	0	; () banked
  3913  010418  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3914  01041A  0100               	movlb	0	; () banked
  3915  01041C  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3916  01041E  0E00               	movlw	0
  3917  010420  0100               	movlb	0	; () banked
  3918  010422  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3919  010424  0100               	movlb	0	; () banked
  3920  010426  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3921                           
  3922                           ; BSR set to: 0
  3923                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  3924  010428  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  3925  01042C  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3926  010430  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3927  010434  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3928  010438  0E05               	movlw	5
  3929  01043A                     u5965:
  3930  01043A  90D8               	bcf	status,0,c
  3931  01043C  0100               	movlb	0	; () banked
  3932  01043E  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  3933  010440  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3934  010442  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3935  010444  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3936  010446  2EE8               	decfsz	wreg,f,c
  3937  010448  D7F8               	goto	u5965
  3938  01044A  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3939  01044E  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3940  010452  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3941  010456  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  3945  01045A  C078  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  3946  01045E                     l5185:
  3947                           
  3948                           ; BSR set to: 0
  3949                           ;inc\CANlib.h: 828: }
  3950                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  3951  01045E  0100               	movlb	0	; () banked
  3952  010460  5177               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3953  010462  0100               	movlb	0	; () banked
  3954  010464  A4D8               	btfss	status,2,c
  3955  010466  D089               	goto	l5219
  3956                           
  3957                           ; BSR set to: 0
  3958  010468  0EF7               	movlw	247
  3959  01046A  0100               	movlb	0	; () banked
  3960  01046C  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  3961  01046E  A4D8               	btfss	status,2,c
  3962  010470  D084               	goto	l5219
  3963                           
  3964                           ; BSR set to: 0
  3965                           ;inc\CANlib.h: 832: {
  3966                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  3967  010472  010F               	movlb	15	; () banked
  3968  010474  8701               	bsf	1,3,b	;volatile
  3969                           
  3970                           ; BSR set to: 15
  3971                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  3972  010476  0100               	movlb	0	; () banked
  3973  010478  516E               	movf	CANSetFilter@filter& (0+255),w,b
  3974  01047A  0100               	movlb	0	; () banked
  3975  01047C  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3976  01047E  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3977  010480  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3978  010482  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3979                           
  3980                           ; BSR set to: 0
  3981                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  3982  010484  C078  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  3983                           
  3984                           ; BSR set to: 0
  3985                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  3986  010488  0E00               	movlw	0
  3987  01048A  0100               	movlb	0	; () banked
  3988  01048C  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3989  01048E  0100               	movlb	0	; () banked
  3990  010490  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3991  010492  0EFF               	movlw	255
  3992  010494  0100               	movlb	0	; () banked
  3993  010496  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3994  010498  0100               	movlb	0	; () banked
  3995  01049A  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3996  01049C  0E00               	movlw	0
  3997  01049E  0100               	movlb	0	; () banked
  3998  0104A0  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3999  0104A2  0100               	movlb	0	; () banked
  4000  0104A4  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4001  0104A6  0E00               	movlw	0
  4002  0104A8  0100               	movlb	0	; () banked
  4003  0104AA  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4004  0104AC  0100               	movlb	0	; () banked
  4005  0104AE  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4006                           
  4007                           ; BSR set to: 0
  4008                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  4009  0104B0  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4010  0104B4  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4011  0104B8  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4012  0104BC  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4013  0104C0  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  4014  0104C4  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4015  0104C8  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4016  0104CC  0100               	movlb	0	; () banked
  4017  0104CE  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  4018  0104D0  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4019  0104D4  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4020  0104D8  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4021  0104DC  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  4025  0104E0  C078  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  4026                           
  4027                           ; BSR set to: 0
  4028                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  4029  0104E4  0100               	movlb	0	; () banked
  4030  0104E6  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4031  0104E8  D003               	goto	l471
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  4035  0104EA  010F               	movlb	15	; () banked
  4036  0104EC  8101               	bsf	1,0,b	;volatile
  4037  0104EE  D002               	goto	l472
  4038  0104F0                     l471:
  4039                           
  4040                           ; BSR set to: 0
  4041                           ;inc\CANlib.h: 844: else
  4042                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  4043  0104F0  010F               	movlb	15	; () banked
  4044  0104F2  9101               	bcf	1,0,b	;volatile
  4045  0104F4                     l472:
  4046                           
  4047                           ; BSR set to: 15
  4048                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  4049  0104F4  0100               	movlb	0	; () banked
  4050  0104F6  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4051  0104F8  D003               	goto	l473
  4052                           
  4053                           ; BSR set to: 0
  4054                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  4055  0104FA  010F               	movlb	15	; () banked
  4056  0104FC  8301               	bsf	1,1,b	;volatile
  4057  0104FE  D002               	goto	l474
  4058  010500                     l473:
  4059                           
  4060                           ; BSR set to: 0
  4061                           ;inc\CANlib.h: 849: else
  4062                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  4063  010500  010F               	movlb	15	; () banked
  4064  010502  9301               	bcf	1,1,b	;volatile
  4065  010504                     l474:
  4066                           
  4067                           ; BSR set to: 15
  4068                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  4069  010504  0100               	movlb	0	; () banked
  4070  010506  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4071  010508  D003               	goto	l475
  4072                           
  4073                           ; BSR set to: 0
  4074                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  4075  01050A  010F               	movlb	15	; () banked
  4076  01050C  8B01               	bsf	1,5,b	;volatile
  4077  01050E  D002               	goto	l476
  4078  010510                     l475:
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;inc\CANlib.h: 854: else
  4082                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  4083  010510  010F               	movlb	15	; () banked
  4084  010512  9B01               	bcf	1,5,b	;volatile
  4085  010514                     l476:
  4086                           
  4087                           ; BSR set to: 15
  4088                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  4089  010514  0100               	movlb	0	; () banked
  4090  010516  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4091  010518  D003               	goto	l477
  4092                           
  4093                           ; BSR set to: 0
  4094                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  4095  01051A  010F               	movlb	15	; () banked
  4096  01051C  8D01               	bsf	1,6,b	;volatile
  4097  01051E  D002               	goto	l478
  4098  010520                     l477:
  4099                           
  4100                           ; BSR set to: 0
  4101                           ;inc\CANlib.h: 859: else
  4102                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  4103  010520  010F               	movlb	15	; () banked
  4104  010522  9D01               	bcf	1,6,b	;volatile
  4105  010524                     l478:
  4106                           
  4107                           ; BSR set to: 15
  4108                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  4109  010524  0100               	movlb	0	; () banked
  4110  010526  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4111  010528  D003               	goto	l479
  4112                           
  4113                           ; BSR set to: 0
  4114                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  4115  01052A  010F               	movlb	15	; () banked
  4116  01052C  8F01               	bsf	1,7,b	;volatile
  4117  01052E  D002               	goto	l5213
  4118  010530                     l479:
  4119                           
  4120                           ; BSR set to: 0
  4121                           ;inc\CANlib.h: 864: else
  4122                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  4123  010530  010F               	movlb	15	; () banked
  4124  010532  9F01               	bcf	1,7,b	;volatile
  4125  010534                     l5213:
  4126                           
  4127                           ; BSR set to: 15
  4128                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  4129  010534  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4130  010538  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4131  01053C  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4132  010540  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4133  010544  0E16               	movlw	22
  4134  010546  D006               	goto	u6040
  4135  010548                     u6045:
  4136  010548  0100               	movlb	0	; () banked
  4137  01054A  90D8               	bcf	status,0,c
  4138  01054C  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4139  01054E  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4140  010550  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4141  010552  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4142  010554                     u6040:
  4143  010554  2EE8               	decfsz	wreg,f,c
  4144  010556  D7F8               	goto	u6045
  4145  010558  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4146  01055C  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4147  010560  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4148  010564  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4149                           
  4150                           ; BSR set to: 0
  4151                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  4152  010568  0100               	movlb	0	; () banked
  4153  01056A  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4154  01056C  0100               	movlb	0	; () banked
  4155  01056E  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4156  010570  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4157  010572  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4158  010574  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4159                           
  4160                           ; BSR set to: 0
  4161                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  4162  010576  C078  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4163  01057A                     l5219:
  4164                           
  4165                           ; BSR set to: 0
  4166                           ;inc\CANlib.h: 870: }
  4167                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  4168  01057A  0100               	movlb	0	; () banked
  4169  01057C  0577               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4170  01057E  A4D8               	btfss	status,2,c
  4171  010580  D089               	goto	l5253
  4172                           
  4173                           ; BSR set to: 0
  4174  010582  0EF7               	movlw	247
  4175  010584  0100               	movlb	0	; () banked
  4176  010586  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  4177  010588  A4D8               	btfss	status,2,c
  4178  01058A  D084               	goto	l5253
  4179                           
  4180                           ; BSR set to: 0
  4181                           ;inc\CANlib.h: 873: {
  4182                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  4183  01058C  010F               	movlb	15	; () banked
  4184  01058E  8705               	bsf	5,3,b	;volatile
  4185                           
  4186                           ; BSR set to: 15
  4187                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  4188  010590  0100               	movlb	0	; () banked
  4189  010592  516E               	movf	CANSetFilter@filter& (0+255),w,b
  4190  010594  0100               	movlb	0	; () banked
  4191  010596  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4192  010598  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4193  01059A  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4194  01059C  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4195                           
  4196                           ; BSR set to: 0
  4197                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  4198  01059E  C078  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  4199                           
  4200                           ; BSR set to: 0
  4201                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  4202  0105A2  0E00               	movlw	0
  4203  0105A4  0100               	movlb	0	; () banked
  4204  0105A6  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4205  0105A8  0100               	movlb	0	; () banked
  4206  0105AA  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4207  0105AC  0EFF               	movlw	255
  4208  0105AE  0100               	movlb	0	; () banked
  4209  0105B0  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4210  0105B2  0100               	movlb	0	; () banked
  4211  0105B4  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4212  0105B6  0E00               	movlw	0
  4213  0105B8  0100               	movlb	0	; () banked
  4214  0105BA  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4215  0105BC  0100               	movlb	0	; () banked
  4216  0105BE  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4217  0105C0  0E00               	movlw	0
  4218  0105C2  0100               	movlb	0	; () banked
  4219  0105C4  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4220  0105C6  0100               	movlb	0	; () banked
  4221  0105C8  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4222                           
  4223                           ; BSR set to: 0
  4224                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  4225  0105CA  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4226  0105CE  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4227  0105D2  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4228  0105D6  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4229  0105DA  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  4230  0105DE  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4231  0105E2  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4232  0105E6  0100               	movlb	0	; () banked
  4233  0105E8  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  4234  0105EA  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4235  0105EE  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4236  0105F2  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4237  0105F6  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4238                           
  4239                           ; BSR set to: 0
  4240                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  4241  0105FA  C078  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  4242                           
  4243                           ; BSR set to: 0
  4244                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  4245  0105FE  0100               	movlb	0	; () banked
  4246  010600  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4247  010602  D003               	goto	l482
  4248                           
  4249                           ; BSR set to: 0
  4250                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  4251  010604  010F               	movlb	15	; () banked
  4252  010606  8105               	bsf	5,0,b	;volatile
  4253  010608  D002               	goto	l483
  4254  01060A                     l482:
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;inc\CANlib.h: 885: else
  4258                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  4259  01060A  010F               	movlb	15	; () banked
  4260  01060C  9105               	bcf	5,0,b	;volatile
  4261  01060E                     l483:
  4262                           
  4263                           ; BSR set to: 15
  4264                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  4265  01060E  0100               	movlb	0	; () banked
  4266  010610  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4267  010612  D003               	goto	l484
  4268                           
  4269                           ; BSR set to: 0
  4270                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  4271  010614  010F               	movlb	15	; () banked
  4272  010616  8305               	bsf	5,1,b	;volatile
  4273  010618  D002               	goto	l485
  4274  01061A                     l484:
  4275                           
  4276                           ; BSR set to: 0
  4277                           ;inc\CANlib.h: 890: else
  4278                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  4279  01061A  010F               	movlb	15	; () banked
  4280  01061C  9305               	bcf	5,1,b	;volatile
  4281  01061E                     l485:
  4282                           
  4283                           ; BSR set to: 15
  4284                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  4285  01061E  0100               	movlb	0	; () banked
  4286  010620  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4287  010622  D003               	goto	l486
  4288                           
  4289                           ; BSR set to: 0
  4290                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  4291  010624  010F               	movlb	15	; () banked
  4292  010626  8B05               	bsf	5,5,b	;volatile
  4293  010628  D002               	goto	l487
  4294  01062A                     l486:
  4295                           
  4296                           ; BSR set to: 0
  4297                           ;inc\CANlib.h: 895: else
  4298                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  4299  01062A  010F               	movlb	15	; () banked
  4300  01062C  9B05               	bcf	5,5,b	;volatile
  4301  01062E                     l487:
  4302                           
  4303                           ; BSR set to: 15
  4304                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  4305  01062E  0100               	movlb	0	; () banked
  4306  010630  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4307  010632  D003               	goto	l488
  4308                           
  4309                           ; BSR set to: 0
  4310                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  4311  010634  010F               	movlb	15	; () banked
  4312  010636  8D05               	bsf	5,6,b	;volatile
  4313  010638  D002               	goto	l489
  4314  01063A                     l488:
  4315                           
  4316                           ; BSR set to: 0
  4317                           ;inc\CANlib.h: 900: else
  4318                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  4319  01063A  010F               	movlb	15	; () banked
  4320  01063C  9D05               	bcf	5,6,b	;volatile
  4321  01063E                     l489:
  4322                           
  4323                           ; BSR set to: 15
  4324                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  4325  01063E  0100               	movlb	0	; () banked
  4326  010640  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4327  010642  D003               	goto	l490
  4328                           
  4329                           ; BSR set to: 0
  4330                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  4331  010644  010F               	movlb	15	; () banked
  4332  010646  8F05               	bsf	5,7,b	;volatile
  4333  010648  D002               	goto	l5247
  4334  01064A                     l490:
  4335                           
  4336                           ; BSR set to: 0
  4337                           ;inc\CANlib.h: 905: else
  4338                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  4339  01064A  010F               	movlb	15	; () banked
  4340  01064C  9F05               	bcf	5,7,b	;volatile
  4341  01064E                     l5247:
  4342                           
  4343                           ; BSR set to: 15
  4344                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  4345  01064E  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4346  010652  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4347  010656  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4348  01065A  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4349  01065E  0E16               	movlw	22
  4350  010660  D006               	goto	u6120
  4351  010662                     u6125:
  4352  010662  0100               	movlb	0	; () banked
  4353  010664  90D8               	bcf	status,0,c
  4354  010666  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4355  010668  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4356  01066A  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4357  01066C  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4358  01066E                     u6120:
  4359  01066E  2EE8               	decfsz	wreg,f,c
  4360  010670  D7F8               	goto	u6125
  4361  010672  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4362  010676  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4363  01067A  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4364  01067E  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4365                           
  4366                           ; BSR set to: 0
  4367                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  4368  010682  0100               	movlb	0	; () banked
  4369  010684  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4370  010686  0100               	movlb	0	; () banked
  4371  010688  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4372  01068A  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4373  01068C  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4374  01068E  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4375                           
  4376                           ; BSR set to: 0
  4377                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  4378  010690  C078  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4379  010694                     l5253:
  4380                           
  4381                           ; BSR set to: 0
  4382                           ;inc\CANlib.h: 911: }
  4383                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  4384  010694  0E02               	movlw	2
  4385  010696  0100               	movlb	0	; () banked
  4386  010698  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4387  01069A  A4D8               	btfss	status,2,c
  4388  01069C  D089               	goto	l5287
  4389                           
  4390                           ; BSR set to: 0
  4391  01069E  0EF7               	movlw	247
  4392  0106A0  0100               	movlb	0	; () banked
  4393  0106A2  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  4394  0106A4  A4D8               	btfss	status,2,c
  4395  0106A6  D084               	goto	l5287
  4396                           
  4397                           ; BSR set to: 0
  4398                           ;inc\CANlib.h: 915: {
  4399                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  4400  0106A8  010F               	movlb	15	; () banked
  4401  0106AA  8709               	bsf	9,3,b	;volatile
  4402                           
  4403                           ; BSR set to: 15
  4404                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  4405  0106AC  0100               	movlb	0	; () banked
  4406  0106AE  516E               	movf	CANSetFilter@filter& (0+255),w,b
  4407  0106B0  0100               	movlb	0	; () banked
  4408  0106B2  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4409  0106B4  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4410  0106B6  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4411  0106B8  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4412                           
  4413                           ; BSR set to: 0
  4414                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  4415  0106BA  C078  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  4416                           
  4417                           ; BSR set to: 0
  4418                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  4419  0106BE  0E00               	movlw	0
  4420  0106C0  0100               	movlb	0	; () banked
  4421  0106C2  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4422  0106C4  0100               	movlb	0	; () banked
  4423  0106C6  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4424  0106C8  0EFF               	movlw	255
  4425  0106CA  0100               	movlb	0	; () banked
  4426  0106CC  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4427  0106CE  0100               	movlb	0	; () banked
  4428  0106D0  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4429  0106D2  0E00               	movlw	0
  4430  0106D4  0100               	movlb	0	; () banked
  4431  0106D6  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4432  0106D8  0100               	movlb	0	; () banked
  4433  0106DA  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4434  0106DC  0E00               	movlw	0
  4435  0106DE  0100               	movlb	0	; () banked
  4436  0106E0  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4437  0106E2  0100               	movlb	0	; () banked
  4438  0106E4  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4439                           
  4440                           ; BSR set to: 0
  4441                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  4442  0106E6  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4443  0106EA  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4444  0106EE  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4445  0106F2  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4446  0106F6  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  4447  0106FA  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4448  0106FE  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4449  010702  0100               	movlb	0	; () banked
  4450  010704  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  4451  010706  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4452  01070A  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4453  01070E  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4454  010712  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4455                           
  4456                           ; BSR set to: 0
  4457                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  4458  010716  C078  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  4459                           
  4460                           ; BSR set to: 0
  4461                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  4462  01071A  0100               	movlb	0	; () banked
  4463  01071C  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4464  01071E  D003               	goto	l493
  4465                           
  4466                           ; BSR set to: 0
  4467                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  4468  010720  010F               	movlb	15	; () banked
  4469  010722  8109               	bsf	9,0,b	;volatile
  4470  010724  D002               	goto	l494
  4471  010726                     l493:
  4472                           
  4473                           ; BSR set to: 0
  4474                           ;inc\CANlib.h: 927: else
  4475                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  4476  010726  010F               	movlb	15	; () banked
  4477  010728  9109               	bcf	9,0,b	;volatile
  4478  01072A                     l494:
  4479                           
  4480                           ; BSR set to: 15
  4481                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  4482  01072A  0100               	movlb	0	; () banked
  4483  01072C  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4484  01072E  D003               	goto	l495
  4485                           
  4486                           ; BSR set to: 0
  4487                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  4488  010730  010F               	movlb	15	; () banked
  4489  010732  8309               	bsf	9,1,b	;volatile
  4490  010734  D002               	goto	l496
  4491  010736                     l495:
  4492                           
  4493                           ; BSR set to: 0
  4494                           ;inc\CANlib.h: 932: else
  4495                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  4496  010736  010F               	movlb	15	; () banked
  4497  010738  9309               	bcf	9,1,b	;volatile
  4498  01073A                     l496:
  4499                           
  4500                           ; BSR set to: 15
  4501                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  4502  01073A  0100               	movlb	0	; () banked
  4503  01073C  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4504  01073E  D003               	goto	l497
  4505                           
  4506                           ; BSR set to: 0
  4507                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  4508  010740  010F               	movlb	15	; () banked
  4509  010742  8B09               	bsf	9,5,b	;volatile
  4510  010744  D002               	goto	l498
  4511  010746                     l497:
  4512                           
  4513                           ; BSR set to: 0
  4514                           ;inc\CANlib.h: 937: else
  4515                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  4516  010746  010F               	movlb	15	; () banked
  4517  010748  9B09               	bcf	9,5,b	;volatile
  4518  01074A                     l498:
  4519                           
  4520                           ; BSR set to: 15
  4521                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  4522  01074A  0100               	movlb	0	; () banked
  4523  01074C  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4524  01074E  D003               	goto	l499
  4525                           
  4526                           ; BSR set to: 0
  4527                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  4528  010750  010F               	movlb	15	; () banked
  4529  010752  8D09               	bsf	9,6,b	;volatile
  4530  010754  D002               	goto	l500
  4531  010756                     l499:
  4532                           
  4533                           ; BSR set to: 0
  4534                           ;inc\CANlib.h: 942: else
  4535                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  4536  010756  010F               	movlb	15	; () banked
  4537  010758  9D09               	bcf	9,6,b	;volatile
  4538  01075A                     l500:
  4539                           
  4540                           ; BSR set to: 15
  4541                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  4542  01075A  0100               	movlb	0	; () banked
  4543  01075C  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4544  01075E  D003               	goto	l501
  4545                           
  4546                           ; BSR set to: 0
  4547                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  4548  010760  010F               	movlb	15	; () banked
  4549  010762  8F09               	bsf	9,7,b	;volatile
  4550  010764  D002               	goto	l5281
  4551  010766                     l501:
  4552                           
  4553                           ; BSR set to: 0
  4554                           ;inc\CANlib.h: 947: else
  4555                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  4556  010766  010F               	movlb	15	; () banked
  4557  010768  9F09               	bcf	9,7,b	;volatile
  4558  01076A                     l5281:
  4559                           
  4560                           ; BSR set to: 15
  4561                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  4562  01076A  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4563  01076E  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4564  010772  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4565  010776  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4566  01077A  0E16               	movlw	22
  4567  01077C  D006               	goto	u6200
  4568  01077E                     u6205:
  4569  01077E  0100               	movlb	0	; () banked
  4570  010780  90D8               	bcf	status,0,c
  4571  010782  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4572  010784  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4573  010786  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4574  010788  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4575  01078A                     u6200:
  4576  01078A  2EE8               	decfsz	wreg,f,c
  4577  01078C  D7F8               	goto	u6205
  4578  01078E  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4579  010792  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4580  010796  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4581  01079A  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4582                           
  4583                           ; BSR set to: 0
  4584                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  4585  01079E  0100               	movlb	0	; () banked
  4586  0107A0  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4587  0107A2  0100               	movlb	0	; () banked
  4588  0107A4  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4589  0107A6  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4590  0107A8  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4591  0107AA  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4592                           
  4593                           ; BSR set to: 0
  4594                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  4595  0107AC  C078  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4596  0107B0                     l5287:
  4597                           
  4598                           ; BSR set to: 0
  4599                           ;inc\CANlib.h: 953: }
  4600                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  4601  0107B0  0E03               	movlw	3
  4602  0107B2  0100               	movlb	0	; () banked
  4603  0107B4  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4604  0107B6  A4D8               	btfss	status,2,c
  4605  0107B8  D089               	goto	l5321
  4606                           
  4607                           ; BSR set to: 0
  4608  0107BA  0EF7               	movlw	247
  4609  0107BC  0100               	movlb	0	; () banked
  4610  0107BE  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  4611  0107C0  A4D8               	btfss	status,2,c
  4612  0107C2  D084               	goto	l5321
  4613                           
  4614                           ; BSR set to: 0
  4615                           ;inc\CANlib.h: 956: {
  4616                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  4617  0107C4  010F               	movlb	15	; () banked
  4618  0107C6  870D               	bsf	13,3,b	;volatile
  4619                           
  4620                           ; BSR set to: 15
  4621                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  4622  0107C8  0100               	movlb	0	; () banked
  4623  0107CA  516E               	movf	CANSetFilter@filter& (0+255),w,b
  4624  0107CC  0100               	movlb	0	; () banked
  4625  0107CE  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4626  0107D0  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4627  0107D2  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4628  0107D4  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4629                           
  4630                           ; BSR set to: 0
  4631                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  4632  0107D6  C078  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  4633                           
  4634                           ; BSR set to: 0
  4635                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  4636  0107DA  0E00               	movlw	0
  4637  0107DC  0100               	movlb	0	; () banked
  4638  0107DE  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4639  0107E0  0100               	movlb	0	; () banked
  4640  0107E2  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4641  0107E4  0EFF               	movlw	255
  4642  0107E6  0100               	movlb	0	; () banked
  4643  0107E8  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4644  0107EA  0100               	movlb	0	; () banked
  4645  0107EC  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4646  0107EE  0E00               	movlw	0
  4647  0107F0  0100               	movlb	0	; () banked
  4648  0107F2  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4649  0107F4  0100               	movlb	0	; () banked
  4650  0107F6  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4651  0107F8  0E00               	movlw	0
  4652  0107FA  0100               	movlb	0	; () banked
  4653  0107FC  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4654  0107FE  0100               	movlb	0	; () banked
  4655  010800  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4656                           
  4657                           ; BSR set to: 0
  4658                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  4659  010802  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4660  010806  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4661  01080A  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4662  01080E  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4663  010812  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  4664  010816  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4665  01081A  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4666  01081E  0100               	movlb	0	; () banked
  4667  010820  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  4668  010822  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4669  010826  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4670  01082A  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4671  01082E  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4672                           
  4673                           ; BSR set to: 0
  4674                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  4675  010832  C078  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  4676                           
  4677                           ; BSR set to: 0
  4678                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  4679  010836  0100               	movlb	0	; () banked
  4680  010838  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4681  01083A  D003               	goto	l504
  4682                           
  4683                           ; BSR set to: 0
  4684                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  4685  01083C  010F               	movlb	15	; () banked
  4686  01083E  810D               	bsf	13,0,b	;volatile
  4687  010840  D002               	goto	l505
  4688  010842                     l504:
  4689                           
  4690                           ; BSR set to: 0
  4691                           ;inc\CANlib.h: 968: else
  4692                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  4693  010842  010F               	movlb	15	; () banked
  4694  010844  910D               	bcf	13,0,b	;volatile
  4695  010846                     l505:
  4696                           
  4697                           ; BSR set to: 15
  4698                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  4699  010846  0100               	movlb	0	; () banked
  4700  010848  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4701  01084A  D003               	goto	l506
  4702                           
  4703                           ; BSR set to: 0
  4704                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  4705  01084C  010F               	movlb	15	; () banked
  4706  01084E  830D               	bsf	13,1,b	;volatile
  4707  010850  D002               	goto	l507
  4708  010852                     l506:
  4709                           
  4710                           ; BSR set to: 0
  4711                           ;inc\CANlib.h: 973: else
  4712                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  4713  010852  010F               	movlb	15	; () banked
  4714  010854  930D               	bcf	13,1,b	;volatile
  4715  010856                     l507:
  4716                           
  4717                           ; BSR set to: 15
  4718                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  4719  010856  0100               	movlb	0	; () banked
  4720  010858  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4721  01085A  D003               	goto	l508
  4722                           
  4723                           ; BSR set to: 0
  4724                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  4725  01085C  010F               	movlb	15	; () banked
  4726  01085E  8B0D               	bsf	13,5,b	;volatile
  4727  010860  D002               	goto	l509
  4728  010862                     l508:
  4729                           
  4730                           ; BSR set to: 0
  4731                           ;inc\CANlib.h: 978: else
  4732                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  4733  010862  010F               	movlb	15	; () banked
  4734  010864  9B0D               	bcf	13,5,b	;volatile
  4735  010866                     l509:
  4736                           
  4737                           ; BSR set to: 15
  4738                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  4739  010866  0100               	movlb	0	; () banked
  4740  010868  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4741  01086A  D003               	goto	l510
  4742                           
  4743                           ; BSR set to: 0
  4744                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  4745  01086C  010F               	movlb	15	; () banked
  4746  01086E  8D0D               	bsf	13,6,b	;volatile
  4747  010870  D002               	goto	l511
  4748  010872                     l510:
  4749                           
  4750                           ; BSR set to: 0
  4751                           ;inc\CANlib.h: 983: else
  4752                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  4753  010872  010F               	movlb	15	; () banked
  4754  010874  9D0D               	bcf	13,6,b	;volatile
  4755  010876                     l511:
  4756                           
  4757                           ; BSR set to: 15
  4758                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  4759  010876  0100               	movlb	0	; () banked
  4760  010878  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4761  01087A  D003               	goto	l512
  4762                           
  4763                           ; BSR set to: 0
  4764                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  4765  01087C  010F               	movlb	15	; () banked
  4766  01087E  8F0D               	bsf	13,7,b	;volatile
  4767  010880  D002               	goto	l5315
  4768  010882                     l512:
  4769                           
  4770                           ; BSR set to: 0
  4771                           ;inc\CANlib.h: 988: else
  4772                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  4773  010882  010F               	movlb	15	; () banked
  4774  010884  9F0D               	bcf	13,7,b	;volatile
  4775  010886                     l5315:
  4776                           
  4777                           ; BSR set to: 15
  4778                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  4779  010886  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4780  01088A  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4781  01088E  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4782  010892  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4783  010896  0E16               	movlw	22
  4784  010898  D006               	goto	u6280
  4785  01089A                     u6285:
  4786  01089A  0100               	movlb	0	; () banked
  4787  01089C  90D8               	bcf	status,0,c
  4788  01089E  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4789  0108A0  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4790  0108A2  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4791  0108A4  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4792  0108A6                     u6280:
  4793  0108A6  2EE8               	decfsz	wreg,f,c
  4794  0108A8  D7F8               	goto	u6285
  4795  0108AA  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4796  0108AE  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4797  0108B2  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4798  0108B6  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4799                           
  4800                           ; BSR set to: 0
  4801                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  4802  0108BA  0100               	movlb	0	; () banked
  4803  0108BC  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4804  0108BE  0100               	movlb	0	; () banked
  4805  0108C0  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4806  0108C2  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4807  0108C4  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4808  0108C6  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4809                           
  4810                           ; BSR set to: 0
  4811                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  4812  0108C8  C078  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4813  0108CC                     l5321:
  4814                           
  4815                           ; BSR set to: 0
  4816                           ;inc\CANlib.h: 994: }
  4817                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  4818  0108CC  0E04               	movlw	4
  4819  0108CE  0100               	movlb	0	; () banked
  4820  0108D0  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4821  0108D2  A4D8               	btfss	status,2,c
  4822  0108D4  D089               	goto	l5355
  4823                           
  4824                           ; BSR set to: 0
  4825  0108D6  0EF7               	movlw	247
  4826  0108D8  0100               	movlb	0	; () banked
  4827  0108DA  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  4828  0108DC  A4D8               	btfss	status,2,c
  4829  0108DE  D084               	goto	l5355
  4830                           
  4831                           ; BSR set to: 0
  4832                           ;inc\CANlib.h: 997: {
  4833                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  4834  0108E0  010F               	movlb	15	; () banked
  4835  0108E2  8711               	bsf	17,3,b	;volatile
  4836                           
  4837                           ; BSR set to: 15
  4838                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  4839  0108E4  0100               	movlb	0	; () banked
  4840  0108E6  516E               	movf	CANSetFilter@filter& (0+255),w,b
  4841  0108E8  0100               	movlb	0	; () banked
  4842  0108EA  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4843  0108EC  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4844  0108EE  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4845  0108F0  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  4849  0108F2  C078  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  4850                           
  4851                           ; BSR set to: 0
  4852                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  4853  0108F6  0E00               	movlw	0
  4854  0108F8  0100               	movlb	0	; () banked
  4855  0108FA  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4856  0108FC  0100               	movlb	0	; () banked
  4857  0108FE  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4858  010900  0EFF               	movlw	255
  4859  010902  0100               	movlb	0	; () banked
  4860  010904  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4861  010906  0100               	movlb	0	; () banked
  4862  010908  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4863  01090A  0E00               	movlw	0
  4864  01090C  0100               	movlb	0	; () banked
  4865  01090E  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4866  010910  0100               	movlb	0	; () banked
  4867  010912  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4868  010914  0E00               	movlw	0
  4869  010916  0100               	movlb	0	; () banked
  4870  010918  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4871  01091A  0100               	movlb	0	; () banked
  4872  01091C  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4873                           
  4874                           ; BSR set to: 0
  4875                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  4876  01091E  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4877  010922  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4878  010926  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4879  01092A  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4880  01092E  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  4881  010932  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4882  010936  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4883  01093A  0100               	movlb	0	; () banked
  4884  01093C  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  4885  01093E  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4886  010942  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4887  010946  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4888  01094A  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4889                           
  4890                           ; BSR set to: 0
  4891                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  4892  01094E  C078  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  4893                           
  4894                           ; BSR set to: 0
  4895                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  4896  010952  0100               	movlb	0	; () banked
  4897  010954  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4898  010956  D003               	goto	l515
  4899                           
  4900                           ; BSR set to: 0
  4901                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  4902  010958  010F               	movlb	15	; () banked
  4903  01095A  8111               	bsf	17,0,b	;volatile
  4904  01095C  D002               	goto	l516
  4905  01095E                     l515:
  4906                           
  4907                           ; BSR set to: 0
  4908                           ;inc\CANlib.h: 1009: else
  4909                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  4910  01095E  010F               	movlb	15	; () banked
  4911  010960  9111               	bcf	17,0,b	;volatile
  4912  010962                     l516:
  4913                           
  4914                           ; BSR set to: 15
  4915                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  4916  010962  0100               	movlb	0	; () banked
  4917  010964  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4918  010966  D003               	goto	l517
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  4922  010968  010F               	movlb	15	; () banked
  4923  01096A  8311               	bsf	17,1,b	;volatile
  4924  01096C  D002               	goto	l518
  4925  01096E                     l517:
  4926                           
  4927                           ; BSR set to: 0
  4928                           ;inc\CANlib.h: 1014: else
  4929                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  4930  01096E  010F               	movlb	15	; () banked
  4931  010970  9311               	bcf	17,1,b	;volatile
  4932  010972                     l518:
  4933                           
  4934                           ; BSR set to: 15
  4935                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  4936  010972  0100               	movlb	0	; () banked
  4937  010974  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4938  010976  D003               	goto	l519
  4939                           
  4940                           ; BSR set to: 0
  4941                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  4942  010978  010F               	movlb	15	; () banked
  4943  01097A  8B11               	bsf	17,5,b	;volatile
  4944  01097C  D002               	goto	l520
  4945  01097E                     l519:
  4946                           
  4947                           ; BSR set to: 0
  4948                           ;inc\CANlib.h: 1019: else
  4949                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  4950  01097E  010F               	movlb	15	; () banked
  4951  010980  9B11               	bcf	17,5,b	;volatile
  4952  010982                     l520:
  4953                           
  4954                           ; BSR set to: 15
  4955                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  4956  010982  0100               	movlb	0	; () banked
  4957  010984  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4958  010986  D003               	goto	l521
  4959                           
  4960                           ; BSR set to: 0
  4961                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  4962  010988  010F               	movlb	15	; () banked
  4963  01098A  8D11               	bsf	17,6,b	;volatile
  4964  01098C  D002               	goto	l522
  4965  01098E                     l521:
  4966                           
  4967                           ; BSR set to: 0
  4968                           ;inc\CANlib.h: 1024: else
  4969                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  4970  01098E  010F               	movlb	15	; () banked
  4971  010990  9D11               	bcf	17,6,b	;volatile
  4972  010992                     l522:
  4973                           
  4974                           ; BSR set to: 15
  4975                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  4976  010992  0100               	movlb	0	; () banked
  4977  010994  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4978  010996  D003               	goto	l523
  4979                           
  4980                           ; BSR set to: 0
  4981                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  4982  010998  010F               	movlb	15	; () banked
  4983  01099A  8F11               	bsf	17,7,b	;volatile
  4984  01099C  D002               	goto	l5349
  4985  01099E                     l523:
  4986                           
  4987                           ; BSR set to: 0
  4988                           ;inc\CANlib.h: 1029: else
  4989                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  4990  01099E  010F               	movlb	15	; () banked
  4991  0109A0  9F11               	bcf	17,7,b	;volatile
  4992  0109A2                     l5349:
  4993                           
  4994                           ; BSR set to: 15
  4995                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  4996  0109A2  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4997  0109A6  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4998  0109AA  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4999  0109AE  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5000  0109B2  0E16               	movlw	22
  5001  0109B4  D006               	goto	u6360
  5002  0109B6                     u6365:
  5003  0109B6  0100               	movlb	0	; () banked
  5004  0109B8  90D8               	bcf	status,0,c
  5005  0109BA  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5006  0109BC  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5007  0109BE  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5008  0109C0  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  5009  0109C2                     u6360:
  5010  0109C2  2EE8               	decfsz	wreg,f,c
  5011  0109C4  D7F8               	goto	u6365
  5012  0109C6  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  5013  0109CA  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5014  0109CE  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5015  0109D2  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5016                           
  5017                           ; BSR set to: 0
  5018                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  5019  0109D6  0100               	movlb	0	; () banked
  5020  0109D8  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  5021  0109DA  0100               	movlb	0	; () banked
  5022  0109DC  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5023  0109DE  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5024  0109E0  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5025  0109E2  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5026                           
  5027                           ; BSR set to: 0
  5028                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  5029  0109E4  C078  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5030  0109E8                     l5355:
  5031                           
  5032                           ; BSR set to: 0
  5033                           ;inc\CANlib.h: 1035: }
  5034                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  5035  0109E8  0E05               	movlw	5
  5036  0109EA  0100               	movlb	0	; () banked
  5037  0109EC  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5038  0109EE  A4D8               	btfss	status,2,c
  5039  0109F0  0012               	return	
  5040                           
  5041                           ; BSR set to: 0
  5042  0109F2  0EF7               	movlw	247
  5043  0109F4  0100               	movlb	0	; () banked
  5044  0109F6  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  5045  0109F8  A4D8               	btfss	status,2,c
  5046  0109FA  0012               	return	
  5047                           
  5048                           ; BSR set to: 0
  5049                           ;inc\CANlib.h: 1038: {
  5050                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  5051  0109FC  010F               	movlb	15	; () banked
  5052  0109FE  8715               	bsf	21,3,b	;volatile
  5053                           
  5054                           ; BSR set to: 15
  5055                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  5056  010A00  0100               	movlb	0	; () banked
  5057  010A02  516E               	movf	CANSetFilter@filter& (0+255),w,b
  5058  010A04  0100               	movlb	0	; () banked
  5059  010A06  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5060  010A08  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5061  010A0A  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5062  010A0C  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5063                           
  5064                           ; BSR set to: 0
  5065                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  5066  010A0E  C078  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  5067                           
  5068                           ; BSR set to: 0
  5069                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  5070  010A12  0E00               	movlw	0
  5071  010A14  0100               	movlb	0	; () banked
  5072  010A16  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  5073  010A18  0100               	movlb	0	; () banked
  5074  010A1A  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5075  010A1C  0EFF               	movlw	255
  5076  010A1E  0100               	movlb	0	; () banked
  5077  010A20  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5078  010A22  0100               	movlb	0	; () banked
  5079  010A24  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5080  010A26  0E00               	movlw	0
  5081  010A28  0100               	movlb	0	; () banked
  5082  010A2A  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5083  010A2C  0100               	movlb	0	; () banked
  5084  010A2E  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5085  010A30  0E00               	movlw	0
  5086  010A32  0100               	movlb	0	; () banked
  5087  010A34  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5088  010A36  0100               	movlb	0	; () banked
  5089  010A38  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5090                           
  5091                           ; BSR set to: 0
  5092                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  5093  010A3A  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  5094  010A3E  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5095  010A42  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5096  010A46  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5097  010A4A  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  5098  010A4E  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5099  010A52  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5100  010A56  0100               	movlb	0	; () banked
  5101  010A58  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  5102  010A5A  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  5103  010A5E  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5104  010A62  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5105  010A66  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5106                           
  5107                           ; BSR set to: 0
  5108                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  5109  010A6A  C078  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  5110                           
  5111                           ; BSR set to: 0
  5112                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  5113  010A6E  0100               	movlb	0	; () banked
  5114  010A70  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5115  010A72  D003               	goto	l526
  5116                           
  5117                           ; BSR set to: 0
  5118                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  5119  010A74  010F               	movlb	15	; () banked
  5120  010A76  8115               	bsf	21,0,b	;volatile
  5121  010A78  D002               	goto	l527
  5122  010A7A                     l526:
  5123                           
  5124                           ; BSR set to: 0
  5125                           ;inc\CANlib.h: 1050: else
  5126                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  5127  010A7A  010F               	movlb	15	; () banked
  5128  010A7C  9115               	bcf	21,0,b	;volatile
  5129  010A7E                     l527:
  5130                           
  5131                           ; BSR set to: 15
  5132                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  5133  010A7E  0100               	movlb	0	; () banked
  5134  010A80  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5135  010A82  D003               	goto	l528
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  5139  010A84  010F               	movlb	15	; () banked
  5140  010A86  8315               	bsf	21,1,b	;volatile
  5141  010A88  D002               	goto	l529
  5142  010A8A                     l528:
  5143                           
  5144                           ; BSR set to: 0
  5145                           ;inc\CANlib.h: 1055: else
  5146                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  5147  010A8A  010F               	movlb	15	; () banked
  5148  010A8C  9315               	bcf	21,1,b	;volatile
  5149  010A8E                     l529:
  5150                           
  5151                           ; BSR set to: 15
  5152                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  5153  010A8E  0100               	movlb	0	; () banked
  5154  010A90  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5155  010A92  D003               	goto	l530
  5156                           
  5157                           ; BSR set to: 0
  5158                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  5159  010A94  010F               	movlb	15	; () banked
  5160  010A96  8B15               	bsf	21,5,b	;volatile
  5161  010A98  D002               	goto	l531
  5162  010A9A                     l530:
  5163                           
  5164                           ; BSR set to: 0
  5165                           ;inc\CANlib.h: 1060: else
  5166                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  5167  010A9A  010F               	movlb	15	; () banked
  5168  010A9C  9B15               	bcf	21,5,b	;volatile
  5169  010A9E                     l531:
  5170                           
  5171                           ; BSR set to: 15
  5172                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  5173  010A9E  0100               	movlb	0	; () banked
  5174  010AA0  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5175  010AA2  D003               	goto	l532
  5176                           
  5177                           ; BSR set to: 0
  5178                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  5179  010AA4  010F               	movlb	15	; () banked
  5180  010AA6  8D15               	bsf	21,6,b	;volatile
  5181  010AA8  D002               	goto	l533
  5182  010AAA                     l532:
  5183                           
  5184                           ; BSR set to: 0
  5185                           ;inc\CANlib.h: 1065: else
  5186                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  5187  010AAA  010F               	movlb	15	; () banked
  5188  010AAC  9D15               	bcf	21,6,b	;volatile
  5189  010AAE                     l533:
  5190                           
  5191                           ; BSR set to: 15
  5192                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  5193  010AAE  0100               	movlb	0	; () banked
  5194  010AB0  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5195  010AB2  D003               	goto	l534
  5196                           
  5197                           ; BSR set to: 0
  5198                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  5199  010AB4  010F               	movlb	15	; () banked
  5200  010AB6  8F15               	bsf	21,7,b	;volatile
  5201  010AB8  D002               	goto	l5383
  5202  010ABA                     l534:
  5203                           
  5204                           ; BSR set to: 0
  5205                           ;inc\CANlib.h: 1070: else
  5206                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  5207  010ABA  010F               	movlb	15	; () banked
  5208  010ABC  9F15               	bcf	21,7,b	;volatile
  5209  010ABE                     l5383:
  5210                           
  5211                           ; BSR set to: 15
  5212                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  5213  010ABE  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  5214  010AC2  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5215  010AC6  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5216  010ACA  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5217  010ACE  0E16               	movlw	22
  5218  010AD0  D006               	goto	u6440
  5219  010AD2                     u6445:
  5220  010AD2  0100               	movlb	0	; () banked
  5221  010AD4  90D8               	bcf	status,0,c
  5222  010AD6  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5223  010AD8  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5224  010ADA  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5225  010ADC  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  5226  010ADE                     u6440:
  5227  010ADE  2EE8               	decfsz	wreg,f,c
  5228  010AE0  D7F8               	goto	u6445
  5229  010AE2  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  5230  010AE6  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5231  010AEA  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5232  010AEE  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5233                           
  5234                           ; BSR set to: 0
  5235                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  5236  010AF2  0100               	movlb	0	; () banked
  5237  010AF4  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  5238  010AF6  0100               	movlb	0	; () banked
  5239  010AF8  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5240  010AFA  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5241  010AFC  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5242  010AFE  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5243                           
  5244                           ; BSR set to: 0
  5245                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  5246  010B00  C078  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5247  010B04  0012               	return	
  5248  010B06                     __end_of_CANSetFilter:
  5249                           	opt stack 0
  5250                           tblptru	equ	0xFF8
  5251                           tblptrh	equ	0xFF7
  5252                           tblptrl	equ	0xFF6
  5253                           tablat	equ	0xFF5
  5254                           intcon	equ	0xFF2
  5255                           postinc0	equ	0xFEE
  5256                           wreg	equ	0xFE8
  5257                           status	equ	0xFD8
  5258                           
  5259 ;; *************** function _CANOperationMode *****************
  5260 ;; Defined at:
  5261 ;;		line 206 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  5262 ;; Parameters:    Size  Location     Type
  5263 ;;  mode            1    wreg     enum E16881
  5264 ;; Auto vars:     Size  Location     Type
  5265 ;;  mode            1   14[BANK0 ] enum E16881
  5266 ;; Return value:  Size  Location     Type
  5267 ;;		None               void
  5268 ;; Registers used:
  5269 ;;		wreg, status,2, status,0
  5270 ;; Tracked objects:
  5271 ;;		On entry : 0/0
  5272 ;;		On exit  : 0/0
  5273 ;;		Unchanged: 0/0
  5274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5276 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5278 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5279 ;;Total ram usage:        1 bytes
  5280 ;; Hardware stack levels used:    1
  5281 ;; Hardware stack levels required when called:    3
  5282 ;; This function calls:
  5283 ;;		Nothing
  5284 ;; This function is called by:
  5285 ;;		_CANInitialize
  5286 ;; This function uses a non-reentrant model
  5287 ;;
  5288                           
  5289                           	psect	text5
  5290  015E82                     __ptext5:
  5291                           	opt stack 0
  5292  015E82                     _CANOperationMode:
  5293                           	opt stack 25
  5294                           
  5295                           ; BSR set to: 0
  5296                           ;incstack = 0
  5297                           ;CANOperationMode@mode stored from wreg
  5298  015E82  0100               	movlb	0	; () banked
  5299  015E84  6F6E               	movwf	CANOperationMode@mode& (0+255),b
  5300                           
  5301                           ;inc\CANlib.h: 208: CANCON = mode;
  5302  015E86  C06E  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  5303  015E8A                     l4979:
  5304  015E8A  506E               	movf	3950,w,c	;volatile
  5305  015E8C  0BE0               	andlw	224
  5306  015E8E  0100               	movlb	0	; () banked
  5307  015E90  196E               	xorwf	CANOperationMode@mode& (0+255),w,b
  5308  015E92  B4D8               	btfsc	status,2,c
  5309  015E94  0012               	return	
  5310  015E96  D7F9               	goto	l4979
  5311  015E98                     __end_of_CANOperationMode:
  5312                           	opt stack 0
  5313                           tblptru	equ	0xFF8
  5314                           tblptrh	equ	0xFF7
  5315                           tblptrl	equ	0xFF6
  5316                           tablat	equ	0xFF5
  5317                           intcon	equ	0xFF2
  5318                           postinc0	equ	0xFEE
  5319                           wreg	equ	0xFE8
  5320                           status	equ	0xFD8
  5321                           
  5322 ;; *************** function _PWR_Button_Polling *****************
  5323 ;; Defined at:
  5324 ;;		line 285 in file "RemoteCan.c"
  5325 ;; Parameters:    Size  Location     Type
  5326 ;;		None
  5327 ;; Auto vars:     Size  Location     Type
  5328 ;;		None
  5329 ;; Return value:  Size  Location     Type
  5330 ;;		None               void
  5331 ;; Registers used:
  5332 ;;		None
  5333 ;; Tracked objects:
  5334 ;;		On entry : 0/0
  5335 ;;		On exit  : 0/0
  5336 ;;		Unchanged: 0/0
  5337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5342 ;;Total ram usage:        0 bytes
  5343 ;; Hardware stack levels used:    1
  5344 ;; Hardware stack levels required when called:    3
  5345 ;; This function calls:
  5346 ;;		Nothing
  5347 ;; This function is called by:
  5348 ;;		_main
  5349 ;; This function uses a non-reentrant model
  5350 ;;
  5351                           
  5352                           	psect	text6
  5353  015E66                     __ptext6:
  5354                           	opt stack 0
  5355  015E66                     _PWR_Button_Polling:
  5356                           	opt stack 27
  5357                           
  5358                           ;RemoteCan.c: 286: if ((PORTBbits.RB5 == 0) || (wait_low == 0)) {
  5359                           
  5360                           ; BSR set to: 0
  5361                           ;incstack = 0
  5362  015E66  AA81               	btfss	3969,5,c	;volatile
  5363  015E68  D002               	goto	l802
  5364  015E6A  BC47               	btfsc	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  5365  015E6C  0012               	return	
  5366  015E6E                     l802:
  5367                           
  5368                           ;RemoteCan.c: 287: wait_low = 0;
  5369  015E6E  9C47               	bcf	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  5370                           
  5371                           ;RemoteCan.c: 288: if (PORTBbits.RB5 == 1) {
  5372  015E70  AA81               	btfss	3969,5,c	;volatile
  5373  015E72  0012               	return	
  5374                           
  5375                           ;RemoteCan.c: 289: power_switch = ~power_switch;
  5376  015E74  BA47               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5377  015E76  D002               	goto	u8400
  5378  015E78  8A47               	bsf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5379  015E7A  D001               	goto	u8415
  5380  015E7C                     u8400:
  5381  015E7C  9A47               	bcf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5382  015E7E                     u8415:
  5383                           
  5384                           ;RemoteCan.c: 290: wait_low = 1;
  5385  015E7E  8C47               	bsf	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  5386  015E80  0012               	return	
  5387  015E82                     __end_of_PWR_Button_Polling:
  5388                           	opt stack 0
  5389                           tblptru	equ	0xFF8
  5390                           tblptrh	equ	0xFF7
  5391                           tblptrl	equ	0xFF6
  5392                           tablat	equ	0xFF5
  5393                           intcon	equ	0xFF2
  5394                           postinc0	equ	0xFEE
  5395                           wreg	equ	0xFE8
  5396                           status	equ	0xFD8
  5397                           
  5398 ;; *************** function _LCD_Handler *****************
  5399 ;; Defined at:
  5400 ;;		line 211 in file "RemoteCan.c"
  5401 ;; Parameters:    Size  Location     Type
  5402 ;;		None
  5403 ;; Auto vars:     Size  Location     Type
  5404 ;;		None
  5405 ;; Return value:  Size  Location     Type
  5406 ;;		None               void
  5407 ;; Registers used:
  5408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5409 ;; Tracked objects:
  5410 ;;		On entry : 0/0
  5411 ;;		On exit  : 0/0
  5412 ;;		Unchanged: 0/0
  5413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5418 ;;Total ram usage:        0 bytes
  5419 ;; Hardware stack levels used:    1
  5420 ;; Hardware stack levels required when called:   10
  5421 ;; This function calls:
  5422 ;;		_CANisTxReady
  5423 ;;		_CANsendMessage
  5424 ;;		_LCD_clear
  5425 ;;		_LCD_goto_line
  5426 ;;		_LCD_initialize
  5427 ;;		_LCD_write_integer
  5428 ;;		_LCD_write_message
  5429 ;;		_LCD_write_string
  5430 ;;		___fldiv
  5431 ;;		___xxtofl
  5432 ;;		_delay_ms
  5433 ;;		_sprintf
  5434 ;; This function is called by:
  5435 ;;		_main
  5436 ;; This function uses a non-reentrant model
  5437 ;;
  5438                           
  5439                           	psect	text7
  5440  014DCE                     __ptext7:
  5441                           	opt stack 0
  5442  014DCE                     _LCD_Handler:
  5443                           	opt stack 20
  5444  014DCE                     l8475:
  5445  014DCE  EC01  F0AF         	call	_CANisTxReady	;wreg free
  5446  014DD2  06E8               	decf	wreg,f,c
  5447  014DD4  A4D8               	btfss	status,2,c
  5448  014DD6  D7FB               	goto	l8475
  5449                           
  5450                           ;RemoteCan.c: 214: CANsendMessage(0b00000000110, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  5451  014DD8  0E06               	movlw	6
  5452  014DDA  0100               	movlb	0	; () banked
  5453  014DDC  6F6E               	movwf	CANsendMessage@identifier& (0+255),b
  5454  014DDE  0E00               	movlw	0
  5455  014DE0  6F6F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  5456  014DE2  0E00               	movlw	0
  5457  014DE4  6F70               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  5458  014DE6  0E00               	movlw	0
  5459  014DE8  6F71               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  5460  014DEA  0EE9               	movlw	low _data_speed
  5461  014DEC  0100               	movlb	0	; () banked
  5462  014DEE  6F72               	movwf	CANsendMessage@data& (0+255),b
  5463  014DF0  0E00               	movlw	high _data_speed
  5464  014DF2  0100               	movlb	0	; () banked
  5465  014DF4  6F73               	movwf	(CANsendMessage@data+1)& (0+255),b
  5466  014DF6  0E08               	movlw	8
  5467  014DF8  0100               	movlb	0	; () banked
  5468  014DFA  6F74               	movwf	CANsendMessage@dataLength& (0+255),b
  5469  014DFC  0EFC               	movlw	252
  5470  014DFE  0100               	movlb	0	; () banked
  5471  014E00  6F75               	movwf	CANsendMessage@flags& (0+255),b
  5472  014E02  ECCD  F089         	call	_CANsendMessage	;wreg free
  5473                           
  5474                           ;RemoteCan.c: 216: actual_speed_kmh = ((actual_speed) / 278.0);
  5475  014E06  C0E0  F06E         	movff	_actual_speed,___xxtofl@val
  5476  014E0A  C0E1  F06F         	movff	_actual_speed+1,___xxtofl@val+1
  5477  014E0E  0100               	movlb	0	; () banked
  5478  014E10  6B70               	clrf	(___xxtofl@val+2)& (0+255),b
  5479  014E12  6B71               	clrf	(___xxtofl@val+3)& (0+255),b
  5480  014E14  0E00               	movlw	0
  5481  014E16  ECE2  F0A1         	call	___xxtofl
  5482  014E1A  C06E  F07C         	movff	?___xxtofl,___fldiv@b
  5483  014E1E  C06F  F07D         	movff	?___xxtofl+1,___fldiv@b+1
  5484  014E22  C070  F07E         	movff	?___xxtofl+2,___fldiv@b+2
  5485  014E26  C071  F07F         	movff	?___xxtofl+3,___fldiv@b+3
  5486  014E2A  0E00               	movlw	0
  5487  014E2C  0100               	movlb	0	; () banked
  5488  014E2E  6F80               	movwf	___fldiv@a& (0+255),b
  5489  014E30  0E00               	movlw	0
  5490  014E32  6F81               	movwf	(___fldiv@a+1)& (0+255),b
  5491  014E34  0E8B               	movlw	139
  5492  014E36  6F82               	movwf	(___fldiv@a+2)& (0+255),b
  5493  014E38  0E43               	movlw	67
  5494  014E3A  6F83               	movwf	(___fldiv@a+3)& (0+255),b
  5495  014E3C  ECB8  F09C         	call	___fldiv	;wreg free
  5496  014E40  C07C  F00E         	movff	?___fldiv,_actual_speed_kmh
  5497  014E44  C07D  F00F         	movff	?___fldiv+1,_actual_speed_kmh+1
  5498  014E48  C07E  F010         	movff	?___fldiv+2,_actual_speed_kmh+2
  5499  014E4C  C07F  F011         	movff	?___fldiv+3,_actual_speed_kmh+3
  5500                           
  5501                           ;RemoteCan.c: 218: LCD_clear();
  5502  014E50  ECC0  F0AE         	call	_LCD_clear	;wreg free
  5503                           
  5504                           ;RemoteCan.c: 219: delay_ms(1);
  5505  014E54  0E00               	movlw	0
  5506  014E56  0100               	movlb	0	; () banked
  5507  014E58  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
  5508  014E5A  0E01               	movlw	1
  5509  014E5C  6F74               	movwf	delay_ms@value_ms& (0+255),b
  5510  014E5E  EC39  F0AE         	call	_delay_ms	;wreg free
  5511                           
  5512                           ;RemoteCan.c: 220: LCD_initialize(16);
  5513  014E62  0E10               	movlw	16
  5514  014E64  ECA8  F0A7         	call	_LCD_initialize
  5515                           
  5516                           ;RemoteCan.c: 221: LCD_goto_line(1);
  5517  014E68  0E01               	movlw	1
  5518  014E6A  EC8E  F0A9         	call	_LCD_goto_line
  5519                           
  5520                           ;RemoteCan.c: 223: LCD_write_integer(set_speed, 6, 0x00);
  5521  014E6E  C0E4  F086         	movff	_set_speed,LCD_write_integer@value	;volatile
  5522  014E72  C0E5  F087         	movff	_set_speed+1,LCD_write_integer@value+1	;volatile
  5523  014E76  0E06               	movlw	6
  5524  014E78  0100               	movlb	0	; () banked
  5525  014E7A  6F88               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  5526  014E7C  0E00               	movlw	0
  5527  014E7E  0100               	movlb	0	; () banked
  5528  014E80  6F89               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  5529  014E82  ECAC  F0A3         	call	_LCD_write_integer	;wreg free
  5530                           
  5531                           ;RemoteCan.c: 224: LCD_goto_line(2);
  5532  014E86  0E02               	movlw	2
  5533  014E88  EC8E  F0A9         	call	_LCD_goto_line
  5534                           
  5535                           ;RemoteCan.c: 225: LCD_write_message("Direction: ");
  5536  014E8C  0ECE               	movlw	low STR_5
  5537  014E8E  0100               	movlb	0	; () banked
  5538  014E90  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  5539  014E92  0EFF               	movlw	high STR_5
  5540  014E94  0100               	movlb	0	; () banked
  5541  014E96  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5542  014E98  EC8D  F0AE         	call	_LCD_write_message	;wreg free
  5543                           
  5544                           ;RemoteCan.c: 226: if (switch_position != 0) {
  5545  014E9C  0100               	movlb	0	; () banked
  5546  014E9E  51E7               	movf	_switch_position& (0+255),w,b	;volatile
  5547  014EA0  B4D8               	btfsc	status,2,c
  5548  014EA2  D016               	goto	l8503
  5549                           
  5550                           ; BSR set to: 0
  5551                           ;RemoteCan.c: 227: if (dir == 1) {
  5552  014EA4  0100               	movlb	0	; () banked
  5553  014EA6  05E6               	decf	_dir& (0+255),w,b	;volatile
  5554  014EA8  A4D8               	btfss	status,2,c
  5555  014EAA  D009               	goto	l8501
  5556                           
  5557                           ; BSR set to: 0
  5558                           ;RemoteCan.c: 228: LCD_write_message("FWD");
  5559  014EAC  0EF8               	movlw	low STR_6
  5560  014EAE  0100               	movlb	0	; () banked
  5561  014EB0  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  5562  014EB2  0EFF               	movlw	high STR_6
  5563  014EB4  0100               	movlb	0	; () banked
  5564  014EB6  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5565  014EB8  EC8D  F0AE         	call	_LCD_write_message	;wreg free
  5566                           
  5567                           ;RemoteCan.c: 229: } else {
  5568  014EBC  D011               	goto	l8505
  5569  014EBE                     l8501:
  5570                           
  5571                           ;RemoteCan.c: 230: LCD_write_message("BKWD");
  5572  014EBE  0EEE               	movlw	low STR_7
  5573  014EC0  0100               	movlb	0	; () banked
  5574  014EC2  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  5575  014EC4  0EFF               	movlw	high STR_7
  5576  014EC6  0100               	movlb	0	; () banked
  5577  014EC8  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5578  014ECA  EC8D  F0AE         	call	_LCD_write_message	;wreg free
  5579                           
  5580                           ;RemoteCan.c: 231: }
  5581                           ;RemoteCan.c: 232: } else {
  5582  014ECE  D008               	goto	l8505
  5583  014ED0                     l8503:
  5584                           
  5585                           ;RemoteCan.c: 234: LCD_write_message("P");
  5586  014ED0  0EFC               	movlw	low STR_8
  5587  014ED2  0100               	movlb	0	; () banked
  5588  014ED4  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  5589  014ED6  0EFF               	movlw	high STR_8
  5590  014ED8  0100               	movlb	0	; () banked
  5591  014EDA  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5592  014EDC  EC8D  F0AE         	call	_LCD_write_message	;wreg free
  5593  014EE0                     l8505:
  5594                           
  5595                           ;RemoteCan.c: 235: }
  5596                           ;RemoteCan.c: 237: LCD_goto_line(3);
  5597  014EE0  0E03               	movlw	3
  5598  014EE2  EC8E  F0A9         	call	_LCD_goto_line
  5599                           
  5600                           ;RemoteCan.c: 238: sprintf(str, "Speed: %.3f", actual_speed_kmh);
  5601  014EE6  0E30               	movlw	low _str
  5602  014EE8  0100               	movlb	0	; () banked
  5603  014EEA  6FC0               	movwf	sprintf@sp& (0+255),b
  5604  014EEC  0E01               	movlw	high _str
  5605  014EEE  0100               	movlb	0	; () banked
  5606  014EF0  6FC1               	movwf	(sprintf@sp+1)& (0+255),b
  5607  014EF2  0EDA               	movlw	low STR_9
  5608  014EF4  0100               	movlb	0	; () banked
  5609  014EF6  6FC2               	movwf	sprintf@f& (0+255),b
  5610  014EF8  0EFF               	movlw	high STR_9
  5611  014EFA  0100               	movlb	0	; () banked
  5612  014EFC  6FC3               	movwf	(sprintf@f+1)& (0+255),b
  5613  014EFE  C00E  F0C4         	movff	_actual_speed_kmh,?_sprintf+4
  5614  014F02  C00F  F0C5         	movff	_actual_speed_kmh+1,?_sprintf+5
  5615  014F06  C010  F0C6         	movff	_actual_speed_kmh+2,?_sprintf+6
  5616  014F0A  C011  F0C7         	movff	_actual_speed_kmh+3,?_sprintf+7
  5617  014F0E  EC83  F085         	call	_sprintf	;wreg free
  5618                           
  5619                           ;RemoteCan.c: 239: str[11] = '\0';
  5620  014F12  0E00               	movlw	0
  5621  014F14  0101               	movlb	1	; () banked
  5622  014F16  6F3B               	movwf	(_str+11)& (0+255),b
  5623                           
  5624                           ; BSR set to: 1
  5625                           ;RemoteCan.c: 240: LCD_write_string(str);
  5626  014F18  0E30               	movlw	low _str
  5627  014F1A  0100               	movlb	0	; () banked
  5628  014F1C  6F7F               	movwf	LCD_write_string@buffer& (0+255),b
  5629  014F1E  0E01               	movlw	high _str
  5630  014F20  0100               	movlb	0	; () banked
  5631  014F22  6F80               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  5632  014F24  ECEE  F0AE         	call	_LCD_write_string	;wreg free
  5633                           
  5634                           ;RemoteCan.c: 241: LCD_write_message("Km/h");
  5635  014F28  0EF3               	movlw	low STR_10
  5636  014F2A  0100               	movlb	0	; () banked
  5637  014F2C  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  5638  014F2E  0EFF               	movlw	high STR_10
  5639  014F30  0100               	movlb	0	; () banked
  5640  014F32  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5641  014F34  EC8D  F0AE         	call	_LCD_write_message	;wreg free
  5642                           
  5643                           ;RemoteCan.c: 242: LCD_goto_line(4);
  5644  014F38  0E04               	movlw	4
  5645  014F3A  EC8E  F0A9         	call	_LCD_goto_line
  5646                           
  5647                           ;RemoteCan.c: 243: LCD_write_message("====================");
  5648  014F3E  0EB9               	movlw	low STR_1
  5649  014F40  0100               	movlb	0	; () banked
  5650  014F42  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  5651  014F44  0EFF               	movlw	high STR_1
  5652  014F46  0100               	movlb	0	; () banked
  5653  014F48  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5654  014F4A  EC8D  F0AE         	call	_LCD_write_message	;wreg free
  5655  014F4E  0012               	return		;funcret
  5656  014F50                     __end_of_LCD_Handler:
  5657                           	opt stack 0
  5658                           tblptru	equ	0xFF8
  5659                           tblptrh	equ	0xFF7
  5660                           tblptrl	equ	0xFF6
  5661                           tablat	equ	0xFF5
  5662                           intcon	equ	0xFF2
  5663                           postinc0	equ	0xFEE
  5664                           wreg	equ	0xFE8
  5665                           status	equ	0xFD8
  5666                           
  5667 ;; *************** function _sprintf *****************
  5668 ;; Defined at:
  5669 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  5670 ;; Parameters:    Size  Location     Type
  5671 ;;  sp              2   96[BANK0 ] PTR unsigned char 
  5672 ;;		 -> str(12), 
  5673 ;;  f               2   98[BANK0 ] PTR const unsigned char 
  5674 ;;		 -> STR_9(12), 
  5675 ;; Auto vars:     Size  Location     Type
  5676 ;;  fval            4   20[BANK1 ] PTR const unsigned char 
  5677 ;;  tmpval          4   14[BANK1 ] struct .
  5678 ;;  val             4    8[BANK1 ] unsigned long 
  5679 ;;  cp              3    0        PTR const unsigned char 
  5680 ;;  prec            2   18[BANK1 ] int 
  5681 ;;  exp             2   12[BANK1 ] int 
  5682 ;;  flag            2    6[BANK1 ] unsigned short 
  5683 ;;  ap              2    4[BANK1 ] PTR void [1]
  5684 ;;		 -> ?_sprintf(2), 
  5685 ;;  len             2    0        unsigned int 
  5686 ;;  width           2    0        int 
  5687 ;;  c               1   24[BANK1 ] char 
  5688 ;;  d               1    0        unsigned char 
  5689 ;; Return value:  Size  Location     Type
  5690 ;;                  2   96[BANK0 ] int 
  5691 ;; Registers used:
  5692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5693 ;; Tracked objects:
  5694 ;;		On entry : 0/0
  5695 ;;		On exit  : 0/0
  5696 ;;		Unchanged: 0/0
  5697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5698 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5699 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0
  5700 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5701 ;;      Totals:         0      10      25       0       0       0       0       0       0       0       0       0       
      +0       0
  5702 ;;Total ram usage:       35 bytes
  5703 ;; Hardware stack levels used:    1
  5704 ;; Hardware stack levels required when called:    5
  5705 ;; This function calls:
  5706 ;;		___awdiv
  5707 ;;		___fladd
  5708 ;;		___flge
  5709 ;;		___flmul
  5710 ;;		___flneg
  5711 ;;		___flsub
  5712 ;;		___fltol
  5713 ;;		___lldiv
  5714 ;;		___llmod
  5715 ;;		___wmul
  5716 ;;		___xxtofl
  5717 ;;		__div_to_l_
  5718 ;;		__tdiv_to_l_
  5719 ;;		_fround
  5720 ;;		_isdigit
  5721 ;;		_scale
  5722 ;; This function is called by:
  5723 ;;		_LCD_Handler
  5724 ;; This function uses a non-reentrant model
  5725 ;;
  5726                           
  5727                           	psect	text8
  5728  010B06                     __ptext8:
  5729                           	opt stack 0
  5730  010B06                     _sprintf:
  5731                           	opt stack 24
  5732                           
  5733                           ;doprnt.c: 494: va_list ap;
  5734                           ;doprnt.c: 499: signed char c;
  5735                           ;doprnt.c: 501: int width;
  5736                           ;doprnt.c: 504: int prec;
  5737                           ;doprnt.c: 508: unsigned short flag;
  5738                           ;doprnt.c: 515: char d;
  5739                           ;doprnt.c: 516: double fval;
  5740                           ;doprnt.c: 517: int exp;
  5741                           ;doprnt.c: 523: union {
  5742                           ;doprnt.c: 524: unsigned long vd;
  5743                           ;doprnt.c: 525: double integ;
  5744                           ;doprnt.c: 526: } tmpval;
  5745                           ;doprnt.c: 528: unsigned long val;
  5746                           ;doprnt.c: 529: unsigned len;
  5747                           ;doprnt.c: 530: const char * cp;
  5748                           ;doprnt.c: 533: *ap = __va_start();
  5749                           
  5750                           ;incstack = 0
  5751  010B06  0EC4               	movlw	low (?_sprintf+4)
  5752  010B08  0101               	movlb	1	; () banked
  5753  010B0A  6F04               	movwf	sprintf@ap& (0+255),b
  5754  010B0C  0E00               	movlw	high (?_sprintf+4)
  5755  010B0E  0101               	movlb	1	; () banked
  5756  010B10  6F05               	movwf	(sprintf@ap+1)& (0+255),b
  5757                           
  5758                           ;doprnt.c: 536: while(c = *f++) {
  5759  010B12  EFB5  F089         	goto	l8385
  5760  010B16                     l8187:
  5761                           
  5762                           ; BSR set to: 1
  5763                           ;doprnt.c: 538: if(c != '%')
  5764  010B16  0E25               	movlw	37
  5765  010B18  0101               	movlb	1	; () banked
  5766  010B1A  1918               	xorwf	sprintf@c& (0+255),w,b
  5767  010B1C  B4D8               	btfsc	status,2,c
  5768  010B1E  D008               	goto	l8193
  5769                           
  5770                           ; BSR set to: 1
  5771                           ;doprnt.c: 540: {
  5772                           ;doprnt.c: 541: ((*sp++ = (c)));
  5773  010B20  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  5774  010B24  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  5775  010B28  C118  FFDF         	movff	sprintf@c,indf2
  5776  010B2C  EFB2  F089         	goto	l8383
  5777  010B30                     l8193:
  5778                           
  5779                           ;doprnt.c: 543: }
  5780                           ;doprnt.c: 548: flag = 0;
  5781  010B30  0E00               	movlw	0
  5782  010B32  0101               	movlb	1	; () banked
  5783  010B34  6F07               	movwf	(sprintf@flag+1)& (0+255),b
  5784  010B36  0E00               	movlw	0
  5785  010B38  6F06               	movwf	sprintf@flag& (0+255),b
  5786                           
  5787                           ; BSR set to: 1
  5788                           ;doprnt.c: 611: if(*f == '.') {
  5789  010B3A  C0C2  FFF6         	movff	sprintf@f,tblptrl
  5790  010B3E  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  5791  010B42                     	if	0	;tblptru may be non-zero
  5792  010B42                     	endif
  5793  010B42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5794  010B42  0E00               	movlw	low (__mediumconst shr (0+16))
  5795  010B44  6EF8               	movwf	tblptru,c
  5796  010B46                     	endif
  5797  010B46  0008               	tblrd		*
  5798  010B48  50F5               	movf	tablat,w,c
  5799  010B4A  0A2E               	xorlw	46
  5800  010B4C  A4D8               	btfss	status,2,c
  5801  010B4E  D03D               	goto	l8207
  5802                           
  5803                           ; BSR set to: 1
  5804                           ;doprnt.c: 612: flag |= 0x4000;
  5805  010B50  0101               	movlb	1	; () banked
  5806  010B52  8D07               	bsf	(sprintf@flag+1)& (0+255),6,b
  5807                           
  5808                           ;doprnt.c: 613: f++;
  5809  010B54  0100               	movlb	0	; () banked
  5810  010B56  4BC2               	infsnz	sprintf@f& (0+255),f,b
  5811  010B58  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  5812                           
  5813                           ; BSR set to: 0
  5814                           ;doprnt.c: 620: {
  5815                           ;doprnt.c: 621: prec = 0;
  5816  010B5A  0E00               	movlw	0
  5817  010B5C  0101               	movlb	1	; () banked
  5818  010B5E  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  5819  010B60  0E00               	movlw	0
  5820  010B62  6F12               	movwf	sprintf@prec& (0+255),b
  5821                           
  5822                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  5823  010B64  D025               	goto	l8205
  5824  010B66                     l8201:
  5825                           
  5826                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  5827  010B66  C112  F06E         	movff	sprintf@prec,___wmul@multiplier
  5828  010B6A  C113  F06F         	movff	sprintf@prec+1,___wmul@multiplier+1
  5829  010B6E  0E00               	movlw	0
  5830  010B70  0100               	movlb	0	; () banked
  5831  010B72  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5832  010B74  0E0A               	movlw	10
  5833  010B76  6F70               	movwf	___wmul@multiplicand& (0+255),b
  5834  010B78  EC72  F0AE         	call	___wmul	;wreg free
  5835  010B7C  C0C2  FFF6         	movff	sprintf@f,tblptrl
  5836  010B80  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  5837  010B84                     	if	0	;tblptru may be non-zero
  5838  010B84                     	endif
  5839  010B84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5840  010B84  0E00               	movlw	low (__mediumconst shr (0+16))
  5841  010B86  6EF8               	movwf	tblptru,c
  5842  010B88                     	endif
  5843  010B88  0008               	tblrd		*
  5844  010B8A  50F5               	movf	tablat,w,c
  5845  010B8C  0100               	movlb	0	; () banked
  5846  010B8E  276E               	addwf	?___wmul& (0+255),f,b
  5847  010B90  0E00               	movlw	0
  5848  010B92  0100               	movlb	0	; () banked
  5849  010B94  236F               	addwfc	(?___wmul+1)& (0+255),f,b
  5850  010B96  0ED0               	movlw	208
  5851  010B98  0100               	movlb	0	; () banked
  5852  010B9A  256E               	addwf	?___wmul& (0+255),w,b
  5853  010B9C  0101               	movlb	1	; () banked
  5854  010B9E  6F12               	movwf	sprintf@prec& (0+255),b
  5855  010BA0  0EFF               	movlw	255
  5856  010BA2  0100               	movlb	0	; () banked
  5857  010BA4  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  5858  010BA6  0101               	movlb	1	; () banked
  5859  010BA8  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  5860                           
  5861                           ; BSR set to: 1
  5862  010BAA  0100               	movlb	0	; () banked
  5863  010BAC  4BC2               	infsnz	sprintf@f& (0+255),f,b
  5864  010BAE  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  5865  010BB0                     l8205:
  5866  010BB0  C0C2  FFF6         	movff	sprintf@f,tblptrl
  5867  010BB4  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  5868  010BB8                     	if	0	;tblptru may be non-zero
  5869  010BB8                     	endif
  5870  010BB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5871  010BB8  0E00               	movlw	low (__mediumconst shr (0+16))
  5872  010BBA  6EF8               	movwf	tblptru,c
  5873  010BBC                     	endif
  5874  010BBC  0008               	tblrd		*
  5875  010BBE  50F5               	movf	tablat,w,c
  5876  010BC0  ECD9  F0AE         	call	_isdigit
  5877  010BC4  A0D8               	btfss	status,0,c
  5878  010BC6  D00C               	goto	l8215
  5879  010BC8  D7CE               	goto	l8201
  5880  010BCA                     l8207:
  5881                           
  5882                           ;doprnt.c: 626: prec = 0;
  5883  010BCA  0E00               	movlw	0
  5884  010BCC  0101               	movlb	1	; () banked
  5885  010BCE  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  5886  010BD0  0E00               	movlw	0
  5887  010BD2  6F12               	movwf	sprintf@prec& (0+255),b
  5888                           
  5889                           ; BSR set to: 1
  5890                           ;doprnt.c: 628: flag |= 0x1000;
  5891  010BD4  0101               	movlb	1	; () banked
  5892  010BD6  8907               	bsf	(sprintf@flag+1)& (0+255),4,b
  5893                           
  5894                           ; BSR set to: 1
  5895                           ;doprnt.c: 630: }
  5896                           ;doprnt.c: 635: switch(c = *f++) {
  5897  010BD8  D003               	goto	l8215
  5898  010BDA                     l8211:
  5899                           
  5900                           ; BSR set to: 1
  5901                           ;doprnt.c: 663: flag |= 0x400;
  5902  010BDA  0101               	movlb	1	; () banked
  5903  010BDC  8507               	bsf	(sprintf@flag+1)& (0+255),2,b
  5904                           
  5905                           ;doprnt.c: 664: break;
  5906  010BDE  D015               	goto	l8217
  5907  010BE0                     l8215:
  5908  010BE0  C0C2  FFF6         	movff	sprintf@f,tblptrl
  5909  010BE4  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  5910  010BE8  0100               	movlb	0	; () banked
  5911  010BEA  4BC2               	infsnz	sprintf@f& (0+255),f,b
  5912  010BEC  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  5913  010BEE                     	if	0	;tblptru may be non-zero
  5914  010BEE                     	endif
  5915  010BEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5916  010BEE  0E00               	movlw	low (__mediumconst shr (0+16))
  5917  010BF0  6EF8               	movwf	tblptru,c
  5918  010BF2                     	endif
  5919  010BF2  0008               	tblrd		*
  5920  010BF4  CFF5 F118          	movff	tablat,sprintf@c
  5921  010BF8  0101               	movlb	1	; () banked
  5922  010BFA  5118               	movf	sprintf@c& (0+255),w,b
  5923                           
  5924                           ; Switch size 1, requested type "space"
  5925                           ; Number of cases is 2, Range of values is 0 to 102
  5926                           ; switch strategies available:
  5927                           ; Name         Instructions Cycles
  5928                           ; simple_byte            7     4 (average)
  5929                           ;	Chosen strategy is simple_byte
  5930  010BFC  0A00               	xorlw	0	; case 0
  5931  010BFE  B4D8               	btfsc	status,2,c
  5932  010C00  D3C5               	goto	l8387
  5933  010C02  0A66               	xorlw	102	; case 102
  5934  010C04  B4D8               	btfsc	status,2,c
  5935  010C06  D7E9               	goto	l8211
  5936  010C08  D3B0               	goto	l8385
  5937  010C0A                     l8217:
  5938                           
  5939                           ; BSR set to: 1
  5940                           ;doprnt.c: 825: if(flag & (0x700)) {
  5941  010C0A  0E07               	movlw	7
  5942  010C0C  0101               	movlb	1	; () banked
  5943  010C0E  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  5944  010C10  B4D8               	btfsc	status,2,c
  5945  010C12  D353               	goto	l8365
  5946                           
  5947                           ; BSR set to: 1
  5948                           ;doprnt.c: 827: if(flag & 0x1000)
  5949  010C14  0101               	movlb	1	; () banked
  5950  010C16  A907               	btfss	(sprintf@flag+1)& (0+255),4,b
  5951  010C18  D005               	goto	l8223
  5952                           
  5953                           ; BSR set to: 1
  5954                           ;doprnt.c: 829: prec = 6;
  5955  010C1A  0E00               	movlw	0
  5956  010C1C  0101               	movlb	1	; () banked
  5957  010C1E  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  5958  010C20  0E06               	movlw	6
  5959  010C22  6F12               	movwf	sprintf@prec& (0+255),b
  5960  010C24                     l8223:
  5961                           
  5962                           ; BSR set to: 1
  5963                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  5964  010C24  C104  FFD9         	movff	sprintf@ap,fsr2l
  5965  010C28  C105  FFDA         	movff	sprintf@ap+1,fsr2h
  5966  010C2C  CFDE F114          	movff	postinc2,sprintf@fval
  5967  010C30  CFDE F115          	movff	postinc2,sprintf@fval+1
  5968  010C34  CFDE F116          	movff	postinc2,sprintf@fval+2
  5969  010C38  CFDE F117          	movff	postinc2,sprintf@fval+3
  5970                           
  5971                           ; BSR set to: 1
  5972  010C3C  0E04               	movlw	4
  5973  010C3E  0101               	movlb	1	; () banked
  5974  010C40  2704               	addwf	sprintf@ap& (0+255),f,b
  5975  010C42  0E00               	movlw	0
  5976  010C44  2305               	addwfc	(sprintf@ap+1)& (0+255),f,b
  5977                           
  5978                           ; BSR set to: 1
  5979                           ;doprnt.c: 831: if(fval < 0.0) {
  5980  010C46  0101               	movlb	1	; () banked
  5981  010C48  AF17               	btfss	(sprintf@fval+3)& (0+255),7,b
  5982  010C4A  D015               	goto	l8233
  5983                           
  5984                           ; BSR set to: 1
  5985                           ;doprnt.c: 832: fval = -fval;
  5986  010C4C  C114  F095         	movff	sprintf@fval,___flneg@f1
  5987  010C50  C115  F096         	movff	sprintf@fval+1,___flneg@f1+1
  5988  010C54  C116  F097         	movff	sprintf@fval+2,___flneg@f1+2
  5989  010C58  C117  F098         	movff	sprintf@fval+3,___flneg@f1+3
  5990  010C5C  EC56  F0AE         	call	___flneg	;wreg free
  5991  010C60  C095  F114         	movff	?___flneg,sprintf@fval
  5992  010C64  C096  F115         	movff	?___flneg+1,sprintf@fval+1
  5993  010C68  C097  F116         	movff	?___flneg+2,sprintf@fval+2
  5994  010C6C  C098  F117         	movff	?___flneg+3,sprintf@fval+3
  5995                           
  5996                           ;doprnt.c: 833: flag |= 0x03;
  5997  010C70  0E03               	movlw	3
  5998  010C72  0101               	movlb	1	; () banked
  5999  010C74  1306               	iorwf	sprintf@flag& (0+255),f,b
  6000  010C76                     l8233:
  6001                           
  6002                           ; BSR set to: 1
  6003                           ;doprnt.c: 834: }
  6004                           ;doprnt.c: 835: exp = 0;
  6005  010C76  0E00               	movlw	0
  6006  010C78  0101               	movlb	1	; () banked
  6007  010C7A  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  6008  010C7C  0E00               	movlw	0
  6009  010C7E  6F0C               	movwf	sprintf@exp& (0+255),b
  6010                           
  6011                           ; BSR set to: 1
  6012                           ;doprnt.c: 836: if( fval!=0) {
  6013  010C80  0101               	movlb	1	; () banked
  6014  010C82  5114               	movf	sprintf@fval& (0+255),w,b
  6015  010C84  0101               	movlb	1	; () banked
  6016  010C86  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6017  010C88  0101               	movlb	1	; () banked
  6018  010C8A  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6019  010C8C  0101               	movlb	1	; () banked
  6020  010C8E  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  6021  010C90  B4D8               	btfsc	status,2,c
  6022  010C92  D08E               	goto	l8261
  6023                           
  6024                           ; BSR set to: 1
  6025                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  6026  010C94  0101               	movlb	1	; () banked
  6027  010C96  3516               	rlcf	(sprintf@fval+2)& (0+255),w,b
  6028  010C98  3517               	rlcf	(sprintf@fval+3)& (0+255),w,b
  6029  010C9A  0F82               	addlw	130
  6030  010C9C  0101               	movlb	1	; () banked
  6031  010C9E  6F0C               	movwf	sprintf@exp& (0+255),b
  6032  010CA0  0101               	movlb	1	; () banked
  6033  010CA2  6B0D               	clrf	(sprintf@exp+1)& (0+255),b
  6034  010CA4  0EFF               	movlw	255
  6035  010CA6  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  6036                           
  6037                           ; BSR set to: 1
  6038                           ;doprnt.c: 838: exp--;
  6039  010CA8  0101               	movlb	1	; () banked
  6040  010CAA  070C               	decf	sprintf@exp& (0+255),f,b
  6041  010CAC  A0D8               	btfss	status,0,c
  6042  010CAE  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  6043                           
  6044                           ; BSR set to: 1
  6045                           ;doprnt.c: 839: exp *= 3;
  6046  010CB0  C10C  F06E         	movff	sprintf@exp,___wmul@multiplier
  6047  010CB4  C10D  F06F         	movff	sprintf@exp+1,___wmul@multiplier+1
  6048  010CB8  0E00               	movlw	0
  6049  010CBA  0100               	movlb	0	; () banked
  6050  010CBC  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6051  010CBE  0E03               	movlw	3
  6052  010CC0  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6053  010CC2  EC72  F0AE         	call	___wmul	;wreg free
  6054  010CC6  C06E  F10C         	movff	?___wmul,sprintf@exp
  6055  010CCA  C06F  F10D         	movff	?___wmul+1,sprintf@exp+1
  6056                           
  6057                           ;doprnt.c: 840: exp /= 10;
  6058  010CCE  C10C  F074         	movff	sprintf@exp,___awdiv@dividend
  6059  010CD2  C10D  F075         	movff	sprintf@exp+1,___awdiv@dividend+1
  6060  010CD6  0E00               	movlw	0
  6061  010CD8  0100               	movlb	0	; () banked
  6062  010CDA  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  6063  010CDC  0E0A               	movlw	10
  6064  010CDE  6F76               	movwf	___awdiv@divisor& (0+255),b
  6065  010CE0  EC65  F0AA         	call	___awdiv	;wreg free
  6066  010CE4  C074  F10C         	movff	?___awdiv,sprintf@exp
  6067  010CE8  C075  F10D         	movff	?___awdiv+1,sprintf@exp+1
  6068                           
  6069                           ;doprnt.c: 841: if(exp < 0)
  6070  010CEC  0101               	movlb	1	; () banked
  6071  010CEE  AF0D               	btfss	(sprintf@exp+1)& (0+255),7,b
  6072  010CF0  D004               	goto	l8249
  6073                           
  6074                           ; BSR set to: 1
  6075                           ;doprnt.c: 842: exp--;
  6076  010CF2  0101               	movlb	1	; () banked
  6077  010CF4  070C               	decf	sprintf@exp& (0+255),f,b
  6078  010CF6  A0D8               	btfss	status,0,c
  6079  010CF8  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  6080  010CFA                     l8249:
  6081                           
  6082                           ; BSR set to: 1
  6083                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  6084  010CFA  0101               	movlb	1	; () banked
  6085  010CFC  510C               	movf	sprintf@exp& (0+255),w,b
  6086  010CFE  0800               	sublw	0
  6087  010D00  ECDB  F090         	call	_scale
  6088  010D04  C095  F10E         	movff	?_scale,sprintf@tmpval
  6089  010D08  C096  F10F         	movff	?_scale+1,sprintf@tmpval+1
  6090  010D0C  C097  F110         	movff	?_scale+2,sprintf@tmpval+2
  6091  010D10  C098  F111         	movff	?_scale+3,sprintf@tmpval+3
  6092                           
  6093                           ;doprnt.c: 847: tmpval.integ *= fval;
  6094  010D14  C10E  F07C         	movff	sprintf@tmpval,___flmul@b
  6095  010D18  C10F  F07D         	movff	sprintf@tmpval+1,___flmul@b+1
  6096  010D1C  C110  F07E         	movff	sprintf@tmpval+2,___flmul@b+2
  6097  010D20  C111  F07F         	movff	sprintf@tmpval+3,___flmul@b+3
  6098  010D24  C114  F080         	movff	sprintf@fval,___flmul@a
  6099  010D28  C115  F081         	movff	sprintf@fval+1,___flmul@a+1
  6100  010D2C  C116  F082         	movff	sprintf@fval+2,___flmul@a+2
  6101  010D30  C117  F083         	movff	sprintf@fval+3,___flmul@a+3
  6102  010D34  EC42  F098         	call	___flmul	;wreg free
  6103  010D38  C07C  F10E         	movff	?___flmul,sprintf@tmpval
  6104  010D3C  C07D  F10F         	movff	?___flmul+1,sprintf@tmpval+1
  6105  010D40  C07E  F110         	movff	?___flmul+2,sprintf@tmpval+2
  6106  010D44  C07F  F111         	movff	?___flmul+3,sprintf@tmpval+3
  6107                           
  6108                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  6109  010D48  C10E  F06E         	movff	sprintf@tmpval,___flge@ff1
  6110  010D4C  C10F  F06F         	movff	sprintf@tmpval+1,___flge@ff1+1
  6111  010D50  C110  F070         	movff	sprintf@tmpval+2,___flge@ff1+2
  6112  010D54  C111  F071         	movff	sprintf@tmpval+3,___flge@ff1+3
  6113  010D58  0E00               	movlw	0
  6114  010D5A  0100               	movlb	0	; () banked
  6115  010D5C  6F72               	movwf	___flge@ff2& (0+255),b
  6116  010D5E  0E00               	movlw	0
  6117  010D60  6F73               	movwf	(___flge@ff2+1)& (0+255),b
  6118  010D62  0E80               	movlw	128
  6119  010D64  6F74               	movwf	(___flge@ff2+2)& (0+255),b
  6120  010D66  0E3F               	movlw	63
  6121  010D68  6F75               	movwf	(___flge@ff2+3)& (0+255),b
  6122  010D6A  EC5B  F0A5         	call	___flge	;wreg free
  6123  010D6E  0100               	movlb	0	; () banked
  6124  010D70  B0D8               	btfsc	status,0,c
  6125  010D72  D005               	goto	l8257
  6126                           
  6127                           ; BSR set to: 0
  6128                           ;doprnt.c: 849: exp--;
  6129  010D74  0101               	movlb	1	; () banked
  6130  010D76  070C               	decf	sprintf@exp& (0+255),f,b
  6131  010D78  A0D8               	btfss	status,0,c
  6132  010D7A  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  6133  010D7C  D019               	goto	l8261
  6134  010D7E                     l8257:
  6135                           
  6136                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  6137  010D7E  C10E  F06E         	movff	sprintf@tmpval,___flge@ff1
  6138  010D82  C10F  F06F         	movff	sprintf@tmpval+1,___flge@ff1+1
  6139  010D86  C110  F070         	movff	sprintf@tmpval+2,___flge@ff1+2
  6140  010D8A  C111  F071         	movff	sprintf@tmpval+3,___flge@ff1+3
  6141  010D8E  0E00               	movlw	0
  6142  010D90  0100               	movlb	0	; () banked
  6143  010D92  6F72               	movwf	___flge@ff2& (0+255),b
  6144  010D94  0E00               	movlw	0
  6145  010D96  6F73               	movwf	(___flge@ff2+1)& (0+255),b
  6146  010D98  0E20               	movlw	32
  6147  010D9A  6F74               	movwf	(___flge@ff2+2)& (0+255),b
  6148  010D9C  0E41               	movlw	65
  6149  010D9E  6F75               	movwf	(___flge@ff2+3)& (0+255),b
  6150  010DA0  EC5B  F0A5         	call	___flge	;wreg free
  6151  010DA4  0100               	movlb	0	; () banked
  6152  010DA6  A0D8               	btfss	status,0,c
  6153  010DA8  D003               	goto	l8261
  6154                           
  6155                           ; BSR set to: 0
  6156                           ;doprnt.c: 851: exp++;
  6157  010DAA  0101               	movlb	1	; () banked
  6158  010DAC  4B0C               	infsnz	sprintf@exp& (0+255),f,b
  6159  010DAE  2B0D               	incf	(sprintf@exp+1)& (0+255),f,b
  6160  010DB0                     l8261:
  6161                           
  6162                           ;doprnt.c: 852: }
  6163                           ;doprnt.c: 1112: if(prec <= 12)
  6164  010DB0  0101               	movlb	1	; () banked
  6165  010DB2  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  6166  010DB4  D008               	goto	l8263
  6167  010DB6  0101               	movlb	1	; () banked
  6168  010DB8  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  6169  010DBA  E123               	bnz	l8265
  6170  010DBC  0E0D               	movlw	13
  6171  010DBE  0101               	movlb	1	; () banked
  6172  010DC0  5D12               	subwf	sprintf@prec& (0+255),w,b
  6173  010DC2  B0D8               	btfsc	status,0,c
  6174  010DC4  D01E               	goto	l8265
  6175  010DC6                     l8263:
  6176                           
  6177                           ; BSR set to: 1
  6178                           ;doprnt.c: 1113: fval += fround(prec);
  6179  010DC6  C114  F0A2         	movff	sprintf@fval,___fladd@b
  6180  010DCA  C115  F0A3         	movff	sprintf@fval+1,___fladd@b+1
  6181  010DCE  C116  F0A4         	movff	sprintf@fval+2,___fladd@b+2
  6182  010DD2  C117  F0A5         	movff	sprintf@fval+3,___fladd@b+3
  6183  010DD6  0101               	movlb	1	; () banked
  6184  010DD8  5112               	movf	sprintf@prec& (0+255),w,b
  6185  010DDA  EC67  F0A0         	call	_fround
  6186  010DDE  C095  F0A6         	movff	?_fround,___fladd@a
  6187  010DE2  C096  F0A7         	movff	?_fround+1,___fladd@a+1
  6188  010DE6  C097  F0A8         	movff	?_fround+2,___fladd@a+2
  6189  010DEA  C098  F0A9         	movff	?_fround+3,___fladd@a+3
  6190  010DEE  ECEE  F095         	call	___fladd	;wreg free
  6191  010DF2  C0A2  F114         	movff	?___fladd,sprintf@fval
  6192  010DF6  C0A3  F115         	movff	?___fladd+1,sprintf@fval+1
  6193  010DFA  C0A4  F116         	movff	?___fladd+2,sprintf@fval+2
  6194  010DFE  C0A5  F117         	movff	?___fladd+3,sprintf@fval+3
  6195  010E02                     l8265:
  6196                           
  6197                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  6198  010E02  0101               	movlb	1	; () banked
  6199  010E04  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6200  010E06  D008               	goto	l8267
  6201  010E08  0101               	movlb	1	; () banked
  6202  010E0A  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  6203  010E0C  E12E               	bnz	l8273
  6204  010E0E  0E0A               	movlw	10
  6205  010E10  0101               	movlb	1	; () banked
  6206  010E12  5D0C               	subwf	sprintf@exp& (0+255),w,b
  6207  010E14  B0D8               	btfsc	status,0,c
  6208  010E16  D029               	goto	l8273
  6209  010E18                     l8267:
  6210                           
  6211                           ; BSR set to: 1
  6212  010E18  0101               	movlb	1	; () banked
  6213  010E1A  5114               	movf	sprintf@fval& (0+255),w,b
  6214  010E1C  0101               	movlb	1	; () banked
  6215  010E1E  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6216  010E20  0101               	movlb	1	; () banked
  6217  010E22  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6218  010E24  0101               	movlb	1	; () banked
  6219  010E26  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  6220  010E28  B4D8               	btfsc	status,2,c
  6221  010E2A  D06D               	goto	l8287
  6222                           
  6223                           ; BSR set to: 1
  6224  010E2C  C114  F0B6         	movff	sprintf@fval,___fltol@f1
  6225  010E30  C115  F0B7         	movff	sprintf@fval+1,___fltol@f1+1
  6226  010E34  C116  F0B8         	movff	sprintf@fval+2,___fltol@f1+2
  6227  010E38  C117  F0B9         	movff	sprintf@fval+3,___fltol@f1+3
  6228  010E3C  EC08  F0A9         	call	___fltol	;wreg free
  6229  010E40  0100               	movlb	0	; () banked
  6230  010E42  51B6               	movf	?___fltol& (0+255),w,b
  6231  010E44  0100               	movlb	0	; () banked
  6232  010E46  11B7               	iorwf	(?___fltol+1)& (0+255),w,b
  6233  010E48  0100               	movlb	0	; () banked
  6234  010E4A  11B8               	iorwf	(?___fltol+2)& (0+255),w,b
  6235  010E4C  0100               	movlb	0	; () banked
  6236  010E4E  11B9               	iorwf	(?___fltol+3)& (0+255),w,b
  6237  010E50  A4D8               	btfss	status,2,c
  6238  010E52  D059               	goto	l8287
  6239                           
  6240                           ; BSR set to: 0
  6241  010E54  0101               	movlb	1	; () banked
  6242  010E56  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6243  010E58  D056               	goto	l8287
  6244  010E5A  0101               	movlb	1	; () banked
  6245  010E5C  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  6246  010E5E  E105               	bnz	l8273
  6247  010E60  0E02               	movlw	2
  6248  010E62  0101               	movlb	1	; () banked
  6249  010E64  5D0C               	subwf	sprintf@exp& (0+255),w,b
  6250  010E66  A0D8               	btfss	status,0,c
  6251  010E68  D04E               	goto	l8287
  6252  010E6A                     l8273:
  6253                           
  6254                           ; BSR set to: 1
  6255                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  6256  010E6A  C10E  F06E         	movff	sprintf@tmpval,___flge@ff1
  6257  010E6E  C10F  F06F         	movff	sprintf@tmpval+1,___flge@ff1+1
  6258  010E72  C110  F070         	movff	sprintf@tmpval+2,___flge@ff1+2
  6259  010E76  C111  F071         	movff	sprintf@tmpval+3,___flge@ff1+3
  6260  010E7A  0E5F               	movlw	95
  6261  010E7C  0100               	movlb	0	; () banked
  6262  010E7E  6F72               	movwf	___flge@ff2& (0+255),b
  6263  010E80  0E70               	movlw	112
  6264  010E82  6F73               	movwf	(___flge@ff2+1)& (0+255),b
  6265  010E84  0E89               	movlw	137
  6266  010E86  6F74               	movwf	(___flge@ff2+2)& (0+255),b
  6267  010E88  0E40               	movlw	64
  6268  010E8A  6F75               	movwf	(___flge@ff2+3)& (0+255),b
  6269  010E8C  EC5B  F0A5         	call	___flge	;wreg free
  6270  010E90  0100               	movlb	0	; () banked
  6271  010E92  B0D8               	btfsc	status,0,c
  6272  010E94  D003               	goto	l8277
  6273                           
  6274                           ; BSR set to: 0
  6275                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  6276  010E96  0101               	movlb	1	; () banked
  6277  010E98  0EF7               	movlw	247
  6278  010E9A  D002               	goto	L3
  6279  010E9C                     l8277:
  6280                           
  6281                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  6282  010E9C  0101               	movlb	1	; () banked
  6283  010E9E  0EF8               	movlw	248
  6284  010EA0                     L3:
  6285  010EA0  270C               	addwf	sprintf@exp& (0+255),f,b
  6286  010EA2  0EFF               	movlw	255
  6287  010EA4  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  6288                           
  6289                           ; BSR set to: 1
  6290                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  6291                           
  6292                           ; BSR set to: 1
  6293  010EA6  0101               	movlb	1	; () banked
  6294  010EA8  510C               	movf	sprintf@exp& (0+255),w,b
  6295  010EAA  ECDB  F090         	call	_scale
  6296  010EAE  C095  F10E         	movff	?_scale,sprintf@tmpval
  6297  010EB2  C096  F10F         	movff	?_scale+1,sprintf@tmpval+1
  6298  010EB6  C097  F110         	movff	?_scale+2,sprintf@tmpval+2
  6299  010EBA  C098  F111         	movff	?_scale+3,sprintf@tmpval+3
  6300  010EBE  C114  F06E         	movff	sprintf@fval,__div_to_l_@f1
  6301  010EC2  C115  F06F         	movff	sprintf@fval+1,__div_to_l_@f1+1
  6302  010EC6  C116  F070         	movff	sprintf@fval+2,__div_to_l_@f1+2
  6303  010ECA  C117  F071         	movff	sprintf@fval+3,__div_to_l_@f1+3
  6304  010ECE  C10E  F072         	movff	sprintf@tmpval,__div_to_l_@f2
  6305  010ED2  C10F  F073         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  6306  010ED6  C110  F074         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  6307  010EDA  C111  F075         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  6308  010EDE  EC23  F0A6         	call	__div_to_l_	;wreg free
  6309  010EE2  C06E  F108         	movff	?__div_to_l_,sprintf@val
  6310  010EE6  C06F  F109         	movff	?__div_to_l_+1,sprintf@val+1
  6311  010EEA  C070  F10A         	movff	?__div_to_l_+2,sprintf@val+2
  6312  010EEE  C071  F10B         	movff	?__div_to_l_+3,sprintf@val+3
  6313                           
  6314                           ;doprnt.c: 1129: fval = 0.0;
  6315  010EF2  0E00               	movlw	0
  6316  010EF4  0101               	movlb	1	; () banked
  6317  010EF6  6F14               	movwf	sprintf@fval& (0+255),b
  6318  010EF8  0E00               	movlw	0
  6319  010EFA  6F15               	movwf	(sprintf@fval+1)& (0+255),b
  6320  010EFC  0E00               	movlw	0
  6321  010EFE  6F16               	movwf	(sprintf@fval+2)& (0+255),b
  6322  010F00  0E00               	movlw	0
  6323  010F02  6F17               	movwf	(sprintf@fval+3)& (0+255),b
  6324                           
  6325                           ;doprnt.c: 1130: } else {
  6326  010F04  D03C               	goto	l8291
  6327  010F06                     l8287:
  6328                           
  6329                           ;doprnt.c: 1131: val = (unsigned long)fval;
  6330  010F06  C114  F0B6         	movff	sprintf@fval,___fltol@f1
  6331  010F0A  C115  F0B7         	movff	sprintf@fval+1,___fltol@f1+1
  6332  010F0E  C116  F0B8         	movff	sprintf@fval+2,___fltol@f1+2
  6333  010F12  C117  F0B9         	movff	sprintf@fval+3,___fltol@f1+3
  6334  010F16  EC08  F0A9         	call	___fltol	;wreg free
  6335  010F1A  C0B6  F108         	movff	?___fltol,sprintf@val
  6336  010F1E  C0B7  F109         	movff	?___fltol+1,sprintf@val+1
  6337  010F22  C0B8  F10A         	movff	?___fltol+2,sprintf@val+2
  6338  010F26  C0B9  F10B         	movff	?___fltol+3,sprintf@val+3
  6339                           
  6340                           ;doprnt.c: 1132: fval -= (double)val;
  6341  010F2A  C114  F0B6         	movff	sprintf@fval,___flsub@b
  6342  010F2E  C115  F0B7         	movff	sprintf@fval+1,___flsub@b+1
  6343  010F32  C116  F0B8         	movff	sprintf@fval+2,___flsub@b+2
  6344  010F36  C117  F0B9         	movff	sprintf@fval+3,___flsub@b+3
  6345  010F3A  C108  F06E         	movff	sprintf@val,___xxtofl@val
  6346  010F3E  C109  F06F         	movff	sprintf@val+1,___xxtofl@val+1
  6347  010F42  C10A  F070         	movff	sprintf@val+2,___xxtofl@val+2
  6348  010F46  C10B  F071         	movff	sprintf@val+3,___xxtofl@val+3
  6349  010F4A  0E00               	movlw	0
  6350  010F4C  ECE2  F0A1         	call	___xxtofl
  6351  010F50  C06E  F0BA         	movff	?___xxtofl,___flsub@a
  6352  010F54  C06F  F0BB         	movff	?___xxtofl+1,___flsub@a+1
  6353  010F58  C070  F0BC         	movff	?___xxtofl+2,___flsub@a+2
  6354  010F5C  C071  F0BD         	movff	?___xxtofl+3,___flsub@a+3
  6355  010F60  ECB3  F0AD         	call	___flsub	;wreg free
  6356  010F64  C0B6  F114         	movff	?___flsub,sprintf@fval
  6357  010F68  C0B7  F115         	movff	?___flsub+1,sprintf@fval+1
  6358  010F6C  C0B8  F116         	movff	?___flsub+2,sprintf@fval+2
  6359  010F70  C0B9  F117         	movff	?___flsub+3,sprintf@fval+3
  6360                           
  6361                           ;doprnt.c: 1133: exp = 0;
  6362  010F74  0E00               	movlw	0
  6363  010F76  0101               	movlb	1	; () banked
  6364  010F78  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  6365  010F7A  0E00               	movlw	0
  6366  010F7C  6F0C               	movwf	sprintf@exp& (0+255),b
  6367  010F7E                     l8291:
  6368                           
  6369                           ; BSR set to: 1
  6370                           ;doprnt.c: 1134: }
  6371                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  6372  010F7E  0E01               	movlw	1
  6373  010F80  0101               	movlb	1	; () banked
  6374  010F82  6F18               	movwf	sprintf@c& (0+255),b
  6375  010F84                     l8293:
  6376                           
  6377                           ; BSR set to: 1
  6378  010F84  0E0A               	movlw	10
  6379  010F86  0101               	movlb	1	; () banked
  6380  010F88  1918               	xorwf	sprintf@c& (0+255),w,b
  6381  010F8A  B4D8               	btfsc	status,2,c
  6382  010F8C  D021               	goto	l8305
  6383                           
  6384                           ; BSR set to: 1
  6385                           ;doprnt.c: 1137: if(val < dpowers[c])
  6386                           
  6387                           ; BSR set to: 1
  6388                           
  6389                           ; BSR set to: 1
  6390  010F8E  0101               	movlb	1	; () banked
  6391  010F90  5118               	movf	sprintf@c& (0+255),w,b
  6392  010F92  0D04               	mullw	4
  6393  010F94  0E67               	movlw	low _dpowers
  6394  010F96  24F3               	addwf	prodl,w,c
  6395  010F98  6EF6               	movwf	tblptrl,c
  6396  010F9A  0EFF               	movlw	high _dpowers
  6397  010F9C  20F4               	addwfc	prodh,w,c
  6398  010F9E  6EF7               	movwf	tblptrh,c
  6399  010FA0                     	if	1	;There are 3 active tblptr bytes
  6400  010FA0  6AF8               	clrf	tblptru,c
  6401  010FA2  0E00               	movlw	low (__mediumconst shr (0+16))
  6402  010FA4  22F8               	addwfc	tblptru,f,c
  6403  010FA6                     	endif
  6404  010FA6  0009               	tblrd		*+
  6405  010FA8  50F5               	movf	tablat,w,c
  6406  010FAA  0101               	movlb	1	; () banked
  6407  010FAC  5D08               	subwf	sprintf@val& (0+255),w,b
  6408  010FAE  0009               	tblrd		*+
  6409  010FB0  50F5               	movf	tablat,w,c
  6410  010FB2  0101               	movlb	1	; () banked
  6411  010FB4  5909               	subwfb	(sprintf@val+1)& (0+255),w,b
  6412  010FB6  0009               	tblrd		*+
  6413  010FB8  50F5               	movf	tablat,w,c
  6414  010FBA  0101               	movlb	1	; () banked
  6415  010FBC  590A               	subwfb	(sprintf@val+2)& (0+255),w,b
  6416  010FBE  0009               	tblrd		*+
  6417  010FC0  50F5               	movf	tablat,w,c
  6418  010FC2  0101               	movlb	1	; () banked
  6419  010FC4  590B               	subwfb	(sprintf@val+3)& (0+255),w,b
  6420  010FC6  A0D8               	btfss	status,0,c
  6421  010FC8  D003               	goto	l8305
  6422                           
  6423                           ; BSR set to: 1
  6424                           
  6425                           ; BSR set to: 1
  6426                           
  6427                           ; BSR set to: 1
  6428                           ;doprnt.c: 1138: break;
  6429  010FCA  0101               	movlb	1	; () banked
  6430  010FCC  2B18               	incf	sprintf@c& (0+255),f,b
  6431  010FCE  D7DA               	goto	l8293
  6432  010FD0                     l8305:
  6433                           
  6434                           ; BSR set to: 1
  6435                           ;doprnt.c: 1175: {
  6436                           ;doprnt.c: 1188: if(flag & 0x03)
  6437  010FD0  0E03               	movlw	3
  6438  010FD2  0101               	movlb	1	; () banked
  6439  010FD4  1506               	andwf	sprintf@flag& (0+255),w,b
  6440  010FD6  0100               	movlb	0	; () banked
  6441  010FD8  6FC8               	movwf	??_sprintf& (0+255),b
  6442  010FDA  0E00               	movlw	0
  6443  010FDC  0101               	movlb	1	; () banked
  6444  010FDE  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  6445  010FE0  0100               	movlb	0	; () banked
  6446  010FE2  6FC9               	movwf	(??_sprintf+1)& (0+255),b
  6447  010FE4  0100               	movlb	0	; () banked
  6448  010FE6  51C8               	movf	??_sprintf& (0+255),w,b
  6449  010FE8  0100               	movlb	0	; () banked
  6450  010FEA  11C9               	iorwf	(??_sprintf+1)& (0+255),w,b
  6451  010FEC  B4D8               	btfsc	status,2,c
  6452  010FEE  D058               	goto	l8319
  6453                           
  6454                           ; BSR set to: 0
  6455                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  6456  010FF0  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  6457  010FF4  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  6458  010FF8  0E2D               	movlw	45
  6459  010FFA  D050               	goto	L4
  6460  010FFC                     l8309:
  6461                           
  6462                           ; BSR set to: 0
  6463  010FFC  0100               	movlb	0	; () banked
  6464  010FFE  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  6465  011000  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  6466                           
  6467                           ; BSR set to: 0
  6468                           ;doprnt.c: 1195: }
  6469                           ;doprnt.c: 1196: while(c--) {
  6470  011002  D04E               	goto	l8319
  6471  011004                     l8311:
  6472                           
  6473                           ;doprnt.c: 1200: {
  6474                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  6475  011004  C108  F06E         	movff	sprintf@val,___lldiv@dividend
  6476  011008  C109  F06F         	movff	sprintf@val+1,___lldiv@dividend+1
  6477  01100C  C10A  F070         	movff	sprintf@val+2,___lldiv@dividend+2
  6478  011010  C10B  F071         	movff	sprintf@val+3,___lldiv@dividend+3
  6479  011014  0101               	movlb	1	; () banked
  6480  011016  5118               	movf	sprintf@c& (0+255),w,b
  6481  011018  0D04               	mullw	4
  6482  01101A  0E67               	movlw	low _dpowers
  6483  01101C  24F3               	addwf	prodl,w,c
  6484  01101E  6EF6               	movwf	tblptrl,c
  6485  011020  0EFF               	movlw	high _dpowers
  6486  011022  20F4               	addwfc	prodh,w,c
  6487  011024  6EF7               	movwf	tblptrh,c
  6488  011026                     	if	1	;There are 3 active tblptr bytes
  6489  011026  6AF8               	clrf	tblptru,c
  6490  011028  0E00               	movlw	low (__mediumconst shr (0+16))
  6491  01102A  22F8               	addwfc	tblptru,f,c
  6492  01102C                     	endif
  6493  01102C  0009               	tblrd		*+
  6494  01102E  CFF5 F072          	movff	tablat,___lldiv@divisor
  6495  011032  0009               	tblrd		*+
  6496  011034  CFF5 F073          	movff	tablat,___lldiv@divisor+1
  6497  011038  0009               	tblrd		*+
  6498  01103A  CFF5 F074          	movff	tablat,___lldiv@divisor+2
  6499  01103E  000A               	tblrd		*-
  6500  011040  CFF5 F075          	movff	tablat,___lldiv@divisor+3
  6501  011044  EC23  F0AB         	call	___lldiv	;wreg free
  6502  011048  C06E  F10E         	movff	?___lldiv,sprintf@tmpval
  6503  01104C  C06F  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  6504  011050  C070  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  6505  011054  C071  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  6506                           
  6507                           ;doprnt.c: 1202: tmpval.vd %= 10;
  6508  011058  C10E  F06E         	movff	sprintf@tmpval,___llmod@dividend
  6509  01105C  C10F  F06F         	movff	sprintf@tmpval+1,___llmod@dividend+1
  6510  011060  C110  F070         	movff	sprintf@tmpval+2,___llmod@dividend+2
  6511  011064  C111  F071         	movff	sprintf@tmpval+3,___llmod@dividend+3
  6512  011068  0E0A               	movlw	10
  6513  01106A  0100               	movlb	0	; () banked
  6514  01106C  6F72               	movwf	___llmod@divisor& (0+255),b
  6515  01106E  0E00               	movlw	0
  6516  011070  6F73               	movwf	(___llmod@divisor+1)& (0+255),b
  6517  011072  0E00               	movlw	0
  6518  011074  6F74               	movwf	(___llmod@divisor+2)& (0+255),b
  6519  011076  0E00               	movlw	0
  6520  011078  6F75               	movwf	(___llmod@divisor+3)& (0+255),b
  6521  01107A  EC84  F0AC         	call	___llmod	;wreg free
  6522  01107E  C06E  F10E         	movff	?___llmod,sprintf@tmpval
  6523  011082  C06F  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  6524  011086  C070  F110         	movff	?___llmod+2,sprintf@tmpval+2
  6525  01108A  C071  F111         	movff	?___llmod+3,sprintf@tmpval+3
  6526                           
  6527                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  6528  01108E  0101               	movlb	1	; () banked
  6529  011090  510E               	movf	sprintf@tmpval& (0+255),w,b
  6530  011092  0F30               	addlw	48
  6531  011094  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  6532  011098  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  6533  01109C                     L4:
  6534  01109C  6EDF               	movwf	indf2,c
  6535  01109E  D7AE               	goto	l8309
  6536  0110A0                     l8319:
  6537                           
  6538                           ; BSR set to: 0
  6539  0110A0  0101               	movlb	1	; () banked
  6540  0110A2  0718               	decf	sprintf@c& (0+255),f,b
  6541  0110A4  0101               	movlb	1	; () banked
  6542  0110A6  2918               	incf	sprintf@c& (0+255),w,b
  6543  0110A8  B4D8               	btfsc	status,2,c
  6544  0110AA  D00E               	goto	l8327
  6545  0110AC  D7AB               	goto	l8311
  6546  0110AE                     l8321:
  6547                           
  6548                           ; BSR set to: 1
  6549                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  6550  0110AE  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  6551  0110B2  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  6552  0110B6  0E30               	movlw	48
  6553  0110B8  6EDF               	movwf	indf2,c
  6554                           
  6555                           ; BSR set to: 1
  6556  0110BA  0100               	movlb	0	; () banked
  6557  0110BC  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  6558  0110BE  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  6559                           
  6560                           ; BSR set to: 0
  6561                           ;doprnt.c: 1209: exp--;
  6562  0110C0  0101               	movlb	1	; () banked
  6563  0110C2  070C               	decf	sprintf@exp& (0+255),f,b
  6564  0110C4  A0D8               	btfss	status,0,c
  6565  0110C6  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  6566  0110C8                     l8327:
  6567                           
  6568                           ; BSR set to: 1
  6569  0110C8  0101               	movlb	1	; () banked
  6570  0110CA  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6571  0110CC  D007               	goto	l8329
  6572  0110CE  0101               	movlb	1	; () banked
  6573  0110D0  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  6574  0110D2  E1ED               	bnz	l8321
  6575  0110D4  0101               	movlb	1	; () banked
  6576  0110D6  050C               	decf	sprintf@exp& (0+255),w,b
  6577  0110D8  B0D8               	btfsc	status,0,c
  6578  0110DA  D7E9               	goto	l8321
  6579  0110DC                     l8329:
  6580                           
  6581                           ; BSR set to: 1
  6582                           ;doprnt.c: 1210: }
  6583                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  6584  0110DC  0101               	movlb	1	; () banked
  6585  0110DE  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  6586  0110E0  D00C               	goto	l893
  6587  0110E2  0101               	movlb	1	; () banked
  6588  0110E4  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  6589  0110E6  E105               	bnz	u10850
  6590  0110E8  0E09               	movlw	9
  6591  0110EA  0101               	movlb	1	; () banked
  6592  0110EC  5D12               	subwf	sprintf@prec& (0+255),w,b
  6593  0110EE  A0D8               	btfss	status,0,c
  6594  0110F0  D004               	goto	l893
  6595  0110F2                     u10850:
  6596                           
  6597                           ; BSR set to: 1
  6598                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  6599  0110F2  0E08               	movlw	8
  6600  0110F4  0101               	movlb	1	; () banked
  6601  0110F6  6F18               	movwf	sprintf@c& (0+255),b
  6602  0110F8  D002               	goto	l8333
  6603  0110FA                     l893:
  6604                           
  6605                           ; BSR set to: 1
  6606                           ;doprnt.c: 1213: else
  6607                           ;doprnt.c: 1214: c = prec;
  6608  0110FA  C112  F118         	movff	sprintf@prec,sprintf@c
  6609  0110FE                     l8333:
  6610                           
  6611                           ; BSR set to: 1
  6612                           ;doprnt.c: 1215: prec -= c;
  6613  0110FE  0101               	movlb	1	; () banked
  6614  011100  5118               	movf	sprintf@c& (0+255),w,b
  6615  011102  0101               	movlb	1	; () banked
  6616  011104  5F12               	subwf	sprintf@prec& (0+255),f,b
  6617  011106  0E00               	movlw	0
  6618  011108  0101               	movlb	1	; () banked
  6619  01110A  BF18               	btfsc	sprintf@c& (0+255),7,b
  6620  01110C  0EFF               	movlw	255
  6621  01110E  0101               	movlb	1	; () banked
  6622  011110  5B13               	subwfb	(sprintf@prec+1)& (0+255),f,b
  6623                           
  6624                           ; BSR set to: 1
  6625                           ;doprnt.c: 1219: if(c)
  6626  011112  0101               	movlb	1	; () banked
  6627  011114  5118               	movf	sprintf@c& (0+255),w,b
  6628  011116  0101               	movlb	1	; () banked
  6629  011118  B4D8               	btfsc	status,2,c
  6630  01111A  D009               	goto	l8341
  6631                           
  6632                           ; BSR set to: 1
  6633                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  6634  01111C  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  6635  011120  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  6636  011124  0E2E               	movlw	46
  6637  011126  6EDF               	movwf	indf2,c
  6638                           
  6639                           ; BSR set to: 1
  6640  011128  0100               	movlb	0	; () banked
  6641  01112A  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  6642  01112C  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  6643  01112E                     l8341:
  6644                           
  6645                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  6646  01112E  0101               	movlb	1	; () banked
  6647  011130  5118               	movf	sprintf@c& (0+255),w,b
  6648  011132  ECDB  F090         	call	_scale
  6649  011136  C095  F100         	movff	?_scale,_sprintf$4196
  6650  01113A  C096  F101         	movff	?_scale+1,_sprintf$4196+1
  6651  01113E  C097  F102         	movff	?_scale+2,_sprintf$4196+2
  6652  011142  C098  F103         	movff	?_scale+3,_sprintf$4196+3
  6653                           
  6654                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  6655  011146  C114  F080         	movff	sprintf@fval,___flmul@a
  6656  01114A  C115  F081         	movff	sprintf@fval+1,___flmul@a+1
  6657  01114E  C116  F082         	movff	sprintf@fval+2,___flmul@a+2
  6658  011152  C117  F083         	movff	sprintf@fval+3,___flmul@a+3
  6659  011156  C100  F07C         	movff	_sprintf$4196,___flmul@b
  6660  01115A  C101  F07D         	movff	_sprintf$4196+1,___flmul@b+1
  6661  01115E  C102  F07E         	movff	_sprintf$4196+2,___flmul@b+2
  6662  011162  C103  F07F         	movff	_sprintf$4196+3,___flmul@b+3
  6663  011166  EC42  F098         	call	___flmul	;wreg free
  6664  01116A  C07C  F0B6         	movff	?___flmul,___fltol@f1
  6665  01116E  C07D  F0B7         	movff	?___flmul+1,___fltol@f1+1
  6666  011172  C07E  F0B8         	movff	?___flmul+2,___fltol@f1+2
  6667  011176  C07F  F0B9         	movff	?___flmul+3,___fltol@f1+3
  6668  01117A  EC08  F0A9         	call	___fltol	;wreg free
  6669  01117E  C0B6  F108         	movff	?___fltol,sprintf@val
  6670  011182  C0B7  F109         	movff	?___fltol+1,sprintf@val+1
  6671  011186  C0B8  F10A         	movff	?___fltol+2,sprintf@val+2
  6672  01118A  C0B9  F10B         	movff	?___fltol+3,sprintf@val+3
  6673                           
  6674                           ;doprnt.c: 1228: while(c--) {
  6675  01118E  D07A               	goto	l8355
  6676  011190                     l8345:
  6677                           
  6678                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  6679  011190  C108  F06E         	movff	sprintf@val,___lldiv@dividend
  6680  011194  C109  F06F         	movff	sprintf@val+1,___lldiv@dividend+1
  6681  011198  C10A  F070         	movff	sprintf@val+2,___lldiv@dividend+2
  6682  01119C  C10B  F071         	movff	sprintf@val+3,___lldiv@dividend+3
  6683  0111A0  0101               	movlb	1	; () banked
  6684  0111A2  5118               	movf	sprintf@c& (0+255),w,b
  6685  0111A4  0D04               	mullw	4
  6686  0111A6  0E67               	movlw	low _dpowers
  6687  0111A8  24F3               	addwf	prodl,w,c
  6688  0111AA  6EF6               	movwf	tblptrl,c
  6689  0111AC  0EFF               	movlw	high _dpowers
  6690  0111AE  20F4               	addwfc	prodh,w,c
  6691  0111B0  6EF7               	movwf	tblptrh,c
  6692  0111B2                     	if	1	;There are 3 active tblptr bytes
  6693  0111B2  6AF8               	clrf	tblptru,c
  6694  0111B4  0E00               	movlw	low (__mediumconst shr (0+16))
  6695  0111B6  22F8               	addwfc	tblptru,f,c
  6696  0111B8                     	endif
  6697  0111B8  0009               	tblrd		*+
  6698  0111BA  CFF5 F072          	movff	tablat,___lldiv@divisor
  6699  0111BE  0009               	tblrd		*+
  6700  0111C0  CFF5 F073          	movff	tablat,___lldiv@divisor+1
  6701  0111C4  0009               	tblrd		*+
  6702  0111C6  CFF5 F074          	movff	tablat,___lldiv@divisor+2
  6703  0111CA  000A               	tblrd		*-
  6704  0111CC  CFF5 F075          	movff	tablat,___lldiv@divisor+3
  6705  0111D0  EC23  F0AB         	call	___lldiv	;wreg free
  6706  0111D4  C06E  F10E         	movff	?___lldiv,sprintf@tmpval
  6707  0111D8  C06F  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  6708  0111DC  C070  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  6709  0111E0  C071  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  6710                           
  6711                           ;doprnt.c: 1230: tmpval.vd %= 10;
  6712  0111E4  C10E  F06E         	movff	sprintf@tmpval,___llmod@dividend
  6713  0111E8  C10F  F06F         	movff	sprintf@tmpval+1,___llmod@dividend+1
  6714  0111EC  C110  F070         	movff	sprintf@tmpval+2,___llmod@dividend+2
  6715  0111F0  C111  F071         	movff	sprintf@tmpval+3,___llmod@dividend+3
  6716  0111F4  0E0A               	movlw	10
  6717  0111F6  0100               	movlb	0	; () banked
  6718  0111F8  6F72               	movwf	___llmod@divisor& (0+255),b
  6719  0111FA  0E00               	movlw	0
  6720  0111FC  6F73               	movwf	(___llmod@divisor+1)& (0+255),b
  6721  0111FE  0E00               	movlw	0
  6722  011200  6F74               	movwf	(___llmod@divisor+2)& (0+255),b
  6723  011202  0E00               	movlw	0
  6724  011204  6F75               	movwf	(___llmod@divisor+3)& (0+255),b
  6725  011206  EC84  F0AC         	call	___llmod	;wreg free
  6726  01120A  C06E  F10E         	movff	?___llmod,sprintf@tmpval
  6727  01120E  C06F  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  6728  011212  C070  F110         	movff	?___llmod+2,sprintf@tmpval+2
  6729  011216  C071  F111         	movff	?___llmod+3,sprintf@tmpval+3
  6730                           
  6731                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  6732  01121A  0101               	movlb	1	; () banked
  6733  01121C  510E               	movf	sprintf@tmpval& (0+255),w,b
  6734  01121E  0F30               	addlw	48
  6735  011220  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  6736  011224  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  6737  011228  6EDF               	movwf	indf2,c
  6738                           
  6739                           ; BSR set to: 1
  6740  01122A  0100               	movlb	0	; () banked
  6741  01122C  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  6742  01122E  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  6743                           
  6744                           ; BSR set to: 0
  6745                           ;doprnt.c: 1232: val %= dpowers[c];
  6746  011230  C108  F06E         	movff	sprintf@val,___llmod@dividend
  6747  011234  C109  F06F         	movff	sprintf@val+1,___llmod@dividend+1
  6748  011238  C10A  F070         	movff	sprintf@val+2,___llmod@dividend+2
  6749  01123C  C10B  F071         	movff	sprintf@val+3,___llmod@dividend+3
  6750  011240  0101               	movlb	1	; () banked
  6751  011242  5118               	movf	sprintf@c& (0+255),w,b
  6752  011244  0D04               	mullw	4
  6753  011246  0E67               	movlw	low _dpowers
  6754  011248  24F3               	addwf	prodl,w,c
  6755  01124A  6EF6               	movwf	tblptrl,c
  6756  01124C  0EFF               	movlw	high _dpowers
  6757  01124E  20F4               	addwfc	prodh,w,c
  6758  011250  6EF7               	movwf	tblptrh,c
  6759  011252                     	if	1	;There are 3 active tblptr bytes
  6760  011252  6AF8               	clrf	tblptru,c
  6761  011254  0E00               	movlw	low (__mediumconst shr (0+16))
  6762  011256  22F8               	addwfc	tblptru,f,c
  6763  011258                     	endif
  6764  011258  0009               	tblrd		*+
  6765  01125A  CFF5 F072          	movff	tablat,___llmod@divisor
  6766  01125E  0009               	tblrd		*+
  6767  011260  CFF5 F073          	movff	tablat,___llmod@divisor+1
  6768  011264  0009               	tblrd		*+
  6769  011266  CFF5 F074          	movff	tablat,___llmod@divisor+2
  6770  01126A  000A               	tblrd		*-
  6771  01126C  CFF5 F075          	movff	tablat,___llmod@divisor+3
  6772  011270  EC84  F0AC         	call	___llmod	;wreg free
  6773  011274  C06E  F108         	movff	?___llmod,sprintf@val
  6774  011278  C06F  F109         	movff	?___llmod+1,sprintf@val+1
  6775  01127C  C070  F10A         	movff	?___llmod+2,sprintf@val+2
  6776  011280  C071  F10B         	movff	?___llmod+3,sprintf@val+3
  6777  011284                     l8355:
  6778  011284  0101               	movlb	1	; () banked
  6779  011286  0718               	decf	sprintf@c& (0+255),f,b
  6780  011288  0101               	movlb	1	; () banked
  6781  01128A  2918               	incf	sprintf@c& (0+255),w,b
  6782  01128C  B4D8               	btfsc	status,2,c
  6783  01128E  D00E               	goto	l8363
  6784  011290  D77F               	goto	l8345
  6785  011292                     l8357:
  6786                           
  6787                           ; BSR set to: 1
  6788                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  6789  011292  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  6790  011296  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  6791  01129A  0E30               	movlw	48
  6792  01129C  6EDF               	movwf	indf2,c
  6793                           
  6794                           ; BSR set to: 1
  6795  01129E  0100               	movlb	0	; () banked
  6796  0112A0  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  6797  0112A2  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  6798                           
  6799                           ; BSR set to: 0
  6800                           ;doprnt.c: 1237: prec--;
  6801  0112A4  0101               	movlb	1	; () banked
  6802  0112A6  0712               	decf	sprintf@prec& (0+255),f,b
  6803  0112A8  A0D8               	btfss	status,0,c
  6804  0112AA  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  6805  0112AC                     l8363:
  6806                           
  6807                           ; BSR set to: 1
  6808  0112AC  0101               	movlb	1	; () banked
  6809  0112AE  5112               	movf	sprintf@prec& (0+255),w,b
  6810  0112B0  0101               	movlb	1	; () banked
  6811  0112B2  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  6812  0112B4  B4D8               	btfsc	status,2,c
  6813  0112B6  D059               	goto	l8385
  6814  0112B8  D7EC               	goto	l8357
  6815  0112BA                     l8365:
  6816                           
  6817                           ; BSR set to: 1
  6818                           ;doprnt.c: 1246: }
  6819                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  6820  0112BA  0101               	movlb	1	; () banked
  6821  0112BC  5112               	movf	sprintf@prec& (0+255),w,b
  6822  0112BE  0101               	movlb	1	; () banked
  6823  0112C0  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  6824  0112C2  A4D8               	btfss	status,2,c
  6825  0112C4  D00D               	goto	l8371
  6826                           
  6827                           ; BSR set to: 1
  6828  0112C6  0101               	movlb	1	; () banked
  6829  0112C8  5108               	movf	sprintf@val& (0+255),w,b
  6830  0112CA  0101               	movlb	1	; () banked
  6831  0112CC  1109               	iorwf	(sprintf@val+1)& (0+255),w,b
  6832  0112CE  0101               	movlb	1	; () banked
  6833  0112D0  110A               	iorwf	(sprintf@val+2)& (0+255),w,b
  6834  0112D2  0101               	movlb	1	; () banked
  6835  0112D4  110B               	iorwf	(sprintf@val+3)& (0+255),w,b
  6836  0112D6  A4D8               	btfss	status,2,c
  6837  0112D8  D003               	goto	l8371
  6838                           
  6839                           ; BSR set to: 1
  6840                           ;doprnt.c: 1291: prec++;
  6841  0112DA  0101               	movlb	1	; () banked
  6842  0112DC  4B12               	infsnz	sprintf@prec& (0+255),f,b
  6843  0112DE  2B13               	incf	(sprintf@prec+1)& (0+255),f,b
  6844  0112E0                     l8371:
  6845                           
  6846                           ; BSR set to: 1
  6847                           ;doprnt.c: 1339: if(c < prec)
  6848  0112E0  0E80               	movlw	128
  6849  0112E2  0101               	movlb	1	; () banked
  6850  0112E4  BF18               	btfsc	sprintf@c& (0+255),7,b
  6851  0112E6  0E7F               	movlw	127
  6852  0112E8  0100               	movlb	0	; () banked
  6853  0112EA  6FC8               	movwf	??_sprintf& (0+255),b
  6854  0112EC  0101               	movlb	1	; () banked
  6855  0112EE  5112               	movf	sprintf@prec& (0+255),w,b
  6856  0112F0  0101               	movlb	1	; () banked
  6857  0112F2  5D18               	subwf	sprintf@c& (0+255),w,b
  6858  0112F4  0101               	movlb	1	; () banked
  6859  0112F6  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  6860  0112F8  0A80               	xorlw	128
  6861  0112FA  0100               	movlb	0	; () banked
  6862  0112FC  59C8               	subwfb	??_sprintf& (0+255),w,b
  6863  0112FE  B0D8               	btfsc	status,0,c
  6864  011300  D003               	goto	l8375
  6865                           
  6866                           ; BSR set to: 0
  6867                           ;doprnt.c: 1340: c = prec;
  6868  011302  C112  F118         	movff	sprintf@prec,sprintf@c
  6869  011306  D018               	goto	l8379
  6870  011308                     l8375:
  6871                           
  6872                           ; BSR set to: 0
  6873                           ;doprnt.c: 1341: else if(prec < c)
  6874  011308  0101               	movlb	1	; () banked
  6875  01130A  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  6876  01130C  0A80               	xorlw	128
  6877  01130E  0100               	movlb	0	; () banked
  6878  011310  6FC8               	movwf	??_sprintf& (0+255),b
  6879  011312  0101               	movlb	1	; () banked
  6880  011314  5118               	movf	sprintf@c& (0+255),w,b
  6881  011316  0101               	movlb	1	; () banked
  6882  011318  5D12               	subwf	sprintf@prec& (0+255),w,b
  6883  01131A  0E80               	movlw	128
  6884  01131C  0101               	movlb	1	; () banked
  6885  01131E  BF18               	btfsc	sprintf@c& (0+255),7,b
  6886  011320  0E7F               	movlw	127
  6887  011322  0100               	movlb	0	; () banked
  6888  011324  59C8               	subwfb	??_sprintf& (0+255),w,b
  6889  011326  B0D8               	btfsc	status,0,c
  6890  011328  D007               	goto	l8379
  6891                           
  6892                           ; BSR set to: 0
  6893                           ;doprnt.c: 1342: prec = c;
  6894  01132A  0101               	movlb	1	; () banked
  6895  01132C  5118               	movf	sprintf@c& (0+255),w,b
  6896  01132E  0101               	movlb	1	; () banked
  6897  011330  6F12               	movwf	sprintf@prec& (0+255),b
  6898  011332  6B13               	clrf	(sprintf@prec+1)& (0+255),b
  6899  011334  BF12               	btfsc	sprintf@prec& (0+255),7,b
  6900  011336  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  6901  011338                     l8379:
  6902                           
  6903                           ;doprnt.c: 1422: {
  6904                           ;doprnt.c: 1438: if(flag & 0x03)
  6905  011338  0E03               	movlw	3
  6906  01133A  0101               	movlb	1	; () banked
  6907  01133C  1506               	andwf	sprintf@flag& (0+255),w,b
  6908  01133E  0100               	movlb	0	; () banked
  6909  011340  6FC8               	movwf	??_sprintf& (0+255),b
  6910  011342  0E00               	movlw	0
  6911  011344  0101               	movlb	1	; () banked
  6912  011346  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  6913  011348  0100               	movlb	0	; () banked
  6914  01134A  6FC9               	movwf	(??_sprintf+1)& (0+255),b
  6915  01134C  0100               	movlb	0	; () banked
  6916  01134E  51C8               	movf	??_sprintf& (0+255),w,b
  6917  011350  0100               	movlb	0	; () banked
  6918  011352  11C9               	iorwf	(??_sprintf+1)& (0+255),w,b
  6919  011354  B4D8               	btfsc	status,2,c
  6920  011356  D009               	goto	l8385
  6921                           
  6922                           ; BSR set to: 0
  6923                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  6924  011358  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  6925  01135C  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  6926  011360  0E2D               	movlw	45
  6927  011362  6EDF               	movwf	indf2,c
  6928  011364                     l8383:
  6929                           
  6930                           ; BSR set to: 0
  6931  011364  0100               	movlb	0	; () banked
  6932  011366  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  6933  011368  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  6934  01136A                     l8385:
  6935  01136A  C0C2  FFF6         	movff	sprintf@f,tblptrl
  6936  01136E  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  6937  011372  0100               	movlb	0	; () banked
  6938  011374  4BC2               	infsnz	sprintf@f& (0+255),f,b
  6939  011376  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  6940  011378                     	if	0	;tblptru may be non-zero
  6941  011378                     	endif
  6942  011378                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6943  011378  0E00               	movlw	low (__mediumconst shr (0+16))
  6944  01137A  6EF8               	movwf	tblptru,c
  6945  01137C                     	endif
  6946  01137C  0008               	tblrd		*
  6947  01137E  CFF5 F118          	movff	tablat,sprintf@c
  6948  011382  0101               	movlb	1	; () banked
  6949  011384  5118               	movf	sprintf@c& (0+255),w,b
  6950  011386  A4D8               	btfss	status,2,c
  6951  011388  EF8B  F085         	goto	l8187
  6952  01138C                     l8387:
  6953                           
  6954                           ; BSR set to: 1
  6955                           ;doprnt.c: 1538: *sp = 0;
  6956  01138C  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  6957  011390  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  6958  011394  0E00               	movlw	0
  6959  011396  6EDF               	movwf	indf2,c
  6960  011398  0012               	return	
  6961  01139A                     __end_of_sprintf:
  6962                           	opt stack 0
  6963                           tblptru	equ	0xFF8
  6964                           tblptrh	equ	0xFF7
  6965                           tblptrl	equ	0xFF6
  6966                           tablat	equ	0xFF5
  6967                           prodh	equ	0xFF4
  6968                           prodl	equ	0xFF3
  6969                           intcon	equ	0xFF2
  6970                           postinc0	equ	0xFEE
  6971                           wreg	equ	0xFE8
  6972                           indf2	equ	0xFDF
  6973                           postinc2	equ	0xFDE
  6974                           fsr2h	equ	0xFDA
  6975                           fsr2l	equ	0xFD9
  6976                           status	equ	0xFD8
  6977                           
  6978 ;; *************** function _scale *****************
  6979 ;; Defined at:
  6980 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  6981 ;; Parameters:    Size  Location     Type
  6982 ;;  scl             1    wreg     char 
  6983 ;; Auto vars:     Size  Location     Type
  6984 ;;  scl             1   61[BANK0 ] char 
  6985 ;; Return value:  Size  Location     Type
  6986 ;;                  4   53[BANK0 ] char 
  6987 ;; Registers used:
  6988 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6989 ;; Tracked objects:
  6990 ;;		On entry : 0/0
  6991 ;;		On exit  : 0/0
  6992 ;;		Unchanged: 0/0
  6993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6994 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6995 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6997 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6998 ;;Total ram usage:        9 bytes
  6999 ;; Hardware stack levels used:    1
  7000 ;; Hardware stack levels required when called:    4
  7001 ;; This function calls:
  7002 ;;		___awdiv
  7003 ;;		___awmod
  7004 ;;		___flmul
  7005 ;; This function is called by:
  7006 ;;		_sprintf
  7007 ;; This function uses a non-reentrant model
  7008 ;;
  7009                           
  7010                           	psect	text9
  7011  0121B6                     __ptext9:
  7012                           	opt stack 0
  7013  0121B6                     _scale:
  7014                           	opt stack 24
  7015                           
  7016                           ; BSR set to: 1
  7017                           ;incstack = 0
  7018                           ;scale@scl stored from wreg
  7019  0121B6  0100               	movlb	0	; () banked
  7020  0121B8  6F9D               	movwf	scale@scl& (0+255),b
  7021                           
  7022                           ;doprnt.c: 428: if(scl < 0) {
  7023  0121BA  0100               	movlb	0	; () banked
  7024  0121BC  AF9D               	btfss	scale@scl& (0+255),7,b
  7025  0121BE  D145               	goto	l7785
  7026                           
  7027                           ; BSR set to: 0
  7028                           ;doprnt.c: 429: scl = -scl;
  7029  0121C0  0100               	movlb	0	; () banked
  7030  0121C2  6D9D               	negf	scale@scl& (0+255),b
  7031                           
  7032                           ;doprnt.c: 430: if(scl>=110)
  7033  0121C4  0100               	movlb	0	; () banked
  7034  0121C6  519D               	movf	scale@scl& (0+255),w,b
  7035  0121C8  0A80               	xorlw	128
  7036  0121CA  0F12               	addlw	-238
  7037  0121CC  A0D8               	btfss	status,0,c
  7038  0121CE  D0BB               	goto	l7775
  7039                           
  7040                           ; BSR set to: 0
  7041                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7042  0121D0  0E00               	movlw	0
  7043  0121D2  0100               	movlb	0	; () banked
  7044  0121D4  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  7045  0121D6  0E0A               	movlw	10
  7046  0121D8  6F76               	movwf	___awdiv@divisor& (0+255),b
  7047  0121DA  0E00               	movlw	0
  7048  0121DC  0100               	movlb	0	; () banked
  7049  0121DE  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  7050  0121E0  0E64               	movlw	100
  7051  0121E2  6F70               	movwf	___awmod@divisor& (0+255),b
  7052  0121E4  0100               	movlb	0	; () banked
  7053  0121E6  519D               	movf	scale@scl& (0+255),w,b
  7054  0121E8  0100               	movlb	0	; () banked
  7055  0121EA  6F6E               	movwf	___awmod@dividend& (0+255),b
  7056  0121EC  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  7057  0121EE  BF6E               	btfsc	___awmod@dividend& (0+255),7,b
  7058  0121F0  076F               	decf	(___awmod@dividend+1)& (0+255),f,b
  7059  0121F2  EC33  F0AC         	call	___awmod	;wreg free
  7060  0121F6  C06E  F074         	movff	?___awmod,___awdiv@dividend
  7061  0121FA  C06F  F075         	movff	?___awmod+1,___awdiv@dividend+1
  7062  0121FE  EC65  F0AA         	call	___awdiv	;wreg free
  7063  012202  0100               	movlb	0	; () banked
  7064  012204  90D8               	bcf	status,0,c
  7065  012206  3774               	rlcf	?___awdiv& (0+255),f,b
  7066  012208  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7067  01220A  0100               	movlb	0	; () banked
  7068  01220C  90D8               	bcf	status,0,c
  7069  01220E  3774               	rlcf	?___awdiv& (0+255),f,b
  7070  012210  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7071  012212  0E24               	movlw	36
  7072  012214  0100               	movlb	0	; () banked
  7073  012216  2774               	addwf	?___awdiv& (0+255),f,b
  7074  012218  0E00               	movlw	0
  7075  01221A  0100               	movlb	0	; () banked
  7076  01221C  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  7077  01221E  0EFF               	movlw	low __npowers_
  7078  012220  0100               	movlb	0	; () banked
  7079  012222  2574               	addwf	?___awdiv& (0+255),w,b
  7080  012224  6EF6               	movwf	tblptrl,c
  7081  012226  0EFE               	movlw	high __npowers_
  7082  012228  0100               	movlb	0	; () banked
  7083  01222A  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  7084  01222C  6EF7               	movwf	tblptrh,c
  7085  01222E                     	if	1	;There are 3 active tblptr bytes
  7086  01222E  6AF8               	clrf	tblptru,c
  7087  012230  0E00               	movlw	low (__mediumconst shr (0+16))
  7088  012232  22F8               	addwfc	tblptru,f,c
  7089  012234                     	endif
  7090  012234  0009               	tblrd		*+
  7091  012236  CFF5 F080          	movff	tablat,___flmul@a
  7092  01223A  0009               	tblrd		*+
  7093  01223C  CFF5 F081          	movff	tablat,___flmul@a+1
  7094  012240  0009               	tblrd		*+
  7095  012242  CFF5 F082          	movff	tablat,___flmul@a+2
  7096  012246  000A               	tblrd		*-
  7097  012248  CFF5 F083          	movff	tablat,___flmul@a+3
  7098  01224C  0E00               	movlw	0
  7099  01224E  0100               	movlb	0	; () banked
  7100  012250  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  7101  012252  0E64               	movlw	100
  7102  012254  6F76               	movwf	___awdiv@divisor& (0+255),b
  7103  012256  0100               	movlb	0	; () banked
  7104  012258  519D               	movf	scale@scl& (0+255),w,b
  7105  01225A  0100               	movlb	0	; () banked
  7106  01225C  6F74               	movwf	___awdiv@dividend& (0+255),b
  7107  01225E  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
  7108  012260  BF74               	btfsc	___awdiv@dividend& (0+255),7,b
  7109  012262  0775               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7110  012264  EC65  F0AA         	call	___awdiv	;wreg free
  7111  012268  0100               	movlb	0	; () banked
  7112  01226A  90D8               	bcf	status,0,c
  7113  01226C  3774               	rlcf	?___awdiv& (0+255),f,b
  7114  01226E  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7115  012270  0100               	movlb	0	; () banked
  7116  012272  90D8               	bcf	status,0,c
  7117  012274  3774               	rlcf	?___awdiv& (0+255),f,b
  7118  012276  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7119  012278  0E48               	movlw	72
  7120  01227A  0100               	movlb	0	; () banked
  7121  01227C  2774               	addwf	?___awdiv& (0+255),f,b
  7122  01227E  0E00               	movlw	0
  7123  012280  0100               	movlb	0	; () banked
  7124  012282  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  7125  012284  0EFF               	movlw	low __npowers_
  7126  012286  0100               	movlb	0	; () banked
  7127  012288  2574               	addwf	?___awdiv& (0+255),w,b
  7128  01228A  6EF6               	movwf	tblptrl,c
  7129  01228C  0EFE               	movlw	high __npowers_
  7130  01228E  0100               	movlb	0	; () banked
  7131  012290  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  7132  012292  6EF7               	movwf	tblptrh,c
  7133  012294                     	if	1	;There are 3 active tblptr bytes
  7134  012294  6AF8               	clrf	tblptru,c
  7135  012296  0E00               	movlw	low (__mediumconst shr (0+16))
  7136  012298  22F8               	addwfc	tblptru,f,c
  7137  01229A                     	endif
  7138  01229A  0009               	tblrd		*+
  7139  01229C  CFF5 F07C          	movff	tablat,___flmul@b
  7140  0122A0  0009               	tblrd		*+
  7141  0122A2  CFF5 F07D          	movff	tablat,___flmul@b+1
  7142  0122A6  0009               	tblrd		*+
  7143  0122A8  CFF5 F07E          	movff	tablat,___flmul@b+2
  7144  0122AC  000A               	tblrd		*-
  7145  0122AE  CFF5 F07F          	movff	tablat,___flmul@b+3
  7146  0122B2  EC42  F098         	call	___flmul	;wreg free
  7147  0122B6  C07C  F099         	movff	?___flmul,_scale$4195
  7148  0122BA  C07D  F09A         	movff	?___flmul+1,_scale$4195+1
  7149  0122BE  C07E  F09B         	movff	?___flmul+2,_scale$4195+2
  7150  0122C2  C07F  F09C         	movff	?___flmul+3,_scale$4195+3
  7151                           
  7152                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7153  0122C6  C099  F07C         	movff	_scale$4195,___flmul@b
  7154  0122CA  C09A  F07D         	movff	_scale$4195+1,___flmul@b+1
  7155  0122CE  C09B  F07E         	movff	_scale$4195+2,___flmul@b+2
  7156  0122D2  C09C  F07F         	movff	_scale$4195+3,___flmul@b+3
  7157  0122D6  0E00               	movlw	0
  7158  0122D8  0100               	movlb	0	; () banked
  7159  0122DA  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  7160  0122DC  0E0A               	movlw	10
  7161  0122DE  6F70               	movwf	___awmod@divisor& (0+255),b
  7162  0122E0  0100               	movlb	0	; () banked
  7163  0122E2  519D               	movf	scale@scl& (0+255),w,b
  7164  0122E4  0100               	movlb	0	; () banked
  7165  0122E6  6F6E               	movwf	___awmod@dividend& (0+255),b
  7166  0122E8  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  7167  0122EA  BF6E               	btfsc	___awmod@dividend& (0+255),7,b
  7168  0122EC  076F               	decf	(___awmod@dividend+1)& (0+255),f,b
  7169  0122EE  EC33  F0AC         	call	___awmod	;wreg free
  7170  0122F2  0100               	movlb	0	; () banked
  7171  0122F4  90D8               	bcf	status,0,c
  7172  0122F6  376E               	rlcf	?___awmod& (0+255),f,b
  7173  0122F8  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7174  0122FA  0100               	movlb	0	; () banked
  7175  0122FC  90D8               	bcf	status,0,c
  7176  0122FE  376E               	rlcf	?___awmod& (0+255),f,b
  7177  012300  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7178  012302  0EFF               	movlw	low __npowers_
  7179  012304  0100               	movlb	0	; () banked
  7180  012306  256E               	addwf	?___awmod& (0+255),w,b
  7181  012308  6EF6               	movwf	tblptrl,c
  7182  01230A  0EFE               	movlw	high __npowers_
  7183  01230C  0100               	movlb	0	; () banked
  7184  01230E  216F               	addwfc	(?___awmod+1)& (0+255),w,b
  7185  012310  6EF7               	movwf	tblptrh,c
  7186  012312                     	if	1	;There are 3 active tblptr bytes
  7187  012312  6AF8               	clrf	tblptru,c
  7188  012314  0E00               	movlw	low (__mediumconst shr (0+16))
  7189  012316  22F8               	addwfc	tblptru,f,c
  7190  012318                     	endif
  7191  012318  0009               	tblrd		*+
  7192  01231A  CFF5 F080          	movff	tablat,___flmul@a
  7193  01231E  0009               	tblrd		*+
  7194  012320  CFF5 F081          	movff	tablat,___flmul@a+1
  7195  012324  0009               	tblrd		*+
  7196  012326  CFF5 F082          	movff	tablat,___flmul@a+2
  7197  01232A  000A               	tblrd		*-
  7198  01232C  CFF5 F083          	movff	tablat,___flmul@a+3
  7199  012330  EC42  F098         	call	___flmul	;wreg free
  7200  012334  C07C  F095         	movff	?___flmul,?_scale
  7201  012338  C07D  F096         	movff	?___flmul+1,?_scale+1
  7202  01233C  C07E  F097         	movff	?___flmul+2,?_scale+2
  7203  012340  C07F  F098         	movff	?___flmul+3,?_scale+3
  7204  012344  0012               	return	
  7205  012346                     l7775:
  7206                           
  7207                           ;doprnt.c: 432: else if(scl > 10)
  7208  012346  0100               	movlb	0	; () banked
  7209  012348  519D               	movf	scale@scl& (0+255),w,b
  7210  01234A  0A80               	xorlw	128
  7211  01234C  0F75               	addlw	-139
  7212  01234E  A0D8               	btfss	status,0,c
  7213  012350  D063               	goto	l7781
  7214                           
  7215                           ; BSR set to: 0
  7216                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  7217  012352  0E00               	movlw	0
  7218  012354  0100               	movlb	0	; () banked
  7219  012356  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  7220  012358  0E0A               	movlw	10
  7221  01235A  6F76               	movwf	___awdiv@divisor& (0+255),b
  7222  01235C  0100               	movlb	0	; () banked
  7223  01235E  519D               	movf	scale@scl& (0+255),w,b
  7224  012360  0100               	movlb	0	; () banked
  7225  012362  6F74               	movwf	___awdiv@dividend& (0+255),b
  7226  012364  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
  7227  012366  BF74               	btfsc	___awdiv@dividend& (0+255),7,b
  7228  012368  0775               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7229  01236A  EC65  F0AA         	call	___awdiv	;wreg free
  7230  01236E  0100               	movlb	0	; () banked
  7231  012370  90D8               	bcf	status,0,c
  7232  012372  3774               	rlcf	?___awdiv& (0+255),f,b
  7233  012374  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7234  012376  0100               	movlb	0	; () banked
  7235  012378  90D8               	bcf	status,0,c
  7236  01237A  3774               	rlcf	?___awdiv& (0+255),f,b
  7237  01237C  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7238  01237E  0E24               	movlw	36
  7239  012380  0100               	movlb	0	; () banked
  7240  012382  2774               	addwf	?___awdiv& (0+255),f,b
  7241  012384  0E00               	movlw	0
  7242  012386  0100               	movlb	0	; () banked
  7243  012388  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  7244  01238A  0EFF               	movlw	low __npowers_
  7245  01238C  0100               	movlb	0	; () banked
  7246  01238E  2574               	addwf	?___awdiv& (0+255),w,b
  7247  012390  6EF6               	movwf	tblptrl,c
  7248  012392  0EFE               	movlw	high __npowers_
  7249  012394  0100               	movlb	0	; () banked
  7250  012396  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  7251  012398  6EF7               	movwf	tblptrh,c
  7252  01239A                     	if	1	;There are 3 active tblptr bytes
  7253  01239A  6AF8               	clrf	tblptru,c
  7254  01239C  0E00               	movlw	low (__mediumconst shr (0+16))
  7255  01239E  22F8               	addwfc	tblptru,f,c
  7256  0123A0                     	endif
  7257  0123A0  0009               	tblrd		*+
  7258  0123A2  CFF5 F07C          	movff	tablat,___flmul@b
  7259  0123A6  0009               	tblrd		*+
  7260  0123A8  CFF5 F07D          	movff	tablat,___flmul@b+1
  7261  0123AC  0009               	tblrd		*+
  7262  0123AE  CFF5 F07E          	movff	tablat,___flmul@b+2
  7263  0123B2  000A               	tblrd		*-
  7264  0123B4  CFF5 F07F          	movff	tablat,___flmul@b+3
  7265  0123B8  0E00               	movlw	0
  7266  0123BA  0100               	movlb	0	; () banked
  7267  0123BC  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  7268  0123BE  0E0A               	movlw	10
  7269  0123C0  6F70               	movwf	___awmod@divisor& (0+255),b
  7270  0123C2  0100               	movlb	0	; () banked
  7271  0123C4  519D               	movf	scale@scl& (0+255),w,b
  7272  0123C6  0100               	movlb	0	; () banked
  7273  0123C8  6F6E               	movwf	___awmod@dividend& (0+255),b
  7274  0123CA  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  7275  0123CC  BF6E               	btfsc	___awmod@dividend& (0+255),7,b
  7276  0123CE  076F               	decf	(___awmod@dividend+1)& (0+255),f,b
  7277  0123D0  EC33  F0AC         	call	___awmod	;wreg free
  7278  0123D4  0100               	movlb	0	; () banked
  7279  0123D6  90D8               	bcf	status,0,c
  7280  0123D8  376E               	rlcf	?___awmod& (0+255),f,b
  7281  0123DA  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7282  0123DC  0100               	movlb	0	; () banked
  7283  0123DE  90D8               	bcf	status,0,c
  7284  0123E0  376E               	rlcf	?___awmod& (0+255),f,b
  7285  0123E2  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7286  0123E4  0EFF               	movlw	low __npowers_
  7287  0123E6  0100               	movlb	0	; () banked
  7288  0123E8  256E               	addwf	?___awmod& (0+255),w,b
  7289  0123EA  6EF6               	movwf	tblptrl,c
  7290  0123EC  0EFE               	movlw	high __npowers_
  7291  0123EE  0100               	movlb	0	; () banked
  7292  0123F0  216F               	addwfc	(?___awmod+1)& (0+255),w,b
  7293  0123F2  6EF7               	movwf	tblptrh,c
  7294  0123F4                     	if	1	;There are 3 active tblptr bytes
  7295  0123F4  6AF8               	clrf	tblptru,c
  7296  0123F6  0E00               	movlw	low (__mediumconst shr (0+16))
  7297  0123F8  22F8               	addwfc	tblptru,f,c
  7298  0123FA                     	endif
  7299  0123FA  0009               	tblrd		*+
  7300  0123FC  CFF5 F080          	movff	tablat,___flmul@a
  7301  012400  0009               	tblrd		*+
  7302  012402  CFF5 F081          	movff	tablat,___flmul@a+1
  7303  012406  0009               	tblrd		*+
  7304  012408  CFF5 F082          	movff	tablat,___flmul@a+2
  7305  01240C  000A               	tblrd		*-
  7306  01240E  CFF5 F083          	movff	tablat,___flmul@a+3
  7307  012412  EC42  F098         	call	___flmul	;wreg free
  7308  012416  D78E               	goto	L5
  7309  012418                     l7781:
  7310                           
  7311                           ;doprnt.c: 434: return _npowers_[scl];
  7312  012418  0100               	movlb	0	; () banked
  7313  01241A  519D               	movf	scale@scl& (0+255),w,b
  7314  01241C  0D04               	mullw	4
  7315  01241E  0EFF               	movlw	low __npowers_
  7316  012420  24F3               	addwf	prodl,w,c
  7317  012422  6EF6               	movwf	tblptrl,c
  7318  012424  0EFE               	movlw	high __npowers_
  7319  012426  20F4               	addwfc	prodh,w,c
  7320  012428  6EF7               	movwf	tblptrh,c
  7321  01242A                     	if	1	;There are 3 active tblptr bytes
  7322  01242A  6AF8               	clrf	tblptru,c
  7323  01242C  0E00               	movlw	low (__mediumconst shr (0+16))
  7324  01242E  22F8               	addwfc	tblptru,f,c
  7325  012430                     	endif
  7326  012430  0009               	tblrd		*+
  7327  012432  CFF5 F095          	movff	tablat,?_scale
  7328  012436  0009               	tblrd		*+
  7329  012438  CFF5 F096          	movff	tablat,?_scale+1
  7330  01243C  0009               	tblrd		*+
  7331  01243E  CFF5 F097          	movff	tablat,?_scale+2
  7332  012442  000A               	tblrd		*-
  7333  012444  CFF5 F098          	movff	tablat,?_scale+3
  7334                           
  7335                           ; BSR set to: 0
  7336  012448  0012               	return	
  7337  01244A                     l7785:
  7338                           
  7339                           ; BSR set to: 0
  7340                           ;doprnt.c: 435: }
  7341                           ;doprnt.c: 436: if(scl>=110)
  7342  01244A  0100               	movlb	0	; () banked
  7343  01244C  519D               	movf	scale@scl& (0+255),w,b
  7344  01244E  0A80               	xorlw	128
  7345  012450  0F12               	addlw	-238
  7346  012452  A0D8               	btfss	status,0,c
  7347  012454  D0BB               	goto	l7793
  7348                           
  7349                           ; BSR set to: 0
  7350                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7351  012456  0E00               	movlw	0
  7352  012458  0100               	movlb	0	; () banked
  7353  01245A  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  7354  01245C  0E0A               	movlw	10
  7355  01245E  6F76               	movwf	___awdiv@divisor& (0+255),b
  7356  012460  0E00               	movlw	0
  7357  012462  0100               	movlb	0	; () banked
  7358  012464  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  7359  012466  0E64               	movlw	100
  7360  012468  6F70               	movwf	___awmod@divisor& (0+255),b
  7361  01246A  0100               	movlb	0	; () banked
  7362  01246C  519D               	movf	scale@scl& (0+255),w,b
  7363  01246E  0100               	movlb	0	; () banked
  7364  012470  6F6E               	movwf	___awmod@dividend& (0+255),b
  7365  012472  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  7366  012474  BF6E               	btfsc	___awmod@dividend& (0+255),7,b
  7367  012476  076F               	decf	(___awmod@dividend+1)& (0+255),f,b
  7368  012478  EC33  F0AC         	call	___awmod	;wreg free
  7369  01247C  C06E  F074         	movff	?___awmod,___awdiv@dividend
  7370  012480  C06F  F075         	movff	?___awmod+1,___awdiv@dividend+1
  7371  012484  EC65  F0AA         	call	___awdiv	;wreg free
  7372  012488  0100               	movlb	0	; () banked
  7373  01248A  90D8               	bcf	status,0,c
  7374  01248C  3774               	rlcf	?___awdiv& (0+255),f,b
  7375  01248E  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7376  012490  0100               	movlb	0	; () banked
  7377  012492  90D8               	bcf	status,0,c
  7378  012494  3774               	rlcf	?___awdiv& (0+255),f,b
  7379  012496  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7380  012498  0E24               	movlw	36
  7381  01249A  0100               	movlb	0	; () banked
  7382  01249C  2774               	addwf	?___awdiv& (0+255),f,b
  7383  01249E  0E00               	movlw	0
  7384  0124A0  0100               	movlb	0	; () banked
  7385  0124A2  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  7386  0124A4  0E33               	movlw	low __powers_
  7387  0124A6  0100               	movlb	0	; () banked
  7388  0124A8  2574               	addwf	?___awdiv& (0+255),w,b
  7389  0124AA  6EF6               	movwf	tblptrl,c
  7390  0124AC  0EFF               	movlw	high __powers_
  7391  0124AE  0100               	movlb	0	; () banked
  7392  0124B0  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  7393  0124B2  6EF7               	movwf	tblptrh,c
  7394  0124B4                     	if	1	;There are 3 active tblptr bytes
  7395  0124B4  6AF8               	clrf	tblptru,c
  7396  0124B6  0E00               	movlw	low (__mediumconst shr (0+16))
  7397  0124B8  22F8               	addwfc	tblptru,f,c
  7398  0124BA                     	endif
  7399  0124BA  0009               	tblrd		*+
  7400  0124BC  CFF5 F080          	movff	tablat,___flmul@a
  7401  0124C0  0009               	tblrd		*+
  7402  0124C2  CFF5 F081          	movff	tablat,___flmul@a+1
  7403  0124C6  0009               	tblrd		*+
  7404  0124C8  CFF5 F082          	movff	tablat,___flmul@a+2
  7405  0124CC  000A               	tblrd		*-
  7406  0124CE  CFF5 F083          	movff	tablat,___flmul@a+3
  7407  0124D2  0E00               	movlw	0
  7408  0124D4  0100               	movlb	0	; () banked
  7409  0124D6  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  7410  0124D8  0E64               	movlw	100
  7411  0124DA  6F76               	movwf	___awdiv@divisor& (0+255),b
  7412  0124DC  0100               	movlb	0	; () banked
  7413  0124DE  519D               	movf	scale@scl& (0+255),w,b
  7414  0124E0  0100               	movlb	0	; () banked
  7415  0124E2  6F74               	movwf	___awdiv@dividend& (0+255),b
  7416  0124E4  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
  7417  0124E6  BF74               	btfsc	___awdiv@dividend& (0+255),7,b
  7418  0124E8  0775               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7419  0124EA  EC65  F0AA         	call	___awdiv	;wreg free
  7420  0124EE  0100               	movlb	0	; () banked
  7421  0124F0  90D8               	bcf	status,0,c
  7422  0124F2  3774               	rlcf	?___awdiv& (0+255),f,b
  7423  0124F4  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7424  0124F6  0100               	movlb	0	; () banked
  7425  0124F8  90D8               	bcf	status,0,c
  7426  0124FA  3774               	rlcf	?___awdiv& (0+255),f,b
  7427  0124FC  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7428  0124FE  0E48               	movlw	72
  7429  012500  0100               	movlb	0	; () banked
  7430  012502  2774               	addwf	?___awdiv& (0+255),f,b
  7431  012504  0E00               	movlw	0
  7432  012506  0100               	movlb	0	; () banked
  7433  012508  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  7434  01250A  0E33               	movlw	low __powers_
  7435  01250C  0100               	movlb	0	; () banked
  7436  01250E  2574               	addwf	?___awdiv& (0+255),w,b
  7437  012510  6EF6               	movwf	tblptrl,c
  7438  012512  0EFF               	movlw	high __powers_
  7439  012514  0100               	movlb	0	; () banked
  7440  012516  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  7441  012518  6EF7               	movwf	tblptrh,c
  7442  01251A                     	if	1	;There are 3 active tblptr bytes
  7443  01251A  6AF8               	clrf	tblptru,c
  7444  01251C  0E00               	movlw	low (__mediumconst shr (0+16))
  7445  01251E  22F8               	addwfc	tblptru,f,c
  7446  012520                     	endif
  7447  012520  0009               	tblrd		*+
  7448  012522  CFF5 F07C          	movff	tablat,___flmul@b
  7449  012526  0009               	tblrd		*+
  7450  012528  CFF5 F07D          	movff	tablat,___flmul@b+1
  7451  01252C  0009               	tblrd		*+
  7452  01252E  CFF5 F07E          	movff	tablat,___flmul@b+2
  7453  012532  000A               	tblrd		*-
  7454  012534  CFF5 F07F          	movff	tablat,___flmul@b+3
  7455  012538  EC42  F098         	call	___flmul	;wreg free
  7456  01253C  C07C  F099         	movff	?___flmul,_scale$4195
  7457  012540  C07D  F09A         	movff	?___flmul+1,_scale$4195+1
  7458  012544  C07E  F09B         	movff	?___flmul+2,_scale$4195+2
  7459  012548  C07F  F09C         	movff	?___flmul+3,_scale$4195+3
  7460                           
  7461                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7462  01254C  C099  F07C         	movff	_scale$4195,___flmul@b
  7463  012550  C09A  F07D         	movff	_scale$4195+1,___flmul@b+1
  7464  012554  C09B  F07E         	movff	_scale$4195+2,___flmul@b+2
  7465  012558  C09C  F07F         	movff	_scale$4195+3,___flmul@b+3
  7466  01255C  0E00               	movlw	0
  7467  01255E  0100               	movlb	0	; () banked
  7468  012560  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  7469  012562  0E0A               	movlw	10
  7470  012564  6F70               	movwf	___awmod@divisor& (0+255),b
  7471  012566  0100               	movlb	0	; () banked
  7472  012568  519D               	movf	scale@scl& (0+255),w,b
  7473  01256A  0100               	movlb	0	; () banked
  7474  01256C  6F6E               	movwf	___awmod@dividend& (0+255),b
  7475  01256E  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  7476  012570  BF6E               	btfsc	___awmod@dividend& (0+255),7,b
  7477  012572  076F               	decf	(___awmod@dividend+1)& (0+255),f,b
  7478  012574  EC33  F0AC         	call	___awmod	;wreg free
  7479  012578  0100               	movlb	0	; () banked
  7480  01257A  90D8               	bcf	status,0,c
  7481  01257C  376E               	rlcf	?___awmod& (0+255),f,b
  7482  01257E  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7483  012580  0100               	movlb	0	; () banked
  7484  012582  90D8               	bcf	status,0,c
  7485  012584  376E               	rlcf	?___awmod& (0+255),f,b
  7486  012586  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7487  012588  0E33               	movlw	low __powers_
  7488  01258A  0100               	movlb	0	; () banked
  7489  01258C  256E               	addwf	?___awmod& (0+255),w,b
  7490  01258E  6EF6               	movwf	tblptrl,c
  7491  012590  0EFF               	movlw	high __powers_
  7492  012592  0100               	movlb	0	; () banked
  7493  012594  216F               	addwfc	(?___awmod+1)& (0+255),w,b
  7494  012596  6EF7               	movwf	tblptrh,c
  7495  012598                     	if	1	;There are 3 active tblptr bytes
  7496  012598  6AF8               	clrf	tblptru,c
  7497  01259A  0E00               	movlw	low (__mediumconst shr (0+16))
  7498  01259C  22F8               	addwfc	tblptru,f,c
  7499  01259E                     	endif
  7500  01259E  0009               	tblrd		*+
  7501  0125A0  CFF5 F080          	movff	tablat,___flmul@a
  7502  0125A4  0009               	tblrd		*+
  7503  0125A6  CFF5 F081          	movff	tablat,___flmul@a+1
  7504  0125AA  0009               	tblrd		*+
  7505  0125AC  CFF5 F082          	movff	tablat,___flmul@a+2
  7506  0125B0  000A               	tblrd		*-
  7507  0125B2  CFF5 F083          	movff	tablat,___flmul@a+3
  7508  0125B6  EC42  F098         	call	___flmul	;wreg free
  7509  0125BA  C07C  F095         	movff	?___flmul,?_scale
  7510  0125BE  C07D  F096         	movff	?___flmul+1,?_scale+1
  7511  0125C2  C07E  F097         	movff	?___flmul+2,?_scale+2
  7512  0125C6  C07F  F098         	movff	?___flmul+3,?_scale+3
  7513  0125CA  0012               	return	
  7514  0125CC                     l7793:
  7515                           
  7516                           ;doprnt.c: 438: else if(scl > 10)
  7517  0125CC  0100               	movlb	0	; () banked
  7518  0125CE  519D               	movf	scale@scl& (0+255),w,b
  7519  0125D0  0A80               	xorlw	128
  7520  0125D2  0F75               	addlw	-139
  7521  0125D4  A0D8               	btfss	status,0,c
  7522  0125D6  D063               	goto	l7799
  7523                           
  7524                           ; BSR set to: 0
  7525                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  7526  0125D8  0E00               	movlw	0
  7527  0125DA  0100               	movlb	0	; () banked
  7528  0125DC  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  7529  0125DE  0E0A               	movlw	10
  7530  0125E0  6F76               	movwf	___awdiv@divisor& (0+255),b
  7531  0125E2  0100               	movlb	0	; () banked
  7532  0125E4  519D               	movf	scale@scl& (0+255),w,b
  7533  0125E6  0100               	movlb	0	; () banked
  7534  0125E8  6F74               	movwf	___awdiv@dividend& (0+255),b
  7535  0125EA  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
  7536  0125EC  BF74               	btfsc	___awdiv@dividend& (0+255),7,b
  7537  0125EE  0775               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7538  0125F0  EC65  F0AA         	call	___awdiv	;wreg free
  7539  0125F4  0100               	movlb	0	; () banked
  7540  0125F6  90D8               	bcf	status,0,c
  7541  0125F8  3774               	rlcf	?___awdiv& (0+255),f,b
  7542  0125FA  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7543  0125FC  0100               	movlb	0	; () banked
  7544  0125FE  90D8               	bcf	status,0,c
  7545  012600  3774               	rlcf	?___awdiv& (0+255),f,b
  7546  012602  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7547  012604  0E24               	movlw	36
  7548  012606  0100               	movlb	0	; () banked
  7549  012608  2774               	addwf	?___awdiv& (0+255),f,b
  7550  01260A  0E00               	movlw	0
  7551  01260C  0100               	movlb	0	; () banked
  7552  01260E  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  7553  012610  0E33               	movlw	low __powers_
  7554  012612  0100               	movlb	0	; () banked
  7555  012614  2574               	addwf	?___awdiv& (0+255),w,b
  7556  012616  6EF6               	movwf	tblptrl,c
  7557  012618  0EFF               	movlw	high __powers_
  7558  01261A  0100               	movlb	0	; () banked
  7559  01261C  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  7560  01261E  6EF7               	movwf	tblptrh,c
  7561  012620                     	if	1	;There are 3 active tblptr bytes
  7562  012620  6AF8               	clrf	tblptru,c
  7563  012622  0E00               	movlw	low (__mediumconst shr (0+16))
  7564  012624  22F8               	addwfc	tblptru,f,c
  7565  012626                     	endif
  7566  012626  0009               	tblrd		*+
  7567  012628  CFF5 F07C          	movff	tablat,___flmul@b
  7568  01262C  0009               	tblrd		*+
  7569  01262E  CFF5 F07D          	movff	tablat,___flmul@b+1
  7570  012632  0009               	tblrd		*+
  7571  012634  CFF5 F07E          	movff	tablat,___flmul@b+2
  7572  012638  000A               	tblrd		*-
  7573  01263A  CFF5 F07F          	movff	tablat,___flmul@b+3
  7574  01263E  0E00               	movlw	0
  7575  012640  0100               	movlb	0	; () banked
  7576  012642  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  7577  012644  0E0A               	movlw	10
  7578  012646  6F70               	movwf	___awmod@divisor& (0+255),b
  7579  012648  0100               	movlb	0	; () banked
  7580  01264A  519D               	movf	scale@scl& (0+255),w,b
  7581  01264C  0100               	movlb	0	; () banked
  7582  01264E  6F6E               	movwf	___awmod@dividend& (0+255),b
  7583  012650  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  7584  012652  BF6E               	btfsc	___awmod@dividend& (0+255),7,b
  7585  012654  076F               	decf	(___awmod@dividend+1)& (0+255),f,b
  7586  012656  EC33  F0AC         	call	___awmod	;wreg free
  7587  01265A  0100               	movlb	0	; () banked
  7588  01265C  90D8               	bcf	status,0,c
  7589  01265E  376E               	rlcf	?___awmod& (0+255),f,b
  7590  012660  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7591  012662  0100               	movlb	0	; () banked
  7592  012664  90D8               	bcf	status,0,c
  7593  012666  376E               	rlcf	?___awmod& (0+255),f,b
  7594  012668  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7595  01266A  0E33               	movlw	low __powers_
  7596  01266C  0100               	movlb	0	; () banked
  7597  01266E  256E               	addwf	?___awmod& (0+255),w,b
  7598  012670  6EF6               	movwf	tblptrl,c
  7599  012672  0EFF               	movlw	high __powers_
  7600  012674  0100               	movlb	0	; () banked
  7601  012676  216F               	addwfc	(?___awmod+1)& (0+255),w,b
  7602  012678  6EF7               	movwf	tblptrh,c
  7603  01267A                     	if	1	;There are 3 active tblptr bytes
  7604  01267A  6AF8               	clrf	tblptru,c
  7605  01267C  0E00               	movlw	low (__mediumconst shr (0+16))
  7606  01267E  22F8               	addwfc	tblptru,f,c
  7607  012680                     	endif
  7608  012680  0009               	tblrd		*+
  7609  012682  CFF5 F080          	movff	tablat,___flmul@a
  7610  012686  0009               	tblrd		*+
  7611  012688  CFF5 F081          	movff	tablat,___flmul@a+1
  7612  01268C  0009               	tblrd		*+
  7613  01268E  CFF5 F082          	movff	tablat,___flmul@a+2
  7614  012692  000A               	tblrd		*-
  7615  012694  CFF5 F083          	movff	tablat,___flmul@a+3
  7616  012698  EC42  F098         	call	___flmul	;wreg free
  7617  01269C  D78E               	goto	L6
  7618  01269E                     l7799:
  7619                           
  7620                           ;doprnt.c: 440: return _powers_[scl];
  7621  01269E  0100               	movlb	0	; () banked
  7622  0126A0  519D               	movf	scale@scl& (0+255),w,b
  7623  0126A2  0D04               	mullw	4
  7624  0126A4  0E33               	movlw	low __powers_
  7625  0126A6  24F3               	addwf	prodl,w,c
  7626  0126A8  6EF6               	movwf	tblptrl,c
  7627  0126AA  0EFF               	movlw	high __powers_
  7628  0126AC  20F4               	addwfc	prodh,w,c
  7629  0126AE  6EF7               	movwf	tblptrh,c
  7630  0126B0                     	if	1	;There are 3 active tblptr bytes
  7631  0126B0  6AF8               	clrf	tblptru,c
  7632  0126B2  0E00               	movlw	low (__mediumconst shr (0+16))
  7633  0126B4  22F8               	addwfc	tblptru,f,c
  7634  0126B6                     	endif
  7635  0126B6  0009               	tblrd		*+
  7636  0126B8  CFF5 F095          	movff	tablat,?_scale
  7637  0126BC  0009               	tblrd		*+
  7638  0126BE  CFF5 F096          	movff	tablat,?_scale+1
  7639  0126C2  0009               	tblrd		*+
  7640  0126C4  CFF5 F097          	movff	tablat,?_scale+2
  7641  0126C8  000A               	tblrd		*-
  7642  0126CA  CFF5 F098          	movff	tablat,?_scale+3
  7643  0126CE  0012               	return	
  7644  0126D0                     __end_of_scale:
  7645                           	opt stack 0
  7646                           tblptru	equ	0xFF8
  7647                           tblptrh	equ	0xFF7
  7648                           tblptrl	equ	0xFF6
  7649                           tablat	equ	0xFF5
  7650                           prodh	equ	0xFF4
  7651                           prodl	equ	0xFF3
  7652                           intcon	equ	0xFF2
  7653                           postinc0	equ	0xFEE
  7654                           wreg	equ	0xFE8
  7655                           indf2	equ	0xFDF
  7656                           postinc2	equ	0xFDE
  7657                           fsr2h	equ	0xFDA
  7658                           fsr2l	equ	0xFD9
  7659                           status	equ	0xFD8
  7660                           
  7661 ;; *************** function _isdigit *****************
  7662 ;; Defined at:
  7663 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  7664 ;; Parameters:    Size  Location     Type
  7665 ;;  c               1    wreg     unsigned char 
  7666 ;; Auto vars:     Size  Location     Type
  7667 ;;  c               1   16[BANK0 ] unsigned char 
  7668 ;; Return value:  Size  Location     Type
  7669 ;;		None               void
  7670 ;; Registers used:
  7671 ;;		wreg, status,2, status,0
  7672 ;; Tracked objects:
  7673 ;;		On entry : 0/0
  7674 ;;		On exit  : 0/0
  7675 ;;		Unchanged: 0/0
  7676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7678 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7679 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7680 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7681 ;;Total ram usage:        3 bytes
  7682 ;; Hardware stack levels used:    1
  7683 ;; Hardware stack levels required when called:    3
  7684 ;; This function calls:
  7685 ;;		Nothing
  7686 ;; This function is called by:
  7687 ;;		_sprintf
  7688 ;; This function uses a non-reentrant model
  7689 ;;
  7690                           
  7691                           	psect	text10
  7692  015DB2                     __ptext10:
  7693                           	opt stack 0
  7694  015DB2                     _isdigit:
  7695                           	opt stack 25
  7696                           
  7697                           ;incstack = 0
  7698                           ;isdigit@c stored from wreg
  7699  015DB2  0100               	movlb	0	; () banked
  7700  015DB4  6F70               	movwf	isdigit@c& (0+255),b
  7701  015DB6  0E00               	movlw	0
  7702  015DB8  0100               	movlb	0	; () banked
  7703  015DBA  6F6F               	movwf	_isdigit$3775& (0+255),b
  7704                           
  7705                           ; BSR set to: 0
  7706  015DBC  0E3A               	movlw	58
  7707  015DBE  0100               	movlb	0	; () banked
  7708  015DC0  6170               	cpfslt	isdigit@c& (0+255),b
  7709  015DC2  D007               	goto	l7811
  7710                           
  7711                           ; BSR set to: 0
  7712  015DC4  0E2F               	movlw	47
  7713  015DC6  0100               	movlb	0	; () banked
  7714  015DC8  6570               	cpfsgt	isdigit@c& (0+255),b
  7715  015DCA  D003               	goto	l7811
  7716                           
  7717                           ; BSR set to: 0
  7718  015DCC  0E01               	movlw	1
  7719  015DCE  0100               	movlb	0	; () banked
  7720  015DD0  6F6F               	movwf	_isdigit$3775& (0+255),b
  7721  015DD2                     l7811:
  7722                           
  7723                           ; BSR set to: 0
  7724  015DD2  C06F  F06E         	movff	_isdigit$3775,??_isdigit
  7725  015DD6  0100               	movlb	0	; () banked
  7726  015DD8  316E               	rrcf	??_isdigit& (0+255),w,b
  7727  015DDA  0012               	return	
  7728  015DDC                     __end_of_isdigit:
  7729                           	opt stack 0
  7730                           tblptru	equ	0xFF8
  7731                           tblptrh	equ	0xFF7
  7732                           tblptrl	equ	0xFF6
  7733                           tablat	equ	0xFF5
  7734                           prodh	equ	0xFF4
  7735                           prodl	equ	0xFF3
  7736                           intcon	equ	0xFF2
  7737                           postinc0	equ	0xFEE
  7738                           wreg	equ	0xFE8
  7739                           indf2	equ	0xFDF
  7740                           postinc2	equ	0xFDE
  7741                           fsr2h	equ	0xFDA
  7742                           fsr2l	equ	0xFD9
  7743                           status	equ	0xFD8
  7744                           
  7745 ;; *************** function _fround *****************
  7746 ;; Defined at:
  7747 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  7748 ;; Parameters:    Size  Location     Type
  7749 ;;  prec            1    wreg     unsigned char 
  7750 ;; Auto vars:     Size  Location     Type
  7751 ;;  prec            1   65[BANK0 ] unsigned char 
  7752 ;; Return value:  Size  Location     Type
  7753 ;;                  4   53[BANK0 ] unsigned char 
  7754 ;; Registers used:
  7755 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7756 ;; Tracked objects:
  7757 ;;		On entry : 0/0
  7758 ;;		On exit  : 0/0
  7759 ;;		Unchanged: 0/0
  7760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7761 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7762 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7764 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7765 ;;Total ram usage:       13 bytes
  7766 ;; Hardware stack levels used:    1
  7767 ;; Hardware stack levels required when called:    4
  7768 ;; This function calls:
  7769 ;;		___awdiv
  7770 ;;		___awmod
  7771 ;;		___flmul
  7772 ;; This function is called by:
  7773 ;;		_sprintf
  7774 ;; This function uses a non-reentrant model
  7775 ;;
  7776                           
  7777                           	psect	text11
  7778  0140CE                     __ptext11:
  7779                           	opt stack 0
  7780  0140CE                     _fround:
  7781                           	opt stack 24
  7782                           
  7783                           ; BSR set to: 0
  7784                           ;incstack = 0
  7785                           ;fround@prec stored from wreg
  7786  0140CE  0100               	movlb	0	; () banked
  7787  0140D0  6FA1               	movwf	fround@prec& (0+255),b
  7788                           
  7789                           ;doprnt.c: 413: if(prec>=110)
  7790  0140D2  0E6D               	movlw	109
  7791  0140D4  0100               	movlb	0	; () banked
  7792  0140D6  65A1               	cpfsgt	fround@prec& (0+255),b
  7793  0140D8  D0CD               	goto	l7753
  7794                           
  7795                           ; BSR set to: 0
  7796                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  7797  0140DA  0E00               	movlw	0
  7798  0140DC  0100               	movlb	0	; () banked
  7799  0140DE  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  7800  0140E0  0E0A               	movlw	10
  7801  0140E2  6F76               	movwf	___awdiv@divisor& (0+255),b
  7802  0140E4  0E00               	movlw	0
  7803  0140E6  0100               	movlb	0	; () banked
  7804  0140E8  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  7805  0140EA  0E64               	movlw	100
  7806  0140EC  6F70               	movwf	___awmod@divisor& (0+255),b
  7807  0140EE  C0A1  F06E         	movff	fround@prec,___awmod@dividend
  7808  0140F2  0100               	movlb	0	; () banked
  7809  0140F4  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  7810  0140F6  EC33  F0AC         	call	___awmod	;wreg free
  7811  0140FA  C06E  F074         	movff	?___awmod,___awdiv@dividend
  7812  0140FE  C06F  F075         	movff	?___awmod+1,___awdiv@dividend+1
  7813  014102  EC65  F0AA         	call	___awdiv	;wreg free
  7814  014106  0100               	movlb	0	; () banked
  7815  014108  90D8               	bcf	status,0,c
  7816  01410A  3774               	rlcf	?___awdiv& (0+255),f,b
  7817  01410C  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7818  01410E  0100               	movlb	0	; () banked
  7819  014110  90D8               	bcf	status,0,c
  7820  014112  3774               	rlcf	?___awdiv& (0+255),f,b
  7821  014114  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7822  014116  0E24               	movlw	36
  7823  014118  0100               	movlb	0	; () banked
  7824  01411A  2774               	addwf	?___awdiv& (0+255),f,b
  7825  01411C  0E00               	movlw	0
  7826  01411E  0100               	movlb	0	; () banked
  7827  014120  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  7828  014122  0EFF               	movlw	low __npowers_
  7829  014124  0100               	movlb	0	; () banked
  7830  014126  2574               	addwf	?___awdiv& (0+255),w,b
  7831  014128  6EF6               	movwf	tblptrl,c
  7832  01412A  0EFE               	movlw	high __npowers_
  7833  01412C  0100               	movlb	0	; () banked
  7834  01412E  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  7835  014130  6EF7               	movwf	tblptrh,c
  7836  014132                     	if	1	;There are 3 active tblptr bytes
  7837  014132  6AF8               	clrf	tblptru,c
  7838  014134  0E00               	movlw	low (__mediumconst shr (0+16))
  7839  014136  22F8               	addwfc	tblptru,f,c
  7840  014138                     	endif
  7841  014138  0009               	tblrd		*+
  7842  01413A  CFF5 F080          	movff	tablat,___flmul@a
  7843  01413E  0009               	tblrd		*+
  7844  014140  CFF5 F081          	movff	tablat,___flmul@a+1
  7845  014144  0009               	tblrd		*+
  7846  014146  CFF5 F082          	movff	tablat,___flmul@a+2
  7847  01414A  000A               	tblrd		*-
  7848  01414C  CFF5 F083          	movff	tablat,___flmul@a+3
  7849  014150  0E00               	movlw	0
  7850  014152  0100               	movlb	0	; () banked
  7851  014154  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  7852  014156  0E64               	movlw	100
  7853  014158  6F76               	movwf	___awdiv@divisor& (0+255),b
  7854  01415A  C0A1  F074         	movff	fround@prec,___awdiv@dividend
  7855  01415E  0100               	movlb	0	; () banked
  7856  014160  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
  7857  014162  EC65  F0AA         	call	___awdiv	;wreg free
  7858  014166  0100               	movlb	0	; () banked
  7859  014168  90D8               	bcf	status,0,c
  7860  01416A  3774               	rlcf	?___awdiv& (0+255),f,b
  7861  01416C  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7862  01416E  0100               	movlb	0	; () banked
  7863  014170  90D8               	bcf	status,0,c
  7864  014172  3774               	rlcf	?___awdiv& (0+255),f,b
  7865  014174  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7866  014176  0E48               	movlw	72
  7867  014178  0100               	movlb	0	; () banked
  7868  01417A  2774               	addwf	?___awdiv& (0+255),f,b
  7869  01417C  0E00               	movlw	0
  7870  01417E  0100               	movlb	0	; () banked
  7871  014180  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  7872  014182  0EFF               	movlw	low __npowers_
  7873  014184  0100               	movlb	0	; () banked
  7874  014186  2574               	addwf	?___awdiv& (0+255),w,b
  7875  014188  6EF6               	movwf	tblptrl,c
  7876  01418A  0EFE               	movlw	high __npowers_
  7877  01418C  0100               	movlb	0	; () banked
  7878  01418E  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  7879  014190  6EF7               	movwf	tblptrh,c
  7880  014192                     	if	1	;There are 3 active tblptr bytes
  7881  014192  6AF8               	clrf	tblptru,c
  7882  014194  0E00               	movlw	low (__mediumconst shr (0+16))
  7883  014196  22F8               	addwfc	tblptru,f,c
  7884  014198                     	endif
  7885  014198  0009               	tblrd		*+
  7886  01419A  CFF5 F07C          	movff	tablat,___flmul@b
  7887  01419E  0009               	tblrd		*+
  7888  0141A0  CFF5 F07D          	movff	tablat,___flmul@b+1
  7889  0141A4  0009               	tblrd		*+
  7890  0141A6  CFF5 F07E          	movff	tablat,___flmul@b+2
  7891  0141AA  000A               	tblrd		*-
  7892  0141AC  CFF5 F07F          	movff	tablat,___flmul@b+3
  7893  0141B0  EC42  F098         	call	___flmul	;wreg free
  7894  0141B4  C07C  F09D         	movff	?___flmul,_fround$4193
  7895  0141B8  C07D  F09E         	movff	?___flmul+1,_fround$4193+1
  7896  0141BC  C07E  F09F         	movff	?___flmul+2,_fround$4193+2
  7897  0141C0  C07F  F0A0         	movff	?___flmul+3,_fround$4193+3
  7898                           
  7899                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  7900  0141C4  0E00               	movlw	0
  7901  0141C6  0100               	movlb	0	; () banked
  7902  0141C8  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  7903  0141CA  0E0A               	movlw	10
  7904  0141CC  6F70               	movwf	___awmod@divisor& (0+255),b
  7905  0141CE  C0A1  F06E         	movff	fround@prec,___awmod@dividend
  7906  0141D2  0100               	movlb	0	; () banked
  7907  0141D4  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  7908  0141D6  EC33  F0AC         	call	___awmod	;wreg free
  7909  0141DA  0100               	movlb	0	; () banked
  7910  0141DC  90D8               	bcf	status,0,c
  7911  0141DE  376E               	rlcf	?___awmod& (0+255),f,b
  7912  0141E0  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7913  0141E2  0100               	movlb	0	; () banked
  7914  0141E4  90D8               	bcf	status,0,c
  7915  0141E6  376E               	rlcf	?___awmod& (0+255),f,b
  7916  0141E8  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7917  0141EA  0EFF               	movlw	low __npowers_
  7918  0141EC  0100               	movlb	0	; () banked
  7919  0141EE  256E               	addwf	?___awmod& (0+255),w,b
  7920  0141F0  6EF6               	movwf	tblptrl,c
  7921  0141F2  0EFE               	movlw	high __npowers_
  7922  0141F4  0100               	movlb	0	; () banked
  7923  0141F6  216F               	addwfc	(?___awmod+1)& (0+255),w,b
  7924  0141F8  6EF7               	movwf	tblptrh,c
  7925  0141FA                     	if	1	;There are 3 active tblptr bytes
  7926  0141FA  6AF8               	clrf	tblptru,c
  7927  0141FC  0E00               	movlw	low (__mediumconst shr (0+16))
  7928  0141FE  22F8               	addwfc	tblptru,f,c
  7929  014200                     	endif
  7930  014200  0009               	tblrd		*+
  7931  014202  CFF5 F080          	movff	tablat,___flmul@a
  7932  014206  0009               	tblrd		*+
  7933  014208  CFF5 F081          	movff	tablat,___flmul@a+1
  7934  01420C  0009               	tblrd		*+
  7935  01420E  CFF5 F082          	movff	tablat,___flmul@a+2
  7936  014212  000A               	tblrd		*-
  7937  014214  CFF5 F083          	movff	tablat,___flmul@a+3
  7938  014218  C09D  F07C         	movff	_fround$4193,___flmul@b
  7939  01421C  C09E  F07D         	movff	_fround$4193+1,___flmul@b+1
  7940  014220  C09F  F07E         	movff	_fround$4193+2,___flmul@b+2
  7941  014224  C0A0  F07F         	movff	_fround$4193+3,___flmul@b+3
  7942  014228  EC42  F098         	call	___flmul	;wreg free
  7943  01422C  C07C  F099         	movff	?___flmul,_fround$4194
  7944  014230  C07D  F09A         	movff	?___flmul+1,_fround$4194+1
  7945  014234  C07E  F09B         	movff	?___flmul+2,_fround$4194+2
  7946  014238  C07F  F09C         	movff	?___flmul+3,_fround$4194+3
  7947                           
  7948                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  7949  01423C  C099  F07C         	movff	_fround$4194,___flmul@b
  7950  014240  C09A  F07D         	movff	_fround$4194+1,___flmul@b+1
  7951  014244  C09B  F07E         	movff	_fround$4194+2,___flmul@b+2
  7952  014248  C09C  F07F         	movff	_fround$4194+3,___flmul@b+3
  7953  01424C  0E00               	movlw	0
  7954  01424E  0100               	movlb	0	; () banked
  7955  014250  6F80               	movwf	___flmul@a& (0+255),b
  7956  014252  0E00               	movlw	0
  7957  014254  6F81               	movwf	(___flmul@a+1)& (0+255),b
  7958  014256  0E00               	movlw	0
  7959  014258  6F82               	movwf	(___flmul@a+2)& (0+255),b
  7960  01425A  0E3F               	movlw	63
  7961  01425C  6F83               	movwf	(___flmul@a+3)& (0+255),b
  7962  01425E  EC42  F098         	call	___flmul	;wreg free
  7963  014262  C07C  F095         	movff	?___flmul,?_fround
  7964  014266  C07D  F096         	movff	?___flmul+1,?_fround+1
  7965  01426A  C07E  F097         	movff	?___flmul+2,?_fround+2
  7966  01426E  C07F  F098         	movff	?___flmul+3,?_fround+3
  7967  014272  0012               	return	
  7968  014274                     l7753:
  7969                           
  7970                           ;doprnt.c: 415: else if(prec > 10)
  7971  014274  0E0A               	movlw	10
  7972  014276  0100               	movlb	0	; () banked
  7973  014278  65A1               	cpfsgt	fround@prec& (0+255),b
  7974  01427A  D078               	goto	l7761
  7975                           
  7976                           ; BSR set to: 0
  7977                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  7978  01427C  0E00               	movlw	0
  7979  01427E  0100               	movlb	0	; () banked
  7980  014280  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  7981  014282  0E0A               	movlw	10
  7982  014284  6F70               	movwf	___awmod@divisor& (0+255),b
  7983  014286  C0A1  F06E         	movff	fround@prec,___awmod@dividend
  7984  01428A  0100               	movlb	0	; () banked
  7985  01428C  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  7986  01428E  EC33  F0AC         	call	___awmod	;wreg free
  7987  014292  0100               	movlb	0	; () banked
  7988  014294  90D8               	bcf	status,0,c
  7989  014296  376E               	rlcf	?___awmod& (0+255),f,b
  7990  014298  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7991  01429A  0100               	movlb	0	; () banked
  7992  01429C  90D8               	bcf	status,0,c
  7993  01429E  376E               	rlcf	?___awmod& (0+255),f,b
  7994  0142A0  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7995  0142A2  0EFF               	movlw	low __npowers_
  7996  0142A4  0100               	movlb	0	; () banked
  7997  0142A6  256E               	addwf	?___awmod& (0+255),w,b
  7998  0142A8  6EF6               	movwf	tblptrl,c
  7999  0142AA  0EFE               	movlw	high __npowers_
  8000  0142AC  0100               	movlb	0	; () banked
  8001  0142AE  216F               	addwfc	(?___awmod+1)& (0+255),w,b
  8002  0142B0  6EF7               	movwf	tblptrh,c
  8003  0142B2                     	if	1	;There are 3 active tblptr bytes
  8004  0142B2  6AF8               	clrf	tblptru,c
  8005  0142B4  0E00               	movlw	low (__mediumconst shr (0+16))
  8006  0142B6  22F8               	addwfc	tblptru,f,c
  8007  0142B8                     	endif
  8008  0142B8  0009               	tblrd		*+
  8009  0142BA  CFF5 F080          	movff	tablat,___flmul@a
  8010  0142BE  0009               	tblrd		*+
  8011  0142C0  CFF5 F081          	movff	tablat,___flmul@a+1
  8012  0142C4  0009               	tblrd		*+
  8013  0142C6  CFF5 F082          	movff	tablat,___flmul@a+2
  8014  0142CA  000A               	tblrd		*-
  8015  0142CC  CFF5 F083          	movff	tablat,___flmul@a+3
  8016  0142D0  0E00               	movlw	0
  8017  0142D2  0100               	movlb	0	; () banked
  8018  0142D4  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  8019  0142D6  0E0A               	movlw	10
  8020  0142D8  6F76               	movwf	___awdiv@divisor& (0+255),b
  8021  0142DA  C0A1  F074         	movff	fround@prec,___awdiv@dividend
  8022  0142DE  0100               	movlb	0	; () banked
  8023  0142E0  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
  8024  0142E2  EC65  F0AA         	call	___awdiv	;wreg free
  8025  0142E6  0100               	movlb	0	; () banked
  8026  0142E8  90D8               	bcf	status,0,c
  8027  0142EA  3774               	rlcf	?___awdiv& (0+255),f,b
  8028  0142EC  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  8029  0142EE  0100               	movlb	0	; () banked
  8030  0142F0  90D8               	bcf	status,0,c
  8031  0142F2  3774               	rlcf	?___awdiv& (0+255),f,b
  8032  0142F4  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  8033  0142F6  0E24               	movlw	36
  8034  0142F8  0100               	movlb	0	; () banked
  8035  0142FA  2774               	addwf	?___awdiv& (0+255),f,b
  8036  0142FC  0E00               	movlw	0
  8037  0142FE  0100               	movlb	0	; () banked
  8038  014300  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  8039  014302  0EFF               	movlw	low __npowers_
  8040  014304  0100               	movlb	0	; () banked
  8041  014306  2574               	addwf	?___awdiv& (0+255),w,b
  8042  014308  6EF6               	movwf	tblptrl,c
  8043  01430A  0EFE               	movlw	high __npowers_
  8044  01430C  0100               	movlb	0	; () banked
  8045  01430E  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  8046  014310  6EF7               	movwf	tblptrh,c
  8047  014312                     	if	1	;There are 3 active tblptr bytes
  8048  014312  6AF8               	clrf	tblptru,c
  8049  014314  0E00               	movlw	low (__mediumconst shr (0+16))
  8050  014316  22F8               	addwfc	tblptru,f,c
  8051  014318                     	endif
  8052  014318  0009               	tblrd		*+
  8053  01431A  CFF5 F07C          	movff	tablat,___flmul@b
  8054  01431E  0009               	tblrd		*+
  8055  014320  CFF5 F07D          	movff	tablat,___flmul@b+1
  8056  014324  0009               	tblrd		*+
  8057  014326  CFF5 F07E          	movff	tablat,___flmul@b+2
  8058  01432A  000A               	tblrd		*-
  8059  01432C  CFF5 F07F          	movff	tablat,___flmul@b+3
  8060  014330  EC42  F098         	call	___flmul	;wreg free
  8061  014334  C07C  F09D         	movff	?___flmul,_fround$4193
  8062  014338  C07D  F09E         	movff	?___flmul+1,_fround$4193+1
  8063  01433C  C07E  F09F         	movff	?___flmul+2,_fround$4193+2
  8064  014340  C07F  F0A0         	movff	?___flmul+3,_fround$4193+3
  8065                           
  8066                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8067  014344  C09D  F07C         	movff	_fround$4193,___flmul@b
  8068  014348  C09E  F07D         	movff	_fround$4193+1,___flmul@b+1
  8069  01434C  C09F  F07E         	movff	_fround$4193+2,___flmul@b+2
  8070  014350  C0A0  F07F         	movff	_fround$4193+3,___flmul@b+3
  8071  014354  0E00               	movlw	0
  8072  014356  0100               	movlb	0	; () banked
  8073  014358  6F80               	movwf	___flmul@a& (0+255),b
  8074  01435A  0E00               	movlw	0
  8075  01435C  6F81               	movwf	(___flmul@a+1)& (0+255),b
  8076  01435E  0E00               	movlw	0
  8077  014360  6F82               	movwf	(___flmul@a+2)& (0+255),b
  8078  014362  0E3F               	movlw	63
  8079  014364  6F83               	movwf	(___flmul@a+3)& (0+255),b
  8080  014366  EC42  F098         	call	___flmul	;wreg free
  8081  01436A  D77B               	goto	L7
  8082  01436C                     l7761:
  8083                           
  8084                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  8085  01436C  0100               	movlb	0	; () banked
  8086  01436E  51A1               	movf	fround@prec& (0+255),w,b
  8087  014370  0D04               	mullw	4
  8088  014372  0EFF               	movlw	low __npowers_
  8089  014374  24F3               	addwf	prodl,w,c
  8090  014376  6EF6               	movwf	tblptrl,c
  8091  014378  0EFE               	movlw	high __npowers_
  8092  01437A  20F4               	addwfc	prodh,w,c
  8093  01437C  6EF7               	movwf	tblptrh,c
  8094  01437E                     	if	1	;There are 3 active tblptr bytes
  8095  01437E  6AF8               	clrf	tblptru,c
  8096  014380  0E00               	movlw	low (__mediumconst shr (0+16))
  8097  014382  22F8               	addwfc	tblptru,f,c
  8098  014384                     	endif
  8099  014384  0009               	tblrd		*+
  8100  014386  CFF5 F07C          	movff	tablat,___flmul@b
  8101  01438A  0009               	tblrd		*+
  8102  01438C  CFF5 F07D          	movff	tablat,___flmul@b+1
  8103  014390  0009               	tblrd		*+
  8104  014392  CFF5 F07E          	movff	tablat,___flmul@b+2
  8105  014396  000A               	tblrd		*-
  8106  014398  CFF5 F07F          	movff	tablat,___flmul@b+3
  8107  01439C  0E00               	movlw	0
  8108  01439E  0100               	movlb	0	; () banked
  8109  0143A0  6F80               	movwf	___flmul@a& (0+255),b
  8110  0143A2  0E00               	movlw	0
  8111  0143A4  6F81               	movwf	(___flmul@a+1)& (0+255),b
  8112  0143A6  0E00               	movlw	0
  8113  0143A8  6F82               	movwf	(___flmul@a+2)& (0+255),b
  8114  0143AA  0E3F               	movlw	63
  8115  0143AC  6F83               	movwf	(___flmul@a+3)& (0+255),b
  8116  0143AE  EC42  F098         	call	___flmul	;wreg free
  8117  0143B2  C07C  F095         	movff	?___flmul,?_fround
  8118  0143B6  C07D  F096         	movff	?___flmul+1,?_fround+1
  8119  0143BA  C07E  F097         	movff	?___flmul+2,?_fround+2
  8120  0143BE  C07F  F098         	movff	?___flmul+3,?_fround+3
  8121  0143C2  0012               	return	
  8122  0143C4                     __end_of_fround:
  8123                           	opt stack 0
  8124                           tblptru	equ	0xFF8
  8125                           tblptrh	equ	0xFF7
  8126                           tblptrl	equ	0xFF6
  8127                           tablat	equ	0xFF5
  8128                           prodh	equ	0xFF4
  8129                           prodl	equ	0xFF3
  8130                           intcon	equ	0xFF2
  8131                           postinc0	equ	0xFEE
  8132                           wreg	equ	0xFE8
  8133                           indf2	equ	0xFDF
  8134                           postinc2	equ	0xFDE
  8135                           fsr2h	equ	0xFDA
  8136                           fsr2l	equ	0xFD9
  8137                           status	equ	0xFD8
  8138                           
  8139 ;; *************** function ___flmul *****************
  8140 ;; Defined at:
  8141 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  8142 ;; Parameters:    Size  Location     Type
  8143 ;;  b               4   28[BANK0 ] unsigned char 
  8144 ;;  a               4   32[BANK0 ] unsigned char 
  8145 ;; Auto vars:     Size  Location     Type
  8146 ;;  prod            4   47[BANK0 ] struct .
  8147 ;;  grs             4   42[BANK0 ] unsigned long 
  8148 ;;  temp            2   51[BANK0 ] struct .
  8149 ;;  bexp            1   46[BANK0 ] unsigned char 
  8150 ;;  aexp            1   41[BANK0 ] unsigned char 
  8151 ;;  sign            1   40[BANK0 ] unsigned char 
  8152 ;; Return value:  Size  Location     Type
  8153 ;;                  4   28[BANK0 ] unsigned char 
  8154 ;; Registers used:
  8155 ;;		wreg, status,2, status,0, prodl, prodh
  8156 ;; Tracked objects:
  8157 ;;		On entry : 0/0
  8158 ;;		On exit  : 0/0
  8159 ;;		Unchanged: 0/0
  8160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8161 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8162 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8163 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8164 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8165 ;;Total ram usage:       25 bytes
  8166 ;; Hardware stack levels used:    1
  8167 ;; Hardware stack levels required when called:    3
  8168 ;; This function calls:
  8169 ;;		Nothing
  8170 ;; This function is called by:
  8171 ;;		_main
  8172 ;;		_fround
  8173 ;;		_scale
  8174 ;;		_sprintf
  8175 ;; This function uses a non-reentrant model
  8176 ;;
  8177                           
  8178                           	psect	text12
  8179  013084                     __ptext12:
  8180                           	opt stack 0
  8181  013084                     ___flmul:
  8182                           	opt stack 27
  8183                           
  8184                           ;incstack = 0
  8185  013084  0100               	movlb	0	; () banked
  8186  013086  517F               	movf	(___flmul@b+3)& (0+255),w,b
  8187  013088  0B80               	andlw	128
  8188  01308A  0100               	movlb	0	; () banked
  8189  01308C  6F88               	movwf	___flmul@sign& (0+255),b
  8190  01308E  0100               	movlb	0	; () banked
  8191  013090  517F               	movf	(___flmul@b+3)& (0+255),w,b
  8192  013092  257F               	addwf	(___flmul@b+3)& (0+255),w,b
  8193  013094  0100               	movlb	0	; () banked
  8194  013096  6F8E               	movwf	___flmul@bexp& (0+255),b
  8195                           
  8196                           ; BSR set to: 0
  8197  013098  0100               	movlb	0	; () banked
  8198  01309A  AF7E               	btfss	(___flmul@b+2)& (0+255),7,b
  8199  01309C  D002               	goto	l7527
  8200                           
  8201                           ; BSR set to: 0
  8202  01309E  0100               	movlb	0	; () banked
  8203  0130A0  818E               	bsf	___flmul@bexp& (0+255),0,b
  8204  0130A2                     l7527:
  8205                           
  8206                           ; BSR set to: 0
  8207  0130A2  0100               	movlb	0	; () banked
  8208  0130A4  518E               	movf	___flmul@bexp& (0+255),w,b
  8209  0130A6  0100               	movlb	0	; () banked
  8210  0130A8  B4D8               	btfsc	status,2,c
  8211  0130AA  D010               	goto	l7535
  8212                           
  8213                           ; BSR set to: 0
  8214  0130AC  0100               	movlb	0	; () banked
  8215  0130AE  298E               	incf	___flmul@bexp& (0+255),w,b
  8216  0130B0  A4D8               	btfss	status,2,c
  8217  0130B2  D009               	goto	l7533
  8218                           
  8219                           ; BSR set to: 0
  8220  0130B4  0E00               	movlw	0
  8221  0130B6  0100               	movlb	0	; () banked
  8222  0130B8  6F7C               	movwf	___flmul@b& (0+255),b
  8223  0130BA  0E00               	movlw	0
  8224  0130BC  6F7D               	movwf	(___flmul@b+1)& (0+255),b
  8225  0130BE  0E00               	movlw	0
  8226  0130C0  6F7E               	movwf	(___flmul@b+2)& (0+255),b
  8227  0130C2  0E00               	movlw	0
  8228  0130C4  6F7F               	movwf	(___flmul@b+3)& (0+255),b
  8229  0130C6                     l7533:
  8230                           
  8231                           ; BSR set to: 0
  8232  0130C6  0100               	movlb	0	; () banked
  8233  0130C8  8F7E               	bsf	(___flmul@b+2)& (0+255),7,b
  8234  0130CA  D009               	goto	l7537
  8235  0130CC                     l7535:
  8236                           
  8237                           ; BSR set to: 0
  8238  0130CC  0E00               	movlw	0
  8239  0130CE  0100               	movlb	0	; () banked
  8240  0130D0  6F7C               	movwf	___flmul@b& (0+255),b
  8241  0130D2  0E00               	movlw	0
  8242  0130D4  6F7D               	movwf	(___flmul@b+1)& (0+255),b
  8243  0130D6  0E00               	movlw	0
  8244  0130D8  6F7E               	movwf	(___flmul@b+2)& (0+255),b
  8245  0130DA  0E00               	movlw	0
  8246  0130DC  6F7F               	movwf	(___flmul@b+3)& (0+255),b
  8247  0130DE                     l7537:
  8248                           
  8249                           ; BSR set to: 0
  8250  0130DE  0100               	movlb	0	; () banked
  8251  0130E0  5183               	movf	(___flmul@a+3)& (0+255),w,b
  8252  0130E2  0B80               	andlw	128
  8253  0130E4  0100               	movlb	0	; () banked
  8254  0130E6  1B88               	xorwf	___flmul@sign& (0+255),f,b
  8255                           
  8256                           ; BSR set to: 0
  8257  0130E8  0100               	movlb	0	; () banked
  8258  0130EA  5183               	movf	(___flmul@a+3)& (0+255),w,b
  8259  0130EC  2583               	addwf	(___flmul@a+3)& (0+255),w,b
  8260  0130EE  0100               	movlb	0	; () banked
  8261  0130F0  6F89               	movwf	___flmul@aexp& (0+255),b
  8262                           
  8263                           ; BSR set to: 0
  8264  0130F2  0100               	movlb	0	; () banked
  8265  0130F4  AF82               	btfss	(___flmul@a+2)& (0+255),7,b
  8266  0130F6  D002               	goto	l7545
  8267                           
  8268                           ; BSR set to: 0
  8269  0130F8  0100               	movlb	0	; () banked
  8270  0130FA  8189               	bsf	___flmul@aexp& (0+255),0,b
  8271  0130FC                     l7545:
  8272                           
  8273                           ; BSR set to: 0
  8274  0130FC  0100               	movlb	0	; () banked
  8275  0130FE  5189               	movf	___flmul@aexp& (0+255),w,b
  8276  013100  0100               	movlb	0	; () banked
  8277  013102  B4D8               	btfsc	status,2,c
  8278  013104  D010               	goto	l7553
  8279                           
  8280                           ; BSR set to: 0
  8281  013106  0100               	movlb	0	; () banked
  8282  013108  2989               	incf	___flmul@aexp& (0+255),w,b
  8283  01310A  A4D8               	btfss	status,2,c
  8284  01310C  D009               	goto	l7551
  8285                           
  8286                           ; BSR set to: 0
  8287  01310E  0E00               	movlw	0
  8288  013110  0100               	movlb	0	; () banked
  8289  013112  6F80               	movwf	___flmul@a& (0+255),b
  8290  013114  0E00               	movlw	0
  8291  013116  6F81               	movwf	(___flmul@a+1)& (0+255),b
  8292  013118  0E00               	movlw	0
  8293  01311A  6F82               	movwf	(___flmul@a+2)& (0+255),b
  8294  01311C  0E00               	movlw	0
  8295  01311E  6F83               	movwf	(___flmul@a+3)& (0+255),b
  8296  013120                     l7551:
  8297                           
  8298                           ; BSR set to: 0
  8299  013120  0100               	movlb	0	; () banked
  8300  013122  8F82               	bsf	(___flmul@a+2)& (0+255),7,b
  8301  013124  D009               	goto	l1491
  8302  013126                     l7553:
  8303                           
  8304                           ; BSR set to: 0
  8305  013126  0E00               	movlw	0
  8306  013128  0100               	movlb	0	; () banked
  8307  01312A  6F80               	movwf	___flmul@a& (0+255),b
  8308  01312C  0E00               	movlw	0
  8309  01312E  6F81               	movwf	(___flmul@a+1)& (0+255),b
  8310  013130  0E00               	movlw	0
  8311  013132  6F82               	movwf	(___flmul@a+2)& (0+255),b
  8312  013134  0E00               	movlw	0
  8313  013136  6F83               	movwf	(___flmul@a+3)& (0+255),b
  8314  013138                     l1491:
  8315                           
  8316                           ; BSR set to: 0
  8317  013138  0100               	movlb	0	; () banked
  8318  01313A  5189               	movf	___flmul@aexp& (0+255),w,b
  8319  01313C  0100               	movlb	0	; () banked
  8320  01313E  B4D8               	btfsc	status,2,c
  8321  013140  D005               	goto	l7557
  8322                           
  8323                           ; BSR set to: 0
  8324  013142  0100               	movlb	0	; () banked
  8325  013144  518E               	movf	___flmul@bexp& (0+255),w,b
  8326  013146  0100               	movlb	0	; () banked
  8327  013148  A4D8               	btfss	status,2,c
  8328  01314A  D00A               	goto	l7561
  8329  01314C                     l7557:
  8330                           
  8331                           ; BSR set to: 0
  8332  01314C  0E00               	movlw	0
  8333  01314E  0100               	movlb	0	; () banked
  8334  013150  6F7C               	movwf	?___flmul& (0+255),b
  8335  013152  0E00               	movlw	0
  8336  013154  6F7D               	movwf	(?___flmul+1)& (0+255),b
  8337  013156  0E00               	movlw	0
  8338  013158  6F7E               	movwf	(?___flmul+2)& (0+255),b
  8339  01315A  0E00               	movlw	0
  8340  01315C  6F7F               	movwf	(?___flmul+3)& (0+255),b
  8341                           
  8342                           ; BSR set to: 0
  8343  01315E  0012               	return	
  8344  013160                     l7561:
  8345                           
  8346                           ; BSR set to: 0
  8347  013160  0100               	movlb	0	; () banked
  8348  013162  5182               	movf	(___flmul@a+2)& (0+255),w,b
  8349  013164  0100               	movlb	0	; () banked
  8350  013166  037C               	mulwf	___flmul@b& (0+255),b
  8351  013168  CFF3 F093          	movff	prodl,___flmul@temp
  8352  01316C  CFF4 F094          	movff	prodh,___flmul@temp+1
  8353                           
  8354                           ; BSR set to: 0
  8355  013170  0100               	movlb	0	; () banked
  8356  013172  5193               	movf	___flmul@temp& (0+255),w,b
  8357  013174  0100               	movlb	0	; () banked
  8358  013176  6F8A               	movwf	___flmul@grs& (0+255),b
  8359  013178  6B8B               	clrf	(___flmul@grs+1)& (0+255),b
  8360  01317A  6B8C               	clrf	(___flmul@grs+2)& (0+255),b
  8361  01317C  6B8D               	clrf	(___flmul@grs+3)& (0+255),b
  8362                           
  8363                           ; BSR set to: 0
  8364  01317E  0100               	movlb	0	; () banked
  8365  013180  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8366  013182  0100               	movlb	0	; () banked
  8367  013184  6F8F               	movwf	___flmul@prod& (0+255),b
  8368  013186  6B90               	clrf	(___flmul@prod+1)& (0+255),b
  8369  013188  6B91               	clrf	(___flmul@prod+2)& (0+255),b
  8370  01318A  6B92               	clrf	(___flmul@prod+3)& (0+255),b
  8371  01318C  0100               	movlb	0	; () banked
  8372  01318E  5181               	movf	(___flmul@a+1)& (0+255),w,b
  8373  013190  0100               	movlb	0	; () banked
  8374  013192  037D               	mulwf	(___flmul@b+1)& (0+255),b
  8375  013194  CFF3 F093          	movff	prodl,___flmul@temp
  8376  013198  CFF4 F094          	movff	prodh,___flmul@temp+1
  8377                           
  8378                           ; BSR set to: 0
  8379  01319C  0100               	movlb	0	; () banked
  8380  01319E  5193               	movf	___flmul@temp& (0+255),w,b
  8381  0131A0  0100               	movlb	0	; () banked
  8382  0131A2  278A               	addwf	___flmul@grs& (0+255),f,b
  8383  0131A4  0E00               	movlw	0
  8384  0131A6  238B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8385  0131A8  238C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8386  0131AA  238D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8387                           
  8388                           ; BSR set to: 0
  8389  0131AC  0100               	movlb	0	; () banked
  8390  0131AE  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8391  0131B0  0100               	movlb	0	; () banked
  8392  0131B2  278F               	addwf	___flmul@prod& (0+255),f,b
  8393  0131B4  0E00               	movlw	0
  8394  0131B6  2390               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8395  0131B8  2391               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8396  0131BA  2392               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8397  0131BC  0100               	movlb	0	; () banked
  8398  0131BE  5180               	movf	___flmul@a& (0+255),w,b
  8399  0131C0  0100               	movlb	0	; () banked
  8400  0131C2  037E               	mulwf	(___flmul@b+2)& (0+255),b
  8401  0131C4  CFF3 F093          	movff	prodl,___flmul@temp
  8402  0131C8  CFF4 F094          	movff	prodh,___flmul@temp+1
  8403                           
  8404                           ; BSR set to: 0
  8405  0131CC  0100               	movlb	0	; () banked
  8406  0131CE  5193               	movf	___flmul@temp& (0+255),w,b
  8407  0131D0  0100               	movlb	0	; () banked
  8408  0131D2  278A               	addwf	___flmul@grs& (0+255),f,b
  8409  0131D4  0E00               	movlw	0
  8410  0131D6  238B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8411  0131D8  238C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8412  0131DA  238D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8413                           
  8414                           ; BSR set to: 0
  8415  0131DC  0100               	movlb	0	; () banked
  8416  0131DE  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8417  0131E0  0100               	movlb	0	; () banked
  8418  0131E2  278F               	addwf	___flmul@prod& (0+255),f,b
  8419  0131E4  0E00               	movlw	0
  8420  0131E6  2390               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8421  0131E8  2391               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8422  0131EA  2392               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8423                           
  8424                           ; BSR set to: 0
  8425  0131EC  C08C  F08D         	movff	___flmul@grs+2,___flmul@grs+3
  8426  0131F0  C08B  F08C         	movff	___flmul@grs+1,___flmul@grs+2
  8427  0131F4  C08A  F08B         	movff	___flmul@grs,___flmul@grs+1
  8428  0131F8  0100               	movlb	0	; () banked
  8429  0131FA  6B8A               	clrf	___flmul@grs& (0+255),b
  8430                           
  8431                           ; BSR set to: 0
  8432  0131FC  0100               	movlb	0	; () banked
  8433  0131FE  5180               	movf	___flmul@a& (0+255),w,b
  8434  013200  0100               	movlb	0	; () banked
  8435  013202  037D               	mulwf	(___flmul@b+1)& (0+255),b
  8436  013204  CFF3 F093          	movff	prodl,___flmul@temp
  8437  013208  CFF4 F094          	movff	prodh,___flmul@temp+1
  8438                           
  8439                           ; BSR set to: 0
  8440  01320C  0100               	movlb	0	; () banked
  8441  01320E  5193               	movf	___flmul@temp& (0+255),w,b
  8442  013210  0100               	movlb	0	; () banked
  8443  013212  278A               	addwf	___flmul@grs& (0+255),f,b
  8444  013214  0100               	movlb	0	; () banked
  8445  013216  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8446  013218  0100               	movlb	0	; () banked
  8447  01321A  238B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8448  01321C  0E00               	movlw	0
  8449  01321E  0100               	movlb	0	; () banked
  8450  013220  238C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8451  013222  0E00               	movlw	0
  8452  013224  0100               	movlb	0	; () banked
  8453  013226  238D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8454                           
  8455                           ; BSR set to: 0
  8456  013228  0100               	movlb	0	; () banked
  8457  01322A  5181               	movf	(___flmul@a+1)& (0+255),w,b
  8458  01322C  0100               	movlb	0	; () banked
  8459  01322E  037C               	mulwf	___flmul@b& (0+255),b
  8460  013230  CFF3 F093          	movff	prodl,___flmul@temp
  8461  013234  CFF4 F094          	movff	prodh,___flmul@temp+1
  8462                           
  8463                           ; BSR set to: 0
  8464  013238  0100               	movlb	0	; () banked
  8465  01323A  5193               	movf	___flmul@temp& (0+255),w,b
  8466  01323C  0100               	movlb	0	; () banked
  8467  01323E  278A               	addwf	___flmul@grs& (0+255),f,b
  8468  013240  0100               	movlb	0	; () banked
  8469  013242  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8470  013244  0100               	movlb	0	; () banked
  8471  013246  238B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8472  013248  0E00               	movlw	0
  8473  01324A  0100               	movlb	0	; () banked
  8474  01324C  238C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8475  01324E  0E00               	movlw	0
  8476  013250  0100               	movlb	0	; () banked
  8477  013252  238D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8478                           
  8479                           ; BSR set to: 0
  8480  013254  C08C  F08D         	movff	___flmul@grs+2,___flmul@grs+3
  8481  013258  C08B  F08C         	movff	___flmul@grs+1,___flmul@grs+2
  8482  01325C  C08A  F08B         	movff	___flmul@grs,___flmul@grs+1
  8483  013260  0100               	movlb	0	; () banked
  8484  013262  6B8A               	clrf	___flmul@grs& (0+255),b
  8485  013264  0100               	movlb	0	; () banked
  8486  013266  5180               	movf	___flmul@a& (0+255),w,b
  8487  013268  0100               	movlb	0	; () banked
  8488  01326A  037C               	mulwf	___flmul@b& (0+255),b
  8489  01326C  CFF3 F093          	movff	prodl,___flmul@temp
  8490  013270  CFF4 F094          	movff	prodh,___flmul@temp+1
  8491                           
  8492                           ; BSR set to: 0
  8493  013274  0100               	movlb	0	; () banked
  8494  013276  5193               	movf	___flmul@temp& (0+255),w,b
  8495  013278  0100               	movlb	0	; () banked
  8496  01327A  278A               	addwf	___flmul@grs& (0+255),f,b
  8497  01327C  0100               	movlb	0	; () banked
  8498  01327E  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8499  013280  0100               	movlb	0	; () banked
  8500  013282  238B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8501  013284  0E00               	movlw	0
  8502  013286  0100               	movlb	0	; () banked
  8503  013288  238C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8504  01328A  0E00               	movlw	0
  8505  01328C  0100               	movlb	0	; () banked
  8506  01328E  238D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8507                           
  8508                           ; BSR set to: 0
  8509  013290  0100               	movlb	0	; () banked
  8510  013292  5182               	movf	(___flmul@a+2)& (0+255),w,b
  8511  013294  0100               	movlb	0	; () banked
  8512  013296  037D               	mulwf	(___flmul@b+1)& (0+255),b
  8513  013298  CFF3 F093          	movff	prodl,___flmul@temp
  8514  01329C  CFF4 F094          	movff	prodh,___flmul@temp+1
  8515  0132A0  0100               	movlb	0	; () banked
  8516  0132A2  5193               	movf	___flmul@temp& (0+255),w,b
  8517  0132A4  0100               	movlb	0	; () banked
  8518  0132A6  278F               	addwf	___flmul@prod& (0+255),f,b
  8519  0132A8  0100               	movlb	0	; () banked
  8520  0132AA  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8521  0132AC  0100               	movlb	0	; () banked
  8522  0132AE  2390               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8523  0132B0  0E00               	movlw	0
  8524  0132B2  0100               	movlb	0	; () banked
  8525  0132B4  2391               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8526  0132B6  0E00               	movlw	0
  8527  0132B8  0100               	movlb	0	; () banked
  8528  0132BA  2392               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8529                           
  8530                           ; BSR set to: 0
  8531  0132BC  0100               	movlb	0	; () banked
  8532  0132BE  5181               	movf	(___flmul@a+1)& (0+255),w,b
  8533  0132C0  0100               	movlb	0	; () banked
  8534  0132C2  037E               	mulwf	(___flmul@b+2)& (0+255),b
  8535  0132C4  CFF3 F093          	movff	prodl,___flmul@temp
  8536  0132C8  CFF4 F094          	movff	prodh,___flmul@temp+1
  8537                           
  8538                           ; BSR set to: 0
  8539  0132CC  0100               	movlb	0	; () banked
  8540  0132CE  5193               	movf	___flmul@temp& (0+255),w,b
  8541  0132D0  0100               	movlb	0	; () banked
  8542  0132D2  278F               	addwf	___flmul@prod& (0+255),f,b
  8543  0132D4  0100               	movlb	0	; () banked
  8544  0132D6  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8545  0132D8  0100               	movlb	0	; () banked
  8546  0132DA  2390               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8547  0132DC  0E00               	movlw	0
  8548  0132DE  0100               	movlb	0	; () banked
  8549  0132E0  2391               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8550  0132E2  0E00               	movlw	0
  8551  0132E4  0100               	movlb	0	; () banked
  8552  0132E6  2392               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8553  0132E8  0100               	movlb	0	; () banked
  8554  0132EA  5182               	movf	(___flmul@a+2)& (0+255),w,b
  8555  0132EC  0100               	movlb	0	; () banked
  8556  0132EE  037E               	mulwf	(___flmul@b+2)& (0+255),b
  8557  0132F0  CFF3 F093          	movff	prodl,___flmul@temp
  8558  0132F4  CFF4 F094          	movff	prodh,___flmul@temp+1
  8559                           
  8560                           ; BSR set to: 0
  8561  0132F8  0100               	movlb	0	; () banked
  8562  0132FA  5193               	movf	___flmul@temp& (0+255),w,b
  8563  0132FC  0100               	movlb	0	; () banked
  8564  0132FE  6F84               	movwf	??___flmul& (0+255),b
  8565  013300  0100               	movlb	0	; () banked
  8566  013302  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8567  013304  0100               	movlb	0	; () banked
  8568  013306  6F85               	movwf	(??___flmul+1)& (0+255),b
  8569  013308  0100               	movlb	0	; () banked
  8570  01330A  6B86               	clrf	(??___flmul+2)& (0+255),b
  8571  01330C  0100               	movlb	0	; () banked
  8572  01330E  6B87               	clrf	(??___flmul+3)& (0+255),b
  8573  013310  C086  F087         	movff	??___flmul+2,??___flmul+3
  8574  013314  C085  F086         	movff	??___flmul+1,??___flmul+2
  8575  013318  C084  F085         	movff	??___flmul,??___flmul+1
  8576  01331C  0100               	movlb	0	; () banked
  8577  01331E  6B84               	clrf	??___flmul& (0+255),b
  8578  013320  0100               	movlb	0	; () banked
  8579  013322  5184               	movf	??___flmul& (0+255),w,b
  8580  013324  0100               	movlb	0	; () banked
  8581  013326  278F               	addwf	___flmul@prod& (0+255),f,b
  8582  013328  0100               	movlb	0	; () banked
  8583  01332A  5185               	movf	(??___flmul+1)& (0+255),w,b
  8584  01332C  0100               	movlb	0	; () banked
  8585  01332E  2390               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8586  013330  0100               	movlb	0	; () banked
  8587  013332  5186               	movf	(??___flmul+2)& (0+255),w,b
  8588  013334  0100               	movlb	0	; () banked
  8589  013336  2391               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8590  013338  0100               	movlb	0	; () banked
  8591  01333A  5187               	movf	(??___flmul+3)& (0+255),w,b
  8592  01333C  0100               	movlb	0	; () banked
  8593  01333E  2392               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8594                           
  8595                           ; BSR set to: 0
  8596  013340  C08A  F084         	movff	___flmul@grs,??___flmul
  8597  013344  C08B  F085         	movff	___flmul@grs+1,??___flmul+1
  8598  013348  C08C  F086         	movff	___flmul@grs+2,??___flmul+2
  8599  01334C  C08D  F087         	movff	___flmul@grs+3,??___flmul+3
  8600  013350  0E19               	movlw	25
  8601  013352  D006               	goto	u9770
  8602  013354                     u9775:
  8603  013354  0100               	movlb	0	; () banked
  8604  013356  90D8               	bcf	status,0,c
  8605  013358  3387               	rrcf	(??___flmul+3)& (0+255),f,b
  8606  01335A  3386               	rrcf	(??___flmul+2)& (0+255),f,b
  8607  01335C  3385               	rrcf	(??___flmul+1)& (0+255),f,b
  8608  01335E  3384               	rrcf	??___flmul& (0+255),f,b
  8609  013360                     u9770:
  8610  013360  2EE8               	decfsz	wreg,f,c
  8611  013362  D7F8               	goto	u9775
  8612  013364  0100               	movlb	0	; () banked
  8613  013366  5184               	movf	??___flmul& (0+255),w,b
  8614  013368  0100               	movlb	0	; () banked
  8615  01336A  278F               	addwf	___flmul@prod& (0+255),f,b
  8616  01336C  0100               	movlb	0	; () banked
  8617  01336E  5185               	movf	(??___flmul+1)& (0+255),w,b
  8618  013370  0100               	movlb	0	; () banked
  8619  013372  2390               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8620  013374  0100               	movlb	0	; () banked
  8621  013376  5186               	movf	(??___flmul+2)& (0+255),w,b
  8622  013378  0100               	movlb	0	; () banked
  8623  01337A  2391               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8624  01337C  0100               	movlb	0	; () banked
  8625  01337E  5187               	movf	(??___flmul+3)& (0+255),w,b
  8626  013380  0100               	movlb	0	; () banked
  8627  013382  2392               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8628                           
  8629                           ; BSR set to: 0
  8630  013384  C08C  F08D         	movff	___flmul@grs+2,___flmul@grs+3
  8631  013388  C08B  F08C         	movff	___flmul@grs+1,___flmul@grs+2
  8632  01338C  C08A  F08B         	movff	___flmul@grs,___flmul@grs+1
  8633  013390  0100               	movlb	0	; () banked
  8634  013392  6B8A               	clrf	___flmul@grs& (0+255),b
  8635                           
  8636                           ; BSR set to: 0
  8637  013394  0100               	movlb	0	; () banked
  8638  013396  5189               	movf	___flmul@aexp& (0+255),w,b
  8639  013398  C08E  F084         	movff	___flmul@bexp,??___flmul
  8640  01339C  0100               	movlb	0	; () banked
  8641  01339E  6B85               	clrf	(??___flmul+1)& (0+255),b
  8642  0133A0  0100               	movlb	0	; () banked
  8643  0133A2  2784               	addwf	??___flmul& (0+255),f,b
  8644  0133A4  0E00               	movlw	0
  8645  0133A6  2385               	addwfc	(??___flmul+1)& (0+255),f,b
  8646  0133A8  0E82               	movlw	130
  8647  0133AA  0100               	movlb	0	; () banked
  8648  0133AC  2584               	addwf	??___flmul& (0+255),w,b
  8649  0133AE  0100               	movlb	0	; () banked
  8650  0133B0  6F93               	movwf	___flmul@temp& (0+255),b
  8651  0133B2  0EFF               	movlw	255
  8652  0133B4  0100               	movlb	0	; () banked
  8653  0133B6  2185               	addwfc	(??___flmul+1)& (0+255),w,b
  8654  0133B8  0100               	movlb	0	; () banked
  8655  0133BA  6F94               	movwf	(___flmul@temp+1)& (0+255),b
  8656  0133BC  D015               	goto	l7609
  8657  0133BE                     l7603:
  8658                           
  8659                           ; BSR set to: 0
  8660  0133BE  0100               	movlb	0	; () banked
  8661  0133C0  90D8               	bcf	status,0,c
  8662  0133C2  378F               	rlcf	___flmul@prod& (0+255),f,b
  8663  0133C4  3790               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8664  0133C6  3791               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8665  0133C8  3792               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8666                           
  8667                           ; BSR set to: 0
  8668  0133CA  0100               	movlb	0	; () banked
  8669  0133CC  AF8D               	btfss	(___flmul@grs+3)& (0+255),7,b
  8670  0133CE  D002               	goto	l1498
  8671                           
  8672                           ; BSR set to: 0
  8673  0133D0  0100               	movlb	0	; () banked
  8674  0133D2  818F               	bsf	___flmul@prod& (0+255),0,b
  8675  0133D4                     l1498:
  8676                           
  8677                           ; BSR set to: 0
  8678  0133D4  0100               	movlb	0	; () banked
  8679  0133D6  90D8               	bcf	status,0,c
  8680  0133D8  378A               	rlcf	___flmul@grs& (0+255),f,b
  8681  0133DA  378B               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8682  0133DC  378C               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8683  0133DE  378D               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8684  0133E0  0100               	movlb	0	; () banked
  8685  0133E2  0793               	decf	___flmul@temp& (0+255),f,b
  8686  0133E4  A0D8               	btfss	status,0,c
  8687  0133E6  0794               	decf	(___flmul@temp+1)& (0+255),f,b
  8688  0133E8                     l7609:
  8689                           
  8690                           ; BSR set to: 0
  8691  0133E8  0100               	movlb	0	; () banked
  8692  0133EA  AF91               	btfss	(___flmul@prod+2)& (0+255),7,b
  8693  0133EC  D7E8               	goto	l7603
  8694                           
  8695                           ; BSR set to: 0
  8696                           
  8697                           ; BSR set to: 0
  8698  0133EE  0E00               	movlw	0
  8699  0133F0  0100               	movlb	0	; () banked
  8700  0133F2  6F89               	movwf	___flmul@aexp& (0+255),b
  8701                           
  8702                           ; BSR set to: 0
  8703  0133F4  0100               	movlb	0	; () banked
  8704  0133F6  AF8D               	btfss	(___flmul@grs+3)& (0+255),7,b
  8705  0133F8  D024               	goto	l1500
  8706                           
  8707                           ; BSR set to: 0
  8708  0133FA  0EFF               	movlw	255
  8709  0133FC  0100               	movlb	0	; () banked
  8710  0133FE  158A               	andwf	___flmul@grs& (0+255),w,b
  8711  013400  0100               	movlb	0	; () banked
  8712  013402  6F84               	movwf	??___flmul& (0+255),b
  8713  013404  0EFF               	movlw	255
  8714  013406  0100               	movlb	0	; () banked
  8715  013408  158B               	andwf	(___flmul@grs+1)& (0+255),w,b
  8716  01340A  0100               	movlb	0	; () banked
  8717  01340C  6F85               	movwf	(??___flmul+1)& (0+255),b
  8718  01340E  0EFF               	movlw	255
  8719  013410  0100               	movlb	0	; () banked
  8720  013412  158C               	andwf	(___flmul@grs+2)& (0+255),w,b
  8721  013414  0100               	movlb	0	; () banked
  8722  013416  6F86               	movwf	(??___flmul+2)& (0+255),b
  8723  013418  0E7F               	movlw	127
  8724  01341A  0100               	movlb	0	; () banked
  8725  01341C  158D               	andwf	(___flmul@grs+3)& (0+255),w,b
  8726  01341E  0100               	movlb	0	; () banked
  8727  013420  6F87               	movwf	(??___flmul+3)& (0+255),b
  8728  013422  0100               	movlb	0	; () banked
  8729  013424  5184               	movf	??___flmul& (0+255),w,b
  8730  013426  0100               	movlb	0	; () banked
  8731  013428  1185               	iorwf	(??___flmul+1)& (0+255),w,b
  8732  01342A  0100               	movlb	0	; () banked
  8733  01342C  1186               	iorwf	(??___flmul+2)& (0+255),w,b
  8734  01342E  0100               	movlb	0	; () banked
  8735  013430  1187               	iorwf	(??___flmul+3)& (0+255),w,b
  8736  013432  A4D8               	btfss	status,2,c
  8737  013434  D003               	goto	l7619
  8738                           
  8739                           ; BSR set to: 0
  8740                           
  8741                           ; BSR set to: 0
  8742  013436  0100               	movlb	0	; () banked
  8743  013438  A18F               	btfss	___flmul@prod& (0+255),0,b
  8744  01343A  D003               	goto	l1500
  8745  01343C                     l7619:
  8746                           
  8747                           ; BSR set to: 0
  8748  01343C  0E01               	movlw	1
  8749  01343E  0100               	movlb	0	; () banked
  8750  013440  6F89               	movwf	___flmul@aexp& (0+255),b
  8751  013442                     l1500:
  8752                           
  8753                           ; BSR set to: 0
  8754  013442  0100               	movlb	0	; () banked
  8755  013444  5189               	movf	___flmul@aexp& (0+255),w,b
  8756  013446  0100               	movlb	0	; () banked
  8757  013448  B4D8               	btfsc	status,2,c
  8758  01344A  D023               	goto	l7629
  8759                           
  8760                           ; BSR set to: 0
  8761  01344C  0E01               	movlw	1
  8762  01344E  0100               	movlb	0	; () banked
  8763  013450  278F               	addwf	___flmul@prod& (0+255),f,b
  8764  013452  0E00               	movlw	0
  8765  013454  2390               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8766  013456  2391               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8767  013458  2392               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8768                           
  8769                           ; BSR set to: 0
  8770  01345A  0100               	movlb	0	; () banked
  8771  01345C  A192               	btfss	(___flmul@prod+3)& (0+255),0,b
  8772  01345E  D019               	goto	l7629
  8773                           
  8774                           ; BSR set to: 0
  8775  013460  C08F  F084         	movff	___flmul@prod,??___flmul
  8776  013464  C090  F085         	movff	___flmul@prod+1,??___flmul+1
  8777  013468  C091  F086         	movff	___flmul@prod+2,??___flmul+2
  8778  01346C  C092  F087         	movff	___flmul@prod+3,??___flmul+3
  8779  013470  0100               	movlb	0	; () banked
  8780  013472  3587               	rlcf	(??___flmul+3)& (0+255),w,b
  8781  013474  3387               	rrcf	(??___flmul+3)& (0+255),f,b
  8782  013476  3386               	rrcf	(??___flmul+2)& (0+255),f,b
  8783  013478  3385               	rrcf	(??___flmul+1)& (0+255),f,b
  8784  01347A  3384               	rrcf	??___flmul& (0+255),f,b
  8785  01347C  C084  F08F         	movff	??___flmul,___flmul@prod
  8786  013480  C085  F090         	movff	??___flmul+1,___flmul@prod+1
  8787  013484  C086  F091         	movff	??___flmul+2,___flmul@prod+2
  8788  013488  C087  F092         	movff	??___flmul+3,___flmul@prod+3
  8789                           
  8790                           ; BSR set to: 0
  8791  01348C  0100               	movlb	0	; () banked
  8792  01348E  4B93               	infsnz	___flmul@temp& (0+255),f,b
  8793  013490  2B94               	incf	(___flmul@temp+1)& (0+255),f,b
  8794  013492                     l7629:
  8795                           
  8796                           ; BSR set to: 0
  8797  013492  0100               	movlb	0	; () banked
  8798  013494  BF94               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8799  013496  D010               	goto	l7633
  8800  013498  0100               	movlb	0	; () banked
  8801  01349A  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8802  01349C  E104               	bnz	u9850
  8803  01349E  0100               	movlb	0	; () banked
  8804  0134A0  2993               	incf	___flmul@temp& (0+255),w,b
  8805  0134A2  A0D8               	btfss	status,0,c
  8806  0134A4  D009               	goto	l7633
  8807  0134A6                     u9850:
  8808                           
  8809                           ; BSR set to: 0
  8810  0134A6  0E00               	movlw	0
  8811  0134A8  0100               	movlb	0	; () banked
  8812  0134AA  6F8F               	movwf	___flmul@prod& (0+255),b
  8813  0134AC  0E00               	movlw	0
  8814  0134AE  6F90               	movwf	(___flmul@prod+1)& (0+255),b
  8815  0134B0  0E80               	movlw	128
  8816  0134B2  6F91               	movwf	(___flmul@prod+2)& (0+255),b
  8817  0134B4  0E7F               	movlw	127
  8818  0134B6  D02B               	goto	L8
  8819  0134B8                     l7633:
  8820                           
  8821                           ; BSR set to: 0
  8822  0134B8  0100               	movlb	0	; () banked
  8823  0134BA  BF94               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8824  0134BC  D007               	goto	l7635
  8825  0134BE  0100               	movlb	0	; () banked
  8826  0134C0  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8827  0134C2  E111               	bnz	l1508
  8828  0134C4  0100               	movlb	0	; () banked
  8829  0134C6  0593               	decf	___flmul@temp& (0+255),w,b
  8830  0134C8  B0D8               	btfsc	status,0,c
  8831  0134CA  D00D               	goto	l1508
  8832  0134CC                     l7635:
  8833                           
  8834                           ; BSR set to: 0
  8835  0134CC  0E00               	movlw	0
  8836  0134CE  0100               	movlb	0	; () banked
  8837  0134D0  6F8F               	movwf	___flmul@prod& (0+255),b
  8838  0134D2  0E00               	movlw	0
  8839  0134D4  6F90               	movwf	(___flmul@prod+1)& (0+255),b
  8840  0134D6  0E00               	movlw	0
  8841  0134D8  6F91               	movwf	(___flmul@prod+2)& (0+255),b
  8842  0134DA  0E00               	movlw	0
  8843  0134DC  6F92               	movwf	(___flmul@prod+3)& (0+255),b
  8844  0134DE  0E00               	movlw	0
  8845  0134E0  0100               	movlb	0	; () banked
  8846  0134E2  6F88               	movwf	___flmul@sign& (0+255),b
  8847  0134E4  D015               	goto	l7645
  8848  0134E6                     l1508:
  8849                           
  8850                           ; BSR set to: 0
  8851  0134E6  C093  F08E         	movff	___flmul@temp,___flmul@bexp
  8852                           
  8853                           ; BSR set to: 0
  8854  0134EA  0EFF               	movlw	255
  8855  0134EC  0100               	movlb	0	; () banked
  8856  0134EE  178F               	andwf	___flmul@prod& (0+255),f,b
  8857  0134F0  0EFF               	movlw	255
  8858  0134F2  1790               	andwf	(___flmul@prod+1)& (0+255),f,b
  8859  0134F4  0E7F               	movlw	127
  8860  0134F6  1791               	andwf	(___flmul@prod+2)& (0+255),f,b
  8861  0134F8  0E00               	movlw	0
  8862  0134FA  1792               	andwf	(___flmul@prod+3)& (0+255),f,b
  8863                           
  8864                           ; BSR set to: 0
  8865  0134FC  0100               	movlb	0	; () banked
  8866  0134FE  A18E               	btfss	___flmul@bexp& (0+255),0,b
  8867  013500  D002               	goto	l7643
  8868                           
  8869                           ; BSR set to: 0
  8870  013502  0100               	movlb	0	; () banked
  8871  013504  8F91               	bsf	(___flmul@prod+2)& (0+255),7,b
  8872  013506                     l7643:
  8873                           
  8874                           ; BSR set to: 0
  8875  013506  0100               	movlb	0	; () banked
  8876  013508  90D8               	bcf	status,0,c
  8877  01350A  318E               	rrcf	___flmul@bexp& (0+255),w,b
  8878  01350C  0100               	movlb	0	; () banked
  8879  01350E                     L8:
  8880  01350E  6F92               	movwf	(___flmul@prod+3)& (0+255),b
  8881  013510                     l7645:
  8882                           
  8883                           ; BSR set to: 0
  8884  013510  0100               	movlb	0	; () banked
  8885  013512  5188               	movf	___flmul@sign& (0+255),w,b
  8886  013514  0100               	movlb	0	; () banked
  8887  013516  1392               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8888                           
  8889                           ; BSR set to: 0
  8890  013518  C08F  F07C         	movff	___flmul@prod,?___flmul
  8891  01351C  C090  F07D         	movff	___flmul@prod+1,?___flmul+1
  8892  013520  C091  F07E         	movff	___flmul@prod+2,?___flmul+2
  8893  013524  C092  F07F         	movff	___flmul@prod+3,?___flmul+3
  8894  013528  0012               	return	
  8895  01352A                     __end_of___flmul:
  8896                           	opt stack 0
  8897                           tblptru	equ	0xFF8
  8898                           tblptrh	equ	0xFF7
  8899                           tblptrl	equ	0xFF6
  8900                           tablat	equ	0xFF5
  8901                           prodh	equ	0xFF4
  8902                           prodl	equ	0xFF3
  8903                           intcon	equ	0xFF2
  8904                           postinc0	equ	0xFEE
  8905                           wreg	equ	0xFE8
  8906                           indf2	equ	0xFDF
  8907                           postinc2	equ	0xFDE
  8908                           fsr2h	equ	0xFDA
  8909                           fsr2l	equ	0xFD9
  8910                           status	equ	0xFD8
  8911                           
  8912 ;; *************** function ___awmod *****************
  8913 ;; Defined at:
  8914 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  8915 ;; Parameters:    Size  Location     Type
  8916 ;;  dividend        2   14[BANK0 ] int 
  8917 ;;  divisor         2   16[BANK0 ] int 
  8918 ;; Auto vars:     Size  Location     Type
  8919 ;;  sign            1   19[BANK0 ] unsigned char 
  8920 ;;  counter         1   18[BANK0 ] unsigned char 
  8921 ;; Return value:  Size  Location     Type
  8922 ;;                  2   14[BANK0 ] int 
  8923 ;; Registers used:
  8924 ;;		wreg, status,2, status,0
  8925 ;; Tracked objects:
  8926 ;;		On entry : 0/0
  8927 ;;		On exit  : 0/0
  8928 ;;		Unchanged: 0/0
  8929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8930 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8931 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8933 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8934 ;;Total ram usage:        6 bytes
  8935 ;; Hardware stack levels used:    1
  8936 ;; Hardware stack levels required when called:    3
  8937 ;; This function calls:
  8938 ;;		Nothing
  8939 ;; This function is called by:
  8940 ;;		_fround
  8941 ;;		_scale
  8942 ;; This function uses a non-reentrant model
  8943 ;;
  8944                           
  8945                           	psect	text13
  8946  015866                     __ptext13:
  8947                           	opt stack 0
  8948  015866                     ___awmod:
  8949                           	opt stack 24
  8950                           
  8951                           ; BSR set to: 0
  8952                           ;incstack = 0
  8953  015866  0E00               	movlw	0
  8954  015868  0100               	movlb	0	; () banked
  8955  01586A  6F73               	movwf	___awmod@sign& (0+255),b
  8956                           
  8957                           ; BSR set to: 0
  8958  01586C  0100               	movlb	0	; () banked
  8959  01586E  AF6F               	btfss	(___awmod@dividend+1)& (0+255),7,b
  8960  015870  D008               	goto	l7703
  8961                           
  8962                           ; BSR set to: 0
  8963  015872  0100               	movlb	0	; () banked
  8964  015874  6D6E               	negf	___awmod@dividend& (0+255),b
  8965  015876  1F6F               	comf	(___awmod@dividend+1)& (0+255),f,b
  8966  015878  B0D8               	btfsc	status,0,c
  8967  01587A  2B6F               	incf	(___awmod@dividend+1)& (0+255),f,b
  8968                           
  8969                           ; BSR set to: 0
  8970  01587C  0E01               	movlw	1
  8971  01587E  0100               	movlb	0	; () banked
  8972  015880  6F73               	movwf	___awmod@sign& (0+255),b
  8973  015882                     l7703:
  8974                           
  8975                           ; BSR set to: 0
  8976  015882  0100               	movlb	0	; () banked
  8977  015884  AF71               	btfss	(___awmod@divisor+1)& (0+255),7,b
  8978  015886  D005               	goto	l7707
  8979                           
  8980                           ; BSR set to: 0
  8981  015888  0100               	movlb	0	; () banked
  8982  01588A  6D70               	negf	___awmod@divisor& (0+255),b
  8983  01588C  1F71               	comf	(___awmod@divisor+1)& (0+255),f,b
  8984  01588E  B0D8               	btfsc	status,0,c
  8985  015890  2B71               	incf	(___awmod@divisor+1)& (0+255),f,b
  8986  015892                     l7707:
  8987                           
  8988                           ; BSR set to: 0
  8989  015892  0100               	movlb	0	; () banked
  8990  015894  5170               	movf	___awmod@divisor& (0+255),w,b
  8991  015896  0100               	movlb	0	; () banked
  8992  015898  1171               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  8993  01589A  B4D8               	btfsc	status,2,c
  8994  01589C  D026               	goto	l7723
  8995                           
  8996                           ; BSR set to: 0
  8997  01589E  0E01               	movlw	1
  8998  0158A0  0100               	movlb	0	; () banked
  8999  0158A2  6F72               	movwf	___awmod@counter& (0+255),b
  9000  0158A4  D006               	goto	l7713
  9001  0158A6                     l7711:
  9002                           
  9003                           ; BSR set to: 0
  9004  0158A6  0100               	movlb	0	; () banked
  9005  0158A8  90D8               	bcf	status,0,c
  9006  0158AA  3770               	rlcf	___awmod@divisor& (0+255),f,b
  9007  0158AC  3771               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  9008  0158AE  0100               	movlb	0	; () banked
  9009  0158B0  2B72               	incf	___awmod@counter& (0+255),f,b
  9010  0158B2                     l7713:
  9011                           
  9012                           ; BSR set to: 0
  9013  0158B2  0100               	movlb	0	; () banked
  9014  0158B4  AF71               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9015  0158B6  D7F7               	goto	l7711
  9016  0158B8                     l7715:
  9017                           
  9018                           ; BSR set to: 0
  9019  0158B8  0100               	movlb	0	; () banked
  9020  0158BA  5170               	movf	___awmod@divisor& (0+255),w,b
  9021  0158BC  0100               	movlb	0	; () banked
  9022  0158BE  5D6E               	subwf	___awmod@dividend& (0+255),w,b
  9023  0158C0  0100               	movlb	0	; () banked
  9024  0158C2  5171               	movf	(___awmod@divisor+1)& (0+255),w,b
  9025  0158C4  0100               	movlb	0	; () banked
  9026  0158C6  596F               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  9027  0158C8  A0D8               	btfss	status,0,c
  9028  0158CA  D008               	goto	l7719
  9029                           
  9030                           ; BSR set to: 0
  9031  0158CC  0100               	movlb	0	; () banked
  9032  0158CE  5170               	movf	___awmod@divisor& (0+255),w,b
  9033  0158D0  0100               	movlb	0	; () banked
  9034  0158D2  5F6E               	subwf	___awmod@dividend& (0+255),f,b
  9035  0158D4  0100               	movlb	0	; () banked
  9036  0158D6  5171               	movf	(___awmod@divisor+1)& (0+255),w,b
  9037  0158D8  0100               	movlb	0	; () banked
  9038  0158DA  5B6F               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  9039  0158DC                     l7719:
  9040                           
  9041                           ; BSR set to: 0
  9042  0158DC  0100               	movlb	0	; () banked
  9043  0158DE  90D8               	bcf	status,0,c
  9044  0158E0  3371               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  9045  0158E2  3370               	rrcf	___awmod@divisor& (0+255),f,b
  9046                           
  9047                           ; BSR set to: 0
  9048  0158E4  0100               	movlb	0	; () banked
  9049  0158E6  2F72               	decfsz	___awmod@counter& (0+255),f,b
  9050  0158E8  D7E7               	goto	l7715
  9051  0158EA                     l7723:
  9052                           
  9053                           ; BSR set to: 0
  9054  0158EA  0100               	movlb	0	; () banked
  9055  0158EC  5173               	movf	___awmod@sign& (0+255),w,b
  9056  0158EE  0100               	movlb	0	; () banked
  9057  0158F0  B4D8               	btfsc	status,2,c
  9058  0158F2  D005               	goto	l7727
  9059                           
  9060                           ; BSR set to: 0
  9061  0158F4  0100               	movlb	0	; () banked
  9062  0158F6  6D6E               	negf	___awmod@dividend& (0+255),b
  9063  0158F8  1F6F               	comf	(___awmod@dividend+1)& (0+255),f,b
  9064  0158FA  B0D8               	btfsc	status,0,c
  9065  0158FC  2B6F               	incf	(___awmod@dividend+1)& (0+255),f,b
  9066  0158FE                     l7727:
  9067                           
  9068                           ; BSR set to: 0
  9069  0158FE  C06E  F06E         	movff	___awmod@dividend,?___awmod
  9070  015902  C06F  F06F         	movff	___awmod@dividend+1,?___awmod+1
  9071  015906  0012               	return	
  9072  015908                     __end_of___awmod:
  9073                           	opt stack 0
  9074                           tblptru	equ	0xFF8
  9075                           tblptrh	equ	0xFF7
  9076                           tblptrl	equ	0xFF6
  9077                           tablat	equ	0xFF5
  9078                           prodh	equ	0xFF4
  9079                           prodl	equ	0xFF3
  9080                           intcon	equ	0xFF2
  9081                           postinc0	equ	0xFEE
  9082                           wreg	equ	0xFE8
  9083                           indf2	equ	0xFDF
  9084                           postinc2	equ	0xFDE
  9085                           fsr2h	equ	0xFDA
  9086                           fsr2l	equ	0xFD9
  9087                           status	equ	0xFD8
  9088                           
  9089 ;; *************** function ___awdiv *****************
  9090 ;; Defined at:
  9091 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  9092 ;; Parameters:    Size  Location     Type
  9093 ;;  dividend        2   20[BANK0 ] int 
  9094 ;;  divisor         2   22[BANK0 ] int 
  9095 ;; Auto vars:     Size  Location     Type
  9096 ;;  quotient        2   26[BANK0 ] int 
  9097 ;;  sign            1   25[BANK0 ] unsigned char 
  9098 ;;  counter         1   24[BANK0 ] unsigned char 
  9099 ;; Return value:  Size  Location     Type
  9100 ;;                  2   20[BANK0 ] int 
  9101 ;; Registers used:
  9102 ;;		wreg, status,2, status,0
  9103 ;; Tracked objects:
  9104 ;;		On entry : 0/0
  9105 ;;		On exit  : 0/0
  9106 ;;		Unchanged: 0/0
  9107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9108 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9109 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9111 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9112 ;;Total ram usage:        8 bytes
  9113 ;; Hardware stack levels used:    1
  9114 ;; Hardware stack levels required when called:    3
  9115 ;; This function calls:
  9116 ;;		Nothing
  9117 ;; This function is called by:
  9118 ;;		_fround
  9119 ;;		_scale
  9120 ;;		_sprintf
  9121 ;; This function uses a non-reentrant model
  9122 ;;
  9123                           
  9124                           	psect	text14
  9125  0154CA                     __ptext14:
  9126                           	opt stack 0
  9127  0154CA                     ___awdiv:
  9128                           	opt stack 24
  9129                           
  9130                           ; BSR set to: 0
  9131                           ;incstack = 0
  9132  0154CA  0E00               	movlw	0
  9133  0154CC  0100               	movlb	0	; () banked
  9134  0154CE  6F79               	movwf	___awdiv@sign& (0+255),b
  9135                           
  9136                           ; BSR set to: 0
  9137  0154D0  0100               	movlb	0	; () banked
  9138  0154D2  AF77               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9139  0154D4  D008               	goto	l7659
  9140                           
  9141                           ; BSR set to: 0
  9142  0154D6  0100               	movlb	0	; () banked
  9143  0154D8  6D76               	negf	___awdiv@divisor& (0+255),b
  9144  0154DA  1F77               	comf	(___awdiv@divisor+1)& (0+255),f,b
  9145  0154DC  B0D8               	btfsc	status,0,c
  9146  0154DE  2B77               	incf	(___awdiv@divisor+1)& (0+255),f,b
  9147                           
  9148                           ; BSR set to: 0
  9149  0154E0  0E01               	movlw	1
  9150  0154E2  0100               	movlb	0	; () banked
  9151  0154E4  6F79               	movwf	___awdiv@sign& (0+255),b
  9152  0154E6                     l7659:
  9153                           
  9154                           ; BSR set to: 0
  9155  0154E6  0100               	movlb	0	; () banked
  9156  0154E8  AF75               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  9157  0154EA  D008               	goto	l7665
  9158                           
  9159                           ; BSR set to: 0
  9160  0154EC  0100               	movlb	0	; () banked
  9161  0154EE  6D74               	negf	___awdiv@dividend& (0+255),b
  9162  0154F0  1F75               	comf	(___awdiv@dividend+1)& (0+255),f,b
  9163  0154F2  B0D8               	btfsc	status,0,c
  9164  0154F4  2B75               	incf	(___awdiv@dividend+1)& (0+255),f,b
  9165                           
  9166                           ; BSR set to: 0
  9167  0154F6  0E01               	movlw	1
  9168  0154F8  0100               	movlb	0	; () banked
  9169  0154FA  1B79               	xorwf	___awdiv@sign& (0+255),f,b
  9170  0154FC                     l7665:
  9171                           
  9172                           ; BSR set to: 0
  9173  0154FC  0E00               	movlw	0
  9174  0154FE  0100               	movlb	0	; () banked
  9175  015500  6F7B               	movwf	(___awdiv@quotient+1)& (0+255),b
  9176  015502  0E00               	movlw	0
  9177  015504  6F7A               	movwf	___awdiv@quotient& (0+255),b
  9178                           
  9179                           ; BSR set to: 0
  9180  015506  0100               	movlb	0	; () banked
  9181  015508  5176               	movf	___awdiv@divisor& (0+255),w,b
  9182  01550A  0100               	movlb	0	; () banked
  9183  01550C  1177               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  9184  01550E  B4D8               	btfsc	status,2,c
  9185  015510  D02C               	goto	l7687
  9186                           
  9187                           ; BSR set to: 0
  9188  015512  0E01               	movlw	1
  9189  015514  0100               	movlb	0	; () banked
  9190  015516  6F78               	movwf	___awdiv@counter& (0+255),b
  9191  015518  D006               	goto	l7673
  9192  01551A                     l7671:
  9193                           
  9194                           ; BSR set to: 0
  9195  01551A  0100               	movlb	0	; () banked
  9196  01551C  90D8               	bcf	status,0,c
  9197  01551E  3776               	rlcf	___awdiv@divisor& (0+255),f,b
  9198  015520  3777               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  9199  015522  0100               	movlb	0	; () banked
  9200  015524  2B78               	incf	___awdiv@counter& (0+255),f,b
  9201  015526                     l7673:
  9202                           
  9203                           ; BSR set to: 0
  9204  015526  0100               	movlb	0	; () banked
  9205  015528  AF77               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9206  01552A  D7F7               	goto	l7671
  9207  01552C                     l7675:
  9208                           
  9209                           ; BSR set to: 0
  9210  01552C  0100               	movlb	0	; () banked
  9211  01552E  90D8               	bcf	status,0,c
  9212  015530  377A               	rlcf	___awdiv@quotient& (0+255),f,b
  9213  015532  377B               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  9214                           
  9215                           ; BSR set to: 0
  9216  015534  0100               	movlb	0	; () banked
  9217  015536  5176               	movf	___awdiv@divisor& (0+255),w,b
  9218  015538  0100               	movlb	0	; () banked
  9219  01553A  5D74               	subwf	___awdiv@dividend& (0+255),w,b
  9220  01553C  0100               	movlb	0	; () banked
  9221  01553E  5177               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9222  015540  0100               	movlb	0	; () banked
  9223  015542  5975               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  9224  015544  A0D8               	btfss	status,0,c
  9225  015546  D00A               	goto	l7683
  9226                           
  9227                           ; BSR set to: 0
  9228  015548  0100               	movlb	0	; () banked
  9229  01554A  5176               	movf	___awdiv@divisor& (0+255),w,b
  9230  01554C  0100               	movlb	0	; () banked
  9231  01554E  5F74               	subwf	___awdiv@dividend& (0+255),f,b
  9232  015550  0100               	movlb	0	; () banked
  9233  015552  5177               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9234  015554  0100               	movlb	0	; () banked
  9235  015556  5B75               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  9236                           
  9237                           ; BSR set to: 0
  9238  015558  0100               	movlb	0	; () banked
  9239  01555A  817A               	bsf	___awdiv@quotient& (0+255),0,b
  9240  01555C                     l7683:
  9241                           
  9242                           ; BSR set to: 0
  9243  01555C  0100               	movlb	0	; () banked
  9244  01555E  90D8               	bcf	status,0,c
  9245  015560  3377               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  9246  015562  3376               	rrcf	___awdiv@divisor& (0+255),f,b
  9247                           
  9248                           ; BSR set to: 0
  9249  015564  0100               	movlb	0	; () banked
  9250  015566  2F78               	decfsz	___awdiv@counter& (0+255),f,b
  9251  015568  D7E1               	goto	l7675
  9252  01556A                     l7687:
  9253                           
  9254                           ; BSR set to: 0
  9255  01556A  0100               	movlb	0	; () banked
  9256  01556C  5179               	movf	___awdiv@sign& (0+255),w,b
  9257  01556E  0100               	movlb	0	; () banked
  9258  015570  B4D8               	btfsc	status,2,c
  9259  015572  D005               	goto	l7691
  9260                           
  9261                           ; BSR set to: 0
  9262  015574  0100               	movlb	0	; () banked
  9263  015576  6D7A               	negf	___awdiv@quotient& (0+255),b
  9264  015578  1F7B               	comf	(___awdiv@quotient+1)& (0+255),f,b
  9265  01557A  B0D8               	btfsc	status,0,c
  9266  01557C  2B7B               	incf	(___awdiv@quotient+1)& (0+255),f,b
  9267  01557E                     l7691:
  9268                           
  9269                           ; BSR set to: 0
  9270  01557E  C07A  F074         	movff	___awdiv@quotient,?___awdiv
  9271  015582  C07B  F075         	movff	___awdiv@quotient+1,?___awdiv+1
  9272  015586  0012               	return	
  9273  015588                     __end_of___awdiv:
  9274                           	opt stack 0
  9275                           tblptru	equ	0xFF8
  9276                           tblptrh	equ	0xFF7
  9277                           tblptrl	equ	0xFF6
  9278                           tablat	equ	0xFF5
  9279                           prodh	equ	0xFF4
  9280                           prodl	equ	0xFF3
  9281                           intcon	equ	0xFF2
  9282                           postinc0	equ	0xFEE
  9283                           wreg	equ	0xFE8
  9284                           indf2	equ	0xFDF
  9285                           postinc2	equ	0xFDE
  9286                           fsr2h	equ	0xFDA
  9287                           fsr2l	equ	0xFD9
  9288                           status	equ	0xFD8
  9289                           
  9290 ;; *************** function __tdiv_to_l_ *****************
  9291 ;; Defined at:
  9292 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
  9293 ;; Parameters:    Size  Location     Type
  9294 ;;  f1              4   14[BANK0 ] float 
  9295 ;;  f2              4   18[BANK0 ] float 
  9296 ;; Auto vars:     Size  Location     Type
  9297 ;;  quot            4   25[BANK0 ] unsigned long 
  9298 ;;  exp1            1   30[BANK0 ] unsigned char 
  9299 ;;  cntr            1   29[BANK0 ] unsigned char 
  9300 ;; Return value:  Size  Location     Type
  9301 ;;                  4   14[BANK0 ] unsigned long 
  9302 ;; Registers used:
  9303 ;;		wreg, status,2, status,0
  9304 ;; Tracked objects:
  9305 ;;		On entry : 0/0
  9306 ;;		On exit  : 0/0
  9307 ;;		Unchanged: 0/0
  9308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9309 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9310 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9311 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9312 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9313 ;;Total ram usage:       17 bytes
  9314 ;; Hardware stack levels used:    1
  9315 ;; Hardware stack levels required when called:    3
  9316 ;; This function calls:
  9317 ;;		Nothing
  9318 ;; This function is called by:
  9319 ;;		_sprintf
  9320 ;; This function uses a non-reentrant model
  9321 ;;
  9322                           
  9323                           	psect	text15
  9324  014918                     __ptext15:
  9325                           	opt stack 0
  9326  014918                     __tdiv_to_l_:
  9327                           	opt stack 25
  9328                           
  9329                           ; BSR set to: 0
  9330                           ;incstack = 0
  9331  014918  C070  F076         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  9332  01491C  0100               	movlb	0	; () banked
  9333  01491E  6B77               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9334  014920  6B78               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9335  014922  0100               	movlb	0	; () banked
  9336  014924  356F               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  9337  014926  0100               	movlb	0	; () banked
  9338  014928  3776               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9339  01492A  E301               	bnc	u10101
  9340  01492C  8177               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9341  01492E                     u10101:
  9342  01492E  0100               	movlb	0	; () banked
  9343  014930  5176               	movf	??__tdiv_to_l_& (0+255),w,b
  9344  014932  0100               	movlb	0	; () banked
  9345  014934  6F7E               	movwf	__tdiv_to_l_@exp1& (0+255),b
  9346  014936  0100               	movlb	0	; () banked
  9347  014938  517E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9348  01493A  A4D8               	btfss	status,2,c
  9349  01493C  D00A               	goto	l7821
  9350                           
  9351                           ; BSR set to: 0
  9352  01493E  0E00               	movlw	0
  9353  014940  0100               	movlb	0	; () banked
  9354  014942  6F6E               	movwf	?__tdiv_to_l_& (0+255),b
  9355  014944  0E00               	movlw	0
  9356  014946  6F6F               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9357  014948  0E00               	movlw	0
  9358  01494A  6F70               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9359  01494C  0E00               	movlw	0
  9360  01494E  6F71               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9361                           
  9362                           ; BSR set to: 0
  9363  014950  0012               	return	
  9364  014952                     l7821:
  9365                           
  9366                           ; BSR set to: 0
  9367  014952  C074  F076         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  9368  014956  0100               	movlb	0	; () banked
  9369  014958  6B77               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9370  01495A  6B78               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9371  01495C  0100               	movlb	0	; () banked
  9372  01495E  3573               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9373  014960  0100               	movlb	0	; () banked
  9374  014962  3776               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9375  014964  E301               	bnc	u10121
  9376  014966  8177               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9377  014968                     u10121:
  9378  014968  0100               	movlb	0	; () banked
  9379  01496A  5176               	movf	??__tdiv_to_l_& (0+255),w,b
  9380  01496C  0100               	movlb	0	; () banked
  9381  01496E  6F7D               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9382  014970  0100               	movlb	0	; () banked
  9383  014972  517D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9384  014974  A4D8               	btfss	status,2,c
  9385  014976  D00A               	goto	l7827
  9386                           
  9387                           ; BSR set to: 0
  9388  014978  0E00               	movlw	0
  9389  01497A  0100               	movlb	0	; () banked
  9390  01497C  6F6E               	movwf	?__tdiv_to_l_& (0+255),b
  9391  01497E  0E00               	movlw	0
  9392  014980  6F6F               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9393  014982  0E00               	movlw	0
  9394  014984  6F70               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9395  014986  0E00               	movlw	0
  9396  014988  6F71               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9397                           
  9398                           ; BSR set to: 0
  9399  01498A  0012               	return	
  9400  01498C                     l7827:
  9401                           
  9402                           ; BSR set to: 0
  9403  01498C  0100               	movlb	0	; () banked
  9404  01498E  8F6F               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  9405                           
  9406                           ; BSR set to: 0
  9407  014990  0EFF               	movlw	255
  9408  014992  0100               	movlb	0	; () banked
  9409  014994  176E               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  9410  014996  0EFF               	movlw	255
  9411  014998  0100               	movlb	0	; () banked
  9412  01499A  176F               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9413  01499C  0E00               	movlw	0
  9414  01499E  0100               	movlb	0	; () banked
  9415  0149A0  1770               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9416  0149A2  0100               	movlb	0	; () banked
  9417  0149A4  8F73               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  9418                           
  9419                           ; BSR set to: 0
  9420  0149A6  0EFF               	movlw	255
  9421  0149A8  0100               	movlb	0	; () banked
  9422  0149AA  1772               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  9423  0149AC  0EFF               	movlw	255
  9424  0149AE  0100               	movlb	0	; () banked
  9425  0149B0  1773               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  9426  0149B2  0E00               	movlw	0
  9427  0149B4  0100               	movlb	0	; () banked
  9428  0149B6  1774               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  9429                           
  9430                           ; BSR set to: 0
  9431  0149B8  0E00               	movlw	0
  9432  0149BA  0100               	movlb	0	; () banked
  9433  0149BC  6F79               	movwf	__tdiv_to_l_@quot& (0+255),b
  9434  0149BE  0E00               	movlw	0
  9435  0149C0  6F7A               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  9436  0149C2  0E00               	movlw	0
  9437  0149C4  6F7B               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  9438  0149C6  0E00               	movlw	0
  9439  0149C8  6F7C               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  9440                           
  9441                           ; BSR set to: 0
  9442  0149CA  0E7F               	movlw	127
  9443  0149CC  0100               	movlb	0	; () banked
  9444  0149CE  5F7E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  9445                           
  9446                           ; BSR set to: 0
  9447  0149D0  0100               	movlb	0	; () banked
  9448  0149D2  517D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9449  0149D4  0F98               	addlw	152
  9450  0149D6  0100               	movlb	0	; () banked
  9451  0149D8  5F7E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  9452                           
  9453                           ; BSR set to: 0
  9454  0149DA  0E18               	movlw	24
  9455  0149DC  0100               	movlb	0	; () banked
  9456  0149DE  6F7D               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9457  0149E0                     l1215:
  9458                           
  9459                           ; BSR set to: 0
  9460  0149E0  0100               	movlb	0	; () banked
  9461  0149E2  90D8               	bcf	status,0,c
  9462  0149E4  3779               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  9463  0149E6  377A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9464  0149E8  377B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9465  0149EA  377C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9466                           
  9467                           ; BSR set to: 0
  9468  0149EC  0100               	movlb	0	; () banked
  9469  0149EE  5172               	movf	__tdiv_to_l_@f2& (0+255),w,b
  9470  0149F0  0100               	movlb	0	; () banked
  9471  0149F2  5D6E               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  9472  0149F4  0100               	movlb	0	; () banked
  9473  0149F6  5173               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9474  0149F8  0100               	movlb	0	; () banked
  9475  0149FA  596F               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  9476  0149FC  0100               	movlb	0	; () banked
  9477  0149FE  5174               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  9478  014A00  0100               	movlb	0	; () banked
  9479  014A02  5970               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  9480  014A04  A0D8               	btfss	status,0,c
  9481  014A06  D00E               	goto	l1216
  9482                           
  9483                           ; BSR set to: 0
  9484  014A08  0100               	movlb	0	; () banked
  9485  014A0A  5172               	movf	__tdiv_to_l_@f2& (0+255),w,b
  9486  014A0C  0100               	movlb	0	; () banked
  9487  014A0E  5F6E               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  9488  014A10  0100               	movlb	0	; () banked
  9489  014A12  5173               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9490  014A14  0100               	movlb	0	; () banked
  9491  014A16  5B6F               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9492  014A18  0100               	movlb	0	; () banked
  9493  014A1A  5174               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  9494  014A1C  0100               	movlb	0	; () banked
  9495  014A1E  5B70               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9496                           
  9497                           ; BSR set to: 0
  9498  014A20  0100               	movlb	0	; () banked
  9499  014A22  8179               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  9500  014A24                     l1216:
  9501                           
  9502                           ; BSR set to: 0
  9503  014A24  0100               	movlb	0	; () banked
  9504  014A26  90D8               	bcf	status,0,c
  9505  014A28  376E               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  9506  014A2A  376F               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9507  014A2C  3770               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9508                           
  9509                           ; BSR set to: 0
  9510  014A2E  0100               	movlb	0	; () banked
  9511  014A30  2F7D               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  9512  014A32  D7D6               	goto	l1215
  9513                           
  9514                           ; BSR set to: 0
  9515                           
  9516                           ; BSR set to: 0
  9517  014A34  0100               	movlb	0	; () banked
  9518  014A36  AF7E               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  9519  014A38  D01A               	goto	l7861
  9520                           
  9521                           ; BSR set to: 0
  9522  014A3A  0100               	movlb	0	; () banked
  9523  014A3C  517E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9524  014A3E  0A80               	xorlw	128
  9525  014A40  0F97               	addlw	151
  9526  014A42  B0D8               	btfsc	status,0,c
  9527  014A44  D00A               	goto	l7857
  9528                           
  9529                           ; BSR set to: 0
  9530  014A46  0E00               	movlw	0
  9531  014A48  0100               	movlb	0	; () banked
  9532  014A4A  6F6E               	movwf	?__tdiv_to_l_& (0+255),b
  9533  014A4C  0E00               	movlw	0
  9534  014A4E  6F6F               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9535  014A50  0E00               	movlw	0
  9536  014A52  6F70               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9537  014A54  0E00               	movlw	0
  9538  014A56  6F71               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9539                           
  9540                           ; BSR set to: 0
  9541  014A58  0012               	return	
  9542  014A5A                     l7857:
  9543                           
  9544                           ; BSR set to: 0
  9545  014A5A  0100               	movlb	0	; () banked
  9546  014A5C  90D8               	bcf	status,0,c
  9547  014A5E  337C               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9548  014A60  337B               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9549  014A62  337A               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9550  014A64  3379               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  9551                           
  9552                           ; BSR set to: 0
  9553  014A66  0100               	movlb	0	; () banked
  9554  014A68  3F7E               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  9555  014A6A  D7F7               	goto	l7857
  9556                           
  9557                           ; BSR set to: 0
  9558  014A6C  D01B               	goto	l1222
  9559  014A6E                     l7861:
  9560                           
  9561                           ; BSR set to: 0
  9562  014A6E  0E17               	movlw	23
  9563  014A70  0100               	movlb	0	; () banked
  9564  014A72  657E               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  9565  014A74  D012               	goto	l7869
  9566                           
  9567                           ; BSR set to: 0
  9568  014A76  0E00               	movlw	0
  9569  014A78  0100               	movlb	0	; () banked
  9570  014A7A  6F6E               	movwf	?__tdiv_to_l_& (0+255),b
  9571  014A7C  0E00               	movlw	0
  9572  014A7E  6F6F               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9573  014A80  0E00               	movlw	0
  9574  014A82  6F70               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9575  014A84  0E00               	movlw	0
  9576  014A86  6F71               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9577                           
  9578                           ; BSR set to: 0
  9579  014A88  0012               	return	
  9580  014A8A                     l7867:
  9581                           
  9582                           ; BSR set to: 0
  9583  014A8A  0100               	movlb	0	; () banked
  9584  014A8C  90D8               	bcf	status,0,c
  9585  014A8E  3779               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  9586  014A90  377A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9587  014A92  377B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9588  014A94  377C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9589  014A96  0100               	movlb	0	; () banked
  9590  014A98  077E               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  9591  014A9A                     l7869:
  9592                           
  9593                           ; BSR set to: 0
  9594  014A9A  0100               	movlb	0	; () banked
  9595  014A9C  517E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9596  014A9E  0100               	movlb	0	; () banked
  9597  014AA0  A4D8               	btfss	status,2,c
  9598  014AA2  D7F3               	goto	l7867
  9599  014AA4                     l1222:
  9600                           
  9601                           ; BSR set to: 0
  9602  014AA4  C079  F06E         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  9603  014AA8  C07A  F06F         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  9604  014AAC  C07B  F070         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  9605  014AB0  C07C  F071         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  9606                           
  9607                           ; BSR set to: 0
  9608  014AB4  0012               	return		;funcret
  9609  014AB6                     __end_of__tdiv_to_l_:
  9610                           	opt stack 0
  9611                           tblptru	equ	0xFF8
  9612                           tblptrh	equ	0xFF7
  9613                           tblptrl	equ	0xFF6
  9614                           tablat	equ	0xFF5
  9615                           prodh	equ	0xFF4
  9616                           prodl	equ	0xFF3
  9617                           intcon	equ	0xFF2
  9618                           postinc0	equ	0xFEE
  9619                           wreg	equ	0xFE8
  9620                           indf2	equ	0xFDF
  9621                           postinc2	equ	0xFDE
  9622                           fsr2h	equ	0xFDA
  9623                           fsr2l	equ	0xFD9
  9624                           status	equ	0xFD8
  9625                           
  9626 ;; *************** function __div_to_l_ *****************
  9627 ;; Defined at:
  9628 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
  9629 ;; Parameters:    Size  Location     Type
  9630 ;;  f1              4   14[BANK0 ] unsigned long 
  9631 ;;  f2              4   18[BANK0 ] unsigned long 
  9632 ;; Auto vars:     Size  Location     Type
  9633 ;;  quot            4   22[BANK0 ] unsigned long 
  9634 ;;  exp1            1   27[BANK0 ] unsigned char 
  9635 ;;  cntr            1   26[BANK0 ] unsigned char 
  9636 ;; Return value:  Size  Location     Type
  9637 ;;                  4   14[BANK0 ] unsigned long 
  9638 ;; Registers used:
  9639 ;;		wreg, status,2, status,0
  9640 ;; Tracked objects:
  9641 ;;		On entry : 0/0
  9642 ;;		On exit  : 0/0
  9643 ;;		Unchanged: 0/0
  9644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9645 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9646 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9648 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9649 ;;Total ram usage:       14 bytes
  9650 ;; Hardware stack levels used:    1
  9651 ;; Hardware stack levels required when called:    3
  9652 ;; This function calls:
  9653 ;;		Nothing
  9654 ;; This function is called by:
  9655 ;;		_sprintf
  9656 ;; This function uses a non-reentrant model
  9657 ;;
  9658                           
  9659                           	psect	text16
  9660  014C46                     __ptext16:
  9661                           	opt stack 0
  9662  014C46                     __div_to_l_:
  9663                           	opt stack 25
  9664                           
  9665                           ; BSR set to: 0
  9666                           ;incstack = 0
  9667  014C46  0100               	movlb	0	; () banked
  9668  014C48  3570               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  9669  014C4A  3571               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  9670  014C4C  0100               	movlb	0	; () banked
  9671  014C4E  6F7B               	movwf	__div_to_l_@exp1& (0+255),b
  9672  014C50  0100               	movlb	0	; () banked
  9673  014C52  517B               	movf	__div_to_l_@exp1& (0+255),w,b
  9674  014C54  A4D8               	btfss	status,2,c
  9675  014C56  D00A               	goto	l7877
  9676                           
  9677                           ; BSR set to: 0
  9678  014C58  0E00               	movlw	0
  9679  014C5A  0100               	movlb	0	; () banked
  9680  014C5C  6F6E               	movwf	?__div_to_l_& (0+255),b
  9681  014C5E  0E00               	movlw	0
  9682  014C60  6F6F               	movwf	(?__div_to_l_+1)& (0+255),b
  9683  014C62  0E00               	movlw	0
  9684  014C64  6F70               	movwf	(?__div_to_l_+2)& (0+255),b
  9685  014C66  0E00               	movlw	0
  9686  014C68  6F71               	movwf	(?__div_to_l_+3)& (0+255),b
  9687                           
  9688                           ; BSR set to: 0
  9689  014C6A  0012               	return	
  9690  014C6C                     l7877:
  9691                           
  9692                           ; BSR set to: 0
  9693  014C6C  0100               	movlb	0	; () banked
  9694  014C6E  3574               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  9695  014C70  3575               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  9696  014C72  0100               	movlb	0	; () banked
  9697  014C74  6F7A               	movwf	__div_to_l_@cntr& (0+255),b
  9698  014C76  0100               	movlb	0	; () banked
  9699  014C78  517A               	movf	__div_to_l_@cntr& (0+255),w,b
  9700  014C7A  A4D8               	btfss	status,2,c
  9701  014C7C  D00A               	goto	l7883
  9702                           
  9703                           ; BSR set to: 0
  9704  014C7E  0E00               	movlw	0
  9705  014C80  0100               	movlb	0	; () banked
  9706  014C82  6F6E               	movwf	?__div_to_l_& (0+255),b
  9707  014C84  0E00               	movlw	0
  9708  014C86  6F6F               	movwf	(?__div_to_l_+1)& (0+255),b
  9709  014C88  0E00               	movlw	0
  9710  014C8A  6F70               	movwf	(?__div_to_l_+2)& (0+255),b
  9711  014C8C  0E00               	movlw	0
  9712  014C8E  6F71               	movwf	(?__div_to_l_+3)& (0+255),b
  9713                           
  9714                           ; BSR set to: 0
  9715  014C90  0012               	return	
  9716  014C92                     l7883:
  9717                           
  9718                           ; BSR set to: 0
  9719  014C92  0100               	movlb	0	; () banked
  9720  014C94  8F70               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  9721                           
  9722                           ; BSR set to: 0
  9723  014C96  0EFF               	movlw	255
  9724  014C98  0100               	movlb	0	; () banked
  9725  014C9A  176E               	andwf	__div_to_l_@f1& (0+255),f,b
  9726  014C9C  0EFF               	movlw	255
  9727  014C9E  176F               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  9728  014CA0  0EFF               	movlw	255
  9729  014CA2  1770               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  9730  014CA4  0E00               	movlw	0
  9731  014CA6  1771               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  9732                           
  9733                           ; BSR set to: 0
  9734  014CA8  0100               	movlb	0	; () banked
  9735  014CAA  8F74               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  9736  014CAC  0EFF               	movlw	255
  9737  014CAE  0100               	movlb	0	; () banked
  9738  014CB0  1772               	andwf	__div_to_l_@f2& (0+255),f,b
  9739  014CB2  0EFF               	movlw	255
  9740  014CB4  1773               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  9741  014CB6  0EFF               	movlw	255
  9742  014CB8  1774               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  9743  014CBA  0E00               	movlw	0
  9744  014CBC  1775               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  9745                           
  9746                           ; BSR set to: 0
  9747  014CBE  0E00               	movlw	0
  9748  014CC0  0100               	movlb	0	; () banked
  9749  014CC2  6F76               	movwf	__div_to_l_@quot& (0+255),b
  9750  014CC4  0E00               	movlw	0
  9751  014CC6  6F77               	movwf	(__div_to_l_@quot+1)& (0+255),b
  9752  014CC8  0E00               	movlw	0
  9753  014CCA  6F78               	movwf	(__div_to_l_@quot+2)& (0+255),b
  9754  014CCC  0E00               	movlw	0
  9755  014CCE  6F79               	movwf	(__div_to_l_@quot+3)& (0+255),b
  9756                           
  9757                           ; BSR set to: 0
  9758  014CD0  0E7F               	movlw	127
  9759  014CD2  0100               	movlb	0	; () banked
  9760  014CD4  5F7B               	subwf	__div_to_l_@exp1& (0+255),f,b
  9761                           
  9762                           ; BSR set to: 0
  9763  014CD6  0100               	movlb	0	; () banked
  9764  014CD8  517A               	movf	__div_to_l_@cntr& (0+255),w,b
  9765  014CDA  0FA0               	addlw	160
  9766  014CDC  0100               	movlb	0	; () banked
  9767  014CDE  5F7B               	subwf	__div_to_l_@exp1& (0+255),f,b
  9768                           
  9769                           ; BSR set to: 0
  9770  014CE0  0E20               	movlw	32
  9771  014CE2  0100               	movlb	0	; () banked
  9772  014CE4  6F7A               	movwf	__div_to_l_@cntr& (0+255),b
  9773  014CE6                     l7897:
  9774                           
  9775                           ; BSR set to: 0
  9776  014CE6  0100               	movlb	0	; () banked
  9777  014CE8  90D8               	bcf	status,0,c
  9778  014CEA  3776               	rlcf	__div_to_l_@quot& (0+255),f,b
  9779  014CEC  3777               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  9780  014CEE  3778               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  9781  014CF0  3779               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  9782                           
  9783                           ; BSR set to: 0
  9784  014CF2  0100               	movlb	0	; () banked
  9785  014CF4  5172               	movf	__div_to_l_@f2& (0+255),w,b
  9786  014CF6  0100               	movlb	0	; () banked
  9787  014CF8  5D6E               	subwf	__div_to_l_@f1& (0+255),w,b
  9788  014CFA  0100               	movlb	0	; () banked
  9789  014CFC  5173               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  9790  014CFE  0100               	movlb	0	; () banked
  9791  014D00  596F               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  9792  014D02  0100               	movlb	0	; () banked
  9793  014D04  5174               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  9794  014D06  0100               	movlb	0	; () banked
  9795  014D08  5970               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  9796  014D0A  0100               	movlb	0	; () banked
  9797  014D0C  5175               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  9798  014D0E  0100               	movlb	0	; () banked
  9799  014D10  5971               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  9800  014D12  A0D8               	btfss	status,0,c
  9801  014D14  D012               	goto	l7905
  9802                           
  9803                           ; BSR set to: 0
  9804  014D16  0100               	movlb	0	; () banked
  9805  014D18  5172               	movf	__div_to_l_@f2& (0+255),w,b
  9806  014D1A  0100               	movlb	0	; () banked
  9807  014D1C  5F6E               	subwf	__div_to_l_@f1& (0+255),f,b
  9808  014D1E  0100               	movlb	0	; () banked
  9809  014D20  5173               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  9810  014D22  0100               	movlb	0	; () banked
  9811  014D24  5B6F               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  9812  014D26  0100               	movlb	0	; () banked
  9813  014D28  5174               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  9814  014D2A  0100               	movlb	0	; () banked
  9815  014D2C  5B70               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  9816  014D2E  0100               	movlb	0	; () banked
  9817  014D30  5175               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  9818  014D32  0100               	movlb	0	; () banked
  9819  014D34  5B71               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  9820                           
  9821                           ; BSR set to: 0
  9822  014D36  0100               	movlb	0	; () banked
  9823  014D38  8176               	bsf	__div_to_l_@quot& (0+255),0,b
  9824  014D3A                     l7905:
  9825                           
  9826                           ; BSR set to: 0
  9827  014D3A  0100               	movlb	0	; () banked
  9828  014D3C  90D8               	bcf	status,0,c
  9829  014D3E  376E               	rlcf	__div_to_l_@f1& (0+255),f,b
  9830  014D40  376F               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  9831  014D42  3770               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  9832  014D44  3771               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  9833                           
  9834                           ; BSR set to: 0
  9835  014D46  0100               	movlb	0	; () banked
  9836  014D48  2F7A               	decfsz	__div_to_l_@cntr& (0+255),f,b
  9837  014D4A  D7CD               	goto	l7897
  9838                           
  9839                           ; BSR set to: 0
  9840                           
  9841                           ; BSR set to: 0
  9842  014D4C  0100               	movlb	0	; () banked
  9843  014D4E  AF7B               	btfss	__div_to_l_@exp1& (0+255),7,b
  9844  014D50  D01A               	goto	l7921
  9845                           
  9846                           ; BSR set to: 0
  9847  014D52  0100               	movlb	0	; () banked
  9848  014D54  517B               	movf	__div_to_l_@exp1& (0+255),w,b
  9849  014D56  0A80               	xorlw	128
  9850  014D58  0F9F               	addlw	159
  9851  014D5A  B0D8               	btfsc	status,0,c
  9852  014D5C  D00A               	goto	l7917
  9853                           
  9854                           ; BSR set to: 0
  9855  014D5E  0E00               	movlw	0
  9856  014D60  0100               	movlb	0	; () banked
  9857  014D62  6F6E               	movwf	?__div_to_l_& (0+255),b
  9858  014D64  0E00               	movlw	0
  9859  014D66  6F6F               	movwf	(?__div_to_l_+1)& (0+255),b
  9860  014D68  0E00               	movlw	0
  9861  014D6A  6F70               	movwf	(?__div_to_l_+2)& (0+255),b
  9862  014D6C  0E00               	movlw	0
  9863  014D6E  6F71               	movwf	(?__div_to_l_+3)& (0+255),b
  9864                           
  9865                           ; BSR set to: 0
  9866  014D70  0012               	return	
  9867  014D72                     l7917:
  9868                           
  9869                           ; BSR set to: 0
  9870  014D72  0100               	movlb	0	; () banked
  9871  014D74  90D8               	bcf	status,0,c
  9872  014D76  3379               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  9873  014D78  3378               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  9874  014D7A  3377               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  9875  014D7C  3376               	rrcf	__div_to_l_@quot& (0+255),f,b
  9876                           
  9877                           ; BSR set to: 0
  9878  014D7E  0100               	movlb	0	; () banked
  9879  014D80  3F7B               	incfsz	__div_to_l_@exp1& (0+255),f,b
  9880  014D82  D7F7               	goto	l7917
  9881                           
  9882                           ; BSR set to: 0
  9883  014D84  D01B               	goto	l1118
  9884  014D86                     l7921:
  9885                           
  9886                           ; BSR set to: 0
  9887  014D86  0E1F               	movlw	31
  9888  014D88  0100               	movlb	0	; () banked
  9889  014D8A  657B               	cpfsgt	__div_to_l_@exp1& (0+255),b
  9890  014D8C  D012               	goto	l7929
  9891                           
  9892                           ; BSR set to: 0
  9893  014D8E  0E00               	movlw	0
  9894  014D90  0100               	movlb	0	; () banked
  9895  014D92  6F6E               	movwf	?__div_to_l_& (0+255),b
  9896  014D94  0E00               	movlw	0
  9897  014D96  6F6F               	movwf	(?__div_to_l_+1)& (0+255),b
  9898  014D98  0E00               	movlw	0
  9899  014D9A  6F70               	movwf	(?__div_to_l_+2)& (0+255),b
  9900  014D9C  0E00               	movlw	0
  9901  014D9E  6F71               	movwf	(?__div_to_l_+3)& (0+255),b
  9902                           
  9903                           ; BSR set to: 0
  9904  014DA0  0012               	return	
  9905  014DA2                     l7927:
  9906                           
  9907                           ; BSR set to: 0
  9908  014DA2  0100               	movlb	0	; () banked
  9909  014DA4  90D8               	bcf	status,0,c
  9910  014DA6  3776               	rlcf	__div_to_l_@quot& (0+255),f,b
  9911  014DA8  3777               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  9912  014DAA  3778               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  9913  014DAC  3779               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  9914  014DAE  0100               	movlb	0	; () banked
  9915  014DB0  077B               	decf	__div_to_l_@exp1& (0+255),f,b
  9916  014DB2                     l7929:
  9917                           
  9918                           ; BSR set to: 0
  9919  014DB2  0100               	movlb	0	; () banked
  9920  014DB4  517B               	movf	__div_to_l_@exp1& (0+255),w,b
  9921  014DB6  0100               	movlb	0	; () banked
  9922  014DB8  A4D8               	btfss	status,2,c
  9923  014DBA  D7F3               	goto	l7927
  9924  014DBC                     l1118:
  9925                           
  9926                           ; BSR set to: 0
  9927  014DBC  C076  F06E         	movff	__div_to_l_@quot,?__div_to_l_
  9928  014DC0  C077  F06F         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  9929  014DC4  C078  F070         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  9930  014DC8  C079  F071         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  9931                           
  9932                           ; BSR set to: 0
  9933  014DCC  0012               	return		;funcret
  9934  014DCE                     __end_of__div_to_l_:
  9935                           	opt stack 0
  9936                           tblptru	equ	0xFF8
  9937                           tblptrh	equ	0xFF7
  9938                           tblptrl	equ	0xFF6
  9939                           tablat	equ	0xFF5
  9940                           prodh	equ	0xFF4
  9941                           prodl	equ	0xFF3
  9942                           intcon	equ	0xFF2
  9943                           postinc0	equ	0xFEE
  9944                           wreg	equ	0xFE8
  9945                           indf2	equ	0xFDF
  9946                           postinc2	equ	0xFDE
  9947                           fsr2h	equ	0xFDA
  9948                           fsr2l	equ	0xFD9
  9949                           status	equ	0xFD8
  9950                           
  9951 ;; *************** function ___xxtofl *****************
  9952 ;; Defined at:
  9953 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  9954 ;; Parameters:    Size  Location     Type
  9955 ;;  sign            1    wreg     unsigned char 
  9956 ;;  val             4   14[BANK0 ] long 
  9957 ;; Auto vars:     Size  Location     Type
  9958 ;;  sign            1   22[BANK0 ] unsigned char 
  9959 ;;  arg             4   24[BANK0 ] unsigned long 
  9960 ;;  exp             1   23[BANK0 ] unsigned char 
  9961 ;; Return value:  Size  Location     Type
  9962 ;;                  4   14[BANK0 ] unsigned char 
  9963 ;; Registers used:
  9964 ;;		wreg, status,2, status,0
  9965 ;; Tracked objects:
  9966 ;;		On entry : 0/0
  9967 ;;		On exit  : 0/0
  9968 ;;		Unchanged: 0/0
  9969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9970 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9971 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9972 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9973 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9974 ;;Total ram usage:       14 bytes
  9975 ;; Hardware stack levels used:    1
  9976 ;; Hardware stack levels required when called:    3
  9977 ;; This function calls:
  9978 ;;		Nothing
  9979 ;; This function is called by:
  9980 ;;		_main
  9981 ;;		_LCD_Handler
  9982 ;;		_sprintf
  9983 ;; This function uses a non-reentrant model
  9984 ;;
  9985                           
  9986                           	psect	text17
  9987  0143C4                     __ptext17:
  9988                           	opt stack 0
  9989  0143C4                     ___xxtofl:
  9990                           	opt stack 27
  9991                           
  9992                           ; BSR set to: 0
  9993                           ;incstack = 0
  9994                           ;___xxtofl@sign stored from wreg
  9995  0143C4  0100               	movlb	0	; () banked
  9996  0143C6  6F76               	movwf	___xxtofl@sign& (0+255),b
  9997  0143C8  0100               	movlb	0	; () banked
  9998  0143CA  5176               	movf	___xxtofl@sign& (0+255),w,b
  9999  0143CC  0100               	movlb	0	; () banked
 10000  0143CE  B4D8               	btfsc	status,2,c
 10001  0143D0  D01E               	goto	l1513
 10002                           
 10003                           ; BSR set to: 0
 10004  0143D2  0100               	movlb	0	; () banked
 10005  0143D4  AF71               	btfss	(___xxtofl@val+3)& (0+255),7,b
 10006  0143D6  D01B               	goto	l1513
 10007                           
 10008                           ; BSR set to: 0
 10009  0143D8  C06E  F072         	movff	___xxtofl@val,??___xxtofl
 10010  0143DC  C06F  F073         	movff	___xxtofl@val+1,??___xxtofl+1
 10011  0143E0  C070  F074         	movff	___xxtofl@val+2,??___xxtofl+2
 10012  0143E4  C071  F075         	movff	___xxtofl@val+3,??___xxtofl+3
 10013  0143E8  0100               	movlb	0	; () banked
 10014  0143EA  1F72               	comf	??___xxtofl& (0+255),f,b
 10015  0143EC  1F73               	comf	(??___xxtofl+1)& (0+255),f,b
 10016  0143EE  1F74               	comf	(??___xxtofl+2)& (0+255),f,b
 10017  0143F0  1F75               	comf	(??___xxtofl+3)& (0+255),f,b
 10018  0143F2  2B72               	incf	??___xxtofl& (0+255),f,b
 10019  0143F4  0E00               	movlw	0
 10020  0143F6  2373               	addwfc	(??___xxtofl+1)& (0+255),f,b
 10021  0143F8  2374               	addwfc	(??___xxtofl+2)& (0+255),f,b
 10022  0143FA  2375               	addwfc	(??___xxtofl+3)& (0+255),f,b
 10023  0143FC  C072  F078         	movff	??___xxtofl,___xxtofl@arg
 10024  014400  C073  F079         	movff	??___xxtofl+1,___xxtofl@arg+1
 10025  014404  C074  F07A         	movff	??___xxtofl+2,___xxtofl@arg+2
 10026  014408  C075  F07B         	movff	??___xxtofl+3,___xxtofl@arg+3
 10027  01440C  D008               	goto	l8055
 10028  01440E                     l1513:
 10029                           
 10030                           ; BSR set to: 0
 10031  01440E  C06E  F078         	movff	___xxtofl@val,___xxtofl@arg
 10032  014412  C06F  F079         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10033  014416  C070  F07A         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10034  01441A  C071  F07B         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10035  01441E                     l8055:
 10036                           
 10037                           ; BSR set to: 0
 10038  01441E  0100               	movlb	0	; () banked
 10039  014420  516E               	movf	___xxtofl@val& (0+255),w,b
 10040  014422  0100               	movlb	0	; () banked
 10041  014424  116F               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 10042  014426  0100               	movlb	0	; () banked
 10043  014428  1170               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 10044  01442A  0100               	movlb	0	; () banked
 10045  01442C  1171               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 10046  01442E  A4D8               	btfss	status,2,c
 10047  014430  D00A               	goto	l8061
 10048                           
 10049                           ; BSR set to: 0
 10050  014432  0E00               	movlw	0
 10051  014434  0100               	movlb	0	; () banked
 10052  014436  6F6E               	movwf	?___xxtofl& (0+255),b
 10053  014438  0E00               	movlw	0
 10054  01443A  6F6F               	movwf	(?___xxtofl+1)& (0+255),b
 10055  01443C  0E00               	movlw	0
 10056  01443E  6F70               	movwf	(?___xxtofl+2)& (0+255),b
 10057  014440  0E00               	movlw	0
 10058  014442  6F71               	movwf	(?___xxtofl+3)& (0+255),b
 10059                           
 10060                           ; BSR set to: 0
 10061  014444  0012               	return	
 10062  014446                     l8061:
 10063                           
 10064                           ; BSR set to: 0
 10065  014446  0E96               	movlw	150
 10066  014448  0100               	movlb	0	; () banked
 10067  01444A  6F77               	movwf	___xxtofl@exp& (0+255),b
 10068  01444C  D008               	goto	l8065
 10069  01444E                     l8063:
 10070                           
 10071                           ; BSR set to: 0
 10072  01444E  0100               	movlb	0	; () banked
 10073  014450  2B77               	incf	___xxtofl@exp& (0+255),f,b
 10074  014452  0100               	movlb	0	; () banked
 10075  014454  90D8               	bcf	status,0,c
 10076  014456  337B               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10077  014458  337A               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10078  01445A  3379               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10079  01445C  3378               	rrcf	___xxtofl@arg& (0+255),f,b
 10080  01445E                     l8065:
 10081                           
 10082                           ; BSR set to: 0
 10083  01445E  0E00               	movlw	0
 10084  014460  0100               	movlb	0	; () banked
 10085  014462  1578               	andwf	___xxtofl@arg& (0+255),w,b
 10086  014464  0100               	movlb	0	; () banked
 10087  014466  6F72               	movwf	??___xxtofl& (0+255),b
 10088  014468  0E00               	movlw	0
 10089  01446A  0100               	movlb	0	; () banked
 10090  01446C  1579               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10091  01446E  0100               	movlb	0	; () banked
 10092  014470  6F73               	movwf	(??___xxtofl+1)& (0+255),b
 10093  014472  0E00               	movlw	0
 10094  014474  0100               	movlb	0	; () banked
 10095  014476  157A               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10096  014478  0100               	movlb	0	; () banked
 10097  01447A  6F74               	movwf	(??___xxtofl+2)& (0+255),b
 10098  01447C  0EFE               	movlw	254
 10099  01447E  0100               	movlb	0	; () banked
 10100  014480  157B               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10101  014482  0100               	movlb	0	; () banked
 10102  014484  6F75               	movwf	(??___xxtofl+3)& (0+255),b
 10103  014486  0100               	movlb	0	; () banked
 10104  014488  5172               	movf	??___xxtofl& (0+255),w,b
 10105  01448A  0100               	movlb	0	; () banked
 10106  01448C  1173               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10107  01448E  0100               	movlb	0	; () banked
 10108  014490  1174               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10109  014492  0100               	movlb	0	; () banked
 10110  014494  1175               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10111  014496  B4D8               	btfsc	status,2,c
 10112  014498  D010               	goto	l1520
 10113  01449A  D7D9               	goto	l8063
 10114  01449C                     l8067:
 10115                           
 10116                           ; BSR set to: 0
 10117  01449C  0100               	movlb	0	; () banked
 10118  01449E  2B77               	incf	___xxtofl@exp& (0+255),f,b
 10119                           
 10120                           ; BSR set to: 0
 10121  0144A0  0E01               	movlw	1
 10122  0144A2  0100               	movlb	0	; () banked
 10123  0144A4  2778               	addwf	___xxtofl@arg& (0+255),f,b
 10124  0144A6  0E00               	movlw	0
 10125  0144A8  2379               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 10126  0144AA  237A               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 10127  0144AC  237B               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 10128                           
 10129                           ; BSR set to: 0
 10130  0144AE  0100               	movlb	0	; () banked
 10131  0144B0  90D8               	bcf	status,0,c
 10132  0144B2  337B               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10133  0144B4  337A               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10134  0144B6  3379               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10135  0144B8  3378               	rrcf	___xxtofl@arg& (0+255),f,b
 10136  0144BA                     l1520:
 10137                           
 10138                           ; BSR set to: 0
 10139  0144BA  0E00               	movlw	0
 10140  0144BC  0100               	movlb	0	; () banked
 10141  0144BE  1578               	andwf	___xxtofl@arg& (0+255),w,b
 10142  0144C0  0100               	movlb	0	; () banked
 10143  0144C2  6F72               	movwf	??___xxtofl& (0+255),b
 10144  0144C4  0E00               	movlw	0
 10145  0144C6  0100               	movlb	0	; () banked
 10146  0144C8  1579               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10147  0144CA  0100               	movlb	0	; () banked
 10148  0144CC  6F73               	movwf	(??___xxtofl+1)& (0+255),b
 10149  0144CE  0E00               	movlw	0
 10150  0144D0  0100               	movlb	0	; () banked
 10151  0144D2  157A               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10152  0144D4  0100               	movlb	0	; () banked
 10153  0144D6  6F74               	movwf	(??___xxtofl+2)& (0+255),b
 10154  0144D8  0EFF               	movlw	255
 10155  0144DA  0100               	movlb	0	; () banked
 10156  0144DC  157B               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10157  0144DE  0100               	movlb	0	; () banked
 10158  0144E0  6F75               	movwf	(??___xxtofl+3)& (0+255),b
 10159  0144E2  0100               	movlb	0	; () banked
 10160  0144E4  5172               	movf	??___xxtofl& (0+255),w,b
 10161  0144E6  0100               	movlb	0	; () banked
 10162  0144E8  1173               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10163  0144EA  0100               	movlb	0	; () banked
 10164  0144EC  1174               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10165  0144EE  0100               	movlb	0	; () banked
 10166  0144F0  1175               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10167  0144F2  B4D8               	btfsc	status,2,c
 10168  0144F4  D009               	goto	l8075
 10169  0144F6  D7D2               	goto	l8067
 10170  0144F8                     l8073:
 10171                           
 10172                           ; BSR set to: 0
 10173  0144F8  0100               	movlb	0	; () banked
 10174  0144FA  0777               	decf	___xxtofl@exp& (0+255),f,b
 10175  0144FC  0100               	movlb	0	; () banked
 10176  0144FE  90D8               	bcf	status,0,c
 10177  014500  3778               	rlcf	___xxtofl@arg& (0+255),f,b
 10178  014502  3779               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 10179  014504  377A               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 10180  014506  377B               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 10181  014508                     l8075:
 10182                           
 10183                           ; BSR set to: 0
 10184  014508  0100               	movlb	0	; () banked
 10185  01450A  BF7A               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 10186  01450C  D004               	goto	l1527
 10187                           
 10188                           ; BSR set to: 0
 10189  01450E  0E02               	movlw	2
 10190  014510  0100               	movlb	0	; () banked
 10191  014512  6177               	cpfslt	___xxtofl@exp& (0+255),b
 10192  014514  D7F1               	goto	l8073
 10193  014516                     l1527:
 10194                           
 10195                           ; BSR set to: 0
 10196  014516  0100               	movlb	0	; () banked
 10197  014518  B177               	btfsc	___xxtofl@exp& (0+255),0,b
 10198  01451A  D009               	goto	l1528
 10199                           
 10200                           ; BSR set to: 0
 10201  01451C  0EFF               	movlw	255
 10202  01451E  0100               	movlb	0	; () banked
 10203  014520  1778               	andwf	___xxtofl@arg& (0+255),f,b
 10204  014522  0EFF               	movlw	255
 10205  014524  1779               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 10206  014526  0E7F               	movlw	127
 10207  014528  177A               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 10208  01452A  0EFF               	movlw	255
 10209  01452C  177B               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 10210  01452E                     l1528:
 10211                           
 10212                           ; BSR set to: 0
 10213  01452E  0100               	movlb	0	; () banked
 10214  014530  90D8               	bcf	status,0,c
 10215  014532  3377               	rrcf	___xxtofl@exp& (0+255),f,b
 10216  014534  C077  F072         	movff	___xxtofl@exp,??___xxtofl
 10217  014538  0100               	movlb	0	; () banked
 10218  01453A  6B73               	clrf	(??___xxtofl+1)& (0+255),b
 10219  01453C  6B74               	clrf	(??___xxtofl+2)& (0+255),b
 10220  01453E  6B75               	clrf	(??___xxtofl+3)& (0+255),b
 10221  014540  C072  F075         	movff	??___xxtofl,??___xxtofl+3
 10222  014544  0100               	movlb	0	; () banked
 10223  014546  6B74               	clrf	(??___xxtofl+2)& (0+255),b
 10224  014548  6B73               	clrf	(??___xxtofl+1)& (0+255),b
 10225  01454A  6B72               	clrf	??___xxtofl& (0+255),b
 10226  01454C  0100               	movlb	0	; () banked
 10227  01454E  5172               	movf	??___xxtofl& (0+255),w,b
 10228  014550  0100               	movlb	0	; () banked
 10229  014552  1378               	iorwf	___xxtofl@arg& (0+255),f,b
 10230  014554  0100               	movlb	0	; () banked
 10231  014556  5173               	movf	(??___xxtofl+1)& (0+255),w,b
 10232  014558  0100               	movlb	0	; () banked
 10233  01455A  1379               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 10234  01455C  0100               	movlb	0	; () banked
 10235  01455E  5174               	movf	(??___xxtofl+2)& (0+255),w,b
 10236  014560  0100               	movlb	0	; () banked
 10237  014562  137A               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 10238  014564  0100               	movlb	0	; () banked
 10239  014566  5175               	movf	(??___xxtofl+3)& (0+255),w,b
 10240  014568  0100               	movlb	0	; () banked
 10241  01456A  137B               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 10242                           
 10243                           ; BSR set to: 0
 10244  01456C  0100               	movlb	0	; () banked
 10245  01456E  5176               	movf	___xxtofl@sign& (0+255),w,b
 10246  014570  0100               	movlb	0	; () banked
 10247  014572  B4D8               	btfsc	status,2,c
 10248  014574  D005               	goto	l8087
 10249                           
 10250                           ; BSR set to: 0
 10251  014576  0100               	movlb	0	; () banked
 10252  014578  AF71               	btfss	(___xxtofl@val+3)& (0+255),7,b
 10253  01457A  D002               	goto	l8087
 10254                           
 10255                           ; BSR set to: 0
 10256  01457C  0100               	movlb	0	; () banked
 10257  01457E  8F7B               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 10258  014580                     l8087:
 10259                           
 10260                           ; BSR set to: 0
 10261  014580  C078  F06E         	movff	___xxtofl@arg,?___xxtofl
 10262  014584  C079  F06F         	movff	___xxtofl@arg+1,?___xxtofl+1
 10263  014588  C07A  F070         	movff	___xxtofl@arg+2,?___xxtofl+2
 10264  01458C  C07B  F071         	movff	___xxtofl@arg+3,?___xxtofl+3
 10265  014590  0012               	return	
 10266  014592                     __end_of___xxtofl:
 10267                           	opt stack 0
 10268                           tblptru	equ	0xFF8
 10269                           tblptrh	equ	0xFF7
 10270                           tblptrl	equ	0xFF6
 10271                           tablat	equ	0xFF5
 10272                           prodh	equ	0xFF4
 10273                           prodl	equ	0xFF3
 10274                           intcon	equ	0xFF2
 10275                           postinc0	equ	0xFEE
 10276                           wreg	equ	0xFE8
 10277                           indf2	equ	0xFDF
 10278                           postinc2	equ	0xFDE
 10279                           fsr2h	equ	0xFDA
 10280                           fsr2l	equ	0xFD9
 10281                           status	equ	0xFD8
 10282                           
 10283 ;; *************** function ___llmod *****************
 10284 ;; Defined at:
 10285 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 10286 ;; Parameters:    Size  Location     Type
 10287 ;;  dividend        4   14[BANK0 ] unsigned long 
 10288 ;;  divisor         4   18[BANK0 ] unsigned long 
 10289 ;; Auto vars:     Size  Location     Type
 10290 ;;  counter         1   22[BANK0 ] unsigned char 
 10291 ;; Return value:  Size  Location     Type
 10292 ;;                  4   14[BANK0 ] unsigned long 
 10293 ;; Registers used:
 10294 ;;		wreg, status,2, status,0
 10295 ;; Tracked objects:
 10296 ;;		On entry : 0/0
 10297 ;;		On exit  : 0/0
 10298 ;;		Unchanged: 0/0
 10299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10300 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10301 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10303 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10304 ;;Total ram usage:        9 bytes
 10305 ;; Hardware stack levels used:    1
 10306 ;; Hardware stack levels required when called:    3
 10307 ;; This function calls:
 10308 ;;		Nothing
 10309 ;; This function is called by:
 10310 ;;		_sprintf
 10311 ;; This function uses a non-reentrant model
 10312 ;;
 10313                           
 10314                           	psect	text18
 10315  015908                     __ptext18:
 10316                           	opt stack 0
 10317  015908                     ___llmod:
 10318                           	opt stack 25
 10319                           
 10320                           ; BSR set to: 0
 10321                           ;incstack = 0
 10322  015908  0100               	movlb	0	; () banked
 10323  01590A  5172               	movf	___llmod@divisor& (0+255),w,b
 10324  01590C  0100               	movlb	0	; () banked
 10325  01590E  1173               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 10326  015910  0100               	movlb	0	; () banked
 10327  015912  1174               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 10328  015914  0100               	movlb	0	; () banked
 10329  015916  1175               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 10330  015918  B4D8               	btfsc	status,2,c
 10331  01591A  D03A               	goto	l1321
 10332                           
 10333                           ; BSR set to: 0
 10334  01591C  0E01               	movlw	1
 10335  01591E  0100               	movlb	0	; () banked
 10336  015920  6F76               	movwf	___llmod@counter& (0+255),b
 10337  015922  D008               	goto	l8039
 10338  015924                     l8037:
 10339                           
 10340                           ; BSR set to: 0
 10341  015924  0100               	movlb	0	; () banked
 10342  015926  90D8               	bcf	status,0,c
 10343  015928  3772               	rlcf	___llmod@divisor& (0+255),f,b
 10344  01592A  3773               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 10345  01592C  3774               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 10346  01592E  3775               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 10347  015930  0100               	movlb	0	; () banked
 10348  015932  2B76               	incf	___llmod@counter& (0+255),f,b
 10349  015934                     l8039:
 10350                           
 10351                           ; BSR set to: 0
 10352  015934  0100               	movlb	0	; () banked
 10353  015936  AF75               	btfss	(___llmod@divisor+3)& (0+255),7,b
 10354  015938  D7F5               	goto	l8037
 10355  01593A                     l8041:
 10356                           
 10357                           ; BSR set to: 0
 10358  01593A  0100               	movlb	0	; () banked
 10359  01593C  5172               	movf	___llmod@divisor& (0+255),w,b
 10360  01593E  0100               	movlb	0	; () banked
 10361  015940  5D6E               	subwf	___llmod@dividend& (0+255),w,b
 10362  015942  0100               	movlb	0	; () banked
 10363  015944  5173               	movf	(___llmod@divisor+1)& (0+255),w,b
 10364  015946  0100               	movlb	0	; () banked
 10365  015948  596F               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 10366  01594A  0100               	movlb	0	; () banked
 10367  01594C  5174               	movf	(___llmod@divisor+2)& (0+255),w,b
 10368  01594E  0100               	movlb	0	; () banked
 10369  015950  5970               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 10370  015952  0100               	movlb	0	; () banked
 10371  015954  5175               	movf	(___llmod@divisor+3)& (0+255),w,b
 10372  015956  0100               	movlb	0	; () banked
 10373  015958  5971               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 10374  01595A  A0D8               	btfss	status,0,c
 10375  01595C  D010               	goto	l8045
 10376                           
 10377                           ; BSR set to: 0
 10378  01595E  0100               	movlb	0	; () banked
 10379  015960  5172               	movf	___llmod@divisor& (0+255),w,b
 10380  015962  0100               	movlb	0	; () banked
 10381  015964  5F6E               	subwf	___llmod@dividend& (0+255),f,b
 10382  015966  0100               	movlb	0	; () banked
 10383  015968  5173               	movf	(___llmod@divisor+1)& (0+255),w,b
 10384  01596A  0100               	movlb	0	; () banked
 10385  01596C  5B6F               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 10386  01596E  0100               	movlb	0	; () banked
 10387  015970  5174               	movf	(___llmod@divisor+2)& (0+255),w,b
 10388  015972  0100               	movlb	0	; () banked
 10389  015974  5B70               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 10390  015976  0100               	movlb	0	; () banked
 10391  015978  5175               	movf	(___llmod@divisor+3)& (0+255),w,b
 10392  01597A  0100               	movlb	0	; () banked
 10393  01597C  5B71               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 10394  01597E                     l8045:
 10395                           
 10396                           ; BSR set to: 0
 10397  01597E  0100               	movlb	0	; () banked
 10398  015980  90D8               	bcf	status,0,c
 10399  015982  3375               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 10400  015984  3374               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 10401  015986  3373               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 10402  015988  3372               	rrcf	___llmod@divisor& (0+255),f,b
 10403                           
 10404                           ; BSR set to: 0
 10405  01598A  0100               	movlb	0	; () banked
 10406  01598C  2F76               	decfsz	___llmod@counter& (0+255),f,b
 10407  01598E  D7D5               	goto	l8041
 10408  015990                     l1321:
 10409                           
 10410                           ; BSR set to: 0
 10411  015990  C06E  F06E         	movff	___llmod@dividend,?___llmod
 10412  015994  C06F  F06F         	movff	___llmod@dividend+1,?___llmod+1
 10413  015998  C070  F070         	movff	___llmod@dividend+2,?___llmod+2
 10414  01599C  C071  F071         	movff	___llmod@dividend+3,?___llmod+3
 10415                           
 10416                           ; BSR set to: 0
 10417  0159A0  0012               	return		;funcret
 10418  0159A2                     __end_of___llmod:
 10419                           	opt stack 0
 10420                           tblptru	equ	0xFF8
 10421                           tblptrh	equ	0xFF7
 10422                           tblptrl	equ	0xFF6
 10423                           tablat	equ	0xFF5
 10424                           prodh	equ	0xFF4
 10425                           prodl	equ	0xFF3
 10426                           intcon	equ	0xFF2
 10427                           postinc0	equ	0xFEE
 10428                           wreg	equ	0xFE8
 10429                           indf2	equ	0xFDF
 10430                           postinc2	equ	0xFDE
 10431                           fsr2h	equ	0xFDA
 10432                           fsr2l	equ	0xFD9
 10433                           status	equ	0xFD8
 10434                           
 10435 ;; *************** function ___lldiv *****************
 10436 ;; Defined at:
 10437 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 10438 ;; Parameters:    Size  Location     Type
 10439 ;;  dividend        4   14[BANK0 ] unsigned long 
 10440 ;;  divisor         4   18[BANK0 ] unsigned long 
 10441 ;; Auto vars:     Size  Location     Type
 10442 ;;  quotient        4   22[BANK0 ] unsigned long 
 10443 ;;  counter         1   26[BANK0 ] unsigned char 
 10444 ;; Return value:  Size  Location     Type
 10445 ;;                  4   14[BANK0 ] unsigned long 
 10446 ;; Registers used:
 10447 ;;		wreg, status,2, status,0
 10448 ;; Tracked objects:
 10449 ;;		On entry : 0/0
 10450 ;;		On exit  : 0/0
 10451 ;;		Unchanged: 0/0
 10452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10453 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10454 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10456 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10457 ;;Total ram usage:       13 bytes
 10458 ;; Hardware stack levels used:    1
 10459 ;; Hardware stack levels required when called:    3
 10460 ;; This function calls:
 10461 ;;		Nothing
 10462 ;; This function is called by:
 10463 ;;		_sprintf
 10464 ;; This function uses a non-reentrant model
 10465 ;;
 10466                           
 10467                           	psect	text19
 10468  015646                     __ptext19:
 10469                           	opt stack 0
 10470  015646                     ___lldiv:
 10471                           	opt stack 25
 10472                           
 10473                           ; BSR set to: 0
 10474                           ;incstack = 0
 10475  015646  0E00               	movlw	0
 10476  015648  0100               	movlb	0	; () banked
 10477  01564A  6F76               	movwf	___lldiv@quotient& (0+255),b
 10478  01564C  0E00               	movlw	0
 10479  01564E  6F77               	movwf	(___lldiv@quotient+1)& (0+255),b
 10480  015650  0E00               	movlw	0
 10481  015652  6F78               	movwf	(___lldiv@quotient+2)& (0+255),b
 10482  015654  0E00               	movlw	0
 10483  015656  6F79               	movwf	(___lldiv@quotient+3)& (0+255),b
 10484                           
 10485                           ; BSR set to: 0
 10486  015658  0100               	movlb	0	; () banked
 10487  01565A  5172               	movf	___lldiv@divisor& (0+255),w,b
 10488  01565C  0100               	movlb	0	; () banked
 10489  01565E  1173               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 10490  015660  0100               	movlb	0	; () banked
 10491  015662  1174               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 10492  015664  0100               	movlb	0	; () banked
 10493  015666  1175               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 10494  015668  B4D8               	btfsc	status,2,c
 10495  01566A  D042               	goto	l1311
 10496                           
 10497                           ; BSR set to: 0
 10498  01566C  0E01               	movlw	1
 10499  01566E  0100               	movlb	0	; () banked
 10500  015670  6F7A               	movwf	___lldiv@counter& (0+255),b
 10501  015672  D008               	goto	l8019
 10502  015674                     l8017:
 10503                           
 10504                           ; BSR set to: 0
 10505  015674  0100               	movlb	0	; () banked
 10506  015676  90D8               	bcf	status,0,c
 10507  015678  3772               	rlcf	___lldiv@divisor& (0+255),f,b
 10508  01567A  3773               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 10509  01567C  3774               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 10510  01567E  3775               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 10511  015680  0100               	movlb	0	; () banked
 10512  015682  2B7A               	incf	___lldiv@counter& (0+255),f,b
 10513  015684                     l8019:
 10514                           
 10515                           ; BSR set to: 0
 10516  015684  0100               	movlb	0	; () banked
 10517  015686  AF75               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 10518  015688  D7F5               	goto	l8017
 10519  01568A                     l8021:
 10520                           
 10521                           ; BSR set to: 0
 10522  01568A  0100               	movlb	0	; () banked
 10523  01568C  90D8               	bcf	status,0,c
 10524  01568E  3776               	rlcf	___lldiv@quotient& (0+255),f,b
 10525  015690  3777               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 10526  015692  3778               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 10527  015694  3779               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 10528                           
 10529                           ; BSR set to: 0
 10530  015696  0100               	movlb	0	; () banked
 10531  015698  5172               	movf	___lldiv@divisor& (0+255),w,b
 10532  01569A  0100               	movlb	0	; () banked
 10533  01569C  5D6E               	subwf	___lldiv@dividend& (0+255),w,b
 10534  01569E  0100               	movlb	0	; () banked
 10535  0156A0  5173               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10536  0156A2  0100               	movlb	0	; () banked
 10537  0156A4  596F               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 10538  0156A6  0100               	movlb	0	; () banked
 10539  0156A8  5174               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10540  0156AA  0100               	movlb	0	; () banked
 10541  0156AC  5970               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 10542  0156AE  0100               	movlb	0	; () banked
 10543  0156B0  5175               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10544  0156B2  0100               	movlb	0	; () banked
 10545  0156B4  5971               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 10546  0156B6  A0D8               	btfss	status,0,c
 10547  0156B8  D012               	goto	l8029
 10548                           
 10549                           ; BSR set to: 0
 10550  0156BA  0100               	movlb	0	; () banked
 10551  0156BC  5172               	movf	___lldiv@divisor& (0+255),w,b
 10552  0156BE  0100               	movlb	0	; () banked
 10553  0156C0  5F6E               	subwf	___lldiv@dividend& (0+255),f,b
 10554  0156C2  0100               	movlb	0	; () banked
 10555  0156C4  5173               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10556  0156C6  0100               	movlb	0	; () banked
 10557  0156C8  5B6F               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 10558  0156CA  0100               	movlb	0	; () banked
 10559  0156CC  5174               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10560  0156CE  0100               	movlb	0	; () banked
 10561  0156D0  5B70               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 10562  0156D2  0100               	movlb	0	; () banked
 10563  0156D4  5175               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10564  0156D6  0100               	movlb	0	; () banked
 10565  0156D8  5B71               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 10566                           
 10567                           ; BSR set to: 0
 10568  0156DA  0100               	movlb	0	; () banked
 10569  0156DC  8176               	bsf	___lldiv@quotient& (0+255),0,b
 10570  0156DE                     l8029:
 10571                           
 10572                           ; BSR set to: 0
 10573  0156DE  0100               	movlb	0	; () banked
 10574  0156E0  90D8               	bcf	status,0,c
 10575  0156E2  3375               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 10576  0156E4  3374               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 10577  0156E6  3373               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 10578  0156E8  3372               	rrcf	___lldiv@divisor& (0+255),f,b
 10579                           
 10580                           ; BSR set to: 0
 10581  0156EA  0100               	movlb	0	; () banked
 10582  0156EC  2F7A               	decfsz	___lldiv@counter& (0+255),f,b
 10583  0156EE  D7CD               	goto	l8021
 10584  0156F0                     l1311:
 10585                           
 10586                           ; BSR set to: 0
 10587  0156F0  C076  F06E         	movff	___lldiv@quotient,?___lldiv
 10588  0156F4  C077  F06F         	movff	___lldiv@quotient+1,?___lldiv+1
 10589  0156F8  C078  F070         	movff	___lldiv@quotient+2,?___lldiv+2
 10590  0156FC  C079  F071         	movff	___lldiv@quotient+3,?___lldiv+3
 10591                           
 10592                           ; BSR set to: 0
 10593  015700  0012               	return		;funcret
 10594  015702                     __end_of___lldiv:
 10595                           	opt stack 0
 10596                           tblptru	equ	0xFF8
 10597                           tblptrh	equ	0xFF7
 10598                           tblptrl	equ	0xFF6
 10599                           tablat	equ	0xFF5
 10600                           prodh	equ	0xFF4
 10601                           prodl	equ	0xFF3
 10602                           intcon	equ	0xFF2
 10603                           postinc0	equ	0xFEE
 10604                           wreg	equ	0xFE8
 10605                           indf2	equ	0xFDF
 10606                           postinc2	equ	0xFDE
 10607                           fsr2h	equ	0xFDA
 10608                           fsr2l	equ	0xFD9
 10609                           status	equ	0xFD8
 10610                           
 10611 ;; *************** function ___fltol *****************
 10612 ;; Defined at:
 10613 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
 10614 ;; Parameters:    Size  Location     Type
 10615 ;;  f1              4   86[BANK0 ] unsigned long 
 10616 ;; Auto vars:     Size  Location     Type
 10617 ;;  exp1            1   95[BANK0 ] unsigned char 
 10618 ;;  sign1           1   94[BANK0 ] unsigned char 
 10619 ;; Return value:  Size  Location     Type
 10620 ;;                  4   86[BANK0 ] long 
 10621 ;; Registers used:
 10622 ;;		wreg, status,2, status,0
 10623 ;; Tracked objects:
 10624 ;;		On entry : 0/0
 10625 ;;		On exit  : 0/0
 10626 ;;		Unchanged: 0/0
 10627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10628 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10629 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10630 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10631 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10632 ;;Total ram usage:       10 bytes
 10633 ;; Hardware stack levels used:    1
 10634 ;; Hardware stack levels required when called:    3
 10635 ;; This function calls:
 10636 ;;		Nothing
 10637 ;; This function is called by:
 10638 ;;		_main
 10639 ;;		_sprintf
 10640 ;; This function uses a non-reentrant model
 10641 ;;
 10642                           
 10643                           	psect	text20
 10644  015210                     __ptext20:
 10645                           	opt stack 0
 10646  015210                     ___fltol:
 10647                           	opt stack 27
 10648                           
 10649                           ; BSR set to: 0
 10650                           ;incstack = 0
 10651  015210  0100               	movlb	0	; () banked
 10652  015212  35B8               	rlcf	(___fltol@f1+2)& (0+255),w,b
 10653  015214  35B9               	rlcf	(___fltol@f1+3)& (0+255),w,b
 10654  015216  0100               	movlb	0	; () banked
 10655  015218  6FBF               	movwf	___fltol@exp1& (0+255),b
 10656  01521A  0100               	movlb	0	; () banked
 10657  01521C  51BF               	movf	___fltol@exp1& (0+255),w,b
 10658  01521E  A4D8               	btfss	status,2,c
 10659  015220  D00A               	goto	l7973
 10660                           
 10661                           ; BSR set to: 0
 10662  015222  0E00               	movlw	0
 10663  015224  0100               	movlb	0	; () banked
 10664  015226  6FB6               	movwf	?___fltol& (0+255),b
 10665  015228  0E00               	movlw	0
 10666  01522A  6FB7               	movwf	(?___fltol+1)& (0+255),b
 10667  01522C  0E00               	movlw	0
 10668  01522E  6FB8               	movwf	(?___fltol+2)& (0+255),b
 10669  015230  0E00               	movlw	0
 10670  015232  6FB9               	movwf	(?___fltol+3)& (0+255),b
 10671                           
 10672                           ; BSR set to: 0
 10673  015234  0012               	return	
 10674  015236                     l7973:
 10675                           
 10676                           ; BSR set to: 0
 10677  015236  C0B6  F0BA         	movff	___fltol@f1,??___fltol
 10678  01523A  C0B7  F0BB         	movff	___fltol@f1+1,??___fltol+1
 10679  01523E  C0B8  F0BC         	movff	___fltol@f1+2,??___fltol+2
 10680  015242  C0B9  F0BD         	movff	___fltol@f1+3,??___fltol+3
 10681  015246  0E20               	movlw	32
 10682  015248  D006               	goto	u10330
 10683  01524A                     u10335:
 10684  01524A  0100               	movlb	0	; () banked
 10685  01524C  90D8               	bcf	status,0,c
 10686  01524E  33BD               	rrcf	(??___fltol+3)& (0+255),f,b
 10687  015250  33BC               	rrcf	(??___fltol+2)& (0+255),f,b
 10688  015252  33BB               	rrcf	(??___fltol+1)& (0+255),f,b
 10689  015254  33BA               	rrcf	??___fltol& (0+255),f,b
 10690  015256                     u10330:
 10691  015256  2EE8               	decfsz	wreg,f,c
 10692  015258  D7F8               	goto	u10335
 10693  01525A  0100               	movlb	0	; () banked
 10694  01525C  51BA               	movf	??___fltol& (0+255),w,b
 10695  01525E  0100               	movlb	0	; () banked
 10696  015260  6FBE               	movwf	___fltol@sign1& (0+255),b
 10697                           
 10698                           ; BSR set to: 0
 10699  015262  0100               	movlb	0	; () banked
 10700  015264  8FB8               	bsf	(___fltol@f1+2)& (0+255),7,b
 10701                           
 10702                           ; BSR set to: 0
 10703  015266  0EFF               	movlw	255
 10704  015268  0100               	movlb	0	; () banked
 10705  01526A  17B6               	andwf	___fltol@f1& (0+255),f,b
 10706  01526C  0EFF               	movlw	255
 10707  01526E  17B7               	andwf	(___fltol@f1+1)& (0+255),f,b
 10708  015270  0EFF               	movlw	255
 10709  015272  17B8               	andwf	(___fltol@f1+2)& (0+255),f,b
 10710  015274  0E00               	movlw	0
 10711  015276  17B9               	andwf	(___fltol@f1+3)& (0+255),f,b
 10712                           
 10713                           ; BSR set to: 0
 10714  015278  0E96               	movlw	150
 10715  01527A  0100               	movlb	0	; () banked
 10716  01527C  5FBF               	subwf	___fltol@exp1& (0+255),f,b
 10717                           
 10718                           ; BSR set to: 0
 10719  01527E  0100               	movlb	0	; () banked
 10720  015280  AFBF               	btfss	___fltol@exp1& (0+255),7,b
 10721  015282  D01A               	goto	l7993
 10722                           
 10723                           ; BSR set to: 0
 10724  015284  0100               	movlb	0	; () banked
 10725  015286  51BF               	movf	___fltol@exp1& (0+255),w,b
 10726  015288  0A80               	xorlw	128
 10727  01528A  0F97               	addlw	151
 10728  01528C  B0D8               	btfsc	status,0,c
 10729  01528E  D00A               	goto	l7989
 10730                           
 10731                           ; BSR set to: 0
 10732  015290  0E00               	movlw	0
 10733  015292  0100               	movlb	0	; () banked
 10734  015294  6FB6               	movwf	?___fltol& (0+255),b
 10735  015296  0E00               	movlw	0
 10736  015298  6FB7               	movwf	(?___fltol+1)& (0+255),b
 10737  01529A  0E00               	movlw	0
 10738  01529C  6FB8               	movwf	(?___fltol+2)& (0+255),b
 10739  01529E  0E00               	movlw	0
 10740  0152A0  6FB9               	movwf	(?___fltol+3)& (0+255),b
 10741                           
 10742                           ; BSR set to: 0
 10743  0152A2  0012               	return	
 10744  0152A4                     l7989:
 10745                           
 10746                           ; BSR set to: 0
 10747  0152A4  0100               	movlb	0	; () banked
 10748  0152A6  90D8               	bcf	status,0,c
 10749  0152A8  33B9               	rrcf	(___fltol@f1+3)& (0+255),f,b
 10750  0152AA  33B8               	rrcf	(___fltol@f1+2)& (0+255),f,b
 10751  0152AC  33B7               	rrcf	(___fltol@f1+1)& (0+255),f,b
 10752  0152AE  33B6               	rrcf	___fltol@f1& (0+255),f,b
 10753                           
 10754                           ; BSR set to: 0
 10755  0152B0  0100               	movlb	0	; () banked
 10756  0152B2  3FBF               	incfsz	___fltol@exp1& (0+255),f,b
 10757  0152B4  D7F7               	goto	l7989
 10758                           
 10759                           ; BSR set to: 0
 10760  0152B6  D01B               	goto	l8003
 10761  0152B8                     l7993:
 10762                           
 10763                           ; BSR set to: 0
 10764  0152B8  0E1F               	movlw	31
 10765  0152BA  0100               	movlb	0	; () banked
 10766  0152BC  65BF               	cpfsgt	___fltol@exp1& (0+255),b
 10767  0152BE  D012               	goto	l8001
 10768                           
 10769                           ; BSR set to: 0
 10770  0152C0  0E00               	movlw	0
 10771  0152C2  0100               	movlb	0	; () banked
 10772  0152C4  6FB6               	movwf	?___fltol& (0+255),b
 10773  0152C6  0E00               	movlw	0
 10774  0152C8  6FB7               	movwf	(?___fltol+1)& (0+255),b
 10775  0152CA  0E00               	movlw	0
 10776  0152CC  6FB8               	movwf	(?___fltol+2)& (0+255),b
 10777  0152CE  0E00               	movlw	0
 10778  0152D0  6FB9               	movwf	(?___fltol+3)& (0+255),b
 10779                           
 10780                           ; BSR set to: 0
 10781  0152D2  0012               	return	
 10782  0152D4                     l7999:
 10783                           
 10784                           ; BSR set to: 0
 10785  0152D4  0100               	movlb	0	; () banked
 10786  0152D6  90D8               	bcf	status,0,c
 10787  0152D8  37B6               	rlcf	___fltol@f1& (0+255),f,b
 10788  0152DA  37B7               	rlcf	(___fltol@f1+1)& (0+255),f,b
 10789  0152DC  37B8               	rlcf	(___fltol@f1+2)& (0+255),f,b
 10790  0152DE  37B9               	rlcf	(___fltol@f1+3)& (0+255),f,b
 10791  0152E0  0100               	movlb	0	; () banked
 10792  0152E2  07BF               	decf	___fltol@exp1& (0+255),f,b
 10793  0152E4                     l8001:
 10794                           
 10795                           ; BSR set to: 0
 10796  0152E4  0100               	movlb	0	; () banked
 10797  0152E6  51BF               	movf	___fltol@exp1& (0+255),w,b
 10798  0152E8  0100               	movlb	0	; () banked
 10799  0152EA  A4D8               	btfss	status,2,c
 10800  0152EC  D7F3               	goto	l7999
 10801  0152EE                     l8003:
 10802                           
 10803                           ; BSR set to: 0
 10804  0152EE  0100               	movlb	0	; () banked
 10805  0152F0  51BE               	movf	___fltol@sign1& (0+255),w,b
 10806  0152F2  0100               	movlb	0	; () banked
 10807  0152F4  B4D8               	btfsc	status,2,c
 10808  0152F6  D009               	goto	l8007
 10809                           
 10810                           ; BSR set to: 0
 10811  0152F8  0100               	movlb	0	; () banked
 10812  0152FA  1FB9               	comf	(___fltol@f1+3)& (0+255),f,b
 10813  0152FC  1FB8               	comf	(___fltol@f1+2)& (0+255),f,b
 10814  0152FE  1FB7               	comf	(___fltol@f1+1)& (0+255),f,b
 10815  015300  6DB6               	negf	___fltol@f1& (0+255),b
 10816  015302  0E00               	movlw	0
 10817  015304  23B7               	addwfc	(___fltol@f1+1)& (0+255),f,b
 10818  015306  23B8               	addwfc	(___fltol@f1+2)& (0+255),f,b
 10819  015308  23B9               	addwfc	(___fltol@f1+3)& (0+255),f,b
 10820  01530A                     l8007:
 10821                           
 10822                           ; BSR set to: 0
 10823  01530A  C0B6  F0B6         	movff	___fltol@f1,?___fltol
 10824  01530E  C0B7  F0B7         	movff	___fltol@f1+1,?___fltol+1
 10825  015312  C0B8  F0B8         	movff	___fltol@f1+2,?___fltol+2
 10826  015316  C0B9  F0B9         	movff	___fltol@f1+3,?___fltol+3
 10827  01531A  0012               	return	
 10828  01531C                     __end_of___fltol:
 10829                           	opt stack 0
 10830                           tblptru	equ	0xFF8
 10831                           tblptrh	equ	0xFF7
 10832                           tblptrl	equ	0xFF6
 10833                           tablat	equ	0xFF5
 10834                           prodh	equ	0xFF4
 10835                           prodl	equ	0xFF3
 10836                           intcon	equ	0xFF2
 10837                           postinc0	equ	0xFEE
 10838                           wreg	equ	0xFE8
 10839                           indf2	equ	0xFDF
 10840                           postinc2	equ	0xFDE
 10841                           fsr2h	equ	0xFDA
 10842                           fsr2l	equ	0xFD9
 10843                           status	equ	0xFD8
 10844                           
 10845 ;; *************** function ___flsub *****************
 10846 ;; Defined at:
 10847 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 10848 ;; Parameters:    Size  Location     Type
 10849 ;;  b               4   86[BANK0 ] long 
 10850 ;;  a               4   90[BANK0 ] long 
 10851 ;; Auto vars:     Size  Location     Type
 10852 ;;		None
 10853 ;; Return value:  Size  Location     Type
 10854 ;;                  4   86[BANK0 ] long 
 10855 ;; Registers used:
 10856 ;;		wreg, status,2, status,0, cstack
 10857 ;; Tracked objects:
 10858 ;;		On entry : 0/0
 10859 ;;		On exit  : 0/0
 10860 ;;		Unchanged: 0/0
 10861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10862 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10865 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10866 ;;Total ram usage:        8 bytes
 10867 ;; Hardware stack levels used:    1
 10868 ;; Hardware stack levels required when called:    4
 10869 ;; This function calls:
 10870 ;;		___fladd
 10871 ;; This function is called by:
 10872 ;;		_sprintf
 10873 ;; This function uses a non-reentrant model
 10874 ;;
 10875                           
 10876                           	psect	text21
 10877  015B66                     __ptext21:
 10878                           	opt stack 0
 10879  015B66                     ___flsub:
 10880                           	opt stack 24
 10881                           
 10882                           ; BSR set to: 0
 10883                           ;incstack = 0
 10884  015B66  0E00               	movlw	0
 10885  015B68  0100               	movlb	0	; () banked
 10886  015B6A  1BBA               	xorwf	___flsub@a& (0+255),f,b
 10887  015B6C  0E00               	movlw	0
 10888  015B6E  1BBB               	xorwf	(___flsub@a+1)& (0+255),f,b
 10889  015B70  0E00               	movlw	0
 10890  015B72  1BBC               	xorwf	(___flsub@a+2)& (0+255),f,b
 10891  015B74  0E80               	movlw	128
 10892  015B76  1BBD               	xorwf	(___flsub@a+3)& (0+255),f,b
 10893                           
 10894                           ; BSR set to: 0
 10895  015B78  C0B6  F0A2         	movff	___flsub@b,___fladd@b
 10896  015B7C  C0B7  F0A3         	movff	___flsub@b+1,___fladd@b+1
 10897  015B80  C0B8  F0A4         	movff	___flsub@b+2,___fladd@b+2
 10898  015B84  C0B9  F0A5         	movff	___flsub@b+3,___fladd@b+3
 10899  015B88  C0BA  F0A6         	movff	___flsub@a,___fladd@a
 10900  015B8C  C0BB  F0A7         	movff	___flsub@a+1,___fladd@a+1
 10901  015B90  C0BC  F0A8         	movff	___flsub@a+2,___fladd@a+2
 10902  015B94  C0BD  F0A9         	movff	___flsub@a+3,___fladd@a+3
 10903  015B98  ECEE  F095         	call	___fladd	;wreg free
 10904  015B9C  C0A2  F0B6         	movff	?___fladd,?___flsub
 10905  015BA0  C0A3  F0B7         	movff	?___fladd+1,?___flsub+1
 10906  015BA4  C0A4  F0B8         	movff	?___fladd+2,?___flsub+2
 10907  015BA8  C0A5  F0B9         	movff	?___fladd+3,?___flsub+3
 10908  015BAC  0012               	return	
 10909  015BAE                     __end_of___flsub:
 10910                           	opt stack 0
 10911                           tblptru	equ	0xFF8
 10912                           tblptrh	equ	0xFF7
 10913                           tblptrl	equ	0xFF6
 10914                           tablat	equ	0xFF5
 10915                           prodh	equ	0xFF4
 10916                           prodl	equ	0xFF3
 10917                           intcon	equ	0xFF2
 10918                           postinc0	equ	0xFEE
 10919                           wreg	equ	0xFE8
 10920                           indf2	equ	0xFDF
 10921                           postinc2	equ	0xFDE
 10922                           fsr2h	equ	0xFDA
 10923                           fsr2l	equ	0xFD9
 10924                           status	equ	0xFD8
 10925                           
 10926 ;; *************** function ___fladd *****************
 10927 ;; Defined at:
 10928 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 10929 ;; Parameters:    Size  Location     Type
 10930 ;;  b               4   66[BANK0 ] long 
 10931 ;;  a               4   70[BANK0 ] long 
 10932 ;; Auto vars:     Size  Location     Type
 10933 ;;  grs             1   85[BANK0 ] unsigned char 
 10934 ;;  bexp            1   84[BANK0 ] unsigned char 
 10935 ;;  aexp            1   83[BANK0 ] unsigned char 
 10936 ;;  signs           1   82[BANK0 ] unsigned char 
 10937 ;; Return value:  Size  Location     Type
 10938 ;;                  4   66[BANK0 ] unsigned char 
 10939 ;; Registers used:
 10940 ;;		wreg, status,2, status,0
 10941 ;; Tracked objects:
 10942 ;;		On entry : 0/0
 10943 ;;		On exit  : 0/0
 10944 ;;		Unchanged: 0/0
 10945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10946 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10947 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10948 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10949 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10950 ;;Total ram usage:       20 bytes
 10951 ;; Hardware stack levels used:    1
 10952 ;; Hardware stack levels required when called:    3
 10953 ;; This function calls:
 10954 ;;		Nothing
 10955 ;; This function is called by:
 10956 ;;		_main
 10957 ;;		_sprintf
 10958 ;;		___flsub
 10959 ;; This function uses a non-reentrant model
 10960 ;;
 10961                           
 10962                           	psect	text22
 10963  012BDC                     __ptext22:
 10964                           	opt stack 0
 10965  012BDC                     ___fladd:
 10966                           	opt stack 27
 10967                           
 10968                           ;incstack = 0
 10969  012BDC  0100               	movlb	0	; () banked
 10970  012BDE  51A5               	movf	(___fladd@b+3)& (0+255),w,b
 10971  012BE0  0B80               	andlw	128
 10972  012BE2  0100               	movlb	0	; () banked
 10973  012BE4  6FB2               	movwf	___fladd@signs& (0+255),b
 10974  012BE6  0100               	movlb	0	; () banked
 10975  012BE8  51A5               	movf	(___fladd@b+3)& (0+255),w,b
 10976  012BEA  25A5               	addwf	(___fladd@b+3)& (0+255),w,b
 10977  012BEC  0100               	movlb	0	; () banked
 10978  012BEE  6FB4               	movwf	___fladd@bexp& (0+255),b
 10979                           
 10980                           ; BSR set to: 0
 10981  012BF0  0100               	movlb	0	; () banked
 10982  012BF2  AFA4               	btfss	(___fladd@b+2)& (0+255),7,b
 10983  012BF4  D002               	goto	l7325
 10984                           
 10985                           ; BSR set to: 0
 10986  012BF6  0100               	movlb	0	; () banked
 10987  012BF8  81B4               	bsf	___fladd@bexp& (0+255),0,b
 10988  012BFA                     l7325:
 10989                           
 10990                           ; BSR set to: 0
 10991  012BFA  0100               	movlb	0	; () banked
 10992  012BFC  51B4               	movf	___fladd@bexp& (0+255),w,b
 10993  012BFE  0100               	movlb	0	; () banked
 10994  012C00  B4D8               	btfsc	status,2,c
 10995  012C02  D012               	goto	l7335
 10996                           
 10997                           ; BSR set to: 0
 10998  012C04  0100               	movlb	0	; () banked
 10999  012C06  29B4               	incf	___fladd@bexp& (0+255),w,b
 11000  012C08  A4D8               	btfss	status,2,c
 11001  012C0A  D009               	goto	l7331
 11002                           
 11003                           ; BSR set to: 0
 11004  012C0C  0E00               	movlw	0
 11005  012C0E  0100               	movlb	0	; () banked
 11006  012C10  6FA2               	movwf	___fladd@b& (0+255),b
 11007  012C12  0E00               	movlw	0
 11008  012C14  6FA3               	movwf	(___fladd@b+1)& (0+255),b
 11009  012C16  0E00               	movlw	0
 11010  012C18  6FA4               	movwf	(___fladd@b+2)& (0+255),b
 11011  012C1A  0E00               	movlw	0
 11012  012C1C  6FA5               	movwf	(___fladd@b+3)& (0+255),b
 11013  012C1E                     l7331:
 11014                           
 11015                           ; BSR set to: 0
 11016  012C1E  0100               	movlb	0	; () banked
 11017  012C20  8FA4               	bsf	(___fladd@b+2)& (0+255),7,b
 11018                           
 11019                           ; BSR set to: 0
 11020  012C22  0E00               	movlw	0
 11021  012C24  0100               	movlb	0	; () banked
 11022  012C26  D008               	goto	L9
 11023  012C28                     l7335:
 11024                           
 11025                           ; BSR set to: 0
 11026  012C28  0E00               	movlw	0
 11027  012C2A  0100               	movlb	0	; () banked
 11028  012C2C  6FA2               	movwf	___fladd@b& (0+255),b
 11029  012C2E  0E00               	movlw	0
 11030  012C30  6FA3               	movwf	(___fladd@b+1)& (0+255),b
 11031  012C32  0E00               	movlw	0
 11032  012C34  6FA4               	movwf	(___fladd@b+2)& (0+255),b
 11033  012C36  0E00               	movlw	0
 11034  012C38                     L9:
 11035  012C38  6FA5               	movwf	(___fladd@b+3)& (0+255),b
 11036                           
 11037                           ; BSR set to: 0
 11038                           
 11039                           ; BSR set to: 0
 11040  012C3A  0100               	movlb	0	; () banked
 11041  012C3C  51A9               	movf	(___fladd@a+3)& (0+255),w,b
 11042  012C3E  0B80               	andlw	128
 11043  012C40  0100               	movlb	0	; () banked
 11044  012C42  6FB3               	movwf	___fladd@aexp& (0+255),b
 11045                           
 11046                           ; BSR set to: 0
 11047  012C44  0100               	movlb	0	; () banked
 11048  012C46  51B2               	movf	___fladd@signs& (0+255),w,b
 11049  012C48  0100               	movlb	0	; () banked
 11050  012C4A  19B3               	xorwf	___fladd@aexp& (0+255),w,b
 11051  012C4C  B4D8               	btfsc	status,2,c
 11052  012C4E  D002               	goto	l7343
 11053                           
 11054                           ; BSR set to: 0
 11055  012C50  0100               	movlb	0	; () banked
 11056  012C52  8DB2               	bsf	___fladd@signs& (0+255),6,b
 11057  012C54                     l7343:
 11058                           
 11059                           ; BSR set to: 0
 11060  012C54  0100               	movlb	0	; () banked
 11061  012C56  51A9               	movf	(___fladd@a+3)& (0+255),w,b
 11062  012C58  25A9               	addwf	(___fladd@a+3)& (0+255),w,b
 11063  012C5A  0100               	movlb	0	; () banked
 11064  012C5C  6FB3               	movwf	___fladd@aexp& (0+255),b
 11065                           
 11066                           ; BSR set to: 0
 11067  012C5E  0100               	movlb	0	; () banked
 11068  012C60  AFA8               	btfss	(___fladd@a+2)& (0+255),7,b
 11069  012C62  D002               	goto	l7349
 11070                           
 11071                           ; BSR set to: 0
 11072  012C64  0100               	movlb	0	; () banked
 11073  012C66  81B3               	bsf	___fladd@aexp& (0+255),0,b
 11074  012C68                     l7349:
 11075                           
 11076                           ; BSR set to: 0
 11077  012C68  0100               	movlb	0	; () banked
 11078  012C6A  51B3               	movf	___fladd@aexp& (0+255),w,b
 11079  012C6C  0100               	movlb	0	; () banked
 11080  012C6E  B4D8               	btfsc	status,2,c
 11081  012C70  D012               	goto	l7359
 11082                           
 11083                           ; BSR set to: 0
 11084  012C72  0100               	movlb	0	; () banked
 11085  012C74  29B3               	incf	___fladd@aexp& (0+255),w,b
 11086  012C76  A4D8               	btfss	status,2,c
 11087  012C78  D009               	goto	l7355
 11088                           
 11089                           ; BSR set to: 0
 11090  012C7A  0E00               	movlw	0
 11091  012C7C  0100               	movlb	0	; () banked
 11092  012C7E  6FA6               	movwf	___fladd@a& (0+255),b
 11093  012C80  0E00               	movlw	0
 11094  012C82  6FA7               	movwf	(___fladd@a+1)& (0+255),b
 11095  012C84  0E00               	movlw	0
 11096  012C86  6FA8               	movwf	(___fladd@a+2)& (0+255),b
 11097  012C88  0E00               	movlw	0
 11098  012C8A  6FA9               	movwf	(___fladd@a+3)& (0+255),b
 11099  012C8C                     l7355:
 11100                           
 11101                           ; BSR set to: 0
 11102  012C8C  0100               	movlb	0	; () banked
 11103  012C8E  8FA8               	bsf	(___fladd@a+2)& (0+255),7,b
 11104                           
 11105                           ; BSR set to: 0
 11106  012C90  0E00               	movlw	0
 11107  012C92  0100               	movlb	0	; () banked
 11108  012C94  D008               	goto	L10
 11109  012C96                     l7359:
 11110                           
 11111                           ; BSR set to: 0
 11112  012C96  0E00               	movlw	0
 11113  012C98  0100               	movlb	0	; () banked
 11114  012C9A  6FA6               	movwf	___fladd@a& (0+255),b
 11115  012C9C  0E00               	movlw	0
 11116  012C9E  6FA7               	movwf	(___fladd@a+1)& (0+255),b
 11117  012CA0  0E00               	movlw	0
 11118  012CA2  6FA8               	movwf	(___fladd@a+2)& (0+255),b
 11119  012CA4  0E00               	movlw	0
 11120  012CA6                     L10:
 11121  012CA6  6FA9               	movwf	(___fladd@a+3)& (0+255),b
 11122                           
 11123                           ; BSR set to: 0
 11124                           
 11125                           ; BSR set to: 0
 11126  012CA8  0100               	movlb	0	; () banked
 11127  012CAA  51B4               	movf	___fladd@bexp& (0+255),w,b
 11128  012CAC  0100               	movlb	0	; () banked
 11129  012CAE  5DB3               	subwf	___fladd@aexp& (0+255),w,b
 11130  012CB0  B0D8               	btfsc	status,0,c
 11131  012CB2  D024               	goto	l7397
 11132                           
 11133                           ; BSR set to: 0
 11134  012CB4  0100               	movlb	0	; () banked
 11135  012CB6  ADB2               	btfss	___fladd@signs& (0+255),6,b
 11136  012CB8  D003               	goto	l7367
 11137                           
 11138                           ; BSR set to: 0
 11139  012CBA  0E80               	movlw	128
 11140  012CBC  0100               	movlb	0	; () banked
 11141  012CBE  1BB2               	xorwf	___fladd@signs& (0+255),f,b
 11142  012CC0                     l7367:
 11143                           
 11144                           ; BSR set to: 0
 11145  012CC0  C0B4  F0B5         	movff	___fladd@bexp,___fladd@grs
 11146                           
 11147                           ; BSR set to: 0
 11148  012CC4  C0B3  F0B4         	movff	___fladd@aexp,___fladd@bexp
 11149                           
 11150                           ; BSR set to: 0
 11151  012CC8  C0B5  F0B3         	movff	___fladd@grs,___fladd@aexp
 11152                           
 11153                           ; BSR set to: 0
 11154  012CCC  C0A2  F0B5         	movff	___fladd@b,___fladd@grs
 11155                           
 11156                           ; BSR set to: 0
 11157  012CD0  C0A6  F0A2         	movff	___fladd@a,___fladd@b
 11158                           
 11159                           ; BSR set to: 0
 11160  012CD4  C0B5  F0A6         	movff	___fladd@grs,___fladd@a
 11161                           
 11162                           ; BSR set to: 0
 11163  012CD8  C0A3  F0B5         	movff	___fladd@b+1,___fladd@grs
 11164                           
 11165                           ; BSR set to: 0
 11166  012CDC  C0A7  F0A3         	movff	___fladd@a+1,___fladd@b+1
 11167                           
 11168                           ; BSR set to: 0
 11169  012CE0  C0B5  F0A7         	movff	___fladd@grs,___fladd@a+1
 11170                           
 11171                           ; BSR set to: 0
 11172  012CE4  C0A4  F0B5         	movff	___fladd@b+2,___fladd@grs
 11173                           
 11174                           ; BSR set to: 0
 11175  012CE8  C0A8  F0A4         	movff	___fladd@a+2,___fladd@b+2
 11176                           
 11177                           ; BSR set to: 0
 11178  012CEC  C0B5  F0A8         	movff	___fladd@grs,___fladd@a+2
 11179                           
 11180                           ; BSR set to: 0
 11181  012CF0  C0A5  F0B5         	movff	___fladd@b+3,___fladd@grs
 11182                           
 11183                           ; BSR set to: 0
 11184  012CF4  C0A9  F0A5         	movff	___fladd@a+3,___fladd@b+3
 11185                           
 11186                           ; BSR set to: 0
 11187  012CF8  C0B5  F0A9         	movff	___fladd@grs,___fladd@a+3
 11188  012CFC                     l7397:
 11189                           
 11190                           ; BSR set to: 0
 11191  012CFC  0E00               	movlw	0
 11192  012CFE  0100               	movlb	0	; () banked
 11193  012D00  6FB5               	movwf	___fladd@grs& (0+255),b
 11194                           
 11195                           ; BSR set to: 0
 11196  012D02  0100               	movlb	0	; () banked
 11197  012D04  51B4               	movf	___fladd@bexp& (0+255),w,b
 11198  012D06  0100               	movlb	0	; () banked
 11199  012D08  6FAA               	movwf	??___fladd& (0+255),b
 11200  012D0A  6BAB               	clrf	(??___fladd+1)& (0+255),b
 11201  012D0C  0100               	movlb	0	; () banked
 11202  012D0E  1FAA               	comf	??___fladd& (0+255),f,b
 11203  012D10  1FAB               	comf	(??___fladd+1)& (0+255),f,b
 11204  012D12  4BAA               	infsnz	??___fladd& (0+255),f,b
 11205  012D14  2BAB               	incf	(??___fladd+1)& (0+255),f,b
 11206  012D16  0100               	movlb	0	; () banked
 11207  012D18  51B3               	movf	___fladd@aexp& (0+255),w,b
 11208  012D1A  0100               	movlb	0	; () banked
 11209  012D1C  6FAC               	movwf	(??___fladd+2)& (0+255),b
 11210  012D1E  6BAD               	clrf	(??___fladd+3)& (0+255),b
 11211  012D20  0100               	movlb	0	; () banked
 11212  012D22  51AA               	movf	??___fladd& (0+255),w,b
 11213  012D24  0100               	movlb	0	; () banked
 11214  012D26  27AC               	addwf	(??___fladd+2)& (0+255),f,b
 11215  012D28  0100               	movlb	0	; () banked
 11216  012D2A  51AB               	movf	(??___fladd+1)& (0+255),w,b
 11217  012D2C  0100               	movlb	0	; () banked
 11218  012D2E  23AD               	addwfc	(??___fladd+3)& (0+255),f,b
 11219  012D30  0100               	movlb	0	; () banked
 11220  012D32  BFAD               	btfsc	(??___fladd+3)& (0+255),7,b
 11221  012D34  D03D               	goto	l1406
 11222  012D36  0100               	movlb	0	; () banked
 11223  012D38  51AD               	movf	(??___fladd+3)& (0+255),w,b
 11224  012D3A  E105               	bnz	u9390
 11225  012D3C  0E1A               	movlw	26
 11226  012D3E  0100               	movlb	0	; () banked
 11227  012D40  5DAC               	subwf	(??___fladd+2)& (0+255),w,b
 11228  012D42  A0D8               	btfss	status,0,c
 11229  012D44  D035               	goto	l1406
 11230  012D46                     u9390:
 11231                           
 11232                           ; BSR set to: 0
 11233  012D46  0100               	movlb	0	; () banked
 11234  012D48  51A2               	movf	___fladd@b& (0+255),w,b
 11235  012D4A  0100               	movlb	0	; () banked
 11236  012D4C  11A3               	iorwf	(___fladd@b+1)& (0+255),w,b
 11237  012D4E  0100               	movlb	0	; () banked
 11238  012D50  11A4               	iorwf	(___fladd@b+2)& (0+255),w,b
 11239  012D52  0100               	movlb	0	; () banked
 11240  012D54  11A5               	iorwf	(___fladd@b+3)& (0+255),w,b
 11241  012D56  B4D8               	btfsc	status,2,c
 11242  012D58  D002               	goto	u9400
 11243  012D5A  0E01               	movlw	1
 11244  012D5C  D001               	goto	u9410
 11245  012D5E                     u9400:
 11246  012D5E  0E00               	movlw	0
 11247  012D60                     u9410:
 11248  012D60  0100               	movlb	0	; () banked
 11249  012D62  6FB5               	movwf	___fladd@grs& (0+255),b
 11250                           
 11251                           ; BSR set to: 0
 11252  012D64  0E00               	movlw	0
 11253  012D66  0100               	movlb	0	; () banked
 11254  012D68  6FA2               	movwf	___fladd@b& (0+255),b
 11255  012D6A  0E00               	movlw	0
 11256  012D6C  6FA3               	movwf	(___fladd@b+1)& (0+255),b
 11257  012D6E  0E00               	movlw	0
 11258  012D70  6FA4               	movwf	(___fladd@b+2)& (0+255),b
 11259  012D72  0E00               	movlw	0
 11260  012D74  6FA5               	movwf	(___fladd@b+3)& (0+255),b
 11261                           
 11262                           ; BSR set to: 0
 11263  012D76  C0B3  F0B4         	movff	___fladd@aexp,___fladd@bexp
 11264  012D7A  D020               	goto	l1405
 11265  012D7C                     l1407:
 11266                           
 11267                           ; BSR set to: 0
 11268  012D7C  0100               	movlb	0	; () banked
 11269  012D7E  A1B5               	btfss	___fladd@grs& (0+255),0,b
 11270  012D80  D007               	goto	l7409
 11271                           
 11272                           ; BSR set to: 0
 11273  012D82  0100               	movlb	0	; () banked
 11274  012D84  90D8               	bcf	status,0,c
 11275  012D86  31B5               	rrcf	___fladd@grs& (0+255),w,b
 11276  012D88  0901               	iorlw	1
 11277  012D8A  0100               	movlb	0	; () banked
 11278  012D8C  6FB5               	movwf	___fladd@grs& (0+255),b
 11279  012D8E  D003               	goto	l7411
 11280  012D90                     l7409:
 11281                           
 11282                           ; BSR set to: 0
 11283  012D90  0100               	movlb	0	; () banked
 11284  012D92  90D8               	bcf	status,0,c
 11285  012D94  33B5               	rrcf	___fladd@grs& (0+255),f,b
 11286  012D96                     l7411:
 11287                           
 11288                           ; BSR set to: 0
 11289  012D96  0100               	movlb	0	; () banked
 11290  012D98  A1A2               	btfss	___fladd@b& (0+255),0,b
 11291  012D9A  D002               	goto	l7415
 11292                           
 11293                           ; BSR set to: 0
 11294  012D9C  0100               	movlb	0	; () banked
 11295  012D9E  8FB5               	bsf	___fladd@grs& (0+255),7,b
 11296  012DA0                     l7415:
 11297                           
 11298                           ; BSR set to: 0
 11299  012DA0  0100               	movlb	0	; () banked
 11300  012DA2  35A5               	rlcf	(___fladd@b+3)& (0+255),w,b
 11301  012DA4  33A5               	rrcf	(___fladd@b+3)& (0+255),f,b
 11302  012DA6  33A4               	rrcf	(___fladd@b+2)& (0+255),f,b
 11303  012DA8  33A3               	rrcf	(___fladd@b+1)& (0+255),f,b
 11304  012DAA  33A2               	rrcf	___fladd@b& (0+255),f,b
 11305                           
 11306                           ; BSR set to: 0
 11307  012DAC  0100               	movlb	0	; () banked
 11308  012DAE  2BB4               	incf	___fladd@bexp& (0+255),f,b
 11309  012DB0                     l1406:
 11310                           
 11311                           ; BSR set to: 0
 11312  012DB0  0100               	movlb	0	; () banked
 11313  012DB2  51B3               	movf	___fladd@aexp& (0+255),w,b
 11314  012DB4  0100               	movlb	0	; () banked
 11315  012DB6  5DB4               	subwf	___fladd@bexp& (0+255),w,b
 11316  012DB8  A0D8               	btfss	status,0,c
 11317  012DBA  D7E0               	goto	l1407
 11318  012DBC                     l1405:
 11319                           
 11320                           ; BSR set to: 0
 11321  012DBC  0100               	movlb	0	; () banked
 11322  012DBE  BDB2               	btfsc	___fladd@signs& (0+255),6,b
 11323  012DC0  D03F               	goto	l7443
 11324                           
 11325                           ; BSR set to: 0
 11326  012DC2  0100               	movlb	0	; () banked
 11327  012DC4  51B4               	movf	___fladd@bexp& (0+255),w,b
 11328  012DC6  0100               	movlb	0	; () banked
 11329  012DC8  A4D8               	btfss	status,2,c
 11330  012DCA  D00A               	goto	l7425
 11331                           
 11332                           ; BSR set to: 0
 11333  012DCC  0E00               	movlw	0
 11334  012DCE  0100               	movlb	0	; () banked
 11335  012DD0  6FA2               	movwf	?___fladd& (0+255),b
 11336  012DD2  0E00               	movlw	0
 11337  012DD4  6FA3               	movwf	(?___fladd+1)& (0+255),b
 11338  012DD6  0E00               	movlw	0
 11339  012DD8  6FA4               	movwf	(?___fladd+2)& (0+255),b
 11340  012DDA  0E00               	movlw	0
 11341  012DDC  6FA5               	movwf	(?___fladd+3)& (0+255),b
 11342                           
 11343                           ; BSR set to: 0
 11344  012DDE  0012               	return	
 11345  012DE0                     l7425:
 11346                           
 11347                           ; BSR set to: 0
 11348  012DE0  0100               	movlb	0	; () banked
 11349  012DE2  51A6               	movf	___fladd@a& (0+255),w,b
 11350  012DE4  0100               	movlb	0	; () banked
 11351  012DE6  27A2               	addwf	___fladd@b& (0+255),f,b
 11352  012DE8  0100               	movlb	0	; () banked
 11353  012DEA  51A7               	movf	(___fladd@a+1)& (0+255),w,b
 11354  012DEC  0100               	movlb	0	; () banked
 11355  012DEE  23A3               	addwfc	(___fladd@b+1)& (0+255),f,b
 11356  012DF0  0100               	movlb	0	; () banked
 11357  012DF2  51A8               	movf	(___fladd@a+2)& (0+255),w,b
 11358  012DF4  0100               	movlb	0	; () banked
 11359  012DF6  23A4               	addwfc	(___fladd@b+2)& (0+255),f,b
 11360  012DF8  0100               	movlb	0	; () banked
 11361  012DFA  51A9               	movf	(___fladd@a+3)& (0+255),w,b
 11362  012DFC  0100               	movlb	0	; () banked
 11363  012DFE  23A5               	addwfc	(___fladd@b+3)& (0+255),f,b
 11364                           
 11365                           ; BSR set to: 0
 11366  012E00  0100               	movlb	0	; () banked
 11367  012E02  A1A5               	btfss	(___fladd@b+3)& (0+255),0,b
 11368  012E04  D0CC               	goto	l7479
 11369                           
 11370                           ; BSR set to: 0
 11371  012E06  0100               	movlb	0	; () banked
 11372  012E08  A1B5               	btfss	___fladd@grs& (0+255),0,b
 11373  012E0A  D009               	goto	l7433
 11374                           
 11375                           ; BSR set to: 0
 11376  012E0C  0100               	movlb	0	; () banked
 11377  012E0E  90D8               	bcf	status,0,c
 11378  012E10  33B5               	rrcf	___fladd@grs& (0+255),f,b
 11379  012E12  0100               	movlb	0	; () banked
 11380  012E14  51B5               	movf	___fladd@grs& (0+255),w,b
 11381  012E16  0901               	iorlw	1
 11382  012E18  0100               	movlb	0	; () banked
 11383  012E1A  6FB5               	movwf	___fladd@grs& (0+255),b
 11384  012E1C  D003               	goto	l7435
 11385  012E1E                     l7433:
 11386                           
 11387                           ; BSR set to: 0
 11388  012E1E  0100               	movlb	0	; () banked
 11389  012E20  90D8               	bcf	status,0,c
 11390  012E22  33B5               	rrcf	___fladd@grs& (0+255),f,b
 11391  012E24                     l7435:
 11392                           
 11393                           ; BSR set to: 0
 11394  012E24  0100               	movlb	0	; () banked
 11395  012E26  A1A2               	btfss	___fladd@b& (0+255),0,b
 11396  012E28  D002               	goto	l7439
 11397                           
 11398                           ; BSR set to: 0
 11399  012E2A  0100               	movlb	0	; () banked
 11400  012E2C  8FB5               	bsf	___fladd@grs& (0+255),7,b
 11401  012E2E                     l7439:
 11402                           
 11403                           ; BSR set to: 0
 11404  012E2E  0100               	movlb	0	; () banked
 11405  012E30  35A5               	rlcf	(___fladd@b+3)& (0+255),w,b
 11406  012E32  33A5               	rrcf	(___fladd@b+3)& (0+255),f,b
 11407  012E34  33A4               	rrcf	(___fladd@b+2)& (0+255),f,b
 11408  012E36  33A3               	rrcf	(___fladd@b+1)& (0+255),f,b
 11409  012E38  33A2               	rrcf	___fladd@b& (0+255),f,b
 11410                           
 11411                           ; BSR set to: 0
 11412  012E3A  0100               	movlb	0	; () banked
 11413  012E3C  2BB4               	incf	___fladd@bexp& (0+255),f,b
 11414                           
 11415                           ; BSR set to: 0
 11416  012E3E  D0AF               	goto	l7479
 11417  012E40                     l7443:
 11418                           
 11419                           ; BSR set to: 0
 11420  012E40  0100               	movlb	0	; () banked
 11421  012E42  51A6               	movf	___fladd@a& (0+255),w,b
 11422  012E44  0100               	movlb	0	; () banked
 11423  012E46  5DA2               	subwf	___fladd@b& (0+255),w,b
 11424  012E48  0100               	movlb	0	; () banked
 11425  012E4A  51A7               	movf	(___fladd@a+1)& (0+255),w,b
 11426  012E4C  0100               	movlb	0	; () banked
 11427  012E4E  59A3               	subwfb	(___fladd@b+1)& (0+255),w,b
 11428  012E50  0100               	movlb	0	; () banked
 11429  012E52  51A8               	movf	(___fladd@a+2)& (0+255),w,b
 11430  012E54  0100               	movlb	0	; () banked
 11431  012E56  59A4               	subwfb	(___fladd@b+2)& (0+255),w,b
 11432  012E58  0100               	movlb	0	; () banked
 11433  012E5A  51A5               	movf	(___fladd@b+3)& (0+255),w,b
 11434  012E5C  0A80               	xorlw	128
 11435  012E5E  0100               	movlb	0	; () banked
 11436  012E60  6FAA               	movwf	??___fladd& (0+255),b
 11437  012E62  0100               	movlb	0	; () banked
 11438  012E64  51A9               	movf	(___fladd@a+3)& (0+255),w,b
 11439  012E66  0A80               	xorlw	128
 11440  012E68  0100               	movlb	0	; () banked
 11441  012E6A  59AA               	subwfb	??___fladd& (0+255),w,b
 11442  012E6C  B0D8               	btfsc	status,0,c
 11443  012E6E  D050               	goto	l7453
 11444                           
 11445                           ; BSR set to: 0
 11446  012E70  C0A2  F0AA         	movff	___fladd@b,??___fladd
 11447  012E74  C0A3  F0AB         	movff	___fladd@b+1,??___fladd+1
 11448  012E78  C0A4  F0AC         	movff	___fladd@b+2,??___fladd+2
 11449  012E7C  C0A5  F0AD         	movff	___fladd@b+3,??___fladd+3
 11450  012E80  0100               	movlb	0	; () banked
 11451  012E82  1FAA               	comf	??___fladd& (0+255),f,b
 11452  012E84  1FAB               	comf	(??___fladd+1)& (0+255),f,b
 11453  012E86  1FAC               	comf	(??___fladd+2)& (0+255),f,b
 11454  012E88  1FAD               	comf	(??___fladd+3)& (0+255),f,b
 11455  012E8A  2BAA               	incf	??___fladd& (0+255),f,b
 11456  012E8C  0E00               	movlw	0
 11457  012E8E  23AB               	addwfc	(??___fladd+1)& (0+255),f,b
 11458  012E90  23AC               	addwfc	(??___fladd+2)& (0+255),f,b
 11459  012E92  23AD               	addwfc	(??___fladd+3)& (0+255),f,b
 11460  012E94  0100               	movlb	0	; () banked
 11461  012E96  51A6               	movf	___fladd@a& (0+255),w,b
 11462  012E98  0100               	movlb	0	; () banked
 11463  012E9A  25AA               	addwf	??___fladd& (0+255),w,b
 11464  012E9C  0100               	movlb	0	; () banked
 11465  012E9E  6FAE               	movwf	(??___fladd+4)& (0+255),b
 11466  012EA0  0100               	movlb	0	; () banked
 11467  012EA2  51A7               	movf	(___fladd@a+1)& (0+255),w,b
 11468  012EA4  0100               	movlb	0	; () banked
 11469  012EA6  21AB               	addwfc	(??___fladd+1)& (0+255),w,b
 11470  012EA8  0100               	movlb	0	; () banked
 11471  012EAA  6FAF               	movwf	(??___fladd+5)& (0+255),b
 11472  012EAC  0100               	movlb	0	; () banked
 11473  012EAE  51A8               	movf	(___fladd@a+2)& (0+255),w,b
 11474  012EB0  0100               	movlb	0	; () banked
 11475  012EB2  21AC               	addwfc	(??___fladd+2)& (0+255),w,b
 11476  012EB4  0100               	movlb	0	; () banked
 11477  012EB6  6FB0               	movwf	(??___fladd+6)& (0+255),b
 11478  012EB8  0100               	movlb	0	; () banked
 11479  012EBA  51A9               	movf	(___fladd@a+3)& (0+255),w,b
 11480  012EBC  0100               	movlb	0	; () banked
 11481  012EBE  21AD               	addwfc	(??___fladd+3)& (0+255),w,b
 11482  012EC0  0100               	movlb	0	; () banked
 11483  012EC2  6FB1               	movwf	(??___fladd+7)& (0+255),b
 11484  012EC4  0EFF               	movlw	255
 11485  012EC6  0100               	movlb	0	; () banked
 11486  012EC8  25AE               	addwf	(??___fladd+4)& (0+255),w,b
 11487  012ECA  0100               	movlb	0	; () banked
 11488  012ECC  6FA2               	movwf	___fladd@b& (0+255),b
 11489  012ECE  0EFF               	movlw	255
 11490  012ED0  0100               	movlb	0	; () banked
 11491  012ED2  21AF               	addwfc	(??___fladd+5)& (0+255),w,b
 11492  012ED4  0100               	movlb	0	; () banked
 11493  012ED6  6FA3               	movwf	(___fladd@b+1)& (0+255),b
 11494  012ED8  0EFF               	movlw	255
 11495  012EDA  0100               	movlb	0	; () banked
 11496  012EDC  21B0               	addwfc	(??___fladd+6)& (0+255),w,b
 11497  012EDE  0100               	movlb	0	; () banked
 11498  012EE0  6FA4               	movwf	(___fladd@b+2)& (0+255),b
 11499  012EE2  0EFF               	movlw	255
 11500  012EE4  0100               	movlb	0	; () banked
 11501  012EE6  21B1               	addwfc	(??___fladd+7)& (0+255),w,b
 11502  012EE8  0100               	movlb	0	; () banked
 11503  012EEA  6FA5               	movwf	(___fladd@b+3)& (0+255),b
 11504  012EEC  0E80               	movlw	128
 11505  012EEE  0100               	movlb	0	; () banked
 11506  012EF0  1BB2               	xorwf	___fladd@signs& (0+255),f,b
 11507                           
 11508                           ; BSR set to: 0
 11509  012EF2  0100               	movlb	0	; () banked
 11510  012EF4  6DB5               	negf	___fladd@grs& (0+255),b
 11511                           
 11512                           ; BSR set to: 0
 11513  012EF6  0100               	movlb	0	; () banked
 11514  012EF8  51B5               	movf	___fladd@grs& (0+255),w,b
 11515  012EFA  0100               	movlb	0	; () banked
 11516  012EFC  A4D8               	btfss	status,2,c
 11517  012EFE  D018               	goto	l1422
 11518                           
 11519                           ; BSR set to: 0
 11520  012F00  0E01               	movlw	1
 11521  012F02  0100               	movlb	0	; () banked
 11522  012F04  27A2               	addwf	___fladd@b& (0+255),f,b
 11523  012F06  0E00               	movlw	0
 11524  012F08  23A3               	addwfc	(___fladd@b+1)& (0+255),f,b
 11525  012F0A  23A4               	addwfc	(___fladd@b+2)& (0+255),f,b
 11526  012F0C  23A5               	addwfc	(___fladd@b+3)& (0+255),f,b
 11527                           
 11528                           ; BSR set to: 0
 11529  012F0E  D010               	goto	l1422
 11530  012F10                     l7453:
 11531                           
 11532                           ; BSR set to: 0
 11533  012F10  0100               	movlb	0	; () banked
 11534  012F12  51A6               	movf	___fladd@a& (0+255),w,b
 11535  012F14  0100               	movlb	0	; () banked
 11536  012F16  5FA2               	subwf	___fladd@b& (0+255),f,b
 11537  012F18  0100               	movlb	0	; () banked
 11538  012F1A  51A7               	movf	(___fladd@a+1)& (0+255),w,b
 11539  012F1C  0100               	movlb	0	; () banked
 11540  012F1E  5BA3               	subwfb	(___fladd@b+1)& (0+255),f,b
 11541  012F20  0100               	movlb	0	; () banked
 11542  012F22  51A8               	movf	(___fladd@a+2)& (0+255),w,b
 11543  012F24  0100               	movlb	0	; () banked
 11544  012F26  5BA4               	subwfb	(___fladd@b+2)& (0+255),f,b
 11545  012F28  0100               	movlb	0	; () banked
 11546  012F2A  51A9               	movf	(___fladd@a+3)& (0+255),w,b
 11547  012F2C  0100               	movlb	0	; () banked
 11548  012F2E  5BA5               	subwfb	(___fladd@b+3)& (0+255),f,b
 11549  012F30                     l1422:
 11550                           
 11551                           ; BSR set to: 0
 11552  012F30  0100               	movlb	0	; () banked
 11553  012F32  51A2               	movf	___fladd@b& (0+255),w,b
 11554  012F34  0100               	movlb	0	; () banked
 11555  012F36  11A3               	iorwf	(___fladd@b+1)& (0+255),w,b
 11556  012F38  0100               	movlb	0	; () banked
 11557  012F3A  11A4               	iorwf	(___fladd@b+2)& (0+255),w,b
 11558  012F3C  0100               	movlb	0	; () banked
 11559  012F3E  11A5               	iorwf	(___fladd@b+3)& (0+255),w,b
 11560  012F40  A4D8               	btfss	status,2,c
 11561  012F42  D02A               	goto	l7477
 11562                           
 11563                           ; BSR set to: 0
 11564  012F44  0100               	movlb	0	; () banked
 11565  012F46  51B5               	movf	___fladd@grs& (0+255),w,b
 11566  012F48  0100               	movlb	0	; () banked
 11567  012F4A  A4D8               	btfss	status,2,c
 11568  012F4C  D025               	goto	l7477
 11569                           
 11570                           ; BSR set to: 0
 11571  012F4E  0E00               	movlw	0
 11572  012F50  0100               	movlb	0	; () banked
 11573  012F52  6FA2               	movwf	?___fladd& (0+255),b
 11574  012F54  0E00               	movlw	0
 11575  012F56  6FA3               	movwf	(?___fladd+1)& (0+255),b
 11576  012F58  0E00               	movlw	0
 11577  012F5A  6FA4               	movwf	(?___fladd+2)& (0+255),b
 11578  012F5C  0E00               	movlw	0
 11579  012F5E  6FA5               	movwf	(?___fladd+3)& (0+255),b
 11580                           
 11581                           ; BSR set to: 0
 11582  012F60  0012               	return	
 11583  012F62                     l7461:
 11584                           
 11585                           ; BSR set to: 0
 11586  012F62  0100               	movlb	0	; () banked
 11587  012F64  90D8               	bcf	status,0,c
 11588  012F66  37A2               	rlcf	___fladd@b& (0+255),f,b
 11589  012F68  37A3               	rlcf	(___fladd@b+1)& (0+255),f,b
 11590  012F6A  37A4               	rlcf	(___fladd@b+2)& (0+255),f,b
 11591  012F6C  37A5               	rlcf	(___fladd@b+3)& (0+255),f,b
 11592                           
 11593                           ; BSR set to: 0
 11594  012F6E  0100               	movlb	0	; () banked
 11595  012F70  AFB5               	btfss	___fladd@grs& (0+255),7,b
 11596  012F72  D002               	goto	l7467
 11597                           
 11598                           ; BSR set to: 0
 11599  012F74  0100               	movlb	0	; () banked
 11600  012F76  81A2               	bsf	___fladd@b& (0+255),0,b
 11601  012F78                     l7467:
 11602                           
 11603                           ; BSR set to: 0
 11604  012F78  0100               	movlb	0	; () banked
 11605  012F7A  A1B5               	btfss	___fladd@grs& (0+255),0,b
 11606  012F7C  D003               	goto	l7471
 11607                           
 11608                           ; BSR set to: 0
 11609  012F7E  80D8               	bsf	status,0,c
 11610  012F80  0100               	movlb	0	; () banked
 11611  012F82  D002               	goto	L11
 11612  012F84                     l7471:
 11613                           
 11614                           ; BSR set to: 0
 11615  012F84  0100               	movlb	0	; () banked
 11616  012F86  90D8               	bcf	status,0,c
 11617  012F88                     L11:
 11618  012F88  37B5               	rlcf	___fladd@grs& (0+255),f,b
 11619                           
 11620                           ; BSR set to: 0
 11621                           
 11622                           ; BSR set to: 0
 11623  012F8A  0100               	movlb	0	; () banked
 11624  012F8C  51B4               	movf	___fladd@bexp& (0+255),w,b
 11625  012F8E  0100               	movlb	0	; () banked
 11626  012F90  B4D8               	btfsc	status,2,c
 11627  012F92  D002               	goto	l7477
 11628                           
 11629                           ; BSR set to: 0
 11630  012F94  0100               	movlb	0	; () banked
 11631  012F96  07B4               	decf	___fladd@bexp& (0+255),f,b
 11632  012F98                     l7477:
 11633                           
 11634                           ; BSR set to: 0
 11635  012F98  0100               	movlb	0	; () banked
 11636  012F9A  AFA4               	btfss	(___fladd@b+2)& (0+255),7,b
 11637  012F9C  D7E2               	goto	l7461
 11638  012F9E                     l7479:
 11639                           
 11640                           ; BSR set to: 0
 11641  012F9E  0E00               	movlw	0
 11642  012FA0  0100               	movlb	0	; () banked
 11643  012FA2  6FB3               	movwf	___fladd@aexp& (0+255),b
 11644                           
 11645                           ; BSR set to: 0
 11646  012FA4  0100               	movlb	0	; () banked
 11647  012FA6  AFB5               	btfss	___fladd@grs& (0+255),7,b
 11648  012FA8  D00D               	goto	l1431
 11649                           
 11650                           ; BSR set to: 0
 11651  012FAA  C0B5  F0AA         	movff	___fladd@grs,??___fladd
 11652  012FAE  0E7F               	movlw	127
 11653  012FB0  0100               	movlb	0	; () banked
 11654  012FB2  17AA               	andwf	??___fladd& (0+255),f,b
 11655  012FB4  A4D8               	btfss	status,2,c
 11656  012FB6  D003               	goto	l7487
 11657                           
 11658                           ; BSR set to: 0
 11659                           
 11660                           ; BSR set to: 0
 11661  012FB8  0100               	movlb	0	; () banked
 11662  012FBA  A1A2               	btfss	___fladd@b& (0+255),0,b
 11663  012FBC  D003               	goto	l1431
 11664  012FBE                     l7487:
 11665                           
 11666                           ; BSR set to: 0
 11667  012FBE  0E01               	movlw	1
 11668  012FC0  0100               	movlb	0	; () banked
 11669  012FC2  6FB3               	movwf	___fladd@aexp& (0+255),b
 11670  012FC4                     l1431:
 11671                           
 11672                           ; BSR set to: 0
 11673  012FC4  0100               	movlb	0	; () banked
 11674  012FC6  51B3               	movf	___fladd@aexp& (0+255),w,b
 11675  012FC8  0100               	movlb	0	; () banked
 11676  012FCA  B4D8               	btfsc	status,2,c
 11677  012FCC  D026               	goto	l7497
 11678                           
 11679                           ; BSR set to: 0
 11680  012FCE  0E01               	movlw	1
 11681  012FD0  0100               	movlb	0	; () banked
 11682  012FD2  27A2               	addwf	___fladd@b& (0+255),f,b
 11683  012FD4  0E00               	movlw	0
 11684  012FD6  23A3               	addwfc	(___fladd@b+1)& (0+255),f,b
 11685  012FD8  23A4               	addwfc	(___fladd@b+2)& (0+255),f,b
 11686  012FDA  23A5               	addwfc	(___fladd@b+3)& (0+255),f,b
 11687                           
 11688                           ; BSR set to: 0
 11689  012FDC  0100               	movlb	0	; () banked
 11690  012FDE  A1A5               	btfss	(___fladd@b+3)& (0+255),0,b
 11691  012FE0  D01C               	goto	l7497
 11692                           
 11693                           ; BSR set to: 0
 11694  012FE2  C0A2  F0AA         	movff	___fladd@b,??___fladd
 11695  012FE6  C0A3  F0AB         	movff	___fladd@b+1,??___fladd+1
 11696  012FEA  C0A4  F0AC         	movff	___fladd@b+2,??___fladd+2
 11697  012FEE  C0A5  F0AD         	movff	___fladd@b+3,??___fladd+3
 11698  012FF2  0100               	movlb	0	; () banked
 11699  012FF4  35AD               	rlcf	(??___fladd+3)& (0+255),w,b
 11700  012FF6  33AD               	rrcf	(??___fladd+3)& (0+255),f,b
 11701  012FF8  33AC               	rrcf	(??___fladd+2)& (0+255),f,b
 11702  012FFA  33AB               	rrcf	(??___fladd+1)& (0+255),f,b
 11703  012FFC  33AA               	rrcf	??___fladd& (0+255),f,b
 11704  012FFE  C0AA  F0A2         	movff	??___fladd,___fladd@b
 11705  013002  C0AB  F0A3         	movff	??___fladd+1,___fladd@b+1
 11706  013006  C0AC  F0A4         	movff	??___fladd+2,___fladd@b+2
 11707  01300A  C0AD  F0A5         	movff	??___fladd+3,___fladd@b+3
 11708  01300E  0100               	movlb	0	; () banked
 11709  013010  29B4               	incf	___fladd@bexp& (0+255),w,b
 11710  013012  B4D8               	btfsc	status,2,c
 11711  013014  D002               	goto	l7497
 11712                           
 11713                           ; BSR set to: 0
 11714  013016  0100               	movlb	0	; () banked
 11715  013018  2BB4               	incf	___fladd@bexp& (0+255),f,b
 11716  01301A                     l7497:
 11717                           
 11718                           ; BSR set to: 0
 11719  01301A  0100               	movlb	0	; () banked
 11720  01301C  29B4               	incf	___fladd@bexp& (0+255),w,b
 11721  01301E  B4D8               	btfsc	status,2,c
 11722  013020  D005               	goto	l7501
 11723                           
 11724                           ; BSR set to: 0
 11725  013022  0100               	movlb	0	; () banked
 11726  013024  51B4               	movf	___fladd@bexp& (0+255),w,b
 11727  013026  0100               	movlb	0	; () banked
 11728  013028  A4D8               	btfss	status,2,c
 11729  01302A  D011               	goto	l7505
 11730  01302C                     l7501:
 11731                           
 11732                           ; BSR set to: 0
 11733  01302C  0E00               	movlw	0
 11734  01302E  0100               	movlb	0	; () banked
 11735  013030  6FA2               	movwf	___fladd@b& (0+255),b
 11736  013032  0E00               	movlw	0
 11737  013034  6FA3               	movwf	(___fladd@b+1)& (0+255),b
 11738  013036  0E00               	movlw	0
 11739  013038  6FA4               	movwf	(___fladd@b+2)& (0+255),b
 11740  01303A  0E00               	movlw	0
 11741  01303C  6FA5               	movwf	(___fladd@b+3)& (0+255),b
 11742  01303E  0100               	movlb	0	; () banked
 11743  013040  51B4               	movf	___fladd@bexp& (0+255),w,b
 11744  013042  0100               	movlb	0	; () banked
 11745  013044  A4D8               	btfss	status,2,c
 11746  013046  D003               	goto	l7505
 11747                           
 11748                           ; BSR set to: 0
 11749  013048  0E00               	movlw	0
 11750  01304A  0100               	movlb	0	; () banked
 11751  01304C  6FB2               	movwf	___fladd@signs& (0+255),b
 11752  01304E                     l7505:
 11753                           
 11754                           ; BSR set to: 0
 11755  01304E  0100               	movlb	0	; () banked
 11756  013050  A1B4               	btfss	___fladd@bexp& (0+255),0,b
 11757  013052  D003               	goto	l7509
 11758                           
 11759                           ; BSR set to: 0
 11760  013054  0100               	movlb	0	; () banked
 11761  013056  8FA4               	bsf	(___fladd@b+2)& (0+255),7,b
 11762  013058  D002               	goto	l7511
 11763  01305A                     l7509:
 11764                           
 11765                           ; BSR set to: 0
 11766  01305A  0100               	movlb	0	; () banked
 11767  01305C  9FA4               	bcf	(___fladd@b+2)& (0+255),7,b
 11768  01305E                     l7511:
 11769                           
 11770                           ; BSR set to: 0
 11771  01305E  0100               	movlb	0	; () banked
 11772  013060  90D8               	bcf	status,0,c
 11773  013062  31B4               	rrcf	___fladd@bexp& (0+255),w,b
 11774  013064  0100               	movlb	0	; () banked
 11775  013066  6FA5               	movwf	(___fladd@b+3)& (0+255),b
 11776                           
 11777                           ; BSR set to: 0
 11778  013068  0100               	movlb	0	; () banked
 11779  01306A  AFB2               	btfss	___fladd@signs& (0+255),7,b
 11780  01306C  D002               	goto	l7517
 11781                           
 11782                           ; BSR set to: 0
 11783  01306E  0100               	movlb	0	; () banked
 11784  013070  8FA5               	bsf	(___fladd@b+3)& (0+255),7,b
 11785  013072                     l7517:
 11786                           
 11787                           ; BSR set to: 0
 11788  013072  C0A2  F0A2         	movff	___fladd@b,?___fladd
 11789  013076  C0A3  F0A3         	movff	___fladd@b+1,?___fladd+1
 11790  01307A  C0A4  F0A4         	movff	___fladd@b+2,?___fladd+2
 11791  01307E  C0A5  F0A5         	movff	___fladd@b+3,?___fladd+3
 11792  013082  0012               	return	
 11793  013084                     __end_of___fladd:
 11794                           	opt stack 0
 11795                           tblptru	equ	0xFF8
 11796                           tblptrh	equ	0xFF7
 11797                           tblptrl	equ	0xFF6
 11798                           tablat	equ	0xFF5
 11799                           prodh	equ	0xFF4
 11800                           prodl	equ	0xFF3
 11801                           intcon	equ	0xFF2
 11802                           postinc0	equ	0xFEE
 11803                           wreg	equ	0xFE8
 11804                           indf2	equ	0xFDF
 11805                           postinc2	equ	0xFDE
 11806                           fsr2h	equ	0xFDA
 11807                           fsr2l	equ	0xFD9
 11808                           status	equ	0xFD8
 11809                           
 11810 ;; *************** function ___flneg *****************
 11811 ;; Defined at:
 11812 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
 11813 ;; Parameters:    Size  Location     Type
 11814 ;;  f1              4   53[BANK0 ] unsigned char 
 11815 ;; Auto vars:     Size  Location     Type
 11816 ;;		None
 11817 ;; Return value:  Size  Location     Type
 11818 ;;                  4   53[BANK0 ] unsigned char 
 11819 ;; Registers used:
 11820 ;;		wreg, status,2, status,0
 11821 ;; Tracked objects:
 11822 ;;		On entry : 0/0
 11823 ;;		On exit  : 0/0
 11824 ;;		Unchanged: 0/0
 11825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11826 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11829 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11830 ;;Total ram usage:        4 bytes
 11831 ;; Hardware stack levels used:    1
 11832 ;; Hardware stack levels required when called:    3
 11833 ;; This function calls:
 11834 ;;		Nothing
 11835 ;; This function is called by:
 11836 ;;		_main
 11837 ;;		_sprintf
 11838 ;; This function uses a non-reentrant model
 11839 ;;
 11840                           
 11841                           	psect	text23
 11842  015CAC                     __ptext23:
 11843                           	opt stack 0
 11844  015CAC                     ___flneg:
 11845                           	opt stack 27
 11846                           
 11847                           ; BSR set to: 0
 11848                           ;incstack = 0
 11849  015CAC  0100               	movlb	0	; () banked
 11850  015CAE  5195               	movf	___flneg@f1& (0+255),w,b
 11851  015CB0  0100               	movlb	0	; () banked
 11852  015CB2  1196               	iorwf	(___flneg@f1+1)& (0+255),w,b
 11853  015CB4  0100               	movlb	0	; () banked
 11854  015CB6  1197               	iorwf	(___flneg@f1+2)& (0+255),w,b
 11855  015CB8  0100               	movlb	0	; () banked
 11856  015CBA  1198               	iorwf	(___flneg@f1+3)& (0+255),w,b
 11857  015CBC  B4D8               	btfsc	status,2,c
 11858  015CBE  D009               	goto	l7963
 11859                           
 11860                           ; BSR set to: 0
 11861  015CC0  0E00               	movlw	0
 11862  015CC2  0100               	movlb	0	; () banked
 11863  015CC4  1B95               	xorwf	___flneg@f1& (0+255),f,b
 11864  015CC6  0E00               	movlw	0
 11865  015CC8  1B96               	xorwf	(___flneg@f1+1)& (0+255),f,b
 11866  015CCA  0E00               	movlw	0
 11867  015CCC  1B97               	xorwf	(___flneg@f1+2)& (0+255),f,b
 11868  015CCE  0E80               	movlw	128
 11869  015CD0  1B98               	xorwf	(___flneg@f1+3)& (0+255),f,b
 11870  015CD2                     l7963:
 11871                           
 11872                           ; BSR set to: 0
 11873  015CD2  C095  F095         	movff	___flneg@f1,?___flneg
 11874  015CD6  C096  F096         	movff	___flneg@f1+1,?___flneg+1
 11875  015CDA  C097  F097         	movff	___flneg@f1+2,?___flneg+2
 11876  015CDE  C098  F098         	movff	___flneg@f1+3,?___flneg+3
 11877  015CE2  0012               	return	
 11878  015CE4                     __end_of___flneg:
 11879                           	opt stack 0
 11880                           tblptru	equ	0xFF8
 11881                           tblptrh	equ	0xFF7
 11882                           tblptrl	equ	0xFF6
 11883                           tablat	equ	0xFF5
 11884                           prodh	equ	0xFF4
 11885                           prodl	equ	0xFF3
 11886                           intcon	equ	0xFF2
 11887                           postinc0	equ	0xFEE
 11888                           wreg	equ	0xFE8
 11889                           indf2	equ	0xFDF
 11890                           postinc2	equ	0xFDE
 11891                           fsr2h	equ	0xFDA
 11892                           fsr2l	equ	0xFD9
 11893                           status	equ	0xFD8
 11894                           
 11895 ;; *************** function ___flge *****************
 11896 ;; Defined at:
 11897 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
 11898 ;; Parameters:    Size  Location     Type
 11899 ;;  ff1             4   14[BANK0 ] unsigned char 
 11900 ;;  ff2             4   18[BANK0 ] unsigned char 
 11901 ;; Auto vars:     Size  Location     Type
 11902 ;;		None
 11903 ;; Return value:  Size  Location     Type
 11904 ;;		None               void
 11905 ;; Registers used:
 11906 ;;		wreg, status,2, status,0
 11907 ;; Tracked objects:
 11908 ;;		On entry : 0/0
 11909 ;;		On exit  : 0/0
 11910 ;;		Unchanged: 0/0
 11911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11912 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11914 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11915 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11916 ;;Total ram usage:       12 bytes
 11917 ;; Hardware stack levels used:    1
 11918 ;; Hardware stack levels required when called:    3
 11919 ;; This function calls:
 11920 ;;		Nothing
 11921 ;; This function is called by:
 11922 ;;		_sprintf
 11923 ;; This function uses a non-reentrant model
 11924 ;;
 11925                           
 11926                           	psect	text24
 11927  014AB6                     __ptext24:
 11928                           	opt stack 0
 11929  014AB6                     ___flge:
 11930                           	opt stack 25
 11931                           
 11932                           ; BSR set to: 0
 11933                           ;incstack = 0
 11934  014AB6  0E00               	movlw	0
 11935  014AB8  0100               	movlb	0	; () banked
 11936  014ABA  156E               	andwf	___flge@ff1& (0+255),w,b
 11937  014ABC  0100               	movlb	0	; () banked
 11938  014ABE  6F76               	movwf	??___flge& (0+255),b
 11939  014AC0  0E00               	movlw	0
 11940  014AC2  0100               	movlb	0	; () banked
 11941  014AC4  156F               	andwf	(___flge@ff1+1)& (0+255),w,b
 11942  014AC6  0100               	movlb	0	; () banked
 11943  014AC8  6F77               	movwf	(??___flge+1)& (0+255),b
 11944  014ACA  0E80               	movlw	128
 11945  014ACC  0100               	movlb	0	; () banked
 11946  014ACE  1570               	andwf	(___flge@ff1+2)& (0+255),w,b
 11947  014AD0  0100               	movlb	0	; () banked
 11948  014AD2  6F78               	movwf	(??___flge+2)& (0+255),b
 11949  014AD4  0E7F               	movlw	127
 11950  014AD6  0100               	movlb	0	; () banked
 11951  014AD8  1571               	andwf	(___flge@ff1+3)& (0+255),w,b
 11952  014ADA  0100               	movlb	0	; () banked
 11953  014ADC  6F79               	movwf	(??___flge+3)& (0+255),b
 11954  014ADE  0100               	movlb	0	; () banked
 11955  014AE0  5176               	movf	??___flge& (0+255),w,b
 11956  014AE2  0100               	movlb	0	; () banked
 11957  014AE4  1177               	iorwf	(??___flge+1)& (0+255),w,b
 11958  014AE6  0100               	movlb	0	; () banked
 11959  014AE8  1178               	iorwf	(??___flge+2)& (0+255),w,b
 11960  014AEA  0100               	movlb	0	; () banked
 11961  014AEC  1179               	iorwf	(??___flge+3)& (0+255),w,b
 11962  014AEE  A4D8               	btfss	status,2,c
 11963  014AF0  D009               	goto	l7941
 11964                           
 11965                           ; BSR set to: 0
 11966  014AF2  0E00               	movlw	0
 11967  014AF4  0100               	movlb	0	; () banked
 11968  014AF6  6F6E               	movwf	___flge@ff1& (0+255),b
 11969  014AF8  0E00               	movlw	0
 11970  014AFA  6F6F               	movwf	(___flge@ff1+1)& (0+255),b
 11971  014AFC  0E00               	movlw	0
 11972  014AFE  6F70               	movwf	(___flge@ff1+2)& (0+255),b
 11973  014B00  0E00               	movlw	0
 11974  014B02  6F71               	movwf	(___flge@ff1+3)& (0+255),b
 11975  014B04                     l7941:
 11976                           
 11977                           ; BSR set to: 0
 11978  014B04  0E00               	movlw	0
 11979  014B06  0100               	movlb	0	; () banked
 11980  014B08  1572               	andwf	___flge@ff2& (0+255),w,b
 11981  014B0A  0100               	movlb	0	; () banked
 11982  014B0C  6F76               	movwf	??___flge& (0+255),b
 11983  014B0E  0E00               	movlw	0
 11984  014B10  0100               	movlb	0	; () banked
 11985  014B12  1573               	andwf	(___flge@ff2+1)& (0+255),w,b
 11986  014B14  0100               	movlb	0	; () banked
 11987  014B16  6F77               	movwf	(??___flge+1)& (0+255),b
 11988  014B18  0E80               	movlw	128
 11989  014B1A  0100               	movlb	0	; () banked
 11990  014B1C  1574               	andwf	(___flge@ff2+2)& (0+255),w,b
 11991  014B1E  0100               	movlb	0	; () banked
 11992  014B20  6F78               	movwf	(??___flge+2)& (0+255),b
 11993  014B22  0E7F               	movlw	127
 11994  014B24  0100               	movlb	0	; () banked
 11995  014B26  1575               	andwf	(___flge@ff2+3)& (0+255),w,b
 11996  014B28  0100               	movlb	0	; () banked
 11997  014B2A  6F79               	movwf	(??___flge+3)& (0+255),b
 11998  014B2C  0100               	movlb	0	; () banked
 11999  014B2E  5176               	movf	??___flge& (0+255),w,b
 12000  014B30  0100               	movlb	0	; () banked
 12001  014B32  1177               	iorwf	(??___flge+1)& (0+255),w,b
 12002  014B34  0100               	movlb	0	; () banked
 12003  014B36  1178               	iorwf	(??___flge+2)& (0+255),w,b
 12004  014B38  0100               	movlb	0	; () banked
 12005  014B3A  1179               	iorwf	(??___flge+3)& (0+255),w,b
 12006  014B3C  A4D8               	btfss	status,2,c
 12007  014B3E  D009               	goto	l7945
 12008                           
 12009                           ; BSR set to: 0
 12010  014B40  0E00               	movlw	0
 12011  014B42  0100               	movlb	0	; () banked
 12012  014B44  6F72               	movwf	___flge@ff2& (0+255),b
 12013  014B46  0E00               	movlw	0
 12014  014B48  6F73               	movwf	(___flge@ff2+1)& (0+255),b
 12015  014B4A  0E00               	movlw	0
 12016  014B4C  6F74               	movwf	(___flge@ff2+2)& (0+255),b
 12017  014B4E  0E00               	movlw	0
 12018  014B50  6F75               	movwf	(___flge@ff2+3)& (0+255),b
 12019  014B52                     l7945:
 12020                           
 12021                           ; BSR set to: 0
 12022  014B52  0100               	movlb	0	; () banked
 12023  014B54  AF71               	btfss	(___flge@ff1+3)& (0+255),7,b
 12024  014B56  D026               	goto	l7949
 12025                           
 12026                           ; BSR set to: 0
 12027  014B58  C06E  F076         	movff	___flge@ff1,??___flge
 12028  014B5C  C06F  F077         	movff	___flge@ff1+1,??___flge+1
 12029  014B60  C070  F078         	movff	___flge@ff1+2,??___flge+2
 12030  014B64  C071  F079         	movff	___flge@ff1+3,??___flge+3
 12031  014B68  0100               	movlb	0	; () banked
 12032  014B6A  1F76               	comf	??___flge& (0+255),f,b
 12033  014B6C  1F77               	comf	(??___flge+1)& (0+255),f,b
 12034  014B6E  1F78               	comf	(??___flge+2)& (0+255),f,b
 12035  014B70  1F79               	comf	(??___flge+3)& (0+255),f,b
 12036  014B72  2B76               	incf	??___flge& (0+255),f,b
 12037  014B74  0E00               	movlw	0
 12038  014B76  2377               	addwfc	(??___flge+1)& (0+255),f,b
 12039  014B78  2378               	addwfc	(??___flge+2)& (0+255),f,b
 12040  014B7A  2379               	addwfc	(??___flge+3)& (0+255),f,b
 12041  014B7C  0E00               	movlw	0
 12042  014B7E  0100               	movlb	0	; () banked
 12043  014B80  2576               	addwf	??___flge& (0+255),w,b
 12044  014B82  0100               	movlb	0	; () banked
 12045  014B84  6F6E               	movwf	___flge@ff1& (0+255),b
 12046  014B86  0E00               	movlw	0
 12047  014B88  0100               	movlb	0	; () banked
 12048  014B8A  2177               	addwfc	(??___flge+1)& (0+255),w,b
 12049  014B8C  0100               	movlb	0	; () banked
 12050  014B8E  6F6F               	movwf	(___flge@ff1+1)& (0+255),b
 12051  014B90  0E00               	movlw	0
 12052  014B92  0100               	movlb	0	; () banked
 12053  014B94  2178               	addwfc	(??___flge+2)& (0+255),w,b
 12054  014B96  0100               	movlb	0	; () banked
 12055  014B98  6F70               	movwf	(___flge@ff1+2)& (0+255),b
 12056  014B9A  0E80               	movlw	128
 12057  014B9C  0100               	movlb	0	; () banked
 12058  014B9E  2179               	addwfc	(??___flge+3)& (0+255),w,b
 12059  014BA0  0100               	movlb	0	; () banked
 12060  014BA2  6F71               	movwf	(___flge@ff1+3)& (0+255),b
 12061  014BA4                     l7949:
 12062                           
 12063                           ; BSR set to: 0
 12064  014BA4  0100               	movlb	0	; () banked
 12065  014BA6  AF75               	btfss	(___flge@ff2+3)& (0+255),7,b
 12066  014BA8  D026               	goto	l1128
 12067                           
 12068                           ; BSR set to: 0
 12069  014BAA  C072  F076         	movff	___flge@ff2,??___flge
 12070  014BAE  C073  F077         	movff	___flge@ff2+1,??___flge+1
 12071  014BB2  C074  F078         	movff	___flge@ff2+2,??___flge+2
 12072  014BB6  C075  F079         	movff	___flge@ff2+3,??___flge+3
 12073  014BBA  0100               	movlb	0	; () banked
 12074  014BBC  1F76               	comf	??___flge& (0+255),f,b
 12075  014BBE  1F77               	comf	(??___flge+1)& (0+255),f,b
 12076  014BC0  1F78               	comf	(??___flge+2)& (0+255),f,b
 12077  014BC2  1F79               	comf	(??___flge+3)& (0+255),f,b
 12078  014BC4  2B76               	incf	??___flge& (0+255),f,b
 12079  014BC6  0E00               	movlw	0
 12080  014BC8  2377               	addwfc	(??___flge+1)& (0+255),f,b
 12081  014BCA  2378               	addwfc	(??___flge+2)& (0+255),f,b
 12082  014BCC  2379               	addwfc	(??___flge+3)& (0+255),f,b
 12083  014BCE  0E00               	movlw	0
 12084  014BD0  0100               	movlb	0	; () banked
 12085  014BD2  2576               	addwf	??___flge& (0+255),w,b
 12086  014BD4  0100               	movlb	0	; () banked
 12087  014BD6  6F72               	movwf	___flge@ff2& (0+255),b
 12088  014BD8  0E00               	movlw	0
 12089  014BDA  0100               	movlb	0	; () banked
 12090  014BDC  2177               	addwfc	(??___flge+1)& (0+255),w,b
 12091  014BDE  0100               	movlb	0	; () banked
 12092  014BE0  6F73               	movwf	(___flge@ff2+1)& (0+255),b
 12093  014BE2  0E00               	movlw	0
 12094  014BE4  0100               	movlb	0	; () banked
 12095  014BE6  2178               	addwfc	(??___flge+2)& (0+255),w,b
 12096  014BE8  0100               	movlb	0	; () banked
 12097  014BEA  6F74               	movwf	(___flge@ff2+2)& (0+255),b
 12098  014BEC  0E80               	movlw	128
 12099  014BEE  0100               	movlb	0	; () banked
 12100  014BF0  2179               	addwfc	(??___flge+3)& (0+255),w,b
 12101  014BF2  0100               	movlb	0	; () banked
 12102  014BF4  6F75               	movwf	(___flge@ff2+3)& (0+255),b
 12103  014BF6                     l1128:
 12104                           
 12105                           ; BSR set to: 0
 12106  014BF6  0E00               	movlw	0
 12107  014BF8  0100               	movlb	0	; () banked
 12108  014BFA  1B6E               	xorwf	___flge@ff1& (0+255),f,b
 12109  014BFC  0E00               	movlw	0
 12110  014BFE  1B6F               	xorwf	(___flge@ff1+1)& (0+255),f,b
 12111  014C00  0E00               	movlw	0
 12112  014C02  1B70               	xorwf	(___flge@ff1+2)& (0+255),f,b
 12113  014C04  0E80               	movlw	128
 12114  014C06  1B71               	xorwf	(___flge@ff1+3)& (0+255),f,b
 12115  014C08  0E00               	movlw	0
 12116  014C0A  0100               	movlb	0	; () banked
 12117  014C0C  1B72               	xorwf	___flge@ff2& (0+255),f,b
 12118  014C0E  0E00               	movlw	0
 12119  014C10  1B73               	xorwf	(___flge@ff2+1)& (0+255),f,b
 12120  014C12  0E00               	movlw	0
 12121  014C14  1B74               	xorwf	(___flge@ff2+2)& (0+255),f,b
 12122  014C16  0E80               	movlw	128
 12123  014C18  1B75               	xorwf	(___flge@ff2+3)& (0+255),f,b
 12124  014C1A  0100               	movlb	0	; () banked
 12125  014C1C  5172               	movf	___flge@ff2& (0+255),w,b
 12126  014C1E  0100               	movlb	0	; () banked
 12127  014C20  5D6E               	subwf	___flge@ff1& (0+255),w,b
 12128  014C22  0100               	movlb	0	; () banked
 12129  014C24  5173               	movf	(___flge@ff2+1)& (0+255),w,b
 12130  014C26  0100               	movlb	0	; () banked
 12131  014C28  596F               	subwfb	(___flge@ff1+1)& (0+255),w,b
 12132  014C2A  0100               	movlb	0	; () banked
 12133  014C2C  5174               	movf	(___flge@ff2+2)& (0+255),w,b
 12134  014C2E  0100               	movlb	0	; () banked
 12135  014C30  5970               	subwfb	(___flge@ff1+2)& (0+255),w,b
 12136  014C32  0100               	movlb	0	; () banked
 12137  014C34  5175               	movf	(___flge@ff2+3)& (0+255),w,b
 12138  014C36  0100               	movlb	0	; () banked
 12139  014C38  5971               	subwfb	(___flge@ff1+3)& (0+255),w,b
 12140  014C3A  B0D8               	btfsc	status,0,c
 12141  014C3C  D002               	goto	l7955
 12142                           
 12143                           ; BSR set to: 0
 12144  014C3E  90D8               	bcf	status,0,c
 12145  014C40  0012               	return	
 12146  014C42                     l7955:
 12147                           
 12148                           ; BSR set to: 0
 12149  014C42  80D8               	bsf	status,0,c
 12150                           
 12151                           ; BSR set to: 0
 12152  014C44  0012               	return	
 12153  014C46                     __end_of___flge:
 12154                           	opt stack 0
 12155                           tblptru	equ	0xFF8
 12156                           tblptrh	equ	0xFF7
 12157                           tblptrl	equ	0xFF6
 12158                           tablat	equ	0xFF5
 12159                           prodh	equ	0xFF4
 12160                           prodl	equ	0xFF3
 12161                           intcon	equ	0xFF2
 12162                           postinc0	equ	0xFEE
 12163                           wreg	equ	0xFE8
 12164                           indf2	equ	0xFDF
 12165                           postinc2	equ	0xFDE
 12166                           fsr2h	equ	0xFDA
 12167                           fsr2l	equ	0xFD9
 12168                           status	equ	0xFD8
 12169                           
 12170 ;; *************** function ___fldiv *****************
 12171 ;; Defined at:
 12172 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
 12173 ;; Parameters:    Size  Location     Type
 12174 ;;  b               4   28[BANK0 ] unsigned char 
 12175 ;;  a               4   32[BANK0 ] unsigned char 
 12176 ;; Auto vars:     Size  Location     Type
 12177 ;;  grs             4   47[BANK0 ] unsigned long 
 12178 ;;  rem             4   41[BANK0 ] unsigned long 
 12179 ;;  new_exp         2   45[BANK0 ] int 
 12180 ;;  aexp            1   52[BANK0 ] unsigned char 
 12181 ;;  bexp            1   51[BANK0 ] unsigned char 
 12182 ;;  sign            1   40[BANK0 ] unsigned char 
 12183 ;; Return value:  Size  Location     Type
 12184 ;;                  4   28[BANK0 ] unsigned char 
 12185 ;; Registers used:
 12186 ;;		wreg, status,2, status,0
 12187 ;; Tracked objects:
 12188 ;;		On entry : 0/0
 12189 ;;		On exit  : 0/0
 12190 ;;		Unchanged: 0/0
 12191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12192 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12193 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12194 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12195 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12196 ;;Total ram usage:       25 bytes
 12197 ;; Hardware stack levels used:    1
 12198 ;; Hardware stack levels required when called:    3
 12199 ;; This function calls:
 12200 ;;		Nothing
 12201 ;; This function is called by:
 12202 ;;		_LCD_Handler
 12203 ;; This function uses a non-reentrant model
 12204 ;;
 12205                           
 12206                           	psect	text25
 12207  013970                     __ptext25:
 12208                           	opt stack 0
 12209  013970                     ___fldiv:
 12210                           	opt stack 26
 12211                           
 12212                           ; BSR set to: 0
 12213                           ;incstack = 0
 12214  013970  0100               	movlb	0	; () banked
 12215  013972  517F               	movf	(___fldiv@b+3)& (0+255),w,b
 12216  013974  0B80               	andlw	128
 12217  013976  0100               	movlb	0	; () banked
 12218  013978  6F88               	movwf	___fldiv@sign& (0+255),b
 12219  01397A  0100               	movlb	0	; () banked
 12220  01397C  517F               	movf	(___fldiv@b+3)& (0+255),w,b
 12221  01397E  257F               	addwf	(___fldiv@b+3)& (0+255),w,b
 12222  013980  0100               	movlb	0	; () banked
 12223  013982  6F93               	movwf	___fldiv@bexp& (0+255),b
 12224                           
 12225                           ; BSR set to: 0
 12226  013984  0100               	movlb	0	; () banked
 12227  013986  AF7E               	btfss	(___fldiv@b+2)& (0+255),7,b
 12228  013988  D002               	goto	l6363
 12229                           
 12230                           ; BSR set to: 0
 12231  01398A  0100               	movlb	0	; () banked
 12232  01398C  8193               	bsf	___fldiv@bexp& (0+255),0,b
 12233  01398E                     l6363:
 12234                           
 12235                           ; BSR set to: 0
 12236  01398E  0100               	movlb	0	; () banked
 12237  013990  5193               	movf	___fldiv@bexp& (0+255),w,b
 12238  013992  0100               	movlb	0	; () banked
 12239  013994  B4D8               	btfsc	status,2,c
 12240  013996  D012               	goto	l6373
 12241                           
 12242                           ; BSR set to: 0
 12243  013998  0100               	movlb	0	; () banked
 12244  01399A  2993               	incf	___fldiv@bexp& (0+255),w,b
 12245  01399C  A4D8               	btfss	status,2,c
 12246  01399E  D009               	goto	l6369
 12247                           
 12248                           ; BSR set to: 0
 12249  0139A0  0E00               	movlw	0
 12250  0139A2  0100               	movlb	0	; () banked
 12251  0139A4  6F7C               	movwf	___fldiv@b& (0+255),b
 12252  0139A6  0E00               	movlw	0
 12253  0139A8  6F7D               	movwf	(___fldiv@b+1)& (0+255),b
 12254  0139AA  0E00               	movlw	0
 12255  0139AC  6F7E               	movwf	(___fldiv@b+2)& (0+255),b
 12256  0139AE  0E00               	movlw	0
 12257  0139B0  6F7F               	movwf	(___fldiv@b+3)& (0+255),b
 12258  0139B2                     l6369:
 12259                           
 12260                           ; BSR set to: 0
 12261  0139B2  0100               	movlb	0	; () banked
 12262  0139B4  8F7E               	bsf	(___fldiv@b+2)& (0+255),7,b
 12263                           
 12264                           ; BSR set to: 0
 12265  0139B6  0E00               	movlw	0
 12266  0139B8  0100               	movlb	0	; () banked
 12267  0139BA  D008               	goto	L12
 12268  0139BC                     l6373:
 12269                           
 12270                           ; BSR set to: 0
 12271  0139BC  0E00               	movlw	0
 12272  0139BE  0100               	movlb	0	; () banked
 12273  0139C0  6F7C               	movwf	___fldiv@b& (0+255),b
 12274  0139C2  0E00               	movlw	0
 12275  0139C4  6F7D               	movwf	(___fldiv@b+1)& (0+255),b
 12276  0139C6  0E00               	movlw	0
 12277  0139C8  6F7E               	movwf	(___fldiv@b+2)& (0+255),b
 12278  0139CA  0E00               	movlw	0
 12279  0139CC                     L12:
 12280  0139CC  6F7F               	movwf	(___fldiv@b+3)& (0+255),b
 12281                           
 12282                           ; BSR set to: 0
 12283                           
 12284                           ; BSR set to: 0
 12285  0139CE  0100               	movlb	0	; () banked
 12286  0139D0  5183               	movf	(___fldiv@a+3)& (0+255),w,b
 12287  0139D2  0B80               	andlw	128
 12288  0139D4  0100               	movlb	0	; () banked
 12289  0139D6  1B88               	xorwf	___fldiv@sign& (0+255),f,b
 12290                           
 12291                           ; BSR set to: 0
 12292  0139D8  0100               	movlb	0	; () banked
 12293  0139DA  5183               	movf	(___fldiv@a+3)& (0+255),w,b
 12294  0139DC  2583               	addwf	(___fldiv@a+3)& (0+255),w,b
 12295  0139DE  0100               	movlb	0	; () banked
 12296  0139E0  6F94               	movwf	___fldiv@aexp& (0+255),b
 12297                           
 12298                           ; BSR set to: 0
 12299  0139E2  0100               	movlb	0	; () banked
 12300  0139E4  AF82               	btfss	(___fldiv@a+2)& (0+255),7,b
 12301  0139E6  D002               	goto	l6383
 12302                           
 12303                           ; BSR set to: 0
 12304  0139E8  0100               	movlb	0	; () banked
 12305  0139EA  8194               	bsf	___fldiv@aexp& (0+255),0,b
 12306  0139EC                     l6383:
 12307                           
 12308                           ; BSR set to: 0
 12309  0139EC  0100               	movlb	0	; () banked
 12310  0139EE  5194               	movf	___fldiv@aexp& (0+255),w,b
 12311  0139F0  0100               	movlb	0	; () banked
 12312  0139F2  B4D8               	btfsc	status,2,c
 12313  0139F4  D012               	goto	l6393
 12314                           
 12315                           ; BSR set to: 0
 12316  0139F6  0100               	movlb	0	; () banked
 12317  0139F8  2994               	incf	___fldiv@aexp& (0+255),w,b
 12318  0139FA  A4D8               	btfss	status,2,c
 12319  0139FC  D009               	goto	l6389
 12320                           
 12321                           ; BSR set to: 0
 12322  0139FE  0E00               	movlw	0
 12323  013A00  0100               	movlb	0	; () banked
 12324  013A02  6F80               	movwf	___fldiv@a& (0+255),b
 12325  013A04  0E00               	movlw	0
 12326  013A06  6F81               	movwf	(___fldiv@a+1)& (0+255),b
 12327  013A08  0E00               	movlw	0
 12328  013A0A  6F82               	movwf	(___fldiv@a+2)& (0+255),b
 12329  013A0C  0E00               	movlw	0
 12330  013A0E  6F83               	movwf	(___fldiv@a+3)& (0+255),b
 12331  013A10                     l6389:
 12332                           
 12333                           ; BSR set to: 0
 12334  013A10  0100               	movlb	0	; () banked
 12335  013A12  8F82               	bsf	(___fldiv@a+2)& (0+255),7,b
 12336                           
 12337                           ; BSR set to: 0
 12338  013A14  0E00               	movlw	0
 12339  013A16  0100               	movlb	0	; () banked
 12340  013A18  D008               	goto	L13
 12341  013A1A                     l6393:
 12342                           
 12343                           ; BSR set to: 0
 12344  013A1A  0E00               	movlw	0
 12345  013A1C  0100               	movlb	0	; () banked
 12346  013A1E  6F80               	movwf	___fldiv@a& (0+255),b
 12347  013A20  0E00               	movlw	0
 12348  013A22  6F81               	movwf	(___fldiv@a+1)& (0+255),b
 12349  013A24  0E00               	movlw	0
 12350  013A26  6F82               	movwf	(___fldiv@a+2)& (0+255),b
 12351  013A28  0E00               	movlw	0
 12352  013A2A                     L13:
 12353  013A2A  6F83               	movwf	(___fldiv@a+3)& (0+255),b
 12354                           
 12355                           ; BSR set to: 0
 12356                           
 12357                           ; BSR set to: 0
 12358  013A2C  0100               	movlb	0	; () banked
 12359  013A2E  5180               	movf	___fldiv@a& (0+255),w,b
 12360  013A30  0100               	movlb	0	; () banked
 12361  013A32  1181               	iorwf	(___fldiv@a+1)& (0+255),w,b
 12362  013A34  0100               	movlb	0	; () banked
 12363  013A36  1182               	iorwf	(___fldiv@a+2)& (0+255),w,b
 12364  013A38  0100               	movlb	0	; () banked
 12365  013A3A  1183               	iorwf	(___fldiv@a+3)& (0+255),w,b
 12366  013A3C  A4D8               	btfss	status,2,c
 12367  013A3E  D017               	goto	l6405
 12368                           
 12369                           ; BSR set to: 0
 12370  013A40  0E00               	movlw	0
 12371  013A42  0100               	movlb	0	; () banked
 12372  013A44  6F7C               	movwf	___fldiv@b& (0+255),b
 12373  013A46  0E00               	movlw	0
 12374  013A48  6F7D               	movwf	(___fldiv@b+1)& (0+255),b
 12375  013A4A  0E00               	movlw	0
 12376  013A4C  6F7E               	movwf	(___fldiv@b+2)& (0+255),b
 12377  013A4E  0E00               	movlw	0
 12378  013A50  6F7F               	movwf	(___fldiv@b+3)& (0+255),b
 12379                           
 12380                           ; BSR set to: 0
 12381  013A52  0100               	movlb	0	; () banked
 12382  013A54  0E80               	movlw	128
 12383  013A56  137E               	iorwf	(___fldiv@b+2)& (0+255),f,b
 12384  013A58  0E7F               	movlw	127
 12385  013A5A  137F               	iorwf	(___fldiv@b+3)& (0+255),f,b
 12386                           
 12387                           ; BSR set to: 0
 12388  013A5C  C07C  F07C         	movff	___fldiv@b,?___fldiv
 12389  013A60  C07D  F07D         	movff	___fldiv@b+1,?___fldiv+1
 12390  013A64  C07E  F07E         	movff	___fldiv@b+2,?___fldiv+2
 12391  013A68  C07F  F07F         	movff	___fldiv@b+3,?___fldiv+3
 12392                           
 12393                           ; BSR set to: 0
 12394  013A6C  0012               	return	
 12395  013A6E                     l6405:
 12396                           
 12397                           ; BSR set to: 0
 12398  013A6E  0100               	movlb	0	; () banked
 12399  013A70  5193               	movf	___fldiv@bexp& (0+255),w,b
 12400  013A72  0100               	movlb	0	; () banked
 12401  013A74  A4D8               	btfss	status,2,c
 12402  013A76  D012               	goto	l6413
 12403                           
 12404                           ; BSR set to: 0
 12405  013A78  0E00               	movlw	0
 12406  013A7A  0100               	movlb	0	; () banked
 12407  013A7C  6F7C               	movwf	___fldiv@b& (0+255),b
 12408  013A7E  0E00               	movlw	0
 12409  013A80  6F7D               	movwf	(___fldiv@b+1)& (0+255),b
 12410  013A82  0E00               	movlw	0
 12411  013A84  6F7E               	movwf	(___fldiv@b+2)& (0+255),b
 12412  013A86  0E00               	movlw	0
 12413  013A88  6F7F               	movwf	(___fldiv@b+3)& (0+255),b
 12414                           
 12415                           ; BSR set to: 0
 12416  013A8A  C07C  F07C         	movff	___fldiv@b,?___fldiv
 12417  013A8E  C07D  F07D         	movff	___fldiv@b+1,?___fldiv+1
 12418  013A92  C07E  F07E         	movff	___fldiv@b+2,?___fldiv+2
 12419  013A96  C07F  F07F         	movff	___fldiv@b+3,?___fldiv+3
 12420                           
 12421                           ; BSR set to: 0
 12422  013A9A  0012               	return	
 12423  013A9C                     l6413:
 12424                           
 12425                           ; BSR set to: 0
 12426  013A9C  0100               	movlb	0	; () banked
 12427  013A9E  5194               	movf	___fldiv@aexp& (0+255),w,b
 12428  013AA0  0100               	movlb	0	; () banked
 12429  013AA2  6F84               	movwf	??___fldiv& (0+255),b
 12430  013AA4  6B85               	clrf	(??___fldiv+1)& (0+255),b
 12431  013AA6  0100               	movlb	0	; () banked
 12432  013AA8  1F84               	comf	??___fldiv& (0+255),f,b
 12433  013AAA  1F85               	comf	(??___fldiv+1)& (0+255),f,b
 12434  013AAC  4B84               	infsnz	??___fldiv& (0+255),f,b
 12435  013AAE  2B85               	incf	(??___fldiv+1)& (0+255),f,b
 12436  013AB0  0100               	movlb	0	; () banked
 12437  013AB2  5193               	movf	___fldiv@bexp& (0+255),w,b
 12438  013AB4  0100               	movlb	0	; () banked
 12439  013AB6  6F86               	movwf	(??___fldiv+2)& (0+255),b
 12440  013AB8  6B87               	clrf	(??___fldiv+3)& (0+255),b
 12441  013ABA  0100               	movlb	0	; () banked
 12442  013ABC  5184               	movf	??___fldiv& (0+255),w,b
 12443  013ABE  0100               	movlb	0	; () banked
 12444  013AC0  2786               	addwf	(??___fldiv+2)& (0+255),f,b
 12445  013AC2  0100               	movlb	0	; () banked
 12446  013AC4  5185               	movf	(??___fldiv+1)& (0+255),w,b
 12447  013AC6  0100               	movlb	0	; () banked
 12448  013AC8  2387               	addwfc	(??___fldiv+3)& (0+255),f,b
 12449  013ACA  0E7F               	movlw	127
 12450  013ACC  0100               	movlb	0	; () banked
 12451  013ACE  2586               	addwf	(??___fldiv+2)& (0+255),w,b
 12452  013AD0  0100               	movlb	0	; () banked
 12453  013AD2  6F8D               	movwf	___fldiv@new_exp& (0+255),b
 12454  013AD4  0E00               	movlw	0
 12455  013AD6  0100               	movlb	0	; () banked
 12456  013AD8  2187               	addwfc	(??___fldiv+3)& (0+255),w,b
 12457  013ADA  0100               	movlb	0	; () banked
 12458  013ADC  6F8E               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12459                           
 12460                           ; BSR set to: 0
 12461  013ADE  C07C  F089         	movff	___fldiv@b,___fldiv@rem
 12462  013AE2  C07D  F08A         	movff	___fldiv@b+1,___fldiv@rem+1
 12463  013AE6  C07E  F08B         	movff	___fldiv@b+2,___fldiv@rem+2
 12464  013AEA  C07F  F08C         	movff	___fldiv@b+3,___fldiv@rem+3
 12465                           
 12466                           ; BSR set to: 0
 12467  013AEE  0E00               	movlw	0
 12468  013AF0  0100               	movlb	0	; () banked
 12469  013AF2  6F7C               	movwf	___fldiv@b& (0+255),b
 12470  013AF4  0E00               	movlw	0
 12471  013AF6  6F7D               	movwf	(___fldiv@b+1)& (0+255),b
 12472  013AF8  0E00               	movlw	0
 12473  013AFA  6F7E               	movwf	(___fldiv@b+2)& (0+255),b
 12474  013AFC  0E00               	movlw	0
 12475  013AFE  6F7F               	movwf	(___fldiv@b+3)& (0+255),b
 12476                           
 12477                           ; BSR set to: 0
 12478  013B00  0E00               	movlw	0
 12479  013B02  0100               	movlb	0	; () banked
 12480  013B04  6F8F               	movwf	___fldiv@grs& (0+255),b
 12481  013B06  0E00               	movlw	0
 12482  013B08  6F90               	movwf	(___fldiv@grs+1)& (0+255),b
 12483  013B0A  0E00               	movlw	0
 12484  013B0C  6F91               	movwf	(___fldiv@grs+2)& (0+255),b
 12485  013B0E  0E00               	movlw	0
 12486  013B10  6F92               	movwf	(___fldiv@grs+3)& (0+255),b
 12487                           
 12488                           ; BSR set to: 0
 12489  013B12  0E00               	movlw	0
 12490  013B14  0100               	movlb	0	; () banked
 12491  013B16  6F94               	movwf	___fldiv@aexp& (0+255),b
 12492  013B18  D042               	goto	l1461
 12493  013B1A                     l6423:
 12494                           
 12495                           ; BSR set to: 0
 12496  013B1A  0100               	movlb	0	; () banked
 12497  013B1C  5194               	movf	___fldiv@aexp& (0+255),w,b
 12498  013B1E  0100               	movlb	0	; () banked
 12499  013B20  B4D8               	btfsc	status,2,c
 12500  013B22  D017               	goto	l6431
 12501                           
 12502                           ; BSR set to: 0
 12503  013B24  0100               	movlb	0	; () banked
 12504  013B26  90D8               	bcf	status,0,c
 12505  013B28  3789               	rlcf	___fldiv@rem& (0+255),f,b
 12506  013B2A  378A               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 12507  013B2C  378B               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 12508  013B2E  378C               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 12509  013B30  0100               	movlb	0	; () banked
 12510  013B32  90D8               	bcf	status,0,c
 12511  013B34  377C               	rlcf	___fldiv@b& (0+255),f,b
 12512  013B36  377D               	rlcf	(___fldiv@b+1)& (0+255),f,b
 12513  013B38  377E               	rlcf	(___fldiv@b+2)& (0+255),f,b
 12514  013B3A  377F               	rlcf	(___fldiv@b+3)& (0+255),f,b
 12515                           
 12516                           ; BSR set to: 0
 12517  013B3C  0100               	movlb	0	; () banked
 12518  013B3E  AF92               	btfss	(___fldiv@grs+3)& (0+255),7,b
 12519  013B40  D002               	goto	l1464
 12520                           
 12521                           ; BSR set to: 0
 12522  013B42  0100               	movlb	0	; () banked
 12523  013B44  817C               	bsf	___fldiv@b& (0+255),0,b
 12524  013B46                     l1464:
 12525                           
 12526                           ; BSR set to: 0
 12527  013B46  0100               	movlb	0	; () banked
 12528  013B48  90D8               	bcf	status,0,c
 12529  013B4A  378F               	rlcf	___fldiv@grs& (0+255),f,b
 12530  013B4C  3790               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 12531  013B4E  3791               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 12532  013B50  3792               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 12533  013B52                     l6431:
 12534                           
 12535                           ; BSR set to: 0
 12536  013B52  0100               	movlb	0	; () banked
 12537  013B54  5180               	movf	___fldiv@a& (0+255),w,b
 12538  013B56  0100               	movlb	0	; () banked
 12539  013B58  5D89               	subwf	___fldiv@rem& (0+255),w,b
 12540  013B5A  0100               	movlb	0	; () banked
 12541  013B5C  5181               	movf	(___fldiv@a+1)& (0+255),w,b
 12542  013B5E  0100               	movlb	0	; () banked
 12543  013B60  598A               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 12544  013B62  0100               	movlb	0	; () banked
 12545  013B64  5182               	movf	(___fldiv@a+2)& (0+255),w,b
 12546  013B66  0100               	movlb	0	; () banked
 12547  013B68  598B               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 12548  013B6A  0100               	movlb	0	; () banked
 12549  013B6C  5183               	movf	(___fldiv@a+3)& (0+255),w,b
 12550  013B6E  0100               	movlb	0	; () banked
 12551  013B70  598C               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 12552  013B72  A0D8               	btfss	status,0,c
 12553  013B74  D012               	goto	l6437
 12554                           
 12555                           ; BSR set to: 0
 12556  013B76  0100               	movlb	0	; () banked
 12557  013B78  8D92               	bsf	(___fldiv@grs+3)& (0+255),6,b
 12558                           
 12559                           ; BSR set to: 0
 12560  013B7A  0100               	movlb	0	; () banked
 12561  013B7C  5180               	movf	___fldiv@a& (0+255),w,b
 12562  013B7E  0100               	movlb	0	; () banked
 12563  013B80  5F89               	subwf	___fldiv@rem& (0+255),f,b
 12564  013B82  0100               	movlb	0	; () banked
 12565  013B84  5181               	movf	(___fldiv@a+1)& (0+255),w,b
 12566  013B86  0100               	movlb	0	; () banked
 12567  013B88  5B8A               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 12568  013B8A  0100               	movlb	0	; () banked
 12569  013B8C  5182               	movf	(___fldiv@a+2)& (0+255),w,b
 12570  013B8E  0100               	movlb	0	; () banked
 12571  013B90  5B8B               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 12572  013B92  0100               	movlb	0	; () banked
 12573  013B94  5183               	movf	(___fldiv@a+3)& (0+255),w,b
 12574  013B96  0100               	movlb	0	; () banked
 12575  013B98  5B8C               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 12576  013B9A                     l6437:
 12577                           
 12578                           ; BSR set to: 0
 12579  013B9A  0100               	movlb	0	; () banked
 12580  013B9C  2B94               	incf	___fldiv@aexp& (0+255),f,b
 12581  013B9E                     l1461:
 12582                           
 12583                           ; BSR set to: 0
 12584  013B9E  0E19               	movlw	25
 12585  013BA0  0100               	movlb	0	; () banked
 12586  013BA2  6594               	cpfsgt	___fldiv@aexp& (0+255),b
 12587  013BA4  D7BA               	goto	l6423
 12588                           
 12589                           ; BSR set to: 0
 12590                           
 12591                           ; BSR set to: 0
 12592  013BA6  0100               	movlb	0	; () banked
 12593  013BA8  5189               	movf	___fldiv@rem& (0+255),w,b
 12594  013BAA  0100               	movlb	0	; () banked
 12595  013BAC  118A               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 12596  013BAE  0100               	movlb	0	; () banked
 12597  013BB0  118B               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 12598  013BB2  0100               	movlb	0	; () banked
 12599  013BB4  118C               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 12600  013BB6  B4D8               	btfsc	status,2,c
 12601  013BB8  D018               	goto	l6449
 12602                           
 12603                           ; BSR set to: 0
 12604  013BBA  0100               	movlb	0	; () banked
 12605  013BBC  818F               	bsf	___fldiv@grs& (0+255),0,b
 12606                           
 12607                           ; BSR set to: 0
 12608  013BBE  D015               	goto	l6449
 12609  013BC0                     l6443:
 12610                           
 12611                           ; BSR set to: 0
 12612  013BC0  0100               	movlb	0	; () banked
 12613  013BC2  90D8               	bcf	status,0,c
 12614  013BC4  377C               	rlcf	___fldiv@b& (0+255),f,b
 12615  013BC6  377D               	rlcf	(___fldiv@b+1)& (0+255),f,b
 12616  013BC8  377E               	rlcf	(___fldiv@b+2)& (0+255),f,b
 12617  013BCA  377F               	rlcf	(___fldiv@b+3)& (0+255),f,b
 12618                           
 12619                           ; BSR set to: 0
 12620  013BCC  0100               	movlb	0	; () banked
 12621  013BCE  AF92               	btfss	(___fldiv@grs+3)& (0+255),7,b
 12622  013BD0  D002               	goto	l1470
 12623                           
 12624                           ; BSR set to: 0
 12625  013BD2  0100               	movlb	0	; () banked
 12626  013BD4  817C               	bsf	___fldiv@b& (0+255),0,b
 12627  013BD6                     l1470:
 12628                           
 12629                           ; BSR set to: 0
 12630  013BD6  0100               	movlb	0	; () banked
 12631  013BD8  90D8               	bcf	status,0,c
 12632  013BDA  378F               	rlcf	___fldiv@grs& (0+255),f,b
 12633  013BDC  3790               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 12634  013BDE  3791               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 12635  013BE0  3792               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 12636  013BE2  0100               	movlb	0	; () banked
 12637  013BE4  078D               	decf	___fldiv@new_exp& (0+255),f,b
 12638  013BE6  A0D8               	btfss	status,0,c
 12639  013BE8  078E               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 12640  013BEA                     l6449:
 12641                           
 12642                           ; BSR set to: 0
 12643  013BEA  0100               	movlb	0	; () banked
 12644  013BEC  AF7E               	btfss	(___fldiv@b+2)& (0+255),7,b
 12645  013BEE  D7E8               	goto	l6443
 12646                           
 12647                           ; BSR set to: 0
 12648                           
 12649                           ; BSR set to: 0
 12650  013BF0  0E00               	movlw	0
 12651  013BF2  0100               	movlb	0	; () banked
 12652  013BF4  6F94               	movwf	___fldiv@aexp& (0+255),b
 12653                           
 12654                           ; BSR set to: 0
 12655  013BF6  0100               	movlb	0	; () banked
 12656  013BF8  AF92               	btfss	(___fldiv@grs+3)& (0+255),7,b
 12657  013BFA  D024               	goto	l1472
 12658                           
 12659                           ; BSR set to: 0
 12660  013BFC  0EFF               	movlw	255
 12661  013BFE  0100               	movlb	0	; () banked
 12662  013C00  158F               	andwf	___fldiv@grs& (0+255),w,b
 12663  013C02  0100               	movlb	0	; () banked
 12664  013C04  6F84               	movwf	??___fldiv& (0+255),b
 12665  013C06  0EFF               	movlw	255
 12666  013C08  0100               	movlb	0	; () banked
 12667  013C0A  1590               	andwf	(___fldiv@grs+1)& (0+255),w,b
 12668  013C0C  0100               	movlb	0	; () banked
 12669  013C0E  6F85               	movwf	(??___fldiv+1)& (0+255),b
 12670  013C10  0EFF               	movlw	255
 12671  013C12  0100               	movlb	0	; () banked
 12672  013C14  1591               	andwf	(___fldiv@grs+2)& (0+255),w,b
 12673  013C16  0100               	movlb	0	; () banked
 12674  013C18  6F86               	movwf	(??___fldiv+2)& (0+255),b
 12675  013C1A  0E7F               	movlw	127
 12676  013C1C  0100               	movlb	0	; () banked
 12677  013C1E  1592               	andwf	(___fldiv@grs+3)& (0+255),w,b
 12678  013C20  0100               	movlb	0	; () banked
 12679  013C22  6F87               	movwf	(??___fldiv+3)& (0+255),b
 12680  013C24  0100               	movlb	0	; () banked
 12681  013C26  5184               	movf	??___fldiv& (0+255),w,b
 12682  013C28  0100               	movlb	0	; () banked
 12683  013C2A  1185               	iorwf	(??___fldiv+1)& (0+255),w,b
 12684  013C2C  0100               	movlb	0	; () banked
 12685  013C2E  1186               	iorwf	(??___fldiv+2)& (0+255),w,b
 12686  013C30  0100               	movlb	0	; () banked
 12687  013C32  1187               	iorwf	(??___fldiv+3)& (0+255),w,b
 12688  013C34  A4D8               	btfss	status,2,c
 12689  013C36  D003               	goto	l6459
 12690                           
 12691                           ; BSR set to: 0
 12692                           
 12693                           ; BSR set to: 0
 12694  013C38  0100               	movlb	0	; () banked
 12695  013C3A  A17C               	btfss	___fldiv@b& (0+255),0,b
 12696  013C3C  D003               	goto	l1472
 12697  013C3E                     l6459:
 12698                           
 12699                           ; BSR set to: 0
 12700  013C3E  0E01               	movlw	1
 12701  013C40  0100               	movlb	0	; () banked
 12702  013C42  6F94               	movwf	___fldiv@aexp& (0+255),b
 12703  013C44                     l1472:
 12704                           
 12705                           ; BSR set to: 0
 12706  013C44  0100               	movlb	0	; () banked
 12707  013C46  5194               	movf	___fldiv@aexp& (0+255),w,b
 12708  013C48  0100               	movlb	0	; () banked
 12709  013C4A  B4D8               	btfsc	status,2,c
 12710  013C4C  D023               	goto	l6469
 12711                           
 12712                           ; BSR set to: 0
 12713  013C4E  0E01               	movlw	1
 12714  013C50  0100               	movlb	0	; () banked
 12715  013C52  277C               	addwf	___fldiv@b& (0+255),f,b
 12716  013C54  0E00               	movlw	0
 12717  013C56  237D               	addwfc	(___fldiv@b+1)& (0+255),f,b
 12718  013C58  237E               	addwfc	(___fldiv@b+2)& (0+255),f,b
 12719  013C5A  237F               	addwfc	(___fldiv@b+3)& (0+255),f,b
 12720                           
 12721                           ; BSR set to: 0
 12722  013C5C  0100               	movlb	0	; () banked
 12723  013C5E  A17F               	btfss	(___fldiv@b+3)& (0+255),0,b
 12724  013C60  D019               	goto	l6469
 12725                           
 12726                           ; BSR set to: 0
 12727  013C62  C07C  F084         	movff	___fldiv@b,??___fldiv
 12728  013C66  C07D  F085         	movff	___fldiv@b+1,??___fldiv+1
 12729  013C6A  C07E  F086         	movff	___fldiv@b+2,??___fldiv+2
 12730  013C6E  C07F  F087         	movff	___fldiv@b+3,??___fldiv+3
 12731  013C72  0100               	movlb	0	; () banked
 12732  013C74  3587               	rlcf	(??___fldiv+3)& (0+255),w,b
 12733  013C76  3387               	rrcf	(??___fldiv+3)& (0+255),f,b
 12734  013C78  3386               	rrcf	(??___fldiv+2)& (0+255),f,b
 12735  013C7A  3385               	rrcf	(??___fldiv+1)& (0+255),f,b
 12736  013C7C  3384               	rrcf	??___fldiv& (0+255),f,b
 12737  013C7E  C084  F07C         	movff	??___fldiv,___fldiv@b
 12738  013C82  C085  F07D         	movff	??___fldiv+1,___fldiv@b+1
 12739  013C86  C086  F07E         	movff	??___fldiv+2,___fldiv@b+2
 12740  013C8A  C087  F07F         	movff	??___fldiv+3,___fldiv@b+3
 12741                           
 12742                           ; BSR set to: 0
 12743  013C8E  0100               	movlb	0	; () banked
 12744  013C90  4B8D               	infsnz	___fldiv@new_exp& (0+255),f,b
 12745  013C92  2B8E               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 12746  013C94                     l6469:
 12747                           
 12748                           ; BSR set to: 0
 12749  013C94  0100               	movlb	0	; () banked
 12750  013C96  BF8E               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 12751  013C98  D014               	goto	l6473
 12752  013C9A  0100               	movlb	0	; () banked
 12753  013C9C  518E               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 12754  013C9E  E104               	bnz	u8070
 12755  013CA0  0100               	movlb	0	; () banked
 12756  013CA2  298D               	incf	___fldiv@new_exp& (0+255),w,b
 12757  013CA4  A0D8               	btfss	status,0,c
 12758  013CA6  D00D               	goto	l6473
 12759  013CA8                     u8070:
 12760                           
 12761                           ; BSR set to: 0
 12762  013CA8  0E00               	movlw	0
 12763  013CAA  0100               	movlb	0	; () banked
 12764  013CAC  6F8E               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12765  013CAE  698D               	setf	___fldiv@new_exp& (0+255),b
 12766  013CB0  0E00               	movlw	0
 12767  013CB2  0100               	movlb	0	; () banked
 12768  013CB4  6F7C               	movwf	___fldiv@b& (0+255),b
 12769  013CB6  0E00               	movlw	0
 12770  013CB8  6F7D               	movwf	(___fldiv@b+1)& (0+255),b
 12771  013CBA  0E00               	movlw	0
 12772  013CBC  6F7E               	movwf	(___fldiv@b+2)& (0+255),b
 12773  013CBE  0E00               	movlw	0
 12774  013CC0  6F7F               	movwf	(___fldiv@b+3)& (0+255),b
 12775  013CC2                     l6473:
 12776                           
 12777                           ; BSR set to: 0
 12778  013CC2  0100               	movlb	0	; () banked
 12779  013CC4  BF8E               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 12780  013CC6  D007               	goto	l6475
 12781  013CC8  0100               	movlb	0	; () banked
 12782  013CCA  518E               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 12783  013CCC  E115               	bnz	l6477
 12784  013CCE  0100               	movlb	0	; () banked
 12785  013CD0  058D               	decf	___fldiv@new_exp& (0+255),w,b
 12786  013CD2  B0D8               	btfsc	status,0,c
 12787  013CD4  D011               	goto	l6477
 12788  013CD6                     l6475:
 12789                           
 12790                           ; BSR set to: 0
 12791  013CD6  0E00               	movlw	0
 12792  013CD8  0100               	movlb	0	; () banked
 12793  013CDA  6F8E               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12794  013CDC  0E00               	movlw	0
 12795  013CDE  6F8D               	movwf	___fldiv@new_exp& (0+255),b
 12796  013CE0  0E00               	movlw	0
 12797  013CE2  0100               	movlb	0	; () banked
 12798  013CE4  6F7C               	movwf	___fldiv@b& (0+255),b
 12799  013CE6  0E00               	movlw	0
 12800  013CE8  6F7D               	movwf	(___fldiv@b+1)& (0+255),b
 12801  013CEA  0E00               	movlw	0
 12802  013CEC  6F7E               	movwf	(___fldiv@b+2)& (0+255),b
 12803  013CEE  0E00               	movlw	0
 12804  013CF0  6F7F               	movwf	(___fldiv@b+3)& (0+255),b
 12805  013CF2  0E00               	movlw	0
 12806  013CF4  0100               	movlb	0	; () banked
 12807  013CF6  6F88               	movwf	___fldiv@sign& (0+255),b
 12808  013CF8                     l6477:
 12809                           
 12810                           ; BSR set to: 0
 12811  013CF8  C08D  F093         	movff	___fldiv@new_exp,___fldiv@bexp
 12812                           
 12813                           ; BSR set to: 0
 12814  013CFC  0100               	movlb	0	; () banked
 12815  013CFE  A193               	btfss	___fldiv@bexp& (0+255),0,b
 12816  013D00  D003               	goto	l6483
 12817                           
 12818                           ; BSR set to: 0
 12819  013D02  0100               	movlb	0	; () banked
 12820  013D04  8F7E               	bsf	(___fldiv@b+2)& (0+255),7,b
 12821  013D06  D002               	goto	l6485
 12822  013D08                     l6483:
 12823                           
 12824                           ; BSR set to: 0
 12825  013D08  0100               	movlb	0	; () banked
 12826  013D0A  9F7E               	bcf	(___fldiv@b+2)& (0+255),7,b
 12827  013D0C                     l6485:
 12828                           
 12829                           ; BSR set to: 0
 12830  013D0C  0100               	movlb	0	; () banked
 12831  013D0E  90D8               	bcf	status,0,c
 12832  013D10  3193               	rrcf	___fldiv@bexp& (0+255),w,b
 12833  013D12  0100               	movlb	0	; () banked
 12834  013D14  6F7F               	movwf	(___fldiv@b+3)& (0+255),b
 12835                           
 12836                           ; BSR set to: 0
 12837  013D16  0100               	movlb	0	; () banked
 12838  013D18  5188               	movf	___fldiv@sign& (0+255),w,b
 12839  013D1A  0100               	movlb	0	; () banked
 12840  013D1C  137F               	iorwf	(___fldiv@b+3)& (0+255),f,b
 12841                           
 12842                           ; BSR set to: 0
 12843  013D1E  C07C  F07C         	movff	___fldiv@b,?___fldiv
 12844  013D22  C07D  F07D         	movff	___fldiv@b+1,?___fldiv+1
 12845  013D26  C07E  F07E         	movff	___fldiv@b+2,?___fldiv+2
 12846  013D2A  C07F  F07F         	movff	___fldiv@b+3,?___fldiv+3
 12847  013D2E  0012               	return	
 12848  013D30                     __end_of___fldiv:
 12849                           	opt stack 0
 12850                           tblptru	equ	0xFF8
 12851                           tblptrh	equ	0xFF7
 12852                           tblptrl	equ	0xFF6
 12853                           tablat	equ	0xFF5
 12854                           prodh	equ	0xFF4
 12855                           prodl	equ	0xFF3
 12856                           intcon	equ	0xFF2
 12857                           postinc0	equ	0xFEE
 12858                           wreg	equ	0xFE8
 12859                           indf2	equ	0xFDF
 12860                           postinc2	equ	0xFDE
 12861                           fsr2h	equ	0xFDA
 12862                           fsr2l	equ	0xFD9
 12863                           status	equ	0xFD8
 12864                           
 12865 ;; *************** function _LCD_write_message *****************
 12866 ;; Defined at:
 12867 ;;		line 178 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 12868 ;; Parameters:    Size  Location     Type
 12869 ;;  buffer          2   31[BANK0 ] PTR const unsigned char 
 12870 ;;		 -> STR_12(8), STR_11(21), STR_10(5), STR_8(2), 
 12871 ;;		 -> STR_7(5), STR_6(4), STR_5(12), STR_4(21), 
 12872 ;;		 -> STR_3(21), STR_2(21), STR_1(21), 
 12873 ;; Auto vars:     Size  Location     Type
 12874 ;;		None
 12875 ;; Return value:  Size  Location     Type
 12876 ;;		None               void
 12877 ;; Registers used:
 12878 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12879 ;; Tracked objects:
 12880 ;;		On entry : 0/0
 12881 ;;		On exit  : 0/0
 12882 ;;		Unchanged: 0/0
 12883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12884 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12887 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12888 ;;Total ram usage:        2 bytes
 12889 ;; Hardware stack levels used:    1
 12890 ;; Hardware stack levels required when called:    8
 12891 ;; This function calls:
 12892 ;;		_LCD_write_char
 12893 ;; This function is called by:
 12894 ;;		_main
 12895 ;;		_LCD_Handler
 12896 ;;		_board_initialization
 12897 ;; This function uses a non-reentrant model
 12898 ;;
 12899                           
 12900                           	psect	text26
 12901  015D1A                     __ptext26:
 12902                           	opt stack 0
 12903  015D1A                     _LCD_write_message:
 12904                           	opt stack 21
 12905                           
 12906                           ;src\LCD_44780.c: 181: while(*buffer) {
 12907                           
 12908                           ; BSR set to: 0
 12909                           ;incstack = 0
 12910  015D1A  D00D               	goto	l8109
 12911  015D1C                     l8105:
 12912                           
 12913                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
 12914  015D1C  C07F  FFF6         	movff	LCD_write_message@buffer,tblptrl
 12915  015D20  C080  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 12916  015D24                     	if	0	;tblptru may be non-zero
 12917  015D24                     	endif
 12918  015D24                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12919  015D24  0E00               	movlw	low (__mediumconst shr (0+16))
 12920  015D26  6EF8               	movwf	tblptru,c
 12921  015D28                     	endif
 12922  015D28  0008               	tblrd		*
 12923  015D2A  50F5               	movf	tablat,w,c
 12924  015D2C  ECD1  F0AC         	call	_LCD_write_char
 12925                           
 12926                           ;src\LCD_44780.c: 186: buffer++;
 12927  015D30  0100               	movlb	0	; () banked
 12928  015D32  4B7F               	infsnz	LCD_write_message@buffer& (0+255),f,b
 12929  015D34  2B80               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
 12930  015D36                     l8109:
 12931  015D36  C07F  FFF6         	movff	LCD_write_message@buffer,tblptrl
 12932  015D3A  C080  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 12933  015D3E                     	if	0	;tblptru may be non-zero
 12934  015D3E                     	endif
 12935  015D3E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12936  015D3E  0E00               	movlw	low (__mediumconst shr (0+16))
 12937  015D40  6EF8               	movwf	tblptru,c
 12938  015D42                     	endif
 12939  015D42  0008               	tblrd		*
 12940  015D44  50F5               	movf	tablat,w,c
 12941  015D46  0900               	iorlw	0
 12942  015D48  B4D8               	btfsc	status,2,c
 12943  015D4A  0012               	return	
 12944  015D4C  D7E7               	goto	l8105
 12945  015D4E                     __end_of_LCD_write_message:
 12946                           	opt stack 0
 12947                           tblptru	equ	0xFF8
 12948                           tblptrh	equ	0xFF7
 12949                           tblptrl	equ	0xFF6
 12950                           tablat	equ	0xFF5
 12951                           prodh	equ	0xFF4
 12952                           prodl	equ	0xFF3
 12953                           intcon	equ	0xFF2
 12954                           postinc0	equ	0xFEE
 12955                           wreg	equ	0xFE8
 12956                           indf2	equ	0xFDF
 12957                           postinc2	equ	0xFDE
 12958                           fsr2h	equ	0xFDA
 12959                           fsr2l	equ	0xFD9
 12960                           status	equ	0xFD8
 12961                           
 12962 ;; *************** function _LCD_write_integer *****************
 12963 ;; Defined at:
 12964 ;;		line 210 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 12965 ;; Parameters:    Size  Location     Type
 12966 ;;  value           2   38[BANK0 ] int 
 12967 ;;  number_of_di    1   40[BANK0 ] unsigned char 
 12968 ;;  zero_cleanin    1   41[BANK0 ] unsigned char 
 12969 ;; Auto vars:     Size  Location     Type
 12970 ;;  convertedInt    6   47[BANK0 ] unsigned char [6]
 12971 ;;  index           1   53[BANK0 ] unsigned char 
 12972 ;; Return value:  Size  Location     Type
 12973 ;;		None               void
 12974 ;; Registers used:
 12975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12976 ;; Tracked objects:
 12977 ;;		On entry : 0/0
 12978 ;;		On exit  : 0/0
 12979 ;;		Unchanged: 0/0
 12980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12981 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12982 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12983 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12984 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12985 ;;Total ram usage:       16 bytes
 12986 ;; Hardware stack levels used:    1
 12987 ;; Hardware stack levels required when called:    9
 12988 ;; This function calls:
 12989 ;;		_LCD_write_string
 12990 ;;		_itoa
 12991 ;; This function is called by:
 12992 ;;		_LCD_Handler
 12993 ;; This function uses a non-reentrant model
 12994 ;;
 12995                           
 12996                           	psect	text27
 12997  014758                     __ptext27:
 12998                           	opt stack 0
 12999  014758                     _LCD_write_integer:
 13000                           	opt stack 20
 13001                           
 13002                           ;src\LCD_44780.c: 213: unsigned char convertedInt [6] = {0,0,0,0,0,0};
 13003                           
 13004                           ;incstack = 0
 13005  014758  EE20  F008         	lfsr	2,LCD_write_integer@F17272
 13006  01475C  EE10  F08F         	lfsr	1,LCD_write_integer@convertedInt
 13007  014760  0E05               	movlw	5
 13008  014762                     u10561:
 13009  014762  CFDB FFE3          	movff	plusw2,plusw1
 13010  014766  06E8               	decf	wreg,f,c
 13011  014768  E2FC               	bc	u10561
 13012                           
 13013                           ;src\LCD_44780.c: 216: unsigned char index;
 13014                           ;src\LCD_44780.c: 224: itoa ((unsigned char*) convertedInt, value,10);
 13015  01476A  0E8F               	movlw	low LCD_write_integer@convertedInt
 13016  01476C  0100               	movlb	0	; () banked
 13017  01476E  6F7E               	movwf	itoa@buf& (0+255),b
 13018  014770  0E00               	movlw	high LCD_write_integer@convertedInt
 13019  014772  0100               	movlb	0	; () banked
 13020  014774  6F7F               	movwf	(itoa@buf+1)& (0+255),b
 13021  014776  C086  F080         	movff	LCD_write_integer@value,itoa@val
 13022  01477A  C087  F081         	movff	LCD_write_integer@value+1,itoa@val+1
 13023  01477E  0E00               	movlw	0
 13024  014780  0100               	movlb	0	; () banked
 13025  014782  6F83               	movwf	(itoa@base+1)& (0+255),b
 13026  014784  0E0A               	movlw	10
 13027  014786  6F82               	movwf	itoa@base& (0+255),b
 13028  014788  ECD7  F0AD         	call	_itoa	;wreg free
 13029                           
 13030                           ;src\LCD_44780.c: 228: if (number_of_digits >0 ) {
 13031  01478C  0100               	movlb	0	; () banked
 13032  01478E  5188               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13033  014790  0100               	movlb	0	; () banked
 13034  014792  B4D8               	btfsc	status,2,c
 13035  014794  D0B8               	goto	l8141
 13036                           
 13037                           ; BSR set to: 0
 13038                           ;src\LCD_44780.c: 230: convertedInt[number_of_digits] = '\0';
 13039  014796  0100               	movlb	0	; () banked
 13040  014798  5188               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13041  01479A  0D01               	mullw	1
 13042  01479C  0E8F               	movlw	low LCD_write_integer@convertedInt
 13043  01479E  24F3               	addwf	prodl,w,c
 13044  0147A0  6ED9               	movwf	fsr2l,c
 13045  0147A2  0E00               	movlw	high LCD_write_integer@convertedInt
 13046  0147A4  20F4               	addwfc	prodh,w,c
 13047  0147A6  6EDA               	movwf	fsr2h,c
 13048  0147A8  0E00               	movlw	0
 13049  0147AA  6EDF               	movwf	indf2,c
 13050                           
 13051                           ;src\LCD_44780.c: 234: while (!(convertedInt[number_of_digits-1] <= '9' && convertedInt[
      +                          number_of_digits-1] >= '0')){
 13052  0147AC  D070               	goto	l8137
 13053  0147AE                     l8119:
 13054                           
 13055                           ; BSR set to: 0
 13056                           ;src\LCD_44780.c: 236: for (index = number_of_digits-1; index > 0; index--){
 13057  0147AE  0100               	movlb	0	; () banked
 13058  0147B0  0588               	decf	LCD_write_integer@number_of_digits& (0+255),w,b
 13059  0147B2  0100               	movlb	0	; () banked
 13060  0147B4  6F95               	movwf	LCD_write_integer@index& (0+255),b
 13061  0147B6                     l8121:
 13062                           
 13063                           ; BSR set to: 0
 13064  0147B6  0100               	movlb	0	; () banked
 13065  0147B8  5195               	movf	LCD_write_integer@index& (0+255),w,b
 13066  0147BA  0100               	movlb	0	; () banked
 13067  0147BC  B4D8               	btfsc	status,2,c
 13068  0147BE  D067               	goto	l8137
 13069                           
 13070                           ; BSR set to: 0
 13071                           ;src\LCD_44780.c: 237: convertedInt[index] = convertedInt[index-1];
 13072                           
 13073                           ; BSR set to: 0
 13074                           
 13075                           ; BSR set to: 0
 13076  0147C0  0EFF               	movlw	255
 13077  0147C2  0100               	movlb	0	; () banked
 13078  0147C4  6F8A               	movwf	??_LCD_write_integer& (0+255),b
 13079  0147C6  0EFF               	movlw	255
 13080  0147C8  0100               	movlb	0	; () banked
 13081  0147CA  6F8B               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13082  0147CC  0100               	movlb	0	; () banked
 13083  0147CE  5195               	movf	LCD_write_integer@index& (0+255),w,b
 13084  0147D0  0100               	movlb	0	; () banked
 13085  0147D2  6F8C               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13086  0147D4  6B8D               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13087  0147D6  0100               	movlb	0	; () banked
 13088  0147D8  518A               	movf	??_LCD_write_integer& (0+255),w,b
 13089  0147DA  0100               	movlb	0	; () banked
 13090  0147DC  278C               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13091  0147DE  0100               	movlb	0	; () banked
 13092  0147E0  518B               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13093  0147E2  0100               	movlb	0	; () banked
 13094  0147E4  238D               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13095  0147E6  0E8F               	movlw	low LCD_write_integer@convertedInt
 13096  0147E8  0100               	movlb	0	; () banked
 13097  0147EA  258C               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13098  0147EC  6ED9               	movwf	fsr2l,c
 13099  0147EE  0E00               	movlw	high LCD_write_integer@convertedInt
 13100  0147F0  0100               	movlb	0	; () banked
 13101  0147F2  218D               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13102  0147F4  6EDA               	movwf	fsr2h,c
 13103  0147F6  0100               	movlb	0	; () banked
 13104  0147F8  5195               	movf	LCD_write_integer@index& (0+255),w,b
 13105  0147FA  0D01               	mullw	1
 13106  0147FC  0E8F               	movlw	low LCD_write_integer@convertedInt
 13107  0147FE  24F3               	addwf	prodl,w,c
 13108  014800  6EE1               	movwf	fsr1l,c
 13109  014802  0E00               	movlw	high LCD_write_integer@convertedInt
 13110  014804  20F4               	addwfc	prodh,w,c
 13111  014806  6EE2               	movwf	fsr1h,c
 13112  014808  CFDF FFE7          	movff	indf2,indf1
 13113                           
 13114                           ; BSR set to: 0
 13115                           ;src\LCD_44780.c: 239: if (zero_cleaning == 0x01) {
 13116  01480C  0100               	movlb	0	; () banked
 13117  01480E  0589               	decf	LCD_write_integer@zero_cleaning& (0+255),w,b
 13118  014810  A4D8               	btfss	status,2,c
 13119  014812  D01D               	goto	l8131
 13120                           
 13121                           ; BSR set to: 0
 13122                           ;src\LCD_44780.c: 240: convertedInt[index-1] = ' ';
 13123  014814  0EFF               	movlw	255
 13124  014816  0100               	movlb	0	; () banked
 13125  014818  6F8A               	movwf	??_LCD_write_integer& (0+255),b
 13126  01481A  0EFF               	movlw	255
 13127  01481C  0100               	movlb	0	; () banked
 13128  01481E  6F8B               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13129  014820  0100               	movlb	0	; () banked
 13130  014822  5195               	movf	LCD_write_integer@index& (0+255),w,b
 13131  014824  0100               	movlb	0	; () banked
 13132  014826  6F8C               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13133  014828  6B8D               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13134  01482A  0100               	movlb	0	; () banked
 13135  01482C  518A               	movf	??_LCD_write_integer& (0+255),w,b
 13136  01482E  0100               	movlb	0	; () banked
 13137  014830  278C               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13138  014832  0100               	movlb	0	; () banked
 13139  014834  518B               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13140  014836  0100               	movlb	0	; () banked
 13141  014838  238D               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13142  01483A  0E8F               	movlw	low LCD_write_integer@convertedInt
 13143  01483C  0100               	movlb	0	; () banked
 13144  01483E  258C               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13145  014840  6ED9               	movwf	fsr2l,c
 13146  014842  0E00               	movlw	high LCD_write_integer@convertedInt
 13147  014844  0100               	movlb	0	; () banked
 13148  014846  218D               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13149  014848  6EDA               	movwf	fsr2h,c
 13150  01484A  0E20               	movlw	32
 13151  01484C  D01C               	goto	L14
 13152  01484E                     l8131:
 13153                           
 13154                           ; BSR set to: 0
 13155                           ;src\LCD_44780.c: 242: convertedInt[index-1] = '0';
 13156  01484E  0EFF               	movlw	255
 13157  014850  0100               	movlb	0	; () banked
 13158  014852  6F8A               	movwf	??_LCD_write_integer& (0+255),b
 13159  014854  0EFF               	movlw	255
 13160  014856  0100               	movlb	0	; () banked
 13161  014858  6F8B               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13162  01485A  0100               	movlb	0	; () banked
 13163  01485C  5195               	movf	LCD_write_integer@index& (0+255),w,b
 13164  01485E  0100               	movlb	0	; () banked
 13165  014860  6F8C               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13166  014862  6B8D               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13167  014864  0100               	movlb	0	; () banked
 13168  014866  518A               	movf	??_LCD_write_integer& (0+255),w,b
 13169  014868  0100               	movlb	0	; () banked
 13170  01486A  278C               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13171  01486C  0100               	movlb	0	; () banked
 13172  01486E  518B               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13173  014870  0100               	movlb	0	; () banked
 13174  014872  238D               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13175  014874  0E8F               	movlw	low LCD_write_integer@convertedInt
 13176  014876  0100               	movlb	0	; () banked
 13177  014878  258C               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13178  01487A  6ED9               	movwf	fsr2l,c
 13179  01487C  0E00               	movlw	high LCD_write_integer@convertedInt
 13180  01487E  0100               	movlb	0	; () banked
 13181  014880  218D               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13182  014882  6EDA               	movwf	fsr2h,c
 13183  014884  0E30               	movlw	48
 13184  014886                     L14:
 13185  014886  6EDF               	movwf	indf2,c
 13186                           
 13187                           ; BSR set to: 0
 13188                           
 13189                           ; BSR set to: 0
 13190  014888  0100               	movlb	0	; () banked
 13191  01488A  0795               	decf	LCD_write_integer@index& (0+255),f,b
 13192  01488C  D794               	goto	l8121
 13193  01488E                     l8137:
 13194                           
 13195                           ; BSR set to: 0
 13196  01488E  0EFF               	movlw	255
 13197  014890  0100               	movlb	0	; () banked
 13198  014892  6F8A               	movwf	??_LCD_write_integer& (0+255),b
 13199  014894  0EFF               	movlw	255
 13200  014896  0100               	movlb	0	; () banked
 13201  014898  6F8B               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13202  01489A  0100               	movlb	0	; () banked
 13203  01489C  5188               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13204  01489E  0100               	movlb	0	; () banked
 13205  0148A0  6F8C               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13206  0148A2  6B8D               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13207  0148A4  0100               	movlb	0	; () banked
 13208  0148A6  518A               	movf	??_LCD_write_integer& (0+255),w,b
 13209  0148A8  0100               	movlb	0	; () banked
 13210  0148AA  278C               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13211  0148AC  0100               	movlb	0	; () banked
 13212  0148AE  518B               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13213  0148B0  0100               	movlb	0	; () banked
 13214  0148B2  238D               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13215  0148B4  0E8F               	movlw	low LCD_write_integer@convertedInt
 13216  0148B6  0100               	movlb	0	; () banked
 13217  0148B8  258C               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13218  0148BA  6ED9               	movwf	fsr2l,c
 13219  0148BC  0E00               	movlw	high LCD_write_integer@convertedInt
 13220  0148BE  0100               	movlb	0	; () banked
 13221  0148C0  218D               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13222  0148C2  6EDA               	movwf	fsr2h,c
 13223  0148C4  0E3A               	movlw	58
 13224  0148C6  60DF               	cpfslt	indf2,c
 13225  0148C8  D772               	goto	l8119
 13226                           
 13227                           ; BSR set to: 0
 13228  0148CA  0EFF               	movlw	255
 13229  0148CC  0100               	movlb	0	; () banked
 13230  0148CE  6F8A               	movwf	??_LCD_write_integer& (0+255),b
 13231  0148D0  0EFF               	movlw	255
 13232  0148D2  0100               	movlb	0	; () banked
 13233  0148D4  6F8B               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13234  0148D6  0100               	movlb	0	; () banked
 13235  0148D8  5188               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13236  0148DA  0100               	movlb	0	; () banked
 13237  0148DC  6F8C               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13238  0148DE  6B8D               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13239  0148E0  0100               	movlb	0	; () banked
 13240  0148E2  518A               	movf	??_LCD_write_integer& (0+255),w,b
 13241  0148E4  0100               	movlb	0	; () banked
 13242  0148E6  278C               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13243  0148E8  0100               	movlb	0	; () banked
 13244  0148EA  518B               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13245  0148EC  0100               	movlb	0	; () banked
 13246  0148EE  238D               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13247  0148F0  0E8F               	movlw	low LCD_write_integer@convertedInt
 13248  0148F2  0100               	movlb	0	; () banked
 13249  0148F4  258C               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13250  0148F6  6ED9               	movwf	fsr2l,c
 13251  0148F8  0E00               	movlw	high LCD_write_integer@convertedInt
 13252  0148FA  0100               	movlb	0	; () banked
 13253  0148FC  218D               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13254  0148FE  6EDA               	movwf	fsr2h,c
 13255  014900  0E2F               	movlw	47
 13256  014902  64DF               	cpfsgt	indf2,c
 13257  014904  D754               	goto	l8119
 13258  014906                     l8141:
 13259                           
 13260                           ; BSR set to: 0
 13261                           ;src\LCD_44780.c: 243: }
 13262                           ;src\LCD_44780.c: 245: }
 13263                           ;src\LCD_44780.c: 246: }
 13264                           ;src\LCD_44780.c: 247: }
 13265                           ;src\LCD_44780.c: 249: LCD_write_string (convertedInt);
 13266  014906  0E8F               	movlw	low LCD_write_integer@convertedInt
 13267  014908  0100               	movlb	0	; () banked
 13268  01490A  6F7F               	movwf	LCD_write_string@buffer& (0+255),b
 13269  01490C  0E00               	movlw	high LCD_write_integer@convertedInt
 13270  01490E  0100               	movlb	0	; () banked
 13271  014910  6F80               	movwf	(LCD_write_string@buffer+1)& (0+255),b
 13272  014912  ECEE  F0AE         	call	_LCD_write_string	;wreg free
 13273  014916  0012               	return		;funcret
 13274  014918                     __end_of_LCD_write_integer:
 13275                           	opt stack 0
 13276                           tblptru	equ	0xFF8
 13277                           tblptrh	equ	0xFF7
 13278                           tblptrl	equ	0xFF6
 13279                           tablat	equ	0xFF5
 13280                           prodh	equ	0xFF4
 13281                           prodl	equ	0xFF3
 13282                           intcon	equ	0xFF2
 13283                           postinc0	equ	0xFEE
 13284                           wreg	equ	0xFE8
 13285                           indf1	equ	0xFE7
 13286                           plusw1	equ	0xFE3
 13287                           fsr1h	equ	0xFE2
 13288                           fsr1l	equ	0xFE1
 13289                           indf2	equ	0xFDF
 13290                           postinc2	equ	0xFDE
 13291                           plusw2	equ	0xFDB
 13292                           fsr2h	equ	0xFDA
 13293                           fsr2l	equ	0xFD9
 13294                           status	equ	0xFD8
 13295                           
 13296 ;; *************** function _itoa *****************
 13297 ;; Defined at:
 13298 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\itoa.c"
 13299 ;; Parameters:    Size  Location     Type
 13300 ;;  buf             2   30[BANK0 ] PTR unsigned char 
 13301 ;;		 -> LCD_write_integer@convertedInt(6), 
 13302 ;;  val             2   32[BANK0 ] int 
 13303 ;;  base            2   34[BANK0 ] int 
 13304 ;; Auto vars:     Size  Location     Type
 13305 ;;  cp              2   36[BANK0 ] PTR unsigned char 
 13306 ;;		 -> LCD_write_integer@convertedInt(6), 
 13307 ;; Return value:  Size  Location     Type
 13308 ;;                  2   30[BANK0 ] PTR unsigned char 
 13309 ;; Registers used:
 13310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13311 ;; Tracked objects:
 13312 ;;		On entry : 0/0
 13313 ;;		On exit  : 0/0
 13314 ;;		Unchanged: 0/0
 13315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13316 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13317 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13319 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13320 ;;Total ram usage:        8 bytes
 13321 ;; Hardware stack levels used:    1
 13322 ;; Hardware stack levels required when called:    5
 13323 ;; This function calls:
 13324 ;;		_utoa
 13325 ;; This function is called by:
 13326 ;;		_LCD_write_integer
 13327 ;; This function uses a non-reentrant model
 13328 ;;
 13329                           
 13330                           	psect	text28
 13331  015BAE                     __ptext28:
 13332                           	opt stack 0
 13333  015BAE                     _itoa:
 13334                           	opt stack 23
 13335                           
 13336                           ;incstack = 0
 13337  015BAE  C07E  F084         	movff	itoa@buf,itoa@cp
 13338  015BB2  C07F  F085         	movff	itoa@buf+1,itoa@cp+1
 13339  015BB6  0100               	movlb	0	; () banked
 13340  015BB8  AF81               	btfss	(itoa@val+1)& (0+255),7,b
 13341  015BBA  D00E               	goto	l5407
 13342                           
 13343                           ; BSR set to: 0
 13344  015BBC  C07E  FFD9         	movff	itoa@buf,fsr2l
 13345  015BC0  C07F  FFDA         	movff	itoa@buf+1,fsr2h
 13346  015BC4  0E2D               	movlw	45
 13347  015BC6  6EDF               	movwf	indf2,c
 13348                           
 13349                           ; BSR set to: 0
 13350  015BC8  0100               	movlb	0	; () banked
 13351  015BCA  4B7E               	infsnz	itoa@buf& (0+255),f,b
 13352  015BCC  2B7F               	incf	(itoa@buf+1)& (0+255),f,b
 13353                           
 13354                           ; BSR set to: 0
 13355  015BCE  0100               	movlb	0	; () banked
 13356  015BD0  6D80               	negf	itoa@val& (0+255),b
 13357  015BD2  1F81               	comf	(itoa@val+1)& (0+255),f,b
 13358  015BD4  B0D8               	btfsc	status,0,c
 13359  015BD6  2B81               	incf	(itoa@val+1)& (0+255),f,b
 13360  015BD8                     l5407:
 13361                           
 13362                           ; BSR set to: 0
 13363  015BD8  C07E  F075         	movff	itoa@buf,utoa@buf
 13364  015BDC  C07F  F076         	movff	itoa@buf+1,utoa@buf+1
 13365  015BE0  C080  F077         	movff	itoa@val,utoa@val
 13366  015BE4  C081  F078         	movff	itoa@val+1,utoa@val+1
 13367  015BE8  C082  F079         	movff	itoa@base,utoa@base
 13368  015BEC  C083  F07A         	movff	itoa@base+1,utoa@base+1
 13369  015BF0  ECC4  F0AA         	call	_utoa	;wreg free
 13370  015BF4  0012               	return	
 13371  015BF6                     __end_of_itoa:
 13372                           	opt stack 0
 13373                           tblptru	equ	0xFF8
 13374                           tblptrh	equ	0xFF7
 13375                           tblptrl	equ	0xFF6
 13376                           tablat	equ	0xFF5
 13377                           prodh	equ	0xFF4
 13378                           prodl	equ	0xFF3
 13379                           intcon	equ	0xFF2
 13380                           postinc0	equ	0xFEE
 13381                           wreg	equ	0xFE8
 13382                           indf1	equ	0xFE7
 13383                           plusw1	equ	0xFE3
 13384                           fsr1h	equ	0xFE2
 13385                           fsr1l	equ	0xFE1
 13386                           indf2	equ	0xFDF
 13387                           postinc2	equ	0xFDE
 13388                           plusw2	equ	0xFDB
 13389                           fsr2h	equ	0xFDA
 13390                           fsr2l	equ	0xFD9
 13391                           status	equ	0xFD8
 13392                           
 13393 ;; *************** function _utoa *****************
 13394 ;; Defined at:
 13395 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\itoa.c"
 13396 ;; Parameters:    Size  Location     Type
 13397 ;;  buf             2   21[BANK0 ] PTR unsigned char 
 13398 ;;		 -> LCD_write_integer@convertedInt(6), 
 13399 ;;  val             2   23[BANK0 ] unsigned int 
 13400 ;;  base            2   25[BANK0 ] int 
 13401 ;; Auto vars:     Size  Location     Type
 13402 ;;  v               2   27[BANK0 ] unsigned int 
 13403 ;;  c               1   29[BANK0 ] unsigned char 
 13404 ;; Return value:  Size  Location     Type
 13405 ;;                  2   21[BANK0 ] PTR unsigned char 
 13406 ;; Registers used:
 13407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13408 ;; Tracked objects:
 13409 ;;		On entry : 0/0
 13410 ;;		On exit  : 0/0
 13411 ;;		Unchanged: 0/0
 13412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13413 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13414 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13416 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13417 ;;Total ram usage:        9 bytes
 13418 ;; Hardware stack levels used:    1
 13419 ;; Hardware stack levels required when called:    4
 13420 ;; This function calls:
 13421 ;;		___lwdiv
 13422 ;;		___lwmod
 13423 ;; This function is called by:
 13424 ;;		_itoa
 13425 ;; This function uses a non-reentrant model
 13426 ;;
 13427                           
 13428                           	psect	text29
 13429  015588                     __ptext29:
 13430                           	opt stack 0
 13431  015588                     _utoa:
 13432                           	opt stack 23
 13433                           
 13434                           ;incstack = 0
 13435  015588  C077  F07B         	movff	utoa@val,utoa@v
 13436  01558C  C078  F07C         	movff	utoa@val+1,utoa@v+1
 13437  015590                     l4949:
 13438  015590  C07B  F06E         	movff	utoa@v,___lwdiv@dividend
 13439  015594  C07C  F06F         	movff	utoa@v+1,___lwdiv@dividend+1
 13440  015598  C079  F070         	movff	utoa@base,___lwdiv@divisor
 13441  01559C  C07A  F071         	movff	utoa@base+1,___lwdiv@divisor+1
 13442  0155A0  EC1C  F0AD         	call	___lwdiv	;wreg free
 13443  0155A4  C06E  F07B         	movff	?___lwdiv,utoa@v
 13444  0155A8  C06F  F07C         	movff	?___lwdiv+1,utoa@v+1
 13445  0155AC  0100               	movlb	0	; () banked
 13446  0155AE  4B75               	infsnz	utoa@buf& (0+255),f,b
 13447  0155B0  2B76               	incf	(utoa@buf+1)& (0+255),f,b
 13448                           
 13449                           ; BSR set to: 0
 13450  0155B2  0100               	movlb	0	; () banked
 13451  0155B4  517B               	movf	utoa@v& (0+255),w,b
 13452  0155B6  0100               	movlb	0	; () banked
 13453  0155B8  117C               	iorwf	(utoa@v+1)& (0+255),w,b
 13454  0155BA  A4D8               	btfss	status,2,c
 13455  0155BC  D7E9               	goto	l4949
 13456                           
 13457                           ; BSR set to: 0
 13458                           
 13459                           ; BSR set to: 0
 13460  0155BE  C075  FFD9         	movff	utoa@buf,fsr2l
 13461  0155C2  C076  FFDA         	movff	utoa@buf+1,fsr2h
 13462  0155C6  0E00               	movlw	0
 13463  0155C8  6EDF               	movwf	indf2,c
 13464                           
 13465                           ; BSR set to: 0
 13466  0155CA  0100               	movlb	0	; () banked
 13467  0155CC  0775               	decf	utoa@buf& (0+255),f,b
 13468  0155CE  A0D8               	btfss	status,0,c
 13469  0155D0  0776               	decf	(utoa@buf+1)& (0+255),f,b
 13470  0155D2                     l4959:
 13471                           
 13472                           ; BSR set to: 0
 13473  0155D2  C077  F06E         	movff	utoa@val,___lwmod@dividend
 13474  0155D6  C078  F06F         	movff	utoa@val+1,___lwmod@dividend+1
 13475  0155DA  C079  F070         	movff	utoa@base,___lwmod@divisor
 13476  0155DE  C07A  F071         	movff	utoa@base+1,___lwmod@divisor+1
 13477  0155E2  EC58  F0AD         	call	___lwmod	;wreg free
 13478  0155E6  0100               	movlb	0	; () banked
 13479  0155E8  516E               	movf	?___lwmod& (0+255),w,b
 13480  0155EA  0100               	movlb	0	; () banked
 13481  0155EC  6F7D               	movwf	utoa@c& (0+255),b
 13482                           
 13483                           ; BSR set to: 0
 13484  0155EE  C077  F06E         	movff	utoa@val,___lwdiv@dividend
 13485  0155F2  C078  F06F         	movff	utoa@val+1,___lwdiv@dividend+1
 13486  0155F6  C079  F070         	movff	utoa@base,___lwdiv@divisor
 13487  0155FA  C07A  F071         	movff	utoa@base+1,___lwdiv@divisor+1
 13488  0155FE  EC1C  F0AD         	call	___lwdiv	;wreg free
 13489  015602  C06E  F077         	movff	?___lwdiv,utoa@val
 13490  015606  C06F  F078         	movff	?___lwdiv+1,utoa@val+1
 13491  01560A  0E09               	movlw	9
 13492  01560C  0100               	movlb	0	; () banked
 13493  01560E  657D               	cpfsgt	utoa@c& (0+255),b
 13494  015610  D003               	goto	l1285
 13495                           
 13496                           ; BSR set to: 0
 13497  015612  0E07               	movlw	7
 13498  015614  0100               	movlb	0	; () banked
 13499  015616  277D               	addwf	utoa@c& (0+255),f,b
 13500  015618                     l1285:
 13501                           
 13502                           ; BSR set to: 0
 13503  015618  0E30               	movlw	48
 13504  01561A  0100               	movlb	0	; () banked
 13505  01561C  277D               	addwf	utoa@c& (0+255),f,b
 13506                           
 13507                           ; BSR set to: 0
 13508  01561E  C075  FFD9         	movff	utoa@buf,fsr2l
 13509  015622  C076  FFDA         	movff	utoa@buf+1,fsr2h
 13510  015626  C07D  FFDF         	movff	utoa@c,indf2
 13511                           
 13512                           ; BSR set to: 0
 13513  01562A  0100               	movlb	0	; () banked
 13514  01562C  0775               	decf	utoa@buf& (0+255),f,b
 13515  01562E  A0D8               	btfss	status,0,c
 13516  015630  0776               	decf	(utoa@buf+1)& (0+255),f,b
 13517                           
 13518                           ; BSR set to: 0
 13519  015632  0100               	movlb	0	; () banked
 13520  015634  5177               	movf	utoa@val& (0+255),w,b
 13521  015636  0100               	movlb	0	; () banked
 13522  015638  1178               	iorwf	(utoa@val+1)& (0+255),w,b
 13523  01563A  A4D8               	btfss	status,2,c
 13524  01563C  D7CA               	goto	l4959
 13525                           
 13526                           ; BSR set to: 0
 13527                           ;	Return value of _utoa is never used
 13528                           
 13529                           ; BSR set to: 0
 13530  01563E  0100               	movlb	0	; () banked
 13531  015640  4B75               	infsnz	utoa@buf& (0+255),f,b
 13532  015642  2B76               	incf	(utoa@buf+1)& (0+255),f,b
 13533  015644  0012               	return	
 13534  015646                     __end_of_utoa:
 13535                           	opt stack 0
 13536                           tblptru	equ	0xFF8
 13537                           tblptrh	equ	0xFF7
 13538                           tblptrl	equ	0xFF6
 13539                           tablat	equ	0xFF5
 13540                           prodh	equ	0xFF4
 13541                           prodl	equ	0xFF3
 13542                           intcon	equ	0xFF2
 13543                           postinc0	equ	0xFEE
 13544                           wreg	equ	0xFE8
 13545                           indf1	equ	0xFE7
 13546                           plusw1	equ	0xFE3
 13547                           fsr1h	equ	0xFE2
 13548                           fsr1l	equ	0xFE1
 13549                           indf2	equ	0xFDF
 13550                           postinc2	equ	0xFDE
 13551                           plusw2	equ	0xFDB
 13552                           fsr2h	equ	0xFDA
 13553                           fsr2l	equ	0xFD9
 13554                           status	equ	0xFD8
 13555                           
 13556 ;; *************** function ___lwmod *****************
 13557 ;; Defined at:
 13558 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 13559 ;; Parameters:    Size  Location     Type
 13560 ;;  dividend        2   14[BANK0 ] unsigned int 
 13561 ;;  divisor         2   16[BANK0 ] unsigned int 
 13562 ;; Auto vars:     Size  Location     Type
 13563 ;;  counter         1   18[BANK0 ] unsigned char 
 13564 ;; Return value:  Size  Location     Type
 13565 ;;                  2   14[BANK0 ] unsigned int 
 13566 ;; Registers used:
 13567 ;;		wreg, status,2, status,0
 13568 ;; Tracked objects:
 13569 ;;		On entry : 0/0
 13570 ;;		On exit  : 0/0
 13571 ;;		Unchanged: 0/0
 13572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13573 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13574 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13576 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13577 ;;Total ram usage:        5 bytes
 13578 ;; Hardware stack levels used:    1
 13579 ;; Hardware stack levels required when called:    3
 13580 ;; This function calls:
 13581 ;;		Nothing
 13582 ;; This function is called by:
 13583 ;;		_utoa
 13584 ;; This function uses a non-reentrant model
 13585 ;;
 13586                           
 13587                           	psect	text30
 13588  015AB0                     __ptext30:
 13589                           	opt stack 0
 13590  015AB0                     ___lwmod:
 13591                           	opt stack 23
 13592                           
 13593                           ; BSR set to: 0
 13594                           ;incstack = 0
 13595  015AB0  0100               	movlb	0	; () banked
 13596  015AB2  5170               	movf	___lwmod@divisor& (0+255),w,b
 13597  015AB4  0100               	movlb	0	; () banked
 13598  015AB6  1171               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 13599  015AB8  B4D8               	btfsc	status,2,c
 13600  015ABA  D026               	goto	l1374
 13601                           
 13602                           ; BSR set to: 0
 13603  015ABC  0E01               	movlw	1
 13604  015ABE  0100               	movlb	0	; () banked
 13605  015AC0  6F72               	movwf	___lwmod@counter& (0+255),b
 13606  015AC2  D006               	goto	l4507
 13607  015AC4                     l4505:
 13608                           
 13609                           ; BSR set to: 0
 13610  015AC4  0100               	movlb	0	; () banked
 13611  015AC6  90D8               	bcf	status,0,c
 13612  015AC8  3770               	rlcf	___lwmod@divisor& (0+255),f,b
 13613  015ACA  3771               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 13614  015ACC  0100               	movlb	0	; () banked
 13615  015ACE  2B72               	incf	___lwmod@counter& (0+255),f,b
 13616  015AD0                     l4507:
 13617                           
 13618                           ; BSR set to: 0
 13619  015AD0  0100               	movlb	0	; () banked
 13620  015AD2  AF71               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 13621  015AD4  D7F7               	goto	l4505
 13622  015AD6                     l4509:
 13623                           
 13624                           ; BSR set to: 0
 13625  015AD6  0100               	movlb	0	; () banked
 13626  015AD8  5170               	movf	___lwmod@divisor& (0+255),w,b
 13627  015ADA  0100               	movlb	0	; () banked
 13628  015ADC  5D6E               	subwf	___lwmod@dividend& (0+255),w,b
 13629  015ADE  0100               	movlb	0	; () banked
 13630  015AE0  5171               	movf	(___lwmod@divisor+1)& (0+255),w,b
 13631  015AE2  0100               	movlb	0	; () banked
 13632  015AE4  596F               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 13633  015AE6  A0D8               	btfss	status,0,c
 13634  015AE8  D008               	goto	l4513
 13635                           
 13636                           ; BSR set to: 0
 13637  015AEA  0100               	movlb	0	; () banked
 13638  015AEC  5170               	movf	___lwmod@divisor& (0+255),w,b
 13639  015AEE  0100               	movlb	0	; () banked
 13640  015AF0  5F6E               	subwf	___lwmod@dividend& (0+255),f,b
 13641  015AF2  0100               	movlb	0	; () banked
 13642  015AF4  5171               	movf	(___lwmod@divisor+1)& (0+255),w,b
 13643  015AF6  0100               	movlb	0	; () banked
 13644  015AF8  5B6F               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 13645  015AFA                     l4513:
 13646                           
 13647                           ; BSR set to: 0
 13648  015AFA  0100               	movlb	0	; () banked
 13649  015AFC  90D8               	bcf	status,0,c
 13650  015AFE  3371               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 13651  015B00  3370               	rrcf	___lwmod@divisor& (0+255),f,b
 13652                           
 13653                           ; BSR set to: 0
 13654  015B02  0100               	movlb	0	; () banked
 13655  015B04  2F72               	decfsz	___lwmod@counter& (0+255),f,b
 13656  015B06  D7E7               	goto	l4509
 13657  015B08                     l1374:
 13658                           
 13659                           ; BSR set to: 0
 13660  015B08  C06E  F06E         	movff	___lwmod@dividend,?___lwmod
 13661  015B0C  C06F  F06F         	movff	___lwmod@dividend+1,?___lwmod+1
 13662                           
 13663                           ; BSR set to: 0
 13664  015B10  0012               	return		;funcret
 13665  015B12                     __end_of___lwmod:
 13666                           	opt stack 0
 13667                           tblptru	equ	0xFF8
 13668                           tblptrh	equ	0xFF7
 13669                           tblptrl	equ	0xFF6
 13670                           tablat	equ	0xFF5
 13671                           prodh	equ	0xFF4
 13672                           prodl	equ	0xFF3
 13673                           intcon	equ	0xFF2
 13674                           postinc0	equ	0xFEE
 13675                           wreg	equ	0xFE8
 13676                           indf1	equ	0xFE7
 13677                           plusw1	equ	0xFE3
 13678                           fsr1h	equ	0xFE2
 13679                           fsr1l	equ	0xFE1
 13680                           indf2	equ	0xFDF
 13681                           postinc2	equ	0xFDE
 13682                           plusw2	equ	0xFDB
 13683                           fsr2h	equ	0xFDA
 13684                           fsr2l	equ	0xFD9
 13685                           status	equ	0xFD8
 13686                           
 13687 ;; *************** function ___lwdiv *****************
 13688 ;; Defined at:
 13689 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 13690 ;; Parameters:    Size  Location     Type
 13691 ;;  dividend        2   14[BANK0 ] unsigned int 
 13692 ;;  divisor         2   16[BANK0 ] unsigned int 
 13693 ;; Auto vars:     Size  Location     Type
 13694 ;;  quotient        2   18[BANK0 ] unsigned int 
 13695 ;;  counter         1   20[BANK0 ] unsigned char 
 13696 ;; Return value:  Size  Location     Type
 13697 ;;                  2   14[BANK0 ] unsigned int 
 13698 ;; Registers used:
 13699 ;;		wreg, status,2, status,0
 13700 ;; Tracked objects:
 13701 ;;		On entry : 0/0
 13702 ;;		On exit  : 0/0
 13703 ;;		Unchanged: 0/0
 13704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13705 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13706 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13708 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13709 ;;Total ram usage:        7 bytes
 13710 ;; Hardware stack levels used:    1
 13711 ;; Hardware stack levels required when called:    3
 13712 ;; This function calls:
 13713 ;;		Nothing
 13714 ;; This function is called by:
 13715 ;;		_utoa
 13716 ;; This function uses a non-reentrant model
 13717 ;;
 13718                           
 13719                           	psect	text31
 13720  015A38                     __ptext31:
 13721                           	opt stack 0
 13722  015A38                     ___lwdiv:
 13723                           	opt stack 23
 13724                           
 13725                           ; BSR set to: 0
 13726                           ;incstack = 0
 13727  015A38  0E00               	movlw	0
 13728  015A3A  0100               	movlb	0	; () banked
 13729  015A3C  6F73               	movwf	(___lwdiv@quotient+1)& (0+255),b
 13730  015A3E  0E00               	movlw	0
 13731  015A40  6F72               	movwf	___lwdiv@quotient& (0+255),b
 13732                           
 13733                           ; BSR set to: 0
 13734  015A42  0100               	movlb	0	; () banked
 13735  015A44  5170               	movf	___lwdiv@divisor& (0+255),w,b
 13736  015A46  0100               	movlb	0	; () banked
 13737  015A48  1171               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 13738  015A4A  B4D8               	btfsc	status,2,c
 13739  015A4C  D02C               	goto	l1364
 13740                           
 13741                           ; BSR set to: 0
 13742  015A4E  0E01               	movlw	1
 13743  015A50  0100               	movlb	0	; () banked
 13744  015A52  6F74               	movwf	___lwdiv@counter& (0+255),b
 13745  015A54  D006               	goto	l4487
 13746  015A56                     l4485:
 13747                           
 13748                           ; BSR set to: 0
 13749  015A56  0100               	movlb	0	; () banked
 13750  015A58  90D8               	bcf	status,0,c
 13751  015A5A  3770               	rlcf	___lwdiv@divisor& (0+255),f,b
 13752  015A5C  3771               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 13753  015A5E  0100               	movlb	0	; () banked
 13754  015A60  2B74               	incf	___lwdiv@counter& (0+255),f,b
 13755  015A62                     l4487:
 13756                           
 13757                           ; BSR set to: 0
 13758  015A62  0100               	movlb	0	; () banked
 13759  015A64  AF71               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 13760  015A66  D7F7               	goto	l4485
 13761  015A68                     l4489:
 13762                           
 13763                           ; BSR set to: 0
 13764  015A68  0100               	movlb	0	; () banked
 13765  015A6A  90D8               	bcf	status,0,c
 13766  015A6C  3772               	rlcf	___lwdiv@quotient& (0+255),f,b
 13767  015A6E  3773               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 13768                           
 13769                           ; BSR set to: 0
 13770  015A70  0100               	movlb	0	; () banked
 13771  015A72  5170               	movf	___lwdiv@divisor& (0+255),w,b
 13772  015A74  0100               	movlb	0	; () banked
 13773  015A76  5D6E               	subwf	___lwdiv@dividend& (0+255),w,b
 13774  015A78  0100               	movlb	0	; () banked
 13775  015A7A  5171               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 13776  015A7C  0100               	movlb	0	; () banked
 13777  015A7E  596F               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 13778  015A80  A0D8               	btfss	status,0,c
 13779  015A82  D00A               	goto	l4497
 13780                           
 13781                           ; BSR set to: 0
 13782  015A84  0100               	movlb	0	; () banked
 13783  015A86  5170               	movf	___lwdiv@divisor& (0+255),w,b
 13784  015A88  0100               	movlb	0	; () banked
 13785  015A8A  5F6E               	subwf	___lwdiv@dividend& (0+255),f,b
 13786  015A8C  0100               	movlb	0	; () banked
 13787  015A8E  5171               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 13788  015A90  0100               	movlb	0	; () banked
 13789  015A92  5B6F               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 13790                           
 13791                           ; BSR set to: 0
 13792  015A94  0100               	movlb	0	; () banked
 13793  015A96  8172               	bsf	___lwdiv@quotient& (0+255),0,b
 13794  015A98                     l4497:
 13795                           
 13796                           ; BSR set to: 0
 13797  015A98  0100               	movlb	0	; () banked
 13798  015A9A  90D8               	bcf	status,0,c
 13799  015A9C  3371               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 13800  015A9E  3370               	rrcf	___lwdiv@divisor& (0+255),f,b
 13801                           
 13802                           ; BSR set to: 0
 13803  015AA0  0100               	movlb	0	; () banked
 13804  015AA2  2F74               	decfsz	___lwdiv@counter& (0+255),f,b
 13805  015AA4  D7E1               	goto	l4489
 13806  015AA6                     l1364:
 13807                           
 13808                           ; BSR set to: 0
 13809  015AA6  C072  F06E         	movff	___lwdiv@quotient,?___lwdiv
 13810  015AAA  C073  F06F         	movff	___lwdiv@quotient+1,?___lwdiv+1
 13811                           
 13812                           ; BSR set to: 0
 13813  015AAE  0012               	return		;funcret
 13814  015AB0                     __end_of___lwdiv:
 13815                           	opt stack 0
 13816                           tblptru	equ	0xFF8
 13817                           tblptrh	equ	0xFF7
 13818                           tblptrl	equ	0xFF6
 13819                           tablat	equ	0xFF5
 13820                           prodh	equ	0xFF4
 13821                           prodl	equ	0xFF3
 13822                           intcon	equ	0xFF2
 13823                           postinc0	equ	0xFEE
 13824                           wreg	equ	0xFE8
 13825                           indf1	equ	0xFE7
 13826                           plusw1	equ	0xFE3
 13827                           fsr1h	equ	0xFE2
 13828                           fsr1l	equ	0xFE1
 13829                           indf2	equ	0xFDF
 13830                           postinc2	equ	0xFDE
 13831                           plusw2	equ	0xFDB
 13832                           fsr2h	equ	0xFDA
 13833                           fsr2l	equ	0xFD9
 13834                           status	equ	0xFD8
 13835                           
 13836 ;; *************** function _LCD_write_string *****************
 13837 ;; Defined at:
 13838 ;;		line 194 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 13839 ;; Parameters:    Size  Location     Type
 13840 ;;  buffer          2   31[BANK0 ] PTR unsigned char 
 13841 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
 13842 ;; Auto vars:     Size  Location     Type
 13843 ;;		None
 13844 ;; Return value:  Size  Location     Type
 13845 ;;		None               void
 13846 ;; Registers used:
 13847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13848 ;; Tracked objects:
 13849 ;;		On entry : 0/0
 13850 ;;		On exit  : 0/0
 13851 ;;		Unchanged: 0/0
 13852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13853 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13856 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13857 ;;Total ram usage:        2 bytes
 13858 ;; Hardware stack levels used:    1
 13859 ;; Hardware stack levels required when called:    8
 13860 ;; This function calls:
 13861 ;;		_LCD_write_char
 13862 ;; This function is called by:
 13863 ;;		_LCD_write_integer
 13864 ;;		_LCD_Handler
 13865 ;; This function uses a non-reentrant model
 13866 ;;
 13867                           
 13868                           	psect	text32
 13869  015DDC                     __ptext32:
 13870                           	opt stack 0
 13871  015DDC                     _LCD_write_string:
 13872                           	opt stack 21
 13873                           
 13874                           ;src\LCD_44780.c: 197: while(*buffer){
 13875                           
 13876                           ; BSR set to: 0
 13877                           ;incstack = 0
 13878  015DDC  D00A               	goto	l7737
 13879  015DDE                     l7733:
 13880                           
 13881                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 13882  015DDE  C07F  FFD9         	movff	LCD_write_string@buffer,fsr2l
 13883  015DE2  C080  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 13884  015DE6  50DF               	movf	indf2,w,c
 13885  015DE8  ECD1  F0AC         	call	_LCD_write_char
 13886                           
 13887                           ;src\LCD_44780.c: 202: buffer++;
 13888  015DEC  0100               	movlb	0	; () banked
 13889  015DEE  4B7F               	infsnz	LCD_write_string@buffer& (0+255),f,b
 13890  015DF0  2B80               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 13891  015DF2                     l7737:
 13892  015DF2  C07F  FFD9         	movff	LCD_write_string@buffer,fsr2l
 13893  015DF6  C080  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 13894  015DFA  50DF               	movf	indf2,w,c
 13895  015DFC  B4D8               	btfsc	status,2,c
 13896  015DFE  0012               	return	
 13897  015E00  D7EE               	goto	l7733
 13898  015E02                     __end_of_LCD_write_string:
 13899                           	opt stack 0
 13900                           tblptru	equ	0xFF8
 13901                           tblptrh	equ	0xFF7
 13902                           tblptrl	equ	0xFF6
 13903                           tablat	equ	0xFF5
 13904                           prodh	equ	0xFF4
 13905                           prodl	equ	0xFF3
 13906                           intcon	equ	0xFF2
 13907                           postinc0	equ	0xFEE
 13908                           wreg	equ	0xFE8
 13909                           indf1	equ	0xFE7
 13910                           plusw1	equ	0xFE3
 13911                           fsr1h	equ	0xFE2
 13912                           fsr1l	equ	0xFE1
 13913                           indf2	equ	0xFDF
 13914                           postinc2	equ	0xFDE
 13915                           plusw2	equ	0xFDB
 13916                           fsr2h	equ	0xFDA
 13917                           fsr2l	equ	0xFD9
 13918                           status	equ	0xFD8
 13919                           
 13920 ;; *************** function _LCD_write_char *****************
 13921 ;; Defined at:
 13922 ;;		line 145 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 13923 ;; Parameters:    Size  Location     Type
 13924 ;;  value           1    wreg     unsigned char 
 13925 ;; Auto vars:     Size  Location     Type
 13926 ;;  value           1   30[BANK0 ] unsigned char 
 13927 ;;  D0              1   29[BANK0 ] unsigned char 
 13928 ;;  D1              1   28[BANK0 ] unsigned char 
 13929 ;;  D2              1   27[BANK0 ] unsigned char 
 13930 ;;  D3              1   26[BANK0 ] unsigned char 
 13931 ;; Return value:  Size  Location     Type
 13932 ;;		None               void
 13933 ;; Registers used:
 13934 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13935 ;; Tracked objects:
 13936 ;;		On entry : 0/0
 13937 ;;		On exit  : 0/0
 13938 ;;		Unchanged: 0/0
 13939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13941 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13943 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13944 ;;Total ram usage:        5 bytes
 13945 ;; Hardware stack levels used:    1
 13946 ;; Hardware stack levels required when called:    7
 13947 ;; This function calls:
 13948 ;;		_LCD_send_command
 13949 ;; This function is called by:
 13950 ;;		_LCD_write_message
 13951 ;;		_LCD_write_string
 13952 ;; This function uses a non-reentrant model
 13953 ;;
 13954                           
 13955                           	psect	text33
 13956  0159A2                     __ptext33:
 13957                           	opt stack 0
 13958  0159A2                     _LCD_write_char:
 13959                           	opt stack 21
 13960                           
 13961                           ;incstack = 0
 13962                           ;LCD_write_char@value stored from wreg
 13963  0159A2  0100               	movlb	0	; () banked
 13964  0159A4  6F7E               	movwf	LCD_write_char@value& (0+255),b
 13965                           
 13966                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 13967                           ;src\LCD_44780.c: 149: LATEbits.LATE2 = 1;
 13968  0159A6  848D               	bsf	3981,2,c	;volatile
 13969                           
 13970                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 13971  0159A8  0100               	movlb	0	; () banked
 13972  0159AA  457E               	rlncf	LCD_write_char@value& (0+255),w,b
 13973  0159AC  0B01               	andlw	1
 13974  0159AE  0100               	movlb	0	; () banked
 13975  0159B0  6F7A               	movwf	LCD_write_char@D3& (0+255),b
 13976                           
 13977                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 13978  0159B2  0100               	movlb	0	; () banked
 13979  0159B4  457E               	rlncf	LCD_write_char@value& (0+255),w,b
 13980  0159B6  46E8               	rlncf	wreg,f,c
 13981  0159B8  0B03               	andlw	3
 13982  0159BA  0B01               	andlw	1
 13983  0159BC  0100               	movlb	0	; () banked
 13984  0159BE  6F7B               	movwf	LCD_write_char@D2& (0+255),b
 13985                           
 13986                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 13987  0159C0  0100               	movlb	0	; () banked
 13988  0159C2  397E               	swapf	LCD_write_char@value& (0+255),w,b
 13989  0159C4  42E8               	rrncf	wreg,f,c
 13990  0159C6  0B07               	andlw	7
 13991  0159C8  0B01               	andlw	1
 13992  0159CA  0100               	movlb	0	; () banked
 13993  0159CC  6F7C               	movwf	LCD_write_char@D1& (0+255),b
 13994                           
 13995                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 13996  0159CE  0100               	movlb	0	; () banked
 13997  0159D0  397E               	swapf	LCD_write_char@value& (0+255),w,b
 13998  0159D2  0B0F               	andlw	15
 13999  0159D4  0B01               	andlw	1
 14000  0159D6  0100               	movlb	0	; () banked
 14001  0159D8  6F7D               	movwf	LCD_write_char@D0& (0+255),b
 14002                           
 14003                           ; BSR set to: 0
 14004                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 14005  0159DA  C07B  F076         	movff	LCD_write_char@D2,LCD_send_command@D2
 14006  0159DE  C07C  F077         	movff	LCD_write_char@D1,LCD_send_command@D1
 14007  0159E2  C07D  F078         	movff	LCD_write_char@D0,LCD_send_command@D0
 14008  0159E6  0100               	movlb	0	; () banked
 14009  0159E8  517A               	movf	LCD_write_char@D3& (0+255),w,b
 14010  0159EA  EC1C  F0AE         	call	_LCD_send_command
 14011                           
 14012                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 14013  0159EE  0100               	movlb	0	; () banked
 14014  0159F0  397E               	swapf	LCD_write_char@value& (0+255),w,b
 14015  0159F2  46E8               	rlncf	wreg,f,c
 14016  0159F4  0B1F               	andlw	31
 14017  0159F6  0B01               	andlw	1
 14018  0159F8  0100               	movlb	0	; () banked
 14019  0159FA  6F7A               	movwf	LCD_write_char@D3& (0+255),b
 14020                           
 14021                           ; BSR set to: 0
 14022                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 14023  0159FC  0100               	movlb	0	; () banked
 14024  0159FE  417E               	rrncf	LCD_write_char@value& (0+255),w,b
 14025  015A00  42E8               	rrncf	wreg,f,c
 14026  015A02  0B3F               	andlw	63
 14027  015A04  0B01               	andlw	1
 14028  015A06  0100               	movlb	0	; () banked
 14029  015A08  6F7B               	movwf	LCD_write_char@D2& (0+255),b
 14030                           
 14031                           ; BSR set to: 0
 14032                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 14033  015A0A  0100               	movlb	0	; () banked
 14034  015A0C  90D8               	bcf	status,0,c
 14035  015A0E  317E               	rrcf	LCD_write_char@value& (0+255),w,b
 14036  015A10  0B01               	andlw	1
 14037  015A12  0100               	movlb	0	; () banked
 14038  015A14  6F7C               	movwf	LCD_write_char@D1& (0+255),b
 14039                           
 14040                           ; BSR set to: 0
 14041                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 14042  015A16  0100               	movlb	0	; () banked
 14043  015A18  517E               	movf	LCD_write_char@value& (0+255),w,b
 14044  015A1A  0B01               	andlw	1
 14045  015A1C  0100               	movlb	0	; () banked
 14046  015A1E  6F7D               	movwf	LCD_write_char@D0& (0+255),b
 14047                           
 14048                           ; BSR set to: 0
 14049                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 14050  015A20  C07B  F076         	movff	LCD_write_char@D2,LCD_send_command@D2
 14051  015A24  C07C  F077         	movff	LCD_write_char@D1,LCD_send_command@D1
 14052  015A28  C07D  F078         	movff	LCD_write_char@D0,LCD_send_command@D0
 14053  015A2C  0100               	movlb	0	; () banked
 14054  015A2E  517A               	movf	LCD_write_char@D3& (0+255),w,b
 14055  015A30  EC1C  F0AE         	call	_LCD_send_command
 14056                           
 14057                           ;src\LCD_44780.c: 167: LATEbits.LATE2 = 0;
 14058  015A34  948D               	bcf	3981,2,c	;volatile
 14059  015A36  0012               	return		;funcret
 14060  015A38                     __end_of_LCD_write_char:
 14061                           	opt stack 0
 14062                           tblptru	equ	0xFF8
 14063                           tblptrh	equ	0xFF7
 14064                           tblptrl	equ	0xFF6
 14065                           tablat	equ	0xFF5
 14066                           prodh	equ	0xFF4
 14067                           prodl	equ	0xFF3
 14068                           intcon	equ	0xFF2
 14069                           postinc0	equ	0xFEE
 14070                           wreg	equ	0xFE8
 14071                           indf1	equ	0xFE7
 14072                           plusw1	equ	0xFE3
 14073                           fsr1h	equ	0xFE2
 14074                           fsr1l	equ	0xFE1
 14075                           indf2	equ	0xFDF
 14076                           postinc2	equ	0xFDE
 14077                           plusw2	equ	0xFDB
 14078                           fsr2h	equ	0xFDA
 14079                           fsr2l	equ	0xFD9
 14080                           status	equ	0xFD8
 14081                           
 14082 ;; *************** function _LCD_initialize *****************
 14083 ;; Defined at:
 14084 ;;		line 283 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14085 ;; Parameters:    Size  Location     Type
 14086 ;;  quartz_frequ    1    wreg     unsigned char 
 14087 ;; Auto vars:     Size  Location     Type
 14088 ;;  quartz_frequ    1   28[BANK0 ] unsigned char 
 14089 ;; Return value:  Size  Location     Type
 14090 ;;		None               void
 14091 ;; Registers used:
 14092 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14093 ;; Tracked objects:
 14094 ;;		On entry : 0/0
 14095 ;;		On exit  : 0/0
 14096 ;;		Unchanged: 0/0
 14097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14099 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14101 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14102 ;;Total ram usage:        1 bytes
 14103 ;; Hardware stack levels used:    1
 14104 ;; Hardware stack levels required when called:    8
 14105 ;; This function calls:
 14106 ;;		_LCD_clear
 14107 ;;		_LCD_cursor
 14108 ;;		_LCD_send_command
 14109 ;;		_delay_ms
 14110 ;;		_delay_set_quartz
 14111 ;; This function is called by:
 14112 ;;		_main
 14113 ;;		_LCD_Handler
 14114 ;;		_board_initialization
 14115 ;; This function uses a non-reentrant model
 14116 ;;
 14117                           
 14118                           	psect	text34
 14119  014F50                     __ptext34:
 14120                           	opt stack 0
 14121  014F50                     _LCD_initialize:
 14122                           	opt stack 21
 14123                           
 14124                           ;incstack = 0
 14125                           ;LCD_initialize@quartz_frequency stored from wreg
 14126  014F50  0100               	movlb	0	; () banked
 14127  014F52  6F7C               	movwf	LCD_initialize@quartz_frequency& (0+255),b
 14128                           
 14129                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
 14130  014F54  0100               	movlb	0	; () banked
 14131  014F56  517C               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
 14132  014F58  EC57  F0AF         	call	_delay_set_quartz
 14133                           
 14134                           ;src\LCD_44780.c: 287: LATEbits.LATE2 = 0x00;
 14135  014F5C  948D               	bcf	3981,2,c	;volatile
 14136                           
 14137                           ;src\LCD_44780.c: 288: LATCbits.LATC1 = 0x00;
 14138  014F5E  928B               	bcf	3979,1,c	;volatile
 14139                           
 14140                           ;src\LCD_44780.c: 289: LATCbits.LATC0 = 0x00;
 14141  014F60  908B               	bcf	3979,0,c	;volatile
 14142                           
 14143                           ;src\LCD_44780.c: 291: delay_ms (100);
 14144  014F62  0E00               	movlw	0
 14145  014F64  0100               	movlb	0	; () banked
 14146  014F66  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
 14147  014F68  0E64               	movlw	100
 14148  014F6A  6F74               	movwf	delay_ms@value_ms& (0+255),b
 14149  014F6C  EC39  F0AE         	call	_delay_ms	;wreg free
 14150                           
 14151                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
 14152  014F70  0E00               	movlw	0
 14153  014F72  0100               	movlb	0	; () banked
 14154  014F74  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14155  014F76  0E01               	movlw	1
 14156  014F78  0100               	movlb	0	; () banked
 14157  014F7A  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14158  014F7C  0E01               	movlw	1
 14159  014F7E  0100               	movlb	0	; () banked
 14160  014F80  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14161  014F82  0E00               	movlw	0
 14162  014F84  EC1C  F0AE         	call	_LCD_send_command
 14163                           
 14164                           ;src\LCD_44780.c: 293: delay_ms (100);
 14165  014F88  0E00               	movlw	0
 14166  014F8A  0100               	movlb	0	; () banked
 14167  014F8C  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
 14168  014F8E  0E64               	movlw	100
 14169  014F90  6F74               	movwf	delay_ms@value_ms& (0+255),b
 14170  014F92  EC39  F0AE         	call	_delay_ms	;wreg free
 14171                           
 14172                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
 14173  014F96  0E00               	movlw	0
 14174  014F98  0100               	movlb	0	; () banked
 14175  014F9A  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14176  014F9C  0E01               	movlw	1
 14177  014F9E  0100               	movlb	0	; () banked
 14178  014FA0  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14179  014FA2  0E01               	movlw	1
 14180  014FA4  0100               	movlb	0	; () banked
 14181  014FA6  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14182  014FA8  0E00               	movlw	0
 14183  014FAA  EC1C  F0AE         	call	_LCD_send_command
 14184                           
 14185                           ;src\LCD_44780.c: 295: delay_ms (10);
 14186  014FAE  0E00               	movlw	0
 14187  014FB0  0100               	movlb	0	; () banked
 14188  014FB2  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
 14189  014FB4  0E0A               	movlw	10
 14190  014FB6  6F74               	movwf	delay_ms@value_ms& (0+255),b
 14191  014FB8  EC39  F0AE         	call	_delay_ms	;wreg free
 14192                           
 14193                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
 14194  014FBC  0E00               	movlw	0
 14195  014FBE  0100               	movlb	0	; () banked
 14196  014FC0  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14197  014FC2  0E01               	movlw	1
 14198  014FC4  0100               	movlb	0	; () banked
 14199  014FC6  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14200  014FC8  0E01               	movlw	1
 14201  014FCA  0100               	movlb	0	; () banked
 14202  014FCC  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14203  014FCE  0E00               	movlw	0
 14204  014FD0  EC1C  F0AE         	call	_LCD_send_command
 14205                           
 14206                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
 14207  014FD4  0E00               	movlw	0
 14208  014FD6  0100               	movlb	0	; () banked
 14209  014FD8  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14210  014FDA  0E01               	movlw	1
 14211  014FDC  0100               	movlb	0	; () banked
 14212  014FDE  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14213  014FE0  0E00               	movlw	0
 14214  014FE2  0100               	movlb	0	; () banked
 14215  014FE4  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14216  014FE6  0E00               	movlw	0
 14217  014FE8  EC1C  F0AE         	call	_LCD_send_command
 14218                           
 14219                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
 14220  014FEC  0E00               	movlw	0
 14221  014FEE  0100               	movlb	0	; () banked
 14222  014FF0  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14223  014FF2  0E01               	movlw	1
 14224  014FF4  0100               	movlb	0	; () banked
 14225  014FF6  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14226  014FF8  0E00               	movlw	0
 14227  014FFA  0100               	movlb	0	; () banked
 14228  014FFC  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14229  014FFE  0E00               	movlw	0
 14230  015000  EC1C  F0AE         	call	_LCD_send_command
 14231                           
 14232                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
 14233  015004  0E00               	movlw	0
 14234  015006  0100               	movlb	0	; () banked
 14235  015008  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14236  01500A  0E00               	movlw	0
 14237  01500C  0100               	movlb	0	; () banked
 14238  01500E  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14239  015010  0E00               	movlw	0
 14240  015012  0100               	movlb	0	; () banked
 14241  015014  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14242  015016  0E01               	movlw	1
 14243  015018  EC1C  F0AE         	call	_LCD_send_command
 14244                           
 14245                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
 14246  01501C  0E00               	movlw	0
 14247  01501E  0100               	movlb	0	; () banked
 14248  015020  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14249  015022  0E00               	movlw	0
 14250  015024  0100               	movlb	0	; () banked
 14251  015026  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14252  015028  0E00               	movlw	0
 14253  01502A  0100               	movlb	0	; () banked
 14254  01502C  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14255  01502E  0E00               	movlw	0
 14256  015030  EC1C  F0AE         	call	_LCD_send_command
 14257                           
 14258                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
 14259  015034  0E00               	movlw	0
 14260  015036  0100               	movlb	0	; () banked
 14261  015038  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14262  01503A  0E00               	movlw	0
 14263  01503C  0100               	movlb	0	; () banked
 14264  01503E  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14265  015040  0E00               	movlw	0
 14266  015042  0100               	movlb	0	; () banked
 14267  015044  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14268  015046  0E01               	movlw	1
 14269  015048  EC1C  F0AE         	call	_LCD_send_command
 14270                           
 14271                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
 14272  01504C  0E00               	movlw	0
 14273  01504E  0100               	movlb	0	; () banked
 14274  015050  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14275  015052  0E00               	movlw	0
 14276  015054  0100               	movlb	0	; () banked
 14277  015056  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14278  015058  0E00               	movlw	0
 14279  01505A  0100               	movlb	0	; () banked
 14280  01505C  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14281  01505E  0E00               	movlw	0
 14282  015060  EC1C  F0AE         	call	_LCD_send_command
 14283                           
 14284                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
 14285  015064  0E00               	movlw	0
 14286  015066  0100               	movlb	0	; () banked
 14287  015068  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14288  01506A  0E00               	movlw	0
 14289  01506C  0100               	movlb	0	; () banked
 14290  01506E  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14291  015070  0E01               	movlw	1
 14292  015072  0100               	movlb	0	; () banked
 14293  015074  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14294  015076  0E00               	movlw	0
 14295  015078  EC1C  F0AE         	call	_LCD_send_command
 14296                           
 14297                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
 14298  01507C  0E00               	movlw	0
 14299  01507E  0100               	movlb	0	; () banked
 14300  015080  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14301  015082  0E00               	movlw	0
 14302  015084  0100               	movlb	0	; () banked
 14303  015086  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14304  015088  0E00               	movlw	0
 14305  01508A  0100               	movlb	0	; () banked
 14306  01508C  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14307  01508E  0E00               	movlw	0
 14308  015090  EC1C  F0AE         	call	_LCD_send_command
 14309                           
 14310                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
 14311  015094  0E01               	movlw	1
 14312  015096  0100               	movlb	0	; () banked
 14313  015098  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14314  01509A  0E01               	movlw	1
 14315  01509C  0100               	movlb	0	; () banked
 14316  01509E  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14317  0150A0  0E00               	movlw	0
 14318  0150A2  0100               	movlb	0	; () banked
 14319  0150A4  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14320  0150A6  0E00               	movlw	0
 14321  0150A8  EC1C  F0AE         	call	_LCD_send_command
 14322                           
 14323                           ;src\LCD_44780.c: 312: LCD_clear ();
 14324  0150AC  ECC0  F0AE         	call	_LCD_clear	;wreg free
 14325                           
 14326                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
 14327  0150B0  0E00               	movlw	0
 14328  0150B2  0100               	movlb	0	; () banked
 14329  0150B4  6F7A               	movwf	LCD_cursor@blinking& (0+255),b
 14330  0150B6  0E00               	movlw	0
 14331  0150B8  ECA7  F0AE         	call	_LCD_cursor
 14332  0150BC  0012               	return		;funcret
 14333  0150BE                     __end_of_LCD_initialize:
 14334                           	opt stack 0
 14335                           tblptru	equ	0xFF8
 14336                           tblptrh	equ	0xFF7
 14337                           tblptrl	equ	0xFF6
 14338                           tablat	equ	0xFF5
 14339                           prodh	equ	0xFF4
 14340                           prodl	equ	0xFF3
 14341                           intcon	equ	0xFF2
 14342                           postinc0	equ	0xFEE
 14343                           wreg	equ	0xFE8
 14344                           indf1	equ	0xFE7
 14345                           plusw1	equ	0xFE3
 14346                           fsr1h	equ	0xFE2
 14347                           fsr1l	equ	0xFE1
 14348                           indf2	equ	0xFDF
 14349                           postinc2	equ	0xFDE
 14350                           plusw2	equ	0xFDB
 14351                           fsr2h	equ	0xFDA
 14352                           fsr2l	equ	0xFD9
 14353                           status	equ	0xFD8
 14354                           
 14355 ;; *************** function _delay_set_quartz *****************
 14356 ;; Defined at:
 14357 ;;		line 115 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 14358 ;; Parameters:    Size  Location     Type
 14359 ;;  frequency       1    wreg     unsigned char 
 14360 ;; Auto vars:     Size  Location     Type
 14361 ;;  frequency       1   14[BANK0 ] unsigned char 
 14362 ;; Return value:  Size  Location     Type
 14363 ;;		None               void
 14364 ;; Registers used:
 14365 ;;		wreg
 14366 ;; Tracked objects:
 14367 ;;		On entry : 0/0
 14368 ;;		On exit  : 0/0
 14369 ;;		Unchanged: 0/0
 14370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14372 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14374 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14375 ;;Total ram usage:        1 bytes
 14376 ;; Hardware stack levels used:    1
 14377 ;; Hardware stack levels required when called:    3
 14378 ;; This function calls:
 14379 ;;		Nothing
 14380 ;; This function is called by:
 14381 ;;		_LCD_initialize
 14382 ;; This function uses a non-reentrant model
 14383 ;;
 14384                           
 14385                           	psect	text35
 14386  015EAE                     __ptext35:
 14387                           	opt stack 0
 14388  015EAE                     _delay_set_quartz:
 14389                           	opt stack 25
 14390                           
 14391                           ;incstack = 0
 14392                           ;delay_set_quartz@frequency stored from wreg
 14393  015EAE  0100               	movlb	0	; () banked
 14394  015EB0  6F6E               	movwf	delay_set_quartz@frequency& (0+255),b
 14395                           
 14396                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
 14397  015EB2  C06E  F0EB         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
 14398  015EB6  0012               	return		;funcret
 14399  015EB8                     __end_of_delay_set_quartz:
 14400                           	opt stack 0
 14401                           tblptru	equ	0xFF8
 14402                           tblptrh	equ	0xFF7
 14403                           tblptrl	equ	0xFF6
 14404                           tablat	equ	0xFF5
 14405                           prodh	equ	0xFF4
 14406                           prodl	equ	0xFF3
 14407                           intcon	equ	0xFF2
 14408                           postinc0	equ	0xFEE
 14409                           wreg	equ	0xFE8
 14410                           indf1	equ	0xFE7
 14411                           plusw1	equ	0xFE3
 14412                           fsr1h	equ	0xFE2
 14413                           fsr1l	equ	0xFE1
 14414                           indf2	equ	0xFDF
 14415                           postinc2	equ	0xFDE
 14416                           plusw2	equ	0xFDB
 14417                           fsr2h	equ	0xFDA
 14418                           fsr2l	equ	0xFD9
 14419                           status	equ	0xFD8
 14420                           
 14421 ;; *************** function _LCD_cursor *****************
 14422 ;; Defined at:
 14423 ;;		line 266 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14424 ;; Parameters:    Size  Location     Type
 14425 ;;  active          1    wreg     unsigned char 
 14426 ;;  blinking        1   26[BANK0 ] unsigned char 
 14427 ;; Auto vars:     Size  Location     Type
 14428 ;;  active          1   27[BANK0 ] unsigned char 
 14429 ;; Return value:  Size  Location     Type
 14430 ;;		None               void
 14431 ;; Registers used:
 14432 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14433 ;; Tracked objects:
 14434 ;;		On entry : 0/0
 14435 ;;		On exit  : 0/0
 14436 ;;		Unchanged: 0/0
 14437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14438 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14439 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14441 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14442 ;;Total ram usage:        2 bytes
 14443 ;; Hardware stack levels used:    1
 14444 ;; Hardware stack levels required when called:    7
 14445 ;; This function calls:
 14446 ;;		_LCD_send_command
 14447 ;; This function is called by:
 14448 ;;		_LCD_initialize
 14449 ;; This function uses a non-reentrant model
 14450 ;;
 14451                           
 14452                           	psect	text36
 14453  015D4E                     __ptext36:
 14454                           	opt stack 0
 14455  015D4E                     _LCD_cursor:
 14456                           	opt stack 21
 14457                           
 14458                           ;incstack = 0
 14459                           ;LCD_cursor@active stored from wreg
 14460  015D4E  0100               	movlb	0	; () banked
 14461  015D50  6F7B               	movwf	LCD_cursor@active& (0+255),b
 14462                           
 14463                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
 14464  015D52  0E00               	movlw	0
 14465  015D54  0100               	movlb	0	; () banked
 14466  015D56  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14467  015D58  0E00               	movlw	0
 14468  015D5A  0100               	movlb	0	; () banked
 14469  015D5C  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14470  015D5E  0E00               	movlw	0
 14471  015D60  0100               	movlb	0	; () banked
 14472  015D62  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14473  015D64  0E00               	movlw	0
 14474  015D66  EC1C  F0AE         	call	_LCD_send_command
 14475                           
 14476                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
 14477  015D6A  0E01               	movlw	1
 14478  015D6C  0100               	movlb	0	; () banked
 14479  015D6E  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14480  015D70  C07B  F077         	movff	LCD_cursor@active,LCD_send_command@D1
 14481  015D74  C07A  F078         	movff	LCD_cursor@blinking,LCD_send_command@D0
 14482  015D78  0E01               	movlw	1
 14483  015D7A  EC1C  F0AE         	call	_LCD_send_command
 14484  015D7E  0012               	return		;funcret
 14485  015D80                     __end_of_LCD_cursor:
 14486                           	opt stack 0
 14487                           tblptru	equ	0xFF8
 14488                           tblptrh	equ	0xFF7
 14489                           tblptrl	equ	0xFF6
 14490                           tablat	equ	0xFF5
 14491                           prodh	equ	0xFF4
 14492                           prodl	equ	0xFF3
 14493                           intcon	equ	0xFF2
 14494                           postinc0	equ	0xFEE
 14495                           wreg	equ	0xFE8
 14496                           indf1	equ	0xFE7
 14497                           plusw1	equ	0xFE3
 14498                           fsr1h	equ	0xFE2
 14499                           fsr1l	equ	0xFE1
 14500                           indf2	equ	0xFDF
 14501                           postinc2	equ	0xFDE
 14502                           plusw2	equ	0xFDB
 14503                           fsr2h	equ	0xFDA
 14504                           fsr2l	equ	0xFD9
 14505                           status	equ	0xFD8
 14506                           
 14507 ;; *************** function _LCD_clear *****************
 14508 ;; Defined at:
 14509 ;;		line 257 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14510 ;; Parameters:    Size  Location     Type
 14511 ;;		None
 14512 ;; Auto vars:     Size  Location     Type
 14513 ;;		None
 14514 ;; Return value:  Size  Location     Type
 14515 ;;		None               void
 14516 ;; Registers used:
 14517 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14518 ;; Tracked objects:
 14519 ;;		On entry : 0/0
 14520 ;;		On exit  : 0/0
 14521 ;;		Unchanged: 0/0
 14522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14527 ;;Total ram usage:        0 bytes
 14528 ;; Hardware stack levels used:    1
 14529 ;; Hardware stack levels required when called:    7
 14530 ;; This function calls:
 14531 ;;		_LCD_send_command
 14532 ;; This function is called by:
 14533 ;;		_LCD_initialize
 14534 ;;		_LCD_Handler
 14535 ;;		_board_initialization
 14536 ;; This function uses a non-reentrant model
 14537 ;;
 14538                           
 14539                           	psect	text37
 14540  015D80                     __ptext37:
 14541                           	opt stack 0
 14542  015D80                     _LCD_clear:
 14543                           	opt stack 21
 14544                           
 14545                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 14546                           
 14547                           ;incstack = 0
 14548  015D80  0E00               	movlw	0
 14549  015D82  0100               	movlb	0	; () banked
 14550  015D84  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14551  015D86  0E00               	movlw	0
 14552  015D88  0100               	movlb	0	; () banked
 14553  015D8A  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14554  015D8C  0E00               	movlw	0
 14555  015D8E  0100               	movlb	0	; () banked
 14556  015D90  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14557  015D92  0E00               	movlw	0
 14558  015D94  EC1C  F0AE         	call	_LCD_send_command
 14559                           
 14560                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 14561  015D98  0E00               	movlw	0
 14562  015D9A  0100               	movlb	0	; () banked
 14563  015D9C  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14564  015D9E  0E00               	movlw	0
 14565  015DA0  0100               	movlb	0	; () banked
 14566  015DA2  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14567  015DA4  0E01               	movlw	1
 14568  015DA6  0100               	movlb	0	; () banked
 14569  015DA8  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14570  015DAA  0E00               	movlw	0
 14571  015DAC  EC1C  F0AE         	call	_LCD_send_command
 14572  015DB0  0012               	return		;funcret
 14573  015DB2                     __end_of_LCD_clear:
 14574                           	opt stack 0
 14575                           tblptru	equ	0xFF8
 14576                           tblptrh	equ	0xFF7
 14577                           tblptrl	equ	0xFF6
 14578                           tablat	equ	0xFF5
 14579                           prodh	equ	0xFF4
 14580                           prodl	equ	0xFF3
 14581                           intcon	equ	0xFF2
 14582                           postinc0	equ	0xFEE
 14583                           wreg	equ	0xFE8
 14584                           indf1	equ	0xFE7
 14585                           plusw1	equ	0xFE3
 14586                           fsr1h	equ	0xFE2
 14587                           fsr1l	equ	0xFE1
 14588                           indf2	equ	0xFDF
 14589                           postinc2	equ	0xFDE
 14590                           plusw2	equ	0xFDB
 14591                           fsr2h	equ	0xFDA
 14592                           fsr2l	equ	0xFD9
 14593                           status	equ	0xFD8
 14594                           
 14595 ;; *************** function _LCD_goto_line *****************
 14596 ;; Defined at:
 14597 ;;		line 111 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14598 ;; Parameters:    Size  Location     Type
 14599 ;;  line            1    wreg     unsigned char 
 14600 ;; Auto vars:     Size  Location     Type
 14601 ;;  line            1   26[BANK0 ] unsigned char 
 14602 ;; Return value:  Size  Location     Type
 14603 ;;		None               void
 14604 ;; Registers used:
 14605 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14606 ;; Tracked objects:
 14607 ;;		On entry : 0/0
 14608 ;;		On exit  : 0/0
 14609 ;;		Unchanged: 0/0
 14610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14612 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14614 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14615 ;;Total ram usage:        1 bytes
 14616 ;; Hardware stack levels used:    1
 14617 ;; Hardware stack levels required when called:    7
 14618 ;; This function calls:
 14619 ;;		_LCD_send_command
 14620 ;; This function is called by:
 14621 ;;		_main
 14622 ;;		_LCD_Handler
 14623 ;;		_board_initialization
 14624 ;;		_LCD_goto_xy
 14625 ;; This function uses a non-reentrant model
 14626 ;;
 14627                           
 14628                           	psect	text38
 14629  01531C                     __ptext38:
 14630                           	opt stack 0
 14631  01531C                     _LCD_goto_line:
 14632                           	opt stack 22
 14633                           
 14634                           ;incstack = 0
 14635                           ;LCD_goto_line@line stored from wreg
 14636  01531C  0100               	movlb	0	; () banked
 14637  01531E  6F7A               	movwf	LCD_goto_line@line& (0+255),b
 14638                           
 14639                           ;src\LCD_44780.c: 113: switch(line) {
 14640  015320  D064               	goto	l8101
 14641  015322                     l8093:
 14642  015322  0E00               	movlw	0
 14643  015324  0100               	movlb	0	; () banked
 14644  015326  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14645  015328  0E00               	movlw	0
 14646  01532A  0100               	movlb	0	; () banked
 14647  01532C  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14648  01532E  0E00               	movlw	0
 14649  015330  0100               	movlb	0	; () banked
 14650  015332  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14651  015334  0E01               	movlw	1
 14652  015336  EC1C  F0AE         	call	_LCD_send_command
 14653                           
 14654                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 14655  01533A  0E00               	movlw	0
 14656  01533C  0100               	movlb	0	; () banked
 14657  01533E  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14658  015340  0E00               	movlw	0
 14659  015342  0100               	movlb	0	; () banked
 14660  015344  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14661  015346  0E00               	movlw	0
 14662  015348  0100               	movlb	0	; () banked
 14663  01534A  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14664  01534C  0E00               	movlw	0
 14665  01534E  EC1C  F0AE         	call	_LCD_send_command
 14666                           
 14667                           ;src\LCD_44780.c: 117: break;
 14668  015352  0012               	return	
 14669  015354                     l8095:
 14670  015354  0E01               	movlw	1
 14671  015356  0100               	movlb	0	; () banked
 14672  015358  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14673  01535A  0E00               	movlw	0
 14674  01535C  0100               	movlb	0	; () banked
 14675  01535E  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14676  015360  0E00               	movlw	0
 14677  015362  0100               	movlb	0	; () banked
 14678  015364  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14679  015366  0E01               	movlw	1
 14680  015368  EC1C  F0AE         	call	_LCD_send_command
 14681                           
 14682                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 14683  01536C  0E00               	movlw	0
 14684  01536E  0100               	movlb	0	; () banked
 14685  015370  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14686  015372  0E00               	movlw	0
 14687  015374  0100               	movlb	0	; () banked
 14688  015376  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14689  015378  0E00               	movlw	0
 14690  01537A  0100               	movlb	0	; () banked
 14691  01537C  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14692  01537E  0E00               	movlw	0
 14693  015380  EC1C  F0AE         	call	_LCD_send_command
 14694                           
 14695                           ;src\LCD_44780.c: 121: break;
 14696  015384  0012               	return	
 14697  015386                     l8097:
 14698  015386  0E00               	movlw	0
 14699  015388  0100               	movlb	0	; () banked
 14700  01538A  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14701  01538C  0E00               	movlw	0
 14702  01538E  0100               	movlb	0	; () banked
 14703  015390  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14704  015392  0E01               	movlw	1
 14705  015394  0100               	movlb	0	; () banked
 14706  015396  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14707  015398  0E01               	movlw	1
 14708  01539A  EC1C  F0AE         	call	_LCD_send_command
 14709                           
 14710                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 14711  01539E  0E01               	movlw	1
 14712  0153A0  0100               	movlb	0	; () banked
 14713  0153A2  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14714  0153A4  0E00               	movlw	0
 14715  0153A6  0100               	movlb	0	; () banked
 14716  0153A8  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14717  0153AA  0E00               	movlw	0
 14718  0153AC  0100               	movlb	0	; () banked
 14719  0153AE  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14720  0153B0  0E00               	movlw	0
 14721  0153B2  EC1C  F0AE         	call	_LCD_send_command
 14722                           
 14723                           ;src\LCD_44780.c: 125: break;
 14724  0153B6  0012               	return	
 14725  0153B8                     l8099:
 14726  0153B8  0E01               	movlw	1
 14727  0153BA  0100               	movlb	0	; () banked
 14728  0153BC  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14729  0153BE  0E00               	movlw	0
 14730  0153C0  0100               	movlb	0	; () banked
 14731  0153C2  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14732  0153C4  0E01               	movlw	1
 14733  0153C6  0100               	movlb	0	; () banked
 14734  0153C8  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14735  0153CA  0E01               	movlw	1
 14736  0153CC  EC1C  F0AE         	call	_LCD_send_command
 14737                           
 14738                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 14739  0153D0  0E01               	movlw	1
 14740  0153D2  0100               	movlb	0	; () banked
 14741  0153D4  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14742  0153D6  0E00               	movlw	0
 14743  0153D8  0100               	movlb	0	; () banked
 14744  0153DA  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14745  0153DC  0E00               	movlw	0
 14746  0153DE  0100               	movlb	0	; () banked
 14747  0153E0  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14748  0153E2  0E00               	movlw	0
 14749  0153E4  EC1C  F0AE         	call	_LCD_send_command
 14750                           
 14751                           ;src\LCD_44780.c: 129: }
 14752  0153E8  0012               	return	
 14753  0153EA                     l8101:
 14754  0153EA  0100               	movlb	0	; () banked
 14755  0153EC  517A               	movf	LCD_goto_line@line& (0+255),w,b
 14756                           
 14757                           ; Switch size 1, requested type "space"
 14758                           ; Number of cases is 4, Range of values is 1 to 4
 14759                           ; switch strategies available:
 14760                           ; Name         Instructions Cycles
 14761                           ; simple_byte           13     7 (average)
 14762                           ;	Chosen strategy is simple_byte
 14763  0153EE  0A01               	xorlw	1	; case 1
 14764  0153F0  B4D8               	btfsc	status,2,c
 14765  0153F2  D797               	goto	l8093
 14766  0153F4  0A03               	xorlw	3	; case 2
 14767  0153F6  B4D8               	btfsc	status,2,c
 14768  0153F8  D7AD               	goto	l8095
 14769  0153FA  0A01               	xorlw	1	; case 3
 14770  0153FC  B4D8               	btfsc	status,2,c
 14771  0153FE  D7C3               	goto	l8097
 14772  015400  0A07               	xorlw	7	; case 4
 14773  015402  A4D8               	btfss	status,2,c
 14774  015404  0012               	return	
 14775  015406  D7D8               	goto	l8099
 14776  015408                     __end_of_LCD_goto_line:
 14777                           	opt stack 0
 14778                           tblptru	equ	0xFF8
 14779                           tblptrh	equ	0xFF7
 14780                           tblptrl	equ	0xFF6
 14781                           tablat	equ	0xFF5
 14782                           prodh	equ	0xFF4
 14783                           prodl	equ	0xFF3
 14784                           intcon	equ	0xFF2
 14785                           postinc0	equ	0xFEE
 14786                           wreg	equ	0xFE8
 14787                           indf1	equ	0xFE7
 14788                           plusw1	equ	0xFE3
 14789                           fsr1h	equ	0xFE2
 14790                           fsr1l	equ	0xFE1
 14791                           indf2	equ	0xFDF
 14792                           postinc2	equ	0xFDE
 14793                           plusw2	equ	0xFDB
 14794                           fsr2h	equ	0xFDA
 14795                           fsr2l	equ	0xFD9
 14796                           status	equ	0xFD8
 14797                           
 14798 ;; *************** function _LCD_send_command *****************
 14799 ;; Defined at:
 14800 ;;		line 61 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14801 ;; Parameters:    Size  Location     Type
 14802 ;;  D3              1    wreg     unsigned char 
 14803 ;;  D2              1   22[BANK0 ] unsigned char 
 14804 ;;  D1              1   23[BANK0 ] unsigned char 
 14805 ;;  D0              1   24[BANK0 ] unsigned char 
 14806 ;; Auto vars:     Size  Location     Type
 14807 ;;  D3              1   25[BANK0 ] unsigned char 
 14808 ;; Return value:  Size  Location     Type
 14809 ;;		None               void
 14810 ;; Registers used:
 14811 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14812 ;; Tracked objects:
 14813 ;;		On entry : 0/0
 14814 ;;		On exit  : 0/0
 14815 ;;		Unchanged: 0/0
 14816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14817 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14818 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14820 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14821 ;;Total ram usage:        4 bytes
 14822 ;; Hardware stack levels used:    1
 14823 ;; Hardware stack levels required when called:    6
 14824 ;; This function calls:
 14825 ;;		_LCD_enable_pulse
 14826 ;; This function is called by:
 14827 ;;		_LCD_goto_line
 14828 ;;		_LCD_write_char
 14829 ;;		_LCD_clear
 14830 ;;		_LCD_cursor
 14831 ;;		_LCD_initialize
 14832 ;;		_LCD_home
 14833 ;;		_LCD_shift
 14834 ;;		_LCD_shift_cursor
 14835 ;; This function uses a non-reentrant model
 14836 ;;
 14837                           
 14838                           	psect	text39
 14839  015C38                     __ptext39:
 14840                           	opt stack 0
 14841  015C38                     _LCD_send_command:
 14842                           	opt stack 21
 14843                           
 14844                           ;incstack = 0
 14845                           ;LCD_send_command@D3 stored from wreg
 14846  015C38  0100               	movlb	0	; () banked
 14847  015C3A  6F79               	movwf	LCD_send_command@D3& (0+255),b
 14848                           
 14849                           ;src\LCD_44780.c: 63: LATCbits.LATC2 = D0;
 14850  015C3C  0100               	movlb	0	; () banked
 14851  015C3E  B178               	btfsc	LCD_send_command@D0& (0+255),0,b
 14852  015C40  D002               	bra	u9265
 14853  015C42  948B               	bcf	3979,2,c	;volatile
 14854  015C44  D001               	bra	u9266
 14855  015C46                     u9265:
 14856  015C46  848B               	bsf	3979,2,c	;volatile
 14857  015C48                     u9266:
 14858                           
 14859                           ;src\LCD_44780.c: 64: LATCbits.LATC3 = D1;
 14860  015C48  0100               	movlb	0	; () banked
 14861  015C4A  B177               	btfsc	LCD_send_command@D1& (0+255),0,b
 14862  015C4C  D002               	bra	u9275
 14863  015C4E  968B               	bcf	3979,3,c	;volatile
 14864  015C50  D001               	bra	u9276
 14865  015C52                     u9275:
 14866  015C52  868B               	bsf	3979,3,c	;volatile
 14867  015C54                     u9276:
 14868                           
 14869                           ;src\LCD_44780.c: 65: LATDbits.LATD0 = D2;
 14870  015C54  0100               	movlb	0	; () banked
 14871  015C56  B176               	btfsc	LCD_send_command@D2& (0+255),0,b
 14872  015C58  D002               	bra	u9285
 14873  015C5A  908C               	bcf	3980,0,c	;volatile
 14874  015C5C  D001               	bra	u9286
 14875  015C5E                     u9285:
 14876  015C5E  808C               	bsf	3980,0,c	;volatile
 14877  015C60                     u9286:
 14878                           
 14879                           ;src\LCD_44780.c: 66: LATDbits.LATD1 = D3;
 14880  015C60  0100               	movlb	0	; () banked
 14881  015C62  B179               	btfsc	LCD_send_command@D3& (0+255),0,b
 14882  015C64  D002               	bra	u9295
 14883  015C66  928C               	bcf	3980,1,c	;volatile
 14884  015C68  D001               	bra	u9296
 14885  015C6A                     u9295:
 14886  015C6A  828C               	bsf	3980,1,c	;volatile
 14887  015C6C                     u9296:
 14888                           
 14889                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 14890  015C6C  EC13  F0AF         	call	_LCD_enable_pulse	;wreg free
 14891  015C70  0012               	return		;funcret
 14892  015C72                     __end_of_LCD_send_command:
 14893                           	opt stack 0
 14894                           tblptru	equ	0xFF8
 14895                           tblptrh	equ	0xFF7
 14896                           tblptrl	equ	0xFF6
 14897                           tablat	equ	0xFF5
 14898                           prodh	equ	0xFF4
 14899                           prodl	equ	0xFF3
 14900                           intcon	equ	0xFF2
 14901                           postinc0	equ	0xFEE
 14902                           wreg	equ	0xFE8
 14903                           indf1	equ	0xFE7
 14904                           plusw1	equ	0xFE3
 14905                           fsr1h	equ	0xFE2
 14906                           fsr1l	equ	0xFE1
 14907                           indf2	equ	0xFDF
 14908                           postinc2	equ	0xFDE
 14909                           plusw2	equ	0xFDB
 14910                           fsr2h	equ	0xFDA
 14911                           fsr2l	equ	0xFD9
 14912                           status	equ	0xFD8
 14913                           
 14914 ;; *************** function _LCD_enable_pulse *****************
 14915 ;; Defined at:
 14916 ;;		line 49 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14917 ;; Parameters:    Size  Location     Type
 14918 ;;		None
 14919 ;; Auto vars:     Size  Location     Type
 14920 ;;		None
 14921 ;; Return value:  Size  Location     Type
 14922 ;;		None               void
 14923 ;; Registers used:
 14924 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14925 ;; Tracked objects:
 14926 ;;		On entry : 0/0
 14927 ;;		On exit  : 0/0
 14928 ;;		Unchanged: 0/0
 14929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14934 ;;Total ram usage:        0 bytes
 14935 ;; Hardware stack levels used:    1
 14936 ;; Hardware stack levels required when called:    5
 14937 ;; This function calls:
 14938 ;;		_delay_ms
 14939 ;; This function is called by:
 14940 ;;		_LCD_send_command
 14941 ;; This function uses a non-reentrant model
 14942 ;;
 14943                           
 14944                           	psect	text40
 14945  015E26                     __ptext40:
 14946                           	opt stack 0
 14947  015E26                     _LCD_enable_pulse:
 14948                           	opt stack 21
 14949                           
 14950                           ;src\LCD_44780.c: 51: LATCbits.LATC1 = 1;
 14951                           
 14952                           ;incstack = 0
 14953  015E26  828B               	bsf	3979,1,c	;volatile
 14954                           
 14955                           ;src\LCD_44780.c: 52: delay_ms (1);
 14956  015E28  0E00               	movlw	0
 14957  015E2A  0100               	movlb	0	; () banked
 14958  015E2C  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
 14959  015E2E  0E01               	movlw	1
 14960  015E30  6F74               	movwf	delay_ms@value_ms& (0+255),b
 14961  015E32  EC39  F0AE         	call	_delay_ms	;wreg free
 14962                           
 14963                           ;src\LCD_44780.c: 53: LATCbits.LATC1 = 0;
 14964  015E36  928B               	bcf	3979,1,c	;volatile
 14965                           
 14966                           ;src\LCD_44780.c: 54: delay_ms (1);
 14967  015E38  0E00               	movlw	0
 14968  015E3A  0100               	movlb	0	; () banked
 14969  015E3C  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
 14970  015E3E  0E01               	movlw	1
 14971  015E40  6F74               	movwf	delay_ms@value_ms& (0+255),b
 14972  015E42  EC39  F0AE         	call	_delay_ms	;wreg free
 14973  015E46  0012               	return		;funcret
 14974  015E48                     __end_of_LCD_enable_pulse:
 14975                           	opt stack 0
 14976                           tblptru	equ	0xFF8
 14977                           tblptrh	equ	0xFF7
 14978                           tblptrl	equ	0xFF6
 14979                           tablat	equ	0xFF5
 14980                           prodh	equ	0xFF4
 14981                           prodl	equ	0xFF3
 14982                           intcon	equ	0xFF2
 14983                           postinc0	equ	0xFEE
 14984                           wreg	equ	0xFE8
 14985                           indf1	equ	0xFE7
 14986                           plusw1	equ	0xFE3
 14987                           fsr1h	equ	0xFE2
 14988                           fsr1l	equ	0xFE1
 14989                           indf2	equ	0xFDF
 14990                           postinc2	equ	0xFDE
 14991                           plusw2	equ	0xFDB
 14992                           fsr2h	equ	0xFDA
 14993                           fsr2l	equ	0xFD9
 14994                           status	equ	0xFD8
 14995                           
 14996 ;; *************** function _delay_ms *****************
 14997 ;; Defined at:
 14998 ;;		line 61 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 14999 ;; Parameters:    Size  Location     Type
 15000 ;;  value_ms        2   20[BANK0 ] unsigned int 
 15001 ;; Auto vars:     Size  Location     Type
 15002 ;;		None
 15003 ;; Return value:  Size  Location     Type
 15004 ;;		None               void
 15005 ;; Registers used:
 15006 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15007 ;; Tracked objects:
 15008 ;;		On entry : 0/0
 15009 ;;		On exit  : 0/0
 15010 ;;		Unchanged: 0/0
 15011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15012 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15015 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15016 ;;Total ram usage:        2 bytes
 15017 ;; Hardware stack levels used:    1
 15018 ;; Hardware stack levels required when called:    4
 15019 ;; This function calls:
 15020 ;;		___wmul
 15021 ;; This function is called by:
 15022 ;;		_LCD_enable_pulse
 15023 ;;		_LCD_initialize
 15024 ;;		_main
 15025 ;;		_LCD_Handler
 15026 ;;		_board_initialization
 15027 ;;		_delay_s
 15028 ;; This function uses a non-reentrant model
 15029 ;;
 15030                           
 15031                           	psect	text41
 15032  015C72                     __ptext41:
 15033                           	opt stack 0
 15034  015C72                     _delay_ms:
 15035                           	opt stack 26
 15036                           
 15037                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 15038                           
 15039                           ;incstack = 0
 15040  015C72  C0EB  F06E         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 15041  015C76  0100               	movlb	0	; () banked
 15042  015C78  6B6F               	clrf	(___wmul@multiplier+1)& (0+255),b
 15043  015C7A  C074  F070         	movff	delay_ms@value_ms,___wmul@multiplicand
 15044  015C7E  C075  F071         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 15045  015C82  EC72  F0AE         	call	___wmul	;wreg free
 15046  015C86  C06E  F0E2         	movff	?___wmul,_clock_counter_reference	;volatile
 15047  015C8A  C06F  F0E3         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 15048                           
 15049                           ;src\delay.c: 75: while (clock_counter_reference) {
 15050  015C8E  D007               	goto	l577
 15051  015C90                     l7285:
 15052                           
 15053                           ;src\delay.c: 85: _delay(240);
 15054  015C90  0E50               	movlw	80
 15055  015C92                     u11237:
 15056  015C92  2EE8               	decfsz	wreg,f,c
 15057  015C94  D7FE               	goto	u11237
 15058                           
 15059                           ;src\delay.c: 88: clock_counter_reference--;
 15060  015C96  0100               	movlb	0	; () banked
 15061  015C98  07E2               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 15062  015C9A  A0D8               	btfss	status,0,c
 15063  015C9C  07E3               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 15064  015C9E                     l577:
 15065  015C9E  0100               	movlb	0	; () banked
 15066  015CA0  51E2               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 15067  015CA2  0100               	movlb	0	; () banked
 15068  015CA4  11E3               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 15069  015CA6  B4D8               	btfsc	status,2,c
 15070  015CA8  0012               	return	
 15071  015CAA  D7F2               	goto	l7285
 15072  015CAC                     __end_of_delay_ms:
 15073                           	opt stack 0
 15074                           tblptru	equ	0xFF8
 15075                           tblptrh	equ	0xFF7
 15076                           tblptrl	equ	0xFF6
 15077                           tablat	equ	0xFF5
 15078                           prodh	equ	0xFF4
 15079                           prodl	equ	0xFF3
 15080                           intcon	equ	0xFF2
 15081                           postinc0	equ	0xFEE
 15082                           wreg	equ	0xFE8
 15083                           indf1	equ	0xFE7
 15084                           plusw1	equ	0xFE3
 15085                           fsr1h	equ	0xFE2
 15086                           fsr1l	equ	0xFE1
 15087                           indf2	equ	0xFDF
 15088                           postinc2	equ	0xFDE
 15089                           plusw2	equ	0xFDB
 15090                           fsr2h	equ	0xFDA
 15091                           fsr2l	equ	0xFD9
 15092                           status	equ	0xFD8
 15093                           
 15094 ;; *************** function ___wmul *****************
 15095 ;; Defined at:
 15096 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 15097 ;; Parameters:    Size  Location     Type
 15098 ;;  multiplier      2   14[BANK0 ] unsigned int 
 15099 ;;  multiplicand    2   16[BANK0 ] unsigned int 
 15100 ;; Auto vars:     Size  Location     Type
 15101 ;;  product         2   18[BANK0 ] unsigned int 
 15102 ;; Return value:  Size  Location     Type
 15103 ;;                  2   14[BANK0 ] unsigned int 
 15104 ;; Registers used:
 15105 ;;		wreg, status,2, status,0, prodl, prodh
 15106 ;; Tracked objects:
 15107 ;;		On entry : 0/0
 15108 ;;		On exit  : 0/0
 15109 ;;		Unchanged: 0/0
 15110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15111 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15112 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15114 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15115 ;;Total ram usage:        6 bytes
 15116 ;; Hardware stack levels used:    1
 15117 ;; Hardware stack levels required when called:    3
 15118 ;; This function calls:
 15119 ;;		Nothing
 15120 ;; This function is called by:
 15121 ;;		_delay_ms
 15122 ;;		_sprintf
 15123 ;; This function uses a non-reentrant model
 15124 ;;
 15125                           
 15126                           	psect	text42
 15127  015CE4                     __ptext42:
 15128                           	opt stack 0
 15129  015CE4                     ___wmul:
 15130                           	opt stack 26
 15131                           
 15132                           ; BSR set to: 0
 15133                           ;incstack = 0
 15134  015CE4  0100               	movlb	0	; () banked
 15135  015CE6  516E               	movf	___wmul@multiplier& (0+255),w,b
 15136  015CE8  0100               	movlb	0	; () banked
 15137  015CEA  0370               	mulwf	___wmul@multiplicand& (0+255),b
 15138  015CEC  CFF3 F072          	movff	prodl,___wmul@product
 15139  015CF0  CFF4 F073          	movff	prodh,___wmul@product+1
 15140  015CF4  0100               	movlb	0	; () banked
 15141  015CF6  516E               	movf	___wmul@multiplier& (0+255),w,b
 15142  015CF8  0100               	movlb	0	; () banked
 15143  015CFA  0371               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 15144  015CFC  50F3               	movf	prodl,w,c
 15145  015CFE  0100               	movlb	0	; () banked
 15146  015D00  2773               	addwf	(___wmul@product+1)& (0+255),f,b
 15147  015D02  0100               	movlb	0	; () banked
 15148  015D04  516F               	movf	(___wmul@multiplier+1)& (0+255),w,b
 15149  015D06  0100               	movlb	0	; () banked
 15150  015D08  0370               	mulwf	___wmul@multiplicand& (0+255),b
 15151  015D0A  50F3               	movf	prodl,w,c
 15152  015D0C  0100               	movlb	0	; () banked
 15153  015D0E  2773               	addwf	(___wmul@product+1)& (0+255),f,b
 15154                           
 15155                           ; BSR set to: 0
 15156  015D10  C072  F06E         	movff	___wmul@product,?___wmul
 15157  015D14  C073  F06F         	movff	___wmul@product+1,?___wmul+1
 15158  015D18  0012               	return	
 15159  015D1A                     __end_of___wmul:
 15160                           	opt stack 0
 15161                           tblptru	equ	0xFF8
 15162                           tblptrh	equ	0xFF7
 15163                           tblptrl	equ	0xFF6
 15164                           tablat	equ	0xFF5
 15165                           prodh	equ	0xFF4
 15166                           prodl	equ	0xFF3
 15167                           intcon	equ	0xFF2
 15168                           postinc0	equ	0xFEE
 15169                           wreg	equ	0xFE8
 15170                           indf1	equ	0xFE7
 15171                           plusw1	equ	0xFE3
 15172                           fsr1h	equ	0xFE2
 15173                           fsr1l	equ	0xFE1
 15174                           indf2	equ	0xFDF
 15175                           postinc2	equ	0xFDE
 15176                           plusw2	equ	0xFDB
 15177                           fsr2h	equ	0xFDA
 15178                           fsr2l	equ	0xFD9
 15179                           status	equ	0xFD8
 15180                           
 15181 ;; *************** function _Joystick_Polling *****************
 15182 ;; Defined at:
 15183 ;;		line 295 in file "RemoteCan.c"
 15184 ;; Parameters:    Size  Location     Type
 15185 ;;		None
 15186 ;; Auto vars:     Size  Location     Type
 15187 ;;  i               1   15[BANK0 ] unsigned char 
 15188 ;; Return value:  Size  Location     Type
 15189 ;;		None               void
 15190 ;; Registers used:
 15191 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15192 ;; Tracked objects:
 15193 ;;		On entry : 0/0
 15194 ;;		On exit  : 0/0
 15195 ;;		Unchanged: 0/0
 15196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15198 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15199 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15200 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15201 ;;Total ram usage:        2 bytes
 15202 ;; Hardware stack levels used:    1
 15203 ;; Hardware stack levels required when called:    3
 15204 ;; This function calls:
 15205 ;;		Nothing
 15206 ;; This function is called by:
 15207 ;;		_main
 15208 ;; This function uses a non-reentrant model
 15209 ;;
 15210                           
 15211                           	psect	text43
 15212  015B12                     __ptext43:
 15213                           	opt stack 0
 15214  015B12                     _Joystick_Polling:
 15215                           	opt stack 27
 15216                           
 15217                           ;RemoteCan.c: 296: for (unsigned char i = 0; i < 2; i++) {
 15218                           
 15219                           ; BSR set to: 0
 15220                           ;incstack = 0
 15221  015B12  0E00               	movlw	0
 15222  015B14  0100               	movlb	0	; () banked
 15223  015B16  6F6F               	movwf	Joystick_Polling@i& (0+255),b
 15224  015B18                     l6749:
 15225                           
 15226                           ; BSR set to: 0
 15227  015B18  0E01               	movlw	1
 15228  015B1A  0100               	movlb	0	; () banked
 15229  015B1C  656F               	cpfsgt	Joystick_Polling@i& (0+255),b
 15230  015B1E  D001               	goto	l807
 15231  015B20  0012               	return	
 15232  015B22                     l807:
 15233                           
 15234                           ; BSR set to: 0
 15235                           ;RemoteCan.c: 297: ADCON0bits.GO = 1;
 15236  015B22  82C2               	bsf	4034,1,c	;volatile
 15237  015B24                     l809:
 15238  015B24  B2C2               	btfsc	4034,1,c	;volatile
 15239  015B26  D7FE               	goto	l809
 15240                           
 15241                           ;RemoteCan.c: 299: JoystickValues[i] = ADRESH;
 15242  015B28  0100               	movlb	0	; () banked
 15243  015B2A  516F               	movf	Joystick_Polling@i& (0+255),w,b
 15244  015B2C  0D01               	mullw	1
 15245  015B2E  0EDE               	movlw	low _JoystickValues
 15246  015B30  24F3               	addwf	prodl,w,c
 15247  015B32  6ED9               	movwf	fsr2l,c
 15248  015B34  0E00               	movlw	high _JoystickValues
 15249  015B36  20F4               	addwfc	prodh,w,c
 15250  015B38  6EDA               	movwf	fsr2h,c
 15251  015B3A  CFC4 FFDF          	movff	4036,indf2	;volatile
 15252                           
 15253                           ; BSR set to: 0
 15254                           ;RemoteCan.c: 300: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 15255  015B3E  A4C2               	btfss	4034,2,c	;volatile
 15256  015B40  D002               	goto	u8470
 15257  015B42  0E01               	movlw	1
 15258  015B44  D001               	goto	u8476
 15259  015B46                     u8470:
 15260  015B46  0E00               	movlw	0
 15261  015B48                     u8476:
 15262  015B48  0AFF               	xorlw	255
 15263  015B4A  0100               	movlb	0	; () banked
 15264  015B4C  6F6E               	movwf	??_Joystick_Polling& (0+255),b
 15265  015B4E  0100               	movlb	0	; () banked
 15266  015B50  476E               	rlncf	??_Joystick_Polling& (0+255),f,b
 15267  015B52  476E               	rlncf	??_Joystick_Polling& (0+255),f,b
 15268  015B54  50C2               	movf	4034,w,c	;volatile
 15269  015B56  0100               	movlb	0	; () banked
 15270  015B58  196E               	xorwf	??_Joystick_Polling& (0+255),w,b
 15271  015B5A  0BFB               	andlw	-5
 15272  015B5C  196E               	xorwf	??_Joystick_Polling& (0+255),w,b
 15273  015B5E  6EC2               	movwf	4034,c	;volatile
 15274                           
 15275                           ; BSR set to: 0
 15276  015B60  0100               	movlb	0	; () banked
 15277  015B62  2B6F               	incf	Joystick_Polling@i& (0+255),f,b
 15278  015B64  D7D9               	goto	l6749
 15279  015B66                     __end_of_Joystick_Polling:
 15280                           	opt stack 0
 15281                           tblptru	equ	0xFF8
 15282                           tblptrh	equ	0xFF7
 15283                           tblptrl	equ	0xFF6
 15284                           tablat	equ	0xFF5
 15285                           prodh	equ	0xFF4
 15286                           prodl	equ	0xFF3
 15287                           intcon	equ	0xFF2
 15288                           postinc0	equ	0xFEE
 15289                           wreg	equ	0xFE8
 15290                           indf1	equ	0xFE7
 15291                           plusw1	equ	0xFE3
 15292                           fsr1h	equ	0xFE2
 15293                           fsr1l	equ	0xFE1
 15294                           indf2	equ	0xFDF
 15295                           postinc2	equ	0xFDE
 15296                           plusw2	equ	0xFDB
 15297                           fsr2h	equ	0xFDA
 15298                           fsr2l	equ	0xFD9
 15299                           status	equ	0xFD8
 15300                           
 15301 ;; *************** function _CAN_interpreter *****************
 15302 ;; Defined at:
 15303 ;;		line 246 in file "RemoteCan.c"
 15304 ;; Parameters:    Size  Location     Type
 15305 ;;		None
 15306 ;; Auto vars:     Size  Location     Type
 15307 ;;		None
 15308 ;; Return value:  Size  Location     Type
 15309 ;;		None               void
 15310 ;; Registers used:
 15311 ;;		wreg, status,2, status,0
 15312 ;; Tracked objects:
 15313 ;;		On entry : 0/0
 15314 ;;		On exit  : 0/0
 15315 ;;		Unchanged: 0/0
 15316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15319 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15320 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15321 ;;Total ram usage:        4 bytes
 15322 ;; Hardware stack levels used:    1
 15323 ;; Hardware stack levels required when called:    3
 15324 ;; This function calls:
 15325 ;;		Nothing
 15326 ;; This function is called by:
 15327 ;;		_main
 15328 ;; This function uses a non-reentrant model
 15329 ;;
 15330                           
 15331                           	psect	text44
 15332  0157BC                     __ptext44:
 15333                           	opt stack 0
 15334  0157BC                     _CAN_interpreter:
 15335                           	opt stack 27
 15336                           
 15337                           ;RemoteCan.c: 248: if (id == 0b00000000010) {
 15338                           
 15339                           ; BSR set to: 0
 15340                           ;incstack = 0
 15341  0157BC  0E02               	movlw	2
 15342  0157BE  1812               	xorwf	_id,w,c	;volatile
 15343  0157C0  1013               	iorwf	_id+1,w,c	;volatile
 15344  0157C2  1014               	iorwf	_id+2,w,c	;volatile
 15345  0157C4  1015               	iorwf	_id+3,w,c	;volatile
 15346  0157C6  A4D8               	btfss	status,2,c
 15347  0157C8  D015               	goto	l6777
 15348                           
 15349                           ;RemoteCan.c: 249: if (RTR_Flag == 1) {
 15350  0157CA  A447               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 15351  0157CC  D00C               	goto	l6767
 15352                           
 15353                           ;RemoteCan.c: 250: pr_time_4 = time_counter;
 15354  0157CE  C01A  F016         	movff	_time_counter,_pr_time_4	;volatile
 15355  0157D2  C01B  F017         	movff	_time_counter+1,_pr_time_4+1	;volatile
 15356  0157D6  C01C  F018         	movff	_time_counter+2,_pr_time_4+2	;volatile
 15357  0157DA  C01D  F019         	movff	_time_counter+3,_pr_time_4+3	;volatile
 15358                           
 15359                           ;RemoteCan.c: 254: MotoreFlag = 1;
 15360  0157DE  8247               	bsf	_MotoreFlag/(0+8),_MotoreFlag& (0+7),c	;volatile
 15361                           
 15362                           ;RemoteCan.c: 255: AbsFlag = 0;
 15363  0157E0  9047               	bcf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 15364                           
 15365                           ;RemoteCan.c: 256: SterzoFlag = 0;
 15366  0157E2  9647               	bcf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 15367                           
 15368                           ;RemoteCan.c: 257: } else {
 15369  0157E4  D007               	goto	l6777
 15370  0157E6                     l6767:
 15371                           
 15372                           ;RemoteCan.c: 258: if (data[0] == 0x01) {
 15373  0157E6  0424               	decf	_data,w,c
 15374  0157E8  B4D8               	btfsc	status,2,c
 15375                           
 15376                           ;RemoteCan.c: 259: AbsFlag = 1;
 15377  0157EA  8047               	bsf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 15378                           
 15379                           ;RemoteCan.c: 261: }
 15380                           ;RemoteCan.c: 262: if (data[0] == 0x02) {
 15381  0157EC  0E02               	movlw	2
 15382  0157EE  1824               	xorwf	_data,w,c
 15383  0157F0  B4D8               	btfsc	status,2,c
 15384                           
 15385                           ;RemoteCan.c: 263: SterzoFlag = 1;
 15386  0157F2  8647               	bsf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 15387  0157F4                     l6777:
 15388                           
 15389                           ;RemoteCan.c: 269: }
 15390                           ;RemoteCan.c: 270: }
 15391                           ;RemoteCan.c: 272: if ((id == 0b00000000110)&&(RTR_Flag == 0)) {
 15392  0157F4  0E06               	movlw	6
 15393  0157F6  1812               	xorwf	_id,w,c	;volatile
 15394  0157F8  1013               	iorwf	_id+1,w,c	;volatile
 15395  0157FA  1014               	iorwf	_id+2,w,c	;volatile
 15396  0157FC  1015               	iorwf	_id+3,w,c	;volatile
 15397  0157FE  B4D8               	btfsc	status,2,c
 15398  015800  B447               	btfsc	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 15399  015802  D027               	goto	l6789
 15400                           
 15401                           ;RemoteCan.c: 273: left_speed = data_speed_rx[1];
 15402  015804  C002  F01E         	movff	_data_speed_rx+1,_left_speed
 15403  015808  6A1F               	clrf	_left_speed+1,c
 15404                           
 15405                           ;RemoteCan.c: 274: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 15406  01580A  501E               	movf	_left_speed,w,c
 15407  01580C  0100               	movlb	0	; () banked
 15408  01580E  6F6E               	movwf	??_CAN_interpreter& (0+255),b
 15409  015810  5001               	movf	_data_speed_rx,w,c
 15410  015812  6E1E               	movwf	_left_speed,c
 15411  015814  C06E  F01F         	movff	??_CAN_interpreter,_left_speed+1
 15412                           
 15413                           ; BSR set to: 0
 15414                           ;RemoteCan.c: 275: right_speed = data_speed_rx[3];
 15415  015818  C004  F020         	movff	_data_speed_rx+3,_right_speed
 15416  01581C  6A21               	clrf	_right_speed+1,c
 15417                           
 15418                           ;RemoteCan.c: 276: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 15419  01581E  5020               	movf	_right_speed,w,c
 15420  015820  0100               	movlb	0	; () banked
 15421  015822  6F6E               	movwf	??_CAN_interpreter& (0+255),b
 15422  015824  5003               	movf	_data_speed_rx+2,w,c
 15423  015826  6E20               	movwf	_right_speed,c
 15424  015828  C06E  F021         	movff	??_CAN_interpreter,_right_speed+1
 15425                           
 15426                           ; BSR set to: 0
 15427                           ;RemoteCan.c: 277: actual_speed = (right_speed + left_speed) / 2;
 15428  01582C  501E               	movf	_left_speed,w,c
 15429  01582E  2420               	addwf	_right_speed,w,c
 15430  015830  0100               	movlb	0	; () banked
 15431  015832  6F6E               	movwf	??_CAN_interpreter& (0+255),b
 15432  015834  501F               	movf	_left_speed+1,w,c
 15433  015836  2021               	addwfc	_right_speed+1,w,c
 15434  015838  0100               	movlb	0	; () banked
 15435  01583A  6F6F               	movwf	(??_CAN_interpreter+1)& (0+255),b
 15436  01583C  90D8               	bcf	status,0,c
 15437  01583E  0100               	movlb	0	; () banked
 15438  015840  316F               	rrcf	(??_CAN_interpreter+1)& (0+255),w,b
 15439  015842  0100               	movlb	0	; () banked
 15440  015844  6F70               	movwf	(??_CAN_interpreter+2)& (0+255),b
 15441  015846  0100               	movlb	0	; () banked
 15442  015848  316E               	rrcf	??_CAN_interpreter& (0+255),w,b
 15443  01584A  0100               	movlb	0	; () banked
 15444  01584C  6FE0               	movwf	_actual_speed& (0+255),b
 15445  01584E  C070  F0E1         	movff	??_CAN_interpreter+2,_actual_speed+1
 15446  015852                     l6789:
 15447                           
 15448                           ;RemoteCan.c: 278: }
 15449                           ;RemoteCan.c: 280: if (id == 0b00000001001) {
 15450  015852  0E09               	movlw	9
 15451  015854  1812               	xorwf	_id,w,c	;volatile
 15452  015856  1013               	iorwf	_id+1,w,c	;volatile
 15453  015858  1014               	iorwf	_id+2,w,c	;volatile
 15454  01585A  1015               	iorwf	_id+3,w,c	;volatile
 15455  01585C  A4D8               	btfss	status,2,c
 15456  01585E  0012               	return	
 15457                           
 15458                           ;RemoteCan.c: 281: battery = data[0];
 15459  015860  C024  F022         	movff	_data,_battery	;volatile
 15460  015864  0012               	return	
 15461  015866                     __end_of_CAN_interpreter:
 15462                           	opt stack 0
 15463                           tblptru	equ	0xFF8
 15464                           tblptrh	equ	0xFF7
 15465                           tblptrl	equ	0xFF6
 15466                           tablat	equ	0xFF5
 15467                           prodh	equ	0xFF4
 15468                           prodl	equ	0xFF3
 15469                           intcon	equ	0xFF2
 15470                           postinc0	equ	0xFEE
 15471                           wreg	equ	0xFE8
 15472                           indf1	equ	0xFE7
 15473                           plusw1	equ	0xFE3
 15474                           fsr1h	equ	0xFE2
 15475                           fsr1l	equ	0xFE1
 15476                           indf2	equ	0xFDF
 15477                           postinc2	equ	0xFDE
 15478                           plusw2	equ	0xFDB
 15479                           fsr2h	equ	0xFDA
 15480                           fsr2l	equ	0xFD9
 15481                           status	equ	0xFD8
 15482                           
 15483 ;; *************** function _CAN_Send *****************
 15484 ;; Defined at:
 15485 ;;		line 198 in file "RemoteCan.c"
 15486 ;; Parameters:    Size  Location     Type
 15487 ;;		None
 15488 ;; Auto vars:     Size  Location     Type
 15489 ;;		None
 15490 ;; Return value:  Size  Location     Type
 15491 ;;		None               void
 15492 ;; Registers used:
 15493 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15494 ;; Tracked objects:
 15495 ;;		On entry : 0/0
 15496 ;;		On exit  : 0/0
 15497 ;;		Unchanged: 0/0
 15498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15503 ;;Total ram usage:        0 bytes
 15504 ;; Hardware stack levels used:    1
 15505 ;; Hardware stack levels required when called:    4
 15506 ;; This function calls:
 15507 ;;		_CANisTxReady
 15508 ;;		_CANsendMessage
 15509 ;; This function is called by:
 15510 ;;		_main
 15511 ;; This function uses a non-reentrant model
 15512 ;;
 15513                           
 15514                           	psect	text45
 15515  015702                     __ptext45:
 15516                           	opt stack 0
 15517  015702                     _CAN_Send:
 15518                           	opt stack 26
 15519  015702                     l6729:
 15520  015702  EC01  F0AF         	call	_CANisTxReady	;wreg free
 15521  015706  06E8               	decf	wreg,f,c
 15522  015708  A4D8               	btfss	status,2,c
 15523  01570A  D7FB               	goto	l6729
 15524                           
 15525                           ;RemoteCan.c: 200: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 15526  01570C  0E05               	movlw	5
 15527  01570E  0100               	movlb	0	; () banked
 15528  015710  6F6E               	movwf	CANsendMessage@identifier& (0+255),b
 15529  015712  0E00               	movlw	0
 15530  015714  6F6F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 15531  015716  0E00               	movlw	0
 15532  015718  6F70               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 15533  01571A  0E00               	movlw	0
 15534  01571C  6F71               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 15535  01571E  0EEA               	movlw	low _data_steering
 15536  015720  0100               	movlb	0	; () banked
 15537  015722  6F72               	movwf	CANsendMessage@data& (0+255),b
 15538  015724  0E00               	movlw	high _data_steering
 15539  015726  0100               	movlb	0	; () banked
 15540  015728  6F73               	movwf	(CANsendMessage@data+1)& (0+255),b
 15541  01572A  0E08               	movlw	8
 15542  01572C  0100               	movlb	0	; () banked
 15543  01572E  6F74               	movwf	CANsendMessage@dataLength& (0+255),b
 15544  015730  0EBC               	movlw	188
 15545  015732  0100               	movlb	0	; () banked
 15546  015734  6F75               	movwf	CANsendMessage@flags& (0+255),b
 15547  015736  ECCD  F089         	call	_CANsendMessage	;wreg free
 15548                           
 15549                           ;RemoteCan.c: 201: data_speed[0] = set_speed;
 15550  01573A  C0E4  F0E9         	movff	_set_speed,_data_speed	;volatile
 15551                           
 15552                           ;RemoteCan.c: 202: data_speed[1] = (set_speed >> 8);
 15553  01573E  0100               	movlb	0	; () banked
 15554  015740  51E5               	movf	(_set_speed+1)& (0+255),w,b	;volatile
 15555  015742  0100               	movlb	0	; () banked
 15556  015744  6FEA               	movwf	(_data_speed+1)& (0+255),b
 15557                           
 15558                           ; BSR set to: 0
 15559                           ;RemoteCan.c: 203: data_speed[2] = dir;
 15560  015746  C0E6  F0EB         	movff	_dir,_data_speed+2	;volatile
 15561  01574A                     l6739:
 15562  01574A  EC01  F0AF         	call	_CANisTxReady	;wreg free
 15563  01574E  06E8               	decf	wreg,f,c
 15564  015750  A4D8               	btfss	status,2,c
 15565  015752  D7FB               	goto	l6739
 15566                           
 15567                           ;RemoteCan.c: 205: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 15568  015754  0E03               	movlw	3
 15569  015756  0100               	movlb	0	; () banked
 15570  015758  6F6E               	movwf	CANsendMessage@identifier& (0+255),b
 15571  01575A  0E00               	movlw	0
 15572  01575C  6F6F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 15573  01575E  0E00               	movlw	0
 15574  015760  6F70               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 15575  015762  0E00               	movlw	0
 15576  015764  6F71               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 15577  015766  0EE9               	movlw	low _data_speed
 15578  015768  0100               	movlb	0	; () banked
 15579  01576A  6F72               	movwf	CANsendMessage@data& (0+255),b
 15580  01576C  0E00               	movlw	high _data_speed
 15581  01576E  0100               	movlb	0	; () banked
 15582  015770  6F73               	movwf	(CANsendMessage@data+1)& (0+255),b
 15583  015772  0E08               	movlw	8
 15584  015774  0100               	movlb	0	; () banked
 15585  015776  6F74               	movwf	CANsendMessage@dataLength& (0+255),b
 15586  015778  0EBC               	movlw	188
 15587  01577A  0100               	movlb	0	; () banked
 15588  01577C  6F75               	movwf	CANsendMessage@flags& (0+255),b
 15589  01577E  ECCD  F089         	call	_CANsendMessage	;wreg free
 15590  015782                     l6743:
 15591  015782  EC01  F0AF         	call	_CANisTxReady	;wreg free
 15592  015786  06E8               	decf	wreg,f,c
 15593  015788  A4D8               	btfss	status,2,c
 15594  01578A  D7FB               	goto	l6743
 15595                           
 15596                           ;RemoteCan.c: 207: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_1);
 15597  01578C  0E04               	movlw	4
 15598  01578E  0100               	movlb	0	; () banked
 15599  015790  6F6E               	movwf	CANsendMessage@identifier& (0+255),b
 15600  015792  0E00               	movlw	0
 15601  015794  6F6F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 15602  015796  0E00               	movlw	0
 15603  015798  6F70               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 15604  01579A  0E00               	movlw	0
 15605  01579C  6F71               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 15606  01579E  0EE8               	movlw	low _data_brake
 15607  0157A0  0100               	movlb	0	; () banked
 15608  0157A2  6F72               	movwf	CANsendMessage@data& (0+255),b
 15609  0157A4  0E00               	movlw	high _data_brake
 15610  0157A6  0100               	movlb	0	; () banked
 15611  0157A8  6F73               	movwf	(CANsendMessage@data+1)& (0+255),b
 15612  0157AA  0E08               	movlw	8
 15613  0157AC  0100               	movlb	0	; () banked
 15614  0157AE  6F74               	movwf	CANsendMessage@dataLength& (0+255),b
 15615  0157B0  0EBD               	movlw	189
 15616  0157B2  0100               	movlb	0	; () banked
 15617  0157B4  6F75               	movwf	CANsendMessage@flags& (0+255),b
 15618  0157B6  ECCD  F089         	call	_CANsendMessage	;wreg free
 15619  0157BA  0012               	return		;funcret
 15620  0157BC                     __end_of_CAN_Send:
 15621                           	opt stack 0
 15622                           tblptru	equ	0xFF8
 15623                           tblptrh	equ	0xFF7
 15624                           tblptrl	equ	0xFF6
 15625                           tablat	equ	0xFF5
 15626                           prodh	equ	0xFF4
 15627                           prodl	equ	0xFF3
 15628                           intcon	equ	0xFF2
 15629                           postinc0	equ	0xFEE
 15630                           wreg	equ	0xFE8
 15631                           indf1	equ	0xFE7
 15632                           plusw1	equ	0xFE3
 15633                           fsr1h	equ	0xFE2
 15634                           fsr1l	equ	0xFE1
 15635                           indf2	equ	0xFDF
 15636                           postinc2	equ	0xFDE
 15637                           plusw2	equ	0xFDB
 15638                           fsr2h	equ	0xFDA
 15639                           fsr2l	equ	0xFD9
 15640                           status	equ	0xFD8
 15641                           
 15642 ;; *************** function _CANsendMessage *****************
 15643 ;; Defined at:
 15644 ;;		line 294 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 15645 ;; Parameters:    Size  Location     Type
 15646 ;;  identifier      4   14[BANK0 ] unsigned long 
 15647 ;;  data            2   18[BANK0 ] PTR unsigned char 
 15648 ;;		 -> data_speed(1), data_brake(1), data_steering(1), data(1), 
 15649 ;;  dataLength      1   20[BANK0 ] unsigned char 
 15650 ;;  flags           1   21[BANK0 ] enum E16909
 15651 ;; Auto vars:     Size  Location     Type
 15652 ;;  tamp            4   26[BANK0 ] unsigned long 
 15653 ;; Return value:  Size  Location     Type
 15654 ;;		None               void
 15655 ;; Registers used:
 15656 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15657 ;; Tracked objects:
 15658 ;;		On entry : 0/0
 15659 ;;		On exit  : 0/0
 15660 ;;		Unchanged: 0/0
 15661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15662 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15663 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15664 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15665 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15666 ;;Total ram usage:       16 bytes
 15667 ;; Hardware stack levels used:    1
 15668 ;; Hardware stack levels required when called:    3
 15669 ;; This function calls:
 15670 ;;		Nothing
 15671 ;; This function is called by:
 15672 ;;		_CAN_Send
 15673 ;;		_LCD_Handler
 15674 ;; This function uses a non-reentrant model
 15675 ;;
 15676                           
 15677                           	psect	text46
 15678  01139A                     __ptext46:
 15679                           	opt stack 0
 15680  01139A                     _CANsendMessage:
 15681                           	opt stack 26
 15682                           
 15683                           ;inc\CANlib.h: 296: unsigned long tamp;
 15684                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 15685                           
 15686                           ;incstack = 0
 15687  01139A  010F               	movlb	15	; () banked
 15688  01139C  B740               	btfsc	64,3,b	;volatile
 15689  01139E  D13F               	goto	l371
 15690                           
 15691                           ; BSR set to: 15
 15692                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 15693  0113A0  C074  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
 15694                           
 15695                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 15696  0113A4  0100               	movlb	0	; () banked
 15697  0113A6  AD75               	btfss	CANsendMessage@flags& (0+255),6,b
 15698  0113A8  D003               	goto	l372
 15699                           
 15700                           ; BSR set to: 0
 15701                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 15702  0113AA  010F               	movlb	15	; () banked
 15703  0113AC  8D45               	bsf	69,6,b	;volatile
 15704  0113AE  D002               	goto	l373
 15705  0113B0                     l372:
 15706                           
 15707                           ; BSR set to: 0
 15708                           ;inc\CANlib.h: 302: else
 15709                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 15710  0113B0  010F               	movlb	15	; () banked
 15711  0113B2  9D45               	bcf	69,6,b	;volatile
 15712  0113B4                     l373:
 15713                           
 15714                           ; BSR set to: 15
 15715                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 15716  0113B4  0100               	movlb	0	; () banked
 15717  0113B6  A775               	btfss	CANsendMessage@flags& (0+255),3,b
 15718  0113B8  D079               	goto	l374
 15719                           
 15720                           ; BSR set to: 0
 15721                           ;inc\CANlib.h: 306: {
 15722                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 15723  0113BA  0100               	movlb	0	; () banked
 15724  0113BC  516E               	movf	CANsendMessage@identifier& (0+255),w,b
 15725  0113BE  0100               	movlb	0	; () banked
 15726  0113C0  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 15727  0113C2  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15728  0113C4  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15729  0113C6  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15730                           
 15731                           ; BSR set to: 0
 15732                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 15733  0113C8  C07A  FF44         	movff	CANsendMessage@tamp,3908	;volatile
 15734                           
 15735                           ; BSR set to: 0
 15736                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 15737  0113CC  0E00               	movlw	0
 15738  0113CE  0100               	movlb	0	; () banked
 15739  0113D0  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
 15740  0113D2  0100               	movlb	0	; () banked
 15741  0113D4  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 15742  0113D6  0EFF               	movlw	255
 15743  0113D8  0100               	movlb	0	; () banked
 15744  0113DA  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 15745  0113DC  0100               	movlb	0	; () banked
 15746  0113DE  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 15747  0113E0  0E00               	movlw	0
 15748  0113E2  0100               	movlb	0	; () banked
 15749  0113E4  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 15750  0113E6  0100               	movlb	0	; () banked
 15751  0113E8  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 15752  0113EA  0E00               	movlw	0
 15753  0113EC  0100               	movlb	0	; () banked
 15754  0113EE  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 15755  0113F0  0100               	movlb	0	; () banked
 15756  0113F2  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 15757                           
 15758                           ; BSR set to: 0
 15759                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 15760  0113F4  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
 15761  0113F8  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 15762  0113FC  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 15763  011400  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 15764  011404  C077  F076         	movff	??_CANsendMessage+1,??_CANsendMessage
 15765  011408  C078  F077         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 15766  01140C  C079  F078         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 15767  011410  0100               	movlb	0	; () banked
 15768  011412  6B79               	clrf	(??_CANsendMessage+3)& (0+255),b
 15769  011414  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 15770  011418  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15771  01141C  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15772  011420  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15773                           
 15774                           ; BSR set to: 0
 15775                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 15776  011424  C07A  FF43         	movff	CANsendMessage@tamp,3907	;volatile
 15777                           
 15778                           ; BSR set to: 0
 15779                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 15780  011428  0E00               	movlw	0
 15781  01142A  010F               	movlb	15	; () banked
 15782  01142C  6F42               	movwf	66,b	;volatile
 15783                           
 15784                           ; BSR set to: 15
 15785                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 15786  01142E  010F               	movlb	15	; () banked
 15787  011430  8742               	bsf	66,3,b	;volatile
 15788                           
 15789                           ; BSR set to: 15
 15790                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 15791  011432  0100               	movlb	0	; () banked
 15792  011434  A170               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 15793  011436  D002               	goto	l375
 15794                           
 15795                           ; BSR set to: 0
 15796                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 15797  011438  010F               	movlb	15	; () banked
 15798  01143A  8142               	bsf	66,0,b	;volatile
 15799  01143C                     l375:
 15800                           
 15801                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 15802  01143C  0100               	movlb	0	; () banked
 15803  01143E  A370               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 15804  011440  D002               	goto	l376
 15805                           
 15806                           ; BSR set to: 0
 15807                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 15808  011442  010F               	movlb	15	; () banked
 15809  011444  8342               	bsf	66,1,b	;volatile
 15810  011446                     l376:
 15811                           
 15812                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 15813  011446  0100               	movlb	0	; () banked
 15814  011448  A570               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 15815  01144A  D002               	goto	l377
 15816                           
 15817                           ; BSR set to: 0
 15818                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 15819  01144C  010F               	movlb	15	; () banked
 15820  01144E  8B42               	bsf	66,5,b	;volatile
 15821  011450                     l377:
 15822                           
 15823                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 15824  011450  0100               	movlb	0	; () banked
 15825  011452  A770               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 15826  011454  D002               	goto	l378
 15827                           
 15828                           ; BSR set to: 0
 15829                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 15830  011456  010F               	movlb	15	; () banked
 15831  011458  8D42               	bsf	66,6,b	;volatile
 15832  01145A                     l378:
 15833                           
 15834                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 15835  01145A  0100               	movlb	0	; () banked
 15836  01145C  A970               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 15837  01145E  D002               	goto	l5847
 15838                           
 15839                           ; BSR set to: 0
 15840                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 15841  011460  010F               	movlb	15	; () banked
 15842  011462  8F42               	bsf	66,7,b	;volatile
 15843  011464                     l5847:
 15844                           
 15845                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 15846  011464  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
 15847  011468  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 15848  01146C  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 15849  011470  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 15850  011474  0E16               	movlw	22
 15851  011476  D006               	goto	u7130
 15852  011478                     u7135:
 15853  011478  0100               	movlb	0	; () banked
 15854  01147A  90D8               	bcf	status,0,c
 15855  01147C  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 15856  01147E  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 15857  011480  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 15858  011482  3376               	rrcf	??_CANsendMessage& (0+255),f,b
 15859  011484                     u7130:
 15860  011484  2EE8               	decfsz	wreg,f,c
 15861  011486  D7F8               	goto	u7135
 15862  011488  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 15863  01148C  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15864  011490  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15865  011494  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15866                           
 15867                           ; BSR set to: 0
 15868                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 15869  011498  0100               	movlb	0	; () banked
 15870  01149A  517A               	movf	CANsendMessage@tamp& (0+255),w,b
 15871  01149C  0100               	movlb	0	; () banked
 15872  01149E  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 15873  0114A0  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15874  0114A2  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15875  0114A4  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15876                           
 15877                           ; BSR set to: 0
 15878                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 15879  0114A6  C07A  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 15880                           
 15881                           ;inc\CANlib.h: 332: }
 15882  0114AA  D059               	goto	l5867
 15883  0114AC                     l374:
 15884                           
 15885                           ; BSR set to: 0
 15886                           ;inc\CANlib.h: 334: else
 15887                           ;inc\CANlib.h: 336: {
 15888                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 15889  0114AC  010F               	movlb	15	; () banked
 15890  0114AE  9742               	bcf	66,3,b	;volatile
 15891                           
 15892                           ; BSR set to: 15
 15893                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 15894  0114B0  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
 15895  0114B4  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 15896  0114B8  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 15897  0114BC  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 15898  0114C0  0E04               	movlw	4
 15899  0114C2  D006               	goto	u7140
 15900  0114C4                     u7145:
 15901  0114C4  0100               	movlb	0	; () banked
 15902  0114C6  90D8               	bcf	status,0,c
 15903  0114C8  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 15904  0114CA  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 15905  0114CC  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 15906  0114CE  3376               	rrcf	??_CANsendMessage& (0+255),f,b
 15907  0114D0                     u7140:
 15908  0114D0  2EE8               	decfsz	wreg,f,c
 15909  0114D2  D7F8               	goto	u7145
 15910  0114D4  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 15911  0114D8  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15912  0114DC  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15913  0114E0  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15914                           
 15915                           ; BSR set to: 0
 15916                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 15917  0114E4  0100               	movlb	0	; () banked
 15918  0114E6  517A               	movf	CANsendMessage@tamp& (0+255),w,b
 15919  0114E8  0100               	movlb	0	; () banked
 15920  0114EA  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 15921  0114EC  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15922  0114EE  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15923  0114F0  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15924                           
 15925                           ; BSR set to: 0
 15926                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 15927  0114F2  C07A  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 15928                           
 15929                           ; BSR set to: 0
 15930                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 15931  0114F6  0E07               	movlw	7
 15932  0114F8  0100               	movlb	0	; () banked
 15933  0114FA  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
 15934  0114FC  0100               	movlb	0	; () banked
 15935  0114FE  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 15936  011500  0E00               	movlw	0
 15937  011502  0100               	movlb	0	; () banked
 15938  011504  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 15939  011506  0100               	movlb	0	; () banked
 15940  011508  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 15941  01150A  0E00               	movlw	0
 15942  01150C  0100               	movlb	0	; () banked
 15943  01150E  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 15944  011510  0100               	movlb	0	; () banked
 15945  011512  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 15946  011514  0E00               	movlw	0
 15947  011516  0100               	movlb	0	; () banked
 15948  011518  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 15949  01151A  0100               	movlb	0	; () banked
 15950  01151C  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 15951                           
 15952                           ; BSR set to: 0
 15953                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 15954  01151E  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
 15955  011522  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 15956  011526  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 15957  01152A  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 15958  01152E  0E05               	movlw	5
 15959  011530                     u7155:
 15960  011530  90D8               	bcf	status,0,c
 15961  011532  0100               	movlb	0	; () banked
 15962  011534  3776               	rlcf	??_CANsendMessage& (0+255),f,b
 15963  011536  3777               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 15964  011538  3778               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 15965  01153A  3779               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 15966  01153C  2EE8               	decfsz	wreg,f,c
 15967  01153E  D7F8               	goto	u7155
 15968  011540  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 15969  011544  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15970  011548  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15971  01154C  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15972                           
 15973                           ; BSR set to: 0
 15974                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 15975  011550  010F               	movlb	15	; () banked
 15976  011552  5142               	movf	66,w,b	;volatile
 15977  011554  0B1F               	andlw	31
 15978  011556  010F               	movlb	15	; () banked
 15979  011558  6F42               	movwf	66,b	;volatile
 15980                           
 15981                           ; BSR set to: 15
 15982                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 15983  01155A  C07A  FF42         	movff	CANsendMessage@tamp,3906	;volatile
 15984  01155E                     l5867:
 15985                           
 15986                           ;inc\CANlib.h: 347: }
 15987                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 15988  01155E  0100               	movlb	0	; () banked
 15989  011560  A175               	btfss	CANsendMessage@flags& (0+255),0,b
 15990  011562  D003               	goto	l381
 15991                           
 15992                           ; BSR set to: 0
 15993                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 15994  011564  010F               	movlb	15	; () banked
 15995  011566  8140               	bsf	64,0,b	;volatile
 15996  011568  D002               	goto	l382
 15997  01156A                     l381:
 15998                           
 15999                           ; BSR set to: 0
 16000                           ;inc\CANlib.h: 351: else
 16001                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 16002  01156A  010F               	movlb	15	; () banked
 16003  01156C  9140               	bcf	64,0,b	;volatile
 16004  01156E                     l382:
 16005                           
 16006                           ; BSR set to: 15
 16007                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 16008  01156E  0100               	movlb	0	; () banked
 16009  011570  A375               	btfss	CANsendMessage@flags& (0+255),1,b
 16010  011572  D003               	goto	l383
 16011                           
 16012                           ; BSR set to: 0
 16013                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 16014  011574  010F               	movlb	15	; () banked
 16015  011576  8340               	bsf	64,1,b	;volatile
 16016  011578  D002               	goto	l5873
 16017  01157A                     l383:
 16018                           
 16019                           ; BSR set to: 0
 16020                           ;inc\CANlib.h: 355: else
 16021                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 16022  01157A  010F               	movlb	15	; () banked
 16023  01157C  9340               	bcf	64,1,b	;volatile
 16024  01157E                     l5873:
 16025                           
 16026                           ; BSR set to: 15
 16027                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 16028  01157E  C072  FFD9         	movff	CANsendMessage@data,fsr2l
 16029  011582  C073  FFDA         	movff	CANsendMessage@data+1,fsr2h
 16030  011586  50DF               	movf	indf2,w,c
 16031  011588  010F               	movlb	15	; () banked
 16032  01158A  6F46               	movwf	70,b	;volatile
 16033                           
 16034                           ; BSR set to: 15
 16035                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 16036  01158C  0100               	movlb	0	; () banked
 16037  01158E  EE20 F001          	lfsr	2,1
 16038  011592  5172               	movf	CANsendMessage@data& (0+255),w,b
 16039  011594  26D9               	addwf	fsr2l,f,c
 16040  011596  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16041  011598  22DA               	addwfc	fsr2h,f,c
 16042  01159A  50DF               	movf	indf2,w,c
 16043  01159C  010F               	movlb	15	; () banked
 16044  01159E  6F47               	movwf	71,b	;volatile
 16045                           
 16046                           ; BSR set to: 15
 16047                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 16048  0115A0  0100               	movlb	0	; () banked
 16049  0115A2  EE20 F002          	lfsr	2,2
 16050  0115A6  5172               	movf	CANsendMessage@data& (0+255),w,b
 16051  0115A8  26D9               	addwf	fsr2l,f,c
 16052  0115AA  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16053  0115AC  22DA               	addwfc	fsr2h,f,c
 16054  0115AE  50DF               	movf	indf2,w,c
 16055  0115B0  010F               	movlb	15	; () banked
 16056  0115B2  6F48               	movwf	72,b	;volatile
 16057                           
 16058                           ; BSR set to: 15
 16059                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 16060  0115B4  0100               	movlb	0	; () banked
 16061  0115B6  EE20 F003          	lfsr	2,3
 16062  0115BA  5172               	movf	CANsendMessage@data& (0+255),w,b
 16063  0115BC  26D9               	addwf	fsr2l,f,c
 16064  0115BE  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16065  0115C0  22DA               	addwfc	fsr2h,f,c
 16066  0115C2  50DF               	movf	indf2,w,c
 16067  0115C4  010F               	movlb	15	; () banked
 16068  0115C6  6F49               	movwf	73,b	;volatile
 16069                           
 16070                           ; BSR set to: 15
 16071                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 16072  0115C8  0100               	movlb	0	; () banked
 16073  0115CA  EE20 F004          	lfsr	2,4
 16074  0115CE  5172               	movf	CANsendMessage@data& (0+255),w,b
 16075  0115D0  26D9               	addwf	fsr2l,f,c
 16076  0115D2  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16077  0115D4  22DA               	addwfc	fsr2h,f,c
 16078  0115D6  50DF               	movf	indf2,w,c
 16079  0115D8  010F               	movlb	15	; () banked
 16080  0115DA  6F4A               	movwf	74,b	;volatile
 16081                           
 16082                           ; BSR set to: 15
 16083                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 16084  0115DC  0100               	movlb	0	; () banked
 16085  0115DE  EE20 F005          	lfsr	2,5
 16086  0115E2  5172               	movf	CANsendMessage@data& (0+255),w,b
 16087  0115E4  26D9               	addwf	fsr2l,f,c
 16088  0115E6  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16089  0115E8  22DA               	addwfc	fsr2h,f,c
 16090  0115EA  50DF               	movf	indf2,w,c
 16091  0115EC  010F               	movlb	15	; () banked
 16092  0115EE  6F4B               	movwf	75,b	;volatile
 16093                           
 16094                           ; BSR set to: 15
 16095                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 16096  0115F0  0100               	movlb	0	; () banked
 16097  0115F2  EE20 F006          	lfsr	2,6
 16098  0115F6  5172               	movf	CANsendMessage@data& (0+255),w,b
 16099  0115F8  26D9               	addwf	fsr2l,f,c
 16100  0115FA  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16101  0115FC  22DA               	addwfc	fsr2h,f,c
 16102  0115FE  50DF               	movf	indf2,w,c
 16103  011600  010F               	movlb	15	; () banked
 16104  011602  6F4C               	movwf	76,b	;volatile
 16105                           
 16106                           ; BSR set to: 15
 16107                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 16108  011604  0100               	movlb	0	; () banked
 16109  011606  EE20 F007          	lfsr	2,7
 16110  01160A  5172               	movf	CANsendMessage@data& (0+255),w,b
 16111  01160C  26D9               	addwf	fsr2l,f,c
 16112  01160E  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16113  011610  22DA               	addwfc	fsr2h,f,c
 16114  011612  50DF               	movf	indf2,w,c
 16115  011614  010F               	movlb	15	; () banked
 16116  011616  6F4D               	movwf	77,b	;volatile
 16117                           
 16118                           ; BSR set to: 15
 16119                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 16120  011618  010F               	movlb	15	; () banked
 16121  01161A  8740               	bsf	64,3,b	;volatile
 16122                           
 16123                           ; BSR set to: 15
 16124                           ;inc\CANlib.h: 368: return;
 16125  01161C  0012               	return	
 16126  01161E                     l371:
 16127                           
 16128                           ; BSR set to: 15
 16129                           ;inc\CANlib.h: 369: }
 16130                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 16131  01161E  010F               	movlb	15	; () banked
 16132  011620  B730               	btfsc	48,3,b	;volatile
 16133  011622  D13F               	goto	l386
 16134                           
 16135                           ; BSR set to: 15
 16136                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 16137  011624  C074  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
 16138                           
 16139                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 16140  011628  0100               	movlb	0	; () banked
 16141  01162A  AD75               	btfss	CANsendMessage@flags& (0+255),6,b
 16142  01162C  D003               	goto	l387
 16143                           
 16144                           ; BSR set to: 0
 16145                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 16146  01162E  010F               	movlb	15	; () banked
 16147  011630  8D35               	bsf	53,6,b	;volatile
 16148  011632  D002               	goto	l388
 16149  011634                     l387:
 16150                           
 16151                           ; BSR set to: 0
 16152                           ;inc\CANlib.h: 378: else
 16153                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 16154  011634  010F               	movlb	15	; () banked
 16155  011636  9D35               	bcf	53,6,b	;volatile
 16156  011638                     l388:
 16157                           
 16158                           ; BSR set to: 15
 16159                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 16160  011638  0100               	movlb	0	; () banked
 16161  01163A  A775               	btfss	CANsendMessage@flags& (0+255),3,b
 16162  01163C  D079               	goto	l389
 16163                           
 16164                           ; BSR set to: 0
 16165                           ;inc\CANlib.h: 382: {
 16166                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 16167  01163E  0100               	movlb	0	; () banked
 16168  011640  516E               	movf	CANsendMessage@identifier& (0+255),w,b
 16169  011642  0100               	movlb	0	; () banked
 16170  011644  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 16171  011646  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16172  011648  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16173  01164A  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16174                           
 16175                           ; BSR set to: 0
 16176                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 16177  01164C  C07A  FF34         	movff	CANsendMessage@tamp,3892	;volatile
 16178                           
 16179                           ; BSR set to: 0
 16180                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 16181  011650  0E00               	movlw	0
 16182  011652  0100               	movlb	0	; () banked
 16183  011654  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
 16184  011656  0100               	movlb	0	; () banked
 16185  011658  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 16186  01165A  0EFF               	movlw	255
 16187  01165C  0100               	movlb	0	; () banked
 16188  01165E  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16189  011660  0100               	movlb	0	; () banked
 16190  011662  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16191  011664  0E00               	movlw	0
 16192  011666  0100               	movlb	0	; () banked
 16193  011668  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16194  01166A  0100               	movlb	0	; () banked
 16195  01166C  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16196  01166E  0E00               	movlw	0
 16197  011670  0100               	movlb	0	; () banked
 16198  011672  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16199  011674  0100               	movlb	0	; () banked
 16200  011676  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16201                           
 16202                           ; BSR set to: 0
 16203                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 16204  011678  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
 16205  01167C  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 16206  011680  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 16207  011684  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 16208  011688  C077  F076         	movff	??_CANsendMessage+1,??_CANsendMessage
 16209  01168C  C078  F077         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 16210  011690  C079  F078         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 16211  011694  0100               	movlb	0	; () banked
 16212  011696  6B79               	clrf	(??_CANsendMessage+3)& (0+255),b
 16213  011698  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 16214  01169C  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16215  0116A0  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16216  0116A4  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16217                           
 16218                           ; BSR set to: 0
 16219                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 16220  0116A8  C07A  FF33         	movff	CANsendMessage@tamp,3891	;volatile
 16221                           
 16222                           ; BSR set to: 0
 16223                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 16224  0116AC  0E00               	movlw	0
 16225  0116AE  010F               	movlb	15	; () banked
 16226  0116B0  6F32               	movwf	50,b	;volatile
 16227                           
 16228                           ; BSR set to: 15
 16229                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 16230  0116B2  010F               	movlb	15	; () banked
 16231  0116B4  8732               	bsf	50,3,b	;volatile
 16232                           
 16233                           ; BSR set to: 15
 16234                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 16235  0116B6  0100               	movlb	0	; () banked
 16236  0116B8  A170               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 16237  0116BA  D002               	goto	l390
 16238                           
 16239                           ; BSR set to: 0
 16240                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 16241  0116BC  010F               	movlb	15	; () banked
 16242  0116BE  8132               	bsf	50,0,b	;volatile
 16243  0116C0                     l390:
 16244                           
 16245                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 16246  0116C0  0100               	movlb	0	; () banked
 16247  0116C2  A370               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 16248  0116C4  D002               	goto	l391
 16249                           
 16250                           ; BSR set to: 0
 16251                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 16252  0116C6  010F               	movlb	15	; () banked
 16253  0116C8  8332               	bsf	50,1,b	;volatile
 16254  0116CA                     l391:
 16255                           
 16256                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 16257  0116CA  0100               	movlb	0	; () banked
 16258  0116CC  A570               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 16259  0116CE  D002               	goto	l392
 16260                           
 16261                           ; BSR set to: 0
 16262                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 16263  0116D0  010F               	movlb	15	; () banked
 16264  0116D2  8B32               	bsf	50,5,b	;volatile
 16265  0116D4                     l392:
 16266                           
 16267                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 16268  0116D4  0100               	movlb	0	; () banked
 16269  0116D6  A770               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 16270  0116D8  D002               	goto	l393
 16271                           
 16272                           ; BSR set to: 0
 16273                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 16274  0116DA  010F               	movlb	15	; () banked
 16275  0116DC  8D32               	bsf	50,6,b	;volatile
 16276  0116DE                     l393:
 16277                           
 16278                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 16279  0116DE  0100               	movlb	0	; () banked
 16280  0116E0  A970               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 16281  0116E2  D002               	goto	l5923
 16282                           
 16283                           ; BSR set to: 0
 16284                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 16285  0116E4  010F               	movlb	15	; () banked
 16286  0116E6  8F32               	bsf	50,7,b	;volatile
 16287  0116E8                     l5923:
 16288                           
 16289                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 16290  0116E8  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
 16291  0116EC  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 16292  0116F0  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 16293  0116F4  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 16294  0116F8  0E16               	movlw	22
 16295  0116FA  D006               	goto	u7260
 16296  0116FC                     u7265:
 16297  0116FC  0100               	movlb	0	; () banked
 16298  0116FE  90D8               	bcf	status,0,c
 16299  011700  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 16300  011702  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 16301  011704  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 16302  011706  3376               	rrcf	??_CANsendMessage& (0+255),f,b
 16303  011708                     u7260:
 16304  011708  2EE8               	decfsz	wreg,f,c
 16305  01170A  D7F8               	goto	u7265
 16306  01170C  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 16307  011710  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16308  011714  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16309  011718  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16310                           
 16311                           ; BSR set to: 0
 16312                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 16313  01171C  0100               	movlb	0	; () banked
 16314  01171E  517A               	movf	CANsendMessage@tamp& (0+255),w,b
 16315  011720  0100               	movlb	0	; () banked
 16316  011722  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 16317  011724  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16318  011726  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16319  011728  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16320                           
 16321                           ; BSR set to: 0
 16322                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 16323  01172A  C07A  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 16324                           
 16325                           ;inc\CANlib.h: 407: }
 16326  01172E  D059               	goto	l5943
 16327  011730                     l389:
 16328                           
 16329                           ; BSR set to: 0
 16330                           ;inc\CANlib.h: 409: else
 16331                           ;inc\CANlib.h: 411: {
 16332                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 16333  011730  010F               	movlb	15	; () banked
 16334  011732  9732               	bcf	50,3,b	;volatile
 16335                           
 16336                           ; BSR set to: 15
 16337                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 16338  011734  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
 16339  011738  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 16340  01173C  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 16341  011740  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 16342  011744  0E04               	movlw	4
 16343  011746  D006               	goto	u7270
 16344  011748                     u7275:
 16345  011748  0100               	movlb	0	; () banked
 16346  01174A  90D8               	bcf	status,0,c
 16347  01174C  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 16348  01174E  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 16349  011750  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 16350  011752  3376               	rrcf	??_CANsendMessage& (0+255),f,b
 16351  011754                     u7270:
 16352  011754  2EE8               	decfsz	wreg,f,c
 16353  011756  D7F8               	goto	u7275
 16354  011758  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 16355  01175C  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16356  011760  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16357  011764  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16358                           
 16359                           ; BSR set to: 0
 16360                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 16361  011768  0100               	movlb	0	; () banked
 16362  01176A  517A               	movf	CANsendMessage@tamp& (0+255),w,b
 16363  01176C  0100               	movlb	0	; () banked
 16364  01176E  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 16365  011770  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16366  011772  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16367  011774  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16368                           
 16369                           ; BSR set to: 0
 16370                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 16371  011776  C07A  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 16372                           
 16373                           ; BSR set to: 0
 16374                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 16375  01177A  0E07               	movlw	7
 16376  01177C  0100               	movlb	0	; () banked
 16377  01177E  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
 16378  011780  0100               	movlb	0	; () banked
 16379  011782  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 16380  011784  0E00               	movlw	0
 16381  011786  0100               	movlb	0	; () banked
 16382  011788  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16383  01178A  0100               	movlb	0	; () banked
 16384  01178C  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16385  01178E  0E00               	movlw	0
 16386  011790  0100               	movlb	0	; () banked
 16387  011792  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16388  011794  0100               	movlb	0	; () banked
 16389  011796  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16390  011798  0E00               	movlw	0
 16391  01179A  0100               	movlb	0	; () banked
 16392  01179C  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16393  01179E  0100               	movlb	0	; () banked
 16394  0117A0  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16395                           
 16396                           ; BSR set to: 0
 16397                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 16398  0117A2  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
 16399  0117A6  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 16400  0117AA  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 16401  0117AE  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 16402  0117B2  0E05               	movlw	5
 16403  0117B4                     u7285:
 16404  0117B4  90D8               	bcf	status,0,c
 16405  0117B6  0100               	movlb	0	; () banked
 16406  0117B8  3776               	rlcf	??_CANsendMessage& (0+255),f,b
 16407  0117BA  3777               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 16408  0117BC  3778               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 16409  0117BE  3779               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 16410  0117C0  2EE8               	decfsz	wreg,f,c
 16411  0117C2  D7F8               	goto	u7285
 16412  0117C4  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 16413  0117C8  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16414  0117CC  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16415  0117D0  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16416                           
 16417                           ; BSR set to: 0
 16418                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 16419  0117D4  010F               	movlb	15	; () banked
 16420  0117D6  5132               	movf	50,w,b	;volatile
 16421  0117D8  0B1F               	andlw	31
 16422  0117DA  010F               	movlb	15	; () banked
 16423  0117DC  6F32               	movwf	50,b	;volatile
 16424                           
 16425                           ; BSR set to: 15
 16426                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 16427  0117DE  C07A  FF32         	movff	CANsendMessage@tamp,3890	;volatile
 16428  0117E2                     l5943:
 16429                           
 16430                           ;inc\CANlib.h: 422: }
 16431                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 16432  0117E2  0100               	movlb	0	; () banked
 16433  0117E4  A175               	btfss	CANsendMessage@flags& (0+255),0,b
 16434  0117E6  D003               	goto	l396
 16435                           
 16436                           ; BSR set to: 0
 16437                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 16438  0117E8  010F               	movlb	15	; () banked
 16439  0117EA  8130               	bsf	48,0,b	;volatile
 16440  0117EC  D002               	goto	l397
 16441  0117EE                     l396:
 16442                           
 16443                           ; BSR set to: 0
 16444                           ;inc\CANlib.h: 426: else
 16445                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 16446  0117EE  010F               	movlb	15	; () banked
 16447  0117F0  9130               	bcf	48,0,b	;volatile
 16448  0117F2                     l397:
 16449                           
 16450                           ; BSR set to: 15
 16451                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 16452  0117F2  0100               	movlb	0	; () banked
 16453  0117F4  A375               	btfss	CANsendMessage@flags& (0+255),1,b
 16454  0117F6  D003               	goto	l398
 16455                           
 16456                           ; BSR set to: 0
 16457                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 16458  0117F8  010F               	movlb	15	; () banked
 16459  0117FA  8330               	bsf	48,1,b	;volatile
 16460  0117FC  D002               	goto	l5949
 16461  0117FE                     l398:
 16462                           
 16463                           ; BSR set to: 0
 16464                           ;inc\CANlib.h: 430: else
 16465                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 16466  0117FE  010F               	movlb	15	; () banked
 16467  011800  9330               	bcf	48,1,b	;volatile
 16468  011802                     l5949:
 16469                           
 16470                           ; BSR set to: 15
 16471                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 16472  011802  C072  FFD9         	movff	CANsendMessage@data,fsr2l
 16473  011806  C073  FFDA         	movff	CANsendMessage@data+1,fsr2h
 16474  01180A  50DF               	movf	indf2,w,c
 16475  01180C  010F               	movlb	15	; () banked
 16476  01180E  6F36               	movwf	54,b	;volatile
 16477                           
 16478                           ; BSR set to: 15
 16479                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 16480  011810  0100               	movlb	0	; () banked
 16481  011812  EE20 F001          	lfsr	2,1
 16482  011816  5172               	movf	CANsendMessage@data& (0+255),w,b
 16483  011818  26D9               	addwf	fsr2l,f,c
 16484  01181A  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16485  01181C  22DA               	addwfc	fsr2h,f,c
 16486  01181E  50DF               	movf	indf2,w,c
 16487  011820  010F               	movlb	15	; () banked
 16488  011822  6F37               	movwf	55,b	;volatile
 16489                           
 16490                           ; BSR set to: 15
 16491                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 16492  011824  0100               	movlb	0	; () banked
 16493  011826  EE20 F002          	lfsr	2,2
 16494  01182A  5172               	movf	CANsendMessage@data& (0+255),w,b
 16495  01182C  26D9               	addwf	fsr2l,f,c
 16496  01182E  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16497  011830  22DA               	addwfc	fsr2h,f,c
 16498  011832  50DF               	movf	indf2,w,c
 16499  011834  010F               	movlb	15	; () banked
 16500  011836  6F38               	movwf	56,b	;volatile
 16501                           
 16502                           ; BSR set to: 15
 16503                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 16504  011838  0100               	movlb	0	; () banked
 16505  01183A  EE20 F003          	lfsr	2,3
 16506  01183E  5172               	movf	CANsendMessage@data& (0+255),w,b
 16507  011840  26D9               	addwf	fsr2l,f,c
 16508  011842  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16509  011844  22DA               	addwfc	fsr2h,f,c
 16510  011846  50DF               	movf	indf2,w,c
 16511  011848  010F               	movlb	15	; () banked
 16512  01184A  6F39               	movwf	57,b	;volatile
 16513                           
 16514                           ; BSR set to: 15
 16515                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 16516  01184C  0100               	movlb	0	; () banked
 16517  01184E  EE20 F004          	lfsr	2,4
 16518  011852  5172               	movf	CANsendMessage@data& (0+255),w,b
 16519  011854  26D9               	addwf	fsr2l,f,c
 16520  011856  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16521  011858  22DA               	addwfc	fsr2h,f,c
 16522  01185A  50DF               	movf	indf2,w,c
 16523  01185C  010F               	movlb	15	; () banked
 16524  01185E  6F3A               	movwf	58,b	;volatile
 16525                           
 16526                           ; BSR set to: 15
 16527                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 16528  011860  0100               	movlb	0	; () banked
 16529  011862  EE20 F005          	lfsr	2,5
 16530  011866  5172               	movf	CANsendMessage@data& (0+255),w,b
 16531  011868  26D9               	addwf	fsr2l,f,c
 16532  01186A  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16533  01186C  22DA               	addwfc	fsr2h,f,c
 16534  01186E  50DF               	movf	indf2,w,c
 16535  011870  010F               	movlb	15	; () banked
 16536  011872  6F3B               	movwf	59,b	;volatile
 16537                           
 16538                           ; BSR set to: 15
 16539                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 16540  011874  0100               	movlb	0	; () banked
 16541  011876  EE20 F006          	lfsr	2,6
 16542  01187A  5172               	movf	CANsendMessage@data& (0+255),w,b
 16543  01187C  26D9               	addwf	fsr2l,f,c
 16544  01187E  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16545  011880  22DA               	addwfc	fsr2h,f,c
 16546  011882  50DF               	movf	indf2,w,c
 16547  011884  010F               	movlb	15	; () banked
 16548  011886  6F3C               	movwf	60,b	;volatile
 16549                           
 16550                           ; BSR set to: 15
 16551                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 16552  011888  0100               	movlb	0	; () banked
 16553  01188A  EE20 F007          	lfsr	2,7
 16554  01188E  5172               	movf	CANsendMessage@data& (0+255),w,b
 16555  011890  26D9               	addwf	fsr2l,f,c
 16556  011892  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16557  011894  22DA               	addwfc	fsr2h,f,c
 16558  011896  50DF               	movf	indf2,w,c
 16559  011898  010F               	movlb	15	; () banked
 16560  01189A  6F3D               	movwf	61,b	;volatile
 16561                           
 16562                           ; BSR set to: 15
 16563                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 16564  01189C  010F               	movlb	15	; () banked
 16565  01189E  8730               	bsf	48,3,b	;volatile
 16566                           
 16567                           ; BSR set to: 15
 16568                           ;inc\CANlib.h: 444: return;
 16569  0118A0  0012               	return	
 16570  0118A2                     l386:
 16571                           
 16572                           ; BSR set to: 15
 16573                           ;inc\CANlib.h: 445: }
 16574                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 16575  0118A2  010F               	movlb	15	; () banked
 16576  0118A4  B720               	btfsc	32,3,b	;volatile
 16577  0118A6  0012               	return	
 16578                           
 16579                           ; BSR set to: 15
 16580                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 16581  0118A8  C074  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
 16582                           
 16583                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 16584  0118AC  0100               	movlb	0	; () banked
 16585  0118AE  AD75               	btfss	CANsendMessage@flags& (0+255),6,b
 16586  0118B0  D003               	goto	l401
 16587                           
 16588                           ; BSR set to: 0
 16589                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 16590  0118B2  010F               	movlb	15	; () banked
 16591  0118B4  8D25               	bsf	37,6,b	;volatile
 16592  0118B6  D002               	goto	l402
 16593  0118B8                     l401:
 16594                           
 16595                           ; BSR set to: 0
 16596                           ;inc\CANlib.h: 454: else
 16597                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 16598  0118B8  010F               	movlb	15	; () banked
 16599  0118BA  9D25               	bcf	37,6,b	;volatile
 16600  0118BC                     l402:
 16601                           
 16602                           ; BSR set to: 15
 16603                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 16604  0118BC  0100               	movlb	0	; () banked
 16605  0118BE  A775               	btfss	CANsendMessage@flags& (0+255),3,b
 16606  0118C0  D079               	goto	l403
 16607                           
 16608                           ; BSR set to: 0
 16609                           ;inc\CANlib.h: 458: {
 16610                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 16611  0118C2  0100               	movlb	0	; () banked
 16612  0118C4  516E               	movf	CANsendMessage@identifier& (0+255),w,b
 16613  0118C6  0100               	movlb	0	; () banked
 16614  0118C8  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 16615  0118CA  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16616  0118CC  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16617  0118CE  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16618                           
 16619                           ; BSR set to: 0
 16620                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 16621  0118D0  C07A  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 16622                           
 16623                           ; BSR set to: 0
 16624                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 16625  0118D4  0E00               	movlw	0
 16626  0118D6  0100               	movlb	0	; () banked
 16627  0118D8  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
 16628  0118DA  0100               	movlb	0	; () banked
 16629  0118DC  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 16630  0118DE  0EFF               	movlw	255
 16631  0118E0  0100               	movlb	0	; () banked
 16632  0118E2  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16633  0118E4  0100               	movlb	0	; () banked
 16634  0118E6  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16635  0118E8  0E00               	movlw	0
 16636  0118EA  0100               	movlb	0	; () banked
 16637  0118EC  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16638  0118EE  0100               	movlb	0	; () banked
 16639  0118F0  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16640  0118F2  0E00               	movlw	0
 16641  0118F4  0100               	movlb	0	; () banked
 16642  0118F6  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16643  0118F8  0100               	movlb	0	; () banked
 16644  0118FA  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16645                           
 16646                           ; BSR set to: 0
 16647                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 16648  0118FC  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
 16649  011900  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 16650  011904  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 16651  011908  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 16652  01190C  C077  F076         	movff	??_CANsendMessage+1,??_CANsendMessage
 16653  011910  C078  F077         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 16654  011914  C079  F078         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 16655  011918  0100               	movlb	0	; () banked
 16656  01191A  6B79               	clrf	(??_CANsendMessage+3)& (0+255),b
 16657  01191C  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 16658  011920  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16659  011924  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16660  011928  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16661                           
 16662                           ; BSR set to: 0
 16663                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 16664  01192C  C07A  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 16665                           
 16666                           ; BSR set to: 0
 16667                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 16668  011930  0E00               	movlw	0
 16669  011932  010F               	movlb	15	; () banked
 16670  011934  6F22               	movwf	34,b	;volatile
 16671                           
 16672                           ; BSR set to: 15
 16673                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 16674  011936  010F               	movlb	15	; () banked
 16675  011938  8722               	bsf	34,3,b	;volatile
 16676                           
 16677                           ; BSR set to: 15
 16678                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 16679  01193A  0100               	movlb	0	; () banked
 16680  01193C  A170               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 16681  01193E  D002               	goto	l404
 16682                           
 16683                           ; BSR set to: 0
 16684                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 16685  011940  010F               	movlb	15	; () banked
 16686  011942  8122               	bsf	34,0,b	;volatile
 16687  011944                     l404:
 16688                           
 16689                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 16690  011944  0100               	movlb	0	; () banked
 16691  011946  A370               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 16692  011948  D002               	goto	l405
 16693                           
 16694                           ; BSR set to: 0
 16695                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 16696  01194A  010F               	movlb	15	; () banked
 16697  01194C  8322               	bsf	34,1,b	;volatile
 16698  01194E                     l405:
 16699                           
 16700                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 16701  01194E  0100               	movlb	0	; () banked
 16702  011950  A570               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 16703  011952  D002               	goto	l406
 16704                           
 16705                           ; BSR set to: 0
 16706                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 16707  011954  010F               	movlb	15	; () banked
 16708  011956  8B22               	bsf	34,5,b	;volatile
 16709  011958                     l406:
 16710                           
 16711                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 16712  011958  0100               	movlb	0	; () banked
 16713  01195A  A770               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 16714  01195C  D002               	goto	l407
 16715                           
 16716                           ; BSR set to: 0
 16717                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 16718  01195E  010F               	movlb	15	; () banked
 16719  011960  8D22               	bsf	34,6,b	;volatile
 16720  011962                     l407:
 16721                           
 16722                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 16723  011962  0100               	movlb	0	; () banked
 16724  011964  A970               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 16725  011966  D002               	goto	l5999
 16726                           
 16727                           ; BSR set to: 0
 16728                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 16729  011968  010F               	movlb	15	; () banked
 16730  01196A  8F22               	bsf	34,7,b	;volatile
 16731  01196C                     l5999:
 16732                           
 16733                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 16734  01196C  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
 16735  011970  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 16736  011974  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 16737  011978  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 16738  01197C  0E16               	movlw	22
 16739  01197E  D006               	goto	u7390
 16740  011980                     u7395:
 16741  011980  0100               	movlb	0	; () banked
 16742  011982  90D8               	bcf	status,0,c
 16743  011984  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 16744  011986  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 16745  011988  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 16746  01198A  3376               	rrcf	??_CANsendMessage& (0+255),f,b
 16747  01198C                     u7390:
 16748  01198C  2EE8               	decfsz	wreg,f,c
 16749  01198E  D7F8               	goto	u7395
 16750  011990  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 16751  011994  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16752  011998  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16753  01199C  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16754                           
 16755                           ; BSR set to: 0
 16756                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 16757  0119A0  0100               	movlb	0	; () banked
 16758  0119A2  517A               	movf	CANsendMessage@tamp& (0+255),w,b
 16759  0119A4  0100               	movlb	0	; () banked
 16760  0119A6  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 16761  0119A8  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16762  0119AA  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16763  0119AC  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16764                           
 16765                           ; BSR set to: 0
 16766                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 16767  0119AE  C07A  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 16768                           
 16769                           ;inc\CANlib.h: 483: }
 16770  0119B2  D059               	goto	l6019
 16771  0119B4                     l403:
 16772                           
 16773                           ; BSR set to: 0
 16774                           ;inc\CANlib.h: 485: else
 16775                           ;inc\CANlib.h: 487: {
 16776                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 16777  0119B4  010F               	movlb	15	; () banked
 16778  0119B6  9722               	bcf	34,3,b	;volatile
 16779                           
 16780                           ; BSR set to: 15
 16781                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 16782  0119B8  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
 16783  0119BC  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 16784  0119C0  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 16785  0119C4  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 16786  0119C8  0E04               	movlw	4
 16787  0119CA  D006               	goto	u7400
 16788  0119CC                     u7405:
 16789  0119CC  0100               	movlb	0	; () banked
 16790  0119CE  90D8               	bcf	status,0,c
 16791  0119D0  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 16792  0119D2  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 16793  0119D4  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 16794  0119D6  3376               	rrcf	??_CANsendMessage& (0+255),f,b
 16795  0119D8                     u7400:
 16796  0119D8  2EE8               	decfsz	wreg,f,c
 16797  0119DA  D7F8               	goto	u7405
 16798  0119DC  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 16799  0119E0  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16800  0119E4  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16801  0119E8  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16802                           
 16803                           ; BSR set to: 0
 16804                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 16805  0119EC  0100               	movlb	0	; () banked
 16806  0119EE  517A               	movf	CANsendMessage@tamp& (0+255),w,b
 16807  0119F0  0100               	movlb	0	; () banked
 16808  0119F2  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 16809  0119F4  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16810  0119F6  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16811  0119F8  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16812                           
 16813                           ; BSR set to: 0
 16814                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 16815  0119FA  C07A  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 16816                           
 16817                           ; BSR set to: 0
 16818                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 16819  0119FE  0E07               	movlw	7
 16820  011A00  0100               	movlb	0	; () banked
 16821  011A02  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
 16822  011A04  0100               	movlb	0	; () banked
 16823  011A06  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 16824  011A08  0E00               	movlw	0
 16825  011A0A  0100               	movlb	0	; () banked
 16826  011A0C  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16827  011A0E  0100               	movlb	0	; () banked
 16828  011A10  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16829  011A12  0E00               	movlw	0
 16830  011A14  0100               	movlb	0	; () banked
 16831  011A16  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16832  011A18  0100               	movlb	0	; () banked
 16833  011A1A  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16834  011A1C  0E00               	movlw	0
 16835  011A1E  0100               	movlb	0	; () banked
 16836  011A20  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16837  011A22  0100               	movlb	0	; () banked
 16838  011A24  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16839                           
 16840                           ; BSR set to: 0
 16841                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 16842  011A26  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
 16843  011A2A  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 16844  011A2E  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 16845  011A32  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 16846  011A36  0E05               	movlw	5
 16847  011A38                     u7415:
 16848  011A38  90D8               	bcf	status,0,c
 16849  011A3A  0100               	movlb	0	; () banked
 16850  011A3C  3776               	rlcf	??_CANsendMessage& (0+255),f,b
 16851  011A3E  3777               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 16852  011A40  3778               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 16853  011A42  3779               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 16854  011A44  2EE8               	decfsz	wreg,f,c
 16855  011A46  D7F8               	goto	u7415
 16856  011A48  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 16857  011A4C  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16858  011A50  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16859  011A54  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16860                           
 16861                           ; BSR set to: 0
 16862                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 16863  011A58  010F               	movlb	15	; () banked
 16864  011A5A  5122               	movf	34,w,b	;volatile
 16865  011A5C  0B1F               	andlw	31
 16866  011A5E  010F               	movlb	15	; () banked
 16867  011A60  6F22               	movwf	34,b	;volatile
 16868                           
 16869                           ; BSR set to: 15
 16870                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 16871  011A62  C07A  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 16872  011A66                     l6019:
 16873                           
 16874                           ;inc\CANlib.h: 498: }
 16875                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 16876  011A66  0100               	movlb	0	; () banked
 16877  011A68  A175               	btfss	CANsendMessage@flags& (0+255),0,b
 16878  011A6A  D003               	goto	l410
 16879                           
 16880                           ; BSR set to: 0
 16881                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 16882  011A6C  010F               	movlb	15	; () banked
 16883  011A6E  8120               	bsf	32,0,b	;volatile
 16884  011A70  D002               	goto	l411
 16885  011A72                     l410:
 16886                           
 16887                           ; BSR set to: 0
 16888                           ;inc\CANlib.h: 502: else
 16889                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 16890  011A72  010F               	movlb	15	; () banked
 16891  011A74  9120               	bcf	32,0,b	;volatile
 16892  011A76                     l411:
 16893                           
 16894                           ; BSR set to: 15
 16895                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 16896  011A76  0100               	movlb	0	; () banked
 16897  011A78  A375               	btfss	CANsendMessage@flags& (0+255),1,b
 16898  011A7A  D003               	goto	l412
 16899                           
 16900                           ; BSR set to: 0
 16901                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 16902  011A7C  010F               	movlb	15	; () banked
 16903  011A7E  8320               	bsf	32,1,b	;volatile
 16904  011A80  D002               	goto	l6025
 16905  011A82                     l412:
 16906                           
 16907                           ; BSR set to: 0
 16908                           ;inc\CANlib.h: 506: else
 16909                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 16910  011A82  010F               	movlb	15	; () banked
 16911  011A84  9320               	bcf	32,1,b	;volatile
 16912  011A86                     l6025:
 16913                           
 16914                           ; BSR set to: 15
 16915                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 16916  011A86  C072  FFD9         	movff	CANsendMessage@data,fsr2l
 16917  011A8A  C073  FFDA         	movff	CANsendMessage@data+1,fsr2h
 16918  011A8E  50DF               	movf	indf2,w,c
 16919  011A90  010F               	movlb	15	; () banked
 16920  011A92  6F26               	movwf	38,b	;volatile
 16921                           
 16922                           ; BSR set to: 15
 16923                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 16924  011A94  0100               	movlb	0	; () banked
 16925  011A96  EE20 F001          	lfsr	2,1
 16926  011A9A  5172               	movf	CANsendMessage@data& (0+255),w,b
 16927  011A9C  26D9               	addwf	fsr2l,f,c
 16928  011A9E  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16929  011AA0  22DA               	addwfc	fsr2h,f,c
 16930  011AA2  50DF               	movf	indf2,w,c
 16931  011AA4  010F               	movlb	15	; () banked
 16932  011AA6  6F27               	movwf	39,b	;volatile
 16933                           
 16934                           ; BSR set to: 15
 16935                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 16936  011AA8  0100               	movlb	0	; () banked
 16937  011AAA  EE20 F002          	lfsr	2,2
 16938  011AAE  5172               	movf	CANsendMessage@data& (0+255),w,b
 16939  011AB0  26D9               	addwf	fsr2l,f,c
 16940  011AB2  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16941  011AB4  22DA               	addwfc	fsr2h,f,c
 16942  011AB6  50DF               	movf	indf2,w,c
 16943  011AB8  010F               	movlb	15	; () banked
 16944  011ABA  6F28               	movwf	40,b	;volatile
 16945                           
 16946                           ; BSR set to: 15
 16947                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 16948  011ABC  0100               	movlb	0	; () banked
 16949  011ABE  EE20 F003          	lfsr	2,3
 16950  011AC2  5172               	movf	CANsendMessage@data& (0+255),w,b
 16951  011AC4  26D9               	addwf	fsr2l,f,c
 16952  011AC6  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16953  011AC8  22DA               	addwfc	fsr2h,f,c
 16954  011ACA  50DF               	movf	indf2,w,c
 16955  011ACC  010F               	movlb	15	; () banked
 16956  011ACE  6F29               	movwf	41,b	;volatile
 16957                           
 16958                           ; BSR set to: 15
 16959                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 16960  011AD0  0100               	movlb	0	; () banked
 16961  011AD2  EE20 F004          	lfsr	2,4
 16962  011AD6  5172               	movf	CANsendMessage@data& (0+255),w,b
 16963  011AD8  26D9               	addwf	fsr2l,f,c
 16964  011ADA  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16965  011ADC  22DA               	addwfc	fsr2h,f,c
 16966  011ADE  50DF               	movf	indf2,w,c
 16967  011AE0  010F               	movlb	15	; () banked
 16968  011AE2  6F2A               	movwf	42,b	;volatile
 16969                           
 16970                           ; BSR set to: 15
 16971                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 16972  011AE4  0100               	movlb	0	; () banked
 16973  011AE6  EE20 F005          	lfsr	2,5
 16974  011AEA  5172               	movf	CANsendMessage@data& (0+255),w,b
 16975  011AEC  26D9               	addwf	fsr2l,f,c
 16976  011AEE  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16977  011AF0  22DA               	addwfc	fsr2h,f,c
 16978  011AF2  50DF               	movf	indf2,w,c
 16979  011AF4  010F               	movlb	15	; () banked
 16980  011AF6  6F2B               	movwf	43,b	;volatile
 16981                           
 16982                           ; BSR set to: 15
 16983                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 16984  011AF8  0100               	movlb	0	; () banked
 16985  011AFA  EE20 F006          	lfsr	2,6
 16986  011AFE  5172               	movf	CANsendMessage@data& (0+255),w,b
 16987  011B00  26D9               	addwf	fsr2l,f,c
 16988  011B02  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16989  011B04  22DA               	addwfc	fsr2h,f,c
 16990  011B06  50DF               	movf	indf2,w,c
 16991  011B08  010F               	movlb	15	; () banked
 16992  011B0A  6F2C               	movwf	44,b	;volatile
 16993                           
 16994                           ; BSR set to: 15
 16995                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 16996  011B0C  0100               	movlb	0	; () banked
 16997  011B0E  EE20 F007          	lfsr	2,7
 16998  011B12  5172               	movf	CANsendMessage@data& (0+255),w,b
 16999  011B14  26D9               	addwf	fsr2l,f,c
 17000  011B16  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17001  011B18  22DA               	addwfc	fsr2h,f,c
 17002  011B1A  50DF               	movf	indf2,w,c
 17003  011B1C  010F               	movlb	15	; () banked
 17004  011B1E  6F2D               	movwf	45,b	;volatile
 17005                           
 17006                           ; BSR set to: 15
 17007                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 17008  011B20  010F               	movlb	15	; () banked
 17009  011B22  8720               	bsf	32,3,b	;volatile
 17010                           
 17011                           ; BSR set to: 15
 17012                           ;inc\CANlib.h: 520: return;
 17013  011B24  0012               	return	
 17014  011B26                     __end_of_CANsendMessage:
 17015                           	opt stack 0
 17016                           tblptru	equ	0xFF8
 17017                           tblptrh	equ	0xFF7
 17018                           tblptrl	equ	0xFF6
 17019                           tablat	equ	0xFF5
 17020                           prodh	equ	0xFF4
 17021                           prodl	equ	0xFF3
 17022                           intcon	equ	0xFF2
 17023                           postinc0	equ	0xFEE
 17024                           wreg	equ	0xFE8
 17025                           indf1	equ	0xFE7
 17026                           plusw1	equ	0xFE3
 17027                           fsr1h	equ	0xFE2
 17028                           fsr1l	equ	0xFE1
 17029                           indf2	equ	0xFDF
 17030                           postinc2	equ	0xFDE
 17031                           plusw2	equ	0xFDB
 17032                           fsr2h	equ	0xFDA
 17033                           fsr2l	equ	0xFD9
 17034                           status	equ	0xFD8
 17035                           
 17036 ;; *************** function _CANisTxReady *****************
 17037 ;; Defined at:
 17038 ;;		line 1154 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 17039 ;; Parameters:    Size  Location     Type
 17040 ;;		None
 17041 ;; Auto vars:     Size  Location     Type
 17042 ;;		None
 17043 ;; Return value:  Size  Location     Type
 17044 ;;                  1    wreg      unsigned char 
 17045 ;; Registers used:
 17046 ;;		wreg, status,2
 17047 ;; Tracked objects:
 17048 ;;		On entry : 0/0
 17049 ;;		On exit  : 0/0
 17050 ;;		Unchanged: 0/0
 17051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17053 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17055 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17056 ;;Total ram usage:        1 bytes
 17057 ;; Hardware stack levels used:    1
 17058 ;; Hardware stack levels required when called:    3
 17059 ;; This function calls:
 17060 ;;		Nothing
 17061 ;; This function is called by:
 17062 ;;		_CAN_Send
 17063 ;;		_LCD_Handler
 17064 ;; This function uses a non-reentrant model
 17065 ;;
 17066                           
 17067                           	psect	text47
 17068  015E02                     __ptext47:
 17069                           	opt stack 0
 17070  015E02                     _CANisTxReady:
 17071                           	opt stack 26
 17072                           
 17073                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 17074                           
 17075                           ; BSR set to: 15
 17076                           ;incstack = 0
 17077  015E02  0E01               	movlw	1
 17078  015E04  0100               	movlb	0	; () banked
 17079  015E06  6F6E               	movwf	_CANisTxReady$3227& (0+255),b
 17080                           
 17081                           ; BSR set to: 0
 17082  015E08  010F               	movlb	15	; () banked
 17083  015E0A  A740               	btfss	64,3,b	;volatile
 17084  015E0C  D009               	goto	l564
 17085                           
 17086                           ; BSR set to: 15
 17087  015E0E  010F               	movlb	15	; () banked
 17088  015E10  A730               	btfss	48,3,b	;volatile
 17089  015E12  D006               	goto	l564
 17090                           
 17091                           ; BSR set to: 15
 17092  015E14  010F               	movlb	15	; () banked
 17093  015E16  A720               	btfss	32,3,b	;volatile
 17094  015E18  D003               	goto	l564
 17095                           
 17096                           ; BSR set to: 15
 17097  015E1A  0E00               	movlw	0
 17098  015E1C  0100               	movlb	0	; () banked
 17099  015E1E  6F6E               	movwf	_CANisTxReady$3227& (0+255),b
 17100  015E20                     l564:
 17101  015E20  0100               	movlb	0	; () banked
 17102  015E22  516E               	movf	_CANisTxReady$3227& (0+255),w,b
 17103  015E24  0012               	return	
 17104  015E26                     __end_of_CANisTxReady:
 17105                           	opt stack 0
 17106                           tblptru	equ	0xFF8
 17107                           tblptrh	equ	0xFF7
 17108                           tblptrl	equ	0xFF6
 17109                           tablat	equ	0xFF5
 17110                           prodh	equ	0xFF4
 17111                           prodl	equ	0xFF3
 17112                           intcon	equ	0xFF2
 17113                           postinc0	equ	0xFEE
 17114                           wreg	equ	0xFE8
 17115                           indf1	equ	0xFE7
 17116                           plusw1	equ	0xFE3
 17117                           fsr1h	equ	0xFE2
 17118                           fsr1l	equ	0xFE1
 17119                           indf2	equ	0xFDF
 17120                           postinc2	equ	0xFDE
 17121                           plusw2	equ	0xFDB
 17122                           fsr2h	equ	0xFDA
 17123                           fsr2l	equ	0xFD9
 17124                           status	equ	0xFD8
 17125                           
 17126 ;; *************** function _ISR_bassa *****************
 17127 ;; Defined at:
 17128 ;;		line 105 in file "RemoteCan.c"
 17129 ;; Parameters:    Size  Location     Type
 17130 ;;		None
 17131 ;; Auto vars:     Size  Location     Type
 17132 ;;		None
 17133 ;; Return value:  Size  Location     Type
 17134 ;;		None               void
 17135 ;; Registers used:
 17136 ;;		wreg, status,2, status,0
 17137 ;; Tracked objects:
 17138 ;;		On entry : 0/0
 17139 ;;		On exit  : 0/0
 17140 ;;		Unchanged: 0/0
 17141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17144 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17145 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17146 ;;Total ram usage:       17 bytes
 17147 ;; Hardware stack levels used:    1
 17148 ;; Hardware stack levels required when called:    2
 17149 ;; This function calls:
 17150 ;;		Nothing
 17151 ;; This function is called by:
 17152 ;;		Interrupt level 1
 17153 ;; This function uses a non-reentrant model
 17154 ;;
 17155                           
 17156                           	psect	intcodelo
 17157  000018                     __pintcodelo:
 17158                           	opt stack 0
 17159  000018                     _ISR_bassa:
 17160                           	opt stack 20
 17161                           
 17162                           ; BSR set to: 0
 17163                           ;incstack = 0
 17164  000018  8048               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 17165  00001A  CFD8 F025          	movff	status,??_ISR_bassa
 17166  00001E  CFE8 F026          	movff	wreg,??_ISR_bassa+1
 17167  000022  CFE0 F027          	movff	bsr,??_ISR_bassa+2
 17168  000026  CFFA F028          	movff	pclath,??_ISR_bassa+3
 17169  00002A  CFFB F029          	movff	pclatu,??_ISR_bassa+4
 17170  00002E  CFE9 F02A          	movff	fsr0l,??_ISR_bassa+5
 17171  000032  CFEA F02B          	movff	fsr0h,??_ISR_bassa+6
 17172  000036  CFE1 F02C          	movff	fsr1l,??_ISR_bassa+7
 17173  00003A  CFE2 F02D          	movff	fsr1h,??_ISR_bassa+8
 17174  00003E  CFD9 F02E          	movff	fsr2l,??_ISR_bassa+9
 17175  000042  CFDA F02F          	movff	fsr2h,??_ISR_bassa+10
 17176  000046  CFF3 F030          	movff	prodl,??_ISR_bassa+11
 17177  00004A  CFF4 F031          	movff	prodh,??_ISR_bassa+12
 17178  00004E  CFF6 F032          	movff	tblptrl,??_ISR_bassa+13
 17179  000052  CFF7 F033          	movff	tblptrh,??_ISR_bassa+14
 17180  000056  CFF8 F034          	movff	tblptru,??_ISR_bassa+15
 17181  00005A  CFF5 F035          	movff	tablat,??_ISR_bassa+16
 17182                           
 17183                           ;RemoteCan.c: 106: if (PIR2bits.TMR3IF == 1) {
 17184  00005E  A2A1               	btfss	4001,1,c	;volatile
 17185  000060  D00B               	goto	i1l743
 17186                           
 17187                           ;RemoteCan.c: 107: time_counter++;
 17188  000062  0E01               	movlw	1
 17189  000064  261A               	addwf	_time_counter,f,c	;volatile
 17190  000066  0E00               	movlw	0
 17191  000068  221B               	addwfc	_time_counter+1,f,c	;volatile
 17192  00006A  221C               	addwfc	_time_counter+2,f,c	;volatile
 17193  00006C  221D               	addwfc	_time_counter+3,f,c	;volatile
 17194                           
 17195                           ;RemoteCan.c: 108: TMR3H = 0x63;
 17196  00006E  0E63               	movlw	99
 17197  000070  6EB3               	movwf	4019,c	;volatile
 17198                           
 17199                           ;RemoteCan.c: 109: TMR3L = 0xC0;
 17200  000072  0EC0               	movlw	192
 17201  000074  6EB2               	movwf	4018,c	;volatile
 17202                           
 17203                           ;RemoteCan.c: 110: PIR2bits.TMR3IF = 0;
 17204  000076  92A1               	bcf	4001,1,c	;volatile
 17205  000078                     i1l743:
 17206  000078  C035  FFF5         	movff	??_ISR_bassa+16,tablat
 17207  00007C  C034  FFF8         	movff	??_ISR_bassa+15,tblptru
 17208  000080  C033  FFF7         	movff	??_ISR_bassa+14,tblptrh
 17209  000084  C032  FFF6         	movff	??_ISR_bassa+13,tblptrl
 17210  000088  C031  FFF4         	movff	??_ISR_bassa+12,prodh
 17211  00008C  C030  FFF3         	movff	??_ISR_bassa+11,prodl
 17212  000090  C02F  FFDA         	movff	??_ISR_bassa+10,fsr2h
 17213  000094  C02E  FFD9         	movff	??_ISR_bassa+9,fsr2l
 17214  000098  C02D  FFE2         	movff	??_ISR_bassa+8,fsr1h
 17215  00009C  C02C  FFE1         	movff	??_ISR_bassa+7,fsr1l
 17216  0000A0  C02B  FFEA         	movff	??_ISR_bassa+6,fsr0h
 17217  0000A4  C02A  FFE9         	movff	??_ISR_bassa+5,fsr0l
 17218  0000A8  C029  FFFB         	movff	??_ISR_bassa+4,pclatu
 17219  0000AC  C028  FFFA         	movff	??_ISR_bassa+3,pclath
 17220  0000B0  C027  FFE0         	movff	??_ISR_bassa+2,bsr
 17221  0000B4  C026  FFE8         	movff	??_ISR_bassa+1,wreg
 17222  0000B8  C025  FFD8         	movff	??_ISR_bassa,status
 17223  0000BC  9048               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 17224  0000BE  0010               	retfie	
 17225  0000C0                     __end_of_ISR_bassa:
 17226                           	opt stack 0
 17227                           pclatu	equ	0xFFB
 17228                           pclath	equ	0xFFA
 17229                           tblptru	equ	0xFF8
 17230                           tblptrh	equ	0xFF7
 17231                           tblptrl	equ	0xFF6
 17232                           tablat	equ	0xFF5
 17233                           prodh	equ	0xFF4
 17234                           prodl	equ	0xFF3
 17235                           intcon	equ	0xFF2
 17236                           postinc0	equ	0xFEE
 17237                           fsr0h	equ	0xFEA
 17238                           fsr0l	equ	0xFE9
 17239                           wreg	equ	0xFE8
 17240                           indf1	equ	0xFE7
 17241                           plusw1	equ	0xFE3
 17242                           fsr1h	equ	0xFE2
 17243                           fsr1l	equ	0xFE1
 17244                           bsr	equ	0xFE0
 17245                           indf2	equ	0xFDF
 17246                           postinc2	equ	0xFDE
 17247                           plusw2	equ	0xFDB
 17248                           fsr2h	equ	0xFDA
 17249                           fsr2l	equ	0xFD9
 17250                           status	equ	0xFD8
 17251                           
 17252 ;; *************** function _ISR_alta *****************
 17253 ;; Defined at:
 17254 ;;		line 72 in file "RemoteCan.c"
 17255 ;; Parameters:    Size  Location     Type
 17256 ;;		None
 17257 ;; Auto vars:     Size  Location     Type
 17258 ;;  i               1   33[COMRAM] unsigned char 
 17259 ;; Return value:  Size  Location     Type
 17260 ;;		None               void
 17261 ;; Registers used:
 17262 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17263 ;; Tracked objects:
 17264 ;;		On entry : 0/0
 17265 ;;		On exit  : 0/0
 17266 ;;		Unchanged: 0/0
 17267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17269 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17270 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17271 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17272 ;;Total ram usage:       15 bytes
 17273 ;; Hardware stack levels used:    1
 17274 ;; Hardware stack levels required when called:    1
 17275 ;; This function calls:
 17276 ;;		_CANisRxReady
 17277 ;;		_CANreceiveMessage
 17278 ;;		i2_CANisTxReady
 17279 ;;		i2_CANsendMessage
 17280 ;; This function is called by:
 17281 ;;		Interrupt level 2
 17282 ;; This function uses a non-reentrant model
 17283 ;;
 17284                           
 17285                           	psect	intcode
 17286  000008                     __pintcode:
 17287                           	opt stack 0
 17288  000008                     _ISR_alta:
 17289                           	opt stack 20
 17290                           
 17291                           ;incstack = 0
 17292  000008  8248               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 17293  00000A  CFFA F060          	movff	pclath,??_ISR_alta
 17294  00000E  CFFB F061          	movff	pclatu,??_ISR_alta+1
 17295  000012  EF5F  F0A8         	goto	int_func
 17296                           pclatu	equ	0xFFB
 17297                           pclath	equ	0xFFA
 17298                           tblptru	equ	0xFF8
 17299                           tblptrh	equ	0xFF7
 17300                           tblptrl	equ	0xFF6
 17301                           tablat	equ	0xFF5
 17302                           prodh	equ	0xFF4
 17303                           prodl	equ	0xFF3
 17304                           intcon	equ	0xFF2
 17305                           postinc0	equ	0xFEE
 17306                           fsr0h	equ	0xFEA
 17307                           fsr0l	equ	0xFE9
 17308                           wreg	equ	0xFE8
 17309                           indf1	equ	0xFE7
 17310                           plusw1	equ	0xFE3
 17311                           fsr1h	equ	0xFE2
 17312                           fsr1l	equ	0xFE1
 17313                           bsr	equ	0xFE0
 17314                           indf2	equ	0xFDF
 17315                           postinc2	equ	0xFDE
 17316                           plusw2	equ	0xFDB
 17317                           fsr2h	equ	0xFDA
 17318                           fsr2l	equ	0xFD9
 17319                           status	equ	0xFD8
 17320                           
 17321                           	psect	intcode_body
 17322  0150BE                     __pintcode_body:
 17323                           	opt stack 20
 17324  0150BE                     int_func:
 17325                           	opt stack 20
 17326  0150BE  CFE9 F062          	movff	fsr0l,??_ISR_alta+2
 17327  0150C2  CFEA F063          	movff	fsr0h,??_ISR_alta+3
 17328  0150C6  CFE1 F064          	movff	fsr1l,??_ISR_alta+4
 17329  0150CA  CFE2 F065          	movff	fsr1h,??_ISR_alta+5
 17330  0150CE  CFD9 F066          	movff	fsr2l,??_ISR_alta+6
 17331  0150D2  CFDA F067          	movff	fsr2h,??_ISR_alta+7
 17332  0150D6  CFF3 F068          	movff	prodl,??_ISR_alta+8
 17333  0150DA  CFF4 F069          	movff	prodh,??_ISR_alta+9
 17334  0150DE  CFF6 F06A          	movff	tblptrl,??_ISR_alta+10
 17335  0150E2  CFF7 F06B          	movff	tblptrh,??_ISR_alta+11
 17336  0150E6  CFF8 F06C          	movff	tblptru,??_ISR_alta+12
 17337  0150EA  CFF5 F06D          	movff	tablat,??_ISR_alta+13
 17338                           
 17339                           ;RemoteCan.c: 73: if ((PIR3bits.RXB1IF == 1) || (PIR3bits.RXB0IF == 1)) {
 17340  0150EE  A2A4               	btfss	4004,1,c	;volatile
 17341  0150F0  B0A4               	btfsc	4004,0,c	;volatile
 17342  0150F2  D001               	goto	i2l8543
 17343  0150F4  D06F               	goto	i2l739
 17344  0150F6                     i2l8543:
 17345                           
 17346                           ;RemoteCan.c: 74: if (CANisRxReady()) {
 17347  0150F6  EC4C  F0AF         	call	_CANisRxReady	;wreg free
 17348  0150FA  0900               	iorlw	0
 17349  0150FC  B4D8               	btfsc	status,2,c
 17350  0150FE  D066               	goto	i2l8587
 17351                           
 17352                           ;RemoteCan.c: 75: CANreceiveMessage(&msg);
 17353  015100  0E21               	movlw	low _msg
 17354  015102  6E36               	movwf	CANreceiveMessage@msg,c
 17355  015104  0E01               	movlw	high _msg
 17356  015106  6E37               	movwf	CANreceiveMessage@msg+1,c
 17357  015108  EC68  F093         	call	_CANreceiveMessage	;wreg free
 17358                           
 17359                           ;RemoteCan.c: 76: RTR_Flag = msg.RTR;
 17360  01510C  0101               	movlb	1	; () banked
 17361  01510E  A12F               	btfss	(_msg+14)& (0+255),0,b
 17362  015110  D002               	goto	i2u1104_40
 17363  015112  8447               	bsf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 17364  015114  D001               	goto	i2l8549
 17365  015116                     i2u1104_40:
 17366  015116  9447               	bcf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 17367  015118                     i2l8549:
 17368                           
 17369                           ;RemoteCan.c: 77: id = msg.identifier;
 17370  015118  C121  F012         	movff	_msg,_id	;volatile
 17371  01511C  C122  F013         	movff	_msg+1,_id+1	;volatile
 17372  015120  C123  F014         	movff	_msg+2,_id+2	;volatile
 17373  015124  C124  F015         	movff	_msg+3,_id+3	;volatile
 17374                           
 17375                           ;RemoteCan.c: 78: newMessageCan = 1;
 17376  015128  8847               	bsf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
 17377                           
 17378                           ;RemoteCan.c: 79: if (id == 0b00000000110) {
 17379  01512A  0E06               	movlw	6
 17380  01512C  1812               	xorwf	_id,w,c	;volatile
 17381  01512E  1013               	iorwf	_id+1,w,c	;volatile
 17382  015130  1014               	iorwf	_id+2,w,c	;volatile
 17383  015132  1015               	iorwf	_id+3,w,c	;volatile
 17384  015134  A4D8               	btfss	status,2,c
 17385  015136  D01A               	goto	i2l8567
 17386                           
 17387                           ;RemoteCan.c: 80: for (unsigned char i = 0; i < 8; i++) {
 17388  015138  0E00               	movlw	0
 17389  01513A  6E46               	movwf	ISR_alta@i,c
 17390  01513C                     i2l8557:
 17391  01513C  0E07               	movlw	7
 17392  01513E  6446               	cpfsgt	ISR_alta@i,c
 17393  015140  D001               	goto	i2l8561
 17394  015142  D014               	goto	i2l8567
 17395  015144                     i2l8561:
 17396                           
 17397                           ;RemoteCan.c: 81: data_speed_rx[i] = msg.data[i];
 17398  015144  5046               	movf	ISR_alta@i,w,c
 17399  015146  0D01               	mullw	1
 17400  015148  0E25               	movlw	low (_msg+4)
 17401  01514A  24F3               	addwf	prodl,w,c
 17402  01514C  6ED9               	movwf	fsr2l,c
 17403  01514E  0E01               	movlw	high (_msg+4)
 17404  015150  20F4               	addwfc	prodh,w,c
 17405  015152  6EDA               	movwf	fsr2h,c
 17406  015154  5046               	movf	ISR_alta@i,w,c
 17407  015156  0D01               	mullw	1
 17408  015158  0E01               	movlw	low _data_speed_rx
 17409  01515A  24F3               	addwf	prodl,w,c
 17410  01515C  6EE1               	movwf	fsr1l,c
 17411  01515E  0E00               	movlw	high _data_speed_rx
 17412  015160  20F4               	addwfc	prodh,w,c
 17413  015162  6EE2               	movwf	fsr1h,c
 17414  015164  CFDF FFE7          	movff	indf2,indf1
 17415  015168  2A46               	incf	ISR_alta@i,f,c
 17416  01516A  D7E8               	goto	i2l8557
 17417  01516C                     i2l8567:
 17418                           
 17419                           ;RemoteCan.c: 82: }
 17420                           ;RemoteCan.c: 83: }
 17421                           ;RemoteCan.c: 84: if (id == 0b00000000010) {
 17422  01516C  0E02               	movlw	2
 17423  01516E  1812               	xorwf	_id,w,c	;volatile
 17424  015170  1013               	iorwf	_id+1,w,c	;volatile
 17425  015172  1014               	iorwf	_id+2,w,c	;volatile
 17426  015174  1015               	iorwf	_id+3,w,c	;volatile
 17427  015176  B4D8               	btfsc	status,2,c
 17428                           
 17429                           ;RemoteCan.c: 85: if (RTR_Flag == 1) {
 17430  015178  A447               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 17431  01517A  D028               	goto	i2l8587
 17432                           
 17433                           ;RemoteCan.c: 86: pr_time_4 = time_counter;
 17434  01517C  C01A  F016         	movff	_time_counter,_pr_time_4	;volatile
 17435  015180  C01B  F017         	movff	_time_counter+1,_pr_time_4+1	;volatile
 17436  015184  C01C  F018         	movff	_time_counter+2,_pr_time_4+2	;volatile
 17437  015188  C01D  F019         	movff	_time_counter+3,_pr_time_4+3	;volatile
 17438                           
 17439                           ;RemoteCan.c: 87: data[0] = 0x03;
 17440  01518C  0E03               	movlw	3
 17441  01518E  6E24               	movwf	_data,c
 17442                           
 17443                           ;RemoteCan.c: 88: _delay((unsigned long)((10)*(16000000/4000000.0)));
 17444  015190  0E0D               	movlw	13
 17445  015192                     i2u1124_47:
 17446  015192  2EE8               	decfsz	wreg,f,c
 17447  015194  D7FE               	goto	i2u1124_47
 17448  015196  F000               	nop	
 17449  015198                     i2l8577:
 17450  015198  EC24  F0AF         	call	i2_CANisTxReady	;wreg free
 17451  01519C  06E8               	decf	wreg,f,c
 17452  01519E  A4D8               	btfss	status,2,c
 17453  0151A0  D7FB               	goto	i2l8577
 17454                           
 17455                           ;RemoteCan.c: 90: CANsendMessage(0b00000000010, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL
      +                          _TX_FRAME & CAN_TX_PRIORITY_0);
 17456  0151A2  0E02               	movlw	2
 17457  0151A4  6E36               	movwf	i2CANsendMessage@identifier,c
 17458  0151A6  0E00               	movlw	0
 17459  0151A8  6E37               	movwf	i2CANsendMessage@identifier+1,c
 17460  0151AA  0E00               	movlw	0
 17461  0151AC  6E38               	movwf	i2CANsendMessage@identifier+2,c
 17462  0151AE  0E00               	movlw	0
 17463  0151B0  6E39               	movwf	i2CANsendMessage@identifier+3,c
 17464  0151B2  0E24               	movlw	low _data
 17465  0151B4  6E3A               	movwf	i2CANsendMessage@data,c
 17466  0151B6  0E00               	movlw	high _data
 17467  0151B8  6E3B               	movwf	i2CANsendMessage@data+1,c
 17468  0151BA  0E08               	movlw	8
 17469  0151BC  6E3C               	movwf	i2CANsendMessage@dataLength,c
 17470  0151BE  0EBC               	movlw	188
 17471  0151C0  6E3D               	movwf	i2CANsendMessage@flags,c
 17472  0151C2  EC93  F08D         	call	i2_CANsendMessage	;wreg free
 17473                           
 17474                           ;RemoteCan.c: 91: MotoreFlag = 1;
 17475  0151C6  8247               	bsf	_MotoreFlag/(0+8),_MotoreFlag& (0+7),c	;volatile
 17476                           
 17477                           ;RemoteCan.c: 92: AbsFlag = 0;
 17478  0151C8  9047               	bcf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 17479                           
 17480                           ;RemoteCan.c: 93: SterzoFlag = 0;
 17481  0151CA  9647               	bcf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 17482  0151CC                     i2l8587:
 17483                           
 17484                           ;RemoteCan.c: 94: }
 17485                           ;RemoteCan.c: 96: }
 17486                           ;RemoteCan.c: 97: }
 17487                           ;RemoteCan.c: 98: PIR3bits.RXB1IF = 0;
 17488  0151CC  92A4               	bcf	4004,1,c	;volatile
 17489                           
 17490                           ;RemoteCan.c: 99: PIR3bits.RXB0IF = 0;
 17491  0151CE  90A4               	bcf	4004,0,c	;volatile
 17492                           
 17493                           ;RemoteCan.c: 100: LATDbits.LATD2 = 1;
 17494  0151D0  848C               	bsf	3980,2,c	;volatile
 17495                           
 17496                           ;RemoteCan.c: 101: LATDbits.LATD3 = 1;
 17497  0151D2  868C               	bsf	3980,3,c	;volatile
 17498  0151D4                     i2l739:
 17499  0151D4  C06D  FFF5         	movff	??_ISR_alta+13,tablat
 17500  0151D8  C06C  FFF8         	movff	??_ISR_alta+12,tblptru
 17501  0151DC  C06B  FFF7         	movff	??_ISR_alta+11,tblptrh
 17502  0151E0  C06A  FFF6         	movff	??_ISR_alta+10,tblptrl
 17503  0151E4  C069  FFF4         	movff	??_ISR_alta+9,prodh
 17504  0151E8  C068  FFF3         	movff	??_ISR_alta+8,prodl
 17505  0151EC  C067  FFDA         	movff	??_ISR_alta+7,fsr2h
 17506  0151F0  C066  FFD9         	movff	??_ISR_alta+6,fsr2l
 17507  0151F4  C065  FFE2         	movff	??_ISR_alta+5,fsr1h
 17508  0151F8  C064  FFE1         	movff	??_ISR_alta+4,fsr1l
 17509  0151FC  C063  FFEA         	movff	??_ISR_alta+3,fsr0h
 17510  015200  C062  FFE9         	movff	??_ISR_alta+2,fsr0l
 17511  015204  C061  FFFB         	movff	??_ISR_alta+1,pclatu
 17512  015208  C060  FFFA         	movff	??_ISR_alta,pclath
 17513  01520C  9248               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 17514  01520E  0011               	retfie		f
 17515  015210                     __end_of_ISR_alta:
 17516                           	opt stack 0
 17517                           pclatu	equ	0xFFB
 17518                           pclath	equ	0xFFA
 17519                           tblptru	equ	0xFF8
 17520                           tblptrh	equ	0xFF7
 17521                           tblptrl	equ	0xFF6
 17522                           tablat	equ	0xFF5
 17523                           prodh	equ	0xFF4
 17524                           prodl	equ	0xFF3
 17525                           intcon	equ	0xFF2
 17526                           postinc0	equ	0xFEE
 17527                           fsr0h	equ	0xFEA
 17528                           fsr0l	equ	0xFE9
 17529                           wreg	equ	0xFE8
 17530                           indf1	equ	0xFE7
 17531                           plusw1	equ	0xFE3
 17532                           fsr1h	equ	0xFE2
 17533                           fsr1l	equ	0xFE1
 17534                           bsr	equ	0xFE0
 17535                           indf2	equ	0xFDF
 17536                           postinc2	equ	0xFDE
 17537                           plusw2	equ	0xFDB
 17538                           fsr2h	equ	0xFDA
 17539                           fsr2l	equ	0xFD9
 17540                           status	equ	0xFD8
 17541                           
 17542 ;; *************** function i2_CANsendMessage *****************
 17543 ;; Defined at:
 17544 ;;		line 294 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 17545 ;; Parameters:    Size  Location     Type
 17546 ;;  identifier      4   17[COMRAM] unsigned long 
 17547 ;;  data            2   21[COMRAM] PTR unsigned char 
 17548 ;;		 -> data_speed(1), data_brake(1), data_steering(1), data(1), 
 17549 ;;  dataLength      1   23[COMRAM] unsigned char 
 17550 ;;  flags           1   24[COMRAM] enum E16909
 17551 ;; Auto vars:     Size  Location     Type
 17552 ;;  CANsendMessa    4   29[COMRAM] unsigned long 
 17553 ;; Return value:  Size  Location     Type
 17554 ;;		None               void
 17555 ;; Registers used:
 17556 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17557 ;; Tracked objects:
 17558 ;;		On entry : 0/0
 17559 ;;		On exit  : 0/0
 17560 ;;		Unchanged: 0/0
 17561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17562 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17563 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17564 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17565 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17566 ;;Total ram usage:       16 bytes
 17567 ;; Hardware stack levels used:    1
 17568 ;; This function calls:
 17569 ;;		Nothing
 17570 ;; This function is called by:
 17571 ;;		_ISR_alta
 17572 ;; This function uses a non-reentrant model
 17573 ;;
 17574                           
 17575                           	psect	text50
 17576  011B26                     __ptext50:
 17577                           	opt stack 0
 17578  011B26                     i2_CANsendMessage:
 17579                           	opt stack 20
 17580                           
 17581                           ;inc\CANlib.h: 296: unsigned long tamp;
 17582                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 17583                           
 17584                           ;incstack = 0
 17585  011B26  010F               	movlb	15	; () banked
 17586  011B28  B740               	btfsc	64,3,b	;volatile
 17587  011B2A  D115               	goto	i2l371
 17588                           
 17589                           ; BSR set to: 15
 17590                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 17591  011B2C  C03C  FF45         	movff	i2CANsendMessage@dataLength,3909	;volatile
 17592                           
 17593                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 17594  011B30  AC3D               	btfss	i2CANsendMessage@flags,6,c
 17595  011B32  D003               	goto	i2l372
 17596                           
 17597                           ; BSR set to: 15
 17598                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 17599  011B34  010F               	movlb	15	; () banked
 17600  011B36  8D45               	bsf	69,6,b	;volatile
 17601  011B38  D002               	goto	i2l373
 17602  011B3A                     i2l372:
 17603                           
 17604                           ; BSR set to: 15
 17605                           ;inc\CANlib.h: 302: else
 17606                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 17607  011B3A  010F               	movlb	15	; () banked
 17608  011B3C  9D45               	bcf	69,6,b	;volatile
 17609  011B3E                     i2l373:
 17610                           
 17611                           ; BSR set to: 15
 17612                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 17613  011B3E  A63D               	btfss	i2CANsendMessage@flags,3,c
 17614  011B40  D066               	goto	i2l374
 17615                           
 17616                           ; BSR set to: 15
 17617                           ;inc\CANlib.h: 306: {
 17618                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 17619  011B42  5036               	movf	i2CANsendMessage@identifier,w,c
 17620  011B44  6E42               	movwf	i2CANsendMessage@tamp,c
 17621  011B46  6A43               	clrf	i2CANsendMessage@tamp+1,c
 17622  011B48  6A44               	clrf	i2CANsendMessage@tamp+2,c
 17623  011B4A  6A45               	clrf	i2CANsendMessage@tamp+3,c
 17624                           
 17625                           ; BSR set to: 15
 17626                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 17627  011B4C  C042  FF44         	movff	i2CANsendMessage@tamp,3908	;volatile
 17628                           
 17629                           ; BSR set to: 15
 17630                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 17631  011B50  0E00               	movlw	0
 17632  011B52  1436               	andwf	i2CANsendMessage@identifier,w,c
 17633  011B54  6E42               	movwf	i2CANsendMessage@tamp,c
 17634  011B56  0EFF               	movlw	255
 17635  011B58  1437               	andwf	i2CANsendMessage@identifier+1,w,c
 17636  011B5A  6E43               	movwf	i2CANsendMessage@tamp+1,c
 17637  011B5C  0E00               	movlw	0
 17638  011B5E  1438               	andwf	i2CANsendMessage@identifier+2,w,c
 17639  011B60  6E44               	movwf	i2CANsendMessage@tamp+2,c
 17640  011B62  0E00               	movlw	0
 17641  011B64  1439               	andwf	i2CANsendMessage@identifier+3,w,c
 17642  011B66  6E45               	movwf	i2CANsendMessage@tamp+3,c
 17643                           
 17644                           ; BSR set to: 15
 17645                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 17646  011B68  C042  F03E         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 17647  011B6C  C043  F03F         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 17648  011B70  C044  F040         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 17649  011B74  C045  F041         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 17650  011B78  C03F  F03E         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 17651  011B7C  C040  F03F         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 17652  011B80  C041  F040         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 17653  011B84  6A41               	clrf	??i2_CANsendMessage+3,c
 17654  011B86  C03E  F042         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17655  011B8A  C03F  F043         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17656  011B8E  C040  F044         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17657  011B92  C041  F045         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17658                           
 17659                           ; BSR set to: 15
 17660                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 17661  011B96  C042  FF43         	movff	i2CANsendMessage@tamp,3907	;volatile
 17662                           
 17663                           ; BSR set to: 15
 17664                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 17665  011B9A  0E00               	movlw	0
 17666  011B9C  010F               	movlb	15	; () banked
 17667  011B9E  6F42               	movwf	66,b	;volatile
 17668                           
 17669                           ; BSR set to: 15
 17670                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 17671  011BA0  010F               	movlb	15	; () banked
 17672  011BA2  8742               	bsf	66,3,b	;volatile
 17673                           
 17674                           ; BSR set to: 15
 17675                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 17676  011BA4  A038               	btfss	i2CANsendMessage@identifier+2,0,c
 17677  011BA6  D002               	goto	i2l375
 17678                           
 17679                           ; BSR set to: 15
 17680                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 17681  011BA8  010F               	movlb	15	; () banked
 17682  011BAA  8142               	bsf	66,0,b	;volatile
 17683  011BAC                     i2l375:
 17684                           
 17685                           ; BSR set to: 15
 17686                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 17687  011BAC  A238               	btfss	i2CANsendMessage@identifier+2,1,c
 17688  011BAE  D002               	goto	i2l376
 17689                           
 17690                           ; BSR set to: 15
 17691                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 17692  011BB0  010F               	movlb	15	; () banked
 17693  011BB2  8342               	bsf	66,1,b	;volatile
 17694  011BB4                     i2l376:
 17695                           
 17696                           ; BSR set to: 15
 17697                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 17698  011BB4  A438               	btfss	i2CANsendMessage@identifier+2,2,c
 17699  011BB6  D002               	goto	i2l377
 17700                           
 17701                           ; BSR set to: 15
 17702                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 17703  011BB8  010F               	movlb	15	; () banked
 17704  011BBA  8B42               	bsf	66,5,b	;volatile
 17705  011BBC                     i2l377:
 17706                           
 17707                           ; BSR set to: 15
 17708                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 17709  011BBC  A638               	btfss	i2CANsendMessage@identifier+2,3,c
 17710  011BBE  D002               	goto	i2l378
 17711                           
 17712                           ; BSR set to: 15
 17713                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 17714  011BC0  010F               	movlb	15	; () banked
 17715  011BC2  8D42               	bsf	66,6,b	;volatile
 17716  011BC4                     i2l378:
 17717                           
 17718                           ; BSR set to: 15
 17719                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 17720  011BC4  A838               	btfss	i2CANsendMessage@identifier+2,4,c
 17721  011BC6  D002               	goto	i2l6871
 17722                           
 17723                           ; BSR set to: 15
 17724                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 17725  011BC8  010F               	movlb	15	; () banked
 17726  011BCA  8F42               	bsf	66,7,b	;volatile
 17727  011BCC                     i2l6871:
 17728                           
 17729                           ; BSR set to: 15
 17730                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 17731  011BCC  C036  F03E         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 17732  011BD0  C037  F03F         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 17733  011BD4  C038  F040         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 17734  011BD8  C039  F041         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 17735  011BDC  0E16               	movlw	22
 17736  011BDE  D005               	goto	i2u867_40
 17737  011BE0                     i2u867_45:
 17738  011BE0  90D8               	bcf	status,0,c
 17739  011BE2  3241               	rrcf	??i2_CANsendMessage+3,f,c
 17740  011BE4  3240               	rrcf	??i2_CANsendMessage+2,f,c
 17741  011BE6  323F               	rrcf	??i2_CANsendMessage+1,f,c
 17742  011BE8  323E               	rrcf	??i2_CANsendMessage,f,c
 17743  011BEA                     i2u867_40:
 17744  011BEA  2EE8               	decfsz	wreg,f,c
 17745  011BEC  D7F9               	goto	i2u867_45
 17746  011BEE  C03E  F042         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17747  011BF2  C03F  F043         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17748  011BF6  C040  F044         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17749  011BFA  C041  F045         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17750                           
 17751                           ; BSR set to: 15
 17752                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 17753  011BFE  5042               	movf	i2CANsendMessage@tamp,w,c
 17754  011C00  6E42               	movwf	i2CANsendMessage@tamp,c
 17755  011C02  6A43               	clrf	i2CANsendMessage@tamp+1,c
 17756  011C04  6A44               	clrf	i2CANsendMessage@tamp+2,c
 17757  011C06  6A45               	clrf	i2CANsendMessage@tamp+3,c
 17758                           
 17759                           ; BSR set to: 15
 17760                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 17761  011C08  C042  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 17762                           
 17763                           ;inc\CANlib.h: 332: }
 17764  011C0C  D04D               	goto	i2l6891
 17765  011C0E                     i2l374:
 17766                           
 17767                           ; BSR set to: 15
 17768                           ;inc\CANlib.h: 334: else
 17769                           ;inc\CANlib.h: 336: {
 17770                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 17771  011C0E  010F               	movlb	15	; () banked
 17772  011C10  9742               	bcf	66,3,b	;volatile
 17773                           
 17774                           ; BSR set to: 15
 17775                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 17776  011C12  C036  F03E         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 17777  011C16  C037  F03F         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 17778  011C1A  C038  F040         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 17779  011C1E  C039  F041         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 17780  011C22  0E04               	movlw	4
 17781  011C24  D005               	goto	i2u868_40
 17782  011C26                     i2u868_45:
 17783  011C26  90D8               	bcf	status,0,c
 17784  011C28  3241               	rrcf	??i2_CANsendMessage+3,f,c
 17785  011C2A  3240               	rrcf	??i2_CANsendMessage+2,f,c
 17786  011C2C  323F               	rrcf	??i2_CANsendMessage+1,f,c
 17787  011C2E  323E               	rrcf	??i2_CANsendMessage,f,c
 17788  011C30                     i2u868_40:
 17789  011C30  2EE8               	decfsz	wreg,f,c
 17790  011C32  D7F9               	goto	i2u868_45
 17791  011C34  C03E  F042         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17792  011C38  C03F  F043         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17793  011C3C  C040  F044         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17794  011C40  C041  F045         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17795                           
 17796                           ; BSR set to: 15
 17797                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 17798  011C44  5042               	movf	i2CANsendMessage@tamp,w,c
 17799  011C46  6E42               	movwf	i2CANsendMessage@tamp,c
 17800  011C48  6A43               	clrf	i2CANsendMessage@tamp+1,c
 17801  011C4A  6A44               	clrf	i2CANsendMessage@tamp+2,c
 17802  011C4C  6A45               	clrf	i2CANsendMessage@tamp+3,c
 17803                           
 17804                           ; BSR set to: 15
 17805                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 17806  011C4E  C042  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 17807                           
 17808                           ; BSR set to: 15
 17809                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 17810  011C52  0E07               	movlw	7
 17811  011C54  1436               	andwf	i2CANsendMessage@identifier,w,c
 17812  011C56  6E42               	movwf	i2CANsendMessage@tamp,c
 17813  011C58  0E00               	movlw	0
 17814  011C5A  1437               	andwf	i2CANsendMessage@identifier+1,w,c
 17815  011C5C  6E43               	movwf	i2CANsendMessage@tamp+1,c
 17816  011C5E  0E00               	movlw	0
 17817  011C60  1438               	andwf	i2CANsendMessage@identifier+2,w,c
 17818  011C62  6E44               	movwf	i2CANsendMessage@tamp+2,c
 17819  011C64  0E00               	movlw	0
 17820  011C66  1439               	andwf	i2CANsendMessage@identifier+3,w,c
 17821  011C68  6E45               	movwf	i2CANsendMessage@tamp+3,c
 17822                           
 17823                           ; BSR set to: 15
 17824                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 17825  011C6A  C042  F03E         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 17826  011C6E  C043  F03F         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 17827  011C72  C044  F040         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 17828  011C76  C045  F041         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 17829  011C7A  0E05               	movlw	5
 17830  011C7C                     i2u869_45:
 17831  011C7C  90D8               	bcf	status,0,c
 17832  011C7E  363E               	rlcf	??i2_CANsendMessage,f,c
 17833  011C80  363F               	rlcf	??i2_CANsendMessage+1,f,c
 17834  011C82  3640               	rlcf	??i2_CANsendMessage+2,f,c
 17835  011C84  3641               	rlcf	??i2_CANsendMessage+3,f,c
 17836  011C86  2EE8               	decfsz	wreg,f,c
 17837  011C88  D7F9               	goto	i2u869_45
 17838  011C8A  C03E  F042         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17839  011C8E  C03F  F043         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17840  011C92  C040  F044         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17841  011C96  C041  F045         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17842                           
 17843                           ; BSR set to: 15
 17844                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 17845  011C9A  010F               	movlb	15	; () banked
 17846  011C9C  5142               	movf	66,w,b	;volatile
 17847  011C9E  0B1F               	andlw	31
 17848  011CA0  010F               	movlb	15	; () banked
 17849  011CA2  6F42               	movwf	66,b	;volatile
 17850                           
 17851                           ; BSR set to: 15
 17852                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 17853  011CA4  C042  FF42         	movff	i2CANsendMessage@tamp,3906	;volatile
 17854  011CA8                     i2l6891:
 17855                           
 17856                           ; BSR set to: 15
 17857                           ;inc\CANlib.h: 347: }
 17858                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 17859  011CA8  A03D               	btfss	i2CANsendMessage@flags,0,c
 17860  011CAA  D003               	goto	i2l381
 17861                           
 17862                           ; BSR set to: 15
 17863                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 17864  011CAC  010F               	movlb	15	; () banked
 17865  011CAE  8140               	bsf	64,0,b	;volatile
 17866  011CB0  D002               	goto	i2l382
 17867  011CB2                     i2l381:
 17868                           
 17869                           ; BSR set to: 15
 17870                           ;inc\CANlib.h: 351: else
 17871                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 17872  011CB2  010F               	movlb	15	; () banked
 17873  011CB4  9140               	bcf	64,0,b	;volatile
 17874  011CB6                     i2l382:
 17875                           
 17876                           ; BSR set to: 15
 17877                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 17878  011CB6  A23D               	btfss	i2CANsendMessage@flags,1,c
 17879  011CB8  D003               	goto	i2l383
 17880                           
 17881                           ; BSR set to: 15
 17882                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 17883  011CBA  010F               	movlb	15	; () banked
 17884  011CBC  8340               	bsf	64,1,b	;volatile
 17885  011CBE  D002               	goto	i2l6897
 17886  011CC0                     i2l383:
 17887                           
 17888                           ; BSR set to: 15
 17889                           ;inc\CANlib.h: 355: else
 17890                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 17891  011CC0  010F               	movlb	15	; () banked
 17892  011CC2  9340               	bcf	64,1,b	;volatile
 17893  011CC4                     i2l6897:
 17894                           
 17895                           ; BSR set to: 15
 17896                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 17897  011CC4  C03A  FFD9         	movff	i2CANsendMessage@data,fsr2l
 17898  011CC8  C03B  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 17899  011CCC  50DF               	movf	indf2,w,c
 17900  011CCE  010F               	movlb	15	; () banked
 17901  011CD0  6F46               	movwf	70,b	;volatile
 17902                           
 17903                           ; BSR set to: 15
 17904                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 17905  011CD2  EE20 F001          	lfsr	2,1
 17906  011CD6  503A               	movf	i2CANsendMessage@data,w,c
 17907  011CD8  26D9               	addwf	fsr2l,f,c
 17908  011CDA  503B               	movf	i2CANsendMessage@data+1,w,c
 17909  011CDC  22DA               	addwfc	fsr2h,f,c
 17910  011CDE  50DF               	movf	indf2,w,c
 17911  011CE0  010F               	movlb	15	; () banked
 17912  011CE2  6F47               	movwf	71,b	;volatile
 17913                           
 17914                           ; BSR set to: 15
 17915                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 17916  011CE4  EE20 F002          	lfsr	2,2
 17917  011CE8  503A               	movf	i2CANsendMessage@data,w,c
 17918  011CEA  26D9               	addwf	fsr2l,f,c
 17919  011CEC  503B               	movf	i2CANsendMessage@data+1,w,c
 17920  011CEE  22DA               	addwfc	fsr2h,f,c
 17921  011CF0  50DF               	movf	indf2,w,c
 17922  011CF2  010F               	movlb	15	; () banked
 17923  011CF4  6F48               	movwf	72,b	;volatile
 17924                           
 17925                           ; BSR set to: 15
 17926                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 17927  011CF6  EE20 F003          	lfsr	2,3
 17928  011CFA  503A               	movf	i2CANsendMessage@data,w,c
 17929  011CFC  26D9               	addwf	fsr2l,f,c
 17930  011CFE  503B               	movf	i2CANsendMessage@data+1,w,c
 17931  011D00  22DA               	addwfc	fsr2h,f,c
 17932  011D02  50DF               	movf	indf2,w,c
 17933  011D04  010F               	movlb	15	; () banked
 17934  011D06  6F49               	movwf	73,b	;volatile
 17935                           
 17936                           ; BSR set to: 15
 17937                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 17938  011D08  EE20 F004          	lfsr	2,4
 17939  011D0C  503A               	movf	i2CANsendMessage@data,w,c
 17940  011D0E  26D9               	addwf	fsr2l,f,c
 17941  011D10  503B               	movf	i2CANsendMessage@data+1,w,c
 17942  011D12  22DA               	addwfc	fsr2h,f,c
 17943  011D14  50DF               	movf	indf2,w,c
 17944  011D16  010F               	movlb	15	; () banked
 17945  011D18  6F4A               	movwf	74,b	;volatile
 17946                           
 17947                           ; BSR set to: 15
 17948                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 17949  011D1A  EE20 F005          	lfsr	2,5
 17950  011D1E  503A               	movf	i2CANsendMessage@data,w,c
 17951  011D20  26D9               	addwf	fsr2l,f,c
 17952  011D22  503B               	movf	i2CANsendMessage@data+1,w,c
 17953  011D24  22DA               	addwfc	fsr2h,f,c
 17954  011D26  50DF               	movf	indf2,w,c
 17955  011D28  010F               	movlb	15	; () banked
 17956  011D2A  6F4B               	movwf	75,b	;volatile
 17957                           
 17958                           ; BSR set to: 15
 17959                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 17960  011D2C  EE20 F006          	lfsr	2,6
 17961  011D30  503A               	movf	i2CANsendMessage@data,w,c
 17962  011D32  26D9               	addwf	fsr2l,f,c
 17963  011D34  503B               	movf	i2CANsendMessage@data+1,w,c
 17964  011D36  22DA               	addwfc	fsr2h,f,c
 17965  011D38  50DF               	movf	indf2,w,c
 17966  011D3A  010F               	movlb	15	; () banked
 17967  011D3C  6F4C               	movwf	76,b	;volatile
 17968                           
 17969                           ; BSR set to: 15
 17970                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 17971  011D3E  EE20 F007          	lfsr	2,7
 17972  011D42  503A               	movf	i2CANsendMessage@data,w,c
 17973  011D44  26D9               	addwf	fsr2l,f,c
 17974  011D46  503B               	movf	i2CANsendMessage@data+1,w,c
 17975  011D48  22DA               	addwfc	fsr2h,f,c
 17976  011D4A  50DF               	movf	indf2,w,c
 17977  011D4C  010F               	movlb	15	; () banked
 17978  011D4E  6F4D               	movwf	77,b	;volatile
 17979                           
 17980                           ; BSR set to: 15
 17981                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 17982  011D50  010F               	movlb	15	; () banked
 17983  011D52  8740               	bsf	64,3,b	;volatile
 17984                           
 17985                           ; BSR set to: 15
 17986                           ;inc\CANlib.h: 368: return;
 17987  011D54  0012               	return	
 17988  011D56                     i2l371:
 17989                           
 17990                           ; BSR set to: 15
 17991                           ;inc\CANlib.h: 369: }
 17992                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 17993  011D56  010F               	movlb	15	; () banked
 17994  011D58  B730               	btfsc	48,3,b	;volatile
 17995  011D5A  D115               	goto	i2l386
 17996                           
 17997                           ; BSR set to: 15
 17998                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 17999  011D5C  C03C  FF35         	movff	i2CANsendMessage@dataLength,3893	;volatile
 18000                           
 18001                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 18002  011D60  AC3D               	btfss	i2CANsendMessage@flags,6,c
 18003  011D62  D003               	goto	i2l387
 18004                           
 18005                           ; BSR set to: 15
 18006                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 18007  011D64  010F               	movlb	15	; () banked
 18008  011D66  8D35               	bsf	53,6,b	;volatile
 18009  011D68  D002               	goto	i2l388
 18010  011D6A                     i2l387:
 18011                           
 18012                           ; BSR set to: 15
 18013                           ;inc\CANlib.h: 378: else
 18014                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 18015  011D6A  010F               	movlb	15	; () banked
 18016  011D6C  9D35               	bcf	53,6,b	;volatile
 18017  011D6E                     i2l388:
 18018                           
 18019                           ; BSR set to: 15
 18020                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 18021  011D6E  A63D               	btfss	i2CANsendMessage@flags,3,c
 18022  011D70  D066               	goto	i2l389
 18023                           
 18024                           ; BSR set to: 15
 18025                           ;inc\CANlib.h: 382: {
 18026                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 18027  011D72  5036               	movf	i2CANsendMessage@identifier,w,c
 18028  011D74  6E42               	movwf	i2CANsendMessage@tamp,c
 18029  011D76  6A43               	clrf	i2CANsendMessage@tamp+1,c
 18030  011D78  6A44               	clrf	i2CANsendMessage@tamp+2,c
 18031  011D7A  6A45               	clrf	i2CANsendMessage@tamp+3,c
 18032                           
 18033                           ; BSR set to: 15
 18034                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 18035  011D7C  C042  FF34         	movff	i2CANsendMessage@tamp,3892	;volatile
 18036                           
 18037                           ; BSR set to: 15
 18038                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 18039  011D80  0E00               	movlw	0
 18040  011D82  1436               	andwf	i2CANsendMessage@identifier,w,c
 18041  011D84  6E42               	movwf	i2CANsendMessage@tamp,c
 18042  011D86  0EFF               	movlw	255
 18043  011D88  1437               	andwf	i2CANsendMessage@identifier+1,w,c
 18044  011D8A  6E43               	movwf	i2CANsendMessage@tamp+1,c
 18045  011D8C  0E00               	movlw	0
 18046  011D8E  1438               	andwf	i2CANsendMessage@identifier+2,w,c
 18047  011D90  6E44               	movwf	i2CANsendMessage@tamp+2,c
 18048  011D92  0E00               	movlw	0
 18049  011D94  1439               	andwf	i2CANsendMessage@identifier+3,w,c
 18050  011D96  6E45               	movwf	i2CANsendMessage@tamp+3,c
 18051                           
 18052                           ; BSR set to: 15
 18053                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 18054  011D98  C042  F03E         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 18055  011D9C  C043  F03F         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 18056  011DA0  C044  F040         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 18057  011DA4  C045  F041         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 18058  011DA8  C03F  F03E         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 18059  011DAC  C040  F03F         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 18060  011DB0  C041  F040         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 18061  011DB4  6A41               	clrf	??i2_CANsendMessage+3,c
 18062  011DB6  C03E  F042         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18063  011DBA  C03F  F043         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18064  011DBE  C040  F044         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18065  011DC2  C041  F045         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18066                           
 18067                           ; BSR set to: 15
 18068                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 18069  011DC6  C042  FF33         	movff	i2CANsendMessage@tamp,3891	;volatile
 18070                           
 18071                           ; BSR set to: 15
 18072                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 18073  011DCA  0E00               	movlw	0
 18074  011DCC  010F               	movlb	15	; () banked
 18075  011DCE  6F32               	movwf	50,b	;volatile
 18076                           
 18077                           ; BSR set to: 15
 18078                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 18079  011DD0  010F               	movlb	15	; () banked
 18080  011DD2  8732               	bsf	50,3,b	;volatile
 18081                           
 18082                           ; BSR set to: 15
 18083                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 18084  011DD4  A038               	btfss	i2CANsendMessage@identifier+2,0,c
 18085  011DD6  D002               	goto	i2l390
 18086                           
 18087                           ; BSR set to: 15
 18088                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 18089  011DD8  010F               	movlb	15	; () banked
 18090  011DDA  8132               	bsf	50,0,b	;volatile
 18091  011DDC                     i2l390:
 18092                           
 18093                           ; BSR set to: 15
 18094                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 18095  011DDC  A238               	btfss	i2CANsendMessage@identifier+2,1,c
 18096  011DDE  D002               	goto	i2l391
 18097                           
 18098                           ; BSR set to: 15
 18099                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 18100  011DE0  010F               	movlb	15	; () banked
 18101  011DE2  8332               	bsf	50,1,b	;volatile
 18102  011DE4                     i2l391:
 18103                           
 18104                           ; BSR set to: 15
 18105                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 18106  011DE4  A438               	btfss	i2CANsendMessage@identifier+2,2,c
 18107  011DE6  D002               	goto	i2l392
 18108                           
 18109                           ; BSR set to: 15
 18110                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 18111  011DE8  010F               	movlb	15	; () banked
 18112  011DEA  8B32               	bsf	50,5,b	;volatile
 18113  011DEC                     i2l392:
 18114                           
 18115                           ; BSR set to: 15
 18116                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 18117  011DEC  A638               	btfss	i2CANsendMessage@identifier+2,3,c
 18118  011DEE  D002               	goto	i2l393
 18119                           
 18120                           ; BSR set to: 15
 18121                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 18122  011DF0  010F               	movlb	15	; () banked
 18123  011DF2  8D32               	bsf	50,6,b	;volatile
 18124  011DF4                     i2l393:
 18125                           
 18126                           ; BSR set to: 15
 18127                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 18128  011DF4  A838               	btfss	i2CANsendMessage@identifier+2,4,c
 18129  011DF6  D002               	goto	i2l6947
 18130                           
 18131                           ; BSR set to: 15
 18132                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 18133  011DF8  010F               	movlb	15	; () banked
 18134  011DFA  8F32               	bsf	50,7,b	;volatile
 18135  011DFC                     i2l6947:
 18136                           
 18137                           ; BSR set to: 15
 18138                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 18139  011DFC  C036  F03E         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 18140  011E00  C037  F03F         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 18141  011E04  C038  F040         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 18142  011E08  C039  F041         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 18143  011E0C  0E16               	movlw	22
 18144  011E0E  D005               	goto	i2u880_40
 18145  011E10                     i2u880_45:
 18146  011E10  90D8               	bcf	status,0,c
 18147  011E12  3241               	rrcf	??i2_CANsendMessage+3,f,c
 18148  011E14  3240               	rrcf	??i2_CANsendMessage+2,f,c
 18149  011E16  323F               	rrcf	??i2_CANsendMessage+1,f,c
 18150  011E18  323E               	rrcf	??i2_CANsendMessage,f,c
 18151  011E1A                     i2u880_40:
 18152  011E1A  2EE8               	decfsz	wreg,f,c
 18153  011E1C  D7F9               	goto	i2u880_45
 18154  011E1E  C03E  F042         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18155  011E22  C03F  F043         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18156  011E26  C040  F044         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18157  011E2A  C041  F045         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18158                           
 18159                           ; BSR set to: 15
 18160                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 18161  011E2E  5042               	movf	i2CANsendMessage@tamp,w,c
 18162  011E30  6E42               	movwf	i2CANsendMessage@tamp,c
 18163  011E32  6A43               	clrf	i2CANsendMessage@tamp+1,c
 18164  011E34  6A44               	clrf	i2CANsendMessage@tamp+2,c
 18165  011E36  6A45               	clrf	i2CANsendMessage@tamp+3,c
 18166                           
 18167                           ; BSR set to: 15
 18168                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 18169  011E38  C042  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 18170                           
 18171                           ;inc\CANlib.h: 407: }
 18172  011E3C  D04D               	goto	i2l6967
 18173  011E3E                     i2l389:
 18174                           
 18175                           ; BSR set to: 15
 18176                           ;inc\CANlib.h: 409: else
 18177                           ;inc\CANlib.h: 411: {
 18178                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 18179  011E3E  010F               	movlb	15	; () banked
 18180  011E40  9732               	bcf	50,3,b	;volatile
 18181                           
 18182                           ; BSR set to: 15
 18183                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 18184  011E42  C036  F03E         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 18185  011E46  C037  F03F         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 18186  011E4A  C038  F040         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 18187  011E4E  C039  F041         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 18188  011E52  0E04               	movlw	4
 18189  011E54  D005               	goto	i2u881_40
 18190  011E56                     i2u881_45:
 18191  011E56  90D8               	bcf	status,0,c
 18192  011E58  3241               	rrcf	??i2_CANsendMessage+3,f,c
 18193  011E5A  3240               	rrcf	??i2_CANsendMessage+2,f,c
 18194  011E5C  323F               	rrcf	??i2_CANsendMessage+1,f,c
 18195  011E5E  323E               	rrcf	??i2_CANsendMessage,f,c
 18196  011E60                     i2u881_40:
 18197  011E60  2EE8               	decfsz	wreg,f,c
 18198  011E62  D7F9               	goto	i2u881_45
 18199  011E64  C03E  F042         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18200  011E68  C03F  F043         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18201  011E6C  C040  F044         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18202  011E70  C041  F045         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18203                           
 18204                           ; BSR set to: 15
 18205                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 18206  011E74  5042               	movf	i2CANsendMessage@tamp,w,c
 18207  011E76  6E42               	movwf	i2CANsendMessage@tamp,c
 18208  011E78  6A43               	clrf	i2CANsendMessage@tamp+1,c
 18209  011E7A  6A44               	clrf	i2CANsendMessage@tamp+2,c
 18210  011E7C  6A45               	clrf	i2CANsendMessage@tamp+3,c
 18211                           
 18212                           ; BSR set to: 15
 18213                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 18214  011E7E  C042  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 18215                           
 18216                           ; BSR set to: 15
 18217                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 18218  011E82  0E07               	movlw	7
 18219  011E84  1436               	andwf	i2CANsendMessage@identifier,w,c
 18220  011E86  6E42               	movwf	i2CANsendMessage@tamp,c
 18221  011E88  0E00               	movlw	0
 18222  011E8A  1437               	andwf	i2CANsendMessage@identifier+1,w,c
 18223  011E8C  6E43               	movwf	i2CANsendMessage@tamp+1,c
 18224  011E8E  0E00               	movlw	0
 18225  011E90  1438               	andwf	i2CANsendMessage@identifier+2,w,c
 18226  011E92  6E44               	movwf	i2CANsendMessage@tamp+2,c
 18227  011E94  0E00               	movlw	0
 18228  011E96  1439               	andwf	i2CANsendMessage@identifier+3,w,c
 18229  011E98  6E45               	movwf	i2CANsendMessage@tamp+3,c
 18230                           
 18231                           ; BSR set to: 15
 18232                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 18233  011E9A  C042  F03E         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 18234  011E9E  C043  F03F         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 18235  011EA2  C044  F040         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 18236  011EA6  C045  F041         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 18237  011EAA  0E05               	movlw	5
 18238  011EAC                     i2u882_45:
 18239  011EAC  90D8               	bcf	status,0,c
 18240  011EAE  363E               	rlcf	??i2_CANsendMessage,f,c
 18241  011EB0  363F               	rlcf	??i2_CANsendMessage+1,f,c
 18242  011EB2  3640               	rlcf	??i2_CANsendMessage+2,f,c
 18243  011EB4  3641               	rlcf	??i2_CANsendMessage+3,f,c
 18244  011EB6  2EE8               	decfsz	wreg,f,c
 18245  011EB8  D7F9               	goto	i2u882_45
 18246  011EBA  C03E  F042         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18247  011EBE  C03F  F043         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18248  011EC2  C040  F044         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18249  011EC6  C041  F045         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18250                           
 18251                           ; BSR set to: 15
 18252                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 18253  011ECA  010F               	movlb	15	; () banked
 18254  011ECC  5132               	movf	50,w,b	;volatile
 18255  011ECE  0B1F               	andlw	31
 18256  011ED0  010F               	movlb	15	; () banked
 18257  011ED2  6F32               	movwf	50,b	;volatile
 18258                           
 18259                           ; BSR set to: 15
 18260                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 18261  011ED4  C042  FF32         	movff	i2CANsendMessage@tamp,3890	;volatile
 18262  011ED8                     i2l6967:
 18263                           
 18264                           ; BSR set to: 15
 18265                           ;inc\CANlib.h: 422: }
 18266                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 18267  011ED8  A03D               	btfss	i2CANsendMessage@flags,0,c
 18268  011EDA  D003               	goto	i2l396
 18269                           
 18270                           ; BSR set to: 15
 18271                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 18272  011EDC  010F               	movlb	15	; () banked
 18273  011EDE  8130               	bsf	48,0,b	;volatile
 18274  011EE0  D002               	goto	i2l397
 18275  011EE2                     i2l396:
 18276                           
 18277                           ; BSR set to: 15
 18278                           ;inc\CANlib.h: 426: else
 18279                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 18280  011EE2  010F               	movlb	15	; () banked
 18281  011EE4  9130               	bcf	48,0,b	;volatile
 18282  011EE6                     i2l397:
 18283                           
 18284                           ; BSR set to: 15
 18285                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 18286  011EE6  A23D               	btfss	i2CANsendMessage@flags,1,c
 18287  011EE8  D003               	goto	i2l398
 18288                           
 18289                           ; BSR set to: 15
 18290                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 18291  011EEA  010F               	movlb	15	; () banked
 18292  011EEC  8330               	bsf	48,1,b	;volatile
 18293  011EEE  D002               	goto	i2l6973
 18294  011EF0                     i2l398:
 18295                           
 18296                           ; BSR set to: 15
 18297                           ;inc\CANlib.h: 430: else
 18298                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 18299  011EF0  010F               	movlb	15	; () banked
 18300  011EF2  9330               	bcf	48,1,b	;volatile
 18301  011EF4                     i2l6973:
 18302                           
 18303                           ; BSR set to: 15
 18304                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 18305  011EF4  C03A  FFD9         	movff	i2CANsendMessage@data,fsr2l
 18306  011EF8  C03B  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 18307  011EFC  50DF               	movf	indf2,w,c
 18308  011EFE  010F               	movlb	15	; () banked
 18309  011F00  6F36               	movwf	54,b	;volatile
 18310                           
 18311                           ; BSR set to: 15
 18312                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 18313  011F02  EE20 F001          	lfsr	2,1
 18314  011F06  503A               	movf	i2CANsendMessage@data,w,c
 18315  011F08  26D9               	addwf	fsr2l,f,c
 18316  011F0A  503B               	movf	i2CANsendMessage@data+1,w,c
 18317  011F0C  22DA               	addwfc	fsr2h,f,c
 18318  011F0E  50DF               	movf	indf2,w,c
 18319  011F10  010F               	movlb	15	; () banked
 18320  011F12  6F37               	movwf	55,b	;volatile
 18321                           
 18322                           ; BSR set to: 15
 18323                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 18324  011F14  EE20 F002          	lfsr	2,2
 18325  011F18  503A               	movf	i2CANsendMessage@data,w,c
 18326  011F1A  26D9               	addwf	fsr2l,f,c
 18327  011F1C  503B               	movf	i2CANsendMessage@data+1,w,c
 18328  011F1E  22DA               	addwfc	fsr2h,f,c
 18329  011F20  50DF               	movf	indf2,w,c
 18330  011F22  010F               	movlb	15	; () banked
 18331  011F24  6F38               	movwf	56,b	;volatile
 18332                           
 18333                           ; BSR set to: 15
 18334                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 18335  011F26  EE20 F003          	lfsr	2,3
 18336  011F2A  503A               	movf	i2CANsendMessage@data,w,c
 18337  011F2C  26D9               	addwf	fsr2l,f,c
 18338  011F2E  503B               	movf	i2CANsendMessage@data+1,w,c
 18339  011F30  22DA               	addwfc	fsr2h,f,c
 18340  011F32  50DF               	movf	indf2,w,c
 18341  011F34  010F               	movlb	15	; () banked
 18342  011F36  6F39               	movwf	57,b	;volatile
 18343                           
 18344                           ; BSR set to: 15
 18345                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 18346  011F38  EE20 F004          	lfsr	2,4
 18347  011F3C  503A               	movf	i2CANsendMessage@data,w,c
 18348  011F3E  26D9               	addwf	fsr2l,f,c
 18349  011F40  503B               	movf	i2CANsendMessage@data+1,w,c
 18350  011F42  22DA               	addwfc	fsr2h,f,c
 18351  011F44  50DF               	movf	indf2,w,c
 18352  011F46  010F               	movlb	15	; () banked
 18353  011F48  6F3A               	movwf	58,b	;volatile
 18354                           
 18355                           ; BSR set to: 15
 18356                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 18357  011F4A  EE20 F005          	lfsr	2,5
 18358  011F4E  503A               	movf	i2CANsendMessage@data,w,c
 18359  011F50  26D9               	addwf	fsr2l,f,c
 18360  011F52  503B               	movf	i2CANsendMessage@data+1,w,c
 18361  011F54  22DA               	addwfc	fsr2h,f,c
 18362  011F56  50DF               	movf	indf2,w,c
 18363  011F58  010F               	movlb	15	; () banked
 18364  011F5A  6F3B               	movwf	59,b	;volatile
 18365                           
 18366                           ; BSR set to: 15
 18367                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 18368  011F5C  EE20 F006          	lfsr	2,6
 18369  011F60  503A               	movf	i2CANsendMessage@data,w,c
 18370  011F62  26D9               	addwf	fsr2l,f,c
 18371  011F64  503B               	movf	i2CANsendMessage@data+1,w,c
 18372  011F66  22DA               	addwfc	fsr2h,f,c
 18373  011F68  50DF               	movf	indf2,w,c
 18374  011F6A  010F               	movlb	15	; () banked
 18375  011F6C  6F3C               	movwf	60,b	;volatile
 18376                           
 18377                           ; BSR set to: 15
 18378                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 18379  011F6E  EE20 F007          	lfsr	2,7
 18380  011F72  503A               	movf	i2CANsendMessage@data,w,c
 18381  011F74  26D9               	addwf	fsr2l,f,c
 18382  011F76  503B               	movf	i2CANsendMessage@data+1,w,c
 18383  011F78  22DA               	addwfc	fsr2h,f,c
 18384  011F7A  50DF               	movf	indf2,w,c
 18385  011F7C  010F               	movlb	15	; () banked
 18386  011F7E  6F3D               	movwf	61,b	;volatile
 18387                           
 18388                           ; BSR set to: 15
 18389                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 18390  011F80  010F               	movlb	15	; () banked
 18391  011F82  8730               	bsf	48,3,b	;volatile
 18392                           
 18393                           ; BSR set to: 15
 18394                           ;inc\CANlib.h: 444: return;
 18395  011F84  0012               	return	
 18396  011F86                     i2l386:
 18397                           
 18398                           ; BSR set to: 15
 18399                           ;inc\CANlib.h: 445: }
 18400                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 18401  011F86  010F               	movlb	15	; () banked
 18402  011F88  B720               	btfsc	32,3,b	;volatile
 18403  011F8A  0012               	return	
 18404                           
 18405                           ; BSR set to: 15
 18406                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 18407  011F8C  C03C  FF25         	movff	i2CANsendMessage@dataLength,3877	;volatile
 18408                           
 18409                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 18410  011F90  AC3D               	btfss	i2CANsendMessage@flags,6,c
 18411  011F92  D003               	goto	i2l401
 18412                           
 18413                           ; BSR set to: 15
 18414                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 18415  011F94  010F               	movlb	15	; () banked
 18416  011F96  8D25               	bsf	37,6,b	;volatile
 18417  011F98  D002               	goto	i2l402
 18418  011F9A                     i2l401:
 18419                           
 18420                           ; BSR set to: 15
 18421                           ;inc\CANlib.h: 454: else
 18422                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 18423  011F9A  010F               	movlb	15	; () banked
 18424  011F9C  9D25               	bcf	37,6,b	;volatile
 18425  011F9E                     i2l402:
 18426                           
 18427                           ; BSR set to: 15
 18428                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 18429  011F9E  A63D               	btfss	i2CANsendMessage@flags,3,c
 18430  011FA0  D066               	goto	i2l403
 18431                           
 18432                           ; BSR set to: 15
 18433                           ;inc\CANlib.h: 458: {
 18434                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 18435  011FA2  5036               	movf	i2CANsendMessage@identifier,w,c
 18436  011FA4  6E42               	movwf	i2CANsendMessage@tamp,c
 18437  011FA6  6A43               	clrf	i2CANsendMessage@tamp+1,c
 18438  011FA8  6A44               	clrf	i2CANsendMessage@tamp+2,c
 18439  011FAA  6A45               	clrf	i2CANsendMessage@tamp+3,c
 18440                           
 18441                           ; BSR set to: 15
 18442                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 18443  011FAC  C042  FF24         	movff	i2CANsendMessage@tamp,3876	;volatile
 18444                           
 18445                           ; BSR set to: 15
 18446                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 18447  011FB0  0E00               	movlw	0
 18448  011FB2  1436               	andwf	i2CANsendMessage@identifier,w,c
 18449  011FB4  6E42               	movwf	i2CANsendMessage@tamp,c
 18450  011FB6  0EFF               	movlw	255
 18451  011FB8  1437               	andwf	i2CANsendMessage@identifier+1,w,c
 18452  011FBA  6E43               	movwf	i2CANsendMessage@tamp+1,c
 18453  011FBC  0E00               	movlw	0
 18454  011FBE  1438               	andwf	i2CANsendMessage@identifier+2,w,c
 18455  011FC0  6E44               	movwf	i2CANsendMessage@tamp+2,c
 18456  011FC2  0E00               	movlw	0
 18457  011FC4  1439               	andwf	i2CANsendMessage@identifier+3,w,c
 18458  011FC6  6E45               	movwf	i2CANsendMessage@tamp+3,c
 18459                           
 18460                           ; BSR set to: 15
 18461                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 18462  011FC8  C042  F03E         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 18463  011FCC  C043  F03F         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 18464  011FD0  C044  F040         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 18465  011FD4  C045  F041         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 18466  011FD8  C03F  F03E         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 18467  011FDC  C040  F03F         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 18468  011FE0  C041  F040         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 18469  011FE4  6A41               	clrf	??i2_CANsendMessage+3,c
 18470  011FE6  C03E  F042         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18471  011FEA  C03F  F043         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18472  011FEE  C040  F044         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18473  011FF2  C041  F045         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18474                           
 18475                           ; BSR set to: 15
 18476                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 18477  011FF6  C042  FF23         	movff	i2CANsendMessage@tamp,3875	;volatile
 18478                           
 18479                           ; BSR set to: 15
 18480                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 18481  011FFA  0E00               	movlw	0
 18482  011FFC  010F               	movlb	15	; () banked
 18483  011FFE  6F22               	movwf	34,b	;volatile
 18484                           
 18485                           ; BSR set to: 15
 18486                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 18487  012000  010F               	movlb	15	; () banked
 18488  012002  8722               	bsf	34,3,b	;volatile
 18489                           
 18490                           ; BSR set to: 15
 18491                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 18492  012004  A038               	btfss	i2CANsendMessage@identifier+2,0,c
 18493  012006  D002               	goto	i2l404
 18494                           
 18495                           ; BSR set to: 15
 18496                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 18497  012008  010F               	movlb	15	; () banked
 18498  01200A  8122               	bsf	34,0,b	;volatile
 18499  01200C                     i2l404:
 18500                           
 18501                           ; BSR set to: 15
 18502                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 18503  01200C  A238               	btfss	i2CANsendMessage@identifier+2,1,c
 18504  01200E  D002               	goto	i2l405
 18505                           
 18506                           ; BSR set to: 15
 18507                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 18508  012010  010F               	movlb	15	; () banked
 18509  012012  8322               	bsf	34,1,b	;volatile
 18510  012014                     i2l405:
 18511                           
 18512                           ; BSR set to: 15
 18513                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 18514  012014  A438               	btfss	i2CANsendMessage@identifier+2,2,c
 18515  012016  D002               	goto	i2l406
 18516                           
 18517                           ; BSR set to: 15
 18518                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 18519  012018  010F               	movlb	15	; () banked
 18520  01201A  8B22               	bsf	34,5,b	;volatile
 18521  01201C                     i2l406:
 18522                           
 18523                           ; BSR set to: 15
 18524                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 18525  01201C  A638               	btfss	i2CANsendMessage@identifier+2,3,c
 18526  01201E  D002               	goto	i2l407
 18527                           
 18528                           ; BSR set to: 15
 18529                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 18530  012020  010F               	movlb	15	; () banked
 18531  012022  8D22               	bsf	34,6,b	;volatile
 18532  012024                     i2l407:
 18533                           
 18534                           ; BSR set to: 15
 18535                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 18536  012024  A838               	btfss	i2CANsendMessage@identifier+2,4,c
 18537  012026  D002               	goto	i2l7023
 18538                           
 18539                           ; BSR set to: 15
 18540                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 18541  012028  010F               	movlb	15	; () banked
 18542  01202A  8F22               	bsf	34,7,b	;volatile
 18543  01202C                     i2l7023:
 18544                           
 18545                           ; BSR set to: 15
 18546                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 18547  01202C  C036  F03E         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 18548  012030  C037  F03F         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 18549  012034  C038  F040         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 18550  012038  C039  F041         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 18551  01203C  0E16               	movlw	22
 18552  01203E  D005               	goto	i2u893_40
 18553  012040                     i2u893_45:
 18554  012040  90D8               	bcf	status,0,c
 18555  012042  3241               	rrcf	??i2_CANsendMessage+3,f,c
 18556  012044  3240               	rrcf	??i2_CANsendMessage+2,f,c
 18557  012046  323F               	rrcf	??i2_CANsendMessage+1,f,c
 18558  012048  323E               	rrcf	??i2_CANsendMessage,f,c
 18559  01204A                     i2u893_40:
 18560  01204A  2EE8               	decfsz	wreg,f,c
 18561  01204C  D7F9               	goto	i2u893_45
 18562  01204E  C03E  F042         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18563  012052  C03F  F043         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18564  012056  C040  F044         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18565  01205A  C041  F045         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18566                           
 18567                           ; BSR set to: 15
 18568                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 18569  01205E  5042               	movf	i2CANsendMessage@tamp,w,c
 18570  012060  6E42               	movwf	i2CANsendMessage@tamp,c
 18571  012062  6A43               	clrf	i2CANsendMessage@tamp+1,c
 18572  012064  6A44               	clrf	i2CANsendMessage@tamp+2,c
 18573  012066  6A45               	clrf	i2CANsendMessage@tamp+3,c
 18574                           
 18575                           ; BSR set to: 15
 18576                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 18577  012068  C042  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 18578                           
 18579                           ;inc\CANlib.h: 483: }
 18580  01206C  D04D               	goto	i2l7043
 18581  01206E                     i2l403:
 18582                           
 18583                           ; BSR set to: 15
 18584                           ;inc\CANlib.h: 485: else
 18585                           ;inc\CANlib.h: 487: {
 18586                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 18587  01206E  010F               	movlb	15	; () banked
 18588  012070  9722               	bcf	34,3,b	;volatile
 18589                           
 18590                           ; BSR set to: 15
 18591                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 18592  012072  C036  F03E         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 18593  012076  C037  F03F         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 18594  01207A  C038  F040         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 18595  01207E  C039  F041         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 18596  012082  0E04               	movlw	4
 18597  012084  D005               	goto	i2u894_40
 18598  012086                     i2u894_45:
 18599  012086  90D8               	bcf	status,0,c
 18600  012088  3241               	rrcf	??i2_CANsendMessage+3,f,c
 18601  01208A  3240               	rrcf	??i2_CANsendMessage+2,f,c
 18602  01208C  323F               	rrcf	??i2_CANsendMessage+1,f,c
 18603  01208E  323E               	rrcf	??i2_CANsendMessage,f,c
 18604  012090                     i2u894_40:
 18605  012090  2EE8               	decfsz	wreg,f,c
 18606  012092  D7F9               	goto	i2u894_45
 18607  012094  C03E  F042         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18608  012098  C03F  F043         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18609  01209C  C040  F044         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18610  0120A0  C041  F045         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18611                           
 18612                           ; BSR set to: 15
 18613                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 18614  0120A4  5042               	movf	i2CANsendMessage@tamp,w,c
 18615  0120A6  6E42               	movwf	i2CANsendMessage@tamp,c
 18616  0120A8  6A43               	clrf	i2CANsendMessage@tamp+1,c
 18617  0120AA  6A44               	clrf	i2CANsendMessage@tamp+2,c
 18618  0120AC  6A45               	clrf	i2CANsendMessage@tamp+3,c
 18619                           
 18620                           ; BSR set to: 15
 18621                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 18622  0120AE  C042  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 18623                           
 18624                           ; BSR set to: 15
 18625                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 18626  0120B2  0E07               	movlw	7
 18627  0120B4  1436               	andwf	i2CANsendMessage@identifier,w,c
 18628  0120B6  6E42               	movwf	i2CANsendMessage@tamp,c
 18629  0120B8  0E00               	movlw	0
 18630  0120BA  1437               	andwf	i2CANsendMessage@identifier+1,w,c
 18631  0120BC  6E43               	movwf	i2CANsendMessage@tamp+1,c
 18632  0120BE  0E00               	movlw	0
 18633  0120C0  1438               	andwf	i2CANsendMessage@identifier+2,w,c
 18634  0120C2  6E44               	movwf	i2CANsendMessage@tamp+2,c
 18635  0120C4  0E00               	movlw	0
 18636  0120C6  1439               	andwf	i2CANsendMessage@identifier+3,w,c
 18637  0120C8  6E45               	movwf	i2CANsendMessage@tamp+3,c
 18638                           
 18639                           ; BSR set to: 15
 18640                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 18641  0120CA  C042  F03E         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 18642  0120CE  C043  F03F         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 18643  0120D2  C044  F040         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 18644  0120D6  C045  F041         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 18645  0120DA  0E05               	movlw	5
 18646  0120DC                     i2u895_45:
 18647  0120DC  90D8               	bcf	status,0,c
 18648  0120DE  363E               	rlcf	??i2_CANsendMessage,f,c
 18649  0120E0  363F               	rlcf	??i2_CANsendMessage+1,f,c
 18650  0120E2  3640               	rlcf	??i2_CANsendMessage+2,f,c
 18651  0120E4  3641               	rlcf	??i2_CANsendMessage+3,f,c
 18652  0120E6  2EE8               	decfsz	wreg,f,c
 18653  0120E8  D7F9               	goto	i2u895_45
 18654  0120EA  C03E  F042         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18655  0120EE  C03F  F043         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18656  0120F2  C040  F044         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18657  0120F6  C041  F045         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18658                           
 18659                           ; BSR set to: 15
 18660                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 18661  0120FA  010F               	movlb	15	; () banked
 18662  0120FC  5122               	movf	34,w,b	;volatile
 18663  0120FE  0B1F               	andlw	31
 18664  012100  010F               	movlb	15	; () banked
 18665  012102  6F22               	movwf	34,b	;volatile
 18666                           
 18667                           ; BSR set to: 15
 18668                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 18669  012104  C042  FF22         	movff	i2CANsendMessage@tamp,3874	;volatile
 18670  012108                     i2l7043:
 18671                           
 18672                           ; BSR set to: 15
 18673                           ;inc\CANlib.h: 498: }
 18674                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 18675  012108  A03D               	btfss	i2CANsendMessage@flags,0,c
 18676  01210A  D003               	goto	i2l410
 18677                           
 18678                           ; BSR set to: 15
 18679                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 18680  01210C  010F               	movlb	15	; () banked
 18681  01210E  8120               	bsf	32,0,b	;volatile
 18682  012110  D002               	goto	i2l411
 18683  012112                     i2l410:
 18684                           
 18685                           ; BSR set to: 15
 18686                           ;inc\CANlib.h: 502: else
 18687                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 18688  012112  010F               	movlb	15	; () banked
 18689  012114  9120               	bcf	32,0,b	;volatile
 18690  012116                     i2l411:
 18691                           
 18692                           ; BSR set to: 15
 18693                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 18694  012116  A23D               	btfss	i2CANsendMessage@flags,1,c
 18695  012118  D003               	goto	i2l412
 18696                           
 18697                           ; BSR set to: 15
 18698                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 18699  01211A  010F               	movlb	15	; () banked
 18700  01211C  8320               	bsf	32,1,b	;volatile
 18701  01211E  D002               	goto	i2l7049
 18702  012120                     i2l412:
 18703                           
 18704                           ; BSR set to: 15
 18705                           ;inc\CANlib.h: 506: else
 18706                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 18707  012120  010F               	movlb	15	; () banked
 18708  012122  9320               	bcf	32,1,b	;volatile
 18709  012124                     i2l7049:
 18710                           
 18711                           ; BSR set to: 15
 18712                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 18713  012124  C03A  FFD9         	movff	i2CANsendMessage@data,fsr2l
 18714  012128  C03B  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 18715  01212C  50DF               	movf	indf2,w,c
 18716  01212E  010F               	movlb	15	; () banked
 18717  012130  6F26               	movwf	38,b	;volatile
 18718                           
 18719                           ; BSR set to: 15
 18720                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 18721  012132  EE20 F001          	lfsr	2,1
 18722  012136  503A               	movf	i2CANsendMessage@data,w,c
 18723  012138  26D9               	addwf	fsr2l,f,c
 18724  01213A  503B               	movf	i2CANsendMessage@data+1,w,c
 18725  01213C  22DA               	addwfc	fsr2h,f,c
 18726  01213E  50DF               	movf	indf2,w,c
 18727  012140  010F               	movlb	15	; () banked
 18728  012142  6F27               	movwf	39,b	;volatile
 18729                           
 18730                           ; BSR set to: 15
 18731                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 18732  012144  EE20 F002          	lfsr	2,2
 18733  012148  503A               	movf	i2CANsendMessage@data,w,c
 18734  01214A  26D9               	addwf	fsr2l,f,c
 18735  01214C  503B               	movf	i2CANsendMessage@data+1,w,c
 18736  01214E  22DA               	addwfc	fsr2h,f,c
 18737  012150  50DF               	movf	indf2,w,c
 18738  012152  010F               	movlb	15	; () banked
 18739  012154  6F28               	movwf	40,b	;volatile
 18740                           
 18741                           ; BSR set to: 15
 18742                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 18743  012156  EE20 F003          	lfsr	2,3
 18744  01215A  503A               	movf	i2CANsendMessage@data,w,c
 18745  01215C  26D9               	addwf	fsr2l,f,c
 18746  01215E  503B               	movf	i2CANsendMessage@data+1,w,c
 18747  012160  22DA               	addwfc	fsr2h,f,c
 18748  012162  50DF               	movf	indf2,w,c
 18749  012164  010F               	movlb	15	; () banked
 18750  012166  6F29               	movwf	41,b	;volatile
 18751                           
 18752                           ; BSR set to: 15
 18753                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 18754  012168  EE20 F004          	lfsr	2,4
 18755  01216C  503A               	movf	i2CANsendMessage@data,w,c
 18756  01216E  26D9               	addwf	fsr2l,f,c
 18757  012170  503B               	movf	i2CANsendMessage@data+1,w,c
 18758  012172  22DA               	addwfc	fsr2h,f,c
 18759  012174  50DF               	movf	indf2,w,c
 18760  012176  010F               	movlb	15	; () banked
 18761  012178  6F2A               	movwf	42,b	;volatile
 18762                           
 18763                           ; BSR set to: 15
 18764                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 18765  01217A  EE20 F005          	lfsr	2,5
 18766  01217E  503A               	movf	i2CANsendMessage@data,w,c
 18767  012180  26D9               	addwf	fsr2l,f,c
 18768  012182  503B               	movf	i2CANsendMessage@data+1,w,c
 18769  012184  22DA               	addwfc	fsr2h,f,c
 18770  012186  50DF               	movf	indf2,w,c
 18771  012188  010F               	movlb	15	; () banked
 18772  01218A  6F2B               	movwf	43,b	;volatile
 18773                           
 18774                           ; BSR set to: 15
 18775                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 18776  01218C  EE20 F006          	lfsr	2,6
 18777  012190  503A               	movf	i2CANsendMessage@data,w,c
 18778  012192  26D9               	addwf	fsr2l,f,c
 18779  012194  503B               	movf	i2CANsendMessage@data+1,w,c
 18780  012196  22DA               	addwfc	fsr2h,f,c
 18781  012198  50DF               	movf	indf2,w,c
 18782  01219A  010F               	movlb	15	; () banked
 18783  01219C  6F2C               	movwf	44,b	;volatile
 18784                           
 18785                           ; BSR set to: 15
 18786                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 18787  01219E  EE20 F007          	lfsr	2,7
 18788  0121A2  503A               	movf	i2CANsendMessage@data,w,c
 18789  0121A4  26D9               	addwf	fsr2l,f,c
 18790  0121A6  503B               	movf	i2CANsendMessage@data+1,w,c
 18791  0121A8  22DA               	addwfc	fsr2h,f,c
 18792  0121AA  50DF               	movf	indf2,w,c
 18793  0121AC  010F               	movlb	15	; () banked
 18794  0121AE  6F2D               	movwf	45,b	;volatile
 18795                           
 18796                           ; BSR set to: 15
 18797                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 18798  0121B0  010F               	movlb	15	; () banked
 18799  0121B2  8720               	bsf	32,3,b	;volatile
 18800                           
 18801                           ; BSR set to: 15
 18802                           ;inc\CANlib.h: 520: return;
 18803  0121B4  0012               	return	
 18804  0121B6                     __end_ofi2_CANsendMessage:
 18805                           	opt stack 0
 18806                           pclatu	equ	0xFFB
 18807                           pclath	equ	0xFFA
 18808                           tblptru	equ	0xFF8
 18809                           tblptrh	equ	0xFF7
 18810                           tblptrl	equ	0xFF6
 18811                           tablat	equ	0xFF5
 18812                           prodh	equ	0xFF4
 18813                           prodl	equ	0xFF3
 18814                           intcon	equ	0xFF2
 18815                           postinc0	equ	0xFEE
 18816                           fsr0h	equ	0xFEA
 18817                           fsr0l	equ	0xFE9
 18818                           wreg	equ	0xFE8
 18819                           indf1	equ	0xFE7
 18820                           plusw1	equ	0xFE3
 18821                           fsr1h	equ	0xFE2
 18822                           fsr1l	equ	0xFE1
 18823                           bsr	equ	0xFE0
 18824                           indf2	equ	0xFDF
 18825                           postinc2	equ	0xFDE
 18826                           plusw2	equ	0xFDB
 18827                           fsr2h	equ	0xFDA
 18828                           fsr2l	equ	0xFD9
 18829                           status	equ	0xFD8
 18830                           
 18831 ;; *************** function i2_CANisTxReady *****************
 18832 ;; Defined at:
 18833 ;;		line 1154 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 18834 ;; Parameters:    Size  Location     Type
 18835 ;;		None
 18836 ;; Auto vars:     Size  Location     Type
 18837 ;;		None
 18838 ;; Return value:  Size  Location     Type
 18839 ;;                  1    wreg      unsigned char 
 18840 ;; Registers used:
 18841 ;;		wreg, status,2
 18842 ;; Tracked objects:
 18843 ;;		On entry : 0/0
 18844 ;;		On exit  : 0/0
 18845 ;;		Unchanged: 0/0
 18846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18848 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18850 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18851 ;;Total ram usage:        1 bytes
 18852 ;; Hardware stack levels used:    1
 18853 ;; This function calls:
 18854 ;;		Nothing
 18855 ;; This function is called by:
 18856 ;;		_ISR_alta
 18857 ;; This function uses a non-reentrant model
 18858 ;;
 18859                           
 18860                           	psect	text51
 18861  015E48                     __ptext51:
 18862                           	opt stack 0
 18863  015E48                     i2_CANisTxReady:
 18864                           	opt stack 20
 18865                           
 18866                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 18867                           
 18868                           ; BSR set to: 15
 18869                           ;incstack = 0
 18870  015E48  0E01               	movlw	1
 18871  015E4A  6E36               	movwf	i2_CANisTxReady$3227,c
 18872  015E4C  010F               	movlb	15	; () banked
 18873  015E4E  A740               	btfss	64,3,b	;volatile
 18874  015E50  D008               	goto	i2l564
 18875                           
 18876                           ; BSR set to: 15
 18877  015E52  010F               	movlb	15	; () banked
 18878  015E54  A730               	btfss	48,3,b	;volatile
 18879  015E56  D005               	goto	i2l564
 18880                           
 18881                           ; BSR set to: 15
 18882  015E58  010F               	movlb	15	; () banked
 18883  015E5A  A720               	btfss	32,3,b	;volatile
 18884  015E5C  D002               	goto	i2l564
 18885                           
 18886                           ; BSR set to: 15
 18887  015E5E  0E00               	movlw	0
 18888  015E60  6E36               	movwf	i2_CANisTxReady$3227,c
 18889  015E62                     i2l564:
 18890                           
 18891                           ; BSR set to: 15
 18892  015E62  5036               	movf	i2_CANisTxReady$3227,w,c
 18893  015E64  0012               	return	
 18894  015E66                     __end_ofi2_CANisTxReady:
 18895                           	opt stack 0
 18896                           pclatu	equ	0xFFB
 18897                           pclath	equ	0xFFA
 18898                           tblptru	equ	0xFF8
 18899                           tblptrh	equ	0xFF7
 18900                           tblptrl	equ	0xFF6
 18901                           tablat	equ	0xFF5
 18902                           prodh	equ	0xFF4
 18903                           prodl	equ	0xFF3
 18904                           intcon	equ	0xFF2
 18905                           postinc0	equ	0xFEE
 18906                           fsr0h	equ	0xFEA
 18907                           fsr0l	equ	0xFE9
 18908                           wreg	equ	0xFE8
 18909                           indf1	equ	0xFE7
 18910                           plusw1	equ	0xFE3
 18911                           fsr1h	equ	0xFE2
 18912                           fsr1l	equ	0xFE1
 18913                           bsr	equ	0xFE0
 18914                           indf2	equ	0xFDF
 18915                           postinc2	equ	0xFDE
 18916                           plusw2	equ	0xFDB
 18917                           fsr2h	equ	0xFDA
 18918                           fsr2l	equ	0xFD9
 18919                           status	equ	0xFD8
 18920                           
 18921 ;; *************** function _CANreceiveMessage *****************
 18922 ;; Defined at:
 18923 ;;		line 528 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 18924 ;; Parameters:    Size  Location     Type
 18925 ;;  msg             2   17[COMRAM] PTR struct .
 18926 ;;		 -> msg(15), 
 18927 ;; Auto vars:     Size  Location     Type
 18928 ;;  tamp            1   28[COMRAM] unsigned char 
 18929 ;;  error           1   27[COMRAM] unsigned char 
 18930 ;; Return value:  Size  Location     Type
 18931 ;;                  1    wreg      unsigned char 
 18932 ;; Registers used:
 18933 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18934 ;; Tracked objects:
 18935 ;;		On entry : 0/0
 18936 ;;		On exit  : 0/0
 18937 ;;		Unchanged: 0/0
 18938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18939 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18940 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18941 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18942 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18943 ;;Total ram usage:       12 bytes
 18944 ;; Hardware stack levels used:    1
 18945 ;; This function calls:
 18946 ;;		Nothing
 18947 ;; This function is called by:
 18948 ;;		_ISR_alta
 18949 ;; This function uses a non-reentrant model
 18950 ;;
 18951                           
 18952                           	psect	text52
 18953  0126D0                     __ptext52:
 18954                           	opt stack 0
 18955  0126D0                     _CANreceiveMessage:
 18956                           	opt stack 20
 18957                           
 18958                           ;inc\CANlib.h: 530: BYTE tamp;
 18959                           ;inc\CANlib.h: 531: BYTE error = 0;
 18960                           
 18961                           ; BSR set to: 15
 18962                           ;incstack = 0
 18963  0126D0  0E00               	movlw	0
 18964  0126D2  6E40               	movwf	CANreceiveMessage@error,c
 18965                           
 18966                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 18967  0126D4  BE74               	btfsc	3956,7,c	;volatile
 18968                           
 18969                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 18970  0126D6  8040               	bsf	CANreceiveMessage@error,0,c
 18971                           
 18972                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 18973  0126D8  BC74               	btfsc	3956,6,c	;volatile
 18974                           
 18975                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 18976  0126DA  8240               	bsf	CANreceiveMessage@error,1,c
 18977                           
 18978                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 18979  0126DC  010F               	movlb	15	; () banked
 18980  0126DE  AF50               	btfss	80,7,b	;volatile
 18981  0126E0  D143               	goto	i2l418
 18982                           
 18983                           ; BSR set to: 15
 18984                           ;inc\CANlib.h: 541: {
 18985                           ;inc\CANlib.h: 542: msg->identifier = 0;
 18986  0126E2  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 18987  0126E6  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 18988  0126EA  6ADE               	clrf	postinc2,c
 18989  0126EC  6ADE               	clrf	postinc2,c
 18990  0126EE  6ADE               	clrf	postinc2,c
 18991  0126F0  6ADD               	clrf	postdec2,c
 18992                           
 18993                           ; BSR set to: 15
 18994                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 18995  0126F2  EE20 F004          	lfsr	2,4
 18996  0126F6  5036               	movf	CANreceiveMessage@msg,w,c
 18997  0126F8  26D9               	addwf	fsr2l,f,c
 18998  0126FA  5037               	movf	CANreceiveMessage@msg+1,w,c
 18999  0126FC  22DA               	addwfc	fsr2h,f,c
 19000  0126FE  CF56 FFDF          	movff	3926,indf2	;volatile
 19001                           
 19002                           ; BSR set to: 15
 19003                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 19004  012702  EE20 F005          	lfsr	2,5
 19005  012706  5036               	movf	CANreceiveMessage@msg,w,c
 19006  012708  26D9               	addwf	fsr2l,f,c
 19007  01270A  5037               	movf	CANreceiveMessage@msg+1,w,c
 19008  01270C  22DA               	addwfc	fsr2h,f,c
 19009  01270E  CF57 FFDF          	movff	3927,indf2	;volatile
 19010                           
 19011                           ; BSR set to: 15
 19012                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 19013  012712  EE20 F006          	lfsr	2,6
 19014  012716  5036               	movf	CANreceiveMessage@msg,w,c
 19015  012718  26D9               	addwf	fsr2l,f,c
 19016  01271A  5037               	movf	CANreceiveMessage@msg+1,w,c
 19017  01271C  22DA               	addwfc	fsr2h,f,c
 19018  01271E  CF58 FFDF          	movff	3928,indf2	;volatile
 19019                           
 19020                           ; BSR set to: 15
 19021                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 19022  012722  EE20 F007          	lfsr	2,7
 19023  012726  5036               	movf	CANreceiveMessage@msg,w,c
 19024  012728  26D9               	addwf	fsr2l,f,c
 19025  01272A  5037               	movf	CANreceiveMessage@msg+1,w,c
 19026  01272C  22DA               	addwfc	fsr2h,f,c
 19027  01272E  CF59 FFDF          	movff	3929,indf2	;volatile
 19028                           
 19029                           ; BSR set to: 15
 19030                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 19031  012732  EE20 F008          	lfsr	2,8
 19032  012736  5036               	movf	CANreceiveMessage@msg,w,c
 19033  012738  26D9               	addwf	fsr2l,f,c
 19034  01273A  5037               	movf	CANreceiveMessage@msg+1,w,c
 19035  01273C  22DA               	addwfc	fsr2h,f,c
 19036  01273E  CF5A FFDF          	movff	3930,indf2	;volatile
 19037                           
 19038                           ; BSR set to: 15
 19039                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 19040  012742  EE20 F009          	lfsr	2,9
 19041  012746  5036               	movf	CANreceiveMessage@msg,w,c
 19042  012748  26D9               	addwf	fsr2l,f,c
 19043  01274A  5037               	movf	CANreceiveMessage@msg+1,w,c
 19044  01274C  22DA               	addwfc	fsr2h,f,c
 19045  01274E  CF5B FFDF          	movff	3931,indf2	;volatile
 19046                           
 19047                           ; BSR set to: 15
 19048                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 19049  012752  EE20 F00A          	lfsr	2,10
 19050  012756  5036               	movf	CANreceiveMessage@msg,w,c
 19051  012758  26D9               	addwf	fsr2l,f,c
 19052  01275A  5037               	movf	CANreceiveMessage@msg+1,w,c
 19053  01275C  22DA               	addwfc	fsr2h,f,c
 19054  01275E  CF5C FFDF          	movff	3932,indf2	;volatile
 19055                           
 19056                           ; BSR set to: 15
 19057                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 19058  012762  EE20 F00B          	lfsr	2,11
 19059  012766  5036               	movf	CANreceiveMessage@msg,w,c
 19060  012768  26D9               	addwf	fsr2l,f,c
 19061  01276A  5037               	movf	CANreceiveMessage@msg+1,w,c
 19062  01276C  22DA               	addwfc	fsr2h,f,c
 19063  01276E  CF5D FFDF          	movff	3933,indf2	;volatile
 19064                           
 19065                           ; BSR set to: 15
 19066                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 19067  012772  EE20 F00E          	lfsr	2,14
 19068  012776  5036               	movf	CANreceiveMessage@msg,w,c
 19069  012778  26D9               	addwf	fsr2l,f,c
 19070  01277A  5037               	movf	CANreceiveMessage@msg+1,w,c
 19071  01277C  22DA               	addwfc	fsr2h,f,c
 19072  01277E  010F               	movlb	15	; () banked
 19073  012780  AD55               	btfss	85,6,b	;volatile
 19074  012782  D002               	goto	i2u813_40
 19075  012784  0E01               	movlw	1
 19076  012786  D001               	goto	i2u813_46
 19077  012788                     i2u813_40:
 19078  012788  0E00               	movlw	0
 19079  01278A                     i2u813_46:
 19080  01278A  6EDF               	movwf	indf2,c
 19081                           
 19082                           ; BSR set to: 15
 19083                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 19084  01278C  EE20 F00D          	lfsr	2,13
 19085  012790  5036               	movf	CANreceiveMessage@msg,w,c
 19086  012792  26D9               	addwf	fsr2l,f,c
 19087  012794  5037               	movf	CANreceiveMessage@msg+1,w,c
 19088  012796  22DA               	addwfc	fsr2h,f,c
 19089  012798  010F               	movlb	15	; () banked
 19090  01279A  5155               	movf	85,w,b	;volatile
 19091  01279C  0B0F               	andlw	15
 19092  01279E  6EDF               	movwf	indf2,c
 19093                           
 19094                           ; BSR set to: 15
 19095                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 19096  0127A0  EE20 F00C          	lfsr	2,12
 19097  0127A4  5036               	movf	CANreceiveMessage@msg,w,c
 19098  0127A6  26D9               	addwf	fsr2l,f,c
 19099  0127A8  5037               	movf	CANreceiveMessage@msg+1,w,c
 19100  0127AA  22DA               	addwfc	fsr2h,f,c
 19101  0127AC  010F               	movlb	15	; () banked
 19102  0127AE  A752               	btfss	82,3,b	;volatile
 19103  0127B0  D002               	goto	i2u814_40
 19104  0127B2  0E01               	movlw	1
 19105  0127B4  D001               	goto	i2u814_46
 19106  0127B6                     i2u814_40:
 19107  0127B6  0E00               	movlw	0
 19108  0127B8                     i2u814_46:
 19109  0127B8  6EDF               	movwf	indf2,c
 19110                           
 19111                           ; BSR set to: 15
 19112                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 19113  0127BA  010F               	movlb	15	; () banked
 19114  0127BC  B752               	btfsc	82,3,b	;volatile
 19115  0127BE  D044               	goto	i2l6537
 19116                           
 19117                           ; BSR set to: 15
 19118                           ;inc\CANlib.h: 559: {
 19119                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 19120  0127C0  CF51 F038          	movff	3921,??_CANreceiveMessage	;volatile
 19121  0127C4  6A39               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19122  0127C6  6A3A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19123  0127C8  6A3B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19124  0127CA  0E03               	movlw	3
 19125  0127CC                     i2u816_45:
 19126  0127CC  90D8               	bcf	status,0,c
 19127  0127CE  3638               	rlcf	??_CANreceiveMessage,f,c
 19128  0127D0  3639               	rlcf	??_CANreceiveMessage+1,f,c
 19129  0127D2  363A               	rlcf	??_CANreceiveMessage+2,f,c
 19130  0127D4  363B               	rlcf	??_CANreceiveMessage+3,f,c
 19131  0127D6  2EE8               	decfsz	wreg,f,c
 19132  0127D8  D7F9               	goto	i2u816_45
 19133  0127DA  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19134  0127DE  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19135  0127E2  C038  FFDE         	movff	??_CANreceiveMessage,postinc2
 19136  0127E6  C039  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 19137  0127EA  C03A  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 19138  0127EE  C03B  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 19139                           
 19140                           ; BSR set to: 15
 19141                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 19142  0127F2  010F               	movlb	15	; () banked
 19143  0127F4  3952               	swapf	82,w,b	;volatile
 19144  0127F6  42E8               	rrncf	wreg,f,c
 19145  0127F8  0B07               	andlw	7
 19146  0127FA  0B07               	andlw	7
 19147  0127FC  6E41               	movwf	CANreceiveMessage@tamp,c
 19148                           
 19149                           ; BSR set to: 15
 19150                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 19151  0127FE  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19152  012802  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19153  012806  CFDE F038          	movff	postinc2,??_CANreceiveMessage
 19154  01280A  CFDE F039          	movff	postinc2,??_CANreceiveMessage+1
 19155  01280E  CFDE F03A          	movff	postinc2,??_CANreceiveMessage+2
 19156  012812  CFDE F03B          	movff	postinc2,??_CANreceiveMessage+3
 19157  012816  5041               	movf	CANreceiveMessage@tamp,w,c
 19158  012818  2438               	addwf	??_CANreceiveMessage,w,c
 19159  01281A  6E3C               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 19160  01281C  0E00               	movlw	0
 19161  01281E  2039               	addwfc	??_CANreceiveMessage+1,w,c
 19162  012820  6E3D               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 19163  012822  0E00               	movlw	0
 19164  012824  203A               	addwfc	??_CANreceiveMessage+2,w,c
 19165  012826  6E3E               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 19166  012828  0E00               	movlw	0
 19167  01282A  203B               	addwfc	??_CANreceiveMessage+3,w,c
 19168  01282C  6E3F               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 19169  01282E  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19170  012832  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19171  012836  C03C  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 19172  01283A  C03D  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 19173  01283E  C03E  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 19174  012842  C03F  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 19175                           
 19176                           ;inc\CANlib.h: 563: }
 19177  012846  D08D               	goto	i2l6563
 19178  012848                     i2l6537:
 19179                           
 19180                           ; BSR set to: 15
 19181                           ;inc\CANlib.h: 564: else
 19182                           ;inc\CANlib.h: 565: {
 19183                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 19184  012848  CF54 F038          	movff	3924,??_CANreceiveMessage	;volatile
 19185  01284C  6A39               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19186  01284E  6A3A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19187  012850  6A3B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19188  012852  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19189  012856  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19190  01285A  C038  FFDE         	movff	??_CANreceiveMessage,postinc2
 19191  01285E  C039  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 19192  012862  C03A  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 19193  012866  C03B  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 19194                           
 19195                           ; BSR set to: 15
 19196                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 19197  01286A  CF53 F038          	movff	3923,??_CANreceiveMessage	;volatile
 19198  01286E  6A39               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19199  012870  6A3A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19200  012872  6A3B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19201  012874  C03A  F03B         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 19202  012878  C039  F03A         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 19203  01287C  C038  F039         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 19204  012880  6A38               	clrf	??_CANreceiveMessage,c
 19205  012882  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19206  012886  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19207  01288A  5038               	movf	??_CANreceiveMessage,w,c
 19208  01288C  26DE               	addwf	postinc2,f,c
 19209  01288E  5039               	movf	??_CANreceiveMessage+1,w,c
 19210  012890  22DE               	addwfc	postinc2,f,c
 19211  012892  503A               	movf	??_CANreceiveMessage+2,w,c
 19212  012894  22DE               	addwfc	postinc2,f,c
 19213  012896  503B               	movf	??_CANreceiveMessage+3,w,c
 19214  012898  22DE               	addwfc	postinc2,f,c
 19215                           
 19216                           ; BSR set to: 15
 19217                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 19218  01289A  010F               	movlb	15	; () banked
 19219  01289C  A152               	btfss	82,0,b	;volatile
 19220  01289E  D00C               	goto	i2l6545
 19221                           
 19222                           ; BSR set to: 15
 19223                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 19224  0128A0  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19225  0128A4  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19226  0128A8  0E00               	movlw	0
 19227  0128AA  12DE               	iorwf	postinc2,f,c
 19228  0128AC  0E00               	movlw	0
 19229  0128AE  12DE               	iorwf	postinc2,f,c
 19230  0128B0  0E01               	movlw	1
 19231  0128B2  12DE               	iorwf	postinc2,f,c
 19232  0128B4  0E00               	movlw	0
 19233  0128B6  12DE               	iorwf	postinc2,f,c
 19234  0128B8                     i2l6545:
 19235                           
 19236                           ; BSR set to: 15
 19237                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 19238  0128B8  010F               	movlb	15	; () banked
 19239  0128BA  A352               	btfss	82,1,b	;volatile
 19240  0128BC  D00C               	goto	i2l6549
 19241                           
 19242                           ; BSR set to: 15
 19243                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 19244  0128BE  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19245  0128C2  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19246  0128C6  0E00               	movlw	0
 19247  0128C8  12DE               	iorwf	postinc2,f,c
 19248  0128CA  0E00               	movlw	0
 19249  0128CC  12DE               	iorwf	postinc2,f,c
 19250  0128CE  0E02               	movlw	2
 19251  0128D0  12DE               	iorwf	postinc2,f,c
 19252  0128D2  0E00               	movlw	0
 19253  0128D4  12DE               	iorwf	postinc2,f,c
 19254  0128D6                     i2l6549:
 19255                           
 19256                           ; BSR set to: 15
 19257                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 19258  0128D6  010F               	movlb	15	; () banked
 19259  0128D8  AB52               	btfss	82,5,b	;volatile
 19260  0128DA  D00C               	goto	i2l6553
 19261                           
 19262                           ; BSR set to: 15
 19263                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 19264  0128DC  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19265  0128E0  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19266  0128E4  0E00               	movlw	0
 19267  0128E6  12DE               	iorwf	postinc2,f,c
 19268  0128E8  0E00               	movlw	0
 19269  0128EA  12DE               	iorwf	postinc2,f,c
 19270  0128EC  0E04               	movlw	4
 19271  0128EE  12DE               	iorwf	postinc2,f,c
 19272  0128F0  0E00               	movlw	0
 19273  0128F2  12DE               	iorwf	postinc2,f,c
 19274  0128F4                     i2l6553:
 19275                           
 19276                           ; BSR set to: 15
 19277                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 19278  0128F4  010F               	movlb	15	; () banked
 19279  0128F6  AD52               	btfss	82,6,b	;volatile
 19280  0128F8  D00C               	goto	i2l6557
 19281                           
 19282                           ; BSR set to: 15
 19283                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 19284  0128FA  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19285  0128FE  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19286  012902  0E00               	movlw	0
 19287  012904  12DE               	iorwf	postinc2,f,c
 19288  012906  0E00               	movlw	0
 19289  012908  12DE               	iorwf	postinc2,f,c
 19290  01290A  0E08               	movlw	8
 19291  01290C  12DE               	iorwf	postinc2,f,c
 19292  01290E  0E00               	movlw	0
 19293  012910  12DE               	iorwf	postinc2,f,c
 19294  012912                     i2l6557:
 19295                           
 19296                           ; BSR set to: 15
 19297                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 19298  012912  010F               	movlb	15	; () banked
 19299  012914  AF52               	btfss	82,7,b	;volatile
 19300  012916  D00C               	goto	i2l6561
 19301                           
 19302                           ; BSR set to: 15
 19303                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 19304  012918  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19305  01291C  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19306  012920  0E00               	movlw	0
 19307  012922  12DE               	iorwf	postinc2,f,c
 19308  012924  0E00               	movlw	0
 19309  012926  12DE               	iorwf	postinc2,f,c
 19310  012928  0E10               	movlw	16
 19311  01292A  12DE               	iorwf	postinc2,f,c
 19312  01292C  0E00               	movlw	0
 19313  01292E  12DE               	iorwf	postinc2,f,c
 19314  012930                     i2l6561:
 19315                           
 19316                           ; BSR set to: 15
 19317                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 19318  012930  CF51 F038          	movff	3921,??_CANreceiveMessage	;volatile
 19319  012934  6A39               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19320  012936  6A3A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19321  012938  6A3B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19322  01293A  0E15               	movlw	21
 19323  01293C                     i2u822_45:
 19324  01293C  90D8               	bcf	status,0,c
 19325  01293E  3638               	rlcf	??_CANreceiveMessage,f,c
 19326  012940  3639               	rlcf	??_CANreceiveMessage+1,f,c
 19327  012942  363A               	rlcf	??_CANreceiveMessage+2,f,c
 19328  012944  363B               	rlcf	??_CANreceiveMessage+3,f,c
 19329  012946  2EE8               	decfsz	wreg,f,c
 19330  012948  D7F9               	goto	i2u822_45
 19331  01294A  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19332  01294E  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19333  012952  5038               	movf	??_CANreceiveMessage,w,c
 19334  012954  12DE               	iorwf	postinc2,f,c
 19335  012956  5039               	movf	??_CANreceiveMessage+1,w,c
 19336  012958  12DE               	iorwf	postinc2,f,c
 19337  01295A  503A               	movf	??_CANreceiveMessage+2,w,c
 19338  01295C  12DE               	iorwf	postinc2,f,c
 19339  01295E  503B               	movf	??_CANreceiveMessage+3,w,c
 19340  012960  12DE               	iorwf	postinc2,f,c
 19341  012962                     i2l6563:
 19342                           
 19343                           ; BSR set to: 15
 19344                           ;inc\CANlib.h: 581: }
 19345                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 19346  012962  010F               	movlb	15	; () banked
 19347  012964  9F50               	bcf	80,7,b	;volatile
 19348                           
 19349                           ; BSR set to: 15
 19350                           ;inc\CANlib.h: 584: return (error);
 19351                           ;	Return value of _CANreceiveMessage is never used
 19352  012966  0012               	return	
 19353  012968                     i2l418:
 19354                           
 19355                           ; BSR set to: 15
 19356                           ;inc\CANlib.h: 585: }
 19357                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 19358  012968  AE60               	btfss	3936,7,c	;volatile
 19359  01296A  0012               	return	
 19360                           
 19361                           ; BSR set to: 15
 19362                           ;inc\CANlib.h: 588: {
 19363                           ;inc\CANlib.h: 589: msg->identifier = 0;
 19364  01296C  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19365  012970  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19366  012974  6ADE               	clrf	postinc2,c
 19367  012976  6ADE               	clrf	postinc2,c
 19368  012978  6ADE               	clrf	postinc2,c
 19369  01297A  6ADD               	clrf	postdec2,c
 19370                           
 19371                           ; BSR set to: 15
 19372                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 19373  01297C  EE20 F004          	lfsr	2,4
 19374  012980  5036               	movf	CANreceiveMessage@msg,w,c
 19375  012982  26D9               	addwf	fsr2l,f,c
 19376  012984  5037               	movf	CANreceiveMessage@msg+1,w,c
 19377  012986  22DA               	addwfc	fsr2h,f,c
 19378  012988  CF66 FFDF          	movff	3942,indf2	;volatile
 19379                           
 19380                           ; BSR set to: 15
 19381                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 19382  01298C  EE20 F005          	lfsr	2,5
 19383  012990  5036               	movf	CANreceiveMessage@msg,w,c
 19384  012992  26D9               	addwf	fsr2l,f,c
 19385  012994  5037               	movf	CANreceiveMessage@msg+1,w,c
 19386  012996  22DA               	addwfc	fsr2h,f,c
 19387  012998  CF67 FFDF          	movff	3943,indf2	;volatile
 19388                           
 19389                           ; BSR set to: 15
 19390                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 19391  01299C  EE20 F006          	lfsr	2,6
 19392  0129A0  5036               	movf	CANreceiveMessage@msg,w,c
 19393  0129A2  26D9               	addwf	fsr2l,f,c
 19394  0129A4  5037               	movf	CANreceiveMessage@msg+1,w,c
 19395  0129A6  22DA               	addwfc	fsr2h,f,c
 19396  0129A8  CF68 FFDF          	movff	3944,indf2	;volatile
 19397                           
 19398                           ; BSR set to: 15
 19399                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 19400  0129AC  EE20 F007          	lfsr	2,7
 19401  0129B0  5036               	movf	CANreceiveMessage@msg,w,c
 19402  0129B2  26D9               	addwf	fsr2l,f,c
 19403  0129B4  5037               	movf	CANreceiveMessage@msg+1,w,c
 19404  0129B6  22DA               	addwfc	fsr2h,f,c
 19405  0129B8  CF69 FFDF          	movff	3945,indf2	;volatile
 19406                           
 19407                           ; BSR set to: 15
 19408                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 19409  0129BC  EE20 F008          	lfsr	2,8
 19410  0129C0  5036               	movf	CANreceiveMessage@msg,w,c
 19411  0129C2  26D9               	addwf	fsr2l,f,c
 19412  0129C4  5037               	movf	CANreceiveMessage@msg+1,w,c
 19413  0129C6  22DA               	addwfc	fsr2h,f,c
 19414  0129C8  CF6A FFDF          	movff	3946,indf2	;volatile
 19415                           
 19416                           ; BSR set to: 15
 19417                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 19418  0129CC  EE20 F009          	lfsr	2,9
 19419  0129D0  5036               	movf	CANreceiveMessage@msg,w,c
 19420  0129D2  26D9               	addwf	fsr2l,f,c
 19421  0129D4  5037               	movf	CANreceiveMessage@msg+1,w,c
 19422  0129D6  22DA               	addwfc	fsr2h,f,c
 19423  0129D8  CF6B FFDF          	movff	3947,indf2	;volatile
 19424                           
 19425                           ; BSR set to: 15
 19426                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 19427  0129DC  EE20 F00A          	lfsr	2,10
 19428  0129E0  5036               	movf	CANreceiveMessage@msg,w,c
 19429  0129E2  26D9               	addwf	fsr2l,f,c
 19430  0129E4  5037               	movf	CANreceiveMessage@msg+1,w,c
 19431  0129E6  22DA               	addwfc	fsr2h,f,c
 19432  0129E8  CF6C FFDF          	movff	3948,indf2	;volatile
 19433                           
 19434                           ; BSR set to: 15
 19435                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 19436  0129EC  EE20 F00B          	lfsr	2,11
 19437  0129F0  5036               	movf	CANreceiveMessage@msg,w,c
 19438  0129F2  26D9               	addwf	fsr2l,f,c
 19439  0129F4  5037               	movf	CANreceiveMessage@msg+1,w,c
 19440  0129F6  22DA               	addwfc	fsr2h,f,c
 19441  0129F8  CF6D FFDF          	movff	3949,indf2	;volatile
 19442                           
 19443                           ; BSR set to: 15
 19444                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 19445  0129FC  EE20 F00E          	lfsr	2,14
 19446  012A00  5036               	movf	CANreceiveMessage@msg,w,c
 19447  012A02  26D9               	addwf	fsr2l,f,c
 19448  012A04  5037               	movf	CANreceiveMessage@msg+1,w,c
 19449  012A06  22DA               	addwfc	fsr2h,f,c
 19450  012A08  AC65               	btfss	3941,6,c	;volatile
 19451  012A0A  D002               	goto	i2u824_40
 19452  012A0C  0E01               	movlw	1
 19453  012A0E  D001               	goto	i2u824_46
 19454  012A10                     i2u824_40:
 19455  012A10  0E00               	movlw	0
 19456  012A12                     i2u824_46:
 19457  012A12  6EDF               	movwf	indf2,c
 19458                           
 19459                           ; BSR set to: 15
 19460                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 19461  012A14  EE20 F00D          	lfsr	2,13
 19462  012A18  5036               	movf	CANreceiveMessage@msg,w,c
 19463  012A1A  26D9               	addwf	fsr2l,f,c
 19464  012A1C  5037               	movf	CANreceiveMessage@msg+1,w,c
 19465  012A1E  22DA               	addwfc	fsr2h,f,c
 19466  012A20  5065               	movf	3941,w,c	;volatile
 19467  012A22  0B0F               	andlw	15
 19468  012A24  6EDF               	movwf	indf2,c
 19469                           
 19470                           ; BSR set to: 15
 19471                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 19472  012A26  EE20 F00C          	lfsr	2,12
 19473  012A2A  5036               	movf	CANreceiveMessage@msg,w,c
 19474  012A2C  26D9               	addwf	fsr2l,f,c
 19475  012A2E  5037               	movf	CANreceiveMessage@msg+1,w,c
 19476  012A30  22DA               	addwfc	fsr2h,f,c
 19477  012A32  A662               	btfss	3938,3,c	;volatile
 19478  012A34  D002               	goto	i2u825_40
 19479  012A36  0E01               	movlw	1
 19480  012A38  D001               	goto	i2u825_46
 19481  012A3A                     i2u825_40:
 19482  012A3A  0E00               	movlw	0
 19483  012A3C                     i2u825_46:
 19484  012A3C  6EDF               	movwf	indf2,c
 19485                           
 19486                           ; BSR set to: 15
 19487                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 19488  012A3E  B662               	btfsc	3938,3,c	;volatile
 19489  012A40  D043               	goto	i2l6599
 19490                           
 19491                           ; BSR set to: 15
 19492                           ;inc\CANlib.h: 606: {
 19493                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 19494  012A42  CF61 F038          	movff	3937,??_CANreceiveMessage	;volatile
 19495  012A46  6A39               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19496  012A48  6A3A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19497  012A4A  6A3B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19498  012A4C  0E03               	movlw	3
 19499  012A4E                     i2u827_45:
 19500  012A4E  90D8               	bcf	status,0,c
 19501  012A50  3638               	rlcf	??_CANreceiveMessage,f,c
 19502  012A52  3639               	rlcf	??_CANreceiveMessage+1,f,c
 19503  012A54  363A               	rlcf	??_CANreceiveMessage+2,f,c
 19504  012A56  363B               	rlcf	??_CANreceiveMessage+3,f,c
 19505  012A58  2EE8               	decfsz	wreg,f,c
 19506  012A5A  D7F9               	goto	i2u827_45
 19507  012A5C  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19508  012A60  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19509  012A64  C038  FFDE         	movff	??_CANreceiveMessage,postinc2
 19510  012A68  C039  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 19511  012A6C  C03A  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 19512  012A70  C03B  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 19513                           
 19514                           ; BSR set to: 15
 19515                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 19516  012A74  3862               	swapf	3938,w,c	;volatile
 19517  012A76  42E8               	rrncf	wreg,f,c
 19518  012A78  0B07               	andlw	7
 19519  012A7A  0B07               	andlw	7
 19520  012A7C  6E41               	movwf	CANreceiveMessage@tamp,c
 19521                           
 19522                           ; BSR set to: 15
 19523                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 19524  012A7E  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19525  012A82  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19526  012A86  CFDE F038          	movff	postinc2,??_CANreceiveMessage
 19527  012A8A  CFDE F039          	movff	postinc2,??_CANreceiveMessage+1
 19528  012A8E  CFDE F03A          	movff	postinc2,??_CANreceiveMessage+2
 19529  012A92  CFDE F03B          	movff	postinc2,??_CANreceiveMessage+3
 19530  012A96  5041               	movf	CANreceiveMessage@tamp,w,c
 19531  012A98  2438               	addwf	??_CANreceiveMessage,w,c
 19532  012A9A  6E3C               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 19533  012A9C  0E00               	movlw	0
 19534  012A9E  2039               	addwfc	??_CANreceiveMessage+1,w,c
 19535  012AA0  6E3D               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 19536  012AA2  0E00               	movlw	0
 19537  012AA4  203A               	addwfc	??_CANreceiveMessage+2,w,c
 19538  012AA6  6E3E               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 19539  012AA8  0E00               	movlw	0
 19540  012AAA  203B               	addwfc	??_CANreceiveMessage+3,w,c
 19541  012AAC  6E3F               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 19542  012AAE  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19543  012AB2  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19544  012AB6  C03C  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 19545  012ABA  C03D  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 19546  012ABE  C03E  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 19547  012AC2  C03F  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 19548                           
 19549                           ;inc\CANlib.h: 610: }
 19550  012AC6  D088               	goto	i2l6625
 19551  012AC8                     i2l6599:
 19552                           
 19553                           ; BSR set to: 15
 19554                           ;inc\CANlib.h: 611: else
 19555                           ;inc\CANlib.h: 612: {
 19556                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 19557  012AC8  CF64 F038          	movff	3940,??_CANreceiveMessage	;volatile
 19558  012ACC  6A39               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19559  012ACE  6A3A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19560  012AD0  6A3B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19561  012AD2  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19562  012AD6  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19563  012ADA  C038  FFDE         	movff	??_CANreceiveMessage,postinc2
 19564  012ADE  C039  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 19565  012AE2  C03A  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 19566  012AE6  C03B  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 19567                           
 19568                           ; BSR set to: 15
 19569                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 19570  012AEA  CF63 F038          	movff	3939,??_CANreceiveMessage	;volatile
 19571  012AEE  6A39               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19572  012AF0  6A3A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19573  012AF2  6A3B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19574  012AF4  C03A  F03B         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 19575  012AF8  C039  F03A         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 19576  012AFC  C038  F039         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 19577  012B00  6A38               	clrf	??_CANreceiveMessage,c
 19578  012B02  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19579  012B06  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19580  012B0A  5038               	movf	??_CANreceiveMessage,w,c
 19581  012B0C  26DE               	addwf	postinc2,f,c
 19582  012B0E  5039               	movf	??_CANreceiveMessage+1,w,c
 19583  012B10  22DE               	addwfc	postinc2,f,c
 19584  012B12  503A               	movf	??_CANreceiveMessage+2,w,c
 19585  012B14  22DE               	addwfc	postinc2,f,c
 19586  012B16  503B               	movf	??_CANreceiveMessage+3,w,c
 19587  012B18  22DE               	addwfc	postinc2,f,c
 19588                           
 19589                           ; BSR set to: 15
 19590                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 19591  012B1A  A062               	btfss	3938,0,c	;volatile
 19592  012B1C  D00C               	goto	i2l6607
 19593                           
 19594                           ; BSR set to: 15
 19595                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 19596  012B1E  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19597  012B22  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19598  012B26  0E00               	movlw	0
 19599  012B28  12DE               	iorwf	postinc2,f,c
 19600  012B2A  0E00               	movlw	0
 19601  012B2C  12DE               	iorwf	postinc2,f,c
 19602  012B2E  0E01               	movlw	1
 19603  012B30  12DE               	iorwf	postinc2,f,c
 19604  012B32  0E00               	movlw	0
 19605  012B34  12DE               	iorwf	postinc2,f,c
 19606  012B36                     i2l6607:
 19607                           
 19608                           ; BSR set to: 15
 19609                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 19610  012B36  A262               	btfss	3938,1,c	;volatile
 19611  012B38  D00C               	goto	i2l6611
 19612                           
 19613                           ; BSR set to: 15
 19614                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 19615  012B3A  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19616  012B3E  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19617  012B42  0E00               	movlw	0
 19618  012B44  12DE               	iorwf	postinc2,f,c
 19619  012B46  0E00               	movlw	0
 19620  012B48  12DE               	iorwf	postinc2,f,c
 19621  012B4A  0E02               	movlw	2
 19622  012B4C  12DE               	iorwf	postinc2,f,c
 19623  012B4E  0E00               	movlw	0
 19624  012B50  12DE               	iorwf	postinc2,f,c
 19625  012B52                     i2l6611:
 19626                           
 19627                           ; BSR set to: 15
 19628                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 19629  012B52  AA62               	btfss	3938,5,c	;volatile
 19630  012B54  D00C               	goto	i2l6615
 19631                           
 19632                           ; BSR set to: 15
 19633                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 19634  012B56  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19635  012B5A  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19636  012B5E  0E00               	movlw	0
 19637  012B60  12DE               	iorwf	postinc2,f,c
 19638  012B62  0E00               	movlw	0
 19639  012B64  12DE               	iorwf	postinc2,f,c
 19640  012B66  0E04               	movlw	4
 19641  012B68  12DE               	iorwf	postinc2,f,c
 19642  012B6A  0E00               	movlw	0
 19643  012B6C  12DE               	iorwf	postinc2,f,c
 19644  012B6E                     i2l6615:
 19645                           
 19646                           ; BSR set to: 15
 19647                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 19648  012B6E  AC62               	btfss	3938,6,c	;volatile
 19649  012B70  D00C               	goto	i2l6619
 19650                           
 19651                           ; BSR set to: 15
 19652                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 19653  012B72  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19654  012B76  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19655  012B7A  0E00               	movlw	0
 19656  012B7C  12DE               	iorwf	postinc2,f,c
 19657  012B7E  0E00               	movlw	0
 19658  012B80  12DE               	iorwf	postinc2,f,c
 19659  012B82  0E08               	movlw	8
 19660  012B84  12DE               	iorwf	postinc2,f,c
 19661  012B86  0E00               	movlw	0
 19662  012B88  12DE               	iorwf	postinc2,f,c
 19663  012B8A                     i2l6619:
 19664                           
 19665                           ; BSR set to: 15
 19666                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 19667  012B8A  AE62               	btfss	3938,7,c	;volatile
 19668  012B8C  D00C               	goto	i2l6623
 19669                           
 19670                           ; BSR set to: 15
 19671                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 19672  012B8E  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19673  012B92  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19674  012B96  0E00               	movlw	0
 19675  012B98  12DE               	iorwf	postinc2,f,c
 19676  012B9A  0E00               	movlw	0
 19677  012B9C  12DE               	iorwf	postinc2,f,c
 19678  012B9E  0E10               	movlw	16
 19679  012BA0  12DE               	iorwf	postinc2,f,c
 19680  012BA2  0E00               	movlw	0
 19681  012BA4  12DE               	iorwf	postinc2,f,c
 19682  012BA6                     i2l6623:
 19683                           
 19684                           ; BSR set to: 15
 19685                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 19686  012BA6  CF61 F038          	movff	3937,??_CANreceiveMessage	;volatile
 19687  012BAA  6A39               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19688  012BAC  6A3A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19689  012BAE  6A3B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19690  012BB0  0E15               	movlw	21
 19691  012BB2                     i2u833_45:
 19692  012BB2  90D8               	bcf	status,0,c
 19693  012BB4  3638               	rlcf	??_CANreceiveMessage,f,c
 19694  012BB6  3639               	rlcf	??_CANreceiveMessage+1,f,c
 19695  012BB8  363A               	rlcf	??_CANreceiveMessage+2,f,c
 19696  012BBA  363B               	rlcf	??_CANreceiveMessage+3,f,c
 19697  012BBC  2EE8               	decfsz	wreg,f,c
 19698  012BBE  D7F9               	goto	i2u833_45
 19699  012BC0  C036  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19700  012BC4  C037  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19701  012BC8  5038               	movf	??_CANreceiveMessage,w,c
 19702  012BCA  12DE               	iorwf	postinc2,f,c
 19703  012BCC  5039               	movf	??_CANreceiveMessage+1,w,c
 19704  012BCE  12DE               	iorwf	postinc2,f,c
 19705  012BD0  503A               	movf	??_CANreceiveMessage+2,w,c
 19706  012BD2  12DE               	iorwf	postinc2,f,c
 19707  012BD4  503B               	movf	??_CANreceiveMessage+3,w,c
 19708  012BD6  12DE               	iorwf	postinc2,f,c
 19709  012BD8                     i2l6625:
 19710                           
 19711                           ; BSR set to: 15
 19712                           ;inc\CANlib.h: 629: }
 19713                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 19714  012BD8  9E60               	bcf	3936,7,c	;volatile
 19715                           
 19716                           ; BSR set to: 15
 19717                           ;inc\CANlib.h: 632: return (error);
 19718                           ;	Return value of _CANreceiveMessage is never used
 19719  012BDA  0012               	return	
 19720  012BDC                     __end_of_CANreceiveMessage:
 19721                           	opt stack 0
 19722                           pclatu	equ	0xFFB
 19723                           pclath	equ	0xFFA
 19724                           tblptru	equ	0xFF8
 19725                           tblptrh	equ	0xFF7
 19726                           tblptrl	equ	0xFF6
 19727                           tablat	equ	0xFF5
 19728                           prodh	equ	0xFF4
 19729                           prodl	equ	0xFF3
 19730                           intcon	equ	0xFF2
 19731                           postinc0	equ	0xFEE
 19732                           fsr0h	equ	0xFEA
 19733                           fsr0l	equ	0xFE9
 19734                           wreg	equ	0xFE8
 19735                           indf1	equ	0xFE7
 19736                           plusw1	equ	0xFE3
 19737                           fsr1h	equ	0xFE2
 19738                           fsr1l	equ	0xFE1
 19739                           bsr	equ	0xFE0
 19740                           indf2	equ	0xFDF
 19741                           postinc2	equ	0xFDE
 19742                           postdec2	equ	0xFDD
 19743                           plusw2	equ	0xFDB
 19744                           fsr2h	equ	0xFDA
 19745                           fsr2l	equ	0xFD9
 19746                           status	equ	0xFD8
 19747                           
 19748 ;; *************** function _CANisRxReady *****************
 19749 ;; Defined at:
 19750 ;;		line 1163 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 19751 ;; Parameters:    Size  Location     Type
 19752 ;;		None
 19753 ;; Auto vars:     Size  Location     Type
 19754 ;;		None
 19755 ;; Return value:  Size  Location     Type
 19756 ;;                  1    wreg      unsigned char 
 19757 ;; Registers used:
 19758 ;;		wreg, status,2
 19759 ;; Tracked objects:
 19760 ;;		On entry : 0/0
 19761 ;;		On exit  : 0/0
 19762 ;;		Unchanged: 0/0
 19763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19765 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19767 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19768 ;;Total ram usage:        1 bytes
 19769 ;; Hardware stack levels used:    1
 19770 ;; This function calls:
 19771 ;;		Nothing
 19772 ;; This function is called by:
 19773 ;;		_ISR_alta
 19774 ;; This function uses a non-reentrant model
 19775 ;;
 19776                           
 19777                           	psect	text53
 19778  015E98                     __ptext53:
 19779                           	opt stack 0
 19780  015E98                     _CANisRxReady:
 19781                           	opt stack 20
 19782                           
 19783                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
 19784                           
 19785                           ; BSR set to: 15
 19786                           ;incstack = 0
 19787  015E98  0E01               	movlw	1
 19788  015E9A  6E36               	movwf	_CANisRxReady$3229,c
 19789  015E9C  BE60               	btfsc	3936,7,c	;volatile
 19790  015E9E  D005               	goto	i2l569
 19791  015EA0  010F               	movlb	15	; () banked
 19792  015EA2  BF50               	btfsc	80,7,b	;volatile
 19793  015EA4  D002               	goto	i2l569
 19794                           
 19795                           ; BSR set to: 15
 19796  015EA6  0E00               	movlw	0
 19797  015EA8  6E36               	movwf	_CANisRxReady$3229,c
 19798  015EAA                     i2l569:
 19799  015EAA  5036               	movf	_CANisRxReady$3229,w,c
 19800  015EAC  0012               	return	
 19801  015EAE                     __end_of_CANisRxReady:
 19802                           	opt stack 0
 19803                           pclatu	equ	0xFFB
 19804                           pclath	equ	0xFFA
 19805                           tblptru	equ	0xFF8
 19806                           tblptrh	equ	0xFF7
 19807                           tblptrl	equ	0xFF6
 19808                           tablat	equ	0xFF5
 19809                           prodh	equ	0xFF4
 19810                           prodl	equ	0xFF3
 19811                           intcon	equ	0xFF2
 19812                           postinc0	equ	0xFEE
 19813                           fsr0h	equ	0xFEA
 19814                           fsr0l	equ	0xFE9
 19815                           wreg	equ	0xFE8
 19816                           indf1	equ	0xFE7
 19817                           plusw1	equ	0xFE3
 19818                           fsr1h	equ	0xFE2
 19819                           fsr1l	equ	0xFE1
 19820                           bsr	equ	0xFE0
 19821                           indf2	equ	0xFDF
 19822                           postinc2	equ	0xFDE
 19823                           postdec2	equ	0xFDD
 19824                           plusw2	equ	0xFDB
 19825                           fsr2h	equ	0xFDA
 19826                           fsr2l	equ	0xFD9
 19827                           status	equ	0xFD8
 19828                           pclatu	equ	0xFFB
 19829                           pclath	equ	0xFFA
 19830                           tblptru	equ	0xFF8
 19831                           tblptrh	equ	0xFF7
 19832                           tblptrl	equ	0xFF6
 19833                           tablat	equ	0xFF5
 19834                           prodh	equ	0xFF4
 19835                           prodl	equ	0xFF3
 19836                           intcon	equ	0xFF2
 19837                           postinc0	equ	0xFEE
 19838                           fsr0h	equ	0xFEA
 19839                           fsr0l	equ	0xFE9
 19840                           wreg	equ	0xFE8
 19841                           indf1	equ	0xFE7
 19842                           plusw1	equ	0xFE3
 19843                           fsr1h	equ	0xFE2
 19844                           fsr1l	equ	0xFE1
 19845                           bsr	equ	0xFE0
 19846                           indf2	equ	0xFDF
 19847                           postinc2	equ	0xFDE
 19848                           postdec2	equ	0xFDD
 19849                           plusw2	equ	0xFDB
 19850                           fsr2h	equ	0xFDA
 19851                           fsr2l	equ	0xFD9
 19852                           status	equ	0xFD8
 19853                           
 19854                           	psect	rparam
 19855  0000                     pclatu	equ	0xFFB
 19856                           pclath	equ	0xFFA
 19857                           tblptru	equ	0xFF8
 19858                           tblptrh	equ	0xFF7
 19859                           tblptrl	equ	0xFF6
 19860                           tablat	equ	0xFF5
 19861                           prodh	equ	0xFF4
 19862                           prodl	equ	0xFF3
 19863                           intcon	equ	0xFF2
 19864                           postinc0	equ	0xFEE
 19865                           fsr0h	equ	0xFEA
 19866                           fsr0l	equ	0xFE9
 19867                           wreg	equ	0xFE8
 19868                           indf1	equ	0xFE7
 19869                           plusw1	equ	0xFE3
 19870                           fsr1h	equ	0xFE2
 19871                           fsr1l	equ	0xFE1
 19872                           bsr	equ	0xFE0
 19873                           indf2	equ	0xFDF
 19874                           postinc2	equ	0xFDE
 19875                           postdec2	equ	0xFDD
 19876                           plusw2	equ	0xFDB
 19877                           fsr2h	equ	0xFDA
 19878                           fsr2l	equ	0xFD9
 19879                           status	equ	0xFD8
 19880                           
 19881                           	psect	temp
 19882  000048                     btemp:
 19883                           	opt stack 0
 19884  000048                     	ds	1
 19885  0000                     int$flags	set	btemp
 19886                           pclatu	equ	0xFFB
 19887                           pclath	equ	0xFFA
 19888                           tblptru	equ	0xFF8
 19889                           tblptrh	equ	0xFF7
 19890                           tblptrl	equ	0xFF6
 19891                           tablat	equ	0xFF5
 19892                           prodh	equ	0xFF4
 19893                           prodl	equ	0xFF3
 19894                           intcon	equ	0xFF2
 19895                           postinc0	equ	0xFEE
 19896                           fsr0h	equ	0xFEA
 19897                           fsr0l	equ	0xFE9
 19898                           wreg	equ	0xFE8
 19899                           indf1	equ	0xFE7
 19900                           plusw1	equ	0xFE3
 19901                           fsr1h	equ	0xFE2
 19902                           fsr1l	equ	0xFE1
 19903                           bsr	equ	0xFE0
 19904                           indf2	equ	0xFDF
 19905                           postinc2	equ	0xFDE
 19906                           postdec2	equ	0xFDD
 19907                           plusw2	equ	0xFDB
 19908                           fsr2h	equ	0xFDA
 19909                           fsr2l	equ	0xFD9
 19910                           status	equ	0xFD8


Data Sizes:
    Strings     111
    Constant    144
    Data        1
    BSS         96
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      71
    BANK0           160    106     140
    BANK1           256     33      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_9(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_12(CODE[8]), STR_11(CODE[21]), STR_10(CODE[5]), STR_8(CODE[2]), 
		 -> STR_7(CODE[5]), STR_6(CODE[4]), STR_5(CODE[12]), STR_4(CODE[21]), 
		 -> STR_3(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 1
		 -> data_speed(BANK0[1]), data_brake(BANK0[1]), data_steering(BANK0[1]), data(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->i2_CANsendMessage

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _board_initialization->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _LCD_Handler->_sprintf
    _sprintf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___awdiv->___awmod
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->_fround
    ___flneg->___flmul
    ___fldiv->___xxtofl
    _LCD_write_message->_LCD_write_char
    _LCD_write_integer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_write_string->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul
    _CAN_Send->_CANsendMessage

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_alta in BANK3

    None.

Critical Paths under _ISR_bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_alta in BANK4

    None.

Critical Paths under _ISR_bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_alta in BANK5

    None.

Critical Paths under _ISR_bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_alta in BANK6

    None.

Critical Paths under _ISR_bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_alta in BANK7

    None.

Critical Paths under _ISR_bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_alta in BANK8

    None.

Critical Paths under _ISR_bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_alta in BANK9

    None.

Critical Paths under _ISR_bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_alta in BANK10

    None.

Critical Paths under _ISR_bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_alta in BANK11

    None.

Critical Paths under _ISR_bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_alta in BANK12

    None.

Critical Paths under _ISR_bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  255947
                                             25 BANK1      8     8      0
                           _CAN_Send
                    _CAN_interpreter
                   _Joystick_Polling
                        _LCD_Handler
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                 _PWR_Button_Polling
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   64645
                      _CANInitialize
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             28 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             14 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             14 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWR_Button_Polling                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0  127873
                       _CANisTxReady
                     _CANsendMessage
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_integer
                  _LCD_write_message
                   _LCD_write_string
                            ___fldiv
                           ___xxtofl
                           _delay_ms
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   41624
                                             96 BANK0     10     2      8
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    9426
                                             53 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             14 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    9147
                                             53 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    4925
                                             28 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             14 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             20 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                             14 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                             14 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     861
                                             14 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                             14 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                             14 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     799
                                             86 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3851
                                             86 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             20    12      8    3518
                                             66 BANK0     20    12      8
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     219
                                             53 BANK0      4     0      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     728
                                             14 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1305
                                             28 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_write_message                                    2     0      2   10443
                                             31 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_integer                                   16    12      4   12283
                                             38 BANK0     16    12      4
                   _LCD_write_string
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    1554
                                             30 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1199
                                             21 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     287
                                             14 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     418
                                             14 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9750
                                             31 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (3) _LCD_write_char                                       5     5      0    9531
                                             26 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   28720
                                             28 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    9150
                                             26 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    9011
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    9042
                                             26 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (4) _LCD_send_command                                     4     1      3    9011
                                             22 BANK0      4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (5) _LCD_enable_pulse                                     0     0      0    1495
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1495
                                             20 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             14 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     2     2      0      68
                                             14 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _CAN_interpreter                                      4     4      0       0
                                             14 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _CAN_Send                                             0     0      0    3339
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    3315
                                             14 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR_alta                                           15    15      0    3558
                                             33 COMRAM     1     1      0
                                              0 BANK0     14    14      0
                       _CANisRxReady
                  _CANreceiveMessage
                     i2_CANisTxReady
                   i2_CANsendMessage
 ---------------------------------------------------------------------------------
 (11) i2_CANsendMessage                                   16     8      8    2243
                                             17 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (11) i2_CANisTxReady                                      1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _CANreceiveMessage                                  12    10      2    1137
                                             17 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (11) _CANisRxReady                                        1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_Send
     _CANisTxReady
     _CANsendMessage
   _CAN_interpreter
   _Joystick_Polling
   _LCD_Handler
     _CANisTxReady
     _CANsendMessage
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_integer
       _LCD_write_string
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _delay_ms
       ___wmul
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_initialize
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_cursor
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
     _delay_ms
       ___wmul
     _delay_set_quartz
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _PWR_Button_Polling
   ___fladd
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___xxtofl (ARG)
   ___flneg
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fltol
     ___fladd (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___xxtofl
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _delay_ms
       ___wmul
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   i2_CANisTxReady
   i2_CANsendMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     21      3C       7       23.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6A      8C       5       87.5%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     22      47       1       75.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10F      20        0.0%
DATA                 0      0     10F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Mar 30 17:57:38 2016

                     ___fldiv@aexp 0094                       ___fldiv@bexp 0093  
        __size_of_delay_set_quartz 000A               __end_of_CANSetFilter 0B06  
                     ?_LCD_Handler 0025                       ___fldiv@sign 0088  
                     ___awdiv@sign 0079                                 _id 0012  
                               bsr 000FE0                ___wmul@multiplicand 0070  
                      __CFG_BORV$3 000000                       __CFG_CP0$OFF 000000  
                     __CFG_CP1$OFF 000000                       __CFG_CP2$OFF 000000  
                     __CFG_CP3$OFF 000000                        __CFG_OSC$HS 000000  
                     __CFG_CP4$OFF 000000                       __CFG_CP5$OFF 000000  
                              l401 18B8                                l410 1A72  
                              l402 18BC                                l411 1A76  
                              l403 19B4                                l412 1A82  
                              l404 1944                                l500 075A  
                              l405 194E                                l501 0766  
                              l406 1958                                l510 0872  
                              l407 1962                                l511 0876  
                              l520 0982                                l512 0882  
                              l504 0842                                l440 3F2A  
                              l521 098E                                l505 0846  
                              l441 3F2E                                l530 0A9A  
                              l522 0992                                l506 0852  
                              l442 3F3A                                l371 161E  
                              l531 0A9E                                l523 099E  
                              l515 095E                                l507 0856  
                              l451 4042                                l443 3F3E  
                              l372 13B0                                l532 0AAA  
                              l516 0962                                l508 0862  
                              l452 4046                                l444 3F4A  
                              l381 156A                                l373 13B4  
                              l533 0AAE                                l517 096E  
                              l509 0866                                l453 4052  
                              l445 3F4E                                l390 16C0  
                              l382 156E                                l374 14AC  
                              l534 0ABA                                l526 0A7A  
                              l518 0972                                l454 4056  
                              l446 3F5A                                l366 464E  
                              l391 16CA                                l383 157A  
                              l375 143C                                l527 0A7E  
                              l519 097E                                l471 04F0  
                              l455 4062                                l447 3F5E  
                              l367 4658                                l392 16D4  
                              l376 1446                                l528 0A8A  
                              l472 04F4                                l456 4066  
                              l448 3F6A                                l393 16DE  
                              l377 1450                                l529 0A8E  
                              l473 0500                                l457 4072  
                              l386 18A2                                l378 145A  
                              l802 5E6E                                l490 064A  
                              l482 060A                                l474 0504  
                              l458 4076                                l387 1634  
                              l483 060E                                l475 0510  
                              l459 4082                                l564 5E20  
                              l396 17EE                                l388 1638  
                              l484 061A                                l476 0514  
                              l397 17F2                                l389 1730  
                              l493 0726                                l485 061E  
                              l477 0520                                l398 17FE  
                              l494 072A                                l486 062A  
                              l478 0524                                l807 5B22  
                              l495 0736                                l487 062E  
                              l479 0530                                l496 073A  
                              l488 063A                                l752 36B4  
                              l809 5B24                                l577 5C9E  
                              l497 0746                                l489 063E  
                              l498 074A                                l499 0756  
                              l893 10FA               ??_PWR_Button_Polling 006E  
                     __CFG_CPB$OFF 000000                       __CFG_CPD$OFF 000000  
                      ?_LCD_cursor 007A                                _dir 00E6  
                              _msg 0121                                _str 0130  
                     ___awmod@sign 0073                                prod 000FF3  
                              wreg 000FE8                       ___flmul@aexp 0089  
                     ___flmul@bexp 008E                       ___flmul@sign 0088  
                     ___flmul@temp 0093                       ___flmul@prod 008F  
                     __CFG_LVP$OFF 000000             __size_of_LCD_goto_line 00EC  
                     ___fltol@exp1 00BF                       __CFG_WDT$OFF 000000  
                             l1118 4DBC                               l1222 4AA4  
                             l1311 56F0                               l1215 49E0  
                             l1128 4BF6                               l1216 4A24  
                             l1321 5990                               l1500 3442  
                             l1405 2DBC                               l1422 2F30  
                             l1406 2DB0                               l1431 2FC4  
                             l1407 2D7C                               l1520 44BA  
                             l1513 440E                               l1364 5AA6  
                             l1508 34E6                               l1285 5618  
                             l1461 3B9E                               l1374 5B08  
                             l1470 3BD6                               l1527 4516  
                             l1472 3C44                               l1464 3B46  
                             l1528 452E                               l1491 3138  
                             l5013 3E9E                               l5113 0176  
                             l1498 33D4                               l5131 0230  
                             l5213 0534                               l5045 3FB4  
                             l5071 4086                               l5039 3F6E  
                             l6025 1A86                               l4513 5AFA  
                             l4505 5AC4                               l5321 08CC  
                             l6019 1A66                               l4507 5AD0  
                             l5315 0886                               l5219 057A  
                             l4509 5AD6                               l5253 0694  
                             l5149 02EA                               l5407 5BD8  
                             l5247 064E                               l5167 03A4  
                             l5095 00BE                               l8001 52E4  
                             l5281 076A                               l5185 045E  
                             l8003 52EE                               l5355 09E8  
                             l8101 53EA                               l4485 5A56  
                             l6413 3A9C                               l6405 3A6E  
                             l8021 568A                               l5349 09A2  
                             l4487 5A62                               l6431 3B52  
                             l6423 3B1A                               l8007 530A  
                             l5383 0ABE                               l5287 07B0  
                             l4497 5A98                               l4489 5A68  
                             l8121 47B6                               l8105 5D1C  
                             l8017 5674                               l8041 593A  
                             l8201 0B66                               l5801 4646  
                             l8131 484E                               l6443 3BC0  
                             l6363 398E                               l7411 2D96  
                             l7331 2C1E                               l8019 5684  
                             l8211 0BDA                               l5803 465C  
                             l8141 4906                               l8109 5D36  
                             l6437 3B9A                               l6373 39BC  
                             l7501 302C                               l7325 2BFA  
                             l8029 56DE                               l8045 597E  
                             l8037 5924                               l8061 4446  
                             l8205 0BB0                               l8119 47AE  
                             l6383 39EC                               l7511 305E  
                             l7415 2DA0                               l7343 2C54  
                             l7335 2C28                               l8039 5934  
                             l8063 444E                               l8055 441E  
                             l8311 1004                               l8223 0C24  
                             l8215 0BE0                               l8207 0BCA  
                             l5807 4664                               l8137 488E  
                             l6473 3CC2                               l6449 3BEA  
                             l6393 3A1A                               l6369 39B2  
                             l7505 304E                               l7433 2E1E  
                             l7425 2DE0                               l7409 2D90  
                             l8073 44F8                               l8065 445E  
                             l8321 10AE                               l8305 0FD0  
                             l8233 0C76                               l8217 0C0A  
                             l5809 46A8                               l5923 16E8  
                             l6483 3D08                               l6475 3CD6  
                             l6459 3C3E                               l7435 2E24  
                             l7443 2E40                               l7355 2C8C  
                             l8075 4508                               l8067 449C  
                             l7603 33BE                               l7285 5C90  
                             l8093 5322                               l4949 5590  
                             l6485 3D0C                               l6477 3CF8  
                             l6469 3C94                               l6389 3A10  
                             l7517 3072                               l7509 305A  
                             l7461 2F62                               l7453 2F10  
                             l7349 2C68                               l7533 30C6  
                             l8341 112E                               l8333 10FE  
                             l8309 0FFC                               l8261 0DB0  
                             l8501 4EBE                               l5943 17E2  
                             l5847 1464                               l6743 5782  
                             l8095 5354                               l4959 55D2  
                             l7471 2F84                               l7439 2E2E  
                             l7367 2CC0                               l7359 2C96  
                             l8087 4580                               l7711 58A6  
                             l7703 5882                               l7551 3120  
                             l7535 30CC                               l7527 30A2  
                             l8327 10C8                               l8319 10A0  
                             l8263 0DC6                               l8503 4ED0  
                             l5873 157E                               l6729 5702  
                             l8097 5386                               l7713 58B2  
                             l7633 34B8                               l7609 33E8  
                             l7561 3160                               l7553 3126  
                             l7545 30FC                               l7537 30DE  
                             l8345 1190                               l8329 10DC  
                             l8273 0E6A                               l8265 0E02  
                             l8257 0D7E                               l8249 0CFA  
                             l8193 0B30                               l8505 4EE0  
                             l5867 155E                               l6739 574A  
                             l8099 53B8                               l7467 2F78  
                             l7715 58B8                               l7723 58EA  
                             l7707 5892                               l7643 3506  
                             l7635 34CC                               l7619 343C  
                             l7811 5DD2                               l8371 12E0  
                             l8363 12AC                               l8355 1284  
                             l8291 0F7E                               l8267 0E18  
                             l8187 0B16                               l4979 5E8A  
                             l8611 3568                               l5949 1802  
                             l6749 5B18                               l7733 5DDE  
                             l7477 2F98                               l7397 2CFC  
                             l7821 4952                               l7645 3510  
                             l7629 3492                               l7557 314C  
                             l8357 1292                               l8293 0F84  
                             l8277 0E9C                               l8365 12BA  
                             l4997 3DE8                               l6767 57E6  
                             l7487 2FBE                               l7479 2F9E  
                             l7671 551A                               l7727 58FE  
                             l7719 58DC                               l8383 1364  
                             l8375 1308                               l8287 0F06  
                             l6777 57F4                               l7737 5DF2  
                             l7497 301A                               l7921 4D86  
                             l7905 4D3A                               l7673 5526  
                             l7665 54FC                               l7761 436C  
                             l7753 4274                               l8385 136A  
                             l7827 498C                               l7691 557E  
                             l7683 555C                               l7675 552C  
                             l7659 54E6                               l8379 1338  
                             l8387 138C                               l8475 4DCE  
                             l8643 368C                               l6789 5852  
                             l7941 4B04                               l7917 4D72  
                             l7861 4A6E                               l7781 2418  
                             l8637 35F6                               l5999 196C  
                             l7927 4DA2                               l7687 556A  
                             l7775 2346                               l8647 369E  
                             l7945 4B52                               l7929 4DB2  
                             l7857 4A5A                               l7793 25CC  
                             l7785 244A                               l8673 3874  
                             l8657 36C2                               l8649 36A4  
                             l7955 4C42                               l7963 5CD2  
                             l7883 4C92                               l7867 4A8A  
                             l8659 36CE                               l7949 4BA4  
                             l7973 5236                               l7877 4C6C  
                             l7869 4A9A                               l8685 38F6  
                             l8669 37F0                               l7799 269E  
                             l8679 387E                               l7993 52B8  
                             l7897 4CE6                               l7989 52A4  
                             l7999 52D4                               STR_1 FFB9  
                             STR_2 FFA4                               STR_3 FF8F  
                             STR_4 FFB9                               STR_5 FFCE  
                             STR_6 FFF8                               STR_7 FFEE  
                             STR_8 FFFC                               STR_9 FFDA  
                             _LATA 000F89                               _LATB 000F8A  
                             _LATC 000F8B                               _LATD 000F8C  
                             _LATE 000F8D                               u6200 078A  
                             u6120 066E                               u6040 0554  
                             u6205 077E                               u6125 0662  
                             u6045 0548                               u5510 3D64  
                             u7130 1484                               u5515 3D58  
                             u7140 14D0                               u5525 3DC4  
                             u5550 3E1A                               u7135 1478  
                             u7400 19D8                               u6440 0ADE  
                             u6360 09C2                               u6280 08A6  
                             u5720 40A6                               u5640 3F8E  
                             u7145 14C4                               u7155 1530  
                             u5555 3E0E                               u7260 1708  
                             u7405 19CC                               u6445 0AD2  
                             u6365 09B6                               u6285 089A  
                             u5805 0152                               u5725 409A  
                             u5645 3F82                               u5565 3E7A  
                             u7270 1754                               u8070 3CA8  
                             u5910 0320                               u5830 01AC  
                             u5750 003A                               u7415 1A38  
                             u8400 5E7C                               u7265 16FC  
                             u7275 1748                               u5915 0314  
                             u5835 01A0                               u5755 002E  
                             u7285 17B4                               u5925 0380  
                             u5845 020C                               u5765 009A  
                             u7390 198C                               u5950 03DA  
                             u5870 0266                               u5790 00F2  
                             u8415 5E7E                               u9400 2D5E  
                             u9410 2D60                               u7395 1980  
                             u5955 03CE                               u5875 025A  
                             u5795 00E6                               u5965 043A  
                             u5885 02C6                               u8470 5B46  
                             u9265 5C46                               u9266 5C48  
                             u9275 5C52                               u8476 5B48  
                             u9276 5C54                               u9285 5C5E  
                             u9286 5C60                               u9390 2D46  
                             u9295 5C6A                               u9296 5C6C  
                             u9850 34A6                               u9770 3360  
                             u9775 3354                __size_of_CANSetMask 039E  
                             _data 0024                               _main 352A  
                             _itoa 5BAE          __size_of_LCD_send_command 003A  
                             fsr0h 000FEA                               fsr1h 000FE2  
                             fsr0l 000FE9                               fsr2h 000FDA  
                             indf1 000FE7                               fsr1l 000FE1  
                             indf2 000FDF                               fsr2l 000FD9  
                             btemp 0048                               _utoa 5588  
                             pclat 000FFA                               prodh 000FF4  
                             prodl 000FF3                               start 00C0  
                    __CFG_IESO$OFF 000000                    ___fldiv@new_exp 008D  
               __size_of_LCD_clear 0032                   __end_of_CAN_Send 57BC  
                     _sprintf$4196 0100                      __CFG_MCLRE$ON 000000  
                     ___param_bank 000010           __end_of_LCD_enable_pulse 5E48  
                 _CANOperationMode 5E82            __size_of_LCD_initialize 016E  
       __size_of_CANreceiveMessage 050C                      ___fltol@sign1 00BE  
                  __end_of___fladd 3084                              ?_main 0025  
                  __end_of___fldiv 3D30                              ?_itoa 007E  
                  __end_of___awdiv 5588                    __end_of___flneg 5CE4  
                            STR_10 FFF3                              STR_11 FFB9  
                            STR_12 FFE6                    __end_of___awmod 5908  
                  __end_of___flmul 352A                    __end_of___flsub 5BAE  
                  __end_of___fltol 531C                    __end_of___lldiv 5702  
                            u10101 492E                              ?_utoa 0075  
                            u10121 4968                              u10330 5256  
                            u11210 38E2                              u11130 365A  
                            u11220 395A                              u11140 3672  
                            u10335 524A                              u11146 3674  
                  ___awdiv@divisor 0076                              u11237 5C92  
                            u10561 4762                    __end_of___llmod 59A2  
                            u10850 10F2                              _T3CON 000FB1  
                  __end_of___lwdiv 5AB0                    __end_of___lwmod 5B12  
                            i2l401 1F9A                              i2l410 2112  
                            i2l402 1F9E                              i2l411 2116  
                            i2l403 206E                              i2l412 2120  
                            i2l404 200C                              i2l405 2014  
                            i2l406 201C                              i2l407 2024  
                            i1l743 0078                              i2l418 2968  
                            i2l371 1D56                              i2l372 1B3A  
                            i2l381 1CB2                              i2l373 1B3E  
                            i2l390 1DDC                              i2l382 1CB6  
                            i2l374 1C0E                              i2l391 1DE4  
                            i2l383 1CC0                              i2l375 1BAC  
                            i2l392 1DEC                              i2l376 1BB4  
                            i2l393 1DF4                              i2l377 1BBC  
                            i2l386 1F86                              i2l378 1BC4  
                            i2l387 1D6A                              i2l564 5E62  
                            i2l396 1EE2                              i2l388 1D6E  
                            i2l397 1EE6                              i2l389 1E3E  
                            i2l398 1EF0                              i2l569 5EAA  
                            i2l739 51D4                    ___awdiv@counter 0078  
                            _TMR3H 000FB3                              _TMR3L 000FB2  
                _CANisRxReady$3229 0036                              _TRISA 000F92  
                            _TRISB 000F93                              _TRISC 000F94  
                            _TRISD 000F95                              _TRISE 000F96  
                    __CFG_PWRT$OFF 000000                      __CFG_WRT0$OFF 000000  
                    __CFG_WRT1$OFF 000000                      __CFG_WRT2$OFF 000000  
                    __CFG_WRT3$OFF 000000                      __CFG_WRT4$OFF 000000  
               __size_of_ISR_bassa 00A8                      __CFG_WRT5$OFF 000000  
                   __CFG_EBTR0$OFF 000000                     __CFG_FCMEN$OFF 000000  
                   __CFG_EBTR1$OFF 000000                 CANInitialize@flags 0080  
                   __CFG_EBTR2$OFF 000000                     __CFG_EBTR3$OFF 000000  
                   __CFG_EBTR4$OFF 000000                   __end_of_ISR_alta 5210  
                   __CFG_EBTR5$OFF 000000                      __CFG_WRTB$OFF 000000  
                    __CFG_WRTC$OFF 000000                      __CFG_WRTD$OFF 000000  
                   __CFG_EBTRB$OFF 000000                    __end_of_dpowers FF8F  
                            _scale 21B6                    __end_of_isdigit 5DDC  
                   __pbitbssCOMRAM 0238               __end_of_CANisRxReady 5EAE  
                            tablat 000FF5               __end_of_CANisTxReady 5E26  
                            plusw1 000FE3                              plusw2 000FDB  
                            utoa@c 007D                              utoa@v 007B  
                            status 000FD8                    __end_of_sprintf 139A  
              __size_of_LCD_cursor 0032                    __initialization 5BF6  
                     __end_of_main 3970                       __end_of_itoa 5BF6  
    __size_of_board_initialization 00C2                      _LCD_goto_line 531C  
                     __end_of_utoa 5646                  ?_Joystick_Polling 0025  
               ??_Joystick_Polling 006E                  ?_LCD_write_string 007F  
                           ??_main 0119                             ??_itoa 0084  
                           ??_utoa 007B          __size_ofi2_CANsendMessage 0690  
                    __activetblptr 000003                     _JoystickValues 00DE  
               ??_LCD_write_string 0081               __size_of__tdiv_to_l_ 019E  
                _CANisTxReady$3227 006E           __size_of_CAN_interpreter 00AA  
                __end_of_LCD_clear 5DB2              i2CANsendMessage@flags 003D  
           LCD_write_string@buffer 007F                             _ADCON1 000FC1  
                           _CANCON 000F6F                   ___llmod@dividend 006E  
                           ?_scale 0095                             _ADRESH 000FC4  
                 ___awdiv@dividend 0074                    __CFG_BBSIZ$1024 000000  
                           i2l7023 202C                             i2l7043 2108  
                           i2l7049 2124                             i2l6611 2B52  
                           i2l6623 2BA6                             i2l6615 2B6E  
                           i2l6607 2B36                             i2l6625 2BD8  
                           i2l6561 2930                             i2l6553 28F4  
                           i2l6545 28B8                             i2l6537 2848  
                           i2l6619 2B8A                             i2l6563 2962  
                           i2l6557 2912                             i2l6549 28D6  
                           i2l6599 2AC8                             i2l6871 1BCC  
                           i2l8543 50F6                             i2l8561 5144  
                           i2l6947 1DFC                             i2l6891 1CA8  
                           i2l6973 1EF4                             i2l8557 513C  
                           i2l8549 5118                             i2l6967 1ED8  
                           i2l8567 516C                             i2l6897 1CC4  
                           i2l8577 5198                             i2l8587 51CC  
                           _RXB0D0 000F66                             _RXB0D1 000F67  
                           _RXB0D2 000F68                             _RXB0D3 000F69  
                           _RXB0D4 000F6A                             _RXB1D0 000F56  
                           _RXB0D5 000F6B                             _RXB1D1 000F57  
                           _RXB0D6 000F6C                             _RXB1D2 000F58  
                           _RXB0D7 000F6D                             _RXB1D3 000F59  
                           _RXB1D4 000F5A                             _RXB1D5 000F5B  
                           _RXB1D6 000F5C                             _RXB1D7 000F5D  
                           _TXB0D0 000F46                             _TXB0D1 000F47  
                           _TXB0D2 000F48                             _TXB0D3 000F49  
                           _TXB1D0 000F36                             _TXB0D4 000F4A  
                           _TXB1D1 000F37                             _TXB0D5 000F4B  
                           _TXB1D2 000F38                             _TXB0D6 000F4C  
                           _TXB1D3 000F39                             _TXB0D7 000F4D  
                           _TXB2D0 000F26                             _TXB1D4 000F3A  
                           _TXB2D1 000F27                             _TXB1D5 000F3B  
                           _TXB2D2 000F28                             _TXB1D6 000F3C  
                           _TXB2D3 000F29                             _TXB1D7 000F3D  
                           _TXB2D4 000F2A                             _TXB2D5 000F2B  
                           _TXB2D6 000F2C                             _TXB2D7 000F2D  
               CANsendMessage@data 0072                 CANsendMessage@tamp 007A  
                 __end_of___xxtofl 4592                    _switch_position 00E7  
                 __end_of_delay_ms 5CAC              __size_of_CANSetFilter 0B06  
                   __CFG_XINST$OFF 000000                  __end_of_ISR_bassa 00C0  
                 __end_of__powers_ FF67                         _MotoreFlag 0239  
                   ?_LCD_goto_line 0025                             ___flge 4AB6  
                        ??___fladd 00AA                   _delay_set_quartz 5EAE  
                           ___wmul 5CE4                          ??___fldiv 0084  
                        ??___awdiv 0078                          ??___flneg 0099  
                   __CFG_STVREN$ON 000000                          ??___awmod 0072  
                        ??___flmul 0084                          ??___flsub 00BE  
                        ??___fltol 00BA                          ??___lldiv 0076  
                        ??___llmod 0076                          ??___lwdiv 0072  
                     ??_CANSetMask 0073                          ??___lwmod 0072  
          __size_of_LCD_write_char 0096                             _fround 40CE  
   LCD_initialize@quartz_frequency 007C                             clear_0 5BFC  
                           clear_1 5C08                             clear_2 5C16  
                 ___awdiv@quotient 007A                    ___awmod@divisor 0070  
             __size_of_LCD_Handler 0182                    ___awmod@counter 0072  
                  __CFG_BOREN$BOHW 000000                  _JoystickConstants 00CA  
                           itoa@cp 0084                          ??_isdigit 006E  
                     __mediumconst FEFE                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
                        ?_CAN_Send 0025                          ??_sprintf 00C8  
                     _CANSetFilter 0000                         ___flge@ff1 006E  
                       ___flge@ff2 0072                       ___xxtofl@arg 0078  
                     ___xxtofl@exp 0077                       ___xxtofl@val 006E  
                       __accesstop 0060            __end_of__initialization 5C2E  
               __end_of_CANSetMask 40CE                    __CFG_PBADEN$OFF 000000  
                       _SterzoFlag 023B                         ___flneg@f1 0095  
                 _LCD_send_command 5C38                      ___rparam_used 000001  
LCD_write_integer@number_of_digits 0088                         ___fltol@f1 00B6  
                   __pcstackCOMRAM 0025                       __pidataBANK0 5EB8  
                        ?_ISR_alta 0025                      __end_of_scale 26D0  
                   _LCD_initialize 4F50                  _LCD_write_integer 4758  
                _LCD_write_message 5D1A              CANSetFilter@numBuffer 0077  
               ?_LCD_write_integer 0086             LCD_write_integer@index 0095  
               ?_LCD_write_message 007F                         __div_to_l_ 4C46  
                     ??_LCD_cursor 007B             LCD_write_integer@value 0086  
    LCD_write_integer@convertedInt 008F                      _newMessageCan 023C  
                     _actual_speed 00E0              __size_of_CANisRxReady 0016  
            __size_of_CANisTxReady 0024                         ??_CAN_Send 007E  
              ??_LCD_write_integer 008A                    __div_to_l_@exp1 007B  
              ??_LCD_write_message 0081                    __div_to_l_@cntr 007A  
                          ??_scale 0099                    __div_to_l_@quot 0076  
         __end_of_CANOperationMode 5E98                         __pbssBANK0 00CA  
                       __pbssBANK1 0121                  ??_CAN_interpreter 006E  
                       _data_brake 00E8            __size_of_CANsendMessage 078C  
                       _data_speed 00E9                      __div_to_l_@f1 006E  
                    __div_to_l_@f2 0072                    ??_LCD_goto_line 007A  
               __end_of_LCD_cursor 5D80             __end_of_LCD_initialize 50BE  
                          ?___flge 006E                            ?___wmul 006E  
                       ??_ISR_alta 0060          __end_of_LCD_write_integer 4918  
        __end_of_LCD_write_message 5D4E                  ?_LCD_enable_pulse 0025  
                          ?_fround 0095                       _CANisRxReady 5E98  
                          _CANSTAT 000F6E                 ??_LCD_enable_pulse 0076  
                     _CANisTxReady 5E02                          ISR_alta@i 0046  
                          _BRGCON1 000F70                            _BRGCON2 000F71  
                          _BRGCON3 000F72                   i2_CANsendMessage 1B26  
      __size_of_PWR_Button_Polling 001C                          ?___xxtofl 006E  
          __size_ofi2_CANisTxReady 001E             __size_of_CANInitialize 01C6  
                 LCD_cursor@active 007B                          ?_delay_ms 0074  
                          _RXB0DLC 000F65                            _RXB1DLC 000F55  
                          _RXB0CON 000F60                            _RXB1CON 000F50  
                          _TXB0DLC 000F45                            _TXB1DLC 000F35  
                          _TXB2DLC 000F25                CANsendMessage@flags 0075  
                          _AbsFlag 0238                  __end_of__npowers_ FF33  
                          __Hparam 0000                         _left_speed 001E  
                       _scale$4195 0099                            __Lparam 0000  
                 delay_ms@value_ms 0074                    ?_LCD_initialize 0025  
                  __size_of___flge 0190                            ___fladd 2BDC  
                          ___fldiv 3970                            ___awdiv 54CA  
                          ___flneg 5CAC                            ___awmod 5866  
                          ___flmul 3084                            ___flsub 5B66  
                          ___fltol 5210                            ___lldiv 5646  
                  __size_of___wmul 0036                     _LCD_write_char 59A2  
                          ___llmod 5908                            ___lwdiv 5A38  
                          ___lwmod 5AB0               CANInitialize@propSeg 0085  
                          __pcinit 5BF6                            _battery 0022  
                  __size_of_fround 02F6                            __ramtop 0D00  
              LCD_write_char@value 007E                            __ptext0 352A  
                          __ptext1 5408                            __ptext2 4592  
                          __ptext3 3D30                            __ptext4 0000  
                          __ptext5 5E82                            __ptext6 5E66  
                          __ptext7 4DCE                            __ptext8 0B06  
                          __ptext9 21B6                        ?__div_to_l_ 006E  
                 LCD_write_char@D0 007D                   LCD_write_char@D1 007C  
                 LCD_write_char@D2 007B                   LCD_write_char@D3 007A  
                          _dpowers FF67                            _isdigit 5DB2  
                       ??___xxtofl 0072                   ___awmod@dividend 006E  
                       ??_delay_ms 0076             CANreceiveMessage@error 0040  
     __end_of_board_initialization 54CA          __size_of_Joystick_Polling 0054  
         __end_of_delay_set_quartz 5EB8                            _sprintf 0B06  
                   __pintcode_body 50BE                          _LCD_clear 5D80  
             end_of_initialization 5C2E          __size_of_LCD_write_string 0026  
                          itoa@buf 007E                            itoa@val 0080  
                          int_func 50BE                          i2u1104_40 5116  
                        i2u1124_47 5192                      _CANInitialize 4592  
                  ___lldiv@divisor 0072                 LCD_cursor@blinking 007A  
                  ___lldiv@counter 007A             __end_of_LCD_write_char 5A38  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc2 000FDE         __size_of_LCD_write_integer 01C0  
       __size_of_LCD_write_message 0034                            utoa@buf 0075  
                   __tdiv_to_l_@f1 006E                     __tdiv_to_l_@f2 0072  
                          utoa@val 0077                          _ISR_bassa 0018  
                    ??__tdiv_to_l_ 0076                          _PORTAbits 000F80  
                        _PORTBbits 000F81                     CANSetMask@mask 006E  
                        _PORTDbits 000F83                     CANSetMask@tamp 0078  
         __end_of_LCD_send_command 5C72                     CANSetMask@type 0072  
                      ___fladd@grs 00B5                      ___xxtofl@sign 0076  
                      ___fldiv@grs 008F                        ___fldiv@rem 0089  
                       ?_LCD_clear 0025                  __size_of_CAN_Send 00BA  
          _clock_counter_reference 00E2                        ___flmul@grs 008A  
                   _CANsendMessage 139A                   CANInitialize@BRP 007F  
                 CANInitialize@SJW 007E                     ?_CANInitialize 007C  
              __size_of__div_to_l_ 0188            LCD_write_integer@F17272 0008  
                  ?_LCD_write_char 0025                      ??_LCD_Handler 00CA  
                   __end_of___flge 4C46                         ?_ISR_bassa 0025  
                   __end_of___wmul 5D1A                  __size_of_ISR_alta 5208  
                   __end_of_fround 43C4                    _CAN_interpreter 57BC  
                   i2_CANisTxReady 5E48                start_initialization 5BF6  
              __end_of__tdiv_to_l_ 4AB6                CANSetMask@numBuffer 0077  
                    _data_speed_rx 0001             __end_of_CANsendMessage 1B26  
                ?_CANOperationMode 0025                      _data_steering 00EA  
       i2CANsendMessage@dataLength 003C               i2CANsendMessage@data 003A  
               ??_CANOperationMode 006E               i2CANsendMessage@tamp 0042  
                  ___llmod@divisor 0072           __end_ofi2_CANsendMessage 21B6  
       CANInitialize@FilterConfig1 0086         CANInitialize@FilterConfig2 0087  
                  ___llmod@counter 0076                           ??___flge 0076  
             _board_initialization 5408                           ??___wmul 0072  
                      __pdataBANK0 00EB                   __CFG_LPT1OSC$OFF 000000  
                         ??_fround 0099             __end_ofi2_CANisTxReady 5E66  
                    sprintf@tmpval 010E                          ___fladd@a 00A6  
                        ___fladd@b 00A2             CANInitialize@phaseSeg1 007C  
           CANInitialize@phaseSeg2 007D                         fround@prec 00A1  
              __end_of_LCD_Handler 4F50                          ___fldiv@a 0080  
                        ___fldiv@b 007C                          ___flmul@a 0080  
                        ___flmul@b 007C                        __pbssCOMRAM 0001  
                        ___flsub@a 00BA                          ___flsub@b 00B6  
                    __pcstackBANK0 0060                      __pcstackBANK1 0100  
                      _BRGCON2bits 000F71                        _BRGCON3bits 000F72  
                 _Joystick_Polling 5B12                  __size_of___xxtofl 01CE  
        __size_of_LCD_enable_pulse 0022                       _isdigit$3775 006F  
       i2CANsendMessage@identifier 0036                  __size_of_delay_ms 003A  
                      ??_LCD_clear 007A                    ?_CANsendMessage 006E  
          LCD_write_message@buffer 007F                   _LCD_write_string 5DDC  
                  ??_CANInitialize 0081                        sprintf@flag 0106  
                      sprintf@fval 0114                        sprintf@prec 0112  
                 ??_LCD_initialize 007C                 CANSetFilter@filter 006E  
        delay_set_quartz@frequency 006E                   ___lwdiv@dividend 006E  
               LCD_send_command@D0 0078                 LCD_send_command@D1 0077  
               LCD_send_command@D2 0076                 LCD_send_command@D3 0079  
            __end_of_LCD_goto_line 5408              ?_board_initialization 0025  
                        __pintcode 0008                      __pmediumconst FEFE  
                         ?___fladd 00A2                           ?___fldiv 007C  
                         ?___awdiv 0074                           ?___flneg 0095  
                         ?___awmod 006E                           ?___flmul 007C  
          __end_of_CAN_interpreter 5866                           ?___flsub 00B6  
                         ?___fltol 00B6                           ?___lldiv 006E  
                         ?___llmod 006E                          __npowers_ FEFF  
                         ?___lwdiv 006E                           ?___lwmod 006E  
                      ??_ISR_bassa 0025                        __pintcodelo 0018  
       __end_of_PWR_Button_Polling 5E82                    ?i2_CANisTxReady 0025  
                      __tdiv_to_l_ 4918                       ??__div_to_l_ 0076  
                      _COMSTATbits 000F74                           ?_isdigit 0025  
                         _CAN_Send 5702                   ___lwdiv@quotient 0072  
                         ?_sprintf 00C0                     __size_of_scale 051A  
                ?_delay_set_quartz 0025              CANreceiveMessage@tamp 0041  
               ??_delay_set_quartz 006E                     ___wmul@product 0072  
                         _LATCbits 000F8B                           _LATDbits 000F8C  
                         _LATEbits 000F8D                           _IPR2bits 000FA2  
     _delay_quartz_frequency_value 00EB                           _IPR3bits 000FA5  
                         _PIE2bits 000FA0                           _PIE3bits 000FA3  
               __end_of__div_to_l_ 4DCE                           _PIR2bits 000FA1  
                         _PIR3bits 000FA4                           i2u813_40 2788  
                         i2u813_46 278A                           i2u814_40 27B6  
                         i2u822_45 293C                           i2u814_46 27B8  
                         i2u824_40 2A10                           i2u816_45 27CC  
                         i2u824_46 2A12                           i2u825_40 2A3A  
                         i2u833_45 2BB2                           i2u825_46 2A3C  
                         i2u827_45 2A4E                           i2u880_40 1E1A  
                         i2u880_45 1E10                           i2u881_40 1E60  
                         _RXB0EIDH 000F63                           _RXB0EIDL 000F64  
                         i2u881_45 1E56                           i2u882_45 1EAC  
                         i2u867_40 1BEA                           _RXB1EIDH 000F53  
                        _pr_time_1 00D2                          _pr_time_2 00D6  
                         _RXB1EIDL 000F54                          _pr_time_3 00DA  
                         i2u867_45 1BE0                          _pr_time_4 0016  
                         i2u868_40 1C30                           i2u868_45 1C26  
                         i2u893_40 204A                           i2u893_45 2040  
                         i2u869_45 1C7C                           i2u894_40 2090  
                        _set_speed 00E4                           i2u894_45 2086  
                         _RCONbits 000FD0                           i2u895_45 20DC  
                 __CFG_WDTPS$32768 000000                           _RXB0SIDH 000F61  
                         _RXB0SIDL 000F62                           _RXF0EIDH 000F02  
                         _RXB1SIDH 000F51                           _RXF0EIDL 000F03  
                         _RXB1SIDL 000F52                           _RXF1EIDH 000F06  
                         _RXF1EIDL 000F07                           _RXF2EIDH 000F0A  
                         _RXF2EIDL 000F0B                           _RXF3EIDH 000F0E  
                         _RXF3EIDL 000F0F                           _RXF4EIDH 000F12  
                         _RXF4EIDL 000F13                           _RXF5EIDH 000F16  
                         _RXF5EIDL 000F17                           _RXF0SIDH 000F00  
                         _RXF0SIDL 000F01                           _TXB0EIDH 000F43  
                         _RXF1SIDH 000F04                           _TXB0EIDL 000F44  
                         _RXF1SIDL 000F05                           _TXB1EIDH 000F33  
                         _RXF2SIDH 000F08                           _TXB1EIDL 000F34  
                         _RXF2SIDL 000F09                           _ISR_alta 0008  
                         _TXB2EIDH 000F23                           _RXF3SIDH 000F0C  
                         _TXB2EIDL 000F24                           _RXF3SIDL 000F0D  
                         _RXF4SIDH 000F10                           _RXF4SIDL 000F11  
                         _RXF5SIDH 000F14                           _RXF5SIDL 000F15  
                         _RXM0EIDH 000F1A                           _RXM0EIDL 000F1B  
                         _TXB0SIDH 000F41                           _RXM1EIDH 000F1E  
                         _TXB0SIDL 000F42                           _RXM1EIDL 000F1F  
                         _TXB1SIDH 000F31                           _TXB1SIDL 000F32  
                         _TXB2SIDH 000F21                           _TXB2SIDL 000F22  
                      _LCD_Handler 4DCE                           _RXM0SIDH 000F18  
                         _RXM0SIDL 000F19                           _RXM1SIDH 000F1C  
                         _RXM1SIDL 000F1D                           _RXERRCNT 000F75  
   LCD_write_integer@zero_cleaning 0089                           _TXERRCNT 000F76  
                       _ADCON0bits 000FC2                         _ADCON2bits 000FC0  
                ___wmul@multiplier 006E                           _RTR_Flag 023A  
                ?_LCD_send_command 0076                   _actual_speed_kmh 000E  
               ??_LCD_send_command 0079                      ?_CANSetFilter 006E  
                       _CANCONbits 000F6F                   ??_LCD_write_char 007A  
                LCD_goto_line@line 007A                           __Hrparam 0000  
                     _RXB0SIDLbits 000F62             ??_board_initialization 0088  
                         __Lrparam 0000                       _RXB1SIDLbits 000F52  
                 ?_CAN_interpreter 0025                   __size_of___fladd 04A8  
                       _CANSetMask 3D30                   __size_of___fldiv 03C0  
                 __size_of___awdiv 00BE                   __size_of___flneg 0038  
                 __size_of___awmod 00A2                   __size_of___flmul 04A6  
                 __size_of___flsub 0048                   __size_of___fltol 010C  
                 __size_of___lldiv 00BC                   __size_of___llmod 009A  
                 __size_of___lwdiv 0078                   __size_of___lwmod 0062  
                      _fround$4193 009D                        _fround$4194 0099  
                       sprintf@exp 010C                         sprintf@val 0108  
                         ___xxtofl 43C4                       _RXF0SIDLbits 000F01  
                 __size_of_isdigit 002A                           _delay_ms 5C72  
                  ___lwdiv@divisor 0070                       _RXF1SIDLbits 000F05  
                  ___lwdiv@counter 0074                     ??_CANSetFilter 0073  
                 _LCD_enable_pulse 5E26                           __ptext10 5DB2  
                         __ptext11 40CE                           __ptext20 5210  
                         __ptext12 3084                           __ptext21 5B66  
                         __ptext13 5866                           __ptext30 5AB0  
                         __ptext22 2BDC                           __ptext14 54CA  
                         __ptext31 5A38                           __ptext23 5CAC  
                         __ptext15 4918                           __ptext40 5E26  
                         __ptext32 5DDC                           __ptext24 4AB6  
                         __ptext16 4C46                           __ptext41 5C72  
                         __ptext33 59A2                           __ptext25 3970  
                         __ptext17 43C4                           __ptext50 1B26  
                         __ptext42 5CE4                           __ptext34 4F50  
                         __ptext26 5D1A                           __ptext18 5908  
                         __ptext51 5E48                           __ptext43 5B12  
                         __ptext35 5EAE                           __ptext27 4758  
                         __ptext19 5646                           __ptext52 26D0  
                         __ptext44 57BC                           __ptext36 5D4E  
                         __ptext28 5BAE                           __ptext53 5E98  
                         __ptext45 5702                           __ptext37 5D80  
                         __ptext29 5588                           __ptext46 139A  
                         __ptext38 531C                           __ptext47 5E02  
                         __ptext39 5C38                       _RXF2SIDLbits 000F09  
                         __powers_ FF33                       _RXF3SIDLbits 000F0D  
                 __size_of_sprintf 0894                       _RXF4SIDLbits 000F11  
                     _RXF5SIDLbits 000F15           CANsendMessage@dataLength 0074  
                    __size_of_main 0446                      __size_of_itoa 0048  
                    __size_of_utoa 00BE                  ?i2_CANsendMessage 0036  
             CANreceiveMessage@msg 0036                i2_CANisTxReady$3227 0036  
                     _TXB0SIDLbits 000F42                  Joystick_Polling@i 006F  
               ??i2_CANsendMessage 003E                       _TXB1SIDLbits 000F32  
                         _wait_low 023E           __end_of_Joystick_Polling 5B66  
                     _TXB2SIDLbits 000F22                           int$flags 0048  
        __size_of_CANOperationMode 0016                      ?_CANisRxReady 0025  
                    ?_CANisTxReady 0025           __end_of_LCD_write_string 5E02  
                      _RXB0DLCbits 000F65                        _RXB1DLCbits 000F55  
                     _RXM0SIDLbits 000F19                        _RXB0CONbits 000F60  
                       _LCD_cursor 5D4E                        _RXB1CONbits 000F50  
                _CANreceiveMessage 26D0                       _RXM1SIDLbits 000F1D  
                       _INTCONbits 000FF2                       _set_steering 0023  
                 ??_CANsendMessage 0076                 ?_CANreceiveMessage 0036  
                         itoa@base 0082                           isdigit@c 0070  
                         scale@scl 009D           CANsendMessage@identifier 006E  
                     _time_counter 001A                           intlevel1 0000  
                         intlevel2 0000                          sprintf@ap 0104  
                 __tdiv_to_l_@exp1 007E                          sprintf@sp 00C0  
                 __tdiv_to_l_@cntr 007D                   CANSetFilter@tamp 0078  
                 __tdiv_to_l_@quot 0079                   CANSetFilter@type 0072  
              ??_CANreceiveMessage 0038                   ___lwmod@dividend 006E  
                 ___lldiv@dividend 006E                        _TXB0DLCbits 000F45  
                      _right_speed 0020                        _TXB1DLCbits 000F35  
                      _TXB0CONbits 000F40                        _TXB2DLCbits 000F25  
                      _TXB1CONbits 000F30                        _TXB2CONbits 000F20  
                 ??i2_CANisTxReady 0036               CANOperationMode@mode 006E  
                   ??_CANisRxReady 0036                        ?_CANSetMask 006E  
                   ??_CANisTxReady 006E                       ?__tdiv_to_l_ 006E  
        __end_of_CANreceiveMessage 2BDC                           utoa@base 0079  
                         sprintf@c 0118                           sprintf@f 00C2  
                 ___lldiv@quotient 0076                    ___lwmod@divisor 0070  
                  ___lwmod@counter 0072                      ___fladd@signs 00B2  
               _PWR_Button_Polling 5E66                       ___fladd@aexp 00B3  
                     ___fladd@bexp 00B4              __end_of_CANInitialize 4758  
              ?_PWR_Button_Polling 0025                       _power_switch 023D  
