

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sun Jun 12 21:29:49 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    74                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    75                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    81                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    82                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    83  0000                     
    84                           	psect	idataBANK0
    85  0168A8                     __pidataBANK0:
    86                           	opt stack 0
    87                           
    88                           ;initializer for _delay_quartz_frequency_value
    89  0168A8  10                 	db	16
    90                           
    91                           	psect	mediumconst
    92  00FCCC                     __pmediumconst:
    93                           	opt stack 0
    94  00FCCC  00                 	db	0
    95  00FCCD                     __npowers_:
    96                           	opt stack 0
    97  00FCCD  0000               	dw	0
    98  00FCCF  3F80               	dw	16256
    99  00FCD1  CCCD               	dw	52429
   100  00FCD3  3DCC               	dw	15820
   101  00FCD5  D70A               	dw	55050
   102  00FCD7  3C23               	dw	15395
   103  00FCD9  126F               	dw	4719
   104  00FCDB  3A83               	dw	14979
   105  00FCDD  B717               	dw	46871
   106  00FCDF  38D1               	dw	14545
   107  00FCE1  C5AC               	dw	50604
   108  00FCE3  3727               	dw	14119
   109  00FCE5  37BD               	dw	14269
   110  00FCE7  3586               	dw	13702
   111  00FCE9  BF95               	dw	49045
   112  00FCEB  33D6               	dw	13270
   113  00FCED  CC77               	dw	52343
   114  00FCEF  322B               	dw	12843
   115  00FCF1  705F               	dw	28767
   116  00FCF3  3089               	dw	12425
   117  00FCF5  E6FF               	dw	59135
   118  00FCF7  2EDB               	dw	11995
   119  00FCF9  E508               	dw	58632
   120  00FCFB  1E3C               	dw	7740
   121  00FCFD  4260               	dw	16992
   122  00FCFF  0DA2               	dw	3490
   123  00FD01                     __end_of__npowers_:
   124                           	opt stack 0
   125  00FD01                     __powers_:
   126                           	opt stack 0
   127  00FD01  0000               	dw	0
   128  00FD03  3F80               	dw	16256
   129  00FD05  0000               	dw	0
   130  00FD07  4120               	dw	16672
   131  00FD09  0000               	dw	0
   132  00FD0B  42C8               	dw	17096
   133  00FD0D  0000               	dw	0
   134  00FD0F  447A               	dw	17530
   135  00FD11  4000               	dw	16384
   136  00FD13  461C               	dw	17948
   137  00FD15  5000               	dw	20480
   138  00FD17  47C3               	dw	18371
   139  00FD19  2400               	dw	9216
   140  00FD1B  4974               	dw	18804
   141  00FD1D  9680               	dw	38528
   142  00FD1F  4B18               	dw	19224
   143  00FD21  BC20               	dw	48160
   144  00FD23  4CBE               	dw	19646
   145  00FD25  6B28               	dw	27432
   146  00FD27  4E6E               	dw	20078
   147  00FD29  02F9               	dw	761
   148  00FD2B  5015               	dw	20501
   149  00FD2D  78EC               	dw	30956
   150  00FD2F  60AD               	dw	24749
   151  00FD31  F2CA               	dw	62154
   152  00FD33  7149               	dw	29001
   153  00FD35                     __end_of__powers_:
   154                           	opt stack 0
   155  00FD35                     _dpowers:
   156                           	opt stack 0
   157  00FD35  0001               	dw	1
   158  00FD37  0000               	dw	0
   159  00FD39  000A               	dw	10
   160  00FD3B  0000               	dw	0
   161  00FD3D  0064               	dw	100
   162  00FD3F  0000               	dw	0
   163  00FD41  03E8               	dw	1000
   164  00FD43  0000               	dw	0
   165  00FD45  2710               	dw	10000
   166  00FD47  0000               	dw	0
   167  00FD49  86A0               	dw	34464
   168  00FD4B  0001               	dw	1
   169  00FD4D  4240               	dw	16960
   170  00FD4F  000F               	dw	15
   171  00FD51  9680               	dw	38528
   172  00FD53  0098               	dw	152
   173  00FD55  E100               	dw	57600
   174  00FD57  05F5               	dw	1525
   175  00FD59  CA00               	dw	51712
   176  00FD5B  3B9A               	dw	15258
   177  00FD5D                     __end_of_dpowers:
   178                           	opt stack 0
   179  0000                     _RXB1CON	set	3920
   180  0000                     _RXB1CONbits	set	3920
   181  0000                     _RXB1D0	set	3926
   182  0000                     _RXB1D1	set	3927
   183  0000                     _RXB1D2	set	3928
   184  0000                     _RXB1D3	set	3929
   185  0000                     _RXB1D4	set	3930
   186  0000                     _RXB1D5	set	3931
   187  0000                     _RXB1D6	set	3932
   188  0000                     _RXB1D7	set	3933
   189  0000                     _RXB1DLC	set	3925
   190  0000                     _RXB1DLCbits	set	3925
   191  0000                     _RXB1EIDH	set	3923
   192  0000                     _RXB1EIDL	set	3924
   193  0000                     _RXB1SIDH	set	3921
   194  0000                     _RXB1SIDL	set	3922
   195  0000                     _RXB1SIDLbits	set	3922
   196  0000                     _RXF0EIDH	set	3842
   197  0000                     _RXF0EIDL	set	3843
   198  0000                     _RXF0SIDH	set	3840
   199  0000                     _RXF0SIDL	set	3841
   200  0000                     _RXF0SIDLbits	set	3841
   201  0000                     _RXF1EIDH	set	3846
   202  0000                     _RXF1EIDL	set	3847
   203  0000                     _RXF1SIDH	set	3844
   204  0000                     _RXF1SIDL	set	3845
   205  0000                     _RXF1SIDLbits	set	3845
   206  0000                     _RXF2EIDH	set	3850
   207  0000                     _RXF2EIDL	set	3851
   208  0000                     _RXF2SIDH	set	3848
   209  0000                     _RXF2SIDL	set	3849
   210  0000                     _RXF2SIDLbits	set	3849
   211  0000                     _RXF3EIDH	set	3854
   212  0000                     _RXF3EIDL	set	3855
   213  0000                     _RXF3SIDH	set	3852
   214  0000                     _RXF3SIDL	set	3853
   215  0000                     _RXF3SIDLbits	set	3853
   216  0000                     _RXF4EIDH	set	3858
   217  0000                     _RXF4EIDL	set	3859
   218  0000                     _RXF4SIDH	set	3856
   219  0000                     _RXF4SIDL	set	3857
   220  0000                     _RXF4SIDLbits	set	3857
   221  0000                     _RXF5EIDH	set	3862
   222  0000                     _RXF5EIDL	set	3863
   223  0000                     _RXF5SIDH	set	3860
   224  0000                     _RXF5SIDL	set	3861
   225  0000                     _RXF5SIDLbits	set	3861
   226  0000                     _RXM0EIDH	set	3866
   227  0000                     _RXM0EIDL	set	3867
   228  0000                     _RXM0SIDH	set	3864
   229  0000                     _RXM0SIDL	set	3865
   230  0000                     _RXM0SIDLbits	set	3865
   231  0000                     _RXM1EIDH	set	3870
   232  0000                     _RXM1EIDL	set	3871
   233  0000                     _RXM1SIDH	set	3868
   234  0000                     _RXM1SIDL	set	3869
   235  0000                     _RXM1SIDLbits	set	3869
   236  0000                     _TXB0CONbits	set	3904
   237  0000                     _TXB0D0	set	3910
   238  0000                     _TXB0D1	set	3911
   239  0000                     _TXB0D2	set	3912
   240  0000                     _TXB0D3	set	3913
   241  0000                     _TXB0D4	set	3914
   242  0000                     _TXB0D5	set	3915
   243  0000                     _TXB0D6	set	3916
   244  0000                     _TXB0D7	set	3917
   245  0000                     _TXB0DLC	set	3909
   246  0000                     _TXB0DLCbits	set	3909
   247  0000                     _TXB0EIDH	set	3907
   248  0000                     _TXB0EIDL	set	3908
   249  0000                     _TXB0SIDH	set	3905
   250  0000                     _TXB0SIDL	set	3906
   251  0000                     _TXB0SIDLbits	set	3906
   252  0000                     _TXB1CONbits	set	3888
   253  0000                     _TXB1D0	set	3894
   254  0000                     _TXB1D1	set	3895
   255  0000                     _TXB1D2	set	3896
   256  0000                     _TXB1D3	set	3897
   257  0000                     _TXB1D4	set	3898
   258  0000                     _TXB1D5	set	3899
   259  0000                     _TXB1D6	set	3900
   260  0000                     _TXB1D7	set	3901
   261  0000                     _TXB1DLC	set	3893
   262  0000                     _TXB1DLCbits	set	3893
   263  0000                     _TXB1EIDH	set	3891
   264  0000                     _TXB1EIDL	set	3892
   265  0000                     _TXB1SIDH	set	3889
   266  0000                     _TXB1SIDL	set	3890
   267  0000                     _TXB1SIDLbits	set	3890
   268  0000                     _TXB2CONbits	set	3872
   269  0000                     _TXB2D0	set	3878
   270  0000                     _TXB2D1	set	3879
   271  0000                     _TXB2D2	set	3880
   272  0000                     _TXB2D3	set	3881
   273  0000                     _TXB2D4	set	3882
   274  0000                     _TXB2D5	set	3883
   275  0000                     _TXB2D6	set	3884
   276  0000                     _TXB2D7	set	3885
   277  0000                     _TXB2DLC	set	3877
   278  0000                     _TXB2DLCbits	set	3877
   279  0000                     _TXB2EIDH	set	3875
   280  0000                     _TXB2EIDL	set	3876
   281  0000                     _TXB2SIDH	set	3873
   282  0000                     _TXB2SIDL	set	3874
   283  0000                     _TXB2SIDLbits	set	3874
   284  0000                     _ADCON0bits	set	4034
   285  0000                     _ADCON1	set	4033
   286  0000                     _ADCON2bits	set	4032
   287  0000                     _ADRESH	set	4036
   288  0000                     _BRGCON1	set	3952
   289  0000                     _BRGCON2	set	3953
   290  0000                     _BRGCON2bits	set	3953
   291  0000                     _BRGCON3	set	3954
   292  0000                     _BRGCON3bits	set	3954
   293  0000                     _CANCON	set	3951
   294  0000                     _CANCONbits	set	3951
   295  0000                     _CANSTAT	set	3950
   296  0000                     _COMSTATbits	set	3956
   297  0000                     _INTCONbits	set	4082
   298  0000                     _IPR2bits	set	4002
   299  0000                     _IPR3bits	set	4005
   300  0000                     _LATA	set	3977
   301  0000                     _LATB	set	3978
   302  0000                     _LATC	set	3979
   303  0000                     _LATCbits	set	3979
   304  0000                     _LATD	set	3980
   305  0000                     _LATDbits	set	3980
   306  0000                     _LATE	set	3981
   307  0000                     _LATEbits	set	3981
   308  0000                     _PIE2bits	set	4000
   309  0000                     _PIE3bits	set	4003
   310  0000                     _PIR2bits	set	4001
   311  0000                     _PIR3bits	set	4004
   312  0000                     _PORTAbits	set	3968
   313  0000                     _PORTBbits	set	3969
   314  0000                     _PORTDbits	set	3971
   315  0000                     _RCONbits	set	4048
   316  0000                     _RXB0CON	set	3936
   317  0000                     _RXB0CONbits	set	3936
   318  0000                     _RXB0D0	set	3942
   319  0000                     _RXB0D1	set	3943
   320  0000                     _RXB0D2	set	3944
   321  0000                     _RXB0D3	set	3945
   322  0000                     _RXB0D4	set	3946
   323  0000                     _RXB0D5	set	3947
   324  0000                     _RXB0D6	set	3948
   325  0000                     _RXB0D7	set	3949
   326  0000                     _RXB0DLC	set	3941
   327  0000                     _RXB0DLCbits	set	3941
   328  0000                     _RXB0EIDH	set	3939
   329  0000                     _RXB0EIDL	set	3940
   330  0000                     _RXB0SIDH	set	3937
   331  0000                     _RXB0SIDL	set	3938
   332  0000                     _RXB0SIDLbits	set	3938
   333  0000                     _RXERRCNT	set	3957
   334  0000                     _T3CON	set	4017
   335  0000                     _TMR3H	set	4019
   336  0000                     _TMR3L	set	4018
   337  0000                     _TRISA	set	3986
   338  0000                     _TRISB	set	3987
   339  0000                     _TRISC	set	3988
   340  0000                     _TRISD	set	3989
   341  0000                     _TRISE	set	3990
   342  0000                     _TXERRCNT	set	3958
   343  00FD5D                     STR_11:
   344  00FD5D  44                 	db	68	;'D'
   345  00FD5E  69                 	db	105	;'i'
   346  00FD5F  72                 	db	114	;'r'
   347  00FD60  65                 	db	101	;'e'
   348  00FD61  63                 	db	99	;'c'
   349  00FD62  74                 	db	116	;'t'
   350  00FD63  69                 	db	105	;'i'
   351  00FD64  6F                 	db	111	;'o'
   352  00FD65  6E                 	db	110	;'n'
   353  00FD66  3A                 	db	58	;':'
   354  00FD67  20                 	db	32
   355  00FD68  20                 	db	32
   356  00FD69  20                 	db	32
   357  00FD6A  20                 	db	32
   358  00FD6B  20                 	db	32
   359  00FD6C  20                 	db	32
   360  00FD6D  20                 	db	32
   361  00FD6E  20                 	db	32
   362  00FD6F  20                 	db	32
   363  00FD70  20                 	db	32
   364  00FD71  00                 	db	0
   365  00FD72                     STR_39:
   366  00FD72  20                 	db	32
   367  00FD73  20                 	db	32
   368  00FD74  20                 	db	32
   369  00FD75  20                 	db	32
   370  00FD76  20                 	db	32
   371  00FD77  20                 	db	32
   372  00FD78  20                 	db	32
   373  00FD79  46                 	db	70	;'F'
   374  00FD7A  41                 	db	65	;'A'
   375  00FD7B  49                 	db	73	;'I'
   376  00FD7C  4C                 	db	76	;'L'
   377  00FD7D  45                 	db	69	;'E'
   378  00FD7E  44                 	db	68	;'D'
   379  00FD7F  21                 	db	33
   380  00FD80  20                 	db	32
   381  00FD81  20                 	db	32
   382  00FD82  20                 	db	32
   383  00FD83  20                 	db	32
   384  00FD84  20                 	db	32
   385  00FD85  20                 	db	32
   386  00FD86  00                 	db	0
   387  00FD87                     STR_41:
   388  00FD87  20                 	db	32
   389  00FD88  20                 	db	32
   390  00FD89  20                 	db	32
   391  00FD8A  20                 	db	32
   392  00FD8B  20                 	db	32
   393  00FD8C  20                 	db	32
   394  00FD8D  53                 	db	83	;'S'
   395  00FD8E  54                 	db	84	;'T'
   396  00FD8F  4F                 	db	79	;'O'
   397  00FD90  50                 	db	80	;'P'
   398  00FD91  50                 	db	80	;'P'
   399  00FD92  45                 	db	69	;'E'
   400  00FD93  44                 	db	68	;'D'
   401  00FD94  21                 	db	33
   402  00FD95  20                 	db	32
   403  00FD96  20                 	db	32
   404  00FD97  20                 	db	32
   405  00FD98  20                 	db	32
   406  00FD99  20                 	db	32
   407  00FD9A  20                 	db	32
   408  00FD9B  00                 	db	0
   409  00FD9C                     STR_36:
   410  00FD9C  20                 	db	32
   411  00FD9D  20                 	db	32
   412  00FD9E  20                 	db	32
   413  00FD9F  20                 	db	32
   414  00FDA0  20                 	db	32
   415  00FDA1  43                 	db	67	;'C'
   416  00FDA2  4F                 	db	79	;'O'
   417  00FDA3  4D                 	db	77	;'M'
   418  00FDA4  50                 	db	80	;'P'
   419  00FDA5  4C                 	db	76	;'L'
   420  00FDA6  45                 	db	69	;'E'
   421  00FDA7  54                 	db	84	;'T'
   422  00FDA8  45                 	db	69	;'E'
   423  00FDA9  44                 	db	68	;'D'
   424  00FDAA  21                 	db	33
   425  00FDAB  20                 	db	32
   426  00FDAC  20                 	db	32
   427  00FDAD  20                 	db	32
   428  00FDAE  20                 	db	32
   429  00FDAF  20                 	db	32
   430  00FDB0  00                 	db	0
   431  00FDB1                     STR_42:
   432  00FDB1  20                 	db	32
   433  00FDB2  20                 	db	32
   434  00FDB3  20                 	db	32
   435  00FDB4  20                 	db	32
   436  00FDB5  62                 	db	98	;'b'
   437  00FDB6  79                 	db	121	;'y'
   438  00FDB7  20                 	db	32
   439  00FDB8  74                 	db	116	;'t'
   440  00FDB9  68                 	db	104	;'h'
   441  00FDBA  65                 	db	101	;'e'
   442  00FDBB  20                 	db	32
   443  00FDBC  55                 	db	85	;'U'
   444  00FDBD  53                 	db	83	;'S'
   445  00FDBE  45                 	db	69	;'E'
   446  00FDBF  52                 	db	82	;'R'
   447  00FDC0  20                 	db	32
   448  00FDC1  20                 	db	32
   449  00FDC2  20                 	db	32
   450  00FDC3  20                 	db	32
   451  00FDC4  20                 	db	32
   452  00FDC5  00                 	db	0
   453  00FDC6                     STR_35:
   454  00FDC6  20                 	db	32
   455  00FDC7  20                 	db	32
   456  00FDC8  20                 	db	32
   457  00FDC9  20                 	db	32
   458  00FDCA  53                 	db	83	;'S'
   459  00FDCB  55                 	db	85	;'U'
   460  00FDCC  43                 	db	67	;'C'
   461  00FDCD  43                 	db	67	;'C'
   462  00FDCE  45                 	db	69	;'E'
   463  00FDCF  53                 	db	83	;'S'
   464  00FDD0  53                 	db	83	;'S'
   465  00FDD1  46                 	db	70	;'F'
   466  00FDD2  55                 	db	85	;'U'
   467  00FDD3  4C                 	db	76	;'L'
   468  00FDD4  4C                 	db	76	;'L'
   469  00FDD5  59                 	db	89	;'Y'
   470  00FDD6  20                 	db	32
   471  00FDD7  20                 	db	32
   472  00FDD8  20                 	db	32
   473  00FDD9  20                 	db	32
   474  00FDDA  00                 	db	0
   475  00FDDB                     STR_28:
   476  00FDDB  20                 	db	32
   477  00FDDC  20                 	db	32
   478  00FDDD  20                 	db	32
   479  00FDDE  73                 	db	115	;'s'
   480  00FDDF  74                 	db	116	;'t'
   481  00FDE0  61                 	db	97	;'a'
   482  00FDE1  72                 	db	114	;'r'
   483  00FDE2  74                 	db	116	;'t'
   484  00FDE3  20                 	db	32
   485  00FDE4  70                 	db	112	;'p'
   486  00FDE5  61                 	db	97	;'a'
   487  00FDE6  72                 	db	114	;'r'
   488  00FDE7  6B                 	db	107	;'k'
   489  00FDE8  69                 	db	105	;'i'
   490  00FDE9  6E                 	db	110	;'n'
   491  00FDEA  67                 	db	103	;'g'
   492  00FDEB  20                 	db	32
   493  00FDEC  20                 	db	32
   494  00FDED  20                 	db	32
   495  00FDEE  20                 	db	32
   496  00FDEF  00                 	db	0
   497  00FDF0                     STR_46:
   498  00FDF0  20                 	db	32
   499  00FDF1  20                 	db	32
   500  00FDF2  53                 	db	83	;'S'
   501  00FDF3  69                 	db	105	;'i'
   502  00FDF4  6D                 	db	109	;'m'
   503  00FDF5  6F                 	db	111	;'o'
   504  00FDF6  6E                 	db	110	;'n'
   505  00FDF7  65                 	db	101	;'e'
   506  00FDF8  20                 	db	32
   507  00FDF9  52                 	db	82	;'R'
   508  00FDFA  69                 	db	105	;'i'
   509  00FDFB  67                 	db	103	;'g'
   510  00FDFC  68                 	db	104	;'h'
   511  00FDFD  65                 	db	101	;'e'
   512  00FDFE  74                 	db	116	;'t'
   513  00FDFF  74                 	db	116	;'t'
   514  00FE00  69                 	db	105	;'i'
   515  00FE01  20                 	db	32
   516  00FE02  20                 	db	32
   517  00FE03  20                 	db	32
   518  00FE04  00                 	db	0
   519  00FE05                     STR_44:
   520  00FE05  20                 	db	32
   521  00FE06  20                 	db	32
   522  00FE07  4D                 	db	77	;'M'
   523  00FE08  61                 	db	97	;'a'
   524  00FE09  73                 	db	115	;'s'
   525  00FE0A  73                 	db	115	;'s'
   526  00FE0B  69                 	db	105	;'i'
   527  00FE0C  6D                 	db	109	;'m'
   528  00FE0D  6F                 	db	111	;'o'
   529  00FE0E  20                 	db	32
   530  00FE0F  43                 	db	67	;'C'
   531  00FE10  6C                 	db	108	;'l'
   532  00FE11  65                 	db	101	;'e'
   533  00FE12  6D                 	db	109	;'m'
   534  00FE13  65                 	db	101	;'e'
   535  00FE14  6E                 	db	110	;'n'
   536  00FE15  74                 	db	116	;'t'
   537  00FE16  69                 	db	105	;'i'
   538  00FE17  20                 	db	32
   539  00FE18  20                 	db	32
   540  00FE19  00                 	db	0
   541  00FE1A                     STR_3:
   542  00FE1A  20                 	db	32
   543  00FE1B  20                 	db	32
   544  00FE1C  50                 	db	80	;'P'
   545  00FE1D  72                 	db	114	;'r'
   546  00FE1E  65                 	db	101	;'e'
   547  00FE1F  73                 	db	115	;'s'
   548  00FE20  73                 	db	115	;'s'
   549  00FE21  20                 	db	32
   550  00FE22  74                 	db	116	;'t'
   551  00FE23  68                 	db	104	;'h'
   552  00FE24  65                 	db	101	;'e'
   553  00FE25  20                 	db	32
   554  00FE26  62                 	db	98	;'b'
   555  00FE27  75                 	db	117	;'u'
   556  00FE28  74                 	db	116	;'t'
   557  00FE29  74                 	db	116	;'t'
   558  00FE2A  6F                 	db	111	;'o'
   559  00FE2B  6E                 	db	110	;'n'
   560  00FE2C  20                 	db	32
   561  00FE2D  20                 	db	32
   562  00FE2E  00                 	db	0
   563  00FE2F                     STR_40:
   564  00FE2F  20                 	db	32
   565  00FE30  20                 	db	32
   566  00FE31  20                 	db	32
   567  00FE32  64                 	db	100	;'d'
   568  00FE33  75                 	db	117	;'u'
   569  00FE34  65                 	db	101	;'e'
   570  00FE35  20                 	db	32
   571  00FE36  74                 	db	116	;'t'
   572  00FE37  6F                 	db	111	;'o'
   573  00FE38  20                 	db	32
   574  00FE39  61                 	db	97	;'a'
   575  00FE3A  6E                 	db	110	;'n'
   576  00FE3B  20                 	db	32
   577  00FE3C  65                 	db	101	;'e'
   578  00FE3D  72                 	db	114	;'r'
   579  00FE3E  72                 	db	114	;'r'
   580  00FE3F  6F                 	db	111	;'o'
   581  00FE40  72                 	db	114	;'r'
   582  00FE41  20                 	db	32
   583  00FE42  20                 	db	32
   584  00FE43  00                 	db	0
   585  00FE44                     STR_19:
   586  00FE44  42                 	db	66	;'B'
   587  00FE45  61                 	db	97	;'a'
   588  00FE46  74                 	db	116	;'t'
   589  00FE47  74                 	db	116	;'t'
   590  00FE48  65                 	db	101	;'e'
   591  00FE49  72                 	db	114	;'r'
   592  00FE4A  79                 	db	121	;'y'
   593  00FE4B  20                 	db	32
   594  00FE4C  63                 	db	99	;'c'
   595  00FE4D  68                 	db	104	;'h'
   596  00FE4E  61                 	db	97	;'a'
   597  00FE4F  72                 	db	114	;'r'
   598  00FE50  67                 	db	103	;'g'
   599  00FE51  69                 	db	105	;'i'
   600  00FE52  6E                 	db	110	;'n'
   601  00FE53  67                 	db	103	;'g'
   602  00FE54  2E                 	db	46
   603  00FE55  2E                 	db	46
   604  00FE56  2E                 	db	46
   605  00FE57  20                 	db	32
   606  00FE58  00                 	db	0
   607  00FE59                     STR_24:
   608  00FE59  20                 	db	32
   609  00FE5A  75                 	db	117	;'u'
   610  00FE5B  6E                 	db	110	;'n'
   611  00FE5C  74                 	db	116	;'t'
   612  00FE5D  69                 	db	105	;'i'
   613  00FE5E  6C                 	db	108	;'l'
   614  00FE5F  20                 	db	32
   615  00FE60  6E                 	db	110	;'n'
   616  00FE61  65                 	db	101	;'e'
   617  00FE62  78                 	db	120	;'x'
   618  00FE63  74                 	db	116	;'t'
   619  00FE64  20                 	db	32
   620  00FE65  6D                 	db	109	;'m'
   621  00FE66  65                 	db	101	;'e'
   622  00FE67  73                 	db	115	;'s'
   623  00FE68  73                 	db	115	;'s'
   624  00FE69  61                 	db	97	;'a'
   625  00FE6A  67                 	db	103	;'g'
   626  00FE6B  65                 	db	101	;'e'
   627  00FE6C  20                 	db	32
   628  00FE6D  00                 	db	0
   629  00FE6E                     STR_27:
   630  00FE6E  50                 	db	80	;'P'
   631  00FE6F  72                 	db	114	;'r'
   632  00FE70  65                 	db	101	;'e'
   633  00FE71  73                 	db	115	;'s'
   634  00FE72  73                 	db	115	;'s'
   635  00FE73  20                 	db	32
   636  00FE74  74                 	db	116	;'t'
   637  00FE75  68                 	db	104	;'h'
   638  00FE76  65                 	db	101	;'e'
   639  00FE77  20                 	db	32
   640  00FE78  42                 	db	66	;'B'
   641  00FE79  55                 	db	85	;'U'
   642  00FE7A  54                 	db	84	;'T'
   643  00FE7B  54                 	db	84	;'T'
   644  00FE7C  4F                 	db	79	;'O'
   645  00FE7D  4E                 	db	78	;'N'
   646  00FE7E  20                 	db	32
   647  00FE7F  74                 	db	116	;'t'
   648  00FE80  6F                 	db	111	;'o'
   649  00FE81  20                 	db	32
   650  00FE82  00                 	db	0
   651  00FE83                     STR_45:
   652  00FE83  20                 	db	32
   653  00FE84  20                 	db	32
   654  00FE85  47                 	db	71	;'G'
   655  00FE86  69                 	db	105	;'i'
   656  00FE87  61                 	db	97	;'a'
   657  00FE88  6E                 	db	110	;'n'
   658  00FE89  6C                 	db	108	;'l'
   659  00FE8A  6F                 	db	111	;'o'
   660  00FE8B  72                 	db	114	;'r'
   661  00FE8C  65                 	db	101	;'e'
   662  00FE8D  6E                 	db	110	;'n'
   663  00FE8E  7A                 	db	122	;'z'
   664  00FE8F  6F                 	db	111	;'o'
   665  00FE90  20                 	db	32
   666  00FE91  4D                 	db	77	;'M'
   667  00FE92  6F                 	db	111	;'o'
   668  00FE93  73                 	db	115	;'s'
   669  00FE94  65                 	db	101	;'e'
   670  00FE95  72                 	db	114	;'r'
   671  00FE96  20                 	db	32
   672  00FE97  00                 	db	0
   673  00FE98                     STR_34:
   674  00FE98  20                 	db	32
   675  00FE99  50                 	db	80	;'P'
   676  00FE9A  61                 	db	97	;'a'
   677  00FE9B  72                 	db	114	;'r'
   678  00FE9C  6B                 	db	107	;'k'
   679  00FE9D  69                 	db	105	;'i'
   680  00FE9E  6E                 	db	110	;'n'
   681  00FE9F  67                 	db	103	;'g'
   682  00FEA0  20                 	db	32
   683  00FEA1  70                 	db	112	;'p'
   684  00FEA2  72                 	db	114	;'r'
   685  00FEA3  6F                 	db	111	;'o'
   686  00FEA4  63                 	db	99	;'c'
   687  00FEA5  65                 	db	101	;'e'
   688  00FEA6  64                 	db	100	;'d'
   689  00FEA7  75                 	db	117	;'u'
   690  00FEA8  72                 	db	114	;'r'
   691  00FEA9  65                 	db	101	;'e'
   692  00FEAA  73                 	db	115	;'s'
   693  00FEAB  20                 	db	32
   694  00FEAC  00                 	db	0
   695  00FEAD                     STR_26:
   696  00FEAD  2D                 	db	45
   697  00FEAE  20                 	db	32
   698  00FEAF  44                 	db	68	;'D'
   699  00FEB0  69                 	db	105	;'i'
   700  00FEB1  73                 	db	115	;'s'
   701  00FEB2  74                 	db	116	;'t'
   702  00FEB3  61                 	db	97	;'a'
   703  00FEB4  6E                 	db	110	;'n'
   704  00FEB5  63                 	db	99	;'c'
   705  00FEB6  65                 	db	101	;'e'
   706  00FEB7  20                 	db	32
   707  00FEB8  52                 	db	82	;'R'
   708  00FEB9  45                 	db	69	;'E'
   709  00FEBA  41                 	db	65	;'A'
   710  00FEBB  43                 	db	67	;'C'
   711  00FEBC  48                 	db	72	;'H'
   712  00FEBD  45                 	db	69	;'E'
   713  00FEBE  44                 	db	68	;'D'
   714  00FEBF  20                 	db	32
   715  00FEC0  2D                 	db	45
   716  00FEC1  00                 	db	0
   717  00FEC2                     STR_23:
   718  00FEC2  2D                 	db	45
   719  00FEC3  3E                 	db	62	;'>'
   720  00FEC4  20                 	db	32
   721  00FEC5  20                 	db	32
   722  00FEC6  4B                 	db	75	;'K'
   723  00FEC7  45                 	db	69	;'E'
   724  00FEC8  45                 	db	69	;'E'
   725  00FEC9  50                 	db	80	;'P'
   726  00FECA  20                 	db	32
   727  00FECB  4D                 	db	77	;'M'
   728  00FECC  4F                 	db	79	;'O'
   729  00FECD  56                 	db	86	;'V'
   730  00FECE  49                 	db	73	;'I'
   731  00FECF  4E                 	db	78	;'N'
   732  00FED0  47                 	db	71	;'G'
   733  00FED1  20                 	db	32
   734  00FED2  20                 	db	32
   735  00FED3  20                 	db	32
   736  00FED4  3C                 	db	60	;'<'
   737  00FED5  2D                 	db	45
   738  00FED6  00                 	db	0
   739  00FED7                     STR_15:
   740  00FED7  2D                 	db	45
   741  00FED8  3E                 	db	62	;'>'
   742  00FED9  20                 	db	32
   743  00FEDA  53                 	db	83	;'S'
   744  00FEDB  61                 	db	97	;'a'
   745  00FEDC  66                 	db	102	;'f'
   746  00FEDD  65                 	db	101	;'e'
   747  00FEDE  74                 	db	116	;'t'
   748  00FEDF  79                 	db	121	;'y'
   749  00FEE0  20                 	db	32
   750  00FEE1  62                 	db	98	;'b'
   751  00FEE2  72                 	db	114	;'r'
   752  00FEE3  61                 	db	97	;'a'
   753  00FEE4  6B                 	db	107	;'k'
   754  00FEE5  65                 	db	101	;'e'
   755  00FEE6  20                 	db	32
   756  00FEE7  4F                 	db	79	;'O'
   757  00FEE8  4E                 	db	78	;'N'
   758  00FEE9  3C                 	db	60	;'<'
   759  00FEEA  2D                 	db	45
   760  00FEEB  00                 	db	0
   761  00FEEC                     STR_30:
   762  00FEEC  3D                 	db	61	;'='
   763  00FEED  20                 	db	32
   764  00FEEE  20                 	db	32
   765  00FEEF  20                 	db	32
   766  00FEF0  20                 	db	32
   767  00FEF1  50                 	db	80	;'P'
   768  00FEF2  61                 	db	97	;'a'
   769  00FEF3  72                 	db	114	;'r'
   770  00FEF4  6B                 	db	107	;'k'
   771  00FEF5  69                 	db	105	;'i'
   772  00FEF6  6E                 	db	110	;'n'
   773  00FEF7  67                 	db	103	;'g'
   774  00FEF8  20                 	db	32
   775  00FEF9  69                 	db	105	;'i'
   776  00FEFA  6E                 	db	110	;'n'
   777  00FEFB  20                 	db	32
   778  00FEFC  20                 	db	32
   779  00FEFD  20                 	db	32
   780  00FEFE  20                 	db	32
   781  00FEFF  3D                 	db	61	;'='
   782  00FF00  00                 	db	0
   783  00FF01                     STR_31:
   784  00FF01  3D                 	db	61	;'='
   785  00FF02  20                 	db	32
   786  00FF03  20                 	db	32
   787  00FF04  20                 	db	32
   788  00FF05  20                 	db	32
   789  00FF06  70                 	db	112	;'p'
   790  00FF07  72                 	db	114	;'r'
   791  00FF08  6F                 	db	111	;'o'
   792  00FF09  67                 	db	103	;'g'
   793  00FF0A  72                 	db	114	;'r'
   794  00FF0B  65                 	db	101	;'e'
   795  00FF0C  73                 	db	115	;'s'
   796  00FF0D  73                 	db	115	;'s'
   797  00FF0E  2E                 	db	46
   798  00FF0F  2E                 	db	46
   799  00FF10  2E                 	db	46
   800  00FF11  20                 	db	32
   801  00FF12  20                 	db	32
   802  00FF13  20                 	db	32
   803  00FF14  3D                 	db	61	;'='
   804  00FF15  00                 	db	0
   805  00FF16                     STR_21:
   806  00FF16  3D                 	db	61	;'='
   807  00FF17  20                 	db	32
   808  00FF18  50                 	db	80	;'P'
   809  00FF19  41                 	db	65	;'A'
   810  00FF1A  52                 	db	82	;'R'
   811  00FF1B  4B                 	db	75	;'K'
   812  00FF1C  49                 	db	73	;'I'
   813  00FF1D  4E                 	db	78	;'N'
   814  00FF1E  47                 	db	71	;'G'
   815  00FF1F  20                 	db	32
   816  00FF20  4D                 	db	77	;'M'
   817  00FF21  45                 	db	69	;'E'
   818  00FF22  53                 	db	83	;'S'
   819  00FF23  53                 	db	83	;'S'
   820  00FF24  41                 	db	65	;'A'
   821  00FF25  47                 	db	71	;'G'
   822  00FF26  45                 	db	69	;'E'
   823  00FF27  53                 	db	83	;'S'
   824  00FF28  20                 	db	32
   825  00FF29  3D                 	db	61	;'='
   826  00FF2A  00                 	db	0
   827  00FF2B                     STR_43:
   828  00FF2B  3D                 	db	61	;'='
   829  00FF2C  3E                 	db	62	;'>'
   830  00FF2D  20                 	db	32
   831  00FF2E  20                 	db	32
   832  00FF2F  20                 	db	32
   833  00FF30  20                 	db	32
   834  00FF31  43                 	db	67	;'C'
   835  00FF32  52                 	db	82	;'R'
   836  00FF33  45                 	db	69	;'E'
   837  00FF34  44                 	db	68	;'D'
   838  00FF35  49                 	db	73	;'I'
   839  00FF36  54                 	db	84	;'T'
   840  00FF37  53                 	db	83	;'S'
   841  00FF38  21                 	db	33
   842  00FF39  20                 	db	32
   843  00FF3A  20                 	db	32
   844  00FF3B  20                 	db	32
   845  00FF3C  20                 	db	32
   846  00FF3D  3C                 	db	60	;'<'
   847  00FF3E  3D                 	db	61	;'='
   848  00FF3F  00                 	db	0
   849  00FF40                     STR_2:
   850  00FF40  3D                 	db	61	;'='
   851  00FF41  3D                 	db	61	;'='
   852  00FF42  3E                 	db	62	;'>'
   853  00FF43  20                 	db	32
   854  00FF44  56                 	db	86	;'V'
   855  00FF45  45                 	db	69	;'E'
   856  00FF46  48                 	db	72	;'H'
   857  00FF47  49                 	db	73	;'I'
   858  00FF48  43                 	db	67	;'C'
   859  00FF49  4C                 	db	76	;'L'
   860  00FF4A  45                 	db	69	;'E'
   861  00FF4B  20                 	db	32
   862  00FF4C  20                 	db	32
   863  00FF4D  4F                 	db	79	;'O'
   864  00FF4E  46                 	db	70	;'F'
   865  00FF4F  46                 	db	70	;'F'
   866  00FF50  20                 	db	32
   867  00FF51  3C                 	db	60	;'<'
   868  00FF52  3D                 	db	61	;'='
   869  00FF53  3D                 	db	61	;'='
   870  00FF54  00                 	db	0
   871  00FF55                     STR_6:
   872  00FF55  3D                 	db	61	;'='
   873  00FF56  3D                 	db	61	;'='
   874  00FF57  3D                 	db	61	;'='
   875  00FF58  20                 	db	32
   876  00FF59  56                 	db	86	;'V'
   877  00FF5A  45                 	db	69	;'E'
   878  00FF5B  48                 	db	72	;'H'
   879  00FF5C  49                 	db	73	;'I'
   880  00FF5D  43                 	db	67	;'C'
   881  00FF5E  4C                 	db	76	;'L'
   882  00FF5F  45                 	db	69	;'E'
   883  00FF60  20                 	db	32
   884  00FF61  44                 	db	68	;'D'
   885  00FF62  41                 	db	65	;'A'
   886  00FF63  54                 	db	84	;'T'
   887  00FF64  41                 	db	65	;'A'
   888  00FF65  20                 	db	32
   889  00FF66  3D                 	db	61	;'='
   890  00FF67  3D                 	db	61	;'='
   891  00FF68  3D                 	db	61	;'='
   892  00FF69  00                 	db	0
   893  00FF6A                     STR_1:
   894  00FF6A  3D                 	db	61	;'='
   895  00FF6B  3D                 	db	61	;'='
   896  00FF6C  3D                 	db	61	;'='
   897  00FF6D  3D                 	db	61	;'='
   898  00FF6E  3D                 	db	61	;'='
   899  00FF6F  3D                 	db	61	;'='
   900  00FF70  3D                 	db	61	;'='
   901  00FF71  3D                 	db	61	;'='
   902  00FF72  3D                 	db	61	;'='
   903  00FF73  3D                 	db	61	;'='
   904  00FF74  3D                 	db	61	;'='
   905  00FF75  3D                 	db	61	;'='
   906  00FF76  3D                 	db	61	;'='
   907  00FF77  3D                 	db	61	;'='
   908  00FF78  3D                 	db	61	;'='
   909  00FF79  3D                 	db	61	;'='
   910  00FF7A  3D                 	db	61	;'='
   911  00FF7B  3D                 	db	61	;'='
   912  00FF7C  3D                 	db	61	;'='
   913  00FF7D  3D                 	db	61	;'='
   914  00FF7E  00                 	db	0
   915  00FF7F                     STR_22:
   916  00FF7F  20                 	db	32
   917  00FF80  50                 	db	80	;'P'
   918  00FF81  61                 	db	97	;'a'
   919  00FF82  72                 	db	114	;'r'
   920  00FF83  6B                 	db	107	;'k'
   921  00FF84  69                 	db	105	;'i'
   922  00FF85  6E                 	db	110	;'n'
   923  00FF86  67                 	db	103	;'g'
   924  00FF87  20                 	db	32
   925  00FF88  73                 	db	115	;'s'
   926  00FF89  70                 	db	112	;'p'
   927  00FF8A  61                 	db	97	;'a'
   928  00FF8B  63                 	db	99	;'c'
   929  00FF8C  65                 	db	101	;'e'
   930  00FF8D  20                 	db	32
   931  00FF8E  46                 	db	70	;'F'
   932  00FF8F  4F                 	db	79	;'O'
   933  00FF90  55                 	db	85	;'U'
   934  00FF91  4E                 	db	78	;'N'
   935  00FF92  44                 	db	68	;'D'
   936  00FF93  00                 	db	0
   937  00FF94                     STR_20:
   938  00FF94  5B                 	db	91	;'['
   939  00FF95  21                 	db	33
   940  00FF96  5D                 	db	93	;']'
   941  00FF97  20                 	db	32
   942  00FF98  20                 	db	32
   943  00FF99  4C                 	db	76	;'L'
   944  00FF9A  6F                 	db	111	;'o'
   945  00FF9B  77                 	db	119	;'w'
   946  00FF9C  20                 	db	32
   947  00FF9D  62                 	db	98	;'b'
   948  00FF9E  61                 	db	97	;'a'
   949  00FF9F  74                 	db	116	;'t'
   950  00FFA0  74                 	db	116	;'t'
   951  00FFA1  65                 	db	101	;'e'
   952  00FFA2  72                 	db	114	;'r'
   953  00FFA3  79                 	db	121	;'y'
   954  00FFA4  20                 	db	32
   955  00FFA5  5B                 	db	91	;'['
   956  00FFA6  21                 	db	33
   957  00FFA7  5D                 	db	93	;']'
   958  00FFA8  00                 	db	0
   959  00FFA9                     STR_8:
   960  00FFA9  53                 	db	83	;'S'
   961  00FFAA  70                 	db	112	;'p'
   962  00FFAB  65                 	db	101	;'e'
   963  00FFAC  65                 	db	101	;'e'
   964  00FFAD  64                 	db	100	;'d'
   965  00FFAE  3A                 	db	58	;':'
   966  00FFAF  20                 	db	32
   967  00FFB0  30                 	db	48	;'0'
   968  00FFB1  2E                 	db	46
   969  00FFB2  30                 	db	48	;'0'
   970  00FFB3  30                 	db	48	;'0'
   971  00FFB4  20                 	db	32
   972  00FFB5  4B                 	db	75	;'K'
   973  00FFB6  6D                 	db	109	;'m'
   974  00FFB7  2F                 	db	47
   975  00FFB8  68                 	db	104	;'h'
   976  00FFB9  00                 	db	0
   977  00FFBA                     STR_9:
   978  00FFBA  50                 	db	80	;'P'
   979  00FFBB  61                 	db	97	;'a'
   980  00FFBC  72                 	db	114	;'r'
   981  00FFBD  6B                 	db	107	;'k'
   982  00FFBE  20                 	db	32
   983  00FFBF  61                 	db	97	;'a'
   984  00FFC0  73                 	db	115	;'s'
   985  00FFC1  73                 	db	115	;'s'
   986  00FFC2  69                 	db	105	;'i'
   987  00FFC3  73                 	db	115	;'s'
   988  00FFC4  74                 	db	116	;'t'
   989  00FFC5  3A                 	db	58	;':'
   990  00FFC6  20                 	db	32
   991  00FFC7  00                 	db	0
   992  00FFC8                     STR_7:
   993  00FFC8  44                 	db	68	;'D'
   994  00FFC9  69                 	db	105	;'i'
   995  00FFCA  72                 	db	114	;'r'
   996  00FFCB  65                 	db	101	;'e'
   997  00FFCC  63                 	db	99	;'c'
   998  00FFCD  74                 	db	116	;'t'
   999  00FFCE  69                 	db	105	;'i'
  1000  00FFCF  6F                 	db	111	;'o'
  1001  00FFD0  6E                 	db	110	;'n'
  1002  00FFD1  3A                 	db	58	;':'
  1003  00FFD2  20                 	db	32
  1004  00FFD3  00                 	db	0
  1005  00FFD4                     STR_17:
  1006  00FFD4  4F                 	db	79	;'O'
  1007  00FFD5  46                 	db	70	;'F'
  1008  00FFD6  46                 	db	70	;'F'
  1009  00FFD7  20                 	db	32
  1010  00FFD8  20                 	db	32
  1011  00FFD9  20                 	db	32
  1012  00FFDA  20                 	db	32
  1013  00FFDB  00                 	db	0
  1014  00FFDC                     STR_18:
  1015  00FFDC  53                 	db	83	;'S'
  1016  00FFDD  45                 	db	69	;'E'
  1017  00FFDE  41                 	db	65	;'A'
  1018  00FFDF  52                 	db	82	;'R'
  1019  00FFE0  43                 	db	67	;'C'
  1020  00FFE1  48                 	db	72	;'H'
  1021  00FFE2  20                 	db	32
  1022  00FFE3  00                 	db	0
  1023  00FFE4                     STR_10:
  1024  00FFE4  44                 	db	68	;'D'
  1025  00FFE5  61                 	db	97	;'a'
  1026  00FFE6  74                 	db	116	;'t'
  1027  00FFE7  61                 	db	97	;'a'
  1028  00FFE8  3A                 	db	58	;':'
  1029  00FFE9  20                 	db	32
  1030  00FFEA  00                 	db	0
  1031  00FFEB                     STR_14:
  1032  00FFEB  50                 	db	80	;'P'
  1033  00FFEC  20                 	db	32
  1034  00FFED  20                 	db	32
  1035  00FFEE  20                 	db	32
  1036  00FFEF  00                 	db	0
  1037  00FFF0                     STR_12:
  1038  00FFF0  46                 	db	70	;'F'
  1039  00FFF1  57                 	db	87	;'W'
  1040  00FFF2  44                 	db	68	;'D'
  1041  00FFF3  20                 	db	32
  1042  00FFF4  00                 	db	0
  1043  00FFF5                     STR_13:
  1044  00FFF5  42                 	db	66	;'B'
  1045  00FFF6  4B                 	db	75	;'K'
  1046  00FFF7  57                 	db	87	;'W'
  1047  00FFF8  44                 	db	68	;'D'
  1048  00FFF9  00                 	db	0
  1049  00FFFA                     STR_5:
  1050  00FFFA  25                 	db	37
  1051  00FFFB  2E                 	db	46
  1052  00FFFC  32                 	db	50	;'2'
  1053  00FFFD  66                 	db	102	;'f'
  1054  00FFFE  00                 	db	0
  1055  0000                     
  1056                           ; #config settings
  1057  00FFFF  00                 	db	0	; dummy byte at the end
  1058  0000                     
  1059                           	psect	cinit
  1060  01658E                     __pcinit:
  1061                           	opt stack 0
  1062  01658E                     start_initialization:
  1063                           	opt stack 0
  1064  01658E                     __initialization:
  1065                           	opt stack 0
  1066                           
  1067                           ; Clear objects allocated to BANK1 (77 bytes)
  1068  01658E  EE01  F000         	lfsr	0,__pbssBANK1
  1069  016592  0E4D               	movlw	77
  1070  016594                     clear_0:
  1071  016594  6AEE               	clrf	postinc0,c
  1072  016596  06E8               	decf	wreg,f,c
  1073  016598  E1FD               	bnz	clear_0
  1074                           
  1075                           ; Clear objects allocated to BANK0 (31 bytes)
  1076  01659A  EE00  F0CD         	lfsr	0,__pbssBANK0
  1077  01659E  0E1F               	movlw	31
  1078  0165A0                     clear_1:
  1079  0165A0  6AEE               	clrf	postinc0,c
  1080  0165A2  06E8               	decf	wreg,f,c
  1081  0165A4  E1FD               	bnz	clear_1
  1082                           
  1083                           ; Clear objects allocated to BITCOMRAM (3 bytes)
  1084  0165A6  6A4A               	clrf	((__pbitbssCOMRAM/(0+8)+2))& (0+255),c
  1085  0165A8  6A49               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
  1086  0165AA  6A48               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  1087                           
  1088                           ; Clear objects allocated to COMRAM (37 bytes)
  1089  0165AC  EE00  F001         	lfsr	0,__pbssCOMRAM
  1090  0165B0  0E25               	movlw	37
  1091  0165B2                     clear_2:
  1092  0165B2  6AEE               	clrf	postinc0,c
  1093  0165B4  06E8               	decf	wreg,f,c
  1094  0165B6  E1FD               	bnz	clear_2
  1095                           
  1096                           ; Initialize objects allocated to BANK0 (1 bytes)
  1097                           ; load TBLPTR registers with __pidataBANK0
  1098  0165B8  0EA8               	movlw	low __pidataBANK0
  1099  0165BA  6EF6               	movwf	tblptrl,c
  1100  0165BC  0E68               	movlw	high __pidataBANK0
  1101  0165BE  6EF7               	movwf	tblptrh,c
  1102  0165C0  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1103  0165C2  6EF8               	movwf	tblptru,c
  1104  0165C4  0009               	tblrd		*+	;fetch initializer
  1105  0165C6  CFF5 F0EC          	movff	tablat,__pdataBANK0
  1106  0165CA                     end_of_initialization:
  1107                           	opt stack 0
  1108  0165CA                     __end_of__initialization:
  1109                           	opt stack 0
  1110  0165CA  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1111  0165CC  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1112  0165CE  0100               	movlb	0
  1113  0165D0  EF83  F085         	goto	_main	;jump to C main() function
  1114                           tblptru	equ	0xFF8
  1115                           tblptrh	equ	0xFF7
  1116                           tblptrl	equ	0xFF6
  1117                           tablat	equ	0xFF5
  1118                           postinc0	equ	0xFEE
  1119                           wreg	equ	0xFE8
  1120                           
  1121                           	psect	bitbssCOMRAM
  1122  000240                     __pbitbssCOMRAM:
  1123                           	opt stack 0
  1124  000240                     _Can_Tx_Force:
  1125                           	opt stack 0
  1126  000240                     	ds	1
  1127  000241                     _F1_switch:
  1128                           	opt stack 0
  1129  000241                     	ds	1
  1130  000242                     _F2_switch:
  1131                           	opt stack 0
  1132  000242                     	ds	1
  1133  000243                     _LCD_4TH_ROW_MODE:
  1134                           	opt stack 0
  1135  000243                     	ds	1
  1136  000244                     _RTR_Flag:
  1137                           	opt stack 0
  1138  000244                     	ds	1
  1139  000245                     _battery_charging:
  1140                           	opt stack 0
  1141  000245                     	ds	1
  1142  000246                     _collision_msg:
  1143                           	opt stack 0
  1144  000246                     	ds	1
  1145  000247                     _display_refresh:
  1146                           	opt stack 0
  1147  000247                     	ds	1
  1148  000248                     _low_battery:
  1149                           	opt stack 0
  1150  000248                     	ds	1
  1151  000249                     _parking_error:
  1152                           	opt stack 0
  1153  000249                     	ds	1
  1154  00024A                     _parking_message_E:
  1155                           	opt stack 0
  1156  00024A                     	ds	1
  1157  00024B                     _power_switch:
  1158                           	opt stack 0
  1159  00024B                     	ds	1
  1160  00024C                     _pwr_credits:
  1161                           	opt stack 0
  1162  00024C                     	ds	1
  1163  00024D                     _row_refresh:
  1164                           	opt stack 0
  1165  00024D                     	ds	1
  1166  00024E                     _space_available:
  1167                           	opt stack 0
  1168  00024E                     	ds	1
  1169  00024F                     _space_gap_reached:
  1170                           	opt stack 0
  1171  00024F                     	ds	1
  1172  000250                     _steering_correction_dir:
  1173                           	opt stack 0
  1174  000250                     	ds	1
  1175  000251                     _user_stop:
  1176                           	opt stack 0
  1177  000251                     	ds	1
  1178  000252                     _wait_low_1:
  1179                           	opt stack 0
  1180  000252                     	ds	1
  1181  000253                     _wait_low_2:
  1182                           	opt stack 0
  1183  000253                     	ds	1
  1184  000254                     _wait_low_3:
  1185                           	opt stack 0
  1186  000254                     	ds	1
  1187  000255                     _x:
  1188                           	opt stack 0
  1189  000255                     	ds	1
  1190  000256                     _y:
  1191                           	opt stack 0
  1192  000256                     	ds	1
  1193  000257                     _z:
  1194                           	opt stack 0
  1195  000257                     	ds	1
  1196                           tblptru	equ	0xFF8
  1197                           tblptrh	equ	0xFF7
  1198                           tblptrl	equ	0xFF6
  1199                           tablat	equ	0xFF5
  1200                           postinc0	equ	0xFEE
  1201                           wreg	equ	0xFE8
  1202                           
  1203                           	psect	bssCOMRAM
  1204  000001                     __pbssCOMRAM:
  1205                           	opt stack 0
  1206  000001                     _actual_speed_kmh:
  1207                           	opt stack 0
  1208  000001                     	ds	4
  1209  000005                     _id:
  1210                           	opt stack 0
  1211  000005                     	ds	4
  1212  000009                     _pr_time_2:
  1213                           	opt stack 0
  1214  000009                     	ds	4
  1215  00000D                     _pr_time_3:
  1216                           	opt stack 0
  1217  00000D                     	ds	4
  1218  000011                     _pr_time_5:
  1219                           	opt stack 0
  1220  000011                     	ds	4
  1221  000015                     _pr_time_6:
  1222                           	opt stack 0
  1223  000015                     	ds	4
  1224  000019                     _time_counter:
  1225                           	opt stack 0
  1226  000019                     	ds	4
  1227  00001D                     _collision_sensor_distance:
  1228                           	opt stack 0
  1229  00001D                     	ds	2
  1230  00001F                     _left_speed:
  1231                           	opt stack 0
  1232  00001F                     	ds	2
  1233  000021                     _right_speed:
  1234                           	opt stack 0
  1235  000021                     	ds	2
  1236  000023                     _user_data:
  1237                           	opt stack 0
  1238  000023                     	ds	2
  1239  000025                     _set_steering:
  1240                           	opt stack 0
  1241  000025                     	ds	1
  1242                           tblptru	equ	0xFF8
  1243                           tblptrh	equ	0xFF7
  1244                           tblptrl	equ	0xFF6
  1245                           tablat	equ	0xFF5
  1246                           postinc0	equ	0xFEE
  1247                           wreg	equ	0xFE8
  1248                           
  1249                           	psect	bssBANK0
  1250  0000CD                     __pbssBANK0:
  1251                           	opt stack 0
  1252  0000CD                     _JoystickConstants:
  1253                           	opt stack 0
  1254  0000CD                     	ds	8
  1255  0000D5                     _check:
  1256                           	opt stack 0
  1257  0000D5                     	ds	4
  1258  0000D9                     _pr_time_1:
  1259                           	opt stack 0
  1260  0000D9                     	ds	4
  1261  0000DD                     _JoystickValues:
  1262                           	opt stack 0
  1263  0000DD                     	ds	2
  1264  0000DF                     _actual_speed:
  1265                           	opt stack 0
  1266  0000DF                     	ds	2
  1267  0000E1                     _clock_counter_reference:
  1268                           	opt stack 0
  1269  0000E1                     	ds	2
  1270  0000E3                     _set_speed:
  1271                           	opt stack 0
  1272  0000E3                     	ds	2
  1273  0000E5                     _center_value_Y:
  1274                           	opt stack 0
  1275  0000E5                     	ds	1
  1276  0000E6                     _collision_risk_value:
  1277                           	opt stack 0
  1278  0000E6                     	ds	1
  1279  0000E7                     _dir:
  1280                           	opt stack 0
  1281  0000E7                     	ds	1
  1282  0000E8                     _parking_message_ID:
  1283                           	opt stack 0
  1284  0000E8                     	ds	1
  1285  0000E9                     _parking_state:
  1286                           	opt stack 0
  1287  0000E9                     	ds	1
  1288  0000EA                     _steering_correction:
  1289                           	opt stack 0
  1290  0000EA                     	ds	1
  1291  0000EB                     _switch_position:
  1292                           	opt stack 0
  1293  0000EB                     	ds	1
  1294                           tblptru	equ	0xFF8
  1295                           tblptrh	equ	0xFF7
  1296                           tblptrl	equ	0xFF6
  1297                           tablat	equ	0xFF5
  1298                           postinc0	equ	0xFEE
  1299                           wreg	equ	0xFE8
  1300                           
  1301                           	psect	dataBANK0
  1302  0000EC                     __pdataBANK0:
  1303                           	opt stack 0
  1304  0000EC                     _delay_quartz_frequency_value:
  1305                           	opt stack 0
  1306  0000EC                     	ds	1
  1307                           tblptru	equ	0xFF8
  1308                           tblptrh	equ	0xFF7
  1309                           tblptrl	equ	0xFF6
  1310                           tablat	equ	0xFF5
  1311                           postinc0	equ	0xFEE
  1312                           wreg	equ	0xFE8
  1313                           
  1314                           	psect	bssBANK1
  1315  000100                     __pbssBANK1:
  1316                           	opt stack 0
  1317  000100                     LCD_write_integer@F17134:
  1318                           	opt stack 0
  1319  000100                     	ds	6
  1320  000106                     _pr_time_4:
  1321                           	opt stack 0
  1322  000106                     	ds	4
  1323  00010A                     _msg:
  1324                           	opt stack 0
  1325  00010A                     	ds	15
  1326  000119                     _str:
  1327                           	opt stack 0
  1328  000119                     	ds	12
  1329  000125                     _data:
  1330                           	opt stack 0
  1331  000125                     	ds	8
  1332  00012D                     _data_brake:
  1333                           	opt stack 0
  1334  00012D                     	ds	8
  1335  000135                     _data_speed:
  1336                           	opt stack 0
  1337  000135                     	ds	8
  1338  00013D                     _data_steering:
  1339                           	opt stack 0
  1340  00013D                     	ds	8
  1341  000145                     _park_assist_state:
  1342                           	opt stack 0
  1343  000145                     	ds	8
  1344                           tblptru	equ	0xFF8
  1345                           tblptrh	equ	0xFF7
  1346                           tblptrl	equ	0xFF6
  1347                           tablat	equ	0xFF5
  1348                           postinc0	equ	0xFEE
  1349                           wreg	equ	0xFE8
  1350                           
  1351                           	psect	cstackBANK1
  1352  00014D                     __pcstackBANK1:
  1353                           	opt stack 0
  1354  00014D                     _sprintf$4194:
  1355                           	opt stack 0
  1356                           
  1357                           ; 4 bytes @ 0x0
  1358  00014D                     	ds	4
  1359  000151                     sprintf@ap:
  1360                           	opt stack 0
  1361                           
  1362                           ; 2 bytes @ 0x4
  1363  000151                     	ds	2
  1364  000153                     sprintf@flag:
  1365                           	opt stack 0
  1366                           
  1367                           ; 2 bytes @ 0x6
  1368  000153                     	ds	2
  1369  000155                     sprintf@val:
  1370                           	opt stack 0
  1371                           
  1372                           ; 4 bytes @ 0x8
  1373  000155                     	ds	4
  1374  000159                     sprintf@exp:
  1375                           	opt stack 0
  1376                           
  1377                           ; 2 bytes @ 0xC
  1378  000159                     	ds	2
  1379  00015B                     sprintf@tmpval:
  1380                           	opt stack 0
  1381                           
  1382                           ; 4 bytes @ 0xE
  1383  00015B                     	ds	4
  1384  00015F                     sprintf@prec:
  1385                           	opt stack 0
  1386                           
  1387                           ; 2 bytes @ 0x12
  1388  00015F                     	ds	2
  1389  000161                     sprintf@fval:
  1390                           	opt stack 0
  1391                           
  1392                           ; 4 bytes @ 0x14
  1393  000161                     	ds	4
  1394  000165                     sprintf@c:
  1395                           	opt stack 0
  1396                           
  1397                           ; 1 bytes @ 0x18
  1398  000165                     	ds	1
  1399  000166                     ??_main:
  1400                           
  1401                           ; 1 bytes @ 0x19
  1402  000166                     	ds	8
  1403                           tblptru	equ	0xFF8
  1404                           tblptrh	equ	0xFF7
  1405                           tblptrl	equ	0xFF6
  1406                           tablat	equ	0xFF5
  1407                           postinc0	equ	0xFEE
  1408                           wreg	equ	0xFE8
  1409                           
  1410                           	psect	cstackBANK0
  1411  000060                     __pcstackBANK0:
  1412                           	opt stack 0
  1413  000060                     ??_ISR_bassa:
  1414                           
  1415                           ; 1 bytes @ 0x0
  1416  000060                     	ds	17
  1417  000071                     ??_Joystick_Polling:
  1418  000071                     ??_isdigit:
  1419  000071                     ?___wmul:
  1420                           	opt stack 0
  1421  000071                     ?___awmod:
  1422                           	opt stack 0
  1423  000071                     ?___lwdiv:
  1424                           	opt stack 0
  1425  000071                     ?___lwmod:
  1426                           	opt stack 0
  1427  000071                     ?__tdiv_to_l_:
  1428                           	opt stack 0
  1429  000071                     ?__div_to_l_:
  1430                           	opt stack 0
  1431  000071                     ?___lldiv:
  1432                           	opt stack 0
  1433  000071                     ?___llmod:
  1434                           	opt stack 0
  1435  000071                     ?___xxtofl:
  1436                           	opt stack 0
  1437  000071                     CANOperationMode@mode:
  1438                           	opt stack 0
  1439  000071                     _CANisTxReady$3168:
  1440                           	opt stack 0
  1441  000071                     delay_set_quartz@frequency:
  1442                           	opt stack 0
  1443  000071                     ___wmul@multiplier:
  1444                           	opt stack 0
  1445  000071                     ___awmod@dividend:
  1446                           	opt stack 0
  1447  000071                     ___lwdiv@dividend:
  1448                           	opt stack 0
  1449  000071                     ___lwmod@dividend:
  1450                           	opt stack 0
  1451  000071                     CANsendMessage@identifier:
  1452                           	opt stack 0
  1453  000071                     CANSetMask@mask:
  1454                           	opt stack 0
  1455  000071                     CANSetFilter@filter:
  1456                           	opt stack 0
  1457  000071                     __div_to_l_@f1:
  1458                           	opt stack 0
  1459  000071                     ___flge@ff1:
  1460                           	opt stack 0
  1461  000071                     __tdiv_to_l_@f1:
  1462                           	opt stack 0
  1463  000071                     ___lldiv@dividend:
  1464                           	opt stack 0
  1465  000071                     ___llmod@dividend:
  1466                           	opt stack 0
  1467  000071                     ___xxtofl@val:
  1468                           	opt stack 0
  1469                           
  1470                           ; 4 bytes @ 0x11
  1471  000071                     	ds	1
  1472  000072                     Joystick_Polling@i:
  1473                           	opt stack 0
  1474  000072                     _isdigit$3774:
  1475                           	opt stack 0
  1476                           
  1477                           ; 1 bytes @ 0x12
  1478  000072                     	ds	1
  1479  000073                     isdigit@c:
  1480                           	opt stack 0
  1481  000073                     ___wmul@multiplicand:
  1482                           	opt stack 0
  1483  000073                     ___awmod@divisor:
  1484                           	opt stack 0
  1485  000073                     ___lwdiv@divisor:
  1486                           	opt stack 0
  1487  000073                     ___lwmod@divisor:
  1488                           	opt stack 0
  1489                           
  1490                           ; 2 bytes @ 0x13
  1491  000073                     	ds	2
  1492  000075                     ??___xxtofl:
  1493  000075                     CANSetMask@type:
  1494                           	opt stack 0
  1495  000075                     CANSetFilter@type:
  1496                           	opt stack 0
  1497  000075                     ___awmod@counter:
  1498                           	opt stack 0
  1499  000075                     ___lwmod@counter:
  1500                           	opt stack 0
  1501  000075                     CANsendMessage@data:
  1502                           	opt stack 0
  1503  000075                     ___wmul@product:
  1504                           	opt stack 0
  1505  000075                     ___lwdiv@quotient:
  1506                           	opt stack 0
  1507  000075                     __div_to_l_@f2:
  1508                           	opt stack 0
  1509  000075                     ___flge@ff2:
  1510                           	opt stack 0
  1511  000075                     __tdiv_to_l_@f2:
  1512                           	opt stack 0
  1513  000075                     ___lldiv@divisor:
  1514                           	opt stack 0
  1515  000075                     ___llmod@divisor:
  1516                           	opt stack 0
  1517                           
  1518                           ; 4 bytes @ 0x15
  1519  000075                     	ds	1
  1520  000076                     ??_CANSetMask:
  1521  000076                     ??_CANSetFilter:
  1522  000076                     ___awmod@sign:
  1523                           	opt stack 0
  1524                           
  1525                           ; 1 bytes @ 0x16
  1526  000076                     	ds	1
  1527  000077                     ?___awdiv:
  1528                           	opt stack 0
  1529  000077                     CANsendMessage@dataLength:
  1530                           	opt stack 0
  1531  000077                     ___lwdiv@counter:
  1532                           	opt stack 0
  1533  000077                     delay_ms@value_ms:
  1534                           	opt stack 0
  1535  000077                     ___awdiv@dividend:
  1536                           	opt stack 0
  1537                           
  1538                           ; 2 bytes @ 0x17
  1539  000077                     	ds	1
  1540  000078                     CANsendMessage@flags:
  1541                           	opt stack 0
  1542  000078                     utoa@buf:
  1543                           	opt stack 0
  1544                           
  1545                           ; 2 bytes @ 0x18
  1546  000078                     	ds	1
  1547  000079                     ??__tdiv_to_l_:
  1548  000079                     ??_CANsendMessage:
  1549  000079                     ??___flge:
  1550  000079                     LCD_send_command@D2:
  1551                           	opt stack 0
  1552  000079                     ___llmod@counter:
  1553                           	opt stack 0
  1554  000079                     ___xxtofl@sign:
  1555                           	opt stack 0
  1556  000079                     ___awdiv@divisor:
  1557                           	opt stack 0
  1558  000079                     __div_to_l_@quot:
  1559                           	opt stack 0
  1560  000079                     ___lldiv@quotient:
  1561                           	opt stack 0
  1562                           
  1563                           ; 4 bytes @ 0x19
  1564  000079                     	ds	1
  1565  00007A                     CANSetMask@numBuffer:
  1566                           	opt stack 0
  1567  00007A                     CANSetFilter@numBuffer:
  1568                           	opt stack 0
  1569  00007A                     LCD_send_command@D1:
  1570                           	opt stack 0
  1571  00007A                     ___xxtofl@exp:
  1572                           	opt stack 0
  1573  00007A                     utoa@val:
  1574                           	opt stack 0
  1575                           
  1576                           ; 2 bytes @ 0x1A
  1577  00007A                     	ds	1
  1578  00007B                     LCD_send_command@D0:
  1579                           	opt stack 0
  1580  00007B                     ___awdiv@counter:
  1581                           	opt stack 0
  1582  00007B                     CANSetMask@tamp:
  1583                           	opt stack 0
  1584  00007B                     CANSetFilter@tamp:
  1585                           	opt stack 0
  1586  00007B                     ___xxtofl@arg:
  1587                           	opt stack 0
  1588                           
  1589                           ; 4 bytes @ 0x1B
  1590  00007B                     	ds	1
  1591  00007C                     LCD_send_command@D3:
  1592                           	opt stack 0
  1593  00007C                     ___awdiv@sign:
  1594                           	opt stack 0
  1595  00007C                     utoa@base:
  1596                           	opt stack 0
  1597  00007C                     __tdiv_to_l_@quot:
  1598                           	opt stack 0
  1599                           
  1600                           ; 4 bytes @ 0x1C
  1601  00007C                     	ds	1
  1602  00007D                     LCD_shift_cursor@number_of_shift:
  1603                           	opt stack 0
  1604  00007D                     LCD_goto_line@line:
  1605                           	opt stack 0
  1606  00007D                     LCD_write_char@D3:
  1607                           	opt stack 0
  1608  00007D                     LCD_cursor@blinking:
  1609                           	opt stack 0
  1610  00007D                     __div_to_l_@cntr:
  1611                           	opt stack 0
  1612  00007D                     ___lldiv@counter:
  1613                           	opt stack 0
  1614  00007D                     ___awdiv@quotient:
  1615                           	opt stack 0
  1616  00007D                     CANsendMessage@tamp:
  1617                           	opt stack 0
  1618                           
  1619                           ; 4 bytes @ 0x1D
  1620  00007D                     	ds	1
  1621  00007E                     LCD_shift_cursor@shift:
  1622                           	opt stack 0
  1623  00007E                     LCD_write_char@D2:
  1624                           	opt stack 0
  1625  00007E                     LCD_cursor@active:
  1626                           	opt stack 0
  1627  00007E                     __div_to_l_@exp1:
  1628                           	opt stack 0
  1629  00007E                     utoa@v:
  1630                           	opt stack 0
  1631                           
  1632                           ; 2 bytes @ 0x1E
  1633  00007E                     	ds	1
  1634  00007F                     ?___fldiv:
  1635                           	opt stack 0
  1636  00007F                     ?___flmul:
  1637                           	opt stack 0
  1638  00007F                     CANInitialize@phaseSeg1:
  1639                           	opt stack 0
  1640  00007F                     LCD_shift_cursor@i:
  1641                           	opt stack 0
  1642  00007F                     LCD_write_char@D1:
  1643                           	opt stack 0
  1644  00007F                     LCD_initialize@quartz_frequency:
  1645                           	opt stack 0
  1646  00007F                     ___fldiv@b:
  1647                           	opt stack 0
  1648  00007F                     ___flmul@b:
  1649                           	opt stack 0
  1650                           
  1651                           ; 4 bytes @ 0x1F
  1652  00007F                     	ds	1
  1653  000080                     CANInitialize@phaseSeg2:
  1654                           	opt stack 0
  1655  000080                     LCD_goto_xy@y:
  1656                           	opt stack 0
  1657  000080                     LCD_write_char@D0:
  1658                           	opt stack 0
  1659  000080                     __tdiv_to_l_@cntr:
  1660                           	opt stack 0
  1661  000080                     utoa@c:
  1662                           	opt stack 0
  1663                           
  1664                           ; 1 bytes @ 0x20
  1665  000080                     	ds	1
  1666  000081                     CANInitialize@SJW:
  1667                           	opt stack 0
  1668  000081                     LCD_goto_xy@x:
  1669                           	opt stack 0
  1670  000081                     LCD_write_char@value:
  1671                           	opt stack 0
  1672  000081                     __tdiv_to_l_@exp1:
  1673                           	opt stack 0
  1674  000081                     itoa@buf:
  1675                           	opt stack 0
  1676                           
  1677                           ; 2 bytes @ 0x21
  1678  000081                     	ds	1
  1679  000082                     CANInitialize@BRP:
  1680                           	opt stack 0
  1681  000082                     LCD_write_message@buffer:
  1682                           	opt stack 0
  1683  000082                     LCD_write_string@buffer:
  1684                           	opt stack 0
  1685                           
  1686                           ; 2 bytes @ 0x22
  1687  000082                     	ds	1
  1688  000083                     CANInitialize@flags:
  1689                           	opt stack 0
  1690  000083                     itoa@val:
  1691                           	opt stack 0
  1692  000083                     ___fldiv@a:
  1693                           	opt stack 0
  1694  000083                     ___flmul@a:
  1695                           	opt stack 0
  1696                           
  1697                           ; 4 bytes @ 0x23
  1698  000083                     	ds	1
  1699  000084                     ??_CANInitialize:
  1700  000084                     
  1701                           ; 1 bytes @ 0x24
  1702  000084                     	ds	1
  1703  000085                     itoa@base:
  1704                           	opt stack 0
  1705                           
  1706                           ; 2 bytes @ 0x25
  1707  000085                     	ds	2
  1708  000087                     ??___fldiv:
  1709  000087                     ??___flmul:
  1710  000087                     itoa@cp:
  1711                           	opt stack 0
  1712                           
  1713                           ; 2 bytes @ 0x27
  1714  000087                     	ds	1
  1715  000088                     CANInitialize@propSeg:
  1716                           	opt stack 0
  1717                           
  1718                           ; 1 bytes @ 0x28
  1719  000088                     	ds	1
  1720  000089                     CANInitialize@FilterConfig1:
  1721                           	opt stack 0
  1722  000089                     LCD_write_integer@value:
  1723                           	opt stack 0
  1724                           
  1725                           ; 2 bytes @ 0x29
  1726  000089                     	ds	1
  1727  00008A                     CANInitialize@FilterConfig2:
  1728                           	opt stack 0
  1729                           
  1730                           ; 1 bytes @ 0x2A
  1731  00008A                     	ds	1
  1732  00008B                     LCD_write_integer@number_of_digits:
  1733                           	opt stack 0
  1734  00008B                     ___fldiv@sign:
  1735                           	opt stack 0
  1736  00008B                     ___flmul@sign:
  1737                           	opt stack 0
  1738                           
  1739                           ; 1 bytes @ 0x2B
  1740  00008B                     	ds	1
  1741  00008C                     LCD_write_integer@zero_cleaning:
  1742                           	opt stack 0
  1743  00008C                     ___flmul@aexp:
  1744                           	opt stack 0
  1745  00008C                     ___fldiv@rem:
  1746                           	opt stack 0
  1747                           
  1748                           ; 4 bytes @ 0x2C
  1749  00008C                     	ds	1
  1750  00008D                     ??_LCD_write_integer:
  1751  00008D                     ___flmul@grs:
  1752                           	opt stack 0
  1753                           
  1754                           ; 4 bytes @ 0x2D
  1755  00008D                     	ds	3
  1756  000090                     ___fldiv@new_exp:
  1757                           	opt stack 0
  1758                           
  1759                           ; 2 bytes @ 0x30
  1760  000090                     	ds	1
  1761  000091                     ___flmul@bexp:
  1762                           	opt stack 0
  1763                           
  1764                           ; 1 bytes @ 0x31
  1765  000091                     	ds	1
  1766  000092                     ___fldiv@grs:
  1767                           	opt stack 0
  1768  000092                     ___flmul@prod:
  1769                           	opt stack 0
  1770  000092                     LCD_write_integer@convertedInt:
  1771                           	opt stack 0
  1772                           
  1773                           ; 6 bytes @ 0x32
  1774  000092                     	ds	4
  1775  000096                     ___fldiv@bexp:
  1776                           	opt stack 0
  1777  000096                     ___flmul@temp:
  1778                           	opt stack 0
  1779                           
  1780                           ; 2 bytes @ 0x36
  1781  000096                     	ds	1
  1782  000097                     ___fldiv@aexp:
  1783                           	opt stack 0
  1784                           
  1785                           ; 1 bytes @ 0x37
  1786  000097                     	ds	1
  1787  000098                     ?_fround:
  1788                           	opt stack 0
  1789  000098                     ?_scale:
  1790                           	opt stack 0
  1791  000098                     ?___flneg:
  1792                           	opt stack 0
  1793  000098                     LCD_write_integer@index:
  1794                           	opt stack 0
  1795  000098                     ___flneg@f1:
  1796                           	opt stack 0
  1797                           
  1798                           ; 4 bytes @ 0x38
  1799  000098                     	ds	4
  1800  00009C                     _fround$4192:
  1801                           	opt stack 0
  1802  00009C                     _scale$4193:
  1803                           	opt stack 0
  1804                           
  1805                           ; 4 bytes @ 0x3C
  1806  00009C                     	ds	4
  1807  0000A0                     scale@scl:
  1808                           	opt stack 0
  1809  0000A0                     _fround$4191:
  1810                           	opt stack 0
  1811                           
  1812                           ; 4 bytes @ 0x40
  1813  0000A0                     	ds	4
  1814  0000A4                     fround@prec:
  1815                           	opt stack 0
  1816                           
  1817                           ; 1 bytes @ 0x44
  1818  0000A4                     	ds	1
  1819  0000A5                     ?___fladd:
  1820                           	opt stack 0
  1821  0000A5                     ___fladd@b:
  1822                           	opt stack 0
  1823                           
  1824                           ; 4 bytes @ 0x45
  1825  0000A5                     	ds	4
  1826  0000A9                     ___fladd@a:
  1827                           	opt stack 0
  1828                           
  1829                           ; 4 bytes @ 0x49
  1830  0000A9                     	ds	4
  1831  0000AD                     ??___fladd:
  1832                           
  1833                           ; 1 bytes @ 0x4D
  1834  0000AD                     	ds	8
  1835  0000B5                     ___fladd@signs:
  1836                           	opt stack 0
  1837                           
  1838                           ; 1 bytes @ 0x55
  1839  0000B5                     	ds	1
  1840  0000B6                     ___fladd@aexp:
  1841                           	opt stack 0
  1842                           
  1843                           ; 1 bytes @ 0x56
  1844  0000B6                     	ds	1
  1845  0000B7                     ___fladd@bexp:
  1846                           	opt stack 0
  1847                           
  1848                           ; 1 bytes @ 0x57
  1849  0000B7                     	ds	1
  1850  0000B8                     ___fladd@grs:
  1851                           	opt stack 0
  1852                           
  1853                           ; 1 bytes @ 0x58
  1854  0000B8                     	ds	1
  1855  0000B9                     ?___flsub:
  1856                           	opt stack 0
  1857  0000B9                     ?___fltol:
  1858                           	opt stack 0
  1859  0000B9                     ___fltol@f1:
  1860                           	opt stack 0
  1861  0000B9                     ___flsub@b:
  1862                           	opt stack 0
  1863                           
  1864                           ; 4 bytes @ 0x59
  1865  0000B9                     	ds	4
  1866  0000BD                     ??___fltol:
  1867  0000BD                     ___flsub@a:
  1868                           	opt stack 0
  1869                           
  1870                           ; 4 bytes @ 0x5D
  1871  0000BD                     	ds	4
  1872  0000C1                     ___fltol@sign1:
  1873                           	opt stack 0
  1874                           
  1875                           ; 1 bytes @ 0x61
  1876  0000C1                     	ds	1
  1877  0000C2                     ___fltol@exp1:
  1878                           	opt stack 0
  1879                           
  1880                           ; 1 bytes @ 0x62
  1881  0000C2                     	ds	1
  1882  0000C3                     ?_sprintf:
  1883                           	opt stack 0
  1884  0000C3                     sprintf@sp:
  1885                           	opt stack 0
  1886                           
  1887                           ; 2 bytes @ 0x63
  1888  0000C3                     	ds	2
  1889  0000C5                     sprintf@f:
  1890                           	opt stack 0
  1891                           
  1892                           ; 2 bytes @ 0x65
  1893  0000C5                     	ds	6
  1894  0000CB                     ??_sprintf:
  1895                           
  1896                           ; 1 bytes @ 0x6B
  1897  0000CB                     	ds	2
  1898  0000CD                     tblptru	equ	0xFF8
  1899                           tblptrh	equ	0xFF7
  1900                           tblptrl	equ	0xFF6
  1901                           tablat	equ	0xFF5
  1902                           postinc0	equ	0xFEE
  1903                           wreg	equ	0xFE8
  1904                           
  1905                           ; 1 bytes @ 0x6D
  1906                           
  1907                           	psect	cstackCOMRAM
  1908  000026                     __pcstackCOMRAM:
  1909                           	opt stack 0
  1910  000026                     _CANisRxReady$3170:
  1911                           	opt stack 0
  1912  000026                     i2_CANisTxReady$3168:
  1913                           	opt stack 0
  1914  000026                     CANreceiveMessage@msg:
  1915                           	opt stack 0
  1916  000026                     i2CANsendMessage@identifier:
  1917                           	opt stack 0
  1918                           
  1919                           ; 4 bytes @ 0x0
  1920  000026                     	ds	2
  1921  000028                     ??_CANreceiveMessage:
  1922                           
  1923                           ; 1 bytes @ 0x2
  1924  000028                     	ds	2
  1925  00002A                     i2CANsendMessage@data:
  1926                           	opt stack 0
  1927                           
  1928                           ; 2 bytes @ 0x4
  1929  00002A                     	ds	2
  1930  00002C                     i2CANsendMessage@dataLength:
  1931                           	opt stack 0
  1932                           
  1933                           ; 1 bytes @ 0x6
  1934  00002C                     	ds	1
  1935  00002D                     i2CANsendMessage@flags:
  1936                           	opt stack 0
  1937                           
  1938                           ; 1 bytes @ 0x7
  1939  00002D                     	ds	1
  1940  00002E                     ??i2_CANsendMessage:
  1941                           
  1942                           ; 1 bytes @ 0x8
  1943  00002E                     	ds	2
  1944  000030                     CANreceiveMessage@error:
  1945                           	opt stack 0
  1946                           
  1947                           ; 1 bytes @ 0xA
  1948  000030                     	ds	1
  1949  000031                     CANreceiveMessage@tamp:
  1950                           	opt stack 0
  1951                           
  1952                           ; 1 bytes @ 0xB
  1953  000031                     	ds	1
  1954  000032                     i2CANsendMessage@tamp:
  1955                           	opt stack 0
  1956                           
  1957                           ; 4 bytes @ 0xC
  1958  000032                     	ds	4
  1959  000036                     ??_ISR_alta:
  1960                           
  1961                           ; 1 bytes @ 0x10
  1962  000036                     	ds	18
  1963                           tblptru	equ	0xFF8
  1964                           tblptrh	equ	0xFF7
  1965                           tblptrl	equ	0xFF6
  1966                           tablat	equ	0xFF5
  1967                           postinc0	equ	0xFEE
  1968                           wreg	equ	0xFE8
  1969                           
  1970 ;;
  1971 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1972 ;;
  1973 ;; *************** function _main *****************
  1974 ;; Defined at:
  1975 ;;		line 218 in file "RemoteCan.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;		None
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;		None
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  1    wreg      void 
  1982 ;; Registers used:
  1983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1991 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1992 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1993 ;;Total ram usage:        8 bytes
  1994 ;; Hardware stack levels required when called:   11
  1995 ;; This function calls:
  1996 ;;		_CAN_Tx
  1997 ;;		_CANisTxReady
  1998 ;;		_CANsendMessage
  1999 ;;		_Credits
  2000 ;;		_F1_Button_Polling
  2001 ;;		_F2_Button_Polling
  2002 ;;		_Joystick_Polling
  2003 ;;		_LCD_End
  2004 ;;		_LCD_Error
  2005 ;;		_LCD_Gap
  2006 ;;		_LCD_Handler
  2007 ;;		_LCD_Park
  2008 ;;		_LCD_Parking
  2009 ;;		_LCD_goto_line
  2010 ;;		_LCD_initialize
  2011 ;;		_LCD_write_message
  2012 ;;		_PWR_Button_Polling
  2013 ;;		___awdiv
  2014 ;;		___fladd
  2015 ;;		___flmul
  2016 ;;		___flneg
  2017 ;;		___fltol
  2018 ;;		___xxtofl
  2019 ;;		_board_initialization
  2020 ;;		_delay_ms
  2021 ;; This function is called by:
  2022 ;;		Startup code after reset
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           	psect	text0
  2027  010B06                     __ptext0:
  2028                           	opt stack 0
  2029  010B06                     _main:
  2030                           	opt stack 20
  2031                           
  2032                           ;RemoteCan.c: 219: board_initialization();
  2033                           
  2034                           ;incstack = 0
  2035  010B06  EC44  F0AF         	call	_board_initialization	;wreg free
  2036                           
  2037                           ;RemoteCan.c: 221: JoystickConstants[0] = 0.703;
  2038  010B0A  0ECF               	movlw	207
  2039  010B0C  0100               	movlb	0	; () banked
  2040  010B0E  6FCD               	movwf	_JoystickConstants& (0+255),b	;volatile
  2041  010B10  0EF7               	movlw	247
  2042  010B12  6FCE               	movwf	(_JoystickConstants+1)& (0+255),b	;volatile
  2043  010B14  0E33               	movlw	51
  2044  010B16  6FCF               	movwf	(_JoystickConstants+2)& (0+255),b	;volatile
  2045  010B18  0E3F               	movlw	63
  2046  010B1A  6FD0               	movwf	(_JoystickConstants+3)& (0+255),b	;volatile
  2047                           
  2048                           ; BSR set to: 0
  2049                           ;RemoteCan.c: 222: JoystickConstants[1] = 25;
  2050  010B1C  0E00               	movlw	0
  2051  010B1E  0100               	movlb	0	; () banked
  2052  010B20  6FD1               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2053  010B22  0E00               	movlw	0
  2054  010B24  6FD2               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2055  010B26  0EC8               	movlw	200
  2056  010B28  6FD3               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2057  010B2A  0E41               	movlw	65
  2058  010B2C  6FD4               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2059                           
  2060                           ; BSR set to: 0
  2061                           ;RemoteCan.c: 224: data_brake [1] = 0;
  2062  010B2E  0E00               	movlw	0
  2063  010B30  0101               	movlb	1	; () banked
  2064  010B32  6F2E               	movwf	(_data_brake+1)& (0+255),b
  2065                           
  2066                           ; BSR set to: 1
  2067                           ;RemoteCan.c: 226: if (PORTBbits.RB1 == 1) {
  2068  010B34  B281               	btfsc	3969,1,c	;volatile
  2069                           
  2070                           ; BSR set to: 1
  2071                           ;RemoteCan.c: 227: LCD_4TH_ROW_MODE = 1;
  2072  010B36  8648               	bsf	_LCD_4TH_ROW_MODE/(0+8),_LCD_4TH_ROW_MODE& (0+7),c	;volatile
  2073                           
  2074                           ; BSR set to: 1
  2075                           ;RemoteCan.c: 228: }
  2076                           ;RemoteCan.c: 230: Joystick_Polling();
  2077                           
  2078                           ; BSR set to: 1
  2079  010B38  EC2F  F0B2         	call	_Joystick_Polling	;wreg free
  2080                           
  2081                           ;RemoteCan.c: 231: center_value_Y = JoystickValues[1];
  2082  010B3C  C0DE  F0E5         	movff	_JoystickValues+1,_center_value_Y	;volatile
  2083  010B40                     l9531:
  2084                           
  2085                           ;RemoteCan.c: 236: PWR_Button_Polling();
  2086  010B40  EC01  F0B4         	call	_PWR_Button_Polling	;wreg free
  2087                           
  2088                           ;RemoteCan.c: 237: F1_Button_Polling();
  2089  010B44  EC2B  F0B4         	call	_F1_Button_Polling	;wreg free
  2090                           
  2091                           ;RemoteCan.c: 238: F2_Button_Polling();
  2092  010B48  EC1D  F0B4         	call	_F2_Button_Polling	;wreg free
  2093                           
  2094                           ;RemoteCan.c: 241: if (power_switch == 0) {
  2095  010B4C  B649               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  2096  010B4E  D0CB               	goto	l822
  2097                           
  2098                           ;RemoteCan.c: 242: dir = 1;
  2099  010B50  0E01               	movlw	1
  2100  010B52  0100               	movlb	0	; () banked
  2101  010B54  6FE7               	movwf	_dir& (0+255),b	;volatile
  2102                           
  2103                           ;RemoteCan.c: 243: set_speed = 0;
  2104  010B56  0E00               	movlw	0
  2105  010B58  0100               	movlb	0	; () banked
  2106  010B5A  6FE4               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2107  010B5C  0E00               	movlw	0
  2108  010B5E  6FE3               	movwf	_set_speed& (0+255),b	;volatile
  2109                           
  2110                           ;RemoteCan.c: 244: data_steering [0] = 90;
  2111  010B60  0E5A               	movlw	90
  2112  010B62  0101               	movlb	1	; () banked
  2113  010B64  6F3D               	movwf	_data_steering& (0+255),b
  2114                           
  2115                           ;RemoteCan.c: 245: data_brake [0] = 0b00000000;
  2116  010B66  0E00               	movlw	0
  2117  010B68  0101               	movlb	1	; () banked
  2118  010B6A  6F2D               	movwf	_data_brake& (0+255),b
  2119                           
  2120                           ; BSR set to: 1
  2121                           ;RemoteCan.c: 246: CAN_Tx();
  2122  010B6C  ECE7  F0AE         	call	_CAN_Tx	;wreg free
  2123                           
  2124                           ;RemoteCan.c: 247: PORTDbits.RD6 = 0;
  2125  010B70  9C83               	bcf	3971,6,c	;volatile
  2126                           
  2127                           ;RemoteCan.c: 248: PORTDbits.RD5 = 0;
  2128  010B72  9A83               	bcf	3971,5,c	;volatile
  2129                           
  2130                           ;RemoteCan.c: 249: LCD_initialize(16);
  2131  010B74  0E10               	movlw	16
  2132  010B76  EC18  F0AC         	call	_LCD_initialize
  2133                           
  2134                           ;RemoteCan.c: 250: LCD_goto_line(1);
  2135  010B7A  0E01               	movlw	1
  2136  010B7C  EC55  F0AD         	call	_LCD_goto_line
  2137                           
  2138                           ;RemoteCan.c: 251: LCD_write_message("====================");
  2139  010B80  0E6A               	movlw	low STR_1
  2140  010B82  0100               	movlb	0	; () banked
  2141  010B84  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  2142  010B86  0EFF               	movlw	high STR_1
  2143  010B88  0100               	movlb	0	; () banked
  2144  010B8A  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2145  010B8C  EC5B  F0B3         	call	_LCD_write_message	;wreg free
  2146                           
  2147                           ;RemoteCan.c: 252: LCD_goto_line(2);
  2148  010B90  0E02               	movlw	2
  2149  010B92  EC55  F0AD         	call	_LCD_goto_line
  2150                           
  2151                           ;RemoteCan.c: 253: LCD_write_message("==> VEHICLE  OFF <==");
  2152  010B96  0E40               	movlw	low STR_2
  2153  010B98  0100               	movlb	0	; () banked
  2154  010B9A  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  2155  010B9C  0EFF               	movlw	high STR_2
  2156  010B9E  0100               	movlb	0	; () banked
  2157  010BA0  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2158  010BA2  EC5B  F0B3         	call	_LCD_write_message	;wreg free
  2159                           
  2160                           ;RemoteCan.c: 254: LCD_goto_line(3);
  2161  010BA6  0E03               	movlw	3
  2162  010BA8  EC55  F0AD         	call	_LCD_goto_line
  2163                           
  2164                           ;RemoteCan.c: 255: LCD_write_message("  Press the button  ");
  2165  010BAC  0E1A               	movlw	low STR_3
  2166  010BAE  0100               	movlb	0	; () banked
  2167  010BB0  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  2168  010BB2  0EFE               	movlw	high STR_3
  2169  010BB4  0100               	movlb	0	; () banked
  2170  010BB6  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2171  010BB8  EC5B  F0B3         	call	_LCD_write_message	;wreg free
  2172                           
  2173                           ;RemoteCan.c: 256: LCD_goto_line(4);
  2174  010BBC  0E04               	movlw	4
  2175  010BBE  EC55  F0AD         	call	_LCD_goto_line
  2176                           
  2177                           ;RemoteCan.c: 257: LCD_write_message("====================");
  2178  010BC2  0E6A               	movlw	low STR_1
  2179  010BC4  0100               	movlb	0	; () banked
  2180  010BC6  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  2181  010BC8  0EFF               	movlw	high STR_1
  2182  010BCA  0100               	movlb	0	; () banked
  2183  010BCC  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2184  010BCE  EC5B  F0B3         	call	_LCD_write_message	;wreg free
  2185                           
  2186                           ;RemoteCan.c: 258: while (power_switch == 0) {
  2187  010BD2  D082               	goto	l9587
  2188  010BD4                     l9565:
  2189                           
  2190                           ;RemoteCan.c: 259: if ((time_counter - pr_time_1) >= 30) {
  2191  010BD4  C0D9  F166         	movff	_pr_time_1,??_main	;volatile
  2192  010BD8  C0DA  F167         	movff	_pr_time_1+1,??_main+1	;volatile
  2193  010BDC  C0DB  F168         	movff	_pr_time_1+2,??_main+2	;volatile
  2194  010BE0  C0DC  F169         	movff	_pr_time_1+3,??_main+3	;volatile
  2195  010BE4  0101               	movlb	1	; () banked
  2196  010BE6  1F66               	comf	??_main& (0+255),f,b
  2197  010BE8  1F67               	comf	(??_main+1)& (0+255),f,b
  2198  010BEA  1F68               	comf	(??_main+2)& (0+255),f,b
  2199  010BEC  1F69               	comf	(??_main+3)& (0+255),f,b
  2200  010BEE  2B66               	incf	??_main& (0+255),f,b
  2201  010BF0  0E00               	movlw	0
  2202  010BF2  2367               	addwfc	(??_main+1)& (0+255),f,b
  2203  010BF4  2368               	addwfc	(??_main+2)& (0+255),f,b
  2204  010BF6  2369               	addwfc	(??_main+3)& (0+255),f,b
  2205  010BF8  5019               	movf	_time_counter,w,c	;volatile
  2206  010BFA  0101               	movlb	1	; () banked
  2207  010BFC  2566               	addwf	??_main& (0+255),w,b
  2208  010BFE  0101               	movlb	1	; () banked
  2209  010C00  6F6A               	movwf	(??_main+4)& (0+255),b
  2210  010C02  501A               	movf	_time_counter+1,w,c	;volatile
  2211  010C04  0101               	movlb	1	; () banked
  2212  010C06  2167               	addwfc	(??_main+1)& (0+255),w,b
  2213  010C08  0101               	movlb	1	; () banked
  2214  010C0A  6F6B               	movwf	(??_main+5)& (0+255),b
  2215  010C0C  501B               	movf	_time_counter+2,w,c	;volatile
  2216  010C0E  0101               	movlb	1	; () banked
  2217  010C10  2168               	addwfc	(??_main+2)& (0+255),w,b
  2218  010C12  0101               	movlb	1	; () banked
  2219  010C14  6F6C               	movwf	(??_main+6)& (0+255),b
  2220  010C16  501C               	movf	_time_counter+3,w,c	;volatile
  2221  010C18  0101               	movlb	1	; () banked
  2222  010C1A  2169               	addwfc	(??_main+3)& (0+255),w,b
  2223  010C1C  0101               	movlb	1	; () banked
  2224  010C1E  6F6D               	movwf	(??_main+7)& (0+255),b
  2225  010C20  0101               	movlb	1	; () banked
  2226  010C22  516D               	movf	(??_main+7)& (0+255),w,b
  2227  010C24  0101               	movlb	1	; () banked
  2228  010C26  116C               	iorwf	(??_main+6)& (0+255),w,b
  2229  010C28  0101               	movlb	1	; () banked
  2230  010C2A  116B               	iorwf	(??_main+5)& (0+255),w,b
  2231  010C2C  E105               	bnz	u12640
  2232  010C2E  0E1E               	movlw	30
  2233  010C30  0101               	movlb	1	; () banked
  2234  010C32  5D6A               	subwf	(??_main+4)& (0+255),w,b
  2235  010C34  A0D8               	btfss	status,0,c
  2236  010C36  D03D               	goto	l9573
  2237  010C38                     u12640:
  2238                           
  2239                           ; BSR set to: 1
  2240                           ;RemoteCan.c: 260: pr_time_1 = time_counter;
  2241  010C38  C019  F0D9         	movff	_time_counter,_pr_time_1	;volatile
  2242  010C3C  C01A  F0DA         	movff	_time_counter+1,_pr_time_1+1	;volatile
  2243  010C40  C01B  F0DB         	movff	_time_counter+2,_pr_time_1+2	;volatile
  2244  010C44  C01C  F0DC         	movff	_time_counter+3,_pr_time_1+3	;volatile
  2245                           
  2246                           ;RemoteCan.c: 261: if (pwr_credits == 0) {
  2247  010C48  B849               	btfsc	_pwr_credits/(0+8),_pwr_credits& (0+7),c	;volatile
  2248  010C4A  D010               	goto	l9571
  2249                           
  2250                           ; BSR set to: 1
  2251                           ;RemoteCan.c: 262: PORTDbits.RD7 = ~PORTDbits.RD7;
  2252  010C4C  AE83               	btfss	3971,7,c	;volatile
  2253  010C4E  D002               	goto	u12660
  2254  010C50  0E01               	movlw	1
  2255  010C52  D001               	goto	u12666
  2256  010C54                     u12660:
  2257  010C54  0E00               	movlw	0
  2258  010C56                     u12666:
  2259  010C56  0AFF               	xorlw	255
  2260  010C58  0101               	movlb	1	; () banked
  2261  010C5A  6F66               	movwf	??_main& (0+255),b
  2262  010C5C  0101               	movlb	1	; () banked
  2263  010C5E  3366               	rrcf	??_main& (0+255),f,b
  2264  010C60  3366               	rrcf	??_main& (0+255),f,b
  2265  010C62  5083               	movf	3971,w,c	;volatile
  2266  010C64  0101               	movlb	1	; () banked
  2267  010C66  1966               	xorwf	??_main& (0+255),w,b
  2268  010C68  0B7F               	andlw	-129
  2269  010C6A  D021               	goto	L1
  2270  010C6C                     l9571:
  2271                           
  2272                           ; BSR set to: 1
  2273                           ;RemoteCan.c: 264: PORTDbits.RD6 = ~PORTDbits.RD6;
  2274  010C6C  AC83               	btfss	3971,6,c	;volatile
  2275  010C6E  D002               	goto	u12670
  2276  010C70  0E01               	movlw	1
  2277  010C72  D001               	goto	u12676
  2278  010C74                     u12670:
  2279  010C74  0E00               	movlw	0
  2280  010C76                     u12676:
  2281  010C76  0AFF               	xorlw	255
  2282  010C78  0101               	movlb	1	; () banked
  2283  010C7A  6F66               	movwf	??_main& (0+255),b
  2284  010C7C  0101               	movlb	1	; () banked
  2285  010C7E  3B66               	swapf	??_main& (0+255),f,b
  2286  010C80  4766               	rlncf	??_main& (0+255),f,b
  2287  010C82  4766               	rlncf	??_main& (0+255),f,b
  2288  010C84  5083               	movf	3971,w,c	;volatile
  2289  010C86  0101               	movlb	1	; () banked
  2290  010C88  1966               	xorwf	??_main& (0+255),w,b
  2291  010C8A  0BBF               	andlw	-65
  2292  010C8C  1966               	xorwf	??_main& (0+255),w,b
  2293  010C8E  6E83               	movwf	3971,c	;volatile
  2294                           
  2295                           ;RemoteCan.c: 265: PORTDbits.RD5 = ~PORTDbits.RD5;
  2296  010C90  AA83               	btfss	3971,5,c	;volatile
  2297  010C92  D002               	goto	u12680
  2298  010C94  0E01               	movlw	1
  2299  010C96  D001               	goto	u12686
  2300  010C98                     u12680:
  2301  010C98  0E00               	movlw	0
  2302  010C9A                     u12686:
  2303  010C9A  0AFF               	xorlw	255
  2304  010C9C  0101               	movlb	1	; () banked
  2305  010C9E  6F66               	movwf	??_main& (0+255),b
  2306  010CA0  0101               	movlb	1	; () banked
  2307  010CA2  3B66               	swapf	??_main& (0+255),f,b
  2308  010CA4  4766               	rlncf	??_main& (0+255),f,b
  2309  010CA6  5083               	movf	3971,w,c	;volatile
  2310  010CA8  0101               	movlb	1	; () banked
  2311  010CAA  1966               	xorwf	??_main& (0+255),w,b
  2312  010CAC  0BDF               	andlw	-33
  2313  010CAE                     L1:
  2314  010CAE  1966               	xorwf	??_main& (0+255),w,b
  2315  010CB0  6E83               	movwf	3971,c	;volatile
  2316  010CB2                     l9573:
  2317                           
  2318                           ; BSR set to: 1
  2319                           ;RemoteCan.c: 266: }
  2320                           ;RemoteCan.c: 267: }
  2321                           ;RemoteCan.c: 268: if (((PORTBbits.RB1 == 1)&&(PORTBbits.RB4 == 1))&&(pwr_credits == 0))
      +                           {
  2322  010CB2  B281               	btfsc	3969,1,c	;volatile
  2323                           
  2324                           ; BSR set to: 1
  2325  010CB4  A881               	btfss	3969,4,c	;volatile
  2326  010CB6  D007               	goto	l9583
  2327                           
  2328                           ; BSR set to: 1
  2329  010CB8  B849               	btfsc	_pwr_credits/(0+8),_pwr_credits& (0+7),c	;volatile
  2330  010CBA  D005               	goto	l9583
  2331                           
  2332                           ; BSR set to: 1
  2333                           ;RemoteCan.c: 269: pwr_credits = 1;
  2334  010CBC  8849               	bsf	_pwr_credits/(0+8),_pwr_credits& (0+7),c	;volatile
  2335                           
  2336                           ;RemoteCan.c: 270: PORTDbits.RD7 = 1;
  2337  010CBE  8E83               	bsf	3971,7,c	;volatile
  2338                           
  2339                           ;RemoteCan.c: 271: PORTDbits.RD6 = 1;
  2340  010CC0  8C83               	bsf	3971,6,c	;volatile
  2341                           
  2342                           ; BSR set to: 1
  2343                           ;RemoteCan.c: 272: Credits();
  2344  010CC2  ECCC  F0B1         	call	_Credits	;wreg free
  2345  010CC6                     l9583:
  2346                           
  2347                           ;RemoteCan.c: 273: }
  2348                           ;RemoteCan.c: 274: PWR_Button_Polling();
  2349  010CC6  EC01  F0B4         	call	_PWR_Button_Polling	;wreg free
  2350                           
  2351                           ;RemoteCan.c: 275: delay_ms(10);
  2352  010CCA  0E00               	movlw	0
  2353  010CCC  0100               	movlb	0	; () banked
  2354  010CCE  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2355  010CD0  0E0A               	movlw	10
  2356  010CD2  6F77               	movwf	delay_ms@value_ms& (0+255),b
  2357  010CD4  EC07  F0B3         	call	_delay_ms	;wreg free
  2358  010CD8                     l9587:
  2359  010CD8  A649               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  2360  010CDA  D77C               	goto	l9565
  2361                           
  2362                           ;RemoteCan.c: 276: }
  2363                           ;RemoteCan.c: 277: pwr_credits = 0;
  2364  010CDC  9849               	bcf	_pwr_credits/(0+8),_pwr_credits& (0+7),c	;volatile
  2365                           
  2366                           ;RemoteCan.c: 278: PORTDbits.RD6 = 0;
  2367  010CDE  9C83               	bcf	3971,6,c	;volatile
  2368                           
  2369                           ;RemoteCan.c: 279: PORTDbits.RD5 = 0;
  2370  010CE0  9A83               	bcf	3971,5,c	;volatile
  2371                           
  2372                           ;RemoteCan.c: 280: PORTDbits.RD7 = 0;
  2373  010CE2  9E83               	bcf	3971,7,c	;volatile
  2374                           
  2375                           ;RemoteCan.c: 281: display_refresh = 1;
  2376  010CE4  8E48               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  2377  010CE6                     l822:
  2378                           
  2379                           ;RemoteCan.c: 282: }
  2380                           ;RemoteCan.c: 285: if (PORTAbits.RA2 == 1) {
  2381  010CE6  A480               	btfss	3968,2,c	;volatile
  2382  010CE8  D004               	goto	l830
  2383                           
  2384                           ;RemoteCan.c: 286: switch_position = 0;
  2385  010CEA  0E00               	movlw	0
  2386  010CEC  0100               	movlb	0	; () banked
  2387  010CEE  6FEB               	movwf	_switch_position& (0+255),b	;volatile
  2388                           
  2389                           ;RemoteCan.c: 287: } else {
  2390  010CF0  D00D               	goto	l9595
  2391  010CF2                     l830:
  2392                           
  2393                           ;RemoteCan.c: 288: if (PORTAbits.RA3 == 0) {
  2394  010CF2  B680               	btfsc	3968,3,c	;volatile
  2395  010CF4  D005               	goto	l9593
  2396                           
  2397                           ;RemoteCan.c: 289: switch_position = 1;
  2398  010CF6  0E01               	movlw	1
  2399  010CF8  0100               	movlb	0	; () banked
  2400  010CFA  6FEB               	movwf	_switch_position& (0+255),b	;volatile
  2401                           
  2402                           ;RemoteCan.c: 290: dir = 1;
  2403  010CFC  0E01               	movlw	1
  2404  010CFE  D004               	goto	L2
  2405  010D00                     l9593:
  2406                           
  2407                           ;RemoteCan.c: 292: switch_position = 2;
  2408  010D00  0E02               	movlw	2
  2409  010D02  0100               	movlb	0	; () banked
  2410  010D04  6FEB               	movwf	_switch_position& (0+255),b	;volatile
  2411                           
  2412                           ;RemoteCan.c: 293: dir = 0;
  2413  010D06  0E00               	movlw	0
  2414  010D08                     L2:
  2415  010D08  0100               	movlb	0	; () banked
  2416  010D0A  6FE7               	movwf	_dir& (0+255),b	;volatile
  2417  010D0C                     l9595:
  2418                           
  2419                           ; BSR set to: 0
  2420                           ;RemoteCan.c: 294: }
  2421                           ;RemoteCan.c: 295: }
  2422                           ;RemoteCan.c: 298: if (F1_switch == 1) {
  2423  010D0C  A248               	btfss	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
  2424  010D0E  D0C5               	goto	l834
  2425                           
  2426                           ; BSR set to: 0
  2427                           ;RemoteCan.c: 299: y = 0;
  2428  010D10  9C4A               	bcf	_y/(0+8),_y& (0+7),c	;volatile
  2429                           
  2430                           ;RemoteCan.c: 300: if ((x == 0)&&(F2_switch == 0)) {
  2431  010D12  AA4A               	btfss	_x/(0+8),_x& (0+7),c	;volatile
  2432                           
  2433                           ; BSR set to: 0
  2434  010D14  B448               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2435  010D16  D02D               	goto	l9613
  2436                           
  2437                           ; BSR set to: 0
  2438                           ;RemoteCan.c: 301: space_available = 0;
  2439  010D18  9C49               	bcf	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2440                           
  2441                           ; BSR set to: 0
  2442                           ;RemoteCan.c: 302: parking_state = 1;
  2443  010D1A  0E01               	movlw	1
  2444  010D1C  0100               	movlb	0	; () banked
  2445  010D1E  6FE9               	movwf	_parking_state& (0+255),b	;volatile
  2446                           
  2447                           ;RemoteCan.c: 303: JoystickConstants[1] = 8;
  2448  010D20  0E00               	movlw	0
  2449  010D22  0100               	movlb	0	; () banked
  2450  010D24  6FD1               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2451  010D26  0E00               	movlw	0
  2452  010D28  6FD2               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2453  010D2A  0E00               	movlw	0
  2454  010D2C  6FD3               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2455  010D2E  0E41               	movlw	65
  2456  010D30  6FD4               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2457  010D32                     l9605:
  2458  010D32  ECCF  F0B3         	call	_CANisTxReady	;wreg free
  2459  010D36  0900               	iorlw	0
  2460  010D38  B4D8               	btfsc	status,2,c
  2461  010D3A  D7FB               	goto	l9605
  2462                           
  2463                           ;RemoteCan.c: 305: park_assist_state[0] = 0b00000001;
  2464  010D3C  0E01               	movlw	1
  2465  010D3E  0101               	movlb	1	; () banked
  2466  010D40  6F45               	movwf	_park_assist_state& (0+255),b
  2467                           
  2468                           ; BSR set to: 1
  2469                           ;RemoteCan.c: 306: CANsendMessage(0b00000001100, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2470  010D42  0E0C               	movlw	12
  2471  010D44  0100               	movlb	0	; () banked
  2472  010D46  6F71               	movwf	CANsendMessage@identifier& (0+255),b
  2473  010D48  0E00               	movlw	0
  2474  010D4A  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2475  010D4C  0E00               	movlw	0
  2476  010D4E  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2477  010D50  0E00               	movlw	0
  2478  010D52  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2479  010D54  0E45               	movlw	low _park_assist_state
  2480  010D56  0100               	movlb	0	; () banked
  2481  010D58  6F75               	movwf	CANsendMessage@data& (0+255),b
  2482  010D5A  0E01               	movlw	high _park_assist_state
  2483  010D5C  0100               	movlb	0	; () banked
  2484  010D5E  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
  2485  010D60  0E08               	movlw	8
  2486  010D62  0100               	movlb	0	; () banked
  2487  010D64  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
  2488  010D66  0EBC               	movlw	188
  2489  010D68  0100               	movlb	0	; () banked
  2490  010D6A  6F78               	movwf	CANsendMessage@flags& (0+255),b
  2491  010D6C  ECA9  F08E         	call	_CANsendMessage	;wreg free
  2492                           
  2493                           ;RemoteCan.c: 307: x = 1;
  2494  010D70  8A4A               	bsf	_x/(0+8),_x& (0+7),c	;volatile
  2495  010D72                     l9613:
  2496                           
  2497                           ;RemoteCan.c: 308: }
  2498                           ;RemoteCan.c: 310: if ((F2_switch == 1)&&(space_available == 1)&&(space_gap_reached == 1
      +                          )) {
  2499  010D72  B448               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2500  010D74  AC49               	btfss	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2501  010D76  D029               	goto	l839
  2502  010D78  AE49               	btfss	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2503  010D7A  D027               	goto	l839
  2504                           
  2505                           ;RemoteCan.c: 311: if (z == 0) {
  2506  010D7C  BE4A               	btfsc	_z/(0+8),_z& (0+7),c	;volatile
  2507  010D7E  D026               	goto	l9631
  2508                           
  2509                           ;RemoteCan.c: 312: parking_message_ID = 4;
  2510  010D80  0E04               	movlw	4
  2511  010D82  0100               	movlb	0	; () banked
  2512  010D84  6FE8               	movwf	_parking_message_ID& (0+255),b	;volatile
  2513                           
  2514                           ;RemoteCan.c: 313: parking_state = 2;
  2515  010D86  0E02               	movlw	2
  2516  010D88  0100               	movlb	0	; () banked
  2517  010D8A  6FE9               	movwf	_parking_state& (0+255),b	;volatile
  2518  010D8C                     l9623:
  2519  010D8C  ECCF  F0B3         	call	_CANisTxReady	;wreg free
  2520  010D90  0900               	iorlw	0
  2521  010D92  B4D8               	btfsc	status,2,c
  2522  010D94  D7FB               	goto	l9623
  2523                           
  2524                           ;RemoteCan.c: 315: CANsendMessage(0b00000001110, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
  2525  010D96  0E0E               	movlw	14
  2526  010D98  0100               	movlb	0	; () banked
  2527  010D9A  6F71               	movwf	CANsendMessage@identifier& (0+255),b
  2528  010D9C  0E00               	movlw	0
  2529  010D9E  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2530  010DA0  0E00               	movlw	0
  2531  010DA2  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2532  010DA4  0E00               	movlw	0
  2533  010DA6  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2534  010DA8  0E25               	movlw	low _data
  2535  010DAA  0100               	movlb	0	; () banked
  2536  010DAC  6F75               	movwf	CANsendMessage@data& (0+255),b
  2537  010DAE  0E01               	movlw	high _data
  2538  010DB0  0100               	movlb	0	; () banked
  2539  010DB2  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
  2540  010DB4  0E08               	movlw	8
  2541  010DB6  0100               	movlb	0	; () banked
  2542  010DB8  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
  2543  010DBA  0EBC               	movlw	188
  2544  010DBC  0100               	movlb	0	; () banked
  2545  010DBE  6F78               	movwf	CANsendMessage@flags& (0+255),b
  2546  010DC0  ECA9  F08E         	call	_CANsendMessage	;wreg free
  2547                           
  2548                           ;RemoteCan.c: 316: x = 0;
  2549  010DC4  9A4A               	bcf	_x/(0+8),_x& (0+7),c	;volatile
  2550                           
  2551                           ;RemoteCan.c: 317: z = 1;
  2552  010DC6  8E4A               	bsf	_z/(0+8),_z& (0+7),c	;volatile
  2553                           
  2554                           ;RemoteCan.c: 318: }
  2555                           ;RemoteCan.c: 319: } else {
  2556  010DC8  D001               	goto	l9631
  2557  010DCA                     l839:
  2558                           
  2559                           ;RemoteCan.c: 320: z = 0;
  2560  010DCA  9E4A               	bcf	_z/(0+8),_z& (0+7),c	;volatile
  2561  010DCC                     l9631:
  2562                           
  2563                           ;RemoteCan.c: 321: }
  2564                           ;RemoteCan.c: 323: if ((time_counter - pr_time_5) >= 30) {
  2565  010DCC  C011  F166         	movff	_pr_time_5,??_main	;volatile
  2566  010DD0  C012  F167         	movff	_pr_time_5+1,??_main+1	;volatile
  2567  010DD4  C013  F168         	movff	_pr_time_5+2,??_main+2	;volatile
  2568  010DD8  C014  F169         	movff	_pr_time_5+3,??_main+3	;volatile
  2569  010DDC  0101               	movlb	1	; () banked
  2570  010DDE  1F66               	comf	??_main& (0+255),f,b
  2571  010DE0  1F67               	comf	(??_main+1)& (0+255),f,b
  2572  010DE2  1F68               	comf	(??_main+2)& (0+255),f,b
  2573  010DE4  1F69               	comf	(??_main+3)& (0+255),f,b
  2574  010DE6  2B66               	incf	??_main& (0+255),f,b
  2575  010DE8  0E00               	movlw	0
  2576  010DEA  2367               	addwfc	(??_main+1)& (0+255),f,b
  2577  010DEC  2368               	addwfc	(??_main+2)& (0+255),f,b
  2578  010DEE  2369               	addwfc	(??_main+3)& (0+255),f,b
  2579  010DF0  5019               	movf	_time_counter,w,c	;volatile
  2580  010DF2  0101               	movlb	1	; () banked
  2581  010DF4  2566               	addwf	??_main& (0+255),w,b
  2582  010DF6  0101               	movlb	1	; () banked
  2583  010DF8  6F6A               	movwf	(??_main+4)& (0+255),b
  2584  010DFA  501A               	movf	_time_counter+1,w,c	;volatile
  2585  010DFC  0101               	movlb	1	; () banked
  2586  010DFE  2167               	addwfc	(??_main+1)& (0+255),w,b
  2587  010E00  0101               	movlb	1	; () banked
  2588  010E02  6F6B               	movwf	(??_main+5)& (0+255),b
  2589  010E04  501B               	movf	_time_counter+2,w,c	;volatile
  2590  010E06  0101               	movlb	1	; () banked
  2591  010E08  2168               	addwfc	(??_main+2)& (0+255),w,b
  2592  010E0A  0101               	movlb	1	; () banked
  2593  010E0C  6F6C               	movwf	(??_main+6)& (0+255),b
  2594  010E0E  501C               	movf	_time_counter+3,w,c	;volatile
  2595  010E10  0101               	movlb	1	; () banked
  2596  010E12  2169               	addwfc	(??_main+3)& (0+255),w,b
  2597  010E14  0101               	movlb	1	; () banked
  2598  010E16  6F6D               	movwf	(??_main+7)& (0+255),b
  2599  010E18  0101               	movlb	1	; () banked
  2600  010E1A  516D               	movf	(??_main+7)& (0+255),w,b
  2601  010E1C  0101               	movlb	1	; () banked
  2602  010E1E  116C               	iorwf	(??_main+6)& (0+255),w,b
  2603  010E20  0101               	movlb	1	; () banked
  2604  010E22  116B               	iorwf	(??_main+5)& (0+255),w,b
  2605  010E24  E105               	bnz	u12840
  2606  010E26  0E1E               	movlw	30
  2607  010E28  0101               	movlb	1	; () banked
  2608  010E2A  5D6A               	subwf	(??_main+4)& (0+255),w,b
  2609  010E2C  A0D8               	btfss	status,0,c
  2610  010E2E  D06D               	goto	l9659
  2611  010E30                     u12840:
  2612                           
  2613                           ; BSR set to: 1
  2614                           ;RemoteCan.c: 324: pr_time_5 = time_counter;
  2615  010E30  C019  F011         	movff	_time_counter,_pr_time_5	;volatile
  2616  010E34  C01A  F012         	movff	_time_counter+1,_pr_time_5+1	;volatile
  2617  010E38  C01B  F013         	movff	_time_counter+2,_pr_time_5+2	;volatile
  2618  010E3C  C01C  F014         	movff	_time_counter+3,_pr_time_5+3	;volatile
  2619                           
  2620                           ;RemoteCan.c: 325: if ((space_available == 1)&&(space_gap_reached == 1)) {
  2621  010E40  BC49               	btfsc	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2622                           
  2623                           ; BSR set to: 1
  2624  010E42  AE49               	btfss	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2625  010E44  D017               	goto	l9641
  2626                           
  2627                           ; BSR set to: 1
  2628                           ;RemoteCan.c: 326: PORTDbits.RD6 = 1;
  2629  010E46  8C83               	bsf	3971,6,c	;volatile
  2630                           
  2631                           ;RemoteCan.c: 327: if (F2_switch == 0) {
  2632  010E48  B448               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2633  010E4A  D012               	goto	l847
  2634                           
  2635                           ; BSR set to: 1
  2636                           ;RemoteCan.c: 328: PORTDbits.RD5 = ~PORTDbits.RD5;
  2637  010E4C  AA83               	btfss	3971,5,c	;volatile
  2638  010E4E  D002               	goto	u12880
  2639  010E50  0E01               	movlw	1
  2640  010E52  D001               	goto	u12886
  2641  010E54                     u12880:
  2642  010E54  0E00               	movlw	0
  2643  010E56                     u12886:
  2644  010E56  0AFF               	xorlw	255
  2645  010E58  0101               	movlb	1	; () banked
  2646  010E5A  6F66               	movwf	??_main& (0+255),b
  2647  010E5C  0101               	movlb	1	; () banked
  2648  010E5E  3B66               	swapf	??_main& (0+255),f,b
  2649  010E60  4766               	rlncf	??_main& (0+255),f,b
  2650  010E62  5083               	movf	3971,w,c	;volatile
  2651  010E64  0101               	movlb	1	; () banked
  2652  010E66  1966               	xorwf	??_main& (0+255),w,b
  2653  010E68  0BDF               	andlw	-33
  2654  010E6A  1966               	xorwf	??_main& (0+255),w,b
  2655  010E6C  6E83               	movwf	3971,c	;volatile
  2656                           
  2657                           ;RemoteCan.c: 329: } else {
  2658  010E6E  D04D               	goto	l9659
  2659  010E70                     l847:
  2660                           
  2661                           ; BSR set to: 1
  2662                           ;RemoteCan.c: 330: PORTDbits.RD5 = 1;
  2663  010E70  8A83               	bsf	3971,5,c	;volatile
  2664                           
  2665                           ; BSR set to: 1
  2666                           ;RemoteCan.c: 331: }
  2667                           ;RemoteCan.c: 332: } else {
  2668  010E72  D04B               	goto	l9659
  2669  010E74                     l9641:
  2670                           
  2671                           ; BSR set to: 1
  2672                           ;RemoteCan.c: 333: PORTDbits.RD6 = ~PORTDbits.RD6;
  2673  010E74  AC83               	btfss	3971,6,c	;volatile
  2674  010E76  D002               	goto	u12890
  2675  010E78  0E01               	movlw	1
  2676  010E7A  D001               	goto	u12896
  2677  010E7C                     u12890:
  2678  010E7C  0E00               	movlw	0
  2679  010E7E                     u12896:
  2680  010E7E  0AFF               	xorlw	255
  2681  010E80  0101               	movlb	1	; () banked
  2682  010E82  6F66               	movwf	??_main& (0+255),b
  2683  010E84  0101               	movlb	1	; () banked
  2684  010E86  3B66               	swapf	??_main& (0+255),f,b
  2685  010E88  4766               	rlncf	??_main& (0+255),f,b
  2686  010E8A  4766               	rlncf	??_main& (0+255),f,b
  2687  010E8C  5083               	movf	3971,w,c	;volatile
  2688  010E8E  0101               	movlb	1	; () banked
  2689  010E90  1966               	xorwf	??_main& (0+255),w,b
  2690  010E92  0BBF               	andlw	-65
  2691  010E94  1966               	xorwf	??_main& (0+255),w,b
  2692  010E96  6E83               	movwf	3971,c	;volatile
  2693  010E98  D037               	goto	l9657
  2694  010E9A                     l834:
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;RemoteCan.c: 338: x = 0;
  2698  010E9A  9A4A               	bcf	_x/(0+8),_x& (0+7),c	;volatile
  2699                           
  2700                           ;RemoteCan.c: 339: z = 0;
  2701  010E9C  9E4A               	bcf	_z/(0+8),_z& (0+7),c	;volatile
  2702                           
  2703                           ;RemoteCan.c: 340: parking_message_E = 0;
  2704  010E9E  9449               	bcf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  2705                           
  2706                           ;RemoteCan.c: 341: F2_switch = 0;
  2707  010EA0  9448               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2708                           
  2709                           ;RemoteCan.c: 342: space_available = 0;
  2710  010EA2  9C49               	bcf	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2711                           
  2712                           ;RemoteCan.c: 343: space_gap_reached = 0;
  2713  010EA4  9E49               	bcf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2714                           
  2715                           ;RemoteCan.c: 344: PORTDbits.RD5 = 0;
  2716  010EA6  9A83               	bcf	3971,5,c	;volatile
  2717                           
  2718                           ;RemoteCan.c: 345: PORTDbits.RD6 = 0;
  2719  010EA8  9C83               	bcf	3971,6,c	;volatile
  2720                           
  2721                           ;RemoteCan.c: 346: if (y == 0) {
  2722  010EAA  BC4A               	btfsc	_y/(0+8),_y& (0+7),c	;volatile
  2723  010EAC  D02C               	goto	l9655
  2724                           
  2725                           ; BSR set to: 0
  2726                           ;RemoteCan.c: 347: parking_state = 0;
  2727  010EAE  0E00               	movlw	0
  2728  010EB0  0100               	movlb	0	; () banked
  2729  010EB2  6FE9               	movwf	_parking_state& (0+255),b	;volatile
  2730                           
  2731                           ;RemoteCan.c: 348: JoystickConstants[1] = 25;
  2732  010EB4  0E00               	movlw	0
  2733  010EB6  0100               	movlb	0	; () banked
  2734  010EB8  6FD1               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2735  010EBA  0E00               	movlw	0
  2736  010EBC  6FD2               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2737  010EBE  0EC8               	movlw	200
  2738  010EC0  6FD3               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2739  010EC2  0E41               	movlw	65
  2740  010EC4  6FD4               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2741  010EC6                     l9647:
  2742  010EC6  ECCF  F0B3         	call	_CANisTxReady	;wreg free
  2743  010ECA  0900               	iorlw	0
  2744  010ECC  B4D8               	btfsc	status,2,c
  2745  010ECE  D7FB               	goto	l9647
  2746                           
  2747                           ;RemoteCan.c: 350: park_assist_state[0] = 0b00000000;
  2748  010ED0  0E00               	movlw	0
  2749  010ED2  0101               	movlb	1	; () banked
  2750  010ED4  6F45               	movwf	_park_assist_state& (0+255),b
  2751                           
  2752                           ; BSR set to: 1
  2753                           ;RemoteCan.c: 351: CANsendMessage(0b00000001100, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2754  010ED6  0E0C               	movlw	12
  2755  010ED8  0100               	movlb	0	; () banked
  2756  010EDA  6F71               	movwf	CANsendMessage@identifier& (0+255),b
  2757  010EDC  0E00               	movlw	0
  2758  010EDE  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2759  010EE0  0E00               	movlw	0
  2760  010EE2  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2761  010EE4  0E00               	movlw	0
  2762  010EE6  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2763  010EE8  0E45               	movlw	low _park_assist_state
  2764  010EEA  0100               	movlb	0	; () banked
  2765  010EEC  6F75               	movwf	CANsendMessage@data& (0+255),b
  2766  010EEE  0E01               	movlw	high _park_assist_state
  2767  010EF0  0100               	movlb	0	; () banked
  2768  010EF2  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
  2769  010EF4  0E08               	movlw	8
  2770  010EF6  0100               	movlb	0	; () banked
  2771  010EF8  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
  2772  010EFA  0EBC               	movlw	188
  2773  010EFC  0100               	movlb	0	; () banked
  2774  010EFE  6F78               	movwf	CANsendMessage@flags& (0+255),b
  2775  010F00  ECA9  F08E         	call	_CANsendMessage	;wreg free
  2776                           
  2777                           ;RemoteCan.c: 352: y = 1;
  2778  010F04  8C4A               	bsf	_y/(0+8),_y& (0+7),c	;volatile
  2779  010F06                     l9655:
  2780                           
  2781                           ;RemoteCan.c: 353: }
  2782                           ;RemoteCan.c: 354: PORTDbits.RD6 = 0;
  2783  010F06  9C83               	bcf	3971,6,c	;volatile
  2784  010F08                     l9657:
  2785                           
  2786                           ;RemoteCan.c: 355: PORTDbits.RD5 = 0;
  2787  010F08  9A83               	bcf	3971,5,c	;volatile
  2788  010F0A                     l9659:
  2789                           
  2790                           ;RemoteCan.c: 356: }
  2791                           ;RemoteCan.c: 358: Joystick_Polling();
  2792  010F0A  EC2F  F0B2         	call	_Joystick_Polling	;wreg free
  2793                           
  2794                           ;RemoteCan.c: 361: if ((JoystickValues[1] < 10)&&(parking_state == 2)) {
  2795  010F0E  0E0A               	movlw	10
  2796  010F10  0100               	movlb	0	; () banked
  2797  010F12  61DE               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  2798  010F14  D039               	goto	l9681
  2799                           
  2800                           ; BSR set to: 0
  2801  010F16  0E02               	movlw	2
  2802  010F18  0100               	movlb	0	; () banked
  2803  010F1A  19E9               	xorwf	_parking_state& (0+255),w,b	;volatile
  2804  010F1C  A4D8               	btfss	status,2,c
  2805  010F1E  D034               	goto	l9681
  2806                           
  2807                           ; BSR set to: 0
  2808                           ;RemoteCan.c: 362: F1_switch = 0;
  2809  010F20  9248               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
  2810                           
  2811                           ; BSR set to: 0
  2812                           ;RemoteCan.c: 363: parking_state = 0;
  2813  010F22  0E00               	movlw	0
  2814  010F24  0100               	movlb	0	; () banked
  2815  010F26  6FE9               	movwf	_parking_state& (0+255),b	;volatile
  2816                           
  2817                           ; BSR set to: 0
  2818                           ;RemoteCan.c: 364: user_stop = 1;
  2819  010F28  824A               	bsf	_user_stop/(0+8),_user_stop& (0+7),c	;volatile
  2820                           
  2821                           ;RemoteCan.c: 365: parking_message_ID = 6;
  2822  010F2A  0E06               	movlw	6
  2823  010F2C  0100               	movlb	0	; () banked
  2824  010F2E  6FE8               	movwf	_parking_message_ID& (0+255),b	;volatile
  2825                           
  2826                           ; BSR set to: 0
  2827                           ;RemoteCan.c: 366: pr_time_6 = time_counter + (2000 / 10);
  2828  010F30  0EC8               	movlw	200
  2829  010F32  2419               	addwf	_time_counter,w,c	;volatile
  2830  010F34  6E15               	movwf	_pr_time_6,c	;volatile
  2831  010F36  0E00               	movlw	0
  2832  010F38  201A               	addwfc	_time_counter+1,w,c	;volatile
  2833  010F3A  6E16               	movwf	_pr_time_6+1,c	;volatile
  2834  010F3C  0E00               	movlw	0
  2835  010F3E  201B               	addwfc	_time_counter+2,w,c	;volatile
  2836  010F40  6E17               	movwf	_pr_time_6+2,c	;volatile
  2837  010F42  0E00               	movlw	0
  2838  010F44  201C               	addwfc	_time_counter+3,w,c	;volatile
  2839  010F46  6E18               	movwf	_pr_time_6+3,c	;volatile
  2840                           
  2841                           ; BSR set to: 0
  2842                           ;RemoteCan.c: 367: park_assist_state[0] = 0b00000000;
  2843  010F48  0E00               	movlw	0
  2844  010F4A  0101               	movlb	1	; () banked
  2845  010F4C  6F45               	movwf	_park_assist_state& (0+255),b
  2846  010F4E                     l9675:
  2847  010F4E  ECCF  F0B3         	call	_CANisTxReady	;wreg free
  2848  010F52  0900               	iorlw	0
  2849  010F54  B4D8               	btfsc	status,2,c
  2850  010F56  D7FB               	goto	l9675
  2851                           
  2852                           ;RemoteCan.c: 369: CANsendMessage(0b00000001100, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2853  010F58  0E0C               	movlw	12
  2854  010F5A  0100               	movlb	0	; () banked
  2855  010F5C  6F71               	movwf	CANsendMessage@identifier& (0+255),b
  2856  010F5E  0E00               	movlw	0
  2857  010F60  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2858  010F62  0E00               	movlw	0
  2859  010F64  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2860  010F66  0E00               	movlw	0
  2861  010F68  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2862  010F6A  0E45               	movlw	low _park_assist_state
  2863  010F6C  0100               	movlb	0	; () banked
  2864  010F6E  6F75               	movwf	CANsendMessage@data& (0+255),b
  2865  010F70  0E01               	movlw	high _park_assist_state
  2866  010F72  0100               	movlb	0	; () banked
  2867  010F74  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
  2868  010F76  0E08               	movlw	8
  2869  010F78  0100               	movlb	0	; () banked
  2870  010F7A  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
  2871  010F7C  0EBC               	movlw	188
  2872  010F7E  0100               	movlb	0	; () banked
  2873  010F80  6F78               	movwf	CANsendMessage@flags& (0+255),b
  2874  010F82  ECA9  F08E         	call	_CANsendMessage	;wreg free
  2875                           
  2876                           ;RemoteCan.c: 370: Can_Tx_Force = 1;
  2877  010F86  8048               	bsf	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  2878  010F88                     l9681:
  2879                           
  2880                           ;RemoteCan.c: 371: }
  2881                           ;RemoteCan.c: 374: data_steering [0] = 180 - (JoystickValues[0])*(JoystickConstants[0]);
  2882  010F88  0E00               	movlw	0
  2883  010F8A  0100               	movlb	0	; () banked
  2884  010F8C  6FA9               	movwf	___fladd@a& (0+255),b
  2885  010F8E  0E00               	movlw	0
  2886  010F90  6FAA               	movwf	(___fladd@a+1)& (0+255),b
  2887  010F92  0E34               	movlw	52
  2888  010F94  6FAB               	movwf	(___fladd@a+2)& (0+255),b
  2889  010F96  0E43               	movlw	67
  2890  010F98  6FAC               	movwf	(___fladd@a+3)& (0+255),b
  2891  010F9A  C0CD  F083         	movff	_JoystickConstants,___flmul@a	;volatile
  2892  010F9E  C0CE  F084         	movff	_JoystickConstants+1,___flmul@a+1	;volatile
  2893  010FA2  C0CF  F085         	movff	_JoystickConstants+2,___flmul@a+2	;volatile
  2894  010FA6  C0D0  F086         	movff	_JoystickConstants+3,___flmul@a+3	;volatile
  2895  010FAA  0100               	movlb	0	; () banked
  2896  010FAC  51DD               	movf	_JoystickValues& (0+255),w,b	;volatile
  2897  010FAE  0100               	movlb	0	; () banked
  2898  010FB0  6F71               	movwf	___xxtofl@val& (0+255),b
  2899  010FB2  6B72               	clrf	(___xxtofl@val+1)& (0+255),b
  2900  010FB4  6B73               	clrf	(___xxtofl@val+2)& (0+255),b
  2901  010FB6  6B74               	clrf	(___xxtofl@val+3)& (0+255),b
  2902  010FB8  0E00               	movlw	0
  2903  010FBA  EC13  F0A7         	call	___xxtofl
  2904  010FBE  C071  F07F         	movff	?___xxtofl,___flmul@b
  2905  010FC2  C072  F080         	movff	?___xxtofl+1,___flmul@b+1
  2906  010FC6  C073  F081         	movff	?___xxtofl+2,___flmul@b+2
  2907  010FCA  C074  F082         	movff	?___xxtofl+3,___flmul@b+3
  2908  010FCE  EC1E  F09D         	call	___flmul	;wreg free
  2909  010FD2  C07F  F098         	movff	?___flmul,___flneg@f1
  2910  010FD6  C080  F099         	movff	?___flmul+1,___flneg@f1+1
  2911  010FDA  C081  F09A         	movff	?___flmul+2,___flneg@f1+2
  2912  010FDE  C082  F09B         	movff	?___flmul+3,___flneg@f1+3
  2913  010FE2  EC24  F0B3         	call	___flneg	;wreg free
  2914  010FE6  C098  F0A5         	movff	?___flneg,___fladd@b
  2915  010FEA  C099  F0A6         	movff	?___flneg+1,___fladd@b+1
  2916  010FEE  C09A  F0A7         	movff	?___flneg+2,___fladd@b+2
  2917  010FF2  C09B  F0A8         	movff	?___flneg+3,___fladd@b+3
  2918  010FF6  ECCA  F09A         	call	___fladd	;wreg free
  2919  010FFA  C0A5  F0B9         	movff	?___fladd,___fltol@f1
  2920  010FFE  C0A6  F0BA         	movff	?___fladd+1,___fltol@f1+1
  2921  011002  C0A7  F0BB         	movff	?___fladd+2,___fltol@f1+2
  2922  011006  C0A8  F0BC         	movff	?___fladd+3,___fltol@f1+3
  2923  01100A  ECCF  F0AC         	call	___fltol	;wreg free
  2924  01100E  0100               	movlb	0	; () banked
  2925  011010  51B9               	movf	?___fltol& (0+255),w,b
  2926  011012  0101               	movlb	1	; () banked
  2927  011014  6F3D               	movwf	_data_steering& (0+255),b
  2928                           
  2929                           ; BSR set to: 1
  2930                           ;RemoteCan.c: 375: if (parking_state == 1) {
  2931  011016  0100               	movlb	0	; () banked
  2932  011018  05E9               	decf	_parking_state& (0+255),w,b	;volatile
  2933  01101A  A4D8               	btfss	status,2,c
  2934  01101C  D05C               	goto	l859
  2935                           
  2936                           ; BSR set to: 0
  2937                           ;RemoteCan.c: 376: if (steering_correction_dir == 1) {
  2938  01101E  A04A               	btfss	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
  2939  011020  D00F               	goto	l9689
  2940                           
  2941                           ; BSR set to: 0
  2942                           ;RemoteCan.c: 377: check = data_steering[0] + steering_correction;
  2943  011022  0100               	movlb	0	; () banked
  2944  011024  51EA               	movf	_steering_correction& (0+255),w,b	;volatile
  2945  011026  C13D  F166         	movff	_data_steering,??_main
  2946  01102A  0101               	movlb	1	; () banked
  2947  01102C  6B67               	clrf	(??_main+1)& (0+255),b
  2948  01102E  0101               	movlb	1	; () banked
  2949  011030  2766               	addwf	??_main& (0+255),f,b
  2950  011032  0E00               	movlw	0
  2951  011034  2367               	addwfc	(??_main+1)& (0+255),f,b
  2952  011036  C166  F0D5         	movff	??_main,_check	;volatile
  2953  01103A  C167  F0D6         	movff	??_main+1,_check+1	;volatile
  2954  01103E  D01B               	goto	L3
  2955  011040                     l9689:
  2956                           
  2957                           ; BSR set to: 0
  2958                           ;RemoteCan.c: 379: check = data_steering[0] - steering_correction;
  2959  011040  0100               	movlb	0	; () banked
  2960  011042  51EA               	movf	_steering_correction& (0+255),w,b	;volatile
  2961  011044  0101               	movlb	1	; () banked
  2962  011046  6F66               	movwf	??_main& (0+255),b
  2963  011048  6B67               	clrf	(??_main+1)& (0+255),b
  2964  01104A  0101               	movlb	1	; () banked
  2965  01104C  1F66               	comf	??_main& (0+255),f,b
  2966  01104E  1F67               	comf	(??_main+1)& (0+255),f,b
  2967  011050  4B66               	infsnz	??_main& (0+255),f,b
  2968  011052  2B67               	incf	(??_main+1)& (0+255),f,b
  2969  011054  0101               	movlb	1	; () banked
  2970  011056  513D               	movf	_data_steering& (0+255),w,b
  2971  011058  0101               	movlb	1	; () banked
  2972  01105A  6F68               	movwf	(??_main+2)& (0+255),b
  2973  01105C  6B69               	clrf	(??_main+3)& (0+255),b
  2974  01105E  0101               	movlb	1	; () banked
  2975  011060  5166               	movf	??_main& (0+255),w,b
  2976  011062  0101               	movlb	1	; () banked
  2977  011064  2768               	addwf	(??_main+2)& (0+255),f,b
  2978  011066  0101               	movlb	1	; () banked
  2979  011068  5167               	movf	(??_main+1)& (0+255),w,b
  2980  01106A  0101               	movlb	1	; () banked
  2981  01106C  2369               	addwfc	(??_main+3)& (0+255),f,b
  2982  01106E  C168  F0D5         	movff	??_main+2,_check	;volatile
  2983  011072  C169  F0D6         	movff	??_main+3,_check+1	;volatile
  2984  011076                     L3:
  2985  011076  0100               	movlb	0	; () banked
  2986  011078  0E00               	movlw	0
  2987  01107A  BFD6               	btfsc	(_check+1)& (0+255),7,b	;volatile
  2988  01107C  0EFF               	movlw	-1
  2989  01107E  6FD7               	movwf	(_check+2)& (0+255),b	;volatile
  2990  011080  6FD8               	movwf	(_check+3)& (0+255),b	;volatile
  2991                           
  2992                           ; BSR set to: 0
  2993                           ;RemoteCan.c: 380: }
  2994                           ;RemoteCan.c: 381: if ((check >= 0)&&(check <= 180)) {
  2995  011082  0100               	movlb	0	; () banked
  2996  011084  BFD8               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2997  011086  D012               	goto	l9695
  2998                           
  2999                           ; BSR set to: 0
  3000  011088  0100               	movlb	0	; () banked
  3001  01108A  BFD8               	btfsc	(_check+3)& (0+255),7,b	;volatile
  3002  01108C  D00C               	goto	l9693
  3003  01108E  0100               	movlb	0	; () banked
  3004  011090  51D8               	movf	(_check+3)& (0+255),w,b	;volatile
  3005  011092  0100               	movlb	0	; () banked
  3006  011094  11D7               	iorwf	(_check+2)& (0+255),w,b	;volatile
  3007  011096  0100               	movlb	0	; () banked
  3008  011098  11D6               	iorwf	(_check+1)& (0+255),w,b	;volatile
  3009  01109A  E108               	bnz	l9695
  3010  01109C  0EB5               	movlw	181
  3011  01109E  0100               	movlb	0	; () banked
  3012  0110A0  5DD5               	subwf	_check& (0+255),w,b	;volatile
  3013  0110A2  B0D8               	btfsc	status,0,c
  3014  0110A4  D003               	goto	l9695
  3015  0110A6                     l9693:
  3016                           
  3017                           ; BSR set to: 0
  3018                           ;RemoteCan.c: 382: data_steering[0] = check;
  3019  0110A6  C0D5  F13D         	movff	_check,_data_steering	;volatile
  3020                           
  3021                           ;RemoteCan.c: 383: } else {
  3022  0110AA  D019               	goto	l866
  3023  0110AC                     l9695:
  3024                           
  3025                           ; BSR set to: 0
  3026                           ;RemoteCan.c: 384: if (check > 180) {
  3027  0110AC  0100               	movlb	0	; () banked
  3028  0110AE  BFD8               	btfsc	(_check+3)& (0+255),7,b	;volatile
  3029  0110B0  D00E               	goto	l9699
  3030  0110B2  0100               	movlb	0	; () banked
  3031  0110B4  51D8               	movf	(_check+3)& (0+255),w,b	;volatile
  3032  0110B6  0100               	movlb	0	; () banked
  3033  0110B8  11D7               	iorwf	(_check+2)& (0+255),w,b	;volatile
  3034  0110BA  0100               	movlb	0	; () banked
  3035  0110BC  11D6               	iorwf	(_check+1)& (0+255),w,b	;volatile
  3036  0110BE  E105               	bnz	u12990
  3037  0110C0  0EB5               	movlw	181
  3038  0110C2  0100               	movlb	0	; () banked
  3039  0110C4  5DD5               	subwf	_check& (0+255),w,b	;volatile
  3040  0110C6  A0D8               	btfss	status,0,c
  3041  0110C8  D002               	goto	l9699
  3042  0110CA                     u12990:
  3043                           
  3044                           ; BSR set to: 0
  3045                           ;RemoteCan.c: 385: data_steering[0] = 180;
  3046  0110CA  0EB4               	movlw	180
  3047  0110CC  D001               	goto	L4
  3048  0110CE                     l9699:
  3049                           
  3050                           ;RemoteCan.c: 387: data_steering[0] = 0;
  3051  0110CE  0E00               	movlw	0
  3052  0110D0                     L4:
  3053  0110D0  0101               	movlb	1	; () banked
  3054  0110D2  6F3D               	movwf	_data_steering& (0+255),b
  3055                           
  3056                           ; BSR set to: 1
  3057                           ;RemoteCan.c: 388: }
  3058                           ;RemoteCan.c: 389: }
  3059                           ;RemoteCan.c: 390: } else {
  3060                           
  3061                           ; BSR set to: 1
  3062  0110D4  D004               	goto	l866
  3063  0110D6                     l859:
  3064                           
  3065                           ; BSR set to: 0
  3066                           ;RemoteCan.c: 391: steering_correction_dir = 0;
  3067  0110D6  904A               	bcf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
  3068                           
  3069                           ; BSR set to: 0
  3070                           ;RemoteCan.c: 392: steering_correction = 0;
  3071  0110D8  0E00               	movlw	0
  3072  0110DA  0100               	movlb	0	; () banked
  3073  0110DC  6FEA               	movwf	_steering_correction& (0+255),b	;volatile
  3074  0110DE                     l866:
  3075                           
  3076                           ;RemoteCan.c: 393: }
  3077                           ;RemoteCan.c: 397: if (switch_position != 0) {
  3078  0110DE  0100               	movlb	0	; () banked
  3079  0110E0  51EB               	movf	_switch_position& (0+255),w,b	;volatile
  3080  0110E2  B4D8               	btfsc	status,2,c
  3081  0110E4  D0D2               	goto	l9737
  3082                           
  3083                           ; BSR set to: 0
  3084                           ;RemoteCan.c: 398: if (JoystickValues[1] > (center_value_Y + 2)) {
  3085  0110E6  0100               	movlb	0	; () banked
  3086  0110E8  51DE               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  3087  0110EA  0101               	movlb	1	; () banked
  3088  0110EC  6F66               	movwf	??_main& (0+255),b
  3089  0110EE  6B67               	clrf	(??_main+1)& (0+255),b
  3090  0110F0  0100               	movlb	0	; () banked
  3091  0110F2  51E5               	movf	_center_value_Y& (0+255),w,b	;volatile
  3092  0110F4  0101               	movlb	1	; () banked
  3093  0110F6  6F68               	movwf	(??_main+2)& (0+255),b
  3094  0110F8  6B69               	clrf	(??_main+3)& (0+255),b
  3095  0110FA  0E02               	movlw	2
  3096  0110FC  0101               	movlb	1	; () banked
  3097  0110FE  2768               	addwf	(??_main+2)& (0+255),f,b
  3098  011100  0E00               	movlw	0
  3099  011102  2369               	addwfc	(??_main+3)& (0+255),f,b
  3100  011104  0101               	movlb	1	; () banked
  3101  011106  5166               	movf	??_main& (0+255),w,b
  3102  011108  0101               	movlb	1	; () banked
  3103  01110A  5D68               	subwf	(??_main+2)& (0+255),w,b
  3104  01110C  0101               	movlb	1	; () banked
  3105  01110E  5169               	movf	(??_main+3)& (0+255),w,b
  3106  011110  0A80               	xorlw	128
  3107  011112  0101               	movlb	1	; () banked
  3108  011114  6F6A               	movwf	(??_main+4)& (0+255),b
  3109  011116  0101               	movlb	1	; () banked
  3110  011118  5167               	movf	(??_main+1)& (0+255),w,b
  3111  01111A  0A80               	xorlw	128
  3112  01111C  0101               	movlb	1	; () banked
  3113  01111E  596A               	subwfb	(??_main+4)& (0+255),w,b
  3114  011120  B0D8               	btfsc	status,0,c
  3115  011122  D04F               	goto	l9711
  3116                           
  3117                           ; BSR set to: 1
  3118                           ;RemoteCan.c: 399: set_speed = (JoystickValues[1] - center_value_Y + 2)*(JoystickConstan
      +                          ts[1]);
  3119  011124  C0D1  F083         	movff	_JoystickConstants+4,___flmul@a	;volatile
  3120  011128  C0D2  F084         	movff	_JoystickConstants+5,___flmul@a+1	;volatile
  3121  01112C  C0D3  F085         	movff	_JoystickConstants+6,___flmul@a+2	;volatile
  3122  011130  C0D4  F086         	movff	_JoystickConstants+7,___flmul@a+3	;volatile
  3123  011134  0100               	movlb	0	; () banked
  3124  011136  51E5               	movf	_center_value_Y& (0+255),w,b	;volatile
  3125  011138  0101               	movlb	1	; () banked
  3126  01113A  6F66               	movwf	??_main& (0+255),b
  3127  01113C  6B67               	clrf	(??_main+1)& (0+255),b
  3128  01113E  0101               	movlb	1	; () banked
  3129  011140  1F66               	comf	??_main& (0+255),f,b
  3130  011142  1F67               	comf	(??_main+1)& (0+255),f,b
  3131  011144  4B66               	infsnz	??_main& (0+255),f,b
  3132  011146  2B67               	incf	(??_main+1)& (0+255),f,b
  3133  011148  0100               	movlb	0	; () banked
  3134  01114A  51DE               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  3135  01114C  0101               	movlb	1	; () banked
  3136  01114E  6F68               	movwf	(??_main+2)& (0+255),b
  3137  011150  6B69               	clrf	(??_main+3)& (0+255),b
  3138  011152  0101               	movlb	1	; () banked
  3139  011154  5166               	movf	??_main& (0+255),w,b
  3140  011156  0101               	movlb	1	; () banked
  3141  011158  2768               	addwf	(??_main+2)& (0+255),f,b
  3142  01115A  0101               	movlb	1	; () banked
  3143  01115C  5167               	movf	(??_main+1)& (0+255),w,b
  3144  01115E  0101               	movlb	1	; () banked
  3145  011160  2369               	addwfc	(??_main+3)& (0+255),f,b
  3146  011162  0E02               	movlw	2
  3147  011164  0101               	movlb	1	; () banked
  3148  011166  2768               	addwf	(??_main+2)& (0+255),f,b
  3149  011168  0E00               	movlw	0
  3150  01116A  2369               	addwfc	(??_main+3)& (0+255),f,b
  3151  01116C  C168  F071         	movff	??_main+2,___xxtofl@val
  3152  011170  C169  F072         	movff	??_main+3,___xxtofl@val+1
  3153  011174  0100               	movlb	0	; () banked
  3154  011176  0E00               	movlw	0
  3155  011178  BF72               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  3156  01117A  0EFF               	movlw	-1
  3157  01117C  6F73               	movwf	(___xxtofl@val+2)& (0+255),b
  3158  01117E  6F74               	movwf	(___xxtofl@val+3)& (0+255),b
  3159  011180  0E01               	movlw	1
  3160  011182  EC13  F0A7         	call	___xxtofl
  3161  011186  C071  F07F         	movff	?___xxtofl,___flmul@b
  3162  01118A  C072  F080         	movff	?___xxtofl+1,___flmul@b+1
  3163  01118E  C073  F081         	movff	?___xxtofl+2,___flmul@b+2
  3164  011192  C074  F082         	movff	?___xxtofl+3,___flmul@b+3
  3165  011196  EC1E  F09D         	call	___flmul	;wreg free
  3166  01119A  C07F  F0B9         	movff	?___flmul,___fltol@f1
  3167  01119E  C080  F0BA         	movff	?___flmul+1,___fltol@f1+1
  3168  0111A2  C081  F0BB         	movff	?___flmul+2,___fltol@f1+2
  3169  0111A6  C082  F0BC         	movff	?___flmul+3,___fltol@f1+3
  3170  0111AA  ECCF  F0AC         	call	___fltol	;wreg free
  3171  0111AE  C0B9  F0E3         	movff	?___fltol,_set_speed	;volatile
  3172  0111B2  C0BA  F0E4         	movff	?___fltol+1,_set_speed+1	;volatile
  3173                           
  3174                           ;RemoteCan.c: 400: data_brake [0] = 3;
  3175  0111B6  0E03               	movlw	3
  3176  0111B8  D022               	goto	L5
  3177  0111BA                     l9709:
  3178                           
  3179                           ; BSR set to: 1
  3180                           ;RemoteCan.c: 401: data_brake [1] = 0;
  3181  0111BA  0E00               	movlw	0
  3182  0111BC  0101               	movlb	1	; () banked
  3183  0111BE  6F2E               	movwf	(_data_brake+1)& (0+255),b
  3184                           
  3185                           ;RemoteCan.c: 402: } else {
  3186  0111C0  D021               	goto	l9725
  3187  0111C2                     l9711:
  3188                           
  3189                           ; BSR set to: 1
  3190                           ;RemoteCan.c: 403: set_speed = 0;
  3191  0111C2  0E00               	movlw	0
  3192  0111C4  0100               	movlb	0	; () banked
  3193  0111C6  6FE4               	movwf	(_set_speed+1)& (0+255),b	;volatile
  3194  0111C8  0E00               	movlw	0
  3195  0111CA  6FE3               	movwf	_set_speed& (0+255),b	;volatile
  3196                           
  3197                           ; BSR set to: 0
  3198                           ;RemoteCan.c: 404: if (JoystickValues[1] <= 65) {
  3199  0111CC  0E42               	movlw	66
  3200  0111CE  0100               	movlb	0	; () banked
  3201  0111D0  61DE               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  3202  0111D2  D006               	goto	l9717
  3203                           
  3204                           ; BSR set to: 0
  3205                           ;RemoteCan.c: 405: data_brake [0] = 0b00000010;
  3206  0111D4  0E02               	movlw	2
  3207  0111D6  0101               	movlb	1	; () banked
  3208  0111D8  6F2D               	movwf	_data_brake& (0+255),b
  3209                           
  3210                           ;RemoteCan.c: 406: data_brake [1] = 0;
  3211  0111DA  0E00               	movlw	0
  3212  0111DC  0101               	movlb	1	; () banked
  3213  0111DE  6F2E               	movwf	(_data_brake+1)& (0+255),b
  3214  0111E0                     l9717:
  3215                           
  3216                           ;RemoteCan.c: 407: }
  3217                           ;RemoteCan.c: 408: if (JoystickValues[1] <= 20) {
  3218  0111E0  0E15               	movlw	21
  3219  0111E2  0100               	movlb	0	; () banked
  3220  0111E4  61DE               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  3221  0111E6  D006               	goto	l9721
  3222                           
  3223                           ; BSR set to: 0
  3224                           ;RemoteCan.c: 409: data_brake [0] = 0b00000001;
  3225  0111E8  0E01               	movlw	1
  3226  0111EA  0101               	movlb	1	; () banked
  3227  0111EC  6F2D               	movwf	_data_brake& (0+255),b
  3228                           
  3229                           ;RemoteCan.c: 410: data_brake [1] = 0;
  3230  0111EE  0E00               	movlw	0
  3231  0111F0  0101               	movlb	1	; () banked
  3232  0111F2  6F2E               	movwf	(_data_brake+1)& (0+255),b
  3233  0111F4                     l9721:
  3234                           
  3235                           ;RemoteCan.c: 411: }
  3236                           ;RemoteCan.c: 412: if (JoystickValues[1] <= 5) {
  3237  0111F4  0E06               	movlw	6
  3238  0111F6  0100               	movlb	0	; () banked
  3239  0111F8  61DE               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  3240  0111FA  D004               	goto	l9725
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;RemoteCan.c: 413: data_brake [0] = 0b00000000;
  3244  0111FC  0E00               	movlw	0
  3245  0111FE                     L5:
  3246  0111FE  0101               	movlb	1	; () banked
  3247  011200  6F2D               	movwf	_data_brake& (0+255),b
  3248  011202  D7DB               	goto	l9709
  3249  011204                     l9725:
  3250                           
  3251                           ;RemoteCan.c: 415: }
  3252                           ;RemoteCan.c: 416: }
  3253                           ;RemoteCan.c: 418: if ((JoystickValues[1] >= center_value_Y)&&(parking_state == 0)) {
  3254  011204  0100               	movlb	0	; () banked
  3255  011206  51E5               	movf	_center_value_Y& (0+255),w,b	;volatile
  3256  011208  0100               	movlb	0	; () banked
  3257  01120A  5DDE               	subwf	(_JoystickValues+1)& (0+255),w,b	;volatile
  3258  01120C  A0D8               	btfss	status,0,c
  3259  01120E  D067               	goto	L18
  3260                           
  3261                           ; BSR set to: 0
  3262  011210  0100               	movlb	0	; () banked
  3263  011212  51E9               	movf	_parking_state& (0+255),w,b	;volatile
  3264  011214  A4D8               	btfss	status,2,c
  3265  011216  D063               	goto	L18
  3266                           
  3267                           ; BSR set to: 0
  3268                           ;RemoteCan.c: 420: collision_risk_value = ((JoystickValues[1] - center_value_Y) / 3) + 4
      +                          ;
  3269  011218  0100               	movlb	0	; () banked
  3270  01121A  51E5               	movf	_center_value_Y& (0+255),w,b	;volatile
  3271  01121C  0101               	movlb	1	; () banked
  3272  01121E  6F66               	movwf	??_main& (0+255),b
  3273  011220  6B67               	clrf	(??_main+1)& (0+255),b
  3274  011222  0101               	movlb	1	; () banked
  3275  011224  1F66               	comf	??_main& (0+255),f,b
  3276  011226  1F67               	comf	(??_main+1)& (0+255),f,b
  3277  011228  4B66               	infsnz	??_main& (0+255),f,b
  3278  01122A  2B67               	incf	(??_main+1)& (0+255),f,b
  3279  01122C  0100               	movlb	0	; () banked
  3280  01122E  51DE               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  3281  011230  0101               	movlb	1	; () banked
  3282  011232  2566               	addwf	??_main& (0+255),w,b
  3283  011234  0100               	movlb	0	; () banked
  3284  011236  6F77               	movwf	___awdiv@dividend& (0+255),b
  3285  011238  0E00               	movlw	0
  3286  01123A  0101               	movlb	1	; () banked
  3287  01123C  2167               	addwfc	(??_main+1)& (0+255),w,b
  3288  01123E  0100               	movlb	0	; () banked
  3289  011240  6F78               	movwf	(___awdiv@dividend+1)& (0+255),b
  3290  011242  0E00               	movlw	0
  3291  011244  0100               	movlb	0	; () banked
  3292  011246  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  3293  011248  0E03               	movlw	3
  3294  01124A  6F79               	movwf	___awdiv@divisor& (0+255),b
  3295  01124C  ECCB  F0AD         	call	___awdiv	;wreg free
  3296  011250  0100               	movlb	0	; () banked
  3297  011252  5177               	movf	?___awdiv& (0+255),w,b
  3298  011254  0F04               	addlw	4
  3299  011256  0100               	movlb	0	; () banked
  3300  011258  6FE6               	movwf	_collision_risk_value& (0+255),b	;volatile
  3301                           
  3302                           ; BSR set to: 0
  3303                           ;RemoteCan.c: 421: if (collision_sensor_distance[dir] < collision_risk_value) {
  3304  01125A  0100               	movlb	0	; () banked
  3305  01125C  51E7               	movf	_dir& (0+255),w,b	;volatile
  3306  01125E  0D01               	mullw	1
  3307  011260  0E1D               	movlw	low _collision_sensor_distance
  3308  011262  24F3               	addwf	prodl,w,c
  3309  011264  6ED9               	movwf	fsr2l,c
  3310  011266  0E00               	movlw	high _collision_sensor_distance
  3311  011268  20F4               	addwfc	prodh,w,c
  3312  01126A  6EDA               	movwf	fsr2h,c
  3313  01126C  0100               	movlb	0	; () banked
  3314  01126E  51E6               	movf	_collision_risk_value& (0+255),w,b	;volatile
  3315  011270  5CDE               	subwf	postinc2,w,c
  3316  011272  B0D8               	btfsc	status,0,c
  3317  011274  D034               	goto	L18
  3318                           
  3319                           ; BSR set to: 0
  3320                           ;RemoteCan.c: 422: set_speed = 0;
  3321  011276  0E00               	movlw	0
  3322  011278  0100               	movlb	0	; () banked
  3323  01127A  6FE4               	movwf	(_set_speed+1)& (0+255),b	;volatile
  3324  01127C  0E00               	movlw	0
  3325  01127E  6FE3               	movwf	_set_speed& (0+255),b	;volatile
  3326                           
  3327                           ;RemoteCan.c: 423: data_brake [0] = 0b00000000;
  3328  011280  0E00               	movlw	0
  3329  011282  0101               	movlb	1	; () banked
  3330  011284  6F2D               	movwf	_data_brake& (0+255),b
  3331                           
  3332                           ; BSR set to: 1
  3333                           ;RemoteCan.c: 424: collision_msg = 1;
  3334  011286  8C48               	bsf	_collision_msg/(0+8),_collision_msg& (0+7),c	;volatile
  3335                           
  3336                           ;RemoteCan.c: 425: } else {
  3337  011288  D02B               	goto	l9745
  3338  01128A                     l9737:
  3339                           
  3340                           ; BSR set to: 0
  3341                           ;RemoteCan.c: 432: set_speed = 0;
  3342  01128A  0E00               	movlw	0
  3343  01128C  0100               	movlb	0	; () banked
  3344  01128E  6FE4               	movwf	(_set_speed+1)& (0+255),b	;volatile
  3345  011290  0E00               	movlw	0
  3346  011292  6FE3               	movwf	_set_speed& (0+255),b	;volatile
  3347                           
  3348                           ;RemoteCan.c: 433: data_brake [0] = 0b00000000;
  3349  011294  0E00               	movlw	0
  3350  011296  0101               	movlb	1	; () banked
  3351  011298  6F2D               	movwf	_data_brake& (0+255),b
  3352                           
  3353                           ; BSR set to: 1
  3354                           ;RemoteCan.c: 434: collision_risk_value = ((JoystickValues[1] - 130) / 3) + 4;
  3355  01129A  0E7E               	movlw	126
  3356  01129C  0100               	movlb	0	; () banked
  3357  01129E  25DE               	addwf	(_JoystickValues+1)& (0+255),w,b	;volatile
  3358  0112A0  0100               	movlb	0	; () banked
  3359  0112A2  6F77               	movwf	___awdiv@dividend& (0+255),b
  3360  0112A4  0100               	movlb	0	; () banked
  3361  0112A6  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  3362  0112A8  0EFF               	movlw	255
  3363  0112AA  2378               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
  3364  0112AC  0E00               	movlw	0
  3365  0112AE  0100               	movlb	0	; () banked
  3366  0112B0  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  3367  0112B2  0E03               	movlw	3
  3368  0112B4  6F79               	movwf	___awdiv@divisor& (0+255),b
  3369  0112B6  ECCB  F0AD         	call	___awdiv	;wreg free
  3370  0112BA  0100               	movlb	0	; () banked
  3371  0112BC  5177               	movf	?___awdiv& (0+255),w,b
  3372  0112BE  0F04               	addlw	4
  3373  0112C0  0100               	movlb	0	; () banked
  3374  0112C2  6FE6               	movwf	_collision_risk_value& (0+255),b	;volatile
  3375                           
  3376                           ; BSR set to: 0
  3377                           ;RemoteCan.c: 435: if (collision_sensor_distance[dir] > collision_risk_value) {
  3378  0112C4  0100               	movlb	0	; () banked
  3379  0112C6  51E7               	movf	_dir& (0+255),w,b	;volatile
  3380  0112C8  0D01               	mullw	1
  3381  0112CA  0E1D               	movlw	low _collision_sensor_distance
  3382  0112CC  24F3               	addwf	prodl,w,c
  3383  0112CE  6ED9               	movwf	fsr2l,c
  3384  0112D0  0E00               	movlw	high _collision_sensor_distance
  3385  0112D2  20F4               	addwfc	prodh,w,c
  3386  0112D4  6EDA               	movwf	fsr2h,c
  3387  0112D6  50DE               	movf	postinc2,w,c
  3388  0112D8  0100               	movlb	0	; () banked
  3389  0112DA  5DE6               	subwf	_collision_risk_value& (0+255),w,b	;volatile
  3390  0112DC  A0D8               	btfss	status,0,c
  3391  0112DE                     L18:
  3392                           
  3393                           ; BSR set to: 0
  3394                           ;RemoteCan.c: 436: collision_msg = 0;
  3395  0112DE  9C48               	bcf	_collision_msg/(0+8),_collision_msg& (0+7),c	;volatile
  3396  0112E0                     l9745:
  3397                           
  3398                           ;RemoteCan.c: 437: }
  3399                           ;RemoteCan.c: 438: }
  3400                           ;RemoteCan.c: 440: if ((((time_counter - pr_time_2) >= 2) && (parking_message_ID < 2)) |
      +                          | (Can_Tx_Force == 1)) {
  3401  0112E0  C009  F166         	movff	_pr_time_2,??_main	;volatile
  3402  0112E4  C00A  F167         	movff	_pr_time_2+1,??_main+1	;volatile
  3403  0112E8  C00B  F168         	movff	_pr_time_2+2,??_main+2	;volatile
  3404  0112EC  C00C  F169         	movff	_pr_time_2+3,??_main+3	;volatile
  3405  0112F0  0101               	movlb	1	; () banked
  3406  0112F2  1F66               	comf	??_main& (0+255),f,b
  3407  0112F4  1F67               	comf	(??_main+1)& (0+255),f,b
  3408  0112F6  1F68               	comf	(??_main+2)& (0+255),f,b
  3409  0112F8  1F69               	comf	(??_main+3)& (0+255),f,b
  3410  0112FA  2B66               	incf	??_main& (0+255),f,b
  3411  0112FC  0E00               	movlw	0
  3412  0112FE  2367               	addwfc	(??_main+1)& (0+255),f,b
  3413  011300  2368               	addwfc	(??_main+2)& (0+255),f,b
  3414  011302  2369               	addwfc	(??_main+3)& (0+255),f,b
  3415  011304  5019               	movf	_time_counter,w,c	;volatile
  3416  011306  0101               	movlb	1	; () banked
  3417  011308  2566               	addwf	??_main& (0+255),w,b
  3418  01130A  0101               	movlb	1	; () banked
  3419  01130C  6F6A               	movwf	(??_main+4)& (0+255),b
  3420  01130E  501A               	movf	_time_counter+1,w,c	;volatile
  3421  011310  0101               	movlb	1	; () banked
  3422  011312  2167               	addwfc	(??_main+1)& (0+255),w,b
  3423  011314  0101               	movlb	1	; () banked
  3424  011316  6F6B               	movwf	(??_main+5)& (0+255),b
  3425  011318  501B               	movf	_time_counter+2,w,c	;volatile
  3426  01131A  0101               	movlb	1	; () banked
  3427  01131C  2168               	addwfc	(??_main+2)& (0+255),w,b
  3428  01131E  0101               	movlb	1	; () banked
  3429  011320  6F6C               	movwf	(??_main+6)& (0+255),b
  3430  011322  501C               	movf	_time_counter+3,w,c	;volatile
  3431  011324  0101               	movlb	1	; () banked
  3432  011326  2169               	addwfc	(??_main+3)& (0+255),w,b
  3433  011328  0101               	movlb	1	; () banked
  3434  01132A  6F6D               	movwf	(??_main+7)& (0+255),b
  3435  01132C  0101               	movlb	1	; () banked
  3436  01132E  516D               	movf	(??_main+7)& (0+255),w,b
  3437  011330  0101               	movlb	1	; () banked
  3438  011332  116C               	iorwf	(??_main+6)& (0+255),w,b
  3439  011334  0101               	movlb	1	; () banked
  3440  011336  116B               	iorwf	(??_main+5)& (0+255),w,b
  3441  011338  E105               	bnz	u13090
  3442  01133A  0E02               	movlw	2
  3443  01133C  0101               	movlb	1	; () banked
  3444  01133E  5D6A               	subwf	(??_main+4)& (0+255),w,b
  3445  011340  A0D8               	btfss	status,0,c
  3446  011342  D004               	goto	l883
  3447  011344                     u13090:
  3448                           
  3449                           ; BSR set to: 1
  3450  011344  0E01               	movlw	1
  3451  011346  0100               	movlb	0	; () banked
  3452  011348  65E8               	cpfsgt	_parking_message_ID& (0+255),b	;volatile
  3453  01134A  D002               	goto	l881
  3454  01134C                     l883:
  3455  01134C  A048               	btfss	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  3456  01134E  D01B               	goto	l9757
  3457  011350                     l881:
  3458                           
  3459                           ;RemoteCan.c: 441: if (Can_Tx_Force == 1) {
  3460  011350  A048               	btfss	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  3461  011352  D00F               	goto	l9753
  3462                           
  3463                           ;RemoteCan.c: 442: dir = 1;
  3464  011354  0E01               	movlw	1
  3465  011356  0100               	movlb	0	; () banked
  3466  011358  6FE7               	movwf	_dir& (0+255),b	;volatile
  3467                           
  3468                           ;RemoteCan.c: 443: set_speed = 0;
  3469  01135A  0E00               	movlw	0
  3470  01135C  0100               	movlb	0	; () banked
  3471  01135E  6FE4               	movwf	(_set_speed+1)& (0+255),b	;volatile
  3472  011360  0E00               	movlw	0
  3473  011362  6FE3               	movwf	_set_speed& (0+255),b	;volatile
  3474                           
  3475                           ;RemoteCan.c: 444: data_steering [0] = 90;
  3476  011364  0E5A               	movlw	90
  3477  011366  0101               	movlb	1	; () banked
  3478  011368  6F3D               	movwf	_data_steering& (0+255),b
  3479                           
  3480                           ;RemoteCan.c: 445: data_brake [0] = 0b00000000;
  3481  01136A  0E00               	movlw	0
  3482  01136C  0101               	movlb	1	; () banked
  3483  01136E  6F2D               	movwf	_data_brake& (0+255),b
  3484                           
  3485                           ; BSR set to: 1
  3486                           ;RemoteCan.c: 446: Can_Tx_Force = 0;
  3487  011370  9048               	bcf	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  3488  011372                     l9753:
  3489                           
  3490                           ;RemoteCan.c: 447: }
  3491                           ;RemoteCan.c: 448: pr_time_2 = time_counter;
  3492  011372  C019  F009         	movff	_time_counter,_pr_time_2	;volatile
  3493  011376  C01A  F00A         	movff	_time_counter+1,_pr_time_2+1	;volatile
  3494  01137A  C01B  F00B         	movff	_time_counter+2,_pr_time_2+2	;volatile
  3495  01137E  C01C  F00C         	movff	_time_counter+3,_pr_time_2+3	;volatile
  3496                           
  3497                           ;RemoteCan.c: 449: CAN_Tx();
  3498  011382  ECE7  F0AE         	call	_CAN_Tx	;wreg free
  3499  011386                     l9757:
  3500                           
  3501                           ;RemoteCan.c: 450: }
  3502                           ;RemoteCan.c: 453: if (time_counter >= pr_time_6) {
  3503  011386  5015               	movf	_pr_time_6,w,c	;volatile
  3504  011388  5C19               	subwf	_time_counter,w,c	;volatile
  3505  01138A  5016               	movf	_pr_time_6+1,w,c	;volatile
  3506  01138C  581A               	subwfb	_time_counter+1,w,c	;volatile
  3507  01138E  5017               	movf	_pr_time_6+2,w,c	;volatile
  3508  011390  581B               	subwfb	_time_counter+2,w,c	;volatile
  3509  011392  5018               	movf	_pr_time_6+3,w,c	;volatile
  3510  011394  581C               	subwfb	_time_counter+3,w,c	;volatile
  3511  011396  A0D8               	btfss	status,0,c
  3512  011398  D05F               	goto	l9785
  3513                           
  3514                           ;RemoteCan.c: 454: if ((time_counter - pr_time_3) >= (100 / 10)) {
  3515  01139A  C00D  F166         	movff	_pr_time_3,??_main	;volatile
  3516  01139E  C00E  F167         	movff	_pr_time_3+1,??_main+1	;volatile
  3517  0113A2  C00F  F168         	movff	_pr_time_3+2,??_main+2	;volatile
  3518  0113A6  C010  F169         	movff	_pr_time_3+3,??_main+3	;volatile
  3519  0113AA  0101               	movlb	1	; () banked
  3520  0113AC  1F66               	comf	??_main& (0+255),f,b
  3521  0113AE  1F67               	comf	(??_main+1)& (0+255),f,b
  3522  0113B0  1F68               	comf	(??_main+2)& (0+255),f,b
  3523  0113B2  1F69               	comf	(??_main+3)& (0+255),f,b
  3524  0113B4  2B66               	incf	??_main& (0+255),f,b
  3525  0113B6  0E00               	movlw	0
  3526  0113B8  2367               	addwfc	(??_main+1)& (0+255),f,b
  3527  0113BA  2368               	addwfc	(??_main+2)& (0+255),f,b
  3528  0113BC  2369               	addwfc	(??_main+3)& (0+255),f,b
  3529  0113BE  5019               	movf	_time_counter,w,c	;volatile
  3530  0113C0  0101               	movlb	1	; () banked
  3531  0113C2  2566               	addwf	??_main& (0+255),w,b
  3532  0113C4  0101               	movlb	1	; () banked
  3533  0113C6  6F6A               	movwf	(??_main+4)& (0+255),b
  3534  0113C8  501A               	movf	_time_counter+1,w,c	;volatile
  3535  0113CA  0101               	movlb	1	; () banked
  3536  0113CC  2167               	addwfc	(??_main+1)& (0+255),w,b
  3537  0113CE  0101               	movlb	1	; () banked
  3538  0113D0  6F6B               	movwf	(??_main+5)& (0+255),b
  3539  0113D2  501B               	movf	_time_counter+2,w,c	;volatile
  3540  0113D4  0101               	movlb	1	; () banked
  3541  0113D6  2168               	addwfc	(??_main+2)& (0+255),w,b
  3542  0113D8  0101               	movlb	1	; () banked
  3543  0113DA  6F6C               	movwf	(??_main+6)& (0+255),b
  3544  0113DC  501C               	movf	_time_counter+3,w,c	;volatile
  3545  0113DE  0101               	movlb	1	; () banked
  3546  0113E0  2169               	addwfc	(??_main+3)& (0+255),w,b
  3547  0113E2  0101               	movlb	1	; () banked
  3548  0113E4  6F6D               	movwf	(??_main+7)& (0+255),b
  3549  0113E6  0101               	movlb	1	; () banked
  3550  0113E8  516D               	movf	(??_main+7)& (0+255),w,b
  3551  0113EA  0101               	movlb	1	; () banked
  3552  0113EC  116C               	iorwf	(??_main+6)& (0+255),w,b
  3553  0113EE  0101               	movlb	1	; () banked
  3554  0113F0  116B               	iorwf	(??_main+5)& (0+255),w,b
  3555  0113F2  E106               	bnz	u13140
  3556  0113F4  0E0A               	movlw	10
  3557  0113F6  0101               	movlb	1	; () banked
  3558  0113F8  5D6A               	subwf	(??_main+4)& (0+255),w,b
  3559  0113FA  A0D8               	btfss	status,0,c
  3560  0113FC  EFA0  F085         	goto	l9531
  3561  011400                     u13140:
  3562                           
  3563                           ; BSR set to: 1
  3564                           ;RemoteCan.c: 455: pr_time_3 = time_counter;
  3565  011400  C019  F00D         	movff	_time_counter,_pr_time_3	;volatile
  3566  011404  C01A  F00E         	movff	_time_counter+1,_pr_time_3+1	;volatile
  3567  011408  C01B  F00F         	movff	_time_counter+2,_pr_time_3+2	;volatile
  3568  01140C  C01C  F010         	movff	_time_counter+3,_pr_time_3+3	;volatile
  3569                           
  3570                           ;RemoteCan.c: 456: if (parking_message_E == 1) {
  3571  011410  A449               	btfss	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  3572  011412  D01E               	goto	l9783
  3573                           
  3574                           ; BSR set to: 1
  3575                           ;RemoteCan.c: 457: display_refresh = 1;
  3576  011414  8E48               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  3577                           
  3578                           ; BSR set to: 1
  3579                           ;RemoteCan.c: 458: if (parking_message_ID == 0) {
  3580  011416  0100               	movlb	0	; () banked
  3581  011418  51E8               	movf	_parking_message_ID& (0+255),w,b	;volatile
  3582  01141A  A4D8               	btfss	status,2,c
  3583  01141C  D004               	goto	l9771
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;RemoteCan.c: 459: LCD_Gap();
  3587  01141E  EC68  F0B1         	call	_LCD_Gap	;wreg free
  3588                           
  3589                           ;RemoteCan.c: 460: parking_message_ID++;
  3590  011422  0100               	movlb	0	; () banked
  3591  011424  2BE8               	incf	_parking_message_ID& (0+255),f,b	;volatile
  3592  011426                     l9771:
  3593                           
  3594                           ; BSR set to: 0
  3595                           ;RemoteCan.c: 461: }
  3596                           ;RemoteCan.c: 462: if (parking_message_ID == 2) {
  3597  011426  0E02               	movlw	2
  3598  011428  0100               	movlb	0	; () banked
  3599  01142A  19E8               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  3600  01142C  A4D8               	btfss	status,2,c
  3601  01142E  D004               	goto	l9777
  3602                           
  3603                           ; BSR set to: 0
  3604                           ;RemoteCan.c: 463: LCD_Park();
  3605  011430  EC36  F0B1         	call	_LCD_Park	;wreg free
  3606                           
  3607                           ;RemoteCan.c: 464: parking_message_ID++;
  3608  011434  0100               	movlb	0	; () banked
  3609  011436  2BE8               	incf	_parking_message_ID& (0+255),f,b	;volatile
  3610  011438                     l9777:
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;RemoteCan.c: 465: }
  3614                           ;RemoteCan.c: 466: if (parking_message_ID == 4) {
  3615  011438  0E04               	movlw	4
  3616  01143A  0100               	movlb	0	; () banked
  3617  01143C  19E8               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  3618  01143E  A4D8               	btfss	status,2,c
  3619  011440  EFA0  F085         	goto	l9531
  3620                           
  3621                           ; BSR set to: 0
  3622                           ;RemoteCan.c: 467: LCD_Parking();
  3623  011444  EC04  F0B1         	call	_LCD_Parking	;wreg free
  3624                           
  3625                           ;RemoteCan.c: 468: parking_message_ID++;
  3626  011448  0100               	movlb	0	; () banked
  3627  01144A  2BE8               	incf	_parking_message_ID& (0+255),f,b	;volatile
  3628                           
  3629                           ; BSR set to: 0
  3630                           ;RemoteCan.c: 469: }
  3631                           ;RemoteCan.c: 470: } else {
  3632  01144C  EFA0  F085         	goto	l9531
  3633  011450                     l9783:
  3634                           
  3635                           ;RemoteCan.c: 471: LCD_Handler();
  3636  011450  EC9B  F0A4         	call	_LCD_Handler	;wreg free
  3637                           
  3638                           ;RemoteCan.c: 472: }
  3639                           ;RemoteCan.c: 473: }
  3640                           ;RemoteCan.c: 474: } else {
  3641  011454  EFA0  F085         	goto	l9531
  3642  011458                     l9785:
  3643                           
  3644                           ;RemoteCan.c: 475: if (parking_message_ID == 6) {
  3645  011458  0E06               	movlw	6
  3646  01145A  0100               	movlb	0	; () banked
  3647  01145C  19E8               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  3648  01145E  A4D8               	btfss	status,2,c
  3649  011460  EFA0  F085         	goto	l9531
  3650                           
  3651                           ; BSR set to: 0
  3652                           ;RemoteCan.c: 476: if (parking_error == 1) {
  3653  011464  A249               	btfss	_parking_error/(0+8),_parking_error& (0+7),c	;volatile
  3654  011466  D023               	goto	l9799
  3655                           
  3656                           ; BSR set to: 0
  3657                           ;RemoteCan.c: 477: parking_error = 0;
  3658  011468  9249               	bcf	_parking_error/(0+8),_parking_error& (0+7),c	;volatile
  3659                           
  3660                           ; BSR set to: 0
  3661                           ;RemoteCan.c: 478: LCD_Error();
  3662  01146A  EC7F  F0B0         	call	_LCD_Error	;wreg free
  3663  01146E                     l9793:
  3664  01146E  ECCF  F0B3         	call	_CANisTxReady	;wreg free
  3665  011472  06E8               	decf	wreg,f,c
  3666  011474  A4D8               	btfss	status,2,c
  3667  011476  D7FB               	goto	l9793
  3668                           
  3669                           ;RemoteCan.c: 480: data_brake [0] = 0b00000000;
  3670  011478  0E00               	movlw	0
  3671  01147A  0101               	movlb	1	; () banked
  3672  01147C  6F2D               	movwf	_data_brake& (0+255),b
  3673                           
  3674                           ; BSR set to: 1
  3675                           ;RemoteCan.c: 481: CANsendMessage(0b00000000110, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3676  01147E  0E06               	movlw	6
  3677  011480  0100               	movlb	0	; () banked
  3678  011482  6F71               	movwf	CANsendMessage@identifier& (0+255),b
  3679  011484  0E00               	movlw	0
  3680  011486  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3681  011488  0E00               	movlw	0
  3682  01148A  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3683  01148C  0E00               	movlw	0
  3684  01148E  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3685  011490  0E2D               	movlw	low _data_brake
  3686  011492  0100               	movlb	0	; () banked
  3687  011494  6F75               	movwf	CANsendMessage@data& (0+255),b
  3688  011496  0E01               	movlw	high _data_brake
  3689  011498  0100               	movlb	0	; () banked
  3690  01149A  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
  3691  01149C  0E08               	movlw	8
  3692  01149E  0100               	movlb	0	; () banked
  3693  0114A0  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
  3694  0114A2  0EBC               	movlw	188
  3695  0114A4  0100               	movlb	0	; () banked
  3696  0114A6  6F78               	movwf	CANsendMessage@flags& (0+255),b
  3697  0114A8  ECA9  F08E         	call	_CANsendMessage	;wreg free
  3698                           
  3699                           ;RemoteCan.c: 482: } else {
  3700  0114AC  D002               	goto	l9801
  3701  0114AE                     l9799:
  3702                           
  3703                           ;RemoteCan.c: 483: LCD_End();
  3704  0114AE  EC9A  F0B1         	call	_LCD_End	;wreg free
  3705  0114B2                     l9801:
  3706                           
  3707                           ;RemoteCan.c: 484: }
  3708                           ;RemoteCan.c: 485: parking_message_ID = 0;
  3709  0114B2  0E00               	movlw	0
  3710  0114B4  0100               	movlb	0	; () banked
  3711  0114B6  6FE8               	movwf	_parking_message_ID& (0+255),b	;volatile
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;RemoteCan.c: 486: parking_message_E = 0;
  3715  0114B8  9449               	bcf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  3716                           
  3717                           ; BSR set to: 0
  3718                           
  3719                           ; BSR set to: 0
  3720                           
  3721                           ; BSR set to: 0
  3722  0114BA  EFA0  F085         	goto	l9531
  3723  0114BE                     __end_of_main:
  3724                           	opt stack 0
  3725                           tblptru	equ	0xFF8
  3726                           tblptrh	equ	0xFF7
  3727                           tblptrl	equ	0xFF6
  3728                           tablat	equ	0xFF5
  3729                           prodh	equ	0xFF4
  3730                           prodl	equ	0xFF3
  3731                           postinc0	equ	0xFEE
  3732                           wreg	equ	0xFE8
  3733                           postinc2	equ	0xFDE
  3734                           fsr2h	equ	0xFDA
  3735                           fsr2l	equ	0xFD9
  3736                           status	equ	0xFD8
  3737                           
  3738 ;; *************** function _board_initialization *****************
  3739 ;; Defined at:
  3740 ;;		line 714 in file "RemoteCan.c"
  3741 ;; Parameters:    Size  Location     Type
  3742 ;;		None
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;		None
  3745 ;; Return value:  Size  Location     Type
  3746 ;;                  1    wreg      void 
  3747 ;; Registers used:
  3748 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3749 ;; Tracked objects:
  3750 ;;		On entry : 0/0
  3751 ;;		On exit  : 0/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3758 ;;Total ram usage:        0 bytes
  3759 ;; Hardware stack levels used:    1
  3760 ;; Hardware stack levels required when called:    9
  3761 ;; This function calls:
  3762 ;;		_CANInitialize
  3763 ;;		_LCD_clear
  3764 ;;		_LCD_goto_line
  3765 ;;		_LCD_initialize
  3766 ;; This function is called by:
  3767 ;;		_main
  3768 ;; This function uses a non-reentrant model
  3769 ;;
  3770                           
  3771                           	psect	text1
  3772  015E88                     __ptext1:
  3773                           	opt stack 0
  3774  015E88                     _board_initialization:
  3775                           	opt stack 21
  3776                           
  3777                           ;RemoteCan.c: 716: LATA = 0x00;
  3778                           
  3779                           ; BSR set to: 0
  3780                           ;incstack = 0
  3781  015E88  0E00               	movlw	0
  3782  015E8A  6E89               	movwf	3977,c	;volatile
  3783                           
  3784                           ;RemoteCan.c: 717: TRISA = 0b00011111;
  3785  015E8C  0E1F               	movlw	31
  3786  015E8E  6E92               	movwf	3986,c	;volatile
  3787                           
  3788                           ;RemoteCan.c: 718: LATB = 0x00;
  3789  015E90  0E00               	movlw	0
  3790  015E92  6E8A               	movwf	3978,c	;volatile
  3791                           
  3792                           ;RemoteCan.c: 719: TRISB = 0b11111011;
  3793  015E94  0EFB               	movlw	251
  3794  015E96  6E93               	movwf	3987,c	;volatile
  3795                           
  3796                           ;RemoteCan.c: 720: LATC = 0x00;
  3797  015E98  0E00               	movlw	0
  3798  015E9A  6E8B               	movwf	3979,c	;volatile
  3799                           
  3800                           ;RemoteCan.c: 721: TRISC = 0b11110000;
  3801  015E9C  0EF0               	movlw	240
  3802  015E9E  6E94               	movwf	3988,c	;volatile
  3803                           
  3804                           ;RemoteCan.c: 722: LATD = 0x00;
  3805  015EA0  0E00               	movlw	0
  3806  015EA2  6E8C               	movwf	3980,c	;volatile
  3807                           
  3808                           ;RemoteCan.c: 723: TRISD = 0x00;
  3809  015EA4  0E00               	movlw	0
  3810  015EA6  6E95               	movwf	3989,c	;volatile
  3811                           
  3812                           ;RemoteCan.c: 724: LATE = 0x00;
  3813  015EA8  0E00               	movlw	0
  3814  015EAA  6E8D               	movwf	3981,c	;volatile
  3815                           
  3816                           ;RemoteCan.c: 725: TRISE = 0x00;
  3817  015EAC  0E00               	movlw	0
  3818  015EAE  6E96               	movwf	3990,c	;volatile
  3819                           
  3820                           ;RemoteCan.c: 727: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_
      +                          SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  3821  015EB0  0E06               	movlw	6
  3822  015EB2  0100               	movlb	0	; () banked
  3823  015EB4  6F7F               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3824  015EB6  0E05               	movlw	5
  3825  015EB8  0100               	movlb	0	; () banked
  3826  015EBA  6F80               	movwf	CANInitialize@phaseSeg2& (0+255),b
  3827  015EBC  0E01               	movlw	1
  3828  015EBE  0100               	movlb	0	; () banked
  3829  015EC0  6F81               	movwf	CANInitialize@SJW& (0+255),b
  3830  015EC2  0E03               	movlw	3
  3831  015EC4  0100               	movlb	0	; () banked
  3832  015EC6  6F82               	movwf	CANInitialize@BRP& (0+255),b
  3833  015EC8  0E9D               	movlw	157
  3834  015ECA  0100               	movlb	0	; () banked
  3835  015ECC  6F83               	movwf	CANInitialize@flags& (0+255),b
  3836  015ECE  0E04               	movlw	4
  3837  015ED0  ECFA  F0A7         	call	_CANInitialize
  3838                           
  3839                           ;RemoteCan.c: 731: PIR2bits.TMR3IF = 0;
  3840  015ED4  92A1               	bcf	4001,1,c	;volatile
  3841                           
  3842                           ;RemoteCan.c: 732: PIR3bits.RXB1IF = 0;
  3843  015ED6  92A4               	bcf	4004,1,c	;volatile
  3844                           
  3845                           ;RemoteCan.c: 733: PIR3bits.RXB0IF = 0;
  3846  015ED8  90A4               	bcf	4004,0,c	;volatile
  3847                           
  3848                           ;RemoteCan.c: 736: RCONbits.IPEN = 1;
  3849  015EDA  8ED0               	bsf	4048,7,c	;volatile
  3850                           
  3851                           ;RemoteCan.c: 737: IPR3bits.RXB1IP = 1;
  3852  015EDC  82A5               	bsf	4005,1,c	;volatile
  3853                           
  3854                           ;RemoteCan.c: 738: IPR3bits.RXB0IP = 1;
  3855  015EDE  80A5               	bsf	4005,0,c	;volatile
  3856                           
  3857                           ;RemoteCan.c: 739: IPR2bits.TMR3IP = 0;
  3858  015EE0  92A2               	bcf	4002,1,c	;volatile
  3859                           
  3860                           ;RemoteCan.c: 742: ADCON1 = 0b00001101;
  3861  015EE2  0E0D               	movlw	13
  3862  015EE4  6EC1               	movwf	4033,c	;volatile
  3863                           
  3864                           ;RemoteCan.c: 743: ADCON0bits.CHS2 = 0;
  3865  015EE6  98C2               	bcf	4034,4,c	;volatile
  3866                           
  3867                           ;RemoteCan.c: 744: ADCON0bits.CHS1 = 0;
  3868  015EE8  96C2               	bcf	4034,3,c	;volatile
  3869                           
  3870                           ;RemoteCan.c: 745: ADCON0bits.CHS0 = 0;
  3871  015EEA  94C2               	bcf	4034,2,c	;volatile
  3872                           
  3873                           ;RemoteCan.c: 746: ADCON2bits.ACQT2 = 1;
  3874  015EEC  8AC0               	bsf	4032,5,c	;volatile
  3875                           
  3876                           ;RemoteCan.c: 747: ADCON2bits.ACQT1 = 1;
  3877  015EEE  88C0               	bsf	4032,4,c	;volatile
  3878                           
  3879                           ;RemoteCan.c: 748: ADCON2bits.ACQT0 = 0;
  3880  015EF0  96C0               	bcf	4032,3,c	;volatile
  3881                           
  3882                           ;RemoteCan.c: 749: ADCON2bits.ADCS2 = 1;
  3883  015EF2  84C0               	bsf	4032,2,c	;volatile
  3884                           
  3885                           ;RemoteCan.c: 750: ADCON2bits.ADCS1 = 0;
  3886  015EF4  92C0               	bcf	4032,1,c	;volatile
  3887                           
  3888                           ;RemoteCan.c: 751: ADCON2bits.ADCS0 = 1;
  3889  015EF6  80C0               	bsf	4032,0,c	;volatile
  3890                           
  3891                           ;RemoteCan.c: 752: ADCON2bits.ADFM = 0;
  3892  015EF8  9EC0               	bcf	4032,7,c	;volatile
  3893                           
  3894                           ;RemoteCan.c: 753: ADCON0bits.ADON = 1;
  3895  015EFA  80C2               	bsf	4034,0,c	;volatile
  3896                           
  3897                           ;RemoteCan.c: 756: LCD_initialize(16);
  3898  015EFC  0E10               	movlw	16
  3899  015EFE  EC18  F0AC         	call	_LCD_initialize
  3900                           
  3901                           ;RemoteCan.c: 758: LCD_clear();
  3902  015F02  EC8E  F0B3         	call	_LCD_clear	;wreg free
  3903                           
  3904                           ;RemoteCan.c: 759: LCD_goto_line(1);
  3905  015F06  0E01               	movlw	1
  3906  015F08  EC55  F0AD         	call	_LCD_goto_line
  3907                           
  3908                           ;RemoteCan.c: 763: PORTDbits.RD2 = 0;
  3909  015F0C  9483               	bcf	3971,2,c	;volatile
  3910                           
  3911                           ;RemoteCan.c: 764: PORTDbits.RD3 = 0;
  3912  015F0E  9683               	bcf	3971,3,c	;volatile
  3913                           
  3914                           ;RemoteCan.c: 767: TMR3H = 0x63;
  3915  015F10  0E63               	movlw	99
  3916  015F12  6EB3               	movwf	4019,c	;volatile
  3917                           
  3918                           ;RemoteCan.c: 768: TMR3L = 0xC0;
  3919  015F14  0EC0               	movlw	192
  3920  015F16  6EB2               	movwf	4018,c	;volatile
  3921                           
  3922                           ;RemoteCan.c: 771: PIE3bits.RXB1IE = 1;
  3923  015F18  82A3               	bsf	4003,1,c	;volatile
  3924                           
  3925                           ;RemoteCan.c: 772: PIE3bits.RXB0IE = 1;
  3926  015F1A  80A3               	bsf	4003,0,c	;volatile
  3927                           
  3928                           ;RemoteCan.c: 773: PIE2bits.TMR3IE = 1;
  3929  015F1C  82A0               	bsf	4000,1,c	;volatile
  3930                           
  3931                           ;RemoteCan.c: 776: T3CON = 0x01;
  3932  015F1E  0E01               	movlw	1
  3933  015F20  6EB1               	movwf	4017,c	;volatile
  3934                           
  3935                           ;RemoteCan.c: 777: LCD_clear();
  3936  015F22  EC8E  F0B3         	call	_LCD_clear	;wreg free
  3937                           
  3938                           ;RemoteCan.c: 778: INTCONbits.GIEH = 1;
  3939  015F26  8EF2               	bsf	intcon,7,c	;volatile
  3940                           
  3941                           ;RemoteCan.c: 779: INTCONbits.GIEL = 1;
  3942  015F28  8CF2               	bsf	intcon,6,c	;volatile
  3943  015F2A  0012               	return		;funcret
  3944  015F2C                     __end_of_board_initialization:
  3945                           	opt stack 0
  3946                           tblptru	equ	0xFF8
  3947                           tblptrh	equ	0xFF7
  3948                           tblptrl	equ	0xFF6
  3949                           tablat	equ	0xFF5
  3950                           prodh	equ	0xFF4
  3951                           prodl	equ	0xFF3
  3952                           intcon	equ	0xFF2
  3953                           postinc0	equ	0xFEE
  3954                           wreg	equ	0xFE8
  3955                           postinc2	equ	0xFDE
  3956                           fsr2h	equ	0xFDA
  3957                           fsr2l	equ	0xFD9
  3958                           status	equ	0xFD8
  3959                           
  3960 ;; *************** function _CANInitialize *****************
  3961 ;; Defined at:
  3962 ;;		line 218 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;  propSeg         1    wreg     unsigned char 
  3965 ;;  phaseSeg1       1   31[BANK0 ] unsigned char 
  3966 ;;  phaseSeg2       1   32[BANK0 ] unsigned char 
  3967 ;;  SJW             1   33[BANK0 ] unsigned char 
  3968 ;;  BRP             1   34[BANK0 ] unsigned char 
  3969 ;;  flags           1   35[BANK0 ] enum E16749
  3970 ;; Auto vars:     Size  Location     Type
  3971 ;;  propSeg         1   40[BANK0 ] unsigned char 
  3972 ;;  FilterConfig    1   42[BANK0 ] unsigned char 
  3973 ;;  FilterConfig    1   41[BANK0 ] unsigned char 
  3974 ;; Return value:  Size  Location     Type
  3975 ;;                  1    wreg      void 
  3976 ;; Registers used:
  3977 ;;		wreg, status,2, status,0, cstack
  3978 ;; Tracked objects:
  3979 ;;		On entry : 0/0
  3980 ;;		On exit  : 0/0
  3981 ;;		Unchanged: 0/0
  3982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3983 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3984 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3985 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3986 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3987 ;;Total ram usage:       12 bytes
  3988 ;; Hardware stack levels used:    1
  3989 ;; Hardware stack levels required when called:    4
  3990 ;; This function calls:
  3991 ;;		_CANOperationMode
  3992 ;;		_CANSetFilter
  3993 ;;		_CANSetMask
  3994 ;; This function is called by:
  3995 ;;		_board_initialization
  3996 ;; This function uses a non-reentrant model
  3997 ;;
  3998                           
  3999                           	psect	text2
  4000  014FF4                     __ptext2:
  4001                           	opt stack 0
  4002  014FF4                     _CANInitialize:
  4003                           	opt stack 25
  4004                           
  4005                           ;incstack = 0
  4006                           ;CANInitialize@propSeg stored from wreg
  4007  014FF4  0100               	movlb	0	; () banked
  4008  014FF6  6F88               	movwf	CANInitialize@propSeg& (0+255),b
  4009                           
  4010                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  4011                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  4012                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  4013  014FF8  0E80               	movlw	128
  4014  014FFA  EC39  F0B4         	call	_CANOperationMode
  4015                           
  4016                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  4017  014FFE  0E00               	movlw	0
  4018  015000  6E70               	movwf	3952,c	;volatile
  4019                           
  4020                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  4021  015002  0E00               	movlw	0
  4022  015004  6E71               	movwf	3953,c	;volatile
  4023                           
  4024                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  4025  015006  0E00               	movlw	0
  4026  015008  6E72               	movwf	3954,c	;volatile
  4027                           
  4028                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  4029  01500A  0100               	movlb	0	; () banked
  4030  01500C  4181               	rrncf	CANInitialize@SJW& (0+255),w,b
  4031  01500E  42E8               	rrncf	wreg,f,c
  4032  015010  0BC0               	andlw	192
  4033  015012  0100               	movlb	0	; () banked
  4034  015014  6F81               	movwf	CANInitialize@SJW& (0+255),b
  4035                           
  4036                           ; BSR set to: 0
  4037                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  4038  015016  0100               	movlb	0	; () banked
  4039  015018  5181               	movf	CANInitialize@SJW& (0+255),w,b
  4040  01501A  1270               	iorwf	3952,f,c	;volatile
  4041                           
  4042                           ; BSR set to: 0
  4043                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  4044  01501C  0100               	movlb	0	; () banked
  4045  01501E  5182               	movf	CANInitialize@BRP& (0+255),w,b
  4046  015020  1270               	iorwf	3952,f,c	;volatile
  4047                           
  4048                           ; BSR set to: 0
  4049                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  4050  015022  0100               	movlb	0	; () banked
  4051  015024  5188               	movf	CANInitialize@propSeg& (0+255),w,b
  4052  015026  1271               	iorwf	3953,f,c	;volatile
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  4056  015028  0100               	movlb	0	; () banked
  4057  01502A  397F               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  4058  01502C  42E8               	rrncf	wreg,f,c
  4059  01502E  0BF8               	andlw	248
  4060  015030  0100               	movlb	0	; () banked
  4061  015032  6F7F               	movwf	CANInitialize@phaseSeg1& (0+255),b
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  4065  015034  0100               	movlb	0	; () banked
  4066  015036  517F               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  4067  015038  1271               	iorwf	3953,f,c	;volatile
  4068                           
  4069                           ; BSR set to: 0
  4070                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  4071  01503A  0100               	movlb	0	; () banked
  4072  01503C  A583               	btfss	CANInitialize@flags& (0+255),2,b
  4073                           
  4074                           ; BSR set to: 0
  4075                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  4076  01503E  8C71               	bsf	3953,6,c	;volatile
  4077                           
  4078                           ; BSR set to: 0
  4079                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  4080  015040  0100               	movlb	0	; () banked
  4081  015042  B183               	btfsc	CANInitialize@flags& (0+255),0,b
  4082                           
  4083                           ; BSR set to: 0
  4084                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  4085  015044  8E71               	bsf	3953,7,c	;volatile
  4086                           
  4087                           ; BSR set to: 0
  4088                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  4089                           
  4090                           ; BSR set to: 0
  4091  015046  0100               	movlb	0	; () banked
  4092  015048  5180               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  4093  01504A  1272               	iorwf	3954,f,c	;volatile
  4094                           
  4095                           ; BSR set to: 0
  4096                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  4097  01504C  0100               	movlb	0	; () banked
  4098  01504E  B383               	btfsc	CANInitialize@flags& (0+255),1,b
  4099                           
  4100                           ; BSR set to: 0
  4101                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  4102  015050  8C72               	bsf	3954,6,c	;volatile
  4103                           
  4104                           ; BSR set to: 0
  4105                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  4106                           
  4107                           ; BSR set to: 0
  4108  015052  0100               	movlb	0	; () banked
  4109  015054  5183               	movf	CANInitialize@flags& (0+255),w,b
  4110  015056  0B60               	andlw	96
  4111  015058  6E60               	movwf	3936,c	;volatile
  4112                           
  4113                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  4114  01505A  0100               	movlb	0	; () banked
  4115  01505C  5183               	movf	CANInitialize@flags& (0+255),w,b
  4116  01505E  0B10               	andlw	16
  4117  015060  0AFF               	xorlw	255
  4118  015062  B4D8               	btfsc	status,2,c
  4119                           
  4120                           ; BSR set to: 0
  4121                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  4122  015064  8460               	bsf	3936,2,c	;volatile
  4123                           
  4124                           ; BSR set to: 0
  4125                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  4126  015066  CF60 FF50          	movff	3936,3920	;volatile
  4127                           
  4128                           ; BSR set to: 0
  4129                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  4130  01506A  0E00               	movlw	0
  4131  01506C  0100               	movlb	0	; () banked
  4132  01506E  6F71               	movwf	CANSetMask@mask& (0+255),b
  4133  015070  0E00               	movlw	0
  4134  015072  6F72               	movwf	(CANSetMask@mask+1)& (0+255),b
  4135  015074  0E00               	movlw	0
  4136  015076  6F73               	movwf	(CANSetMask@mask+2)& (0+255),b
  4137  015078  0E00               	movlw	0
  4138  01507A  6F74               	movwf	(CANSetMask@mask+3)& (0+255),b
  4139  01507C  0EF7               	movlw	247
  4140  01507E  0100               	movlb	0	; () banked
  4141  015080  6F75               	movwf	CANSetMask@type& (0+255),b
  4142  015082  0E01               	movlw	1
  4143  015084  EC51  F0A1         	call	_CANSetMask
  4144                           
  4145                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  4146  015088  0E00               	movlw	0
  4147  01508A  0100               	movlb	0	; () banked
  4148  01508C  6F71               	movwf	CANSetMask@mask& (0+255),b
  4149  01508E  0E00               	movlw	0
  4150  015090  6F72               	movwf	(CANSetMask@mask+1)& (0+255),b
  4151  015092  0E00               	movlw	0
  4152  015094  6F73               	movwf	(CANSetMask@mask+2)& (0+255),b
  4153  015096  0E00               	movlw	0
  4154  015098  6F74               	movwf	(CANSetMask@mask+3)& (0+255),b
  4155  01509A  0EF7               	movlw	247
  4156  01509C  0100               	movlb	0	; () banked
  4157  01509E  6F75               	movwf	CANSetMask@type& (0+255),b
  4158  0150A0  0E02               	movlw	2
  4159  0150A2  EC51  F0A1         	call	_CANSetMask
  4160                           
  4161                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  4162  0150A6  D00F               	goto	l6335
  4163  0150A8                     l6329:
  4164                           
  4165                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  4166  0150A8  0EF7               	movlw	247
  4167  0150AA  0100               	movlb	0	; () banked
  4168  0150AC  6F89               	movwf	CANInitialize@FilterConfig1& (0+255),b
  4169  0150AE  D007               	goto	l6331
  4170  0150B0                     l380:
  4171                           
  4172                           ; BSR set to: 0
  4173                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  4174  0150B0  0100               	movlb	0	; () banked
  4175  0150B2  6989               	setf	CANInitialize@FilterConfig1& (0+255),b
  4176                           
  4177                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  4178  0150B4  0100               	movlb	0	; () banked
  4179  0150B6  698A               	setf	CANInitialize@FilterConfig2& (0+255),b
  4180                           
  4181                           ;inc\CANlib.h: 273: break;
  4182  0150B8  D028               	goto	l6337
  4183  0150BA                     l381:
  4184                           
  4185                           ; BSR set to: 0
  4186                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  4187  0150BA  0100               	movlb	0	; () banked
  4188  0150BC  6989               	setf	CANInitialize@FilterConfig1& (0+255),b
  4189  0150BE                     l6331:
  4190                           
  4191                           ; BSR set to: 0
  4192                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  4193  0150BE  0EF7               	movlw	247
  4194  0150C0  0100               	movlb	0	; () banked
  4195  0150C2  6F8A               	movwf	CANInitialize@FilterConfig2& (0+255),b
  4196                           
  4197                           ; BSR set to: 0
  4198                           ;inc\CANlib.h: 278: }
  4199                           
  4200                           ;inc\CANlib.h: 277: break;
  4201  0150C4  D022               	goto	l6337
  4202  0150C6                     l6335:
  4203  0150C6  0E9F               	movlw	159
  4204  0150C8  0100               	movlb	0	; () banked
  4205  0150CA  6F84               	movwf	??_CANInitialize& (0+255),b
  4206  0150CC  0EFF               	movlw	255
  4207  0150CE  0100               	movlb	0	; () banked
  4208  0150D0  6F85               	movwf	(??_CANInitialize+1)& (0+255),b
  4209  0150D2  0100               	movlb	0	; () banked
  4210  0150D4  5183               	movf	CANInitialize@flags& (0+255),w,b
  4211  0150D6  0B60               	andlw	96
  4212  0150D8  0100               	movlb	0	; () banked
  4213  0150DA  6F86               	movwf	(??_CANInitialize+2)& (0+255),b
  4214  0150DC  6B87               	clrf	(??_CANInitialize+3)& (0+255),b
  4215  0150DE  0100               	movlb	0	; () banked
  4216  0150E0  5184               	movf	??_CANInitialize& (0+255),w,b
  4217  0150E2  0100               	movlb	0	; () banked
  4218  0150E4  1386               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  4219  0150E6  0100               	movlb	0	; () banked
  4220  0150E8  5185               	movf	(??_CANInitialize+1)& (0+255),w,b
  4221  0150EA  0100               	movlb	0	; () banked
  4222  0150EC  1387               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  4223                           
  4224                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4225                           ; Switch size 1, requested type "space"
  4226                           ; Number of cases is 1, Range of values is 0 to 0
  4227                           ; switch strategies available:
  4228                           ; Name         Instructions Cycles
  4229                           ; simple_byte            4     3 (average)
  4230                           ;	Chosen strategy is simple_byte
  4231  0150EE  0100               	movlb	0	; () banked
  4232  0150F0  5187               	movf	(??_CANInitialize+3)& (0+255),w,b
  4233  0150F2  0A00               	xorlw	0	; case 0
  4234  0150F4  A4D8               	btfss	status,2,c
  4235  0150F6  D7E1               	goto	l381
  4236                           
  4237                           ; BSR set to: 0
  4238                           ; Switch size 1, requested type "space"
  4239                           ; Number of cases is 2, Range of values is 191 to 223
  4240                           ; switch strategies available:
  4241                           ; Name         Instructions Cycles
  4242                           ; simple_byte            7     4 (average)
  4243                           ;	Chosen strategy is simple_byte
  4244  0150F8  0100               	movlb	0	; () banked
  4245  0150FA  5186               	movf	(??_CANInitialize+2)& (0+255),w,b
  4246  0150FC  0ABF               	xorlw	191	; case 191
  4247  0150FE  B4D8               	btfsc	status,2,c
  4248  015100  D7D7               	goto	l380
  4249  015102  0A60               	xorlw	96	; case 223
  4250  015104  B4D8               	btfsc	status,2,c
  4251  015106  D7D0               	goto	l6329
  4252  015108  D7D8               	goto	l381
  4253  01510A                     l6337:
  4254                           
  4255                           ; BSR set to: 0
  4256                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  4257  01510A  0E00               	movlw	0
  4258  01510C  0100               	movlb	0	; () banked
  4259  01510E  6F71               	movwf	CANSetFilter@filter& (0+255),b
  4260  015110  0E00               	movlw	0
  4261  015112  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  4262  015114  0E00               	movlw	0
  4263  015116  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  4264  015118  0E00               	movlw	0
  4265  01511A  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  4266  01511C  C089  F075         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  4267  015120  0E00               	movlw	0
  4268  015122  EC00  F080         	call	_CANSetFilter
  4269                           
  4270                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  4271  015126  0E00               	movlw	0
  4272  015128  0100               	movlb	0	; () banked
  4273  01512A  6F71               	movwf	CANSetFilter@filter& (0+255),b
  4274  01512C  0E00               	movlw	0
  4275  01512E  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  4276  015130  0E00               	movlw	0
  4277  015132  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  4278  015134  0E00               	movlw	0
  4279  015136  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  4280  015138  C089  F075         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  4281  01513C  0E01               	movlw	1
  4282  01513E  EC00  F080         	call	_CANSetFilter
  4283                           
  4284                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  4285  015142  0E00               	movlw	0
  4286  015144  0100               	movlb	0	; () banked
  4287  015146  6F71               	movwf	CANSetFilter@filter& (0+255),b
  4288  015148  0E00               	movlw	0
  4289  01514A  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  4290  01514C  0E00               	movlw	0
  4291  01514E  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  4292  015150  0E00               	movlw	0
  4293  015152  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  4294  015154  C08A  F075         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  4295  015158  0E02               	movlw	2
  4296  01515A  EC00  F080         	call	_CANSetFilter
  4297                           
  4298                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  4299  01515E  0E00               	movlw	0
  4300  015160  0100               	movlb	0	; () banked
  4301  015162  6F71               	movwf	CANSetFilter@filter& (0+255),b
  4302  015164  0E00               	movlw	0
  4303  015166  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  4304  015168  0E00               	movlw	0
  4305  01516A  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  4306  01516C  0E00               	movlw	0
  4307  01516E  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  4308  015170  C08A  F075         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  4309  015174  0E03               	movlw	3
  4310  015176  EC00  F080         	call	_CANSetFilter
  4311                           
  4312                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  4313  01517A  0E00               	movlw	0
  4314  01517C  0100               	movlb	0	; () banked
  4315  01517E  6F71               	movwf	CANSetFilter@filter& (0+255),b
  4316  015180  0E00               	movlw	0
  4317  015182  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  4318  015184  0E00               	movlw	0
  4319  015186  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  4320  015188  0E00               	movlw	0
  4321  01518A  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  4322  01518C  C08A  F075         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  4323  015190  0E04               	movlw	4
  4324  015192  EC00  F080         	call	_CANSetFilter
  4325                           
  4326                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  4327  015196  0E00               	movlw	0
  4328  015198  0100               	movlb	0	; () banked
  4329  01519A  6F71               	movwf	CANSetFilter@filter& (0+255),b
  4330  01519C  0E00               	movlw	0
  4331  01519E  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  4332  0151A0  0E00               	movlw	0
  4333  0151A2  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  4334  0151A4  0E00               	movlw	0
  4335  0151A6  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  4336  0151A8  C08A  F075         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  4337  0151AC  0E05               	movlw	5
  4338  0151AE  EC00  F080         	call	_CANSetFilter
  4339                           
  4340                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  4341  0151B2  0E00               	movlw	0
  4342  0151B4  EC39  F0B4         	call	_CANOperationMode
  4343  0151B8  0012               	return		;funcret
  4344  0151BA                     __end_of_CANInitialize:
  4345                           	opt stack 0
  4346                           tblptru	equ	0xFF8
  4347                           tblptrh	equ	0xFF7
  4348                           tblptrl	equ	0xFF6
  4349                           tablat	equ	0xFF5
  4350                           prodh	equ	0xFF4
  4351                           prodl	equ	0xFF3
  4352                           intcon	equ	0xFF2
  4353                           postinc0	equ	0xFEE
  4354                           wreg	equ	0xFE8
  4355                           postinc2	equ	0xFDE
  4356                           fsr2h	equ	0xFDA
  4357                           fsr2l	equ	0xFD9
  4358                           status	equ	0xFD8
  4359                           
  4360 ;; *************** function _CANSetMask *****************
  4361 ;; Defined at:
  4362 ;;		line 640 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  4363 ;; Parameters:    Size  Location     Type
  4364 ;;  numBuffer       1    wreg     enum E16783
  4365 ;;  mask            4   17[BANK0 ] unsigned long 
  4366 ;;  type            1   21[BANK0 ] enum E16749
  4367 ;; Auto vars:     Size  Location     Type
  4368 ;;  numBuffer       1   26[BANK0 ] enum E16783
  4369 ;;  tamp            4   27[BANK0 ] unsigned long 
  4370 ;; Return value:  Size  Location     Type
  4371 ;;                  1    wreg      void 
  4372 ;; Registers used:
  4373 ;;		wreg, status,2, status,0
  4374 ;; Tracked objects:
  4375 ;;		On entry : 0/0
  4376 ;;		On exit  : 0/0
  4377 ;;		Unchanged: 0/0
  4378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4379 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4380 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4381 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4382 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4383 ;;Total ram usage:       14 bytes
  4384 ;; Hardware stack levels used:    1
  4385 ;; Hardware stack levels required when called:    3
  4386 ;; This function calls:
  4387 ;;		Nothing
  4388 ;; This function is called by:
  4389 ;;		_CANInitialize
  4390 ;; This function uses a non-reentrant model
  4391 ;;
  4392                           
  4393                           	psect	text3
  4394  0142A2                     __ptext3:
  4395                           	opt stack 0
  4396  0142A2                     _CANSetMask:
  4397                           	opt stack 25
  4398                           
  4399                           ;incstack = 0
  4400                           ;CANSetMask@numBuffer stored from wreg
  4401  0142A2  0100               	movlb	0	; () banked
  4402  0142A4  6F7A               	movwf	CANSetMask@numBuffer& (0+255),b
  4403                           
  4404                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  4405  0142A6  0100               	movlb	0	; () banked
  4406  0142A8  057A               	decf	CANSetMask@numBuffer& (0+255),w,b
  4407  0142AA  A4D8               	btfss	status,2,c
  4408  0142AC  D056               	goto	l5505
  4409                           
  4410                           ; BSR set to: 0
  4411  0142AE  0100               	movlb	0	; () banked
  4412  0142B0  2975               	incf	CANSetMask@type& (0+255),w,b
  4413  0142B2  A4D8               	btfss	status,2,c
  4414  0142B4  D052               	goto	l5505
  4415                           
  4416                           ; BSR set to: 0
  4417                           ;inc\CANlib.h: 644: {
  4418                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  4419  0142B6  C071  F076         	movff	CANSetMask@mask,??_CANSetMask
  4420  0142BA  C072  F077         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4421  0142BE  C073  F078         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4422  0142C2  C074  F079         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4423  0142C6  0E04               	movlw	4
  4424  0142C8  D006               	goto	u6260
  4425  0142CA                     u6265:
  4426  0142CA  0100               	movlb	0	; () banked
  4427  0142CC  90D8               	bcf	status,0,c
  4428  0142CE  3379               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4429  0142D0  3378               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4430  0142D2  3377               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4431  0142D4  3376               	rrcf	??_CANSetMask& (0+255),f,b
  4432  0142D6                     u6260:
  4433  0142D6  2EE8               	decfsz	wreg,f,c
  4434  0142D8  D7F8               	goto	u6265
  4435  0142DA  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  4436  0142DE  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4437  0142E2  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4438  0142E6  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4439                           
  4440                           ; BSR set to: 0
  4441                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  4442  0142EA  0100               	movlb	0	; () banked
  4443  0142EC  517B               	movf	CANSetMask@tamp& (0+255),w,b
  4444  0142EE  0100               	movlb	0	; () banked
  4445  0142F0  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4446  0142F2  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4447  0142F4  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4448  0142F6  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4449                           
  4450                           ; BSR set to: 0
  4451                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  4452  0142F8  C07B  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4453                           
  4454                           ; BSR set to: 0
  4455                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  4456  0142FC  0E07               	movlw	7
  4457  0142FE  0100               	movlb	0	; () banked
  4458  014300  1571               	andwf	CANSetMask@mask& (0+255),w,b
  4459  014302  0100               	movlb	0	; () banked
  4460  014304  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4461  014306  0E00               	movlw	0
  4462  014308  0100               	movlb	0	; () banked
  4463  01430A  1572               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4464  01430C  0100               	movlb	0	; () banked
  4465  01430E  6F7C               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4466  014310  0E00               	movlw	0
  4467  014312  0100               	movlb	0	; () banked
  4468  014314  1573               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4469  014316  0100               	movlb	0	; () banked
  4470  014318  6F7D               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4471  01431A  0E00               	movlw	0
  4472  01431C  0100               	movlb	0	; () banked
  4473  01431E  1574               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4474  014320  0100               	movlb	0	; () banked
  4475  014322  6F7E               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4476                           
  4477                           ; BSR set to: 0
  4478                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  4479  014324  C07B  F076         	movff	CANSetMask@tamp,??_CANSetMask
  4480  014328  C07C  F077         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4481  01432C  C07D  F078         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4482  014330  C07E  F079         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4483  014334  0E05               	movlw	5
  4484  014336                     u6275:
  4485  014336  90D8               	bcf	status,0,c
  4486  014338  0100               	movlb	0	; () banked
  4487  01433A  3776               	rlcf	??_CANSetMask& (0+255),f,b
  4488  01433C  3777               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4489  01433E  3778               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4490  014340  3779               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4491  014342  2EE8               	decfsz	wreg,f,c
  4492  014344  D7F8               	goto	u6275
  4493  014346  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  4494  01434A  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4495  01434E  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4496  014352  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4497                           
  4498                           ; BSR set to: 0
  4499                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  4500  014356  C07B  FF19         	movff	CANSetMask@tamp,3865	;volatile
  4501  01435A                     l5505:
  4502                           
  4503                           ; BSR set to: 0
  4504                           ;inc\CANlib.h: 652: }
  4505                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  4506  01435A  0E02               	movlw	2
  4507  01435C  0100               	movlb	0	; () banked
  4508  01435E  197A               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4509  014360  A4D8               	btfss	status,2,c
  4510  014362  D056               	goto	l5521
  4511                           
  4512                           ; BSR set to: 0
  4513  014364  0100               	movlb	0	; () banked
  4514  014366  2975               	incf	CANSetMask@type& (0+255),w,b
  4515  014368  A4D8               	btfss	status,2,c
  4516  01436A  D052               	goto	l5521
  4517                           
  4518                           ; BSR set to: 0
  4519                           ;inc\CANlib.h: 655: {
  4520                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  4521  01436C  C071  F076         	movff	CANSetMask@mask,??_CANSetMask
  4522  014370  C072  F077         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4523  014374  C073  F078         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4524  014378  C074  F079         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4525  01437C  0E04               	movlw	4
  4526  01437E  D006               	goto	u6300
  4527  014380                     u6305:
  4528  014380  0100               	movlb	0	; () banked
  4529  014382  90D8               	bcf	status,0,c
  4530  014384  3379               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4531  014386  3378               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4532  014388  3377               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4533  01438A  3376               	rrcf	??_CANSetMask& (0+255),f,b
  4534  01438C                     u6300:
  4535  01438C  2EE8               	decfsz	wreg,f,c
  4536  01438E  D7F8               	goto	u6305
  4537  014390  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  4538  014394  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4539  014398  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4540  01439C  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4541                           
  4542                           ; BSR set to: 0
  4543                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  4544  0143A0  0100               	movlb	0	; () banked
  4545  0143A2  517B               	movf	CANSetMask@tamp& (0+255),w,b
  4546  0143A4  0100               	movlb	0	; () banked
  4547  0143A6  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4548  0143A8  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4549  0143AA  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4550  0143AC  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4551                           
  4552                           ; BSR set to: 0
  4553                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  4554  0143AE  C07B  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  4558  0143B2  0E07               	movlw	7
  4559  0143B4  0100               	movlb	0	; () banked
  4560  0143B6  1571               	andwf	CANSetMask@mask& (0+255),w,b
  4561  0143B8  0100               	movlb	0	; () banked
  4562  0143BA  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4563  0143BC  0E00               	movlw	0
  4564  0143BE  0100               	movlb	0	; () banked
  4565  0143C0  1572               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4566  0143C2  0100               	movlb	0	; () banked
  4567  0143C4  6F7C               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4568  0143C6  0E00               	movlw	0
  4569  0143C8  0100               	movlb	0	; () banked
  4570  0143CA  1573               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4571  0143CC  0100               	movlb	0	; () banked
  4572  0143CE  6F7D               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4573  0143D0  0E00               	movlw	0
  4574  0143D2  0100               	movlb	0	; () banked
  4575  0143D4  1574               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4576  0143D6  0100               	movlb	0	; () banked
  4577  0143D8  6F7E               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4578                           
  4579                           ; BSR set to: 0
  4580                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  4581  0143DA  C07B  F076         	movff	CANSetMask@tamp,??_CANSetMask
  4582  0143DE  C07C  F077         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4583  0143E2  C07D  F078         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4584  0143E6  C07E  F079         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4585  0143EA  0E05               	movlw	5
  4586  0143EC                     u6315:
  4587  0143EC  90D8               	bcf	status,0,c
  4588  0143EE  0100               	movlb	0	; () banked
  4589  0143F0  3776               	rlcf	??_CANSetMask& (0+255),f,b
  4590  0143F2  3777               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4591  0143F4  3778               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4592  0143F6  3779               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4593  0143F8  2EE8               	decfsz	wreg,f,c
  4594  0143FA  D7F8               	goto	u6315
  4595  0143FC  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  4596  014400  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4597  014404  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4598  014408  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4599                           
  4600                           ; BSR set to: 0
  4601                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  4602  01440C  C07B  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  4603  014410                     l5521:
  4604                           
  4605                           ; BSR set to: 0
  4606                           ;inc\CANlib.h: 663: }
  4607                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  4608  014410  0100               	movlb	0	; () banked
  4609  014412  057A               	decf	CANSetMask@numBuffer& (0+255),w,b
  4610  014414  A4D8               	btfss	status,2,c
  4611  014416  D087               	goto	l5553
  4612                           
  4613                           ; BSR set to: 0
  4614  014418  0EF7               	movlw	247
  4615  01441A  0100               	movlb	0	; () banked
  4616  01441C  1975               	xorwf	CANSetMask@type& (0+255),w,b
  4617  01441E  A4D8               	btfss	status,2,c
  4618  014420  D082               	goto	l5553
  4619                           
  4620                           ; BSR set to: 0
  4621                           ;inc\CANlib.h: 666: {
  4622                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  4623  014422  0100               	movlb	0	; () banked
  4624  014424  5171               	movf	CANSetMask@mask& (0+255),w,b
  4625  014426  0100               	movlb	0	; () banked
  4626  014428  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4627  01442A  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4628  01442C  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4629  01442E  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4630                           
  4631                           ; BSR set to: 0
  4632                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  4633  014430  C07B  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  4634                           
  4635                           ; BSR set to: 0
  4636                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  4637  014434  0E00               	movlw	0
  4638  014436  0100               	movlb	0	; () banked
  4639  014438  1571               	andwf	CANSetMask@mask& (0+255),w,b
  4640  01443A  0100               	movlb	0	; () banked
  4641  01443C  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4642  01443E  0EFF               	movlw	255
  4643  014440  0100               	movlb	0	; () banked
  4644  014442  1572               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4645  014444  0100               	movlb	0	; () banked
  4646  014446  6F7C               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4647  014448  0E00               	movlw	0
  4648  01444A  0100               	movlb	0	; () banked
  4649  01444C  1573               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4650  01444E  0100               	movlb	0	; () banked
  4651  014450  6F7D               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4652  014452  0E00               	movlw	0
  4653  014454  0100               	movlb	0	; () banked
  4654  014456  1574               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4655  014458  0100               	movlb	0	; () banked
  4656  01445A  6F7E               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4657                           
  4658                           ; BSR set to: 0
  4659                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  4660  01445C  C07B  F076         	movff	CANSetMask@tamp,??_CANSetMask
  4661  014460  C07C  F077         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4662  014464  C07D  F078         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4663  014468  C07E  F079         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4664  01446C  C077  F076         	movff	??_CANSetMask+1,??_CANSetMask
  4665  014470  C078  F077         	movff	??_CANSetMask+2,??_CANSetMask+1
  4666  014474  C079  F078         	movff	??_CANSetMask+3,??_CANSetMask+2
  4667  014478  0100               	movlb	0	; () banked
  4668  01447A  6B79               	clrf	(??_CANSetMask+3)& (0+255),b
  4669  01447C  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  4670  014480  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4671  014484  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4672  014488  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4673                           
  4674                           ; BSR set to: 0
  4675                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  4676  01448C  C07B  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  4677                           
  4678                           ; BSR set to: 0
  4679                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  4680  014490  0100               	movlb	0	; () banked
  4681  014492  A173               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4682  014494  D003               	goto	l454
  4683                           
  4684                           ; BSR set to: 0
  4685                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  4686  014496  010F               	movlb	15	; () banked
  4687  014498  8119               	bsf	25,0,b	;volatile
  4688  01449A  D002               	goto	l455
  4689  01449C                     l454:
  4690                           
  4691                           ; BSR set to: 0
  4692                           ;inc\CANlib.h: 676: else
  4693                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  4694  01449C  010F               	movlb	15	; () banked
  4695  01449E  9119               	bcf	25,0,b	;volatile
  4696  0144A0                     l455:
  4697                           
  4698                           ; BSR set to: 15
  4699                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  4700  0144A0  0100               	movlb	0	; () banked
  4701  0144A2  A373               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4702  0144A4  D003               	goto	l456
  4703                           
  4704                           ; BSR set to: 0
  4705                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  4706  0144A6  010F               	movlb	15	; () banked
  4707  0144A8  8319               	bsf	25,1,b	;volatile
  4708  0144AA  D002               	goto	l457
  4709  0144AC                     l456:
  4710                           
  4711                           ; BSR set to: 0
  4712                           ;inc\CANlib.h: 681: else
  4713                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  4714  0144AC  010F               	movlb	15	; () banked
  4715  0144AE  9319               	bcf	25,1,b	;volatile
  4716  0144B0                     l457:
  4717                           
  4718                           ; BSR set to: 15
  4719                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  4720  0144B0  0100               	movlb	0	; () banked
  4721  0144B2  A573               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4722  0144B4  D003               	goto	l458
  4723                           
  4724                           ; BSR set to: 0
  4725                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  4726  0144B6  010F               	movlb	15	; () banked
  4727  0144B8  8B19               	bsf	25,5,b	;volatile
  4728  0144BA  D002               	goto	l459
  4729  0144BC                     l458:
  4730                           
  4731                           ; BSR set to: 0
  4732                           ;inc\CANlib.h: 686: else
  4733                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  4734  0144BC  010F               	movlb	15	; () banked
  4735  0144BE  9B19               	bcf	25,5,b	;volatile
  4736  0144C0                     l459:
  4737                           
  4738                           ; BSR set to: 15
  4739                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  4740  0144C0  0100               	movlb	0	; () banked
  4741  0144C2  A773               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4742  0144C4  D003               	goto	l460
  4743                           
  4744                           ; BSR set to: 0
  4745                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  4746  0144C6  010F               	movlb	15	; () banked
  4747  0144C8  8D19               	bsf	25,6,b	;volatile
  4748  0144CA  D002               	goto	l461
  4749  0144CC                     l460:
  4750                           
  4751                           ; BSR set to: 0
  4752                           ;inc\CANlib.h: 691: else
  4753                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  4754  0144CC  010F               	movlb	15	; () banked
  4755  0144CE  9D19               	bcf	25,6,b	;volatile
  4756  0144D0                     l461:
  4757                           
  4758                           ; BSR set to: 15
  4759                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  4760  0144D0  0100               	movlb	0	; () banked
  4761  0144D2  A973               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4762  0144D4  D003               	goto	l462
  4763                           
  4764                           ; BSR set to: 0
  4765                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  4766  0144D6  010F               	movlb	15	; () banked
  4767  0144D8  8F19               	bsf	25,7,b	;volatile
  4768  0144DA  D002               	goto	l5547
  4769  0144DC                     l462:
  4770                           
  4771                           ; BSR set to: 0
  4772                           ;inc\CANlib.h: 696: else
  4773                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  4774  0144DC  010F               	movlb	15	; () banked
  4775  0144DE  9F19               	bcf	25,7,b	;volatile
  4776  0144E0                     l5547:
  4777                           
  4778                           ; BSR set to: 15
  4779                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  4780  0144E0  C071  F076         	movff	CANSetMask@mask,??_CANSetMask
  4781  0144E4  C072  F077         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4782  0144E8  C073  F078         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4783  0144EC  C074  F079         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4784  0144F0  0E16               	movlw	22
  4785  0144F2  D006               	goto	u6390
  4786  0144F4                     u6395:
  4787  0144F4  0100               	movlb	0	; () banked
  4788  0144F6  90D8               	bcf	status,0,c
  4789  0144F8  3379               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4790  0144FA  3378               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4791  0144FC  3377               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4792  0144FE  3376               	rrcf	??_CANSetMask& (0+255),f,b
  4793  014500                     u6390:
  4794  014500  2EE8               	decfsz	wreg,f,c
  4795  014502  D7F8               	goto	u6395
  4796  014504  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  4797  014508  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4798  01450C  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4799  014510  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4800                           
  4801                           ; BSR set to: 0
  4802                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  4803  014514  0100               	movlb	0	; () banked
  4804  014516  517B               	movf	CANSetMask@tamp& (0+255),w,b
  4805  014518  0100               	movlb	0	; () banked
  4806  01451A  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4807  01451C  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4808  01451E  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4809  014520  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4810                           
  4811                           ; BSR set to: 0
  4812                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  4813  014522  C07B  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4814  014526                     l5553:
  4815                           
  4816                           ; BSR set to: 0
  4817                           ;inc\CANlib.h: 702: }
  4818                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4819  014526  0E02               	movlw	2
  4820  014528  0100               	movlb	0	; () banked
  4821  01452A  197A               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4822  01452C  A4D8               	btfss	status,2,c
  4823  01452E  0012               	return	
  4824                           
  4825                           ; BSR set to: 0
  4826  014530  0EF7               	movlw	247
  4827  014532  0100               	movlb	0	; () banked
  4828  014534  1975               	xorwf	CANSetMask@type& (0+255),w,b
  4829  014536  A4D8               	btfss	status,2,c
  4830  014538  0012               	return	
  4831                           
  4832                           ; BSR set to: 0
  4833                           ;inc\CANlib.h: 705: {
  4834                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  4835  01453A  0100               	movlb	0	; () banked
  4836  01453C  5171               	movf	CANSetMask@mask& (0+255),w,b
  4837  01453E  0100               	movlb	0	; () banked
  4838  014540  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4839  014542  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4840  014544  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4841  014546  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4842                           
  4843                           ; BSR set to: 0
  4844                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  4845  014548  C07B  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  4849  01454C  0E00               	movlw	0
  4850  01454E  0100               	movlb	0	; () banked
  4851  014550  1571               	andwf	CANSetMask@mask& (0+255),w,b
  4852  014552  0100               	movlb	0	; () banked
  4853  014554  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4854  014556  0EFF               	movlw	255
  4855  014558  0100               	movlb	0	; () banked
  4856  01455A  1572               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4857  01455C  0100               	movlb	0	; () banked
  4858  01455E  6F7C               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4859  014560  0E00               	movlw	0
  4860  014562  0100               	movlb	0	; () banked
  4861  014564  1573               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4862  014566  0100               	movlb	0	; () banked
  4863  014568  6F7D               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4864  01456A  0E00               	movlw	0
  4865  01456C  0100               	movlb	0	; () banked
  4866  01456E  1574               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4867  014570  0100               	movlb	0	; () banked
  4868  014572  6F7E               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4869                           
  4870                           ; BSR set to: 0
  4871                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  4872  014574  C07B  F076         	movff	CANSetMask@tamp,??_CANSetMask
  4873  014578  C07C  F077         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4874  01457C  C07D  F078         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4875  014580  C07E  F079         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4876  014584  C077  F076         	movff	??_CANSetMask+1,??_CANSetMask
  4877  014588  C078  F077         	movff	??_CANSetMask+2,??_CANSetMask+1
  4878  01458C  C079  F078         	movff	??_CANSetMask+3,??_CANSetMask+2
  4879  014590  0100               	movlb	0	; () banked
  4880  014592  6B79               	clrf	(??_CANSetMask+3)& (0+255),b
  4881  014594  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  4882  014598  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4883  01459C  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4884  0145A0  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4885                           
  4886                           ; BSR set to: 0
  4887                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  4888  0145A4  C07B  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4889                           
  4890                           ; BSR set to: 0
  4891                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  4892  0145A8  0100               	movlb	0	; () banked
  4893  0145AA  A173               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4894  0145AC  D003               	goto	l465
  4895                           
  4896                           ; BSR set to: 0
  4897                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  4898  0145AE  010F               	movlb	15	; () banked
  4899  0145B0  811D               	bsf	29,0,b	;volatile
  4900  0145B2  D002               	goto	l466
  4901  0145B4                     l465:
  4902                           
  4903                           ; BSR set to: 0
  4904                           ;inc\CANlib.h: 715: else
  4905                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  4906  0145B4  010F               	movlb	15	; () banked
  4907  0145B6  911D               	bcf	29,0,b	;volatile
  4908  0145B8                     l466:
  4909                           
  4910                           ; BSR set to: 15
  4911                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  4912  0145B8  0100               	movlb	0	; () banked
  4913  0145BA  A373               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4914  0145BC  D003               	goto	l467
  4915                           
  4916                           ; BSR set to: 0
  4917                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  4918  0145BE  010F               	movlb	15	; () banked
  4919  0145C0  831D               	bsf	29,1,b	;volatile
  4920  0145C2  D002               	goto	l468
  4921  0145C4                     l467:
  4922                           
  4923                           ; BSR set to: 0
  4924                           ;inc\CANlib.h: 720: else
  4925                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4926  0145C4  010F               	movlb	15	; () banked
  4927  0145C6  931D               	bcf	29,1,b	;volatile
  4928  0145C8                     l468:
  4929                           
  4930                           ; BSR set to: 15
  4931                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  4932  0145C8  0100               	movlb	0	; () banked
  4933  0145CA  A573               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4934  0145CC  D003               	goto	l469
  4935                           
  4936                           ; BSR set to: 0
  4937                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4938  0145CE  010F               	movlb	15	; () banked
  4939  0145D0  8B1D               	bsf	29,5,b	;volatile
  4940  0145D2  D002               	goto	l470
  4941  0145D4                     l469:
  4942                           
  4943                           ; BSR set to: 0
  4944                           ;inc\CANlib.h: 725: else
  4945                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4946  0145D4  010F               	movlb	15	; () banked
  4947  0145D6  9B1D               	bcf	29,5,b	;volatile
  4948  0145D8                     l470:
  4949                           
  4950                           ; BSR set to: 15
  4951                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  4952  0145D8  0100               	movlb	0	; () banked
  4953  0145DA  A773               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4954  0145DC  D003               	goto	l471
  4955                           
  4956                           ; BSR set to: 0
  4957                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4958  0145DE  010F               	movlb	15	; () banked
  4959  0145E0  8D1D               	bsf	29,6,b	;volatile
  4960  0145E2  D002               	goto	l472
  4961  0145E4                     l471:
  4962                           
  4963                           ; BSR set to: 0
  4964                           ;inc\CANlib.h: 730: else
  4965                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4966  0145E4  010F               	movlb	15	; () banked
  4967  0145E6  9D1D               	bcf	29,6,b	;volatile
  4968  0145E8                     l472:
  4969                           
  4970                           ; BSR set to: 15
  4971                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  4972  0145E8  0100               	movlb	0	; () banked
  4973  0145EA  A973               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4974  0145EC  D003               	goto	l473
  4975                           
  4976                           ; BSR set to: 0
  4977                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4978  0145EE  010F               	movlb	15	; () banked
  4979  0145F0  8F1D               	bsf	29,7,b	;volatile
  4980  0145F2  D002               	goto	l5579
  4981  0145F4                     l473:
  4982                           
  4983                           ; BSR set to: 0
  4984                           ;inc\CANlib.h: 735: else
  4985                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4986  0145F4  010F               	movlb	15	; () banked
  4987  0145F6  9F1D               	bcf	29,7,b	;volatile
  4988  0145F8                     l5579:
  4989                           
  4990                           ; BSR set to: 15
  4991                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  4992  0145F8  C071  F076         	movff	CANSetMask@mask,??_CANSetMask
  4993  0145FC  C072  F077         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4994  014600  C073  F078         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4995  014604  C074  F079         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4996  014608  0E16               	movlw	22
  4997  01460A  D006               	goto	u6470
  4998  01460C                     u6475:
  4999  01460C  0100               	movlb	0	; () banked
  5000  01460E  90D8               	bcf	status,0,c
  5001  014610  3379               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  5002  014612  3378               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  5003  014614  3377               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  5004  014616  3376               	rrcf	??_CANSetMask& (0+255),f,b
  5005  014618                     u6470:
  5006  014618  2EE8               	decfsz	wreg,f,c
  5007  01461A  D7F8               	goto	u6475
  5008  01461C  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  5009  014620  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  5010  014624  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  5011  014628  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  5012                           
  5013                           ; BSR set to: 0
  5014                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  5015  01462C  0100               	movlb	0	; () banked
  5016  01462E  517B               	movf	CANSetMask@tamp& (0+255),w,b
  5017  014630  0100               	movlb	0	; () banked
  5018  014632  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  5019  014634  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  5020  014636  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  5021  014638  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  5022                           
  5023                           ; BSR set to: 0
  5024                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  5025  01463A  C07B  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  5026  01463E  0012               	return	
  5027  014640                     __end_of_CANSetMask:
  5028                           	opt stack 0
  5029                           tblptru	equ	0xFF8
  5030                           tblptrh	equ	0xFF7
  5031                           tblptrl	equ	0xFF6
  5032                           tablat	equ	0xFF5
  5033                           prodh	equ	0xFF4
  5034                           prodl	equ	0xFF3
  5035                           intcon	equ	0xFF2
  5036                           postinc0	equ	0xFEE
  5037                           wreg	equ	0xFE8
  5038                           postinc2	equ	0xFDE
  5039                           fsr2h	equ	0xFDA
  5040                           fsr2l	equ	0xFD9
  5041                           status	equ	0xFD8
  5042                           
  5043 ;; *************** function _CANSetFilter *****************
  5044 ;; Defined at:
  5045 ;;		line 748 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  5046 ;; Parameters:    Size  Location     Type
  5047 ;;  numBuffer       1    wreg     enum E16786
  5048 ;;  filter          4   17[BANK0 ] unsigned long 
  5049 ;;  type            1   21[BANK0 ] enum E16749
  5050 ;; Auto vars:     Size  Location     Type
  5051 ;;  numBuffer       1   26[BANK0 ] enum E16786
  5052 ;;  tamp            4   27[BANK0 ] unsigned long 
  5053 ;; Return value:  Size  Location     Type
  5054 ;;                  1    wreg      void 
  5055 ;; Registers used:
  5056 ;;		wreg, status,2, status,0
  5057 ;; Tracked objects:
  5058 ;;		On entry : 0/0
  5059 ;;		On exit  : 0/0
  5060 ;;		Unchanged: 0/0
  5061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5062 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5063 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5064 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5065 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5066 ;;Total ram usage:       14 bytes
  5067 ;; Hardware stack levels used:    1
  5068 ;; Hardware stack levels required when called:    3
  5069 ;; This function calls:
  5070 ;;		Nothing
  5071 ;; This function is called by:
  5072 ;;		_CANInitialize
  5073 ;; This function uses a non-reentrant model
  5074 ;;
  5075                           
  5076                           	psect	text4
  5077  010000                     __ptext4:
  5078                           	opt stack 0
  5079  010000                     _CANSetFilter:
  5080                           	opt stack 25
  5081                           
  5082                           ; BSR set to: 0
  5083                           ;incstack = 0
  5084                           ;CANSetFilter@numBuffer stored from wreg
  5085  010000  0100               	movlb	0	; () banked
  5086  010002  6F7A               	movwf	CANSetFilter@numBuffer& (0+255),b
  5087                           
  5088                           ;inc\CANlib.h: 750: unsigned long tamp;
  5089                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  5090  010004  0100               	movlb	0	; () banked
  5091  010006  517A               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5092  010008  0100               	movlb	0	; () banked
  5093  01000A  A4D8               	btfss	status,2,c
  5094  01000C  D058               	goto	l5603
  5095                           
  5096                           ; BSR set to: 0
  5097  01000E  0100               	movlb	0	; () banked
  5098  010010  2975               	incf	CANSetFilter@type& (0+255),w,b
  5099  010012  A4D8               	btfss	status,2,c
  5100  010014  D054               	goto	l5603
  5101                           
  5102                           ; BSR set to: 0
  5103                           ;inc\CANlib.h: 753: {
  5104                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  5105  010016  010F               	movlb	15	; () banked
  5106  010018  9701               	bcf	1,3,b	;volatile
  5107                           
  5108                           ; BSR set to: 15
  5109                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  5110  01001A  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  5111  01001E  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5112  010022  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5113  010026  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5114  01002A  0E04               	movlw	4
  5115  01002C  D006               	goto	u6500
  5116  01002E                     u6505:
  5117  01002E  0100               	movlb	0	; () banked
  5118  010030  90D8               	bcf	status,0,c
  5119  010032  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5120  010034  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5121  010036  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5122  010038  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  5123  01003A                     u6500:
  5124  01003A  2EE8               	decfsz	wreg,f,c
  5125  01003C  D7F8               	goto	u6505
  5126  01003E  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5127  010042  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5128  010046  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5129  01004A  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5130                           
  5131                           ; BSR set to: 0
  5132                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  5133  01004E  0100               	movlb	0	; () banked
  5134  010050  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  5135  010052  0100               	movlb	0	; () banked
  5136  010054  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5137  010056  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5138  010058  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5139  01005A  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5140                           
  5141                           ; BSR set to: 0
  5142                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  5143  01005C  C07B  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5144                           
  5145                           ; BSR set to: 0
  5146                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  5147  010060  0E07               	movlw	7
  5148  010062  0100               	movlb	0	; () banked
  5149  010064  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5150  010066  0100               	movlb	0	; () banked
  5151  010068  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5152  01006A  0E00               	movlw	0
  5153  01006C  0100               	movlb	0	; () banked
  5154  01006E  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5155  010070  0100               	movlb	0	; () banked
  5156  010072  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5157  010074  0E00               	movlw	0
  5158  010076  0100               	movlb	0	; () banked
  5159  010078  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5160  01007A  0100               	movlb	0	; () banked
  5161  01007C  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5162  01007E  0E00               	movlw	0
  5163  010080  0100               	movlb	0	; () banked
  5164  010082  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5165  010084  0100               	movlb	0	; () banked
  5166  010086  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5167                           
  5168                           ; BSR set to: 0
  5169                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  5170  010088  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5171  01008C  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5172  010090  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5173  010094  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5174  010098  0E05               	movlw	5
  5175  01009A                     u6515:
  5176  01009A  90D8               	bcf	status,0,c
  5177  01009C  0100               	movlb	0	; () banked
  5178  01009E  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  5179  0100A0  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5180  0100A2  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5181  0100A4  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5182  0100A6  2EE8               	decfsz	wreg,f,c
  5183  0100A8  D7F8               	goto	u6515
  5184  0100AA  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5185  0100AE  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5186  0100B2  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5187  0100B6  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5188                           
  5189                           ; BSR set to: 0
  5190                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  5191  0100BA  C07B  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  5192  0100BE                     l5603:
  5193                           
  5194                           ; BSR set to: 0
  5195                           ;inc\CANlib.h: 763: }
  5196                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  5197  0100BE  0100               	movlb	0	; () banked
  5198  0100C0  057A               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5199  0100C2  A4D8               	btfss	status,2,c
  5200  0100C4  D058               	goto	l5621
  5201                           
  5202                           ; BSR set to: 0
  5203  0100C6  0100               	movlb	0	; () banked
  5204  0100C8  2975               	incf	CANSetFilter@type& (0+255),w,b
  5205  0100CA  A4D8               	btfss	status,2,c
  5206  0100CC  D054               	goto	l5621
  5207                           
  5208                           ; BSR set to: 0
  5209                           ;inc\CANlib.h: 766: {
  5210                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  5211  0100CE  010F               	movlb	15	; () banked
  5212  0100D0  9705               	bcf	5,3,b	;volatile
  5213                           
  5214                           ; BSR set to: 15
  5215                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  5216  0100D2  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  5217  0100D6  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5218  0100DA  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5219  0100DE  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5220  0100E2  0E04               	movlw	4
  5221  0100E4  D006               	goto	u6540
  5222  0100E6                     u6545:
  5223  0100E6  0100               	movlb	0	; () banked
  5224  0100E8  90D8               	bcf	status,0,c
  5225  0100EA  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5226  0100EC  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5227  0100EE  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5228  0100F0  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  5229  0100F2                     u6540:
  5230  0100F2  2EE8               	decfsz	wreg,f,c
  5231  0100F4  D7F8               	goto	u6545
  5232  0100F6  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5233  0100FA  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5234  0100FE  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5235  010102  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5236                           
  5237                           ; BSR set to: 0
  5238                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  5239  010106  0100               	movlb	0	; () banked
  5240  010108  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  5241  01010A  0100               	movlb	0	; () banked
  5242  01010C  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5243  01010E  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5244  010110  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5245  010112  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5246                           
  5247                           ; BSR set to: 0
  5248                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  5249  010114  C07B  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5250                           
  5251                           ; BSR set to: 0
  5252                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  5253  010118  0E07               	movlw	7
  5254  01011A  0100               	movlb	0	; () banked
  5255  01011C  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5256  01011E  0100               	movlb	0	; () banked
  5257  010120  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5258  010122  0E00               	movlw	0
  5259  010124  0100               	movlb	0	; () banked
  5260  010126  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5261  010128  0100               	movlb	0	; () banked
  5262  01012A  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5263  01012C  0E00               	movlw	0
  5264  01012E  0100               	movlb	0	; () banked
  5265  010130  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5266  010132  0100               	movlb	0	; () banked
  5267  010134  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5268  010136  0E00               	movlw	0
  5269  010138  0100               	movlb	0	; () banked
  5270  01013A  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5271  01013C  0100               	movlb	0	; () banked
  5272  01013E  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  5276  010140  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5277  010144  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5278  010148  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5279  01014C  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5280  010150  0E05               	movlw	5
  5281  010152                     u6555:
  5282  010152  90D8               	bcf	status,0,c
  5283  010154  0100               	movlb	0	; () banked
  5284  010156  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  5285  010158  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5286  01015A  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5287  01015C  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5288  01015E  2EE8               	decfsz	wreg,f,c
  5289  010160  D7F8               	goto	u6555
  5290  010162  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5291  010166  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5292  01016A  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5293  01016E  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5294                           
  5295                           ; BSR set to: 0
  5296                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  5297  010172  C07B  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  5298  010176                     l5621:
  5299                           
  5300                           ; BSR set to: 0
  5301                           ;inc\CANlib.h: 776: }
  5302                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  5303  010176  0E02               	movlw	2
  5304  010178  0100               	movlb	0	; () banked
  5305  01017A  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5306  01017C  A4D8               	btfss	status,2,c
  5307  01017E  D058               	goto	l5639
  5308                           
  5309                           ; BSR set to: 0
  5310  010180  0100               	movlb	0	; () banked
  5311  010182  2975               	incf	CANSetFilter@type& (0+255),w,b
  5312  010184  A4D8               	btfss	status,2,c
  5313  010186  D054               	goto	l5639
  5314                           
  5315                           ; BSR set to: 0
  5316                           ;inc\CANlib.h: 779: {
  5317                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  5318  010188  010F               	movlb	15	; () banked
  5319  01018A  9709               	bcf	9,3,b	;volatile
  5320                           
  5321                           ; BSR set to: 15
  5322                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  5323  01018C  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  5324  010190  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5325  010194  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5326  010198  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5327  01019C  0E04               	movlw	4
  5328  01019E  D006               	goto	u6580
  5329  0101A0                     u6585:
  5330  0101A0  0100               	movlb	0	; () banked
  5331  0101A2  90D8               	bcf	status,0,c
  5332  0101A4  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5333  0101A6  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5334  0101A8  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5335  0101AA  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  5336  0101AC                     u6580:
  5337  0101AC  2EE8               	decfsz	wreg,f,c
  5338  0101AE  D7F8               	goto	u6585
  5339  0101B0  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5340  0101B4  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5341  0101B8  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5342  0101BC  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5343                           
  5344                           ; BSR set to: 0
  5345                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  5346  0101C0  0100               	movlb	0	; () banked
  5347  0101C2  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  5348  0101C4  0100               	movlb	0	; () banked
  5349  0101C6  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5350  0101C8  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5351  0101CA  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5352  0101CC  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5353                           
  5354                           ; BSR set to: 0
  5355                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  5356  0101CE  C07B  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5357                           
  5358                           ; BSR set to: 0
  5359                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  5360  0101D2  0E07               	movlw	7
  5361  0101D4  0100               	movlb	0	; () banked
  5362  0101D6  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5363  0101D8  0100               	movlb	0	; () banked
  5364  0101DA  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5365  0101DC  0E00               	movlw	0
  5366  0101DE  0100               	movlb	0	; () banked
  5367  0101E0  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5368  0101E2  0100               	movlb	0	; () banked
  5369  0101E4  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5370  0101E6  0E00               	movlw	0
  5371  0101E8  0100               	movlb	0	; () banked
  5372  0101EA  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5373  0101EC  0100               	movlb	0	; () banked
  5374  0101EE  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5375  0101F0  0E00               	movlw	0
  5376  0101F2  0100               	movlb	0	; () banked
  5377  0101F4  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5378  0101F6  0100               	movlb	0	; () banked
  5379  0101F8  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5380                           
  5381                           ; BSR set to: 0
  5382                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  5383  0101FA  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5384  0101FE  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5385  010202  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5386  010206  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5387  01020A  0E05               	movlw	5
  5388  01020C                     u6595:
  5389  01020C  90D8               	bcf	status,0,c
  5390  01020E  0100               	movlb	0	; () banked
  5391  010210  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  5392  010212  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5393  010214  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5394  010216  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5395  010218  2EE8               	decfsz	wreg,f,c
  5396  01021A  D7F8               	goto	u6595
  5397  01021C  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5398  010220  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5399  010224  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5400  010228  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5401                           
  5402                           ; BSR set to: 0
  5403                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  5404  01022C  C07B  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  5405  010230                     l5639:
  5406                           
  5407                           ; BSR set to: 0
  5408                           ;inc\CANlib.h: 789: }
  5409                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  5410  010230  0E03               	movlw	3
  5411  010232  0100               	movlb	0	; () banked
  5412  010234  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5413  010236  A4D8               	btfss	status,2,c
  5414  010238  D058               	goto	l5657
  5415                           
  5416                           ; BSR set to: 0
  5417  01023A  0100               	movlb	0	; () banked
  5418  01023C  2975               	incf	CANSetFilter@type& (0+255),w,b
  5419  01023E  A4D8               	btfss	status,2,c
  5420  010240  D054               	goto	l5657
  5421                           
  5422                           ; BSR set to: 0
  5423                           ;inc\CANlib.h: 792: {
  5424                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  5425  010242  010F               	movlb	15	; () banked
  5426  010244  970D               	bcf	13,3,b	;volatile
  5427                           
  5428                           ; BSR set to: 15
  5429                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  5430  010246  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  5431  01024A  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5432  01024E  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5433  010252  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5434  010256  0E04               	movlw	4
  5435  010258  D006               	goto	u6620
  5436  01025A                     u6625:
  5437  01025A  0100               	movlb	0	; () banked
  5438  01025C  90D8               	bcf	status,0,c
  5439  01025E  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5440  010260  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5441  010262  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5442  010264  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  5443  010266                     u6620:
  5444  010266  2EE8               	decfsz	wreg,f,c
  5445  010268  D7F8               	goto	u6625
  5446  01026A  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5447  01026E  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5448  010272  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5449  010276  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5450                           
  5451                           ; BSR set to: 0
  5452                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  5453  01027A  0100               	movlb	0	; () banked
  5454  01027C  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  5455  01027E  0100               	movlb	0	; () banked
  5456  010280  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5457  010282  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5458  010284  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5459  010286  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5460                           
  5461                           ; BSR set to: 0
  5462                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  5463  010288  C07B  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5464                           
  5465                           ; BSR set to: 0
  5466                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  5467  01028C  0E07               	movlw	7
  5468  01028E  0100               	movlb	0	; () banked
  5469  010290  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5470  010292  0100               	movlb	0	; () banked
  5471  010294  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5472  010296  0E00               	movlw	0
  5473  010298  0100               	movlb	0	; () banked
  5474  01029A  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5475  01029C  0100               	movlb	0	; () banked
  5476  01029E  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5477  0102A0  0E00               	movlw	0
  5478  0102A2  0100               	movlb	0	; () banked
  5479  0102A4  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5480  0102A6  0100               	movlb	0	; () banked
  5481  0102A8  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5482  0102AA  0E00               	movlw	0
  5483  0102AC  0100               	movlb	0	; () banked
  5484  0102AE  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5485  0102B0  0100               	movlb	0	; () banked
  5486  0102B2  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5487                           
  5488                           ; BSR set to: 0
  5489                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  5490  0102B4  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5491  0102B8  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5492  0102BC  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5493  0102C0  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5494  0102C4  0E05               	movlw	5
  5495  0102C6                     u6635:
  5496  0102C6  90D8               	bcf	status,0,c
  5497  0102C8  0100               	movlb	0	; () banked
  5498  0102CA  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  5499  0102CC  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5500  0102CE  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5501  0102D0  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5502  0102D2  2EE8               	decfsz	wreg,f,c
  5503  0102D4  D7F8               	goto	u6635
  5504  0102D6  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5505  0102DA  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5506  0102DE  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5507  0102E2  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5508                           
  5509                           ; BSR set to: 0
  5510                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  5511  0102E6  C07B  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  5512  0102EA                     l5657:
  5513                           
  5514                           ; BSR set to: 0
  5515                           ;inc\CANlib.h: 802: }
  5516                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  5517  0102EA  0E04               	movlw	4
  5518  0102EC  0100               	movlb	0	; () banked
  5519  0102EE  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5520  0102F0  A4D8               	btfss	status,2,c
  5521  0102F2  D058               	goto	l5675
  5522                           
  5523                           ; BSR set to: 0
  5524  0102F4  0100               	movlb	0	; () banked
  5525  0102F6  2975               	incf	CANSetFilter@type& (0+255),w,b
  5526  0102F8  A4D8               	btfss	status,2,c
  5527  0102FA  D054               	goto	l5675
  5528                           
  5529                           ; BSR set to: 0
  5530                           ;inc\CANlib.h: 805: {
  5531                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  5532  0102FC  010F               	movlb	15	; () banked
  5533  0102FE  9711               	bcf	17,3,b	;volatile
  5534                           
  5535                           ; BSR set to: 15
  5536                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  5537  010300  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  5538  010304  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5539  010308  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5540  01030C  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5541  010310  0E04               	movlw	4
  5542  010312  D006               	goto	u6660
  5543  010314                     u6665:
  5544  010314  0100               	movlb	0	; () banked
  5545  010316  90D8               	bcf	status,0,c
  5546  010318  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5547  01031A  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5548  01031C  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5549  01031E  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  5550  010320                     u6660:
  5551  010320  2EE8               	decfsz	wreg,f,c
  5552  010322  D7F8               	goto	u6665
  5553  010324  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5554  010328  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5555  01032C  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5556  010330  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5557                           
  5558                           ; BSR set to: 0
  5559                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  5560  010334  0100               	movlb	0	; () banked
  5561  010336  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  5562  010338  0100               	movlb	0	; () banked
  5563  01033A  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5564  01033C  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5565  01033E  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5566  010340  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5567                           
  5568                           ; BSR set to: 0
  5569                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  5570  010342  C07B  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5571                           
  5572                           ; BSR set to: 0
  5573                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  5574  010346  0E07               	movlw	7
  5575  010348  0100               	movlb	0	; () banked
  5576  01034A  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5577  01034C  0100               	movlb	0	; () banked
  5578  01034E  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5579  010350  0E00               	movlw	0
  5580  010352  0100               	movlb	0	; () banked
  5581  010354  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5582  010356  0100               	movlb	0	; () banked
  5583  010358  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5584  01035A  0E00               	movlw	0
  5585  01035C  0100               	movlb	0	; () banked
  5586  01035E  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5587  010360  0100               	movlb	0	; () banked
  5588  010362  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5589  010364  0E00               	movlw	0
  5590  010366  0100               	movlb	0	; () banked
  5591  010368  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5592  01036A  0100               	movlb	0	; () banked
  5593  01036C  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5594                           
  5595                           ; BSR set to: 0
  5596                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  5597  01036E  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5598  010372  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5599  010376  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5600  01037A  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5601  01037E  0E05               	movlw	5
  5602  010380                     u6675:
  5603  010380  90D8               	bcf	status,0,c
  5604  010382  0100               	movlb	0	; () banked
  5605  010384  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  5606  010386  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5607  010388  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5608  01038A  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5609  01038C  2EE8               	decfsz	wreg,f,c
  5610  01038E  D7F8               	goto	u6675
  5611  010390  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5612  010394  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5613  010398  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5614  01039C  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5615                           
  5616                           ; BSR set to: 0
  5617                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  5618  0103A0  C07B  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  5619  0103A4                     l5675:
  5620                           
  5621                           ; BSR set to: 0
  5622                           ;inc\CANlib.h: 815: }
  5623                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  5624  0103A4  0E05               	movlw	5
  5625  0103A6  0100               	movlb	0	; () banked
  5626  0103A8  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5627  0103AA  A4D8               	btfss	status,2,c
  5628  0103AC  D058               	goto	l5693
  5629                           
  5630                           ; BSR set to: 0
  5631  0103AE  0100               	movlb	0	; () banked
  5632  0103B0  2975               	incf	CANSetFilter@type& (0+255),w,b
  5633  0103B2  A4D8               	btfss	status,2,c
  5634  0103B4  D054               	goto	l5693
  5635                           
  5636                           ; BSR set to: 0
  5637                           ;inc\CANlib.h: 818: {
  5638                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  5639  0103B6  010F               	movlb	15	; () banked
  5640  0103B8  9715               	bcf	21,3,b	;volatile
  5641                           
  5642                           ; BSR set to: 15
  5643                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  5644  0103BA  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  5645  0103BE  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5646  0103C2  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5647  0103C6  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5648  0103CA  0E04               	movlw	4
  5649  0103CC  D006               	goto	u6700
  5650  0103CE                     u6705:
  5651  0103CE  0100               	movlb	0	; () banked
  5652  0103D0  90D8               	bcf	status,0,c
  5653  0103D2  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5654  0103D4  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5655  0103D6  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5656  0103D8  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  5657  0103DA                     u6700:
  5658  0103DA  2EE8               	decfsz	wreg,f,c
  5659  0103DC  D7F8               	goto	u6705
  5660  0103DE  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5661  0103E2  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5662  0103E6  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5663  0103EA  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5664                           
  5665                           ; BSR set to: 0
  5666                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  5667  0103EE  0100               	movlb	0	; () banked
  5668  0103F0  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  5669  0103F2  0100               	movlb	0	; () banked
  5670  0103F4  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5671  0103F6  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5672  0103F8  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5673  0103FA  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5674                           
  5675                           ; BSR set to: 0
  5676                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  5677  0103FC  C07B  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5678                           
  5679                           ; BSR set to: 0
  5680                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  5681  010400  0E07               	movlw	7
  5682  010402  0100               	movlb	0	; () banked
  5683  010404  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5684  010406  0100               	movlb	0	; () banked
  5685  010408  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5686  01040A  0E00               	movlw	0
  5687  01040C  0100               	movlb	0	; () banked
  5688  01040E  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5689  010410  0100               	movlb	0	; () banked
  5690  010412  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5691  010414  0E00               	movlw	0
  5692  010416  0100               	movlb	0	; () banked
  5693  010418  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5694  01041A  0100               	movlb	0	; () banked
  5695  01041C  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5696  01041E  0E00               	movlw	0
  5697  010420  0100               	movlb	0	; () banked
  5698  010422  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5699  010424  0100               	movlb	0	; () banked
  5700  010426  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5701                           
  5702                           ; BSR set to: 0
  5703                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  5704  010428  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5705  01042C  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5706  010430  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5707  010434  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5708  010438  0E05               	movlw	5
  5709  01043A                     u6715:
  5710  01043A  90D8               	bcf	status,0,c
  5711  01043C  0100               	movlb	0	; () banked
  5712  01043E  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  5713  010440  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5714  010442  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5715  010444  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5716  010446  2EE8               	decfsz	wreg,f,c
  5717  010448  D7F8               	goto	u6715
  5718  01044A  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5719  01044E  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5720  010452  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5721  010456  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5722                           
  5723                           ; BSR set to: 0
  5724                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  5725  01045A  C07B  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  5726  01045E                     l5693:
  5727                           
  5728                           ; BSR set to: 0
  5729                           ;inc\CANlib.h: 828: }
  5730                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  5731  01045E  0100               	movlb	0	; () banked
  5732  010460  517A               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5733  010462  0100               	movlb	0	; () banked
  5734  010464  A4D8               	btfss	status,2,c
  5735  010466  D089               	goto	l5727
  5736                           
  5737                           ; BSR set to: 0
  5738  010468  0EF7               	movlw	247
  5739  01046A  0100               	movlb	0	; () banked
  5740  01046C  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  5741  01046E  A4D8               	btfss	status,2,c
  5742  010470  D084               	goto	l5727
  5743                           
  5744                           ; BSR set to: 0
  5745                           ;inc\CANlib.h: 832: {
  5746                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  5747  010472  010F               	movlb	15	; () banked
  5748  010474  8701               	bsf	1,3,b	;volatile
  5749                           
  5750                           ; BSR set to: 15
  5751                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  5752  010476  0100               	movlb	0	; () banked
  5753  010478  5171               	movf	CANSetFilter@filter& (0+255),w,b
  5754  01047A  0100               	movlb	0	; () banked
  5755  01047C  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5756  01047E  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5757  010480  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5758  010482  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5759                           
  5760                           ; BSR set to: 0
  5761                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  5762  010484  C07B  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  5763                           
  5764                           ; BSR set to: 0
  5765                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  5766  010488  0E00               	movlw	0
  5767  01048A  0100               	movlb	0	; () banked
  5768  01048C  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5769  01048E  0100               	movlb	0	; () banked
  5770  010490  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5771  010492  0EFF               	movlw	255
  5772  010494  0100               	movlb	0	; () banked
  5773  010496  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5774  010498  0100               	movlb	0	; () banked
  5775  01049A  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5776  01049C  0E00               	movlw	0
  5777  01049E  0100               	movlb	0	; () banked
  5778  0104A0  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5779  0104A2  0100               	movlb	0	; () banked
  5780  0104A4  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5781  0104A6  0E00               	movlw	0
  5782  0104A8  0100               	movlb	0	; () banked
  5783  0104AA  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5784  0104AC  0100               	movlb	0	; () banked
  5785  0104AE  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5786                           
  5787                           ; BSR set to: 0
  5788                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  5789  0104B0  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5790  0104B4  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5791  0104B8  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5792  0104BC  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5793  0104C0  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  5794  0104C4  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5795  0104C8  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5796  0104CC  0100               	movlb	0	; () banked
  5797  0104CE  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  5798  0104D0  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5799  0104D4  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5800  0104D8  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5801  0104DC  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5802                           
  5803                           ; BSR set to: 0
  5804                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  5805  0104E0  C07B  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5806                           
  5807                           ; BSR set to: 0
  5808                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  5809  0104E4  0100               	movlb	0	; () banked
  5810  0104E6  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5811  0104E8  D003               	goto	l485
  5812                           
  5813                           ; BSR set to: 0
  5814                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  5815  0104EA  010F               	movlb	15	; () banked
  5816  0104EC  8101               	bsf	1,0,b	;volatile
  5817  0104EE  D002               	goto	l486
  5818  0104F0                     l485:
  5819                           
  5820                           ; BSR set to: 0
  5821                           ;inc\CANlib.h: 844: else
  5822                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  5823  0104F0  010F               	movlb	15	; () banked
  5824  0104F2  9101               	bcf	1,0,b	;volatile
  5825  0104F4                     l486:
  5826                           
  5827                           ; BSR set to: 15
  5828                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  5829  0104F4  0100               	movlb	0	; () banked
  5830  0104F6  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5831  0104F8  D003               	goto	l487
  5832                           
  5833                           ; BSR set to: 0
  5834                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  5835  0104FA  010F               	movlb	15	; () banked
  5836  0104FC  8301               	bsf	1,1,b	;volatile
  5837  0104FE  D002               	goto	l488
  5838  010500                     l487:
  5839                           
  5840                           ; BSR set to: 0
  5841                           ;inc\CANlib.h: 849: else
  5842                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  5843  010500  010F               	movlb	15	; () banked
  5844  010502  9301               	bcf	1,1,b	;volatile
  5845  010504                     l488:
  5846                           
  5847                           ; BSR set to: 15
  5848                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  5849  010504  0100               	movlb	0	; () banked
  5850  010506  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5851  010508  D003               	goto	l489
  5852                           
  5853                           ; BSR set to: 0
  5854                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  5855  01050A  010F               	movlb	15	; () banked
  5856  01050C  8B01               	bsf	1,5,b	;volatile
  5857  01050E  D002               	goto	l490
  5858  010510                     l489:
  5859                           
  5860                           ; BSR set to: 0
  5861                           ;inc\CANlib.h: 854: else
  5862                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  5863  010510  010F               	movlb	15	; () banked
  5864  010512  9B01               	bcf	1,5,b	;volatile
  5865  010514                     l490:
  5866                           
  5867                           ; BSR set to: 15
  5868                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  5869  010514  0100               	movlb	0	; () banked
  5870  010516  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5871  010518  D003               	goto	l491
  5872                           
  5873                           ; BSR set to: 0
  5874                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  5875  01051A  010F               	movlb	15	; () banked
  5876  01051C  8D01               	bsf	1,6,b	;volatile
  5877  01051E  D002               	goto	l492
  5878  010520                     l491:
  5879                           
  5880                           ; BSR set to: 0
  5881                           ;inc\CANlib.h: 859: else
  5882                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  5883  010520  010F               	movlb	15	; () banked
  5884  010522  9D01               	bcf	1,6,b	;volatile
  5885  010524                     l492:
  5886                           
  5887                           ; BSR set to: 15
  5888                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  5889  010524  0100               	movlb	0	; () banked
  5890  010526  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5891  010528  D003               	goto	l493
  5892                           
  5893                           ; BSR set to: 0
  5894                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  5895  01052A  010F               	movlb	15	; () banked
  5896  01052C  8F01               	bsf	1,7,b	;volatile
  5897  01052E  D002               	goto	l5721
  5898  010530                     l493:
  5899                           
  5900                           ; BSR set to: 0
  5901                           ;inc\CANlib.h: 864: else
  5902                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  5903  010530  010F               	movlb	15	; () banked
  5904  010532  9F01               	bcf	1,7,b	;volatile
  5905  010534                     l5721:
  5906                           
  5907                           ; BSR set to: 15
  5908                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  5909  010534  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  5910  010538  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5911  01053C  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5912  010540  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5913  010544  0E16               	movlw	22
  5914  010546  D006               	goto	u6790
  5915  010548                     u6795:
  5916  010548  0100               	movlb	0	; () banked
  5917  01054A  90D8               	bcf	status,0,c
  5918  01054C  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5919  01054E  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5920  010550  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5921  010552  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  5922  010554                     u6790:
  5923  010554  2EE8               	decfsz	wreg,f,c
  5924  010556  D7F8               	goto	u6795
  5925  010558  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5926  01055C  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5927  010560  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5928  010564  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5929                           
  5930                           ; BSR set to: 0
  5931                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  5932  010568  0100               	movlb	0	; () banked
  5933  01056A  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  5934  01056C  0100               	movlb	0	; () banked
  5935  01056E  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5936  010570  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5937  010572  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5938  010574  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5939                           
  5940                           ; BSR set to: 0
  5941                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5942  010576  C07B  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5943  01057A                     l5727:
  5944                           
  5945                           ; BSR set to: 0
  5946                           ;inc\CANlib.h: 870: }
  5947                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5948  01057A  0100               	movlb	0	; () banked
  5949  01057C  057A               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5950  01057E  A4D8               	btfss	status,2,c
  5951  010580  D089               	goto	l5761
  5952                           
  5953                           ; BSR set to: 0
  5954  010582  0EF7               	movlw	247
  5955  010584  0100               	movlb	0	; () banked
  5956  010586  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  5957  010588  A4D8               	btfss	status,2,c
  5958  01058A  D084               	goto	l5761
  5959                           
  5960                           ; BSR set to: 0
  5961                           ;inc\CANlib.h: 873: {
  5962                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5963  01058C  010F               	movlb	15	; () banked
  5964  01058E  8705               	bsf	5,3,b	;volatile
  5965                           
  5966                           ; BSR set to: 15
  5967                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  5968  010590  0100               	movlb	0	; () banked
  5969  010592  5171               	movf	CANSetFilter@filter& (0+255),w,b
  5970  010594  0100               	movlb	0	; () banked
  5971  010596  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5972  010598  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5973  01059A  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5974  01059C  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5975                           
  5976                           ; BSR set to: 0
  5977                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5978  01059E  C07B  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5979                           
  5980                           ; BSR set to: 0
  5981                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  5982  0105A2  0E00               	movlw	0
  5983  0105A4  0100               	movlb	0	; () banked
  5984  0105A6  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5985  0105A8  0100               	movlb	0	; () banked
  5986  0105AA  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5987  0105AC  0EFF               	movlw	255
  5988  0105AE  0100               	movlb	0	; () banked
  5989  0105B0  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5990  0105B2  0100               	movlb	0	; () banked
  5991  0105B4  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5992  0105B6  0E00               	movlw	0
  5993  0105B8  0100               	movlb	0	; () banked
  5994  0105BA  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5995  0105BC  0100               	movlb	0	; () banked
  5996  0105BE  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5997  0105C0  0E00               	movlw	0
  5998  0105C2  0100               	movlb	0	; () banked
  5999  0105C4  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6000  0105C6  0100               	movlb	0	; () banked
  6001  0105C8  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6002                           
  6003                           ; BSR set to: 0
  6004                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  6005  0105CA  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  6006  0105CE  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6007  0105D2  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6008  0105D6  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6009  0105DA  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  6010  0105DE  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6011  0105E2  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6012  0105E6  0100               	movlb	0	; () banked
  6013  0105E8  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  6014  0105EA  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  6015  0105EE  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6016  0105F2  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6017  0105F6  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6018                           
  6019                           ; BSR set to: 0
  6020                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  6021  0105FA  C07B  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  6022                           
  6023                           ; BSR set to: 0
  6024                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  6025  0105FE  0100               	movlb	0	; () banked
  6026  010600  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6027  010602  D003               	goto	l496
  6028                           
  6029                           ; BSR set to: 0
  6030                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  6031  010604  010F               	movlb	15	; () banked
  6032  010606  8105               	bsf	5,0,b	;volatile
  6033  010608  D002               	goto	l497
  6034  01060A                     l496:
  6035                           
  6036                           ; BSR set to: 0
  6037                           ;inc\CANlib.h: 885: else
  6038                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  6039  01060A  010F               	movlb	15	; () banked
  6040  01060C  9105               	bcf	5,0,b	;volatile
  6041  01060E                     l497:
  6042                           
  6043                           ; BSR set to: 15
  6044                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  6045  01060E  0100               	movlb	0	; () banked
  6046  010610  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6047  010612  D003               	goto	l498
  6048                           
  6049                           ; BSR set to: 0
  6050                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  6051  010614  010F               	movlb	15	; () banked
  6052  010616  8305               	bsf	5,1,b	;volatile
  6053  010618  D002               	goto	l499
  6054  01061A                     l498:
  6055                           
  6056                           ; BSR set to: 0
  6057                           ;inc\CANlib.h: 890: else
  6058                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  6059  01061A  010F               	movlb	15	; () banked
  6060  01061C  9305               	bcf	5,1,b	;volatile
  6061  01061E                     l499:
  6062                           
  6063                           ; BSR set to: 15
  6064                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  6065  01061E  0100               	movlb	0	; () banked
  6066  010620  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6067  010622  D003               	goto	l500
  6068                           
  6069                           ; BSR set to: 0
  6070                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  6071  010624  010F               	movlb	15	; () banked
  6072  010626  8B05               	bsf	5,5,b	;volatile
  6073  010628  D002               	goto	l501
  6074  01062A                     l500:
  6075                           
  6076                           ; BSR set to: 0
  6077                           ;inc\CANlib.h: 895: else
  6078                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  6079  01062A  010F               	movlb	15	; () banked
  6080  01062C  9B05               	bcf	5,5,b	;volatile
  6081  01062E                     l501:
  6082                           
  6083                           ; BSR set to: 15
  6084                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  6085  01062E  0100               	movlb	0	; () banked
  6086  010630  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6087  010632  D003               	goto	l502
  6088                           
  6089                           ; BSR set to: 0
  6090                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  6091  010634  010F               	movlb	15	; () banked
  6092  010636  8D05               	bsf	5,6,b	;volatile
  6093  010638  D002               	goto	l503
  6094  01063A                     l502:
  6095                           
  6096                           ; BSR set to: 0
  6097                           ;inc\CANlib.h: 900: else
  6098                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  6099  01063A  010F               	movlb	15	; () banked
  6100  01063C  9D05               	bcf	5,6,b	;volatile
  6101  01063E                     l503:
  6102                           
  6103                           ; BSR set to: 15
  6104                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  6105  01063E  0100               	movlb	0	; () banked
  6106  010640  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6107  010642  D003               	goto	l504
  6108                           
  6109                           ; BSR set to: 0
  6110                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  6111  010644  010F               	movlb	15	; () banked
  6112  010646  8F05               	bsf	5,7,b	;volatile
  6113  010648  D002               	goto	l5755
  6114  01064A                     l504:
  6115                           
  6116                           ; BSR set to: 0
  6117                           ;inc\CANlib.h: 905: else
  6118                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  6119  01064A  010F               	movlb	15	; () banked
  6120  01064C  9F05               	bcf	5,7,b	;volatile
  6121  01064E                     l5755:
  6122                           
  6123                           ; BSR set to: 15
  6124                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  6125  01064E  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  6126  010652  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6127  010656  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6128  01065A  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6129  01065E  0E16               	movlw	22
  6130  010660  D006               	goto	u6870
  6131  010662                     u6875:
  6132  010662  0100               	movlb	0	; () banked
  6133  010664  90D8               	bcf	status,0,c
  6134  010666  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6135  010668  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6136  01066A  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6137  01066C  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  6138  01066E                     u6870:
  6139  01066E  2EE8               	decfsz	wreg,f,c
  6140  010670  D7F8               	goto	u6875
  6141  010672  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  6142  010676  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6143  01067A  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6144  01067E  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6145                           
  6146                           ; BSR set to: 0
  6147                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  6148  010682  0100               	movlb	0	; () banked
  6149  010684  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  6150  010686  0100               	movlb	0	; () banked
  6151  010688  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6152  01068A  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6153  01068C  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6154  01068E  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6155                           
  6156                           ; BSR set to: 0
  6157                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  6158  010690  C07B  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  6159  010694                     l5761:
  6160                           
  6161                           ; BSR set to: 0
  6162                           ;inc\CANlib.h: 911: }
  6163                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  6164  010694  0E02               	movlw	2
  6165  010696  0100               	movlb	0	; () banked
  6166  010698  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6167  01069A  A4D8               	btfss	status,2,c
  6168  01069C  D089               	goto	l5795
  6169                           
  6170                           ; BSR set to: 0
  6171  01069E  0EF7               	movlw	247
  6172  0106A0  0100               	movlb	0	; () banked
  6173  0106A2  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  6174  0106A4  A4D8               	btfss	status,2,c
  6175  0106A6  D084               	goto	l5795
  6176                           
  6177                           ; BSR set to: 0
  6178                           ;inc\CANlib.h: 915: {
  6179                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  6180  0106A8  010F               	movlb	15	; () banked
  6181  0106AA  8709               	bsf	9,3,b	;volatile
  6182                           
  6183                           ; BSR set to: 15
  6184                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  6185  0106AC  0100               	movlb	0	; () banked
  6186  0106AE  5171               	movf	CANSetFilter@filter& (0+255),w,b
  6187  0106B0  0100               	movlb	0	; () banked
  6188  0106B2  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6189  0106B4  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6190  0106B6  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6191  0106B8  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6192                           
  6193                           ; BSR set to: 0
  6194                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  6195  0106BA  C07B  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  6196                           
  6197                           ; BSR set to: 0
  6198                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  6199  0106BE  0E00               	movlw	0
  6200  0106C0  0100               	movlb	0	; () banked
  6201  0106C2  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  6202  0106C4  0100               	movlb	0	; () banked
  6203  0106C6  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6204  0106C8  0EFF               	movlw	255
  6205  0106CA  0100               	movlb	0	; () banked
  6206  0106CC  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6207  0106CE  0100               	movlb	0	; () banked
  6208  0106D0  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6209  0106D2  0E00               	movlw	0
  6210  0106D4  0100               	movlb	0	; () banked
  6211  0106D6  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6212  0106D8  0100               	movlb	0	; () banked
  6213  0106DA  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6214  0106DC  0E00               	movlw	0
  6215  0106DE  0100               	movlb	0	; () banked
  6216  0106E0  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6217  0106E2  0100               	movlb	0	; () banked
  6218  0106E4  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6219                           
  6220                           ; BSR set to: 0
  6221                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  6222  0106E6  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  6223  0106EA  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6224  0106EE  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6225  0106F2  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6226  0106F6  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  6227  0106FA  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6228  0106FE  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6229  010702  0100               	movlb	0	; () banked
  6230  010704  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  6231  010706  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  6232  01070A  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6233  01070E  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6234  010712  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6235                           
  6236                           ; BSR set to: 0
  6237                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  6238  010716  C07B  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  6239                           
  6240                           ; BSR set to: 0
  6241                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  6242  01071A  0100               	movlb	0	; () banked
  6243  01071C  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6244  01071E  D003               	goto	l507
  6245                           
  6246                           ; BSR set to: 0
  6247                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  6248  010720  010F               	movlb	15	; () banked
  6249  010722  8109               	bsf	9,0,b	;volatile
  6250  010724  D002               	goto	l508
  6251  010726                     l507:
  6252                           
  6253                           ; BSR set to: 0
  6254                           ;inc\CANlib.h: 927: else
  6255                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  6256  010726  010F               	movlb	15	; () banked
  6257  010728  9109               	bcf	9,0,b	;volatile
  6258  01072A                     l508:
  6259                           
  6260                           ; BSR set to: 15
  6261                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  6262  01072A  0100               	movlb	0	; () banked
  6263  01072C  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6264  01072E  D003               	goto	l509
  6265                           
  6266                           ; BSR set to: 0
  6267                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  6268  010730  010F               	movlb	15	; () banked
  6269  010732  8309               	bsf	9,1,b	;volatile
  6270  010734  D002               	goto	l510
  6271  010736                     l509:
  6272                           
  6273                           ; BSR set to: 0
  6274                           ;inc\CANlib.h: 932: else
  6275                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  6276  010736  010F               	movlb	15	; () banked
  6277  010738  9309               	bcf	9,1,b	;volatile
  6278  01073A                     l510:
  6279                           
  6280                           ; BSR set to: 15
  6281                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  6282  01073A  0100               	movlb	0	; () banked
  6283  01073C  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6284  01073E  D003               	goto	l511
  6285                           
  6286                           ; BSR set to: 0
  6287                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  6288  010740  010F               	movlb	15	; () banked
  6289  010742  8B09               	bsf	9,5,b	;volatile
  6290  010744  D002               	goto	l512
  6291  010746                     l511:
  6292                           
  6293                           ; BSR set to: 0
  6294                           ;inc\CANlib.h: 937: else
  6295                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  6296  010746  010F               	movlb	15	; () banked
  6297  010748  9B09               	bcf	9,5,b	;volatile
  6298  01074A                     l512:
  6299                           
  6300                           ; BSR set to: 15
  6301                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  6302  01074A  0100               	movlb	0	; () banked
  6303  01074C  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6304  01074E  D003               	goto	l513
  6305                           
  6306                           ; BSR set to: 0
  6307                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  6308  010750  010F               	movlb	15	; () banked
  6309  010752  8D09               	bsf	9,6,b	;volatile
  6310  010754  D002               	goto	l514
  6311  010756                     l513:
  6312                           
  6313                           ; BSR set to: 0
  6314                           ;inc\CANlib.h: 942: else
  6315                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  6316  010756  010F               	movlb	15	; () banked
  6317  010758  9D09               	bcf	9,6,b	;volatile
  6318  01075A                     l514:
  6319                           
  6320                           ; BSR set to: 15
  6321                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  6322  01075A  0100               	movlb	0	; () banked
  6323  01075C  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6324  01075E  D003               	goto	l515
  6325                           
  6326                           ; BSR set to: 0
  6327                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  6328  010760  010F               	movlb	15	; () banked
  6329  010762  8F09               	bsf	9,7,b	;volatile
  6330  010764  D002               	goto	l5789
  6331  010766                     l515:
  6332                           
  6333                           ; BSR set to: 0
  6334                           ;inc\CANlib.h: 947: else
  6335                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  6336  010766  010F               	movlb	15	; () banked
  6337  010768  9F09               	bcf	9,7,b	;volatile
  6338  01076A                     l5789:
  6339                           
  6340                           ; BSR set to: 15
  6341                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  6342  01076A  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  6343  01076E  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6344  010772  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6345  010776  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6346  01077A  0E16               	movlw	22
  6347  01077C  D006               	goto	u6950
  6348  01077E                     u6955:
  6349  01077E  0100               	movlb	0	; () banked
  6350  010780  90D8               	bcf	status,0,c
  6351  010782  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6352  010784  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6353  010786  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6354  010788  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  6355  01078A                     u6950:
  6356  01078A  2EE8               	decfsz	wreg,f,c
  6357  01078C  D7F8               	goto	u6955
  6358  01078E  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  6359  010792  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6360  010796  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6361  01079A  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6362                           
  6363                           ; BSR set to: 0
  6364                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  6365  01079E  0100               	movlb	0	; () banked
  6366  0107A0  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  6367  0107A2  0100               	movlb	0	; () banked
  6368  0107A4  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6369  0107A6  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6370  0107A8  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6371  0107AA  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6372                           
  6373                           ; BSR set to: 0
  6374                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  6375  0107AC  C07B  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  6376  0107B0                     l5795:
  6377                           
  6378                           ; BSR set to: 0
  6379                           ;inc\CANlib.h: 953: }
  6380                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  6381  0107B0  0E03               	movlw	3
  6382  0107B2  0100               	movlb	0	; () banked
  6383  0107B4  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6384  0107B6  A4D8               	btfss	status,2,c
  6385  0107B8  D089               	goto	l5829
  6386                           
  6387                           ; BSR set to: 0
  6388  0107BA  0EF7               	movlw	247
  6389  0107BC  0100               	movlb	0	; () banked
  6390  0107BE  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  6391  0107C0  A4D8               	btfss	status,2,c
  6392  0107C2  D084               	goto	l5829
  6393                           
  6394                           ; BSR set to: 0
  6395                           ;inc\CANlib.h: 956: {
  6396                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  6397  0107C4  010F               	movlb	15	; () banked
  6398  0107C6  870D               	bsf	13,3,b	;volatile
  6399                           
  6400                           ; BSR set to: 15
  6401                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  6402  0107C8  0100               	movlb	0	; () banked
  6403  0107CA  5171               	movf	CANSetFilter@filter& (0+255),w,b
  6404  0107CC  0100               	movlb	0	; () banked
  6405  0107CE  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6406  0107D0  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6407  0107D2  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6408  0107D4  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6409                           
  6410                           ; BSR set to: 0
  6411                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  6412  0107D6  C07B  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  6413                           
  6414                           ; BSR set to: 0
  6415                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  6416  0107DA  0E00               	movlw	0
  6417  0107DC  0100               	movlb	0	; () banked
  6418  0107DE  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  6419  0107E0  0100               	movlb	0	; () banked
  6420  0107E2  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6421  0107E4  0EFF               	movlw	255
  6422  0107E6  0100               	movlb	0	; () banked
  6423  0107E8  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6424  0107EA  0100               	movlb	0	; () banked
  6425  0107EC  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6426  0107EE  0E00               	movlw	0
  6427  0107F0  0100               	movlb	0	; () banked
  6428  0107F2  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6429  0107F4  0100               	movlb	0	; () banked
  6430  0107F6  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6431  0107F8  0E00               	movlw	0
  6432  0107FA  0100               	movlb	0	; () banked
  6433  0107FC  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6434  0107FE  0100               	movlb	0	; () banked
  6435  010800  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6436                           
  6437                           ; BSR set to: 0
  6438                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  6439  010802  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  6440  010806  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6441  01080A  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6442  01080E  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6443  010812  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  6444  010816  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6445  01081A  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6446  01081E  0100               	movlb	0	; () banked
  6447  010820  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  6448  010822  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  6449  010826  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6450  01082A  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6451  01082E  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6452                           
  6453                           ; BSR set to: 0
  6454                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  6455  010832  C07B  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  6456                           
  6457                           ; BSR set to: 0
  6458                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  6459  010836  0100               	movlb	0	; () banked
  6460  010838  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6461  01083A  D003               	goto	l518
  6462                           
  6463                           ; BSR set to: 0
  6464                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  6465  01083C  010F               	movlb	15	; () banked
  6466  01083E  810D               	bsf	13,0,b	;volatile
  6467  010840  D002               	goto	l519
  6468  010842                     l518:
  6469                           
  6470                           ; BSR set to: 0
  6471                           ;inc\CANlib.h: 968: else
  6472                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  6473  010842  010F               	movlb	15	; () banked
  6474  010844  910D               	bcf	13,0,b	;volatile
  6475  010846                     l519:
  6476                           
  6477                           ; BSR set to: 15
  6478                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  6479  010846  0100               	movlb	0	; () banked
  6480  010848  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6481  01084A  D003               	goto	l520
  6482                           
  6483                           ; BSR set to: 0
  6484                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  6485  01084C  010F               	movlb	15	; () banked
  6486  01084E  830D               	bsf	13,1,b	;volatile
  6487  010850  D002               	goto	l521
  6488  010852                     l520:
  6489                           
  6490                           ; BSR set to: 0
  6491                           ;inc\CANlib.h: 973: else
  6492                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  6493  010852  010F               	movlb	15	; () banked
  6494  010854  930D               	bcf	13,1,b	;volatile
  6495  010856                     l521:
  6496                           
  6497                           ; BSR set to: 15
  6498                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  6499  010856  0100               	movlb	0	; () banked
  6500  010858  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6501  01085A  D003               	goto	l522
  6502                           
  6503                           ; BSR set to: 0
  6504                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  6505  01085C  010F               	movlb	15	; () banked
  6506  01085E  8B0D               	bsf	13,5,b	;volatile
  6507  010860  D002               	goto	l523
  6508  010862                     l522:
  6509                           
  6510                           ; BSR set to: 0
  6511                           ;inc\CANlib.h: 978: else
  6512                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  6513  010862  010F               	movlb	15	; () banked
  6514  010864  9B0D               	bcf	13,5,b	;volatile
  6515  010866                     l523:
  6516                           
  6517                           ; BSR set to: 15
  6518                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  6519  010866  0100               	movlb	0	; () banked
  6520  010868  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6521  01086A  D003               	goto	l524
  6522                           
  6523                           ; BSR set to: 0
  6524                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  6525  01086C  010F               	movlb	15	; () banked
  6526  01086E  8D0D               	bsf	13,6,b	;volatile
  6527  010870  D002               	goto	l525
  6528  010872                     l524:
  6529                           
  6530                           ; BSR set to: 0
  6531                           ;inc\CANlib.h: 983: else
  6532                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  6533  010872  010F               	movlb	15	; () banked
  6534  010874  9D0D               	bcf	13,6,b	;volatile
  6535  010876                     l525:
  6536                           
  6537                           ; BSR set to: 15
  6538                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  6539  010876  0100               	movlb	0	; () banked
  6540  010878  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6541  01087A  D003               	goto	l526
  6542                           
  6543                           ; BSR set to: 0
  6544                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  6545  01087C  010F               	movlb	15	; () banked
  6546  01087E  8F0D               	bsf	13,7,b	;volatile
  6547  010880  D002               	goto	l5823
  6548  010882                     l526:
  6549                           
  6550                           ; BSR set to: 0
  6551                           ;inc\CANlib.h: 988: else
  6552                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  6553  010882  010F               	movlb	15	; () banked
  6554  010884  9F0D               	bcf	13,7,b	;volatile
  6555  010886                     l5823:
  6556                           
  6557                           ; BSR set to: 15
  6558                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  6559  010886  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  6560  01088A  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6561  01088E  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6562  010892  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6563  010896  0E16               	movlw	22
  6564  010898  D006               	goto	u7030
  6565  01089A                     u7035:
  6566  01089A  0100               	movlb	0	; () banked
  6567  01089C  90D8               	bcf	status,0,c
  6568  01089E  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6569  0108A0  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6570  0108A2  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6571  0108A4  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  6572  0108A6                     u7030:
  6573  0108A6  2EE8               	decfsz	wreg,f,c
  6574  0108A8  D7F8               	goto	u7035
  6575  0108AA  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  6576  0108AE  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6577  0108B2  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6578  0108B6  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6579                           
  6580                           ; BSR set to: 0
  6581                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  6582  0108BA  0100               	movlb	0	; () banked
  6583  0108BC  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  6584  0108BE  0100               	movlb	0	; () banked
  6585  0108C0  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6586  0108C2  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6587  0108C4  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6588  0108C6  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6589                           
  6590                           ; BSR set to: 0
  6591                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  6592  0108C8  C07B  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  6593  0108CC                     l5829:
  6594                           
  6595                           ; BSR set to: 0
  6596                           ;inc\CANlib.h: 994: }
  6597                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  6598  0108CC  0E04               	movlw	4
  6599  0108CE  0100               	movlb	0	; () banked
  6600  0108D0  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6601  0108D2  A4D8               	btfss	status,2,c
  6602  0108D4  D089               	goto	l5863
  6603                           
  6604                           ; BSR set to: 0
  6605  0108D6  0EF7               	movlw	247
  6606  0108D8  0100               	movlb	0	; () banked
  6607  0108DA  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  6608  0108DC  A4D8               	btfss	status,2,c
  6609  0108DE  D084               	goto	l5863
  6610                           
  6611                           ; BSR set to: 0
  6612                           ;inc\CANlib.h: 997: {
  6613                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  6614  0108E0  010F               	movlb	15	; () banked
  6615  0108E2  8711               	bsf	17,3,b	;volatile
  6616                           
  6617                           ; BSR set to: 15
  6618                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  6619  0108E4  0100               	movlb	0	; () banked
  6620  0108E6  5171               	movf	CANSetFilter@filter& (0+255),w,b
  6621  0108E8  0100               	movlb	0	; () banked
  6622  0108EA  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6623  0108EC  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6624  0108EE  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6625  0108F0  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6626                           
  6627                           ; BSR set to: 0
  6628                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  6629  0108F2  C07B  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  6630                           
  6631                           ; BSR set to: 0
  6632                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  6633  0108F6  0E00               	movlw	0
  6634  0108F8  0100               	movlb	0	; () banked
  6635  0108FA  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  6636  0108FC  0100               	movlb	0	; () banked
  6637  0108FE  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6638  010900  0EFF               	movlw	255
  6639  010902  0100               	movlb	0	; () banked
  6640  010904  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6641  010906  0100               	movlb	0	; () banked
  6642  010908  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6643  01090A  0E00               	movlw	0
  6644  01090C  0100               	movlb	0	; () banked
  6645  01090E  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6646  010910  0100               	movlb	0	; () banked
  6647  010912  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6648  010914  0E00               	movlw	0
  6649  010916  0100               	movlb	0	; () banked
  6650  010918  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6651  01091A  0100               	movlb	0	; () banked
  6652  01091C  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6653                           
  6654                           ; BSR set to: 0
  6655                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  6656  01091E  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  6657  010922  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6658  010926  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6659  01092A  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6660  01092E  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  6661  010932  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6662  010936  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6663  01093A  0100               	movlb	0	; () banked
  6664  01093C  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  6665  01093E  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  6666  010942  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6667  010946  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6668  01094A  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6669                           
  6670                           ; BSR set to: 0
  6671                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  6672  01094E  C07B  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  6673                           
  6674                           ; BSR set to: 0
  6675                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  6676  010952  0100               	movlb	0	; () banked
  6677  010954  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6678  010956  D003               	goto	l529
  6679                           
  6680                           ; BSR set to: 0
  6681                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  6682  010958  010F               	movlb	15	; () banked
  6683  01095A  8111               	bsf	17,0,b	;volatile
  6684  01095C  D002               	goto	l530
  6685  01095E                     l529:
  6686                           
  6687                           ; BSR set to: 0
  6688                           ;inc\CANlib.h: 1009: else
  6689                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  6690  01095E  010F               	movlb	15	; () banked
  6691  010960  9111               	bcf	17,0,b	;volatile
  6692  010962                     l530:
  6693                           
  6694                           ; BSR set to: 15
  6695                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  6696  010962  0100               	movlb	0	; () banked
  6697  010964  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6698  010966  D003               	goto	l531
  6699                           
  6700                           ; BSR set to: 0
  6701                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  6702  010968  010F               	movlb	15	; () banked
  6703  01096A  8311               	bsf	17,1,b	;volatile
  6704  01096C  D002               	goto	l532
  6705  01096E                     l531:
  6706                           
  6707                           ; BSR set to: 0
  6708                           ;inc\CANlib.h: 1014: else
  6709                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  6710  01096E  010F               	movlb	15	; () banked
  6711  010970  9311               	bcf	17,1,b	;volatile
  6712  010972                     l532:
  6713                           
  6714                           ; BSR set to: 15
  6715                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  6716  010972  0100               	movlb	0	; () banked
  6717  010974  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6718  010976  D003               	goto	l533
  6719                           
  6720                           ; BSR set to: 0
  6721                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  6722  010978  010F               	movlb	15	; () banked
  6723  01097A  8B11               	bsf	17,5,b	;volatile
  6724  01097C  D002               	goto	l534
  6725  01097E                     l533:
  6726                           
  6727                           ; BSR set to: 0
  6728                           ;inc\CANlib.h: 1019: else
  6729                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  6730  01097E  010F               	movlb	15	; () banked
  6731  010980  9B11               	bcf	17,5,b	;volatile
  6732  010982                     l534:
  6733                           
  6734                           ; BSR set to: 15
  6735                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  6736  010982  0100               	movlb	0	; () banked
  6737  010984  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6738  010986  D003               	goto	l535
  6739                           
  6740                           ; BSR set to: 0
  6741                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  6742  010988  010F               	movlb	15	; () banked
  6743  01098A  8D11               	bsf	17,6,b	;volatile
  6744  01098C  D002               	goto	l536
  6745  01098E                     l535:
  6746                           
  6747                           ; BSR set to: 0
  6748                           ;inc\CANlib.h: 1024: else
  6749                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  6750  01098E  010F               	movlb	15	; () banked
  6751  010990  9D11               	bcf	17,6,b	;volatile
  6752  010992                     l536:
  6753                           
  6754                           ; BSR set to: 15
  6755                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  6756  010992  0100               	movlb	0	; () banked
  6757  010994  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6758  010996  D003               	goto	l537
  6759                           
  6760                           ; BSR set to: 0
  6761                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  6762  010998  010F               	movlb	15	; () banked
  6763  01099A  8F11               	bsf	17,7,b	;volatile
  6764  01099C  D002               	goto	l5857
  6765  01099E                     l537:
  6766                           
  6767                           ; BSR set to: 0
  6768                           ;inc\CANlib.h: 1029: else
  6769                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  6770  01099E  010F               	movlb	15	; () banked
  6771  0109A0  9F11               	bcf	17,7,b	;volatile
  6772  0109A2                     l5857:
  6773                           
  6774                           ; BSR set to: 15
  6775                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  6776  0109A2  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  6777  0109A6  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6778  0109AA  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6779  0109AE  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6780  0109B2  0E16               	movlw	22
  6781  0109B4  D006               	goto	u7110
  6782  0109B6                     u7115:
  6783  0109B6  0100               	movlb	0	; () banked
  6784  0109B8  90D8               	bcf	status,0,c
  6785  0109BA  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6786  0109BC  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6787  0109BE  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6788  0109C0  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  6789  0109C2                     u7110:
  6790  0109C2  2EE8               	decfsz	wreg,f,c
  6791  0109C4  D7F8               	goto	u7115
  6792  0109C6  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  6793  0109CA  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6794  0109CE  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6795  0109D2  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6796                           
  6797                           ; BSR set to: 0
  6798                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  6799  0109D6  0100               	movlb	0	; () banked
  6800  0109D8  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  6801  0109DA  0100               	movlb	0	; () banked
  6802  0109DC  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6803  0109DE  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6804  0109E0  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6805  0109E2  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6806                           
  6807                           ; BSR set to: 0
  6808                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  6809  0109E4  C07B  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6810  0109E8                     l5863:
  6811                           
  6812                           ; BSR set to: 0
  6813                           ;inc\CANlib.h: 1035: }
  6814                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6815  0109E8  0E05               	movlw	5
  6816  0109EA  0100               	movlb	0	; () banked
  6817  0109EC  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6818  0109EE  A4D8               	btfss	status,2,c
  6819  0109F0  0012               	return	
  6820                           
  6821                           ; BSR set to: 0
  6822  0109F2  0EF7               	movlw	247
  6823  0109F4  0100               	movlb	0	; () banked
  6824  0109F6  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  6825  0109F8  A4D8               	btfss	status,2,c
  6826  0109FA  0012               	return	
  6827                           
  6828                           ; BSR set to: 0
  6829                           ;inc\CANlib.h: 1038: {
  6830                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  6831  0109FC  010F               	movlb	15	; () banked
  6832  0109FE  8715               	bsf	21,3,b	;volatile
  6833                           
  6834                           ; BSR set to: 15
  6835                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  6836  010A00  0100               	movlb	0	; () banked
  6837  010A02  5171               	movf	CANSetFilter@filter& (0+255),w,b
  6838  010A04  0100               	movlb	0	; () banked
  6839  010A06  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6840  010A08  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6841  010A0A  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6842  010A0C  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6843                           
  6844                           ; BSR set to: 0
  6845                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  6846  010A0E  C07B  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6847                           
  6848                           ; BSR set to: 0
  6849                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  6850  010A12  0E00               	movlw	0
  6851  010A14  0100               	movlb	0	; () banked
  6852  010A16  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  6853  010A18  0100               	movlb	0	; () banked
  6854  010A1A  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6855  010A1C  0EFF               	movlw	255
  6856  010A1E  0100               	movlb	0	; () banked
  6857  010A20  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6858  010A22  0100               	movlb	0	; () banked
  6859  010A24  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6860  010A26  0E00               	movlw	0
  6861  010A28  0100               	movlb	0	; () banked
  6862  010A2A  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6863  010A2C  0100               	movlb	0	; () banked
  6864  010A2E  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6865  010A30  0E00               	movlw	0
  6866  010A32  0100               	movlb	0	; () banked
  6867  010A34  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6868  010A36  0100               	movlb	0	; () banked
  6869  010A38  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6870                           
  6871                           ; BSR set to: 0
  6872                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  6873  010A3A  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  6874  010A3E  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6875  010A42  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6876  010A46  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6877  010A4A  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  6878  010A4E  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6879  010A52  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6880  010A56  0100               	movlb	0	; () banked
  6881  010A58  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  6882  010A5A  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  6883  010A5E  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6884  010A62  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6885  010A66  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6886                           
  6887                           ; BSR set to: 0
  6888                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  6889  010A6A  C07B  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6890                           
  6891                           ; BSR set to: 0
  6892                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  6893  010A6E  0100               	movlb	0	; () banked
  6894  010A70  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6895  010A72  D003               	goto	l540
  6896                           
  6897                           ; BSR set to: 0
  6898                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  6899  010A74  010F               	movlb	15	; () banked
  6900  010A76  8115               	bsf	21,0,b	;volatile
  6901  010A78  D002               	goto	l541
  6902  010A7A                     l540:
  6903                           
  6904                           ; BSR set to: 0
  6905                           ;inc\CANlib.h: 1050: else
  6906                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  6907  010A7A  010F               	movlb	15	; () banked
  6908  010A7C  9115               	bcf	21,0,b	;volatile
  6909  010A7E                     l541:
  6910                           
  6911                           ; BSR set to: 15
  6912                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  6913  010A7E  0100               	movlb	0	; () banked
  6914  010A80  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6915  010A82  D003               	goto	l542
  6916                           
  6917                           ; BSR set to: 0
  6918                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  6919  010A84  010F               	movlb	15	; () banked
  6920  010A86  8315               	bsf	21,1,b	;volatile
  6921  010A88  D002               	goto	l543
  6922  010A8A                     l542:
  6923                           
  6924                           ; BSR set to: 0
  6925                           ;inc\CANlib.h: 1055: else
  6926                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6927  010A8A  010F               	movlb	15	; () banked
  6928  010A8C  9315               	bcf	21,1,b	;volatile
  6929  010A8E                     l543:
  6930                           
  6931                           ; BSR set to: 15
  6932                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  6933  010A8E  0100               	movlb	0	; () banked
  6934  010A90  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6935  010A92  D003               	goto	l544
  6936                           
  6937                           ; BSR set to: 0
  6938                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6939  010A94  010F               	movlb	15	; () banked
  6940  010A96  8B15               	bsf	21,5,b	;volatile
  6941  010A98  D002               	goto	l545
  6942  010A9A                     l544:
  6943                           
  6944                           ; BSR set to: 0
  6945                           ;inc\CANlib.h: 1060: else
  6946                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6947  010A9A  010F               	movlb	15	; () banked
  6948  010A9C  9B15               	bcf	21,5,b	;volatile
  6949  010A9E                     l545:
  6950                           
  6951                           ; BSR set to: 15
  6952                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  6953  010A9E  0100               	movlb	0	; () banked
  6954  010AA0  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6955  010AA2  D003               	goto	l546
  6956                           
  6957                           ; BSR set to: 0
  6958                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6959  010AA4  010F               	movlb	15	; () banked
  6960  010AA6  8D15               	bsf	21,6,b	;volatile
  6961  010AA8  D002               	goto	l547
  6962  010AAA                     l546:
  6963                           
  6964                           ; BSR set to: 0
  6965                           ;inc\CANlib.h: 1065: else
  6966                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6967  010AAA  010F               	movlb	15	; () banked
  6968  010AAC  9D15               	bcf	21,6,b	;volatile
  6969  010AAE                     l547:
  6970                           
  6971                           ; BSR set to: 15
  6972                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  6973  010AAE  0100               	movlb	0	; () banked
  6974  010AB0  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6975  010AB2  D003               	goto	l548
  6976                           
  6977                           ; BSR set to: 0
  6978                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6979  010AB4  010F               	movlb	15	; () banked
  6980  010AB6  8F15               	bsf	21,7,b	;volatile
  6981  010AB8  D002               	goto	l5891
  6982  010ABA                     l548:
  6983                           
  6984                           ; BSR set to: 0
  6985                           ;inc\CANlib.h: 1070: else
  6986                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6987  010ABA  010F               	movlb	15	; () banked
  6988  010ABC  9F15               	bcf	21,7,b	;volatile
  6989  010ABE                     l5891:
  6990                           
  6991                           ; BSR set to: 15
  6992                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  6993  010ABE  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  6994  010AC2  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6995  010AC6  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6996  010ACA  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6997  010ACE  0E16               	movlw	22
  6998  010AD0  D006               	goto	u7190
  6999  010AD2                     u7195:
  7000  010AD2  0100               	movlb	0	; () banked
  7001  010AD4  90D8               	bcf	status,0,c
  7002  010AD6  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  7003  010AD8  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  7004  010ADA  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  7005  010ADC  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  7006  010ADE                     u7190:
  7007  010ADE  2EE8               	decfsz	wreg,f,c
  7008  010AE0  D7F8               	goto	u7195
  7009  010AE2  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  7010  010AE6  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  7011  010AEA  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  7012  010AEE  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  7013                           
  7014                           ; BSR set to: 0
  7015                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  7016  010AF2  0100               	movlb	0	; () banked
  7017  010AF4  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  7018  010AF6  0100               	movlb	0	; () banked
  7019  010AF8  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  7020  010AFA  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  7021  010AFC  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  7022  010AFE  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  7023                           
  7024                           ; BSR set to: 0
  7025                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  7026  010B00  C07B  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  7027  010B04  0012               	return	
  7028  010B06                     __end_of_CANSetFilter:
  7029                           	opt stack 0
  7030                           tblptru	equ	0xFF8
  7031                           tblptrh	equ	0xFF7
  7032                           tblptrl	equ	0xFF6
  7033                           tablat	equ	0xFF5
  7034                           prodh	equ	0xFF4
  7035                           prodl	equ	0xFF3
  7036                           intcon	equ	0xFF2
  7037                           postinc0	equ	0xFEE
  7038                           wreg	equ	0xFE8
  7039                           postinc2	equ	0xFDE
  7040                           fsr2h	equ	0xFDA
  7041                           fsr2l	equ	0xFD9
  7042                           status	equ	0xFD8
  7043                           
  7044 ;; *************** function _CANOperationMode *****************
  7045 ;; Defined at:
  7046 ;;		line 206 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  7047 ;; Parameters:    Size  Location     Type
  7048 ;;  mode            1    wreg     enum E16743
  7049 ;; Auto vars:     Size  Location     Type
  7050 ;;  mode            1   17[BANK0 ] enum E16743
  7051 ;; Return value:  Size  Location     Type
  7052 ;;                  1    wreg      void 
  7053 ;; Registers used:
  7054 ;;		wreg, status,2, status,0
  7055 ;; Tracked objects:
  7056 ;;		On entry : 0/0
  7057 ;;		On exit  : 0/0
  7058 ;;		Unchanged: 0/0
  7059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7061 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7063 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7064 ;;Total ram usage:        1 bytes
  7065 ;; Hardware stack levels used:    1
  7066 ;; Hardware stack levels required when called:    3
  7067 ;; This function calls:
  7068 ;;		Nothing
  7069 ;; This function is called by:
  7070 ;;		_CANInitialize
  7071 ;; This function uses a non-reentrant model
  7072 ;;
  7073                           
  7074                           	psect	text5
  7075  016872                     __ptext5:
  7076                           	opt stack 0
  7077  016872                     _CANOperationMode:
  7078                           	opt stack 25
  7079                           
  7080                           ; BSR set to: 0
  7081                           ;incstack = 0
  7082                           ;CANOperationMode@mode stored from wreg
  7083  016872  0100               	movlb	0	; () banked
  7084  016874  6F71               	movwf	CANOperationMode@mode& (0+255),b
  7085                           
  7086                           ;inc\CANlib.h: 208: CANCON = mode;
  7087  016876  C071  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  7088  01687A                     l5487:
  7089  01687A  506E               	movf	3950,w,c	;volatile
  7090  01687C  0BE0               	andlw	224
  7091  01687E  0100               	movlb	0	; () banked
  7092  016880  1971               	xorwf	CANOperationMode@mode& (0+255),w,b
  7093  016882  B4D8               	btfsc	status,2,c
  7094  016884  0012               	return	
  7095  016886  D7F9               	goto	l5487
  7096  016888                     __end_of_CANOperationMode:
  7097                           	opt stack 0
  7098                           tblptru	equ	0xFF8
  7099                           tblptrh	equ	0xFF7
  7100                           tblptrl	equ	0xFF6
  7101                           tablat	equ	0xFF5
  7102                           prodh	equ	0xFF4
  7103                           prodl	equ	0xFF3
  7104                           intcon	equ	0xFF2
  7105                           postinc0	equ	0xFEE
  7106                           wreg	equ	0xFE8
  7107                           postinc2	equ	0xFDE
  7108                           fsr2h	equ	0xFDA
  7109                           fsr2l	equ	0xFD9
  7110                           status	equ	0xFD8
  7111                           
  7112 ;; *************** function _PWR_Button_Polling *****************
  7113 ;; Defined at:
  7114 ;;		line 657 in file "RemoteCan.c"
  7115 ;; Parameters:    Size  Location     Type
  7116 ;;		None
  7117 ;; Auto vars:     Size  Location     Type
  7118 ;;		None
  7119 ;; Return value:  Size  Location     Type
  7120 ;;                  1    wreg      void 
  7121 ;; Registers used:
  7122 ;;		None
  7123 ;; Tracked objects:
  7124 ;;		On entry : 0/0
  7125 ;;		On exit  : 0/0
  7126 ;;		Unchanged: 0/0
  7127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7132 ;;Total ram usage:        0 bytes
  7133 ;; Hardware stack levels used:    1
  7134 ;; Hardware stack levels required when called:    3
  7135 ;; This function calls:
  7136 ;;		Nothing
  7137 ;; This function is called by:
  7138 ;;		_main
  7139 ;; This function uses a non-reentrant model
  7140 ;;
  7141                           
  7142                           	psect	text6
  7143  016802                     __ptext6:
  7144                           	opt stack 0
  7145  016802                     _PWR_Button_Polling:
  7146                           	opt stack 27
  7147                           
  7148                           ;RemoteCan.c: 658: if ((PORTBbits.RB5 == 0) || (wait_low_1 == 0)) {
  7149                           
  7150                           ; BSR set to: 0
  7151                           ;incstack = 0
  7152  016802  AA81               	btfss	3969,5,c	;volatile
  7153  016804  D002               	goto	l950
  7154  016806  B44A               	btfsc	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  7155  016808  0012               	return	
  7156  01680A                     l950:
  7157                           
  7158                           ;RemoteCan.c: 659: wait_low_1 = 0;
  7159  01680A  944A               	bcf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  7160                           
  7161                           ;RemoteCan.c: 660: if (PORTBbits.RB5 == 1) {
  7162  01680C  AA81               	btfss	3969,5,c	;volatile
  7163  01680E  0012               	return	
  7164                           
  7165                           ;RemoteCan.c: 661: power_switch = ~power_switch;
  7166  016810  B649               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  7167  016812  D002               	goto	u9190
  7168  016814  8649               	bsf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  7169  016816  D001               	goto	u9205
  7170  016818                     u9190:
  7171  016818  9649               	bcf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  7172  01681A                     u9205:
  7173                           
  7174                           ;RemoteCan.c: 662: wait_low_1 = 1;
  7175  01681A  844A               	bsf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  7176  01681C  0012               	return	
  7177  01681E                     __end_of_PWR_Button_Polling:
  7178                           	opt stack 0
  7179                           tblptru	equ	0xFF8
  7180                           tblptrh	equ	0xFF7
  7181                           tblptrl	equ	0xFF6
  7182                           tablat	equ	0xFF5
  7183                           prodh	equ	0xFF4
  7184                           prodl	equ	0xFF3
  7185                           intcon	equ	0xFF2
  7186                           postinc0	equ	0xFEE
  7187                           wreg	equ	0xFE8
  7188                           postinc2	equ	0xFDE
  7189                           fsr2h	equ	0xFDA
  7190                           fsr2l	equ	0xFD9
  7191                           status	equ	0xFD8
  7192                           
  7193 ;; *************** function _LCD_Parking *****************
  7194 ;; Defined at:
  7195 ;;		line 598 in file "RemoteCan.c"
  7196 ;; Parameters:    Size  Location     Type
  7197 ;;		None
  7198 ;; Auto vars:     Size  Location     Type
  7199 ;;		None
  7200 ;; Return value:  Size  Location     Type
  7201 ;;                  1    wreg      void 
  7202 ;; Registers used:
  7203 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7204 ;; Tracked objects:
  7205 ;;		On entry : 0/0
  7206 ;;		On exit  : 0/0
  7207 ;;		Unchanged: 0/0
  7208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7213 ;;Total ram usage:        0 bytes
  7214 ;; Hardware stack levels used:    1
  7215 ;; Hardware stack levels required when called:    9
  7216 ;; This function calls:
  7217 ;;		_LCD_clear
  7218 ;;		_LCD_goto_line
  7219 ;;		_LCD_initialize
  7220 ;;		_LCD_write_message
  7221 ;; This function is called by:
  7222 ;;		_main
  7223 ;; This function uses a non-reentrant model
  7224 ;;
  7225                           
  7226                           	psect	text7
  7227  016208                     __ptext7:
  7228                           	opt stack 0
  7229  016208                     _LCD_Parking:
  7230                           	opt stack 21
  7231                           
  7232                           ;RemoteCan.c: 599: LCD_initialize(16);
  7233                           
  7234                           ;incstack = 0
  7235  016208  0E10               	movlw	16
  7236  01620A  EC18  F0AC         	call	_LCD_initialize
  7237                           
  7238                           ;RemoteCan.c: 600: LCD_clear();
  7239  01620E  EC8E  F0B3         	call	_LCD_clear	;wreg free
  7240                           
  7241                           ;RemoteCan.c: 601: LCD_goto_line(1);
  7242  016212  0E01               	movlw	1
  7243  016214  EC55  F0AD         	call	_LCD_goto_line
  7244                           
  7245                           ;RemoteCan.c: 602: LCD_write_message("= PARKING MESSAGES =");
  7246  016218  0E16               	movlw	low STR_21
  7247  01621A  0100               	movlb	0	; () banked
  7248  01621C  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7249  01621E  0EFF               	movlw	high STR_21
  7250  016220  0100               	movlb	0	; () banked
  7251  016222  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7252  016224  EC5B  F0B3         	call	_LCD_write_message	;wreg free
  7253                           
  7254                           ;RemoteCan.c: 603: LCD_goto_line(2);
  7255  016228  0E02               	movlw	2
  7256  01622A  EC55  F0AD         	call	_LCD_goto_line
  7257                           
  7258                           ;RemoteCan.c: 604: LCD_write_message("=    Parking in    =");
  7259  01622E  0EEC               	movlw	low STR_30
  7260  016230  0100               	movlb	0	; () banked
  7261  016232  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7262  016234  0EFE               	movlw	high STR_30
  7263  016236  0100               	movlb	0	; () banked
  7264  016238  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7265  01623A  EC5B  F0B3         	call	_LCD_write_message	;wreg free
  7266                           
  7267                           ;RemoteCan.c: 605: LCD_goto_line(3);
  7268  01623E  0E03               	movlw	3
  7269  016240  EC55  F0AD         	call	_LCD_goto_line
  7270                           
  7271                           ;RemoteCan.c: 606: LCD_write_message("=    progress...   =");
  7272  016244  0E01               	movlw	low STR_31
  7273  016246  0100               	movlb	0	; () banked
  7274  016248  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7275  01624A  0EFF               	movlw	high STR_31
  7276  01624C  0100               	movlb	0	; () banked
  7277  01624E  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7278  016250  EC5B  F0B3         	call	_LCD_write_message	;wreg free
  7279                           
  7280                           ;RemoteCan.c: 607: LCD_goto_line(4);
  7281  016254  0E04               	movlw	4
  7282  016256  EC55  F0AD         	call	_LCD_goto_line
  7283                           
  7284                           ;RemoteCan.c: 608: LCD_write_message("====================");
  7285  01625A  0E6A               	movlw	low STR_1
  7286  01625C  0100               	movlb	0	; () banked
  7287  01625E  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7288  016260  0EFF               	movlw	high STR_1
  7289  016262  0100               	movlb	0	; () banked
  7290  016264  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7291  016266  EC5B  F0B3         	call	_LCD_write_message	;wreg free
  7292  01626A  0012               	return		;funcret
  7293  01626C                     __end_of_LCD_Parking:
  7294                           	opt stack 0
  7295                           tblptru	equ	0xFF8
  7296                           tblptrh	equ	0xFF7
  7297                           tblptrl	equ	0xFF6
  7298                           tablat	equ	0xFF5
  7299                           prodh	equ	0xFF4
  7300                           prodl	equ	0xFF3
  7301                           intcon	equ	0xFF2
  7302                           postinc0	equ	0xFEE
  7303                           wreg	equ	0xFE8
  7304                           postinc2	equ	0xFDE
  7305                           fsr2h	equ	0xFDA
  7306                           fsr2l	equ	0xFD9
  7307                           status	equ	0xFD8
  7308                           
  7309 ;; *************** function _LCD_Park *****************
  7310 ;; Defined at:
  7311 ;;		line 585 in file "RemoteCan.c"
  7312 ;; Parameters:    Size  Location     Type
  7313 ;;		None
  7314 ;; Auto vars:     Size  Location     Type
  7315 ;;		None
  7316 ;; Return value:  Size  Location     Type
  7317 ;;                  1    wreg      void 
  7318 ;; Registers used:
  7319 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7320 ;; Tracked objects:
  7321 ;;		On entry : 0/0
  7322 ;;		On exit  : 0/0
  7323 ;;		Unchanged: 0/0
  7324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7329 ;;Total ram usage:        0 bytes
  7330 ;; Hardware stack levels used:    1
  7331 ;; Hardware stack levels required when called:    9
  7332 ;; This function calls:
  7333 ;;		_LCD_clear
  7334 ;;		_LCD_goto_line
  7335 ;;		_LCD_initialize
  7336 ;;		_LCD_write_message
  7337 ;; This function is called by:
  7338 ;;		_main
  7339 ;; This function uses a non-reentrant model
  7340 ;;
  7341                           
  7342                           	psect	text8
  7343  01626C                     __ptext8:
  7344                           	opt stack 0
  7345  01626C                     _LCD_Park:
  7346                           	opt stack 21
  7347                           
  7348                           ;RemoteCan.c: 586: LCD_initialize(16);
  7349                           
  7350                           ;incstack = 0
  7351  01626C  0E10               	movlw	16
  7352  01626E  EC18  F0AC         	call	_LCD_initialize
  7353                           
  7354                           ;RemoteCan.c: 587: LCD_clear();
  7355  016272  EC8E  F0B3         	call	_LCD_clear	;wreg free
  7356                           
  7357                           ;RemoteCan.c: 588: LCD_goto_line(1);
  7358  016276  0E01               	movlw	1
  7359  016278  EC55  F0AD         	call	_LCD_goto_line
  7360                           
  7361                           ;RemoteCan.c: 589: LCD_write_message("= PARKING MESSAGES =");
  7362  01627C  0E16               	movlw	low STR_21
  7363  01627E  0100               	movlb	0	; () banked
  7364  016280  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7365  016282  0EFF               	movlw	high STR_21
  7366  016284  0100               	movlb	0	; () banked
  7367  016286  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7368  016288  EC5B  F0B3         	call	_LCD_write_message	;wreg free
  7369                           
  7370                           ;RemoteCan.c: 590: LCD_goto_line(2);
  7371  01628C  0E02               	movlw	2
  7372  01628E  EC55  F0AD         	call	_LCD_goto_line
  7373                           
  7374                           ;RemoteCan.c: 591: LCD_write_message("- Distance REACHED -");
  7375  016292  0EAD               	movlw	low STR_26
  7376  016294  0100               	movlb	0	; () banked
  7377  016296  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7378  016298  0EFE               	movlw	high STR_26
  7379  01629A  0100               	movlb	0	; () banked
  7380  01629C  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7381  01629E  EC5B  F0B3         	call	_LCD_write_message	;wreg free
  7382                           
  7383                           ;RemoteCan.c: 592: LCD_goto_line(3);
  7384  0162A2  0E03               	movlw	3
  7385  0162A4  EC55  F0AD         	call	_LCD_goto_line
  7386                           
  7387                           ;RemoteCan.c: 593: LCD_write_message("Press the BUTTON to ");
  7388  0162A8  0E6E               	movlw	low STR_27
  7389  0162AA  0100               	movlb	0	; () banked
  7390  0162AC  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7391  0162AE  0EFE               	movlw	high STR_27
  7392  0162B0  0100               	movlb	0	; () banked
  7393  0162B2  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7394  0162B4  EC5B  F0B3         	call	_LCD_write_message	;wreg free
  7395                           
  7396                           ;RemoteCan.c: 594: LCD_goto_line(4);
  7397  0162B8  0E04               	movlw	4
  7398  0162BA  EC55  F0AD         	call	_LCD_goto_line
  7399                           
  7400                           ;RemoteCan.c: 595: LCD_write_message("   start parking    ");
  7401  0162BE  0EDB               	movlw	low STR_28
  7402  0162C0  0100               	movlb	0	; () banked
  7403  0162C2  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7404  0162C4  0EFD               	movlw	high STR_28
  7405  0162C6  0100               	movlb	0	; () banked
  7406  0162C8  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7407  0162CA  EC5B  F0B3         	call	_LCD_write_message	;wreg free
  7408  0162CE  0012               	return		;funcret
  7409  0162D0                     __end_of_LCD_Park:
  7410                           	opt stack 0
  7411                           tblptru	equ	0xFF8
  7412                           tblptrh	equ	0xFF7
  7413                           tblptrl	equ	0xFF6
  7414                           tablat	equ	0xFF5
  7415                           prodh	equ	0xFF4
  7416                           prodl	equ	0xFF3
  7417                           intcon	equ	0xFF2
  7418                           postinc0	equ	0xFEE
  7419                           wreg	equ	0xFE8
  7420                           postinc2	equ	0xFDE
  7421                           fsr2h	equ	0xFDA
  7422                           fsr2l	equ	0xFD9
  7423                           status	equ	0xFD8
  7424                           
  7425 ;; *************** function _LCD_Handler *****************
  7426 ;; Defined at:
  7427 ;;		line 492 in file "RemoteCan.c"
  7428 ;; Parameters:    Size  Location     Type
  7429 ;;		None
  7430 ;; Auto vars:     Size  Location     Type
  7431 ;;		None
  7432 ;; Return value:  Size  Location     Type
  7433 ;;                  1    wreg      void 
  7434 ;; Registers used:
  7435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7436 ;; Tracked objects:
  7437 ;;		On entry : 0/0
  7438 ;;		On exit  : 0/0
  7439 ;;		Unchanged: 0/0
  7440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7445 ;;Total ram usage:        0 bytes
  7446 ;; Hardware stack levels used:    1
  7447 ;; Hardware stack levels required when called:   10
  7448 ;; This function calls:
  7449 ;;		_CANisTxReady
  7450 ;;		_CANsendMessage
  7451 ;;		_LCD_clear
  7452 ;;		_LCD_goto_line
  7453 ;;		_LCD_goto_xy
  7454 ;;		_LCD_initialize
  7455 ;;		_LCD_write_integer
  7456 ;;		_LCD_write_message
  7457 ;;		_LCD_write_string
  7458 ;;		___fldiv
  7459 ;;		___xxtofl
  7460 ;;		_sprintf
  7461 ;; This function is called by:
  7462 ;;		_main
  7463 ;; This function uses a non-reentrant model
  7464 ;;
  7465                           
  7466                           	psect	text9
  7467  014936                     __ptext9:
  7468                           	opt stack 0
  7469  014936                     _LCD_Handler:
  7470                           	opt stack 20
  7471  014936                     l9363:
  7472  014936  ECCF  F0B3         	call	_CANisTxReady	;wreg free
  7473  01493A  06E8               	decf	wreg,f,c
  7474  01493C  A4D8               	btfss	status,2,c
  7475  01493E  D7FB               	goto	l9363
  7476                           
  7477                           ;RemoteCan.c: 495: CANsendMessage(0b00000001000, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  7478  014940  0E08               	movlw	8
  7479  014942  0100               	movlb	0	; () banked
  7480  014944  6F71               	movwf	CANsendMessage@identifier& (0+255),b
  7481  014946  0E00               	movlw	0
  7482  014948  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  7483  01494A  0E00               	movlw	0
  7484  01494C  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  7485  01494E  0E00               	movlw	0
  7486  014950  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  7487  014952  0E35               	movlw	low _data_speed
  7488  014954  0100               	movlb	0	; () banked
  7489  014956  6F75               	movwf	CANsendMessage@data& (0+255),b
  7490  014958  0E01               	movlw	high _data_speed
  7491  01495A  0100               	movlb	0	; () banked
  7492  01495C  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
  7493  01495E  0E08               	movlw	8
  7494  014960  0100               	movlb	0	; () banked
  7495  014962  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
  7496  014964  0EFC               	movlw	252
  7497  014966  0100               	movlb	0	; () banked
  7498  014968  6F78               	movwf	CANsendMessage@flags& (0+255),b
  7499  01496A  ECA9  F08E         	call	_CANsendMessage	;wreg free
  7500                           
  7501                           ;RemoteCan.c: 497: actual_speed_kmh = ((actual_speed) / 278.0);
  7502  01496E  C0DF  F071         	movff	_actual_speed,___xxtofl@val	;volatile
  7503  014972  C0E0  F072         	movff	_actual_speed+1,___xxtofl@val+1	;volatile
  7504  014976  0100               	movlb	0	; () banked
  7505  014978  6B73               	clrf	(___xxtofl@val+2)& (0+255),b
  7506  01497A  6B74               	clrf	(___xxtofl@val+3)& (0+255),b
  7507  01497C  0E00               	movlw	0
  7508  01497E  EC13  F0A7         	call	___xxtofl
  7509  014982  C071  F07F         	movff	?___xxtofl,___fldiv@b
  7510  014986  C072  F080         	movff	?___xxtofl+1,___fldiv@b+1
  7511  01498A  C073  F081         	movff	?___xxtofl+2,___fldiv@b+2
  7512  01498E  C074  F082         	movff	?___xxtofl+3,___fldiv@b+3
  7513  014992  0E00               	movlw	0
  7514  014994  0100               	movlb	0	; () banked
  7515  014996  6F83               	movwf	___fldiv@a& (0+255),b
  7516  014998  0E00               	movlw	0
  7517  01499A  6F84               	movwf	(___fldiv@a+1)& (0+255),b
  7518  01499C  0E8B               	movlw	139
  7519  01499E  6F85               	movwf	(___fldiv@a+2)& (0+255),b
  7520  0149A0  0E43               	movlw	67
  7521  0149A2  6F86               	movwf	(___fldiv@a+3)& (0+255),b
  7522  0149A4  EC71  F09F         	call	___fldiv	;wreg free
  7523  0149A8  C07F  F001         	movff	?___fldiv,_actual_speed_kmh	;volatile
  7524  0149AC  C080  F002         	movff	?___fldiv+1,_actual_speed_kmh+1	;volatile
  7525  0149B0  C081  F003         	movff	?___fldiv+2,_actual_speed_kmh+2	;volatile
  7526  0149B4  C082  F004         	movff	?___fldiv+3,_actual_speed_kmh+3	;volatile
  7527                           
  7528                           ;RemoteCan.c: 498: sprintf(str, "%.2f", actual_speed_kmh);
  7529  0149B8  0E19               	movlw	low _str
  7530  0149BA  0100               	movlb	0	; () banked
  7531  0149BC  6FC3               	movwf	sprintf@sp& (0+255),b
  7532  0149BE  0E01               	movlw	high _str
  7533  0149C0  0100               	movlb	0	; () banked
  7534  0149C2  6FC4               	movwf	(sprintf@sp+1)& (0+255),b
  7535  0149C4  0EFA               	movlw	low STR_5
  7536  0149C6  0100               	movlb	0	; () banked
  7537  0149C8  6FC5               	movwf	sprintf@f& (0+255),b
  7538  0149CA  0EFF               	movlw	high STR_5
  7539  0149CC  0100               	movlb	0	; () banked
  7540  0149CE  6FC6               	movwf	(sprintf@f+1)& (0+255),b
  7541  0149D0  C001  F0C7         	movff	_actual_speed_kmh,?_sprintf+4	;volatile
  7542  0149D4  C002  F0C8         	movff	_actual_speed_kmh+1,?_sprintf+5	;volatile
  7543  0149D8  C003  F0C9         	movff	_actual_speed_kmh+2,?_sprintf+6	;volatile
  7544  0149DC  C004  F0CA         	movff	_actual_speed_kmh+3,?_sprintf+7	;volatile
  7545  0149E0  EC5F  F08A         	call	_sprintf	;wreg free
  7546                           
  7547                           ;RemoteCan.c: 499: str[11] = '\0';
  7548  0149E4  0E00               	movlw	0
  7549  0149E6  0101               	movlb	1	; () banked
  7550  0149E8  6F24               	movwf	(_str+11)& (0+255),b	;volatile
  7551                           
  7552                           ; BSR set to: 1
  7553                           ;RemoteCan.c: 501: if (display_refresh == 1) {
  7554  0149EA  AE48               	btfss	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  7555  0149EC  D03D               	goto	l9393
  7556                           
  7557                           ; BSR set to: 1
  7558                           ;RemoteCan.c: 502: LCD_initialize(16);
  7559  0149EE  0E10               	movlw	16
  7560  0149F0  EC18  F0AC         	call	_LCD_initialize
  7561                           
  7562                           ;RemoteCan.c: 503: LCD_clear();
  7563  0149F4  EC8E  F0B3         	call	_LCD_clear	;wreg free
  7564                           
  7565                           ;RemoteCan.c: 504: LCD_goto_line(1);
  7566  0149F8  0E01               	movlw	1
  7567  0149FA  EC55  F0AD         	call	_LCD_goto_line
  7568                           
  7569                           ;RemoteCan.c: 505: LCD_write_message("=== VEHICLE DATA ===");
  7570  0149FE  0E55               	movlw	low STR_6
  7571  014A00  0100               	movlb	0	; () banked
  7572  014A02  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7573  014A04  0EFF               	movlw	high STR_6
  7574  014A06  0100               	movlb	0	; () banked
  7575  014A08  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7576  014A0A  EC5B  F0B3         	call	_LCD_write_message	;wreg free
  7577                           
  7578                           ;RemoteCan.c: 506: LCD_goto_line(2);
  7579  014A0E  0E02               	movlw	2
  7580  014A10  EC55  F0AD         	call	_LCD_goto_line
  7581                           
  7582                           ;RemoteCan.c: 507: LCD_write_message("Direction: ");
  7583  014A14  0EC8               	movlw	low STR_7
  7584  014A16  0100               	movlb	0	; () banked
  7585  014A18  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7586  014A1A  0EFF               	movlw	high STR_7
  7587  014A1C  0100               	movlb	0	; () banked
  7588  014A1E  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7589  014A20  EC5B  F0B3         	call	_LCD_write_message	;wreg free
  7590                           
  7591                           ;RemoteCan.c: 508: LCD_goto_line(3);
  7592  014A24  0E03               	movlw	3
  7593  014A26  EC55  F0AD         	call	_LCD_goto_line
  7594                           
  7595                           ;RemoteCan.c: 509: LCD_write_message("Speed: 0.00 Km/h");
  7596  014A2A  0EA9               	movlw	low STR_8
  7597  014A2C  0100               	movlb	0	; () banked
  7598  014A2E  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7599  014A30  0EFF               	movlw	high STR_8
  7600  014A32  0100               	movlb	0	; () banked
  7601  014A34  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7602  014A36  EC5B  F0B3         	call	_LCD_write_message	;wreg free
  7603                           
  7604                           ;RemoteCan.c: 510: LCD_goto_line(4);
  7605  014A3A  0E04               	movlw	4
  7606  014A3C  EC55  F0AD         	call	_LCD_goto_line
  7607                           
  7608                           ;RemoteCan.c: 511: if (LCD_4TH_ROW_MODE == 0) {
  7609  014A40  B648               	btfsc	_LCD_4TH_ROW_MODE/(0+8),_LCD_4TH_ROW_MODE& (0+7),c	;volatile
  7610  014A42  D009               	goto	l9389
  7611                           
  7612                           ;RemoteCan.c: 512: LCD_write_message("Park assist: ");
  7613  014A44  0EBA               	movlw	low STR_9
  7614  014A46  0100               	movlb	0	; () banked
  7615  014A48  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7616  014A4A  0EFF               	movlw	high STR_9
  7617  014A4C  0100               	movlb	0	; () banked
  7618  014A4E  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7619  014A50  EC5B  F0B3         	call	_LCD_write_message	;wreg free
  7620                           
  7621                           ;RemoteCan.c: 513: } else {
  7622  014A54  D008               	goto	l9391
  7623  014A56                     l9389:
  7624                           
  7625                           ;RemoteCan.c: 514: LCD_write_message("Data: ");
  7626  014A56  0EE4               	movlw	low STR_10
  7627  014A58  0100               	movlb	0	; () banked
  7628  014A5A  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7629  014A5C  0EFF               	movlw	high STR_10
  7630  014A5E  0100               	movlb	0	; () banked
  7631  014A60  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7632  014A62  EC5B  F0B3         	call	_LCD_write_message	;wreg free
  7633  014A66                     l9391:
  7634                           
  7635                           ;RemoteCan.c: 515: }
  7636                           ;RemoteCan.c: 516: display_refresh = 0;
  7637  014A66  9E48               	bcf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  7638  014A68                     l9393:
  7639                           
  7640                           ;RemoteCan.c: 517: }
  7641                           ;RemoteCan.c: 519: if (collision_msg == 0) {
  7642  014A68  BC48               	btfsc	_collision_msg/(0+8),_collision_msg& (0+7),c	;volatile
  7643  014A6A  D037               	goto	l910
  7644                           
  7645                           ;RemoteCan.c: 520: if (row_refresh == 1) {
  7646  014A6C  AA49               	btfss	_row_refresh/(0+8),_row_refresh& (0+7),c	;volatile
  7647  014A6E  D00C               	goto	l9403
  7648                           
  7649                           ;RemoteCan.c: 521: LCD_goto_line(2);
  7650  014A70  0E02               	movlw	2
  7651  014A72  EC55  F0AD         	call	_LCD_goto_line
  7652                           
  7653                           ;RemoteCan.c: 522: LCD_write_message("Direction:          ");
  7654  014A76  0E5D               	movlw	low STR_11
  7655  014A78  0100               	movlb	0	; () banked
  7656  014A7A  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7657  014A7C  0EFD               	movlw	high STR_11
  7658  014A7E  0100               	movlb	0	; () banked
  7659  014A80  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7660  014A82  EC5B  F0B3         	call	_LCD_write_message	;wreg free
  7661                           
  7662                           ;RemoteCan.c: 523: row_refresh = 0;
  7663  014A86  9A49               	bcf	_row_refresh/(0+8),_row_refresh& (0+7),c	;volatile
  7664  014A88                     l9403:
  7665                           
  7666                           ;RemoteCan.c: 524: }
  7667                           ;RemoteCan.c: 526: LCD_goto_xy(12, 2);
  7668  014A88  0E02               	movlw	2
  7669  014A8A  0100               	movlb	0	; () banked
  7670  014A8C  6F80               	movwf	LCD_goto_xy@y& (0+255),b
  7671  014A8E  0E0C               	movlw	12
  7672  014A90  EC0F  F0B4         	call	_LCD_goto_xy
  7673                           
  7674                           ;RemoteCan.c: 527: if (switch_position != 0) {
  7675  014A94  0100               	movlb	0	; () banked
  7676  014A96  51EB               	movf	_switch_position& (0+255),w,b	;volatile
  7677  014A98  B4D8               	btfsc	status,2,c
  7678  014A9A  D016               	goto	l9413
  7679                           
  7680                           ; BSR set to: 0
  7681                           ;RemoteCan.c: 528: if (dir == 1) {
  7682  014A9C  0100               	movlb	0	; () banked
  7683  014A9E  05E7               	decf	_dir& (0+255),w,b	;volatile
  7684  014AA0  A4D8               	btfss	status,2,c
  7685  014AA2  D009               	goto	l9411
  7686                           
  7687                           ; BSR set to: 0
  7688                           ;RemoteCan.c: 529: LCD_write_message("FWD ");
  7689  014AA4  0EF0               	movlw	low STR_12
  7690  014AA6  0100               	movlb	0	; () banked
  7691  014AA8  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7692  014AAA  0EFF               	movlw	high STR_12
  7693  014AAC  0100               	movlb	0	; () banked
  7694  014AAE  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7695  014AB0  EC5B  F0B3         	call	_LCD_write_message	;wreg free
  7696                           
  7697                           ;RemoteCan.c: 530: } else {
  7698  014AB4  D01E               	goto	l9419
  7699  014AB6                     l9411:
  7700                           
  7701                           ;RemoteCan.c: 531: LCD_write_message("BKWD");
  7702  014AB6  0EF5               	movlw	low STR_13
  7703  014AB8  0100               	movlb	0	; () banked
  7704  014ABA  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7705  014ABC  0EFF               	movlw	high STR_13
  7706  014ABE  0100               	movlb	0	; () banked
  7707  014AC0  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7708  014AC2  EC5B  F0B3         	call	_LCD_write_message	;wreg free
  7709                           
  7710                           ;RemoteCan.c: 532: }
  7711                           ;RemoteCan.c: 533: } else {
  7712  014AC6  D015               	goto	l9419
  7713  014AC8                     l9413:
  7714                           
  7715                           ;RemoteCan.c: 534: LCD_write_message("P   ");
  7716  014AC8  0EEB               	movlw	low STR_14
  7717  014ACA  0100               	movlb	0	; () banked
  7718  014ACC  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7719  014ACE  0EFF               	movlw	high STR_14
  7720  014AD0  0100               	movlb	0	; () banked
  7721  014AD2  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7722  014AD4  EC5B  F0B3         	call	_LCD_write_message	;wreg free
  7723                           
  7724                           ;RemoteCan.c: 535: }
  7725                           ;RemoteCan.c: 536: } else {
  7726  014AD8  D00C               	goto	l9419
  7727  014ADA                     l910:
  7728                           
  7729                           ;RemoteCan.c: 537: row_refresh = 1;
  7730  014ADA  8A49               	bsf	_row_refresh/(0+8),_row_refresh& (0+7),c	;volatile
  7731                           
  7732                           ;RemoteCan.c: 538: LCD_goto_line(2);
  7733  014ADC  0E02               	movlw	2
  7734  014ADE  EC55  F0AD         	call	_LCD_goto_line
  7735                           
  7736                           ;RemoteCan.c: 539: LCD_write_message("-> Safety brake ON<-");
  7737  014AE2  0ED7               	movlw	low STR_15
  7738  014AE4  0100               	movlb	0	; () banked
  7739  014AE6  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7740  014AE8  0EFE               	movlw	high STR_15
  7741  014AEA  0100               	movlb	0	; () banked
  7742  014AEC  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7743  014AEE  EC5B  F0B3         	call	_LCD_write_message	;wreg free
  7744  014AF2                     l9419:
  7745                           
  7746                           ;RemoteCan.c: 540: }
  7747                           ;RemoteCan.c: 543: LCD_goto_xy(8, 3);
  7748  014AF2  0E03               	movlw	3
  7749  014AF4  0100               	movlb	0	; () banked
  7750  014AF6  6F80               	movwf	LCD_goto_xy@y& (0+255),b
  7751  014AF8  0E08               	movlw	8
  7752  014AFA  EC0F  F0B4         	call	_LCD_goto_xy
  7753                           
  7754                           ;RemoteCan.c: 544: LCD_write_string(str);
  7755  014AFE  0E19               	movlw	low _str
  7756  014B00  0100               	movlb	0	; () banked
  7757  014B02  6F82               	movwf	LCD_write_string@buffer& (0+255),b
  7758  014B04  0E01               	movlw	high _str
  7759  014B06  0100               	movlb	0	; () banked
  7760  014B08  6F83               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  7761  014B0A  ECBC  F0B3         	call	_LCD_write_string	;wreg free
  7762                           
  7763                           ;RemoteCan.c: 546: if ((low_battery == 0) && (battery_charging == 0)) {
  7764  014B0E  A049               	btfss	_low_battery/(0+8),_low_battery& (0+7),c	;volatile
  7765  014B10  BA48               	btfsc	_battery_charging/(0+8),_battery_charging& (0+7),c	;volatile
  7766  014B12  D03C               	goto	l9445
  7767                           
  7768                           ;RemoteCan.c: 547: if (LCD_4TH_ROW_MODE == 0) {
  7769  014B14  B648               	btfsc	_LCD_4TH_ROW_MODE/(0+8),_LCD_4TH_ROW_MODE& (0+7),c	;volatile
  7770  014B16  D027               	goto	l9441
  7771                           
  7772                           ;RemoteCan.c: 548: LCD_goto_line(4);
  7773  014B18  0E04               	movlw	4
  7774  014B1A  EC55  F0AD         	call	_LCD_goto_line
  7775                           
  7776                           ;RemoteCan.c: 549: LCD_write_message("Park assist: ");
  7777  014B1E  0EBA               	movlw	low STR_9
  7778  014B20  0100               	movlb	0	; () banked
  7779  014B22  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7780  014B24  0EFF               	movlw	high STR_9
  7781  014B26  0100               	movlb	0	; () banked
  7782  014B28  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7783  014B2A  EC5B  F0B3         	call	_LCD_write_message	;wreg free
  7784                           
  7785                           ;RemoteCan.c: 551: LCD_goto_xy(14, 4);
  7786  014B2E  0E04               	movlw	4
  7787  014B30  0100               	movlb	0	; () banked
  7788  014B32  6F80               	movwf	LCD_goto_xy@y& (0+255),b
  7789  014B34  0E0E               	movlw	14
  7790  014B36  EC0F  F0B4         	call	_LCD_goto_xy
  7791                           
  7792                           ;RemoteCan.c: 552: if (parking_state == 0) {
  7793  014B3A  0100               	movlb	0	; () banked
  7794  014B3C  51E9               	movf	_parking_state& (0+255),w,b	;volatile
  7795  014B3E  A4D8               	btfss	status,2,c
  7796  014B40  D009               	goto	l9439
  7797                           
  7798                           ; BSR set to: 0
  7799                           ;RemoteCan.c: 553: LCD_write_message("OFF    ");
  7800  014B42  0ED4               	movlw	low STR_17
  7801  014B44  0100               	movlb	0	; () banked
  7802  014B46  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7803  014B48  0EFF               	movlw	high STR_17
  7804  014B4A  0100               	movlb	0	; () banked
  7805  014B4C  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7806  014B4E  EC5B  F0B3         	call	_LCD_write_message	;wreg free
  7807                           
  7808                           ;RemoteCan.c: 554: } else {
  7809  014B52  0012               	return	
  7810  014B54                     l9439:
  7811                           
  7812                           ;RemoteCan.c: 555: LCD_write_message("SEARCH ");
  7813  014B54  0EDC               	movlw	low STR_18
  7814  014B56  0100               	movlb	0	; () banked
  7815  014B58  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7816  014B5A  0EFF               	movlw	high STR_18
  7817  014B5C  0100               	movlb	0	; () banked
  7818  014B5E  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7819  014B60  EC5B  F0B3         	call	_LCD_write_message	;wreg free
  7820                           
  7821                           ;RemoteCan.c: 556: }
  7822                           ;RemoteCan.c: 557: } else {
  7823  014B64  0012               	return	
  7824  014B66                     l9441:
  7825                           
  7826                           ;RemoteCan.c: 559: LCD_goto_xy(7, 4);
  7827  014B66  0E04               	movlw	4
  7828  014B68  0100               	movlb	0	; () banked
  7829  014B6A  6F80               	movwf	LCD_goto_xy@y& (0+255),b
  7830  014B6C  0E07               	movlw	7
  7831  014B6E  EC0F  F0B4         	call	_LCD_goto_xy
  7832                           
  7833                           ;RemoteCan.c: 560: LCD_write_integer(user_data, 0, 0x01);
  7834  014B72  C023  F089         	movff	_user_data,LCD_write_integer@value	;volatile
  7835  014B76  C024  F08A         	movff	_user_data+1,LCD_write_integer@value+1	;volatile
  7836  014B7A  0E00               	movlw	0
  7837  014B7C  0100               	movlb	0	; () banked
  7838  014B7E  6F8B               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  7839  014B80  0E01               	movlw	1
  7840  014B82  0100               	movlb	0	; () banked
  7841  014B84  6F8C               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  7842  014B86  ECDD  F0A8         	call	_LCD_write_integer	;wreg free
  7843                           
  7844                           ;RemoteCan.c: 561: }
  7845                           ;RemoteCan.c: 562: } else {
  7846  014B8A  0012               	return	
  7847  014B8C                     l9445:
  7848                           
  7849                           ;RemoteCan.c: 563: LCD_goto_line(4);
  7850  014B8C  0E04               	movlw	4
  7851  014B8E  EC55  F0AD         	call	_LCD_goto_line
  7852                           
  7853                           ;RemoteCan.c: 564: if (battery_charging == 1) {
  7854  014B92  AA48               	btfss	_battery_charging/(0+8),_battery_charging& (0+7),c	;volatile
  7855  014B94  D009               	goto	l9451
  7856                           
  7857                           ;RemoteCan.c: 565: LCD_write_message("Battery charging... ");
  7858  014B96  0E44               	movlw	low STR_19
  7859  014B98  0100               	movlb	0	; () banked
  7860  014B9A  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7861  014B9C  0EFE               	movlw	high STR_19
  7862  014B9E  0100               	movlb	0	; () banked
  7863  014BA0  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7864  014BA2  EC5B  F0B3         	call	_LCD_write_message	;wreg free
  7865                           
  7866                           ;RemoteCan.c: 566: } else {
  7867  014BA6  0012               	return	
  7868  014BA8                     l9451:
  7869                           
  7870                           ;RemoteCan.c: 567: LCD_write_message("[!]  Low battery [!]");
  7871  014BA8  0E94               	movlw	low STR_20
  7872  014BAA  0100               	movlb	0	; () banked
  7873  014BAC  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7874  014BAE  0EFF               	movlw	high STR_20
  7875  014BB0  0100               	movlb	0	; () banked
  7876  014BB2  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7877  014BB4  EC5B  F0B3         	call	_LCD_write_message	;wreg free
  7878  014BB8  0012               	return	
  7879  014BBA                     __end_of_LCD_Handler:
  7880                           	opt stack 0
  7881                           tblptru	equ	0xFF8
  7882                           tblptrh	equ	0xFF7
  7883                           tblptrl	equ	0xFF6
  7884                           tablat	equ	0xFF5
  7885                           prodh	equ	0xFF4
  7886                           prodl	equ	0xFF3
  7887                           intcon	equ	0xFF2
  7888                           postinc0	equ	0xFEE
  7889                           wreg	equ	0xFE8
  7890                           postinc2	equ	0xFDE
  7891                           fsr2h	equ	0xFDA
  7892                           fsr2l	equ	0xFD9
  7893                           status	equ	0xFD8
  7894                           
  7895 ;; *************** function _sprintf *****************
  7896 ;; Defined at:
  7897 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  7898 ;; Parameters:    Size  Location     Type
  7899 ;;  sp              2   99[BANK0 ] PTR unsigned char 
  7900 ;;		 -> str(12), 
  7901 ;;  f               2  101[BANK0 ] PTR const unsigned char 
  7902 ;;		 -> STR_5(5), 
  7903 ;; Auto vars:     Size  Location     Type
  7904 ;;  fval            4   20[BANK1 ] PTR const unsigned char 
  7905 ;;  tmpval          4   14[BANK1 ] struct .
  7906 ;;  val             4    8[BANK1 ] unsigned long 
  7907 ;;  cp              3    0        PTR const unsigned char 
  7908 ;;  prec            2   18[BANK1 ] int 
  7909 ;;  exp             2   12[BANK1 ] int 
  7910 ;;  flag            2    6[BANK1 ] unsigned short 
  7911 ;;  ap              2    4[BANK1 ] PTR void [1]
  7912 ;;		 -> ?_sprintf(2), 
  7913 ;;  len             2    0        unsigned int 
  7914 ;;  width           2    0        int 
  7915 ;;  c               1   24[BANK1 ] char 
  7916 ;;  d               1    0        unsigned char 
  7917 ;; Return value:  Size  Location     Type
  7918 ;;                  2   99[BANK0 ] int 
  7919 ;; Registers used:
  7920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7921 ;; Tracked objects:
  7922 ;;		On entry : 0/0
  7923 ;;		On exit  : 0/0
  7924 ;;		Unchanged: 0/0
  7925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7926 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7927 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0
  7928 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7929 ;;      Totals:         0      10      25       0       0       0       0       0       0       0       0       0       
      +0       0
  7930 ;;Total ram usage:       35 bytes
  7931 ;; Hardware stack levels used:    1
  7932 ;; Hardware stack levels required when called:    5
  7933 ;; This function calls:
  7934 ;;		___awdiv
  7935 ;;		___fladd
  7936 ;;		___flge
  7937 ;;		___flmul
  7938 ;;		___flneg
  7939 ;;		___flsub
  7940 ;;		___fltol
  7941 ;;		___lldiv
  7942 ;;		___llmod
  7943 ;;		___wmul
  7944 ;;		___xxtofl
  7945 ;;		__div_to_l_
  7946 ;;		__tdiv_to_l_
  7947 ;;		_fround
  7948 ;;		_isdigit
  7949 ;;		_scale
  7950 ;; This function is called by:
  7951 ;;		_LCD_Handler
  7952 ;; This function uses a non-reentrant model
  7953 ;;
  7954                           
  7955                           	psect	text10
  7956  0114BE                     __ptext10:
  7957                           	opt stack 0
  7958  0114BE                     _sprintf:
  7959                           	opt stack 24
  7960                           
  7961                           ;doprnt.c: 494: va_list ap;
  7962                           ;doprnt.c: 499: signed char c;
  7963                           ;doprnt.c: 501: int width;
  7964                           ;doprnt.c: 504: int prec;
  7965                           ;doprnt.c: 508: unsigned short flag;
  7966                           ;doprnt.c: 515: char d;
  7967                           ;doprnt.c: 516: double fval;
  7968                           ;doprnt.c: 517: int exp;
  7969                           ;doprnt.c: 523: union {
  7970                           ;doprnt.c: 524: unsigned long vd;
  7971                           ;doprnt.c: 525: double integ;
  7972                           ;doprnt.c: 526: } tmpval;
  7973                           ;doprnt.c: 528: unsigned long val;
  7974                           ;doprnt.c: 529: unsigned len;
  7975                           ;doprnt.c: 530: const char * cp;
  7976                           ;doprnt.c: 533: *ap = __va_start();
  7977                           
  7978                           ;incstack = 0
  7979  0114BE  0EC7               	movlw	low (?_sprintf+4)
  7980  0114C0  0101               	movlb	1	; () banked
  7981  0114C2  6F51               	movwf	sprintf@ap& (0+255),b
  7982  0114C4  0E00               	movlw	high (?_sprintf+4)
  7983  0114C6  0101               	movlb	1	; () banked
  7984  0114C8  6F52               	movwf	(sprintf@ap+1)& (0+255),b
  7985                           
  7986                           ;doprnt.c: 536: while(c = *f++) {
  7987  0114CA  EF91  F08E         	goto	l9237
  7988  0114CE                     l9039:
  7989                           
  7990                           ; BSR set to: 1
  7991                           ;doprnt.c: 538: if(c != '%')
  7992  0114CE  0E25               	movlw	37
  7993  0114D0  0101               	movlb	1	; () banked
  7994  0114D2  1965               	xorwf	sprintf@c& (0+255),w,b
  7995  0114D4  B4D8               	btfsc	status,2,c
  7996  0114D6  D008               	goto	l9045
  7997                           
  7998                           ; BSR set to: 1
  7999                           ;doprnt.c: 540: {
  8000                           ;doprnt.c: 541: ((*sp++ = (c)));
  8001  0114D8  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  8002  0114DC  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  8003  0114E0  C165  FFDF         	movff	sprintf@c,indf2
  8004  0114E4  EF8E  F08E         	goto	l9235
  8005  0114E8                     l9045:
  8006                           
  8007                           ;doprnt.c: 543: }
  8008                           ;doprnt.c: 548: flag = 0;
  8009  0114E8  0E00               	movlw	0
  8010  0114EA  0101               	movlb	1	; () banked
  8011  0114EC  6F54               	movwf	(sprintf@flag+1)& (0+255),b
  8012  0114EE  0E00               	movlw	0
  8013  0114F0  6F53               	movwf	sprintf@flag& (0+255),b
  8014                           
  8015                           ; BSR set to: 1
  8016                           ;doprnt.c: 611: if(*f == '.') {
  8017  0114F2  C0C5  FFF6         	movff	sprintf@f,tblptrl
  8018  0114F6  C0C6  FFF7         	movff	sprintf@f+1,tblptrh
  8019  0114FA                     	if	0	;tblptru may be non-zero
  8020  0114FA                     	endif
  8021  0114FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8022  0114FA  0E00               	movlw	low (__mediumconst shr (0+16))
  8023  0114FC  6EF8               	movwf	tblptru,c
  8024  0114FE                     	endif
  8025  0114FE  0008               	tblrd		*
  8026  011500  50F5               	movf	tablat,w,c
  8027  011502  0A2E               	xorlw	46
  8028  011504  A4D8               	btfss	status,2,c
  8029  011506  D03D               	goto	l9059
  8030                           
  8031                           ; BSR set to: 1
  8032                           ;doprnt.c: 612: flag |= 0x4000;
  8033  011508  0101               	movlb	1	; () banked
  8034  01150A  8D54               	bsf	(sprintf@flag+1)& (0+255),6,b
  8035                           
  8036                           ;doprnt.c: 613: f++;
  8037  01150C  0100               	movlb	0	; () banked
  8038  01150E  4BC5               	infsnz	sprintf@f& (0+255),f,b
  8039  011510  2BC6               	incf	(sprintf@f+1)& (0+255),f,b
  8040                           
  8041                           ; BSR set to: 0
  8042                           ;doprnt.c: 620: {
  8043                           ;doprnt.c: 621: prec = 0;
  8044  011512  0E00               	movlw	0
  8045  011514  0101               	movlb	1	; () banked
  8046  011516  6F60               	movwf	(sprintf@prec+1)& (0+255),b
  8047  011518  0E00               	movlw	0
  8048  01151A  6F5F               	movwf	sprintf@prec& (0+255),b
  8049                           
  8050                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  8051  01151C  D025               	goto	l9057
  8052  01151E                     l9053:
  8053                           
  8054                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  8055  01151E  C15F  F071         	movff	sprintf@prec,___wmul@multiplier
  8056  011522  C160  F072         	movff	sprintf@prec+1,___wmul@multiplier+1
  8057  011526  0E00               	movlw	0
  8058  011528  0100               	movlb	0	; () banked
  8059  01152A  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8060  01152C  0E0A               	movlw	10
  8061  01152E  6F73               	movwf	___wmul@multiplicand& (0+255),b
  8062  011530  EC40  F0B3         	call	___wmul	;wreg free
  8063  011534  C0C5  FFF6         	movff	sprintf@f,tblptrl
  8064  011538  C0C6  FFF7         	movff	sprintf@f+1,tblptrh
  8065  01153C                     	if	0	;tblptru may be non-zero
  8066  01153C                     	endif
  8067  01153C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8068  01153C  0E00               	movlw	low (__mediumconst shr (0+16))
  8069  01153E  6EF8               	movwf	tblptru,c
  8070  011540                     	endif
  8071  011540  0008               	tblrd		*
  8072  011542  50F5               	movf	tablat,w,c
  8073  011544  0100               	movlb	0	; () banked
  8074  011546  2771               	addwf	?___wmul& (0+255),f,b
  8075  011548  0E00               	movlw	0
  8076  01154A  0100               	movlb	0	; () banked
  8077  01154C  2372               	addwfc	(?___wmul+1)& (0+255),f,b
  8078  01154E  0ED0               	movlw	208
  8079  011550  0100               	movlb	0	; () banked
  8080  011552  2571               	addwf	?___wmul& (0+255),w,b
  8081  011554  0101               	movlb	1	; () banked
  8082  011556  6F5F               	movwf	sprintf@prec& (0+255),b
  8083  011558  0EFF               	movlw	255
  8084  01155A  0100               	movlb	0	; () banked
  8085  01155C  2172               	addwfc	(?___wmul+1)& (0+255),w,b
  8086  01155E  0101               	movlb	1	; () banked
  8087  011560  6F60               	movwf	(sprintf@prec+1)& (0+255),b
  8088                           
  8089                           ; BSR set to: 1
  8090  011562  0100               	movlb	0	; () banked
  8091  011564  4BC5               	infsnz	sprintf@f& (0+255),f,b
  8092  011566  2BC6               	incf	(sprintf@f+1)& (0+255),f,b
  8093  011568                     l9057:
  8094  011568  C0C5  FFF6         	movff	sprintf@f,tblptrl
  8095  01156C  C0C6  FFF7         	movff	sprintf@f+1,tblptrh
  8096  011570                     	if	0	;tblptru may be non-zero
  8097  011570                     	endif
  8098  011570                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8099  011570  0E00               	movlw	low (__mediumconst shr (0+16))
  8100  011572  6EF8               	movwf	tblptru,c
  8101  011574                     	endif
  8102  011574  0008               	tblrd		*
  8103  011576  50F5               	movf	tablat,w,c
  8104  011578  ECA7  F0B3         	call	_isdigit
  8105  01157C  A0D8               	btfss	status,0,c
  8106  01157E  D00C               	goto	l9067
  8107  011580  D7CE               	goto	l9053
  8108  011582                     l9059:
  8109                           
  8110                           ;doprnt.c: 626: prec = 0;
  8111  011582  0E00               	movlw	0
  8112  011584  0101               	movlb	1	; () banked
  8113  011586  6F60               	movwf	(sprintf@prec+1)& (0+255),b
  8114  011588  0E00               	movlw	0
  8115  01158A  6F5F               	movwf	sprintf@prec& (0+255),b
  8116                           
  8117                           ; BSR set to: 1
  8118                           ;doprnt.c: 628: flag |= 0x1000;
  8119  01158C  0101               	movlb	1	; () banked
  8120  01158E  8954               	bsf	(sprintf@flag+1)& (0+255),4,b
  8121                           
  8122                           ; BSR set to: 1
  8123                           ;doprnt.c: 630: }
  8124                           ;doprnt.c: 635: switch(c = *f++) {
  8125  011590  D003               	goto	l9067
  8126  011592                     l9063:
  8127                           
  8128                           ; BSR set to: 1
  8129                           ;doprnt.c: 663: flag |= 0x400;
  8130  011592  0101               	movlb	1	; () banked
  8131  011594  8554               	bsf	(sprintf@flag+1)& (0+255),2,b
  8132                           
  8133                           ;doprnt.c: 664: break;
  8134  011596  D015               	goto	l9069
  8135  011598                     l9067:
  8136  011598  C0C5  FFF6         	movff	sprintf@f,tblptrl
  8137  01159C  C0C6  FFF7         	movff	sprintf@f+1,tblptrh
  8138  0115A0  0100               	movlb	0	; () banked
  8139  0115A2  4BC5               	infsnz	sprintf@f& (0+255),f,b
  8140  0115A4  2BC6               	incf	(sprintf@f+1)& (0+255),f,b
  8141  0115A6                     	if	0	;tblptru may be non-zero
  8142  0115A6                     	endif
  8143  0115A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8144  0115A6  0E00               	movlw	low (__mediumconst shr (0+16))
  8145  0115A8  6EF8               	movwf	tblptru,c
  8146  0115AA                     	endif
  8147  0115AA  0008               	tblrd		*
  8148  0115AC  CFF5 F165          	movff	tablat,sprintf@c
  8149  0115B0  0101               	movlb	1	; () banked
  8150  0115B2  5165               	movf	sprintf@c& (0+255),w,b
  8151                           
  8152                           ; Switch size 1, requested type "space"
  8153                           ; Number of cases is 2, Range of values is 0 to 102
  8154                           ; switch strategies available:
  8155                           ; Name         Instructions Cycles
  8156                           ; simple_byte            7     4 (average)
  8157                           ;	Chosen strategy is simple_byte
  8158  0115B4  0A00               	xorlw	0	; case 0
  8159  0115B6  B4D8               	btfsc	status,2,c
  8160  0115B8  D3C5               	goto	l9239
  8161  0115BA  0A66               	xorlw	102	; case 102
  8162  0115BC  B4D8               	btfsc	status,2,c
  8163  0115BE  D7E9               	goto	l9063
  8164  0115C0  D3B0               	goto	l9237
  8165  0115C2                     l9069:
  8166                           
  8167                           ; BSR set to: 1
  8168                           ;doprnt.c: 825: if(flag & (0x700)) {
  8169  0115C2  0E07               	movlw	7
  8170  0115C4  0101               	movlb	1	; () banked
  8171  0115C6  1554               	andwf	(sprintf@flag+1)& (0+255),w,b
  8172  0115C8  B4D8               	btfsc	status,2,c
  8173  0115CA  D353               	goto	l9217
  8174                           
  8175                           ; BSR set to: 1
  8176                           ;doprnt.c: 827: if(flag & 0x1000)
  8177  0115CC  0101               	movlb	1	; () banked
  8178  0115CE  A954               	btfss	(sprintf@flag+1)& (0+255),4,b
  8179  0115D0  D005               	goto	l9075
  8180                           
  8181                           ; BSR set to: 1
  8182                           ;doprnt.c: 829: prec = 6;
  8183  0115D2  0E00               	movlw	0
  8184  0115D4  0101               	movlb	1	; () banked
  8185  0115D6  6F60               	movwf	(sprintf@prec+1)& (0+255),b
  8186  0115D8  0E06               	movlw	6
  8187  0115DA  6F5F               	movwf	sprintf@prec& (0+255),b
  8188  0115DC                     l9075:
  8189                           
  8190                           ; BSR set to: 1
  8191                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  8192  0115DC  C151  FFD9         	movff	sprintf@ap,fsr2l
  8193  0115E0  C152  FFDA         	movff	sprintf@ap+1,fsr2h
  8194  0115E4  CFDE F161          	movff	postinc2,sprintf@fval
  8195  0115E8  CFDE F162          	movff	postinc2,sprintf@fval+1
  8196  0115EC  CFDE F163          	movff	postinc2,sprintf@fval+2
  8197  0115F0  CFDE F164          	movff	postinc2,sprintf@fval+3
  8198                           
  8199                           ; BSR set to: 1
  8200  0115F4  0E04               	movlw	4
  8201  0115F6  0101               	movlb	1	; () banked
  8202  0115F8  2751               	addwf	sprintf@ap& (0+255),f,b
  8203  0115FA  0E00               	movlw	0
  8204  0115FC  2352               	addwfc	(sprintf@ap+1)& (0+255),f,b
  8205                           
  8206                           ; BSR set to: 1
  8207                           ;doprnt.c: 831: if(fval < 0.0) {
  8208  0115FE  0101               	movlb	1	; () banked
  8209  011600  AF64               	btfss	(sprintf@fval+3)& (0+255),7,b
  8210  011602  D015               	goto	l9085
  8211                           
  8212                           ; BSR set to: 1
  8213                           ;doprnt.c: 832: fval = -fval;
  8214  011604  C161  F098         	movff	sprintf@fval,___flneg@f1
  8215  011608  C162  F099         	movff	sprintf@fval+1,___flneg@f1+1
  8216  01160C  C163  F09A         	movff	sprintf@fval+2,___flneg@f1+2
  8217  011610  C164  F09B         	movff	sprintf@fval+3,___flneg@f1+3
  8218  011614  EC24  F0B3         	call	___flneg	;wreg free
  8219  011618  C098  F161         	movff	?___flneg,sprintf@fval
  8220  01161C  C099  F162         	movff	?___flneg+1,sprintf@fval+1
  8221  011620  C09A  F163         	movff	?___flneg+2,sprintf@fval+2
  8222  011624  C09B  F164         	movff	?___flneg+3,sprintf@fval+3
  8223                           
  8224                           ;doprnt.c: 833: flag |= 0x03;
  8225  011628  0E03               	movlw	3
  8226  01162A  0101               	movlb	1	; () banked
  8227  01162C  1353               	iorwf	sprintf@flag& (0+255),f,b
  8228  01162E                     l9085:
  8229                           
  8230                           ; BSR set to: 1
  8231                           ;doprnt.c: 834: }
  8232                           ;doprnt.c: 835: exp = 0;
  8233  01162E  0E00               	movlw	0
  8234  011630  0101               	movlb	1	; () banked
  8235  011632  6F5A               	movwf	(sprintf@exp+1)& (0+255),b
  8236  011634  0E00               	movlw	0
  8237  011636  6F59               	movwf	sprintf@exp& (0+255),b
  8238                           
  8239                           ; BSR set to: 1
  8240                           ;doprnt.c: 836: if( fval!=0) {
  8241  011638  0101               	movlb	1	; () banked
  8242  01163A  5161               	movf	sprintf@fval& (0+255),w,b
  8243  01163C  0101               	movlb	1	; () banked
  8244  01163E  1162               	iorwf	(sprintf@fval+1)& (0+255),w,b
  8245  011640  0101               	movlb	1	; () banked
  8246  011642  1163               	iorwf	(sprintf@fval+2)& (0+255),w,b
  8247  011644  0101               	movlb	1	; () banked
  8248  011646  1164               	iorwf	(sprintf@fval+3)& (0+255),w,b
  8249  011648  B4D8               	btfsc	status,2,c
  8250  01164A  D08E               	goto	l9113
  8251                           
  8252                           ; BSR set to: 1
  8253                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  8254  01164C  0101               	movlb	1	; () banked
  8255  01164E  3563               	rlcf	(sprintf@fval+2)& (0+255),w,b
  8256  011650  3564               	rlcf	(sprintf@fval+3)& (0+255),w,b
  8257  011652  0F82               	addlw	130
  8258  011654  0101               	movlb	1	; () banked
  8259  011656  6F59               	movwf	sprintf@exp& (0+255),b
  8260  011658  0101               	movlb	1	; () banked
  8261  01165A  6B5A               	clrf	(sprintf@exp+1)& (0+255),b
  8262  01165C  0EFF               	movlw	255
  8263  01165E  235A               	addwfc	(sprintf@exp+1)& (0+255),f,b
  8264                           
  8265                           ; BSR set to: 1
  8266                           ;doprnt.c: 838: exp--;
  8267  011660  0101               	movlb	1	; () banked
  8268  011662  0759               	decf	sprintf@exp& (0+255),f,b
  8269  011664  A0D8               	btfss	status,0,c
  8270  011666  075A               	decf	(sprintf@exp+1)& (0+255),f,b
  8271                           
  8272                           ; BSR set to: 1
  8273                           ;doprnt.c: 839: exp *= 3;
  8274  011668  C159  F071         	movff	sprintf@exp,___wmul@multiplier
  8275  01166C  C15A  F072         	movff	sprintf@exp+1,___wmul@multiplier+1
  8276  011670  0E00               	movlw	0
  8277  011672  0100               	movlb	0	; () banked
  8278  011674  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8279  011676  0E03               	movlw	3
  8280  011678  6F73               	movwf	___wmul@multiplicand& (0+255),b
  8281  01167A  EC40  F0B3         	call	___wmul	;wreg free
  8282  01167E  C071  F159         	movff	?___wmul,sprintf@exp
  8283  011682  C072  F15A         	movff	?___wmul+1,sprintf@exp+1
  8284                           
  8285                           ;doprnt.c: 840: exp /= 10;
  8286  011686  C159  F077         	movff	sprintf@exp,___awdiv@dividend
  8287  01168A  C15A  F078         	movff	sprintf@exp+1,___awdiv@dividend+1
  8288  01168E  0E00               	movlw	0
  8289  011690  0100               	movlb	0	; () banked
  8290  011692  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  8291  011694  0E0A               	movlw	10
  8292  011696  6F79               	movwf	___awdiv@divisor& (0+255),b
  8293  011698  ECCB  F0AD         	call	___awdiv	;wreg free
  8294  01169C  C077  F159         	movff	?___awdiv,sprintf@exp
  8295  0116A0  C078  F15A         	movff	?___awdiv+1,sprintf@exp+1
  8296                           
  8297                           ;doprnt.c: 841: if(exp < 0)
  8298  0116A4  0101               	movlb	1	; () banked
  8299  0116A6  AF5A               	btfss	(sprintf@exp+1)& (0+255),7,b
  8300  0116A8  D004               	goto	l9101
  8301                           
  8302                           ; BSR set to: 1
  8303                           ;doprnt.c: 842: exp--;
  8304  0116AA  0101               	movlb	1	; () banked
  8305  0116AC  0759               	decf	sprintf@exp& (0+255),f,b
  8306  0116AE  A0D8               	btfss	status,0,c
  8307  0116B0  075A               	decf	(sprintf@exp+1)& (0+255),f,b
  8308  0116B2                     l9101:
  8309                           
  8310                           ; BSR set to: 1
  8311                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  8312  0116B2  0101               	movlb	1	; () banked
  8313  0116B4  5159               	movf	sprintf@exp& (0+255),w,b
  8314  0116B6  0800               	sublw	0
  8315  0116B8  ECB7  F095         	call	_scale
  8316  0116BC  C098  F15B         	movff	?_scale,sprintf@tmpval
  8317  0116C0  C099  F15C         	movff	?_scale+1,sprintf@tmpval+1
  8318  0116C4  C09A  F15D         	movff	?_scale+2,sprintf@tmpval+2
  8319  0116C8  C09B  F15E         	movff	?_scale+3,sprintf@tmpval+3
  8320                           
  8321                           ;doprnt.c: 847: tmpval.integ *= fval;
  8322  0116CC  C15B  F07F         	movff	sprintf@tmpval,___flmul@b
  8323  0116D0  C15C  F080         	movff	sprintf@tmpval+1,___flmul@b+1
  8324  0116D4  C15D  F081         	movff	sprintf@tmpval+2,___flmul@b+2
  8325  0116D8  C15E  F082         	movff	sprintf@tmpval+3,___flmul@b+3
  8326  0116DC  C161  F083         	movff	sprintf@fval,___flmul@a
  8327  0116E0  C162  F084         	movff	sprintf@fval+1,___flmul@a+1
  8328  0116E4  C163  F085         	movff	sprintf@fval+2,___flmul@a+2
  8329  0116E8  C164  F086         	movff	sprintf@fval+3,___flmul@a+3
  8330  0116EC  EC1E  F09D         	call	___flmul	;wreg free
  8331  0116F0  C07F  F15B         	movff	?___flmul,sprintf@tmpval
  8332  0116F4  C080  F15C         	movff	?___flmul+1,sprintf@tmpval+1
  8333  0116F8  C081  F15D         	movff	?___flmul+2,sprintf@tmpval+2
  8334  0116FC  C082  F15E         	movff	?___flmul+3,sprintf@tmpval+3
  8335                           
  8336                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  8337  011700  C15B  F071         	movff	sprintf@tmpval,___flge@ff1
  8338  011704  C15C  F072         	movff	sprintf@tmpval+1,___flge@ff1+1
  8339  011708  C15D  F073         	movff	sprintf@tmpval+2,___flge@ff1+2
  8340  01170C  C15E  F074         	movff	sprintf@tmpval+3,___flge@ff1+3
  8341  011710  0E00               	movlw	0
  8342  011712  0100               	movlb	0	; () banked
  8343  011714  6F75               	movwf	___flge@ff2& (0+255),b
  8344  011716  0E00               	movlw	0
  8345  011718  6F76               	movwf	(___flge@ff2+1)& (0+255),b
  8346  01171A  0E80               	movlw	128
  8347  01171C  6F77               	movwf	(___flge@ff2+2)& (0+255),b
  8348  01171E  0E3F               	movlw	63
  8349  011720  6F78               	movwf	(___flge@ff2+3)& (0+255),b
  8350  011722  EC8C  F0AA         	call	___flge	;wreg free
  8351  011726  0100               	movlb	0	; () banked
  8352  011728  B0D8               	btfsc	status,0,c
  8353  01172A  D005               	goto	l9109
  8354                           
  8355                           ; BSR set to: 0
  8356                           ;doprnt.c: 849: exp--;
  8357  01172C  0101               	movlb	1	; () banked
  8358  01172E  0759               	decf	sprintf@exp& (0+255),f,b
  8359  011730  A0D8               	btfss	status,0,c
  8360  011732  075A               	decf	(sprintf@exp+1)& (0+255),f,b
  8361  011734  D019               	goto	l9113
  8362  011736                     l9109:
  8363                           
  8364                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  8365  011736  C15B  F071         	movff	sprintf@tmpval,___flge@ff1
  8366  01173A  C15C  F072         	movff	sprintf@tmpval+1,___flge@ff1+1
  8367  01173E  C15D  F073         	movff	sprintf@tmpval+2,___flge@ff1+2
  8368  011742  C15E  F074         	movff	sprintf@tmpval+3,___flge@ff1+3
  8369  011746  0E00               	movlw	0
  8370  011748  0100               	movlb	0	; () banked
  8371  01174A  6F75               	movwf	___flge@ff2& (0+255),b
  8372  01174C  0E00               	movlw	0
  8373  01174E  6F76               	movwf	(___flge@ff2+1)& (0+255),b
  8374  011750  0E20               	movlw	32
  8375  011752  6F77               	movwf	(___flge@ff2+2)& (0+255),b
  8376  011754  0E41               	movlw	65
  8377  011756  6F78               	movwf	(___flge@ff2+3)& (0+255),b
  8378  011758  EC8C  F0AA         	call	___flge	;wreg free
  8379  01175C  0100               	movlb	0	; () banked
  8380  01175E  A0D8               	btfss	status,0,c
  8381  011760  D003               	goto	l9113
  8382                           
  8383                           ; BSR set to: 0
  8384                           ;doprnt.c: 851: exp++;
  8385  011762  0101               	movlb	1	; () banked
  8386  011764  4B59               	infsnz	sprintf@exp& (0+255),f,b
  8387  011766  2B5A               	incf	(sprintf@exp+1)& (0+255),f,b
  8388  011768                     l9113:
  8389                           
  8390                           ;doprnt.c: 852: }
  8391                           ;doprnt.c: 1112: if(prec <= 12)
  8392  011768  0101               	movlb	1	; () banked
  8393  01176A  BF60               	btfsc	(sprintf@prec+1)& (0+255),7,b
  8394  01176C  D008               	goto	l9115
  8395  01176E  0101               	movlb	1	; () banked
  8396  011770  5160               	movf	(sprintf@prec+1)& (0+255),w,b
  8397  011772  E123               	bnz	l9117
  8398  011774  0E0D               	movlw	13
  8399  011776  0101               	movlb	1	; () banked
  8400  011778  5D5F               	subwf	sprintf@prec& (0+255),w,b
  8401  01177A  B0D8               	btfsc	status,0,c
  8402  01177C  D01E               	goto	l9117
  8403  01177E                     l9115:
  8404                           
  8405                           ; BSR set to: 1
  8406                           ;doprnt.c: 1113: fval += fround(prec);
  8407  01177E  C161  F0A5         	movff	sprintf@fval,___fladd@b
  8408  011782  C162  F0A6         	movff	sprintf@fval+1,___fladd@b+1
  8409  011786  C163  F0A7         	movff	sprintf@fval+2,___fladd@b+2
  8410  01178A  C164  F0A8         	movff	sprintf@fval+3,___fladd@b+3
  8411  01178E  0101               	movlb	1	; () banked
  8412  011790  515F               	movf	sprintf@prec& (0+255),w,b
  8413  011792  EC20  F0A3         	call	_fround
  8414  011796  C098  F0A9         	movff	?_fround,___fladd@a
  8415  01179A  C099  F0AA         	movff	?_fround+1,___fladd@a+1
  8416  01179E  C09A  F0AB         	movff	?_fround+2,___fladd@a+2
  8417  0117A2  C09B  F0AC         	movff	?_fround+3,___fladd@a+3
  8418  0117A6  ECCA  F09A         	call	___fladd	;wreg free
  8419  0117AA  C0A5  F161         	movff	?___fladd,sprintf@fval
  8420  0117AE  C0A6  F162         	movff	?___fladd+1,sprintf@fval+1
  8421  0117B2  C0A7  F163         	movff	?___fladd+2,sprintf@fval+2
  8422  0117B6  C0A8  F164         	movff	?___fladd+3,sprintf@fval+3
  8423  0117BA                     l9117:
  8424                           
  8425                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  8426  0117BA  0101               	movlb	1	; () banked
  8427  0117BC  BF5A               	btfsc	(sprintf@exp+1)& (0+255),7,b
  8428  0117BE  D008               	goto	l9119
  8429  0117C0  0101               	movlb	1	; () banked
  8430  0117C2  515A               	movf	(sprintf@exp+1)& (0+255),w,b
  8431  0117C4  E12E               	bnz	l9125
  8432  0117C6  0E0A               	movlw	10
  8433  0117C8  0101               	movlb	1	; () banked
  8434  0117CA  5D59               	subwf	sprintf@exp& (0+255),w,b
  8435  0117CC  B0D8               	btfsc	status,0,c
  8436  0117CE  D029               	goto	l9125
  8437  0117D0                     l9119:
  8438                           
  8439                           ; BSR set to: 1
  8440  0117D0  0101               	movlb	1	; () banked
  8441  0117D2  5161               	movf	sprintf@fval& (0+255),w,b
  8442  0117D4  0101               	movlb	1	; () banked
  8443  0117D6  1162               	iorwf	(sprintf@fval+1)& (0+255),w,b
  8444  0117D8  0101               	movlb	1	; () banked
  8445  0117DA  1163               	iorwf	(sprintf@fval+2)& (0+255),w,b
  8446  0117DC  0101               	movlb	1	; () banked
  8447  0117DE  1164               	iorwf	(sprintf@fval+3)& (0+255),w,b
  8448  0117E0  B4D8               	btfsc	status,2,c
  8449  0117E2  D06D               	goto	l9139
  8450                           
  8451                           ; BSR set to: 1
  8452  0117E4  C161  F0B9         	movff	sprintf@fval,___fltol@f1
  8453  0117E8  C162  F0BA         	movff	sprintf@fval+1,___fltol@f1+1
  8454  0117EC  C163  F0BB         	movff	sprintf@fval+2,___fltol@f1+2
  8455  0117F0  C164  F0BC         	movff	sprintf@fval+3,___fltol@f1+3
  8456  0117F4  ECCF  F0AC         	call	___fltol	;wreg free
  8457  0117F8  0100               	movlb	0	; () banked
  8458  0117FA  51B9               	movf	?___fltol& (0+255),w,b
  8459  0117FC  0100               	movlb	0	; () banked
  8460  0117FE  11BA               	iorwf	(?___fltol+1)& (0+255),w,b
  8461  011800  0100               	movlb	0	; () banked
  8462  011802  11BB               	iorwf	(?___fltol+2)& (0+255),w,b
  8463  011804  0100               	movlb	0	; () banked
  8464  011806  11BC               	iorwf	(?___fltol+3)& (0+255),w,b
  8465  011808  A4D8               	btfss	status,2,c
  8466  01180A  D059               	goto	l9139
  8467                           
  8468                           ; BSR set to: 0
  8469  01180C  0101               	movlb	1	; () banked
  8470  01180E  BF5A               	btfsc	(sprintf@exp+1)& (0+255),7,b
  8471  011810  D056               	goto	l9139
  8472  011812  0101               	movlb	1	; () banked
  8473  011814  515A               	movf	(sprintf@exp+1)& (0+255),w,b
  8474  011816  E105               	bnz	l9125
  8475  011818  0E02               	movlw	2
  8476  01181A  0101               	movlb	1	; () banked
  8477  01181C  5D59               	subwf	sprintf@exp& (0+255),w,b
  8478  01181E  A0D8               	btfss	status,0,c
  8479  011820  D04E               	goto	l9139
  8480  011822                     l9125:
  8481                           
  8482                           ; BSR set to: 1
  8483                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  8484  011822  C15B  F071         	movff	sprintf@tmpval,___flge@ff1
  8485  011826  C15C  F072         	movff	sprintf@tmpval+1,___flge@ff1+1
  8486  01182A  C15D  F073         	movff	sprintf@tmpval+2,___flge@ff1+2
  8487  01182E  C15E  F074         	movff	sprintf@tmpval+3,___flge@ff1+3
  8488  011832  0E5F               	movlw	95
  8489  011834  0100               	movlb	0	; () banked
  8490  011836  6F75               	movwf	___flge@ff2& (0+255),b
  8491  011838  0E70               	movlw	112
  8492  01183A  6F76               	movwf	(___flge@ff2+1)& (0+255),b
  8493  01183C  0E89               	movlw	137
  8494  01183E  6F77               	movwf	(___flge@ff2+2)& (0+255),b
  8495  011840  0E40               	movlw	64
  8496  011842  6F78               	movwf	(___flge@ff2+3)& (0+255),b
  8497  011844  EC8C  F0AA         	call	___flge	;wreg free
  8498  011848  0100               	movlb	0	; () banked
  8499  01184A  B0D8               	btfsc	status,0,c
  8500  01184C  D003               	goto	l9129
  8501                           
  8502                           ; BSR set to: 0
  8503                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  8504  01184E  0101               	movlb	1	; () banked
  8505  011850  0EF7               	movlw	247
  8506  011852  D002               	goto	L6
  8507  011854                     l9129:
  8508                           
  8509                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  8510  011854  0101               	movlb	1	; () banked
  8511  011856  0EF8               	movlw	248
  8512  011858                     L6:
  8513  011858  2759               	addwf	sprintf@exp& (0+255),f,b
  8514  01185A  0EFF               	movlw	255
  8515  01185C  235A               	addwfc	(sprintf@exp+1)& (0+255),f,b
  8516                           
  8517                           ; BSR set to: 1
  8518                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  8519                           
  8520                           ; BSR set to: 1
  8521  01185E  0101               	movlb	1	; () banked
  8522  011860  5159               	movf	sprintf@exp& (0+255),w,b
  8523  011862  ECB7  F095         	call	_scale
  8524  011866  C098  F15B         	movff	?_scale,sprintf@tmpval
  8525  01186A  C099  F15C         	movff	?_scale+1,sprintf@tmpval+1
  8526  01186E  C09A  F15D         	movff	?_scale+2,sprintf@tmpval+2
  8527  011872  C09B  F15E         	movff	?_scale+3,sprintf@tmpval+3
  8528  011876  C161  F071         	movff	sprintf@fval,__div_to_l_@f1
  8529  01187A  C162  F072         	movff	sprintf@fval+1,__div_to_l_@f1+1
  8530  01187E  C163  F073         	movff	sprintf@fval+2,__div_to_l_@f1+2
  8531  011882  C164  F074         	movff	sprintf@fval+3,__div_to_l_@f1+3
  8532  011886  C15B  F075         	movff	sprintf@tmpval,__div_to_l_@f2
  8533  01188A  C15C  F076         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  8534  01188E  C15D  F077         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  8535  011892  C15E  F078         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  8536  011896  EC54  F0AB         	call	__div_to_l_	;wreg free
  8537  01189A  C071  F155         	movff	?__div_to_l_,sprintf@val
  8538  01189E  C072  F156         	movff	?__div_to_l_+1,sprintf@val+1
  8539  0118A2  C073  F157         	movff	?__div_to_l_+2,sprintf@val+2
  8540  0118A6  C074  F158         	movff	?__div_to_l_+3,sprintf@val+3
  8541                           
  8542                           ;doprnt.c: 1129: fval = 0.0;
  8543  0118AA  0E00               	movlw	0
  8544  0118AC  0101               	movlb	1	; () banked
  8545  0118AE  6F61               	movwf	sprintf@fval& (0+255),b
  8546  0118B0  0E00               	movlw	0
  8547  0118B2  6F62               	movwf	(sprintf@fval+1)& (0+255),b
  8548  0118B4  0E00               	movlw	0
  8549  0118B6  6F63               	movwf	(sprintf@fval+2)& (0+255),b
  8550  0118B8  0E00               	movlw	0
  8551  0118BA  6F64               	movwf	(sprintf@fval+3)& (0+255),b
  8552                           
  8553                           ;doprnt.c: 1130: } else {
  8554  0118BC  D03C               	goto	l9143
  8555  0118BE                     l9139:
  8556                           
  8557                           ;doprnt.c: 1131: val = (unsigned long)fval;
  8558  0118BE  C161  F0B9         	movff	sprintf@fval,___fltol@f1
  8559  0118C2  C162  F0BA         	movff	sprintf@fval+1,___fltol@f1+1
  8560  0118C6  C163  F0BB         	movff	sprintf@fval+2,___fltol@f1+2
  8561  0118CA  C164  F0BC         	movff	sprintf@fval+3,___fltol@f1+3
  8562  0118CE  ECCF  F0AC         	call	___fltol	;wreg free
  8563  0118D2  C0B9  F155         	movff	?___fltol,sprintf@val
  8564  0118D6  C0BA  F156         	movff	?___fltol+1,sprintf@val+1
  8565  0118DA  C0BB  F157         	movff	?___fltol+2,sprintf@val+2
  8566  0118DE  C0BC  F158         	movff	?___fltol+3,sprintf@val+3
  8567                           
  8568                           ;doprnt.c: 1132: fval -= (double)val;
  8569  0118E2  C161  F0B9         	movff	sprintf@fval,___flsub@b
  8570  0118E6  C162  F0BA         	movff	sprintf@fval+1,___flsub@b+1
  8571  0118EA  C163  F0BB         	movff	sprintf@fval+2,___flsub@b+2
  8572  0118EE  C164  F0BC         	movff	sprintf@fval+3,___flsub@b+3
  8573  0118F2  C155  F071         	movff	sprintf@val,___xxtofl@val
  8574  0118F6  C156  F072         	movff	sprintf@val+1,___xxtofl@val+1
  8575  0118FA  C157  F073         	movff	sprintf@val+2,___xxtofl@val+2
  8576  0118FE  C158  F074         	movff	sprintf@val+3,___xxtofl@val+3
  8577  011902  0E00               	movlw	0
  8578  011904  EC13  F0A7         	call	___xxtofl
  8579  011908  C071  F0BD         	movff	?___xxtofl,___flsub@a
  8580  01190C  C072  F0BE         	movff	?___xxtofl+1,___flsub@a+1
  8581  011910  C073  F0BF         	movff	?___xxtofl+2,___flsub@a+2
  8582  011914  C074  F0C0         	movff	?___xxtofl+3,___flsub@a+3
  8583  011918  EC7F  F0B2         	call	___flsub	;wreg free
  8584  01191C  C0B9  F161         	movff	?___flsub,sprintf@fval
  8585  011920  C0BA  F162         	movff	?___flsub+1,sprintf@fval+1
  8586  011924  C0BB  F163         	movff	?___flsub+2,sprintf@fval+2
  8587  011928  C0BC  F164         	movff	?___flsub+3,sprintf@fval+3
  8588                           
  8589                           ;doprnt.c: 1133: exp = 0;
  8590  01192C  0E00               	movlw	0
  8591  01192E  0101               	movlb	1	; () banked
  8592  011930  6F5A               	movwf	(sprintf@exp+1)& (0+255),b
  8593  011932  0E00               	movlw	0
  8594  011934  6F59               	movwf	sprintf@exp& (0+255),b
  8595  011936                     l9143:
  8596                           
  8597                           ; BSR set to: 1
  8598                           ;doprnt.c: 1134: }
  8599                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  8600  011936  0E01               	movlw	1
  8601  011938  0101               	movlb	1	; () banked
  8602  01193A  6F65               	movwf	sprintf@c& (0+255),b
  8603  01193C                     l9145:
  8604                           
  8605                           ; BSR set to: 1
  8606  01193C  0E0A               	movlw	10
  8607  01193E  0101               	movlb	1	; () banked
  8608  011940  1965               	xorwf	sprintf@c& (0+255),w,b
  8609  011942  B4D8               	btfsc	status,2,c
  8610  011944  D021               	goto	l9157
  8611                           
  8612                           ; BSR set to: 1
  8613                           ;doprnt.c: 1137: if(val < dpowers[c])
  8614                           
  8615                           ; BSR set to: 1
  8616                           
  8617                           ; BSR set to: 1
  8618  011946  0101               	movlb	1	; () banked
  8619  011948  5165               	movf	sprintf@c& (0+255),w,b
  8620  01194A  0D04               	mullw	4
  8621  01194C  0E35               	movlw	low _dpowers
  8622  01194E  24F3               	addwf	prodl,w,c
  8623  011950  6EF6               	movwf	tblptrl,c
  8624  011952  0EFD               	movlw	high _dpowers
  8625  011954  20F4               	addwfc	prodh,w,c
  8626  011956  6EF7               	movwf	tblptrh,c
  8627  011958                     	if	1	;There are 3 active tblptr bytes
  8628  011958  6AF8               	clrf	tblptru,c
  8629  01195A  0E00               	movlw	low (__mediumconst shr (0+16))
  8630  01195C  22F8               	addwfc	tblptru,f,c
  8631  01195E                     	endif
  8632  01195E  0009               	tblrd		*+
  8633  011960  50F5               	movf	tablat,w,c
  8634  011962  0101               	movlb	1	; () banked
  8635  011964  5D55               	subwf	sprintf@val& (0+255),w,b
  8636  011966  0009               	tblrd		*+
  8637  011968  50F5               	movf	tablat,w,c
  8638  01196A  0101               	movlb	1	; () banked
  8639  01196C  5956               	subwfb	(sprintf@val+1)& (0+255),w,b
  8640  01196E  0009               	tblrd		*+
  8641  011970  50F5               	movf	tablat,w,c
  8642  011972  0101               	movlb	1	; () banked
  8643  011974  5957               	subwfb	(sprintf@val+2)& (0+255),w,b
  8644  011976  0009               	tblrd		*+
  8645  011978  50F5               	movf	tablat,w,c
  8646  01197A  0101               	movlb	1	; () banked
  8647  01197C  5958               	subwfb	(sprintf@val+3)& (0+255),w,b
  8648  01197E  A0D8               	btfss	status,0,c
  8649  011980  D003               	goto	l9157
  8650                           
  8651                           ; BSR set to: 1
  8652                           
  8653                           ; BSR set to: 1
  8654                           
  8655                           ; BSR set to: 1
  8656                           ;doprnt.c: 1138: break;
  8657  011982  0101               	movlb	1	; () banked
  8658  011984  2B65               	incf	sprintf@c& (0+255),f,b
  8659  011986  D7DA               	goto	l9145
  8660  011988                     l9157:
  8661                           
  8662                           ; BSR set to: 1
  8663                           ;doprnt.c: 1175: {
  8664                           ;doprnt.c: 1188: if(flag & 0x03)
  8665  011988  0E03               	movlw	3
  8666  01198A  0101               	movlb	1	; () banked
  8667  01198C  1553               	andwf	sprintf@flag& (0+255),w,b
  8668  01198E  0100               	movlb	0	; () banked
  8669  011990  6FCB               	movwf	??_sprintf& (0+255),b
  8670  011992  0E00               	movlw	0
  8671  011994  0101               	movlb	1	; () banked
  8672  011996  1554               	andwf	(sprintf@flag+1)& (0+255),w,b
  8673  011998  0100               	movlb	0	; () banked
  8674  01199A  6FCC               	movwf	(??_sprintf+1)& (0+255),b
  8675  01199C  0100               	movlb	0	; () banked
  8676  01199E  51CB               	movf	??_sprintf& (0+255),w,b
  8677  0119A0  0100               	movlb	0	; () banked
  8678  0119A2  11CC               	iorwf	(??_sprintf+1)& (0+255),w,b
  8679  0119A4  B4D8               	btfsc	status,2,c
  8680  0119A6  D058               	goto	l9171
  8681                           
  8682                           ; BSR set to: 0
  8683                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  8684  0119A8  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  8685  0119AC  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  8686  0119B0  0E2D               	movlw	45
  8687  0119B2  D050               	goto	L7
  8688  0119B4                     l9161:
  8689                           
  8690                           ; BSR set to: 0
  8691  0119B4  0100               	movlb	0	; () banked
  8692  0119B6  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  8693  0119B8  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  8694                           
  8695                           ; BSR set to: 0
  8696                           ;doprnt.c: 1195: }
  8697                           ;doprnt.c: 1196: while(c--) {
  8698  0119BA  D04E               	goto	l9171
  8699  0119BC                     l9163:
  8700                           
  8701                           ;doprnt.c: 1200: {
  8702                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  8703  0119BC  C155  F071         	movff	sprintf@val,___lldiv@dividend
  8704  0119C0  C156  F072         	movff	sprintf@val+1,___lldiv@dividend+1
  8705  0119C4  C157  F073         	movff	sprintf@val+2,___lldiv@dividend+2
  8706  0119C8  C158  F074         	movff	sprintf@val+3,___lldiv@dividend+3
  8707  0119CC  0101               	movlb	1	; () banked
  8708  0119CE  5165               	movf	sprintf@c& (0+255),w,b
  8709  0119D0  0D04               	mullw	4
  8710  0119D2  0E35               	movlw	low _dpowers
  8711  0119D4  24F3               	addwf	prodl,w,c
  8712  0119D6  6EF6               	movwf	tblptrl,c
  8713  0119D8  0EFD               	movlw	high _dpowers
  8714  0119DA  20F4               	addwfc	prodh,w,c
  8715  0119DC  6EF7               	movwf	tblptrh,c
  8716  0119DE                     	if	1	;There are 3 active tblptr bytes
  8717  0119DE  6AF8               	clrf	tblptru,c
  8718  0119E0  0E00               	movlw	low (__mediumconst shr (0+16))
  8719  0119E2  22F8               	addwfc	tblptru,f,c
  8720  0119E4                     	endif
  8721  0119E4  0009               	tblrd		*+
  8722  0119E6  CFF5 F075          	movff	tablat,___lldiv@divisor
  8723  0119EA  0009               	tblrd		*+
  8724  0119EC  CFF5 F076          	movff	tablat,___lldiv@divisor+1
  8725  0119F0  0009               	tblrd		*+
  8726  0119F2  CFF5 F077          	movff	tablat,___lldiv@divisor+2
  8727  0119F6  000A               	tblrd		*-
  8728  0119F8  CFF5 F078          	movff	tablat,___lldiv@divisor+3
  8729  0119FC  EC89  F0AE         	call	___lldiv	;wreg free
  8730  011A00  C071  F15B         	movff	?___lldiv,sprintf@tmpval
  8731  011A04  C072  F15C         	movff	?___lldiv+1,sprintf@tmpval+1
  8732  011A08  C073  F15D         	movff	?___lldiv+2,sprintf@tmpval+2
  8733  011A0C  C074  F15E         	movff	?___lldiv+3,sprintf@tmpval+3
  8734                           
  8735                           ;doprnt.c: 1202: tmpval.vd %= 10;
  8736  011A10  C15B  F071         	movff	sprintf@tmpval,___llmod@dividend
  8737  011A14  C15C  F072         	movff	sprintf@tmpval+1,___llmod@dividend+1
  8738  011A18  C15D  F073         	movff	sprintf@tmpval+2,___llmod@dividend+2
  8739  011A1C  C15E  F074         	movff	sprintf@tmpval+3,___llmod@dividend+3
  8740  011A20  0E0A               	movlw	10
  8741  011A22  0100               	movlb	0	; () banked
  8742  011A24  6F75               	movwf	___llmod@divisor& (0+255),b
  8743  011A26  0E00               	movlw	0
  8744  011A28  6F76               	movwf	(___llmod@divisor+1)& (0+255),b
  8745  011A2A  0E00               	movlw	0
  8746  011A2C  6F77               	movwf	(___llmod@divisor+2)& (0+255),b
  8747  011A2E  0E00               	movlw	0
  8748  011A30  6F78               	movwf	(___llmod@divisor+3)& (0+255),b
  8749  011A32  ECE7  F0AF         	call	___llmod	;wreg free
  8750  011A36  C071  F15B         	movff	?___llmod,sprintf@tmpval
  8751  011A3A  C072  F15C         	movff	?___llmod+1,sprintf@tmpval+1
  8752  011A3E  C073  F15D         	movff	?___llmod+2,sprintf@tmpval+2
  8753  011A42  C074  F15E         	movff	?___llmod+3,sprintf@tmpval+3
  8754                           
  8755                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  8756  011A46  0101               	movlb	1	; () banked
  8757  011A48  515B               	movf	sprintf@tmpval& (0+255),w,b
  8758  011A4A  0F30               	addlw	48
  8759  011A4C  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  8760  011A50  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  8761  011A54                     L7:
  8762  011A54  6EDF               	movwf	indf2,c
  8763  011A56  D7AE               	goto	l9161
  8764  011A58                     l9171:
  8765                           
  8766                           ; BSR set to: 0
  8767  011A58  0101               	movlb	1	; () banked
  8768  011A5A  0765               	decf	sprintf@c& (0+255),f,b
  8769  011A5C  0101               	movlb	1	; () banked
  8770  011A5E  2965               	incf	sprintf@c& (0+255),w,b
  8771  011A60  B4D8               	btfsc	status,2,c
  8772  011A62  D00E               	goto	l9179
  8773  011A64  D7AB               	goto	l9163
  8774  011A66                     l9173:
  8775                           
  8776                           ; BSR set to: 1
  8777                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  8778  011A66  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  8779  011A6A  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  8780  011A6E  0E30               	movlw	48
  8781  011A70  6EDF               	movwf	indf2,c
  8782                           
  8783                           ; BSR set to: 1
  8784  011A72  0100               	movlb	0	; () banked
  8785  011A74  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  8786  011A76  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  8787                           
  8788                           ; BSR set to: 0
  8789                           ;doprnt.c: 1209: exp--;
  8790  011A78  0101               	movlb	1	; () banked
  8791  011A7A  0759               	decf	sprintf@exp& (0+255),f,b
  8792  011A7C  A0D8               	btfss	status,0,c
  8793  011A7E  075A               	decf	(sprintf@exp+1)& (0+255),f,b
  8794  011A80                     l9179:
  8795                           
  8796                           ; BSR set to: 1
  8797  011A80  0101               	movlb	1	; () banked
  8798  011A82  BF5A               	btfsc	(sprintf@exp+1)& (0+255),7,b
  8799  011A84  D007               	goto	l9181
  8800  011A86  0101               	movlb	1	; () banked
  8801  011A88  515A               	movf	(sprintf@exp+1)& (0+255),w,b
  8802  011A8A  E1ED               	bnz	l9173
  8803  011A8C  0101               	movlb	1	; () banked
  8804  011A8E  0559               	decf	sprintf@exp& (0+255),w,b
  8805  011A90  B0D8               	btfsc	status,0,c
  8806  011A92  D7E9               	goto	l9173
  8807  011A94                     l9181:
  8808                           
  8809                           ; BSR set to: 1
  8810                           ;doprnt.c: 1210: }
  8811                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  8812  011A94  0101               	movlb	1	; () banked
  8813  011A96  BF60               	btfsc	(sprintf@prec+1)& (0+255),7,b
  8814  011A98  D00C               	goto	l1067
  8815  011A9A  0101               	movlb	1	; () banked
  8816  011A9C  5160               	movf	(sprintf@prec+1)& (0+255),w,b
  8817  011A9E  E105               	bnz	u12360
  8818  011AA0  0E09               	movlw	9
  8819  011AA2  0101               	movlb	1	; () banked
  8820  011AA4  5D5F               	subwf	sprintf@prec& (0+255),w,b
  8821  011AA6  A0D8               	btfss	status,0,c
  8822  011AA8  D004               	goto	l1067
  8823  011AAA                     u12360:
  8824                           
  8825                           ; BSR set to: 1
  8826                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  8827  011AAA  0E08               	movlw	8
  8828  011AAC  0101               	movlb	1	; () banked
  8829  011AAE  6F65               	movwf	sprintf@c& (0+255),b
  8830  011AB0  D002               	goto	l9185
  8831  011AB2                     l1067:
  8832                           
  8833                           ; BSR set to: 1
  8834                           ;doprnt.c: 1213: else
  8835                           ;doprnt.c: 1214: c = prec;
  8836  011AB2  C15F  F165         	movff	sprintf@prec,sprintf@c
  8837  011AB6                     l9185:
  8838                           
  8839                           ; BSR set to: 1
  8840                           ;doprnt.c: 1215: prec -= c;
  8841  011AB6  0101               	movlb	1	; () banked
  8842  011AB8  5165               	movf	sprintf@c& (0+255),w,b
  8843  011ABA  0101               	movlb	1	; () banked
  8844  011ABC  5F5F               	subwf	sprintf@prec& (0+255),f,b
  8845  011ABE  0E00               	movlw	0
  8846  011AC0  0101               	movlb	1	; () banked
  8847  011AC2  BF65               	btfsc	sprintf@c& (0+255),7,b
  8848  011AC4  0EFF               	movlw	255
  8849  011AC6  0101               	movlb	1	; () banked
  8850  011AC8  5B60               	subwfb	(sprintf@prec+1)& (0+255),f,b
  8851                           
  8852                           ; BSR set to: 1
  8853                           ;doprnt.c: 1219: if(c)
  8854  011ACA  0101               	movlb	1	; () banked
  8855  011ACC  5165               	movf	sprintf@c& (0+255),w,b
  8856  011ACE  0101               	movlb	1	; () banked
  8857  011AD0  B4D8               	btfsc	status,2,c
  8858  011AD2  D009               	goto	l9193
  8859                           
  8860                           ; BSR set to: 1
  8861                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  8862  011AD4  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  8863  011AD8  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  8864  011ADC  0E2E               	movlw	46
  8865  011ADE  6EDF               	movwf	indf2,c
  8866                           
  8867                           ; BSR set to: 1
  8868  011AE0  0100               	movlb	0	; () banked
  8869  011AE2  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  8870  011AE4  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  8871  011AE6                     l9193:
  8872                           
  8873                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  8874  011AE6  0101               	movlb	1	; () banked
  8875  011AE8  5165               	movf	sprintf@c& (0+255),w,b
  8876  011AEA  ECB7  F095         	call	_scale
  8877  011AEE  C098  F14D         	movff	?_scale,_sprintf$4194
  8878  011AF2  C099  F14E         	movff	?_scale+1,_sprintf$4194+1
  8879  011AF6  C09A  F14F         	movff	?_scale+2,_sprintf$4194+2
  8880  011AFA  C09B  F150         	movff	?_scale+3,_sprintf$4194+3
  8881                           
  8882                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  8883  011AFE  C161  F083         	movff	sprintf@fval,___flmul@a
  8884  011B02  C162  F084         	movff	sprintf@fval+1,___flmul@a+1
  8885  011B06  C163  F085         	movff	sprintf@fval+2,___flmul@a+2
  8886  011B0A  C164  F086         	movff	sprintf@fval+3,___flmul@a+3
  8887  011B0E  C14D  F07F         	movff	_sprintf$4194,___flmul@b
  8888  011B12  C14E  F080         	movff	_sprintf$4194+1,___flmul@b+1
  8889  011B16  C14F  F081         	movff	_sprintf$4194+2,___flmul@b+2
  8890  011B1A  C150  F082         	movff	_sprintf$4194+3,___flmul@b+3
  8891  011B1E  EC1E  F09D         	call	___flmul	;wreg free
  8892  011B22  C07F  F0B9         	movff	?___flmul,___fltol@f1
  8893  011B26  C080  F0BA         	movff	?___flmul+1,___fltol@f1+1
  8894  011B2A  C081  F0BB         	movff	?___flmul+2,___fltol@f1+2
  8895  011B2E  C082  F0BC         	movff	?___flmul+3,___fltol@f1+3
  8896  011B32  ECCF  F0AC         	call	___fltol	;wreg free
  8897  011B36  C0B9  F155         	movff	?___fltol,sprintf@val
  8898  011B3A  C0BA  F156         	movff	?___fltol+1,sprintf@val+1
  8899  011B3E  C0BB  F157         	movff	?___fltol+2,sprintf@val+2
  8900  011B42  C0BC  F158         	movff	?___fltol+3,sprintf@val+3
  8901                           
  8902                           ;doprnt.c: 1228: while(c--) {
  8903  011B46  D07A               	goto	l9207
  8904  011B48                     l9197:
  8905                           
  8906                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  8907  011B48  C155  F071         	movff	sprintf@val,___lldiv@dividend
  8908  011B4C  C156  F072         	movff	sprintf@val+1,___lldiv@dividend+1
  8909  011B50  C157  F073         	movff	sprintf@val+2,___lldiv@dividend+2
  8910  011B54  C158  F074         	movff	sprintf@val+3,___lldiv@dividend+3
  8911  011B58  0101               	movlb	1	; () banked
  8912  011B5A  5165               	movf	sprintf@c& (0+255),w,b
  8913  011B5C  0D04               	mullw	4
  8914  011B5E  0E35               	movlw	low _dpowers
  8915  011B60  24F3               	addwf	prodl,w,c
  8916  011B62  6EF6               	movwf	tblptrl,c
  8917  011B64  0EFD               	movlw	high _dpowers
  8918  011B66  20F4               	addwfc	prodh,w,c
  8919  011B68  6EF7               	movwf	tblptrh,c
  8920  011B6A                     	if	1	;There are 3 active tblptr bytes
  8921  011B6A  6AF8               	clrf	tblptru,c
  8922  011B6C  0E00               	movlw	low (__mediumconst shr (0+16))
  8923  011B6E  22F8               	addwfc	tblptru,f,c
  8924  011B70                     	endif
  8925  011B70  0009               	tblrd		*+
  8926  011B72  CFF5 F075          	movff	tablat,___lldiv@divisor
  8927  011B76  0009               	tblrd		*+
  8928  011B78  CFF5 F076          	movff	tablat,___lldiv@divisor+1
  8929  011B7C  0009               	tblrd		*+
  8930  011B7E  CFF5 F077          	movff	tablat,___lldiv@divisor+2
  8931  011B82  000A               	tblrd		*-
  8932  011B84  CFF5 F078          	movff	tablat,___lldiv@divisor+3
  8933  011B88  EC89  F0AE         	call	___lldiv	;wreg free
  8934  011B8C  C071  F15B         	movff	?___lldiv,sprintf@tmpval
  8935  011B90  C072  F15C         	movff	?___lldiv+1,sprintf@tmpval+1
  8936  011B94  C073  F15D         	movff	?___lldiv+2,sprintf@tmpval+2
  8937  011B98  C074  F15E         	movff	?___lldiv+3,sprintf@tmpval+3
  8938                           
  8939                           ;doprnt.c: 1230: tmpval.vd %= 10;
  8940  011B9C  C15B  F071         	movff	sprintf@tmpval,___llmod@dividend
  8941  011BA0  C15C  F072         	movff	sprintf@tmpval+1,___llmod@dividend+1
  8942  011BA4  C15D  F073         	movff	sprintf@tmpval+2,___llmod@dividend+2
  8943  011BA8  C15E  F074         	movff	sprintf@tmpval+3,___llmod@dividend+3
  8944  011BAC  0E0A               	movlw	10
  8945  011BAE  0100               	movlb	0	; () banked
  8946  011BB0  6F75               	movwf	___llmod@divisor& (0+255),b
  8947  011BB2  0E00               	movlw	0
  8948  011BB4  6F76               	movwf	(___llmod@divisor+1)& (0+255),b
  8949  011BB6  0E00               	movlw	0
  8950  011BB8  6F77               	movwf	(___llmod@divisor+2)& (0+255),b
  8951  011BBA  0E00               	movlw	0
  8952  011BBC  6F78               	movwf	(___llmod@divisor+3)& (0+255),b
  8953  011BBE  ECE7  F0AF         	call	___llmod	;wreg free
  8954  011BC2  C071  F15B         	movff	?___llmod,sprintf@tmpval
  8955  011BC6  C072  F15C         	movff	?___llmod+1,sprintf@tmpval+1
  8956  011BCA  C073  F15D         	movff	?___llmod+2,sprintf@tmpval+2
  8957  011BCE  C074  F15E         	movff	?___llmod+3,sprintf@tmpval+3
  8958                           
  8959                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  8960  011BD2  0101               	movlb	1	; () banked
  8961  011BD4  515B               	movf	sprintf@tmpval& (0+255),w,b
  8962  011BD6  0F30               	addlw	48
  8963  011BD8  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  8964  011BDC  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  8965  011BE0  6EDF               	movwf	indf2,c
  8966                           
  8967                           ; BSR set to: 1
  8968  011BE2  0100               	movlb	0	; () banked
  8969  011BE4  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  8970  011BE6  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  8971                           
  8972                           ; BSR set to: 0
  8973                           ;doprnt.c: 1232: val %= dpowers[c];
  8974  011BE8  C155  F071         	movff	sprintf@val,___llmod@dividend
  8975  011BEC  C156  F072         	movff	sprintf@val+1,___llmod@dividend+1
  8976  011BF0  C157  F073         	movff	sprintf@val+2,___llmod@dividend+2
  8977  011BF4  C158  F074         	movff	sprintf@val+3,___llmod@dividend+3
  8978  011BF8  0101               	movlb	1	; () banked
  8979  011BFA  5165               	movf	sprintf@c& (0+255),w,b
  8980  011BFC  0D04               	mullw	4
  8981  011BFE  0E35               	movlw	low _dpowers
  8982  011C00  24F3               	addwf	prodl,w,c
  8983  011C02  6EF6               	movwf	tblptrl,c
  8984  011C04  0EFD               	movlw	high _dpowers
  8985  011C06  20F4               	addwfc	prodh,w,c
  8986  011C08  6EF7               	movwf	tblptrh,c
  8987  011C0A                     	if	1	;There are 3 active tblptr bytes
  8988  011C0A  6AF8               	clrf	tblptru,c
  8989  011C0C  0E00               	movlw	low (__mediumconst shr (0+16))
  8990  011C0E  22F8               	addwfc	tblptru,f,c
  8991  011C10                     	endif
  8992  011C10  0009               	tblrd		*+
  8993  011C12  CFF5 F075          	movff	tablat,___llmod@divisor
  8994  011C16  0009               	tblrd		*+
  8995  011C18  CFF5 F076          	movff	tablat,___llmod@divisor+1
  8996  011C1C  0009               	tblrd		*+
  8997  011C1E  CFF5 F077          	movff	tablat,___llmod@divisor+2
  8998  011C22  000A               	tblrd		*-
  8999  011C24  CFF5 F078          	movff	tablat,___llmod@divisor+3
  9000  011C28  ECE7  F0AF         	call	___llmod	;wreg free
  9001  011C2C  C071  F155         	movff	?___llmod,sprintf@val
  9002  011C30  C072  F156         	movff	?___llmod+1,sprintf@val+1
  9003  011C34  C073  F157         	movff	?___llmod+2,sprintf@val+2
  9004  011C38  C074  F158         	movff	?___llmod+3,sprintf@val+3
  9005  011C3C                     l9207:
  9006  011C3C  0101               	movlb	1	; () banked
  9007  011C3E  0765               	decf	sprintf@c& (0+255),f,b
  9008  011C40  0101               	movlb	1	; () banked
  9009  011C42  2965               	incf	sprintf@c& (0+255),w,b
  9010  011C44  B4D8               	btfsc	status,2,c
  9011  011C46  D00E               	goto	l9215
  9012  011C48  D77F               	goto	l9197
  9013  011C4A                     l9209:
  9014                           
  9015                           ; BSR set to: 1
  9016                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  9017  011C4A  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  9018  011C4E  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  9019  011C52  0E30               	movlw	48
  9020  011C54  6EDF               	movwf	indf2,c
  9021                           
  9022                           ; BSR set to: 1
  9023  011C56  0100               	movlb	0	; () banked
  9024  011C58  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  9025  011C5A  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  9026                           
  9027                           ; BSR set to: 0
  9028                           ;doprnt.c: 1237: prec--;
  9029  011C5C  0101               	movlb	1	; () banked
  9030  011C5E  075F               	decf	sprintf@prec& (0+255),f,b
  9031  011C60  A0D8               	btfss	status,0,c
  9032  011C62  0760               	decf	(sprintf@prec+1)& (0+255),f,b
  9033  011C64                     l9215:
  9034                           
  9035                           ; BSR set to: 1
  9036  011C64  0101               	movlb	1	; () banked
  9037  011C66  515F               	movf	sprintf@prec& (0+255),w,b
  9038  011C68  0101               	movlb	1	; () banked
  9039  011C6A  1160               	iorwf	(sprintf@prec+1)& (0+255),w,b
  9040  011C6C  B4D8               	btfsc	status,2,c
  9041  011C6E  D059               	goto	l9237
  9042  011C70  D7EC               	goto	l9209
  9043  011C72                     l9217:
  9044                           
  9045                           ; BSR set to: 1
  9046                           ;doprnt.c: 1246: }
  9047                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  9048  011C72  0101               	movlb	1	; () banked
  9049  011C74  515F               	movf	sprintf@prec& (0+255),w,b
  9050  011C76  0101               	movlb	1	; () banked
  9051  011C78  1160               	iorwf	(sprintf@prec+1)& (0+255),w,b
  9052  011C7A  A4D8               	btfss	status,2,c
  9053  011C7C  D00D               	goto	l9223
  9054                           
  9055                           ; BSR set to: 1
  9056  011C7E  0101               	movlb	1	; () banked
  9057  011C80  5155               	movf	sprintf@val& (0+255),w,b
  9058  011C82  0101               	movlb	1	; () banked
  9059  011C84  1156               	iorwf	(sprintf@val+1)& (0+255),w,b
  9060  011C86  0101               	movlb	1	; () banked
  9061  011C88  1157               	iorwf	(sprintf@val+2)& (0+255),w,b
  9062  011C8A  0101               	movlb	1	; () banked
  9063  011C8C  1158               	iorwf	(sprintf@val+3)& (0+255),w,b
  9064  011C8E  A4D8               	btfss	status,2,c
  9065  011C90  D003               	goto	l9223
  9066                           
  9067                           ; BSR set to: 1
  9068                           ;doprnt.c: 1291: prec++;
  9069  011C92  0101               	movlb	1	; () banked
  9070  011C94  4B5F               	infsnz	sprintf@prec& (0+255),f,b
  9071  011C96  2B60               	incf	(sprintf@prec+1)& (0+255),f,b
  9072  011C98                     l9223:
  9073                           
  9074                           ; BSR set to: 1
  9075                           ;doprnt.c: 1339: if(c < prec)
  9076  011C98  0E80               	movlw	128
  9077  011C9A  0101               	movlb	1	; () banked
  9078  011C9C  BF65               	btfsc	sprintf@c& (0+255),7,b
  9079  011C9E  0E7F               	movlw	127
  9080  011CA0  0100               	movlb	0	; () banked
  9081  011CA2  6FCB               	movwf	??_sprintf& (0+255),b
  9082  011CA4  0101               	movlb	1	; () banked
  9083  011CA6  515F               	movf	sprintf@prec& (0+255),w,b
  9084  011CA8  0101               	movlb	1	; () banked
  9085  011CAA  5D65               	subwf	sprintf@c& (0+255),w,b
  9086  011CAC  0101               	movlb	1	; () banked
  9087  011CAE  5160               	movf	(sprintf@prec+1)& (0+255),w,b
  9088  011CB0  0A80               	xorlw	128
  9089  011CB2  0100               	movlb	0	; () banked
  9090  011CB4  59CB               	subwfb	??_sprintf& (0+255),w,b
  9091  011CB6  B0D8               	btfsc	status,0,c
  9092  011CB8  D003               	goto	l9227
  9093                           
  9094                           ; BSR set to: 0
  9095                           ;doprnt.c: 1340: c = prec;
  9096  011CBA  C15F  F165         	movff	sprintf@prec,sprintf@c
  9097  011CBE  D018               	goto	l9231
  9098  011CC0                     l9227:
  9099                           
  9100                           ; BSR set to: 0
  9101                           ;doprnt.c: 1341: else if(prec < c)
  9102  011CC0  0101               	movlb	1	; () banked
  9103  011CC2  5160               	movf	(sprintf@prec+1)& (0+255),w,b
  9104  011CC4  0A80               	xorlw	128
  9105  011CC6  0100               	movlb	0	; () banked
  9106  011CC8  6FCB               	movwf	??_sprintf& (0+255),b
  9107  011CCA  0101               	movlb	1	; () banked
  9108  011CCC  5165               	movf	sprintf@c& (0+255),w,b
  9109  011CCE  0101               	movlb	1	; () banked
  9110  011CD0  5D5F               	subwf	sprintf@prec& (0+255),w,b
  9111  011CD2  0E80               	movlw	128
  9112  011CD4  0101               	movlb	1	; () banked
  9113  011CD6  BF65               	btfsc	sprintf@c& (0+255),7,b
  9114  011CD8  0E7F               	movlw	127
  9115  011CDA  0100               	movlb	0	; () banked
  9116  011CDC  59CB               	subwfb	??_sprintf& (0+255),w,b
  9117  011CDE  B0D8               	btfsc	status,0,c
  9118  011CE0  D007               	goto	l9231
  9119                           
  9120                           ; BSR set to: 0
  9121                           ;doprnt.c: 1342: prec = c;
  9122  011CE2  0101               	movlb	1	; () banked
  9123  011CE4  5165               	movf	sprintf@c& (0+255),w,b
  9124  011CE6  0101               	movlb	1	; () banked
  9125  011CE8  6F5F               	movwf	sprintf@prec& (0+255),b
  9126  011CEA  6B60               	clrf	(sprintf@prec+1)& (0+255),b
  9127  011CEC  BF5F               	btfsc	sprintf@prec& (0+255),7,b
  9128  011CEE  0760               	decf	(sprintf@prec+1)& (0+255),f,b
  9129  011CF0                     l9231:
  9130                           
  9131                           ;doprnt.c: 1422: {
  9132                           ;doprnt.c: 1438: if(flag & 0x03)
  9133  011CF0  0E03               	movlw	3
  9134  011CF2  0101               	movlb	1	; () banked
  9135  011CF4  1553               	andwf	sprintf@flag& (0+255),w,b
  9136  011CF6  0100               	movlb	0	; () banked
  9137  011CF8  6FCB               	movwf	??_sprintf& (0+255),b
  9138  011CFA  0E00               	movlw	0
  9139  011CFC  0101               	movlb	1	; () banked
  9140  011CFE  1554               	andwf	(sprintf@flag+1)& (0+255),w,b
  9141  011D00  0100               	movlb	0	; () banked
  9142  011D02  6FCC               	movwf	(??_sprintf+1)& (0+255),b
  9143  011D04  0100               	movlb	0	; () banked
  9144  011D06  51CB               	movf	??_sprintf& (0+255),w,b
  9145  011D08  0100               	movlb	0	; () banked
  9146  011D0A  11CC               	iorwf	(??_sprintf+1)& (0+255),w,b
  9147  011D0C  B4D8               	btfsc	status,2,c
  9148  011D0E  D009               	goto	l9237
  9149                           
  9150                           ; BSR set to: 0
  9151                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  9152  011D10  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  9153  011D14  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  9154  011D18  0E2D               	movlw	45
  9155  011D1A  6EDF               	movwf	indf2,c
  9156  011D1C                     l9235:
  9157                           
  9158                           ; BSR set to: 0
  9159  011D1C  0100               	movlb	0	; () banked
  9160  011D1E  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  9161  011D20  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  9162  011D22                     l9237:
  9163  011D22  C0C5  FFF6         	movff	sprintf@f,tblptrl
  9164  011D26  C0C6  FFF7         	movff	sprintf@f+1,tblptrh
  9165  011D2A  0100               	movlb	0	; () banked
  9166  011D2C  4BC5               	infsnz	sprintf@f& (0+255),f,b
  9167  011D2E  2BC6               	incf	(sprintf@f+1)& (0+255),f,b
  9168  011D30                     	if	0	;tblptru may be non-zero
  9169  011D30                     	endif
  9170  011D30                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9171  011D30  0E00               	movlw	low (__mediumconst shr (0+16))
  9172  011D32  6EF8               	movwf	tblptru,c
  9173  011D34                     	endif
  9174  011D34  0008               	tblrd		*
  9175  011D36  CFF5 F165          	movff	tablat,sprintf@c
  9176  011D3A  0101               	movlb	1	; () banked
  9177  011D3C  5165               	movf	sprintf@c& (0+255),w,b
  9178  011D3E  A4D8               	btfss	status,2,c
  9179  011D40  EF67  F08A         	goto	l9039
  9180  011D44                     l9239:
  9181                           
  9182                           ; BSR set to: 1
  9183                           ;doprnt.c: 1538: *sp = 0;
  9184  011D44  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  9185  011D48  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  9186  011D4C  0E00               	movlw	0
  9187  011D4E  6EDF               	movwf	indf2,c
  9188  011D50  0012               	return	
  9189  011D52                     __end_of_sprintf:
  9190                           	opt stack 0
  9191                           tblptru	equ	0xFF8
  9192                           tblptrh	equ	0xFF7
  9193                           tblptrl	equ	0xFF6
  9194                           tablat	equ	0xFF5
  9195                           prodh	equ	0xFF4
  9196                           prodl	equ	0xFF3
  9197                           intcon	equ	0xFF2
  9198                           postinc0	equ	0xFEE
  9199                           wreg	equ	0xFE8
  9200                           indf2	equ	0xFDF
  9201                           postinc2	equ	0xFDE
  9202                           fsr2h	equ	0xFDA
  9203                           fsr2l	equ	0xFD9
  9204                           status	equ	0xFD8
  9205                           
  9206 ;; *************** function _scale *****************
  9207 ;; Defined at:
  9208 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  9209 ;; Parameters:    Size  Location     Type
  9210 ;;  scl             1    wreg     char 
  9211 ;; Auto vars:     Size  Location     Type
  9212 ;;  scl             1   64[BANK0 ] char 
  9213 ;; Return value:  Size  Location     Type
  9214 ;;                  4   56[BANK0 ] char 
  9215 ;; Registers used:
  9216 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9217 ;; Tracked objects:
  9218 ;;		On entry : 0/0
  9219 ;;		On exit  : 0/0
  9220 ;;		Unchanged: 0/0
  9221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9222 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9223 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9225 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9226 ;;Total ram usage:        9 bytes
  9227 ;; Hardware stack levels used:    1
  9228 ;; Hardware stack levels required when called:    4
  9229 ;; This function calls:
  9230 ;;		___awdiv
  9231 ;;		___awmod
  9232 ;;		___flmul
  9233 ;; This function is called by:
  9234 ;;		_sprintf
  9235 ;; This function uses a non-reentrant model
  9236 ;;
  9237                           
  9238                           	psect	text11
  9239  012B6E                     __ptext11:
  9240                           	opt stack 0
  9241  012B6E                     _scale:
  9242                           	opt stack 24
  9243                           
  9244                           ; BSR set to: 1
  9245                           ;incstack = 0
  9246                           ;scale@scl stored from wreg
  9247  012B6E  0100               	movlb	0	; () banked
  9248  012B70  6FA0               	movwf	scale@scl& (0+255),b
  9249                           
  9250                           ;doprnt.c: 428: if(scl < 0) {
  9251  012B72  0100               	movlb	0	; () banked
  9252  012B74  AFA0               	btfss	scale@scl& (0+255),7,b
  9253  012B76  D145               	goto	l8647
  9254                           
  9255                           ; BSR set to: 0
  9256                           ;doprnt.c: 429: scl = -scl;
  9257  012B78  0100               	movlb	0	; () banked
  9258  012B7A  6DA0               	negf	scale@scl& (0+255),b
  9259                           
  9260                           ;doprnt.c: 430: if(scl>=110)
  9261  012B7C  0100               	movlb	0	; () banked
  9262  012B7E  51A0               	movf	scale@scl& (0+255),w,b
  9263  012B80  0A80               	xorlw	128
  9264  012B82  0F12               	addlw	-238
  9265  012B84  A0D8               	btfss	status,0,c
  9266  012B86  D0BB               	goto	l8637
  9267                           
  9268                           ; BSR set to: 0
  9269                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  9270  012B88  0E00               	movlw	0
  9271  012B8A  0100               	movlb	0	; () banked
  9272  012B8C  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  9273  012B8E  0E0A               	movlw	10
  9274  012B90  6F79               	movwf	___awdiv@divisor& (0+255),b
  9275  012B92  0E00               	movlw	0
  9276  012B94  0100               	movlb	0	; () banked
  9277  012B96  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9278  012B98  0E64               	movlw	100
  9279  012B9A  6F73               	movwf	___awmod@divisor& (0+255),b
  9280  012B9C  0100               	movlb	0	; () banked
  9281  012B9E  51A0               	movf	scale@scl& (0+255),w,b
  9282  012BA0  0100               	movlb	0	; () banked
  9283  012BA2  6F71               	movwf	___awmod@dividend& (0+255),b
  9284  012BA4  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9285  012BA6  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  9286  012BA8  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  9287  012BAA  EC96  F0AF         	call	___awmod	;wreg free
  9288  012BAE  C071  F077         	movff	?___awmod,___awdiv@dividend
  9289  012BB2  C072  F078         	movff	?___awmod+1,___awdiv@dividend+1
  9290  012BB6  ECCB  F0AD         	call	___awdiv	;wreg free
  9291  012BBA  0100               	movlb	0	; () banked
  9292  012BBC  90D8               	bcf	status,0,c
  9293  012BBE  3777               	rlcf	?___awdiv& (0+255),f,b
  9294  012BC0  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9295  012BC2  0100               	movlb	0	; () banked
  9296  012BC4  90D8               	bcf	status,0,c
  9297  012BC6  3777               	rlcf	?___awdiv& (0+255),f,b
  9298  012BC8  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9299  012BCA  0E24               	movlw	36
  9300  012BCC  0100               	movlb	0	; () banked
  9301  012BCE  2777               	addwf	?___awdiv& (0+255),f,b
  9302  012BD0  0E00               	movlw	0
  9303  012BD2  0100               	movlb	0	; () banked
  9304  012BD4  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  9305  012BD6  0ECD               	movlw	low __npowers_
  9306  012BD8  0100               	movlb	0	; () banked
  9307  012BDA  2577               	addwf	?___awdiv& (0+255),w,b
  9308  012BDC  6EF6               	movwf	tblptrl,c
  9309  012BDE  0EFC               	movlw	high __npowers_
  9310  012BE0  0100               	movlb	0	; () banked
  9311  012BE2  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  9312  012BE4  6EF7               	movwf	tblptrh,c
  9313  012BE6                     	if	1	;There are 3 active tblptr bytes
  9314  012BE6  6AF8               	clrf	tblptru,c
  9315  012BE8  0E00               	movlw	low (__mediumconst shr (0+16))
  9316  012BEA  22F8               	addwfc	tblptru,f,c
  9317  012BEC                     	endif
  9318  012BEC  0009               	tblrd		*+
  9319  012BEE  CFF5 F083          	movff	tablat,___flmul@a
  9320  012BF2  0009               	tblrd		*+
  9321  012BF4  CFF5 F084          	movff	tablat,___flmul@a+1
  9322  012BF8  0009               	tblrd		*+
  9323  012BFA  CFF5 F085          	movff	tablat,___flmul@a+2
  9324  012BFE  000A               	tblrd		*-
  9325  012C00  CFF5 F086          	movff	tablat,___flmul@a+3
  9326  012C04  0E00               	movlw	0
  9327  012C06  0100               	movlb	0	; () banked
  9328  012C08  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  9329  012C0A  0E64               	movlw	100
  9330  012C0C  6F79               	movwf	___awdiv@divisor& (0+255),b
  9331  012C0E  0100               	movlb	0	; () banked
  9332  012C10  51A0               	movf	scale@scl& (0+255),w,b
  9333  012C12  0100               	movlb	0	; () banked
  9334  012C14  6F77               	movwf	___awdiv@dividend& (0+255),b
  9335  012C16  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  9336  012C18  BF77               	btfsc	___awdiv@dividend& (0+255),7,b
  9337  012C1A  0778               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9338  012C1C  ECCB  F0AD         	call	___awdiv	;wreg free
  9339  012C20  0100               	movlb	0	; () banked
  9340  012C22  90D8               	bcf	status,0,c
  9341  012C24  3777               	rlcf	?___awdiv& (0+255),f,b
  9342  012C26  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9343  012C28  0100               	movlb	0	; () banked
  9344  012C2A  90D8               	bcf	status,0,c
  9345  012C2C  3777               	rlcf	?___awdiv& (0+255),f,b
  9346  012C2E  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9347  012C30  0E48               	movlw	72
  9348  012C32  0100               	movlb	0	; () banked
  9349  012C34  2777               	addwf	?___awdiv& (0+255),f,b
  9350  012C36  0E00               	movlw	0
  9351  012C38  0100               	movlb	0	; () banked
  9352  012C3A  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  9353  012C3C  0ECD               	movlw	low __npowers_
  9354  012C3E  0100               	movlb	0	; () banked
  9355  012C40  2577               	addwf	?___awdiv& (0+255),w,b
  9356  012C42  6EF6               	movwf	tblptrl,c
  9357  012C44  0EFC               	movlw	high __npowers_
  9358  012C46  0100               	movlb	0	; () banked
  9359  012C48  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  9360  012C4A  6EF7               	movwf	tblptrh,c
  9361  012C4C                     	if	1	;There are 3 active tblptr bytes
  9362  012C4C  6AF8               	clrf	tblptru,c
  9363  012C4E  0E00               	movlw	low (__mediumconst shr (0+16))
  9364  012C50  22F8               	addwfc	tblptru,f,c
  9365  012C52                     	endif
  9366  012C52  0009               	tblrd		*+
  9367  012C54  CFF5 F07F          	movff	tablat,___flmul@b
  9368  012C58  0009               	tblrd		*+
  9369  012C5A  CFF5 F080          	movff	tablat,___flmul@b+1
  9370  012C5E  0009               	tblrd		*+
  9371  012C60  CFF5 F081          	movff	tablat,___flmul@b+2
  9372  012C64  000A               	tblrd		*-
  9373  012C66  CFF5 F082          	movff	tablat,___flmul@b+3
  9374  012C6A  EC1E  F09D         	call	___flmul	;wreg free
  9375  012C6E  C07F  F09C         	movff	?___flmul,_scale$4193
  9376  012C72  C080  F09D         	movff	?___flmul+1,_scale$4193+1
  9377  012C76  C081  F09E         	movff	?___flmul+2,_scale$4193+2
  9378  012C7A  C082  F09F         	movff	?___flmul+3,_scale$4193+3
  9379                           
  9380                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  9381  012C7E  C09C  F07F         	movff	_scale$4193,___flmul@b
  9382  012C82  C09D  F080         	movff	_scale$4193+1,___flmul@b+1
  9383  012C86  C09E  F081         	movff	_scale$4193+2,___flmul@b+2
  9384  012C8A  C09F  F082         	movff	_scale$4193+3,___flmul@b+3
  9385  012C8E  0E00               	movlw	0
  9386  012C90  0100               	movlb	0	; () banked
  9387  012C92  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9388  012C94  0E0A               	movlw	10
  9389  012C96  6F73               	movwf	___awmod@divisor& (0+255),b
  9390  012C98  0100               	movlb	0	; () banked
  9391  012C9A  51A0               	movf	scale@scl& (0+255),w,b
  9392  012C9C  0100               	movlb	0	; () banked
  9393  012C9E  6F71               	movwf	___awmod@dividend& (0+255),b
  9394  012CA0  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9395  012CA2  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  9396  012CA4  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  9397  012CA6  EC96  F0AF         	call	___awmod	;wreg free
  9398  012CAA  0100               	movlb	0	; () banked
  9399  012CAC  90D8               	bcf	status,0,c
  9400  012CAE  3771               	rlcf	?___awmod& (0+255),f,b
  9401  012CB0  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  9402  012CB2  0100               	movlb	0	; () banked
  9403  012CB4  90D8               	bcf	status,0,c
  9404  012CB6  3771               	rlcf	?___awmod& (0+255),f,b
  9405  012CB8  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  9406  012CBA  0ECD               	movlw	low __npowers_
  9407  012CBC  0100               	movlb	0	; () banked
  9408  012CBE  2571               	addwf	?___awmod& (0+255),w,b
  9409  012CC0  6EF6               	movwf	tblptrl,c
  9410  012CC2  0EFC               	movlw	high __npowers_
  9411  012CC4  0100               	movlb	0	; () banked
  9412  012CC6  2172               	addwfc	(?___awmod+1)& (0+255),w,b
  9413  012CC8  6EF7               	movwf	tblptrh,c
  9414  012CCA                     	if	1	;There are 3 active tblptr bytes
  9415  012CCA  6AF8               	clrf	tblptru,c
  9416  012CCC  0E00               	movlw	low (__mediumconst shr (0+16))
  9417  012CCE  22F8               	addwfc	tblptru,f,c
  9418  012CD0                     	endif
  9419  012CD0  0009               	tblrd		*+
  9420  012CD2  CFF5 F083          	movff	tablat,___flmul@a
  9421  012CD6  0009               	tblrd		*+
  9422  012CD8  CFF5 F084          	movff	tablat,___flmul@a+1
  9423  012CDC  0009               	tblrd		*+
  9424  012CDE  CFF5 F085          	movff	tablat,___flmul@a+2
  9425  012CE2  000A               	tblrd		*-
  9426  012CE4  CFF5 F086          	movff	tablat,___flmul@a+3
  9427  012CE8  EC1E  F09D         	call	___flmul	;wreg free
  9428  012CEC  C07F  F098         	movff	?___flmul,?_scale
  9429  012CF0  C080  F099         	movff	?___flmul+1,?_scale+1
  9430  012CF4  C081  F09A         	movff	?___flmul+2,?_scale+2
  9431  012CF8  C082  F09B         	movff	?___flmul+3,?_scale+3
  9432  012CFC  0012               	return	
  9433  012CFE                     l8637:
  9434                           
  9435                           ;doprnt.c: 432: else if(scl > 10)
  9436  012CFE  0100               	movlb	0	; () banked
  9437  012D00  51A0               	movf	scale@scl& (0+255),w,b
  9438  012D02  0A80               	xorlw	128
  9439  012D04  0F75               	addlw	-139
  9440  012D06  A0D8               	btfss	status,0,c
  9441  012D08  D063               	goto	l8643
  9442                           
  9443                           ; BSR set to: 0
  9444                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  9445  012D0A  0E00               	movlw	0
  9446  012D0C  0100               	movlb	0	; () banked
  9447  012D0E  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  9448  012D10  0E0A               	movlw	10
  9449  012D12  6F79               	movwf	___awdiv@divisor& (0+255),b
  9450  012D14  0100               	movlb	0	; () banked
  9451  012D16  51A0               	movf	scale@scl& (0+255),w,b
  9452  012D18  0100               	movlb	0	; () banked
  9453  012D1A  6F77               	movwf	___awdiv@dividend& (0+255),b
  9454  012D1C  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  9455  012D1E  BF77               	btfsc	___awdiv@dividend& (0+255),7,b
  9456  012D20  0778               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9457  012D22  ECCB  F0AD         	call	___awdiv	;wreg free
  9458  012D26  0100               	movlb	0	; () banked
  9459  012D28  90D8               	bcf	status,0,c
  9460  012D2A  3777               	rlcf	?___awdiv& (0+255),f,b
  9461  012D2C  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9462  012D2E  0100               	movlb	0	; () banked
  9463  012D30  90D8               	bcf	status,0,c
  9464  012D32  3777               	rlcf	?___awdiv& (0+255),f,b
  9465  012D34  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9466  012D36  0E24               	movlw	36
  9467  012D38  0100               	movlb	0	; () banked
  9468  012D3A  2777               	addwf	?___awdiv& (0+255),f,b
  9469  012D3C  0E00               	movlw	0
  9470  012D3E  0100               	movlb	0	; () banked
  9471  012D40  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  9472  012D42  0ECD               	movlw	low __npowers_
  9473  012D44  0100               	movlb	0	; () banked
  9474  012D46  2577               	addwf	?___awdiv& (0+255),w,b
  9475  012D48  6EF6               	movwf	tblptrl,c
  9476  012D4A  0EFC               	movlw	high __npowers_
  9477  012D4C  0100               	movlb	0	; () banked
  9478  012D4E  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  9479  012D50  6EF7               	movwf	tblptrh,c
  9480  012D52                     	if	1	;There are 3 active tblptr bytes
  9481  012D52  6AF8               	clrf	tblptru,c
  9482  012D54  0E00               	movlw	low (__mediumconst shr (0+16))
  9483  012D56  22F8               	addwfc	tblptru,f,c
  9484  012D58                     	endif
  9485  012D58  0009               	tblrd		*+
  9486  012D5A  CFF5 F07F          	movff	tablat,___flmul@b
  9487  012D5E  0009               	tblrd		*+
  9488  012D60  CFF5 F080          	movff	tablat,___flmul@b+1
  9489  012D64  0009               	tblrd		*+
  9490  012D66  CFF5 F081          	movff	tablat,___flmul@b+2
  9491  012D6A  000A               	tblrd		*-
  9492  012D6C  CFF5 F082          	movff	tablat,___flmul@b+3
  9493  012D70  0E00               	movlw	0
  9494  012D72  0100               	movlb	0	; () banked
  9495  012D74  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9496  012D76  0E0A               	movlw	10
  9497  012D78  6F73               	movwf	___awmod@divisor& (0+255),b
  9498  012D7A  0100               	movlb	0	; () banked
  9499  012D7C  51A0               	movf	scale@scl& (0+255),w,b
  9500  012D7E  0100               	movlb	0	; () banked
  9501  012D80  6F71               	movwf	___awmod@dividend& (0+255),b
  9502  012D82  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9503  012D84  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  9504  012D86  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  9505  012D88  EC96  F0AF         	call	___awmod	;wreg free
  9506  012D8C  0100               	movlb	0	; () banked
  9507  012D8E  90D8               	bcf	status,0,c
  9508  012D90  3771               	rlcf	?___awmod& (0+255),f,b
  9509  012D92  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  9510  012D94  0100               	movlb	0	; () banked
  9511  012D96  90D8               	bcf	status,0,c
  9512  012D98  3771               	rlcf	?___awmod& (0+255),f,b
  9513  012D9A  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  9514  012D9C  0ECD               	movlw	low __npowers_
  9515  012D9E  0100               	movlb	0	; () banked
  9516  012DA0  2571               	addwf	?___awmod& (0+255),w,b
  9517  012DA2  6EF6               	movwf	tblptrl,c
  9518  012DA4  0EFC               	movlw	high __npowers_
  9519  012DA6  0100               	movlb	0	; () banked
  9520  012DA8  2172               	addwfc	(?___awmod+1)& (0+255),w,b
  9521  012DAA  6EF7               	movwf	tblptrh,c
  9522  012DAC                     	if	1	;There are 3 active tblptr bytes
  9523  012DAC  6AF8               	clrf	tblptru,c
  9524  012DAE  0E00               	movlw	low (__mediumconst shr (0+16))
  9525  012DB0  22F8               	addwfc	tblptru,f,c
  9526  012DB2                     	endif
  9527  012DB2  0009               	tblrd		*+
  9528  012DB4  CFF5 F083          	movff	tablat,___flmul@a
  9529  012DB8  0009               	tblrd		*+
  9530  012DBA  CFF5 F084          	movff	tablat,___flmul@a+1
  9531  012DBE  0009               	tblrd		*+
  9532  012DC0  CFF5 F085          	movff	tablat,___flmul@a+2
  9533  012DC4  000A               	tblrd		*-
  9534  012DC6  CFF5 F086          	movff	tablat,___flmul@a+3
  9535  012DCA  EC1E  F09D         	call	___flmul	;wreg free
  9536  012DCE  D78E               	goto	L8
  9537  012DD0                     l8643:
  9538                           
  9539                           ;doprnt.c: 434: return _npowers_[scl];
  9540  012DD0  0100               	movlb	0	; () banked
  9541  012DD2  51A0               	movf	scale@scl& (0+255),w,b
  9542  012DD4  0D04               	mullw	4
  9543  012DD6  0ECD               	movlw	low __npowers_
  9544  012DD8  24F3               	addwf	prodl,w,c
  9545  012DDA  6EF6               	movwf	tblptrl,c
  9546  012DDC  0EFC               	movlw	high __npowers_
  9547  012DDE  20F4               	addwfc	prodh,w,c
  9548  012DE0  6EF7               	movwf	tblptrh,c
  9549  012DE2                     	if	1	;There are 3 active tblptr bytes
  9550  012DE2  6AF8               	clrf	tblptru,c
  9551  012DE4  0E00               	movlw	low (__mediumconst shr (0+16))
  9552  012DE6  22F8               	addwfc	tblptru,f,c
  9553  012DE8                     	endif
  9554  012DE8  0009               	tblrd		*+
  9555  012DEA  CFF5 F098          	movff	tablat,?_scale
  9556  012DEE  0009               	tblrd		*+
  9557  012DF0  CFF5 F099          	movff	tablat,?_scale+1
  9558  012DF4  0009               	tblrd		*+
  9559  012DF6  CFF5 F09A          	movff	tablat,?_scale+2
  9560  012DFA  000A               	tblrd		*-
  9561  012DFC  CFF5 F09B          	movff	tablat,?_scale+3
  9562                           
  9563                           ; BSR set to: 0
  9564  012E00  0012               	return	
  9565  012E02                     l8647:
  9566                           
  9567                           ; BSR set to: 0
  9568                           ;doprnt.c: 435: }
  9569                           ;doprnt.c: 436: if(scl>=110)
  9570  012E02  0100               	movlb	0	; () banked
  9571  012E04  51A0               	movf	scale@scl& (0+255),w,b
  9572  012E06  0A80               	xorlw	128
  9573  012E08  0F12               	addlw	-238
  9574  012E0A  A0D8               	btfss	status,0,c
  9575  012E0C  D0BB               	goto	l8655
  9576                           
  9577                           ; BSR set to: 0
  9578                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  9579  012E0E  0E00               	movlw	0
  9580  012E10  0100               	movlb	0	; () banked
  9581  012E12  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  9582  012E14  0E0A               	movlw	10
  9583  012E16  6F79               	movwf	___awdiv@divisor& (0+255),b
  9584  012E18  0E00               	movlw	0
  9585  012E1A  0100               	movlb	0	; () banked
  9586  012E1C  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9587  012E1E  0E64               	movlw	100
  9588  012E20  6F73               	movwf	___awmod@divisor& (0+255),b
  9589  012E22  0100               	movlb	0	; () banked
  9590  012E24  51A0               	movf	scale@scl& (0+255),w,b
  9591  012E26  0100               	movlb	0	; () banked
  9592  012E28  6F71               	movwf	___awmod@dividend& (0+255),b
  9593  012E2A  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9594  012E2C  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  9595  012E2E  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  9596  012E30  EC96  F0AF         	call	___awmod	;wreg free
  9597  012E34  C071  F077         	movff	?___awmod,___awdiv@dividend
  9598  012E38  C072  F078         	movff	?___awmod+1,___awdiv@dividend+1
  9599  012E3C  ECCB  F0AD         	call	___awdiv	;wreg free
  9600  012E40  0100               	movlb	0	; () banked
  9601  012E42  90D8               	bcf	status,0,c
  9602  012E44  3777               	rlcf	?___awdiv& (0+255),f,b
  9603  012E46  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9604  012E48  0100               	movlb	0	; () banked
  9605  012E4A  90D8               	bcf	status,0,c
  9606  012E4C  3777               	rlcf	?___awdiv& (0+255),f,b
  9607  012E4E  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9608  012E50  0E24               	movlw	36
  9609  012E52  0100               	movlb	0	; () banked
  9610  012E54  2777               	addwf	?___awdiv& (0+255),f,b
  9611  012E56  0E00               	movlw	0
  9612  012E58  0100               	movlb	0	; () banked
  9613  012E5A  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  9614  012E5C  0E01               	movlw	low __powers_
  9615  012E5E  0100               	movlb	0	; () banked
  9616  012E60  2577               	addwf	?___awdiv& (0+255),w,b
  9617  012E62  6EF6               	movwf	tblptrl,c
  9618  012E64  0EFD               	movlw	high __powers_
  9619  012E66  0100               	movlb	0	; () banked
  9620  012E68  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  9621  012E6A  6EF7               	movwf	tblptrh,c
  9622  012E6C                     	if	1	;There are 3 active tblptr bytes
  9623  012E6C  6AF8               	clrf	tblptru,c
  9624  012E6E  0E00               	movlw	low (__mediumconst shr (0+16))
  9625  012E70  22F8               	addwfc	tblptru,f,c
  9626  012E72                     	endif
  9627  012E72  0009               	tblrd		*+
  9628  012E74  CFF5 F083          	movff	tablat,___flmul@a
  9629  012E78  0009               	tblrd		*+
  9630  012E7A  CFF5 F084          	movff	tablat,___flmul@a+1
  9631  012E7E  0009               	tblrd		*+
  9632  012E80  CFF5 F085          	movff	tablat,___flmul@a+2
  9633  012E84  000A               	tblrd		*-
  9634  012E86  CFF5 F086          	movff	tablat,___flmul@a+3
  9635  012E8A  0E00               	movlw	0
  9636  012E8C  0100               	movlb	0	; () banked
  9637  012E8E  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  9638  012E90  0E64               	movlw	100
  9639  012E92  6F79               	movwf	___awdiv@divisor& (0+255),b
  9640  012E94  0100               	movlb	0	; () banked
  9641  012E96  51A0               	movf	scale@scl& (0+255),w,b
  9642  012E98  0100               	movlb	0	; () banked
  9643  012E9A  6F77               	movwf	___awdiv@dividend& (0+255),b
  9644  012E9C  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  9645  012E9E  BF77               	btfsc	___awdiv@dividend& (0+255),7,b
  9646  012EA0  0778               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9647  012EA2  ECCB  F0AD         	call	___awdiv	;wreg free
  9648  012EA6  0100               	movlb	0	; () banked
  9649  012EA8  90D8               	bcf	status,0,c
  9650  012EAA  3777               	rlcf	?___awdiv& (0+255),f,b
  9651  012EAC  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9652  012EAE  0100               	movlb	0	; () banked
  9653  012EB0  90D8               	bcf	status,0,c
  9654  012EB2  3777               	rlcf	?___awdiv& (0+255),f,b
  9655  012EB4  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9656  012EB6  0E48               	movlw	72
  9657  012EB8  0100               	movlb	0	; () banked
  9658  012EBA  2777               	addwf	?___awdiv& (0+255),f,b
  9659  012EBC  0E00               	movlw	0
  9660  012EBE  0100               	movlb	0	; () banked
  9661  012EC0  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  9662  012EC2  0E01               	movlw	low __powers_
  9663  012EC4  0100               	movlb	0	; () banked
  9664  012EC6  2577               	addwf	?___awdiv& (0+255),w,b
  9665  012EC8  6EF6               	movwf	tblptrl,c
  9666  012ECA  0EFD               	movlw	high __powers_
  9667  012ECC  0100               	movlb	0	; () banked
  9668  012ECE  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  9669  012ED0  6EF7               	movwf	tblptrh,c
  9670  012ED2                     	if	1	;There are 3 active tblptr bytes
  9671  012ED2  6AF8               	clrf	tblptru,c
  9672  012ED4  0E00               	movlw	low (__mediumconst shr (0+16))
  9673  012ED6  22F8               	addwfc	tblptru,f,c
  9674  012ED8                     	endif
  9675  012ED8  0009               	tblrd		*+
  9676  012EDA  CFF5 F07F          	movff	tablat,___flmul@b
  9677  012EDE  0009               	tblrd		*+
  9678  012EE0  CFF5 F080          	movff	tablat,___flmul@b+1
  9679  012EE4  0009               	tblrd		*+
  9680  012EE6  CFF5 F081          	movff	tablat,___flmul@b+2
  9681  012EEA  000A               	tblrd		*-
  9682  012EEC  CFF5 F082          	movff	tablat,___flmul@b+3
  9683  012EF0  EC1E  F09D         	call	___flmul	;wreg free
  9684  012EF4  C07F  F09C         	movff	?___flmul,_scale$4193
  9685  012EF8  C080  F09D         	movff	?___flmul+1,_scale$4193+1
  9686  012EFC  C081  F09E         	movff	?___flmul+2,_scale$4193+2
  9687  012F00  C082  F09F         	movff	?___flmul+3,_scale$4193+3
  9688                           
  9689                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  9690  012F04  C09C  F07F         	movff	_scale$4193,___flmul@b
  9691  012F08  C09D  F080         	movff	_scale$4193+1,___flmul@b+1
  9692  012F0C  C09E  F081         	movff	_scale$4193+2,___flmul@b+2
  9693  012F10  C09F  F082         	movff	_scale$4193+3,___flmul@b+3
  9694  012F14  0E00               	movlw	0
  9695  012F16  0100               	movlb	0	; () banked
  9696  012F18  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9697  012F1A  0E0A               	movlw	10
  9698  012F1C  6F73               	movwf	___awmod@divisor& (0+255),b
  9699  012F1E  0100               	movlb	0	; () banked
  9700  012F20  51A0               	movf	scale@scl& (0+255),w,b
  9701  012F22  0100               	movlb	0	; () banked
  9702  012F24  6F71               	movwf	___awmod@dividend& (0+255),b
  9703  012F26  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9704  012F28  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  9705  012F2A  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  9706  012F2C  EC96  F0AF         	call	___awmod	;wreg free
  9707  012F30  0100               	movlb	0	; () banked
  9708  012F32  90D8               	bcf	status,0,c
  9709  012F34  3771               	rlcf	?___awmod& (0+255),f,b
  9710  012F36  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  9711  012F38  0100               	movlb	0	; () banked
  9712  012F3A  90D8               	bcf	status,0,c
  9713  012F3C  3771               	rlcf	?___awmod& (0+255),f,b
  9714  012F3E  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  9715  012F40  0E01               	movlw	low __powers_
  9716  012F42  0100               	movlb	0	; () banked
  9717  012F44  2571               	addwf	?___awmod& (0+255),w,b
  9718  012F46  6EF6               	movwf	tblptrl,c
  9719  012F48  0EFD               	movlw	high __powers_
  9720  012F4A  0100               	movlb	0	; () banked
  9721  012F4C  2172               	addwfc	(?___awmod+1)& (0+255),w,b
  9722  012F4E  6EF7               	movwf	tblptrh,c
  9723  012F50                     	if	1	;There are 3 active tblptr bytes
  9724  012F50  6AF8               	clrf	tblptru,c
  9725  012F52  0E00               	movlw	low (__mediumconst shr (0+16))
  9726  012F54  22F8               	addwfc	tblptru,f,c
  9727  012F56                     	endif
  9728  012F56  0009               	tblrd		*+
  9729  012F58  CFF5 F083          	movff	tablat,___flmul@a
  9730  012F5C  0009               	tblrd		*+
  9731  012F5E  CFF5 F084          	movff	tablat,___flmul@a+1
  9732  012F62  0009               	tblrd		*+
  9733  012F64  CFF5 F085          	movff	tablat,___flmul@a+2
  9734  012F68  000A               	tblrd		*-
  9735  012F6A  CFF5 F086          	movff	tablat,___flmul@a+3
  9736  012F6E  EC1E  F09D         	call	___flmul	;wreg free
  9737  012F72  C07F  F098         	movff	?___flmul,?_scale
  9738  012F76  C080  F099         	movff	?___flmul+1,?_scale+1
  9739  012F7A  C081  F09A         	movff	?___flmul+2,?_scale+2
  9740  012F7E  C082  F09B         	movff	?___flmul+3,?_scale+3
  9741  012F82  0012               	return	
  9742  012F84                     l8655:
  9743                           
  9744                           ;doprnt.c: 438: else if(scl > 10)
  9745  012F84  0100               	movlb	0	; () banked
  9746  012F86  51A0               	movf	scale@scl& (0+255),w,b
  9747  012F88  0A80               	xorlw	128
  9748  012F8A  0F75               	addlw	-139
  9749  012F8C  A0D8               	btfss	status,0,c
  9750  012F8E  D063               	goto	l8661
  9751                           
  9752                           ; BSR set to: 0
  9753                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  9754  012F90  0E00               	movlw	0
  9755  012F92  0100               	movlb	0	; () banked
  9756  012F94  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  9757  012F96  0E0A               	movlw	10
  9758  012F98  6F79               	movwf	___awdiv@divisor& (0+255),b
  9759  012F9A  0100               	movlb	0	; () banked
  9760  012F9C  51A0               	movf	scale@scl& (0+255),w,b
  9761  012F9E  0100               	movlb	0	; () banked
  9762  012FA0  6F77               	movwf	___awdiv@dividend& (0+255),b
  9763  012FA2  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  9764  012FA4  BF77               	btfsc	___awdiv@dividend& (0+255),7,b
  9765  012FA6  0778               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9766  012FA8  ECCB  F0AD         	call	___awdiv	;wreg free
  9767  012FAC  0100               	movlb	0	; () banked
  9768  012FAE  90D8               	bcf	status,0,c
  9769  012FB0  3777               	rlcf	?___awdiv& (0+255),f,b
  9770  012FB2  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9771  012FB4  0100               	movlb	0	; () banked
  9772  012FB6  90D8               	bcf	status,0,c
  9773  012FB8  3777               	rlcf	?___awdiv& (0+255),f,b
  9774  012FBA  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9775  012FBC  0E24               	movlw	36
  9776  012FBE  0100               	movlb	0	; () banked
  9777  012FC0  2777               	addwf	?___awdiv& (0+255),f,b
  9778  012FC2  0E00               	movlw	0
  9779  012FC4  0100               	movlb	0	; () banked
  9780  012FC6  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  9781  012FC8  0E01               	movlw	low __powers_
  9782  012FCA  0100               	movlb	0	; () banked
  9783  012FCC  2577               	addwf	?___awdiv& (0+255),w,b
  9784  012FCE  6EF6               	movwf	tblptrl,c
  9785  012FD0  0EFD               	movlw	high __powers_
  9786  012FD2  0100               	movlb	0	; () banked
  9787  012FD4  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  9788  012FD6  6EF7               	movwf	tblptrh,c
  9789  012FD8                     	if	1	;There are 3 active tblptr bytes
  9790  012FD8  6AF8               	clrf	tblptru,c
  9791  012FDA  0E00               	movlw	low (__mediumconst shr (0+16))
  9792  012FDC  22F8               	addwfc	tblptru,f,c
  9793  012FDE                     	endif
  9794  012FDE  0009               	tblrd		*+
  9795  012FE0  CFF5 F07F          	movff	tablat,___flmul@b
  9796  012FE4  0009               	tblrd		*+
  9797  012FE6  CFF5 F080          	movff	tablat,___flmul@b+1
  9798  012FEA  0009               	tblrd		*+
  9799  012FEC  CFF5 F081          	movff	tablat,___flmul@b+2
  9800  012FF0  000A               	tblrd		*-
  9801  012FF2  CFF5 F082          	movff	tablat,___flmul@b+3
  9802  012FF6  0E00               	movlw	0
  9803  012FF8  0100               	movlb	0	; () banked
  9804  012FFA  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9805  012FFC  0E0A               	movlw	10
  9806  012FFE  6F73               	movwf	___awmod@divisor& (0+255),b
  9807  013000  0100               	movlb	0	; () banked
  9808  013002  51A0               	movf	scale@scl& (0+255),w,b
  9809  013004  0100               	movlb	0	; () banked
  9810  013006  6F71               	movwf	___awmod@dividend& (0+255),b
  9811  013008  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9812  01300A  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  9813  01300C  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  9814  01300E  EC96  F0AF         	call	___awmod	;wreg free
  9815  013012  0100               	movlb	0	; () banked
  9816  013014  90D8               	bcf	status,0,c
  9817  013016  3771               	rlcf	?___awmod& (0+255),f,b
  9818  013018  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  9819  01301A  0100               	movlb	0	; () banked
  9820  01301C  90D8               	bcf	status,0,c
  9821  01301E  3771               	rlcf	?___awmod& (0+255),f,b
  9822  013020  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  9823  013022  0E01               	movlw	low __powers_
  9824  013024  0100               	movlb	0	; () banked
  9825  013026  2571               	addwf	?___awmod& (0+255),w,b
  9826  013028  6EF6               	movwf	tblptrl,c
  9827  01302A  0EFD               	movlw	high __powers_
  9828  01302C  0100               	movlb	0	; () banked
  9829  01302E  2172               	addwfc	(?___awmod+1)& (0+255),w,b
  9830  013030  6EF7               	movwf	tblptrh,c
  9831  013032                     	if	1	;There are 3 active tblptr bytes
  9832  013032  6AF8               	clrf	tblptru,c
  9833  013034  0E00               	movlw	low (__mediumconst shr (0+16))
  9834  013036  22F8               	addwfc	tblptru,f,c
  9835  013038                     	endif
  9836  013038  0009               	tblrd		*+
  9837  01303A  CFF5 F083          	movff	tablat,___flmul@a
  9838  01303E  0009               	tblrd		*+
  9839  013040  CFF5 F084          	movff	tablat,___flmul@a+1
  9840  013044  0009               	tblrd		*+
  9841  013046  CFF5 F085          	movff	tablat,___flmul@a+2
  9842  01304A  000A               	tblrd		*-
  9843  01304C  CFF5 F086          	movff	tablat,___flmul@a+3
  9844  013050  EC1E  F09D         	call	___flmul	;wreg free
  9845  013054  D78E               	goto	L9
  9846  013056                     l8661:
  9847                           
  9848                           ;doprnt.c: 440: return _powers_[scl];
  9849  013056  0100               	movlb	0	; () banked
  9850  013058  51A0               	movf	scale@scl& (0+255),w,b
  9851  01305A  0D04               	mullw	4
  9852  01305C  0E01               	movlw	low __powers_
  9853  01305E  24F3               	addwf	prodl,w,c
  9854  013060  6EF6               	movwf	tblptrl,c
  9855  013062  0EFD               	movlw	high __powers_
  9856  013064  20F4               	addwfc	prodh,w,c
  9857  013066  6EF7               	movwf	tblptrh,c
  9858  013068                     	if	1	;There are 3 active tblptr bytes
  9859  013068  6AF8               	clrf	tblptru,c
  9860  01306A  0E00               	movlw	low (__mediumconst shr (0+16))
  9861  01306C  22F8               	addwfc	tblptru,f,c
  9862  01306E                     	endif
  9863  01306E  0009               	tblrd		*+
  9864  013070  CFF5 F098          	movff	tablat,?_scale
  9865  013074  0009               	tblrd		*+
  9866  013076  CFF5 F099          	movff	tablat,?_scale+1
  9867  01307A  0009               	tblrd		*+
  9868  01307C  CFF5 F09A          	movff	tablat,?_scale+2
  9869  013080  000A               	tblrd		*-
  9870  013082  CFF5 F09B          	movff	tablat,?_scale+3
  9871  013086  0012               	return	
  9872  013088                     __end_of_scale:
  9873                           	opt stack 0
  9874                           tblptru	equ	0xFF8
  9875                           tblptrh	equ	0xFF7
  9876                           tblptrl	equ	0xFF6
  9877                           tablat	equ	0xFF5
  9878                           prodh	equ	0xFF4
  9879                           prodl	equ	0xFF3
  9880                           intcon	equ	0xFF2
  9881                           postinc0	equ	0xFEE
  9882                           wreg	equ	0xFE8
  9883                           indf2	equ	0xFDF
  9884                           postinc2	equ	0xFDE
  9885                           fsr2h	equ	0xFDA
  9886                           fsr2l	equ	0xFD9
  9887                           status	equ	0xFD8
  9888                           
  9889 ;; *************** function _isdigit *****************
  9890 ;; Defined at:
  9891 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\isdigit.c"
  9892 ;; Parameters:    Size  Location     Type
  9893 ;;  c               1    wreg     unsigned char 
  9894 ;; Auto vars:     Size  Location     Type
  9895 ;;  c               1   19[BANK0 ] unsigned char 
  9896 ;; Return value:  Size  Location     Type
  9897 ;;		None               void
  9898 ;; Registers used:
  9899 ;;		wreg, status,2, status,0
  9900 ;; Tracked objects:
  9901 ;;		On entry : 0/0
  9902 ;;		On exit  : 0/0
  9903 ;;		Unchanged: 0/0
  9904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9906 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9907 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9908 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9909 ;;Total ram usage:        3 bytes
  9910 ;; Hardware stack levels used:    1
  9911 ;; Hardware stack levels required when called:    3
  9912 ;; This function calls:
  9913 ;;		Nothing
  9914 ;; This function is called by:
  9915 ;;		_sprintf
  9916 ;; This function uses a non-reentrant model
  9917 ;;
  9918                           
  9919                           	psect	text12
  9920  01674E                     __ptext12:
  9921                           	opt stack 0
  9922  01674E                     _isdigit:
  9923                           	opt stack 25
  9924                           
  9925                           ;incstack = 0
  9926                           ;isdigit@c stored from wreg
  9927  01674E  0100               	movlb	0	; () banked
  9928  016750  6F73               	movwf	isdigit@c& (0+255),b
  9929  016752  0E00               	movlw	0
  9930  016754  0100               	movlb	0	; () banked
  9931  016756  6F72               	movwf	_isdigit$3774& (0+255),b
  9932                           
  9933                           ; BSR set to: 0
  9934  016758  0E3A               	movlw	58
  9935  01675A  0100               	movlb	0	; () banked
  9936  01675C  6173               	cpfslt	isdigit@c& (0+255),b
  9937  01675E  D007               	goto	l8673
  9938                           
  9939                           ; BSR set to: 0
  9940  016760  0E2F               	movlw	47
  9941  016762  0100               	movlb	0	; () banked
  9942  016764  6573               	cpfsgt	isdigit@c& (0+255),b
  9943  016766  D003               	goto	l8673
  9944                           
  9945                           ; BSR set to: 0
  9946  016768  0E01               	movlw	1
  9947  01676A  0100               	movlb	0	; () banked
  9948  01676C  6F72               	movwf	_isdigit$3774& (0+255),b
  9949  01676E                     l8673:
  9950                           
  9951                           ; BSR set to: 0
  9952  01676E  C072  F071         	movff	_isdigit$3774,??_isdigit
  9953  016772  0100               	movlb	0	; () banked
  9954  016774  3171               	rrcf	??_isdigit& (0+255),w,b
  9955  016776  0012               	return	
  9956  016778                     __end_of_isdigit:
  9957                           	opt stack 0
  9958                           tblptru	equ	0xFF8
  9959                           tblptrh	equ	0xFF7
  9960                           tblptrl	equ	0xFF6
  9961                           tablat	equ	0xFF5
  9962                           prodh	equ	0xFF4
  9963                           prodl	equ	0xFF3
  9964                           intcon	equ	0xFF2
  9965                           postinc0	equ	0xFEE
  9966                           wreg	equ	0xFE8
  9967                           indf2	equ	0xFDF
  9968                           postinc2	equ	0xFDE
  9969                           fsr2h	equ	0xFDA
  9970                           fsr2l	equ	0xFD9
  9971                           status	equ	0xFD8
  9972                           
  9973 ;; *************** function _fround *****************
  9974 ;; Defined at:
  9975 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  9976 ;; Parameters:    Size  Location     Type
  9977 ;;  prec            1    wreg     unsigned char 
  9978 ;; Auto vars:     Size  Location     Type
  9979 ;;  prec            1   68[BANK0 ] unsigned char 
  9980 ;; Return value:  Size  Location     Type
  9981 ;;                  4   56[BANK0 ] unsigned char 
  9982 ;; Registers used:
  9983 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9984 ;; Tracked objects:
  9985 ;;		On entry : 0/0
  9986 ;;		On exit  : 0/0
  9987 ;;		Unchanged: 0/0
  9988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9989 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9990 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9992 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9993 ;;Total ram usage:       13 bytes
  9994 ;; Hardware stack levels used:    1
  9995 ;; Hardware stack levels required when called:    4
  9996 ;; This function calls:
  9997 ;;		___awdiv
  9998 ;;		___awmod
  9999 ;;		___flmul
 10000 ;; This function is called by:
 10001 ;;		_sprintf
 10002 ;; This function uses a non-reentrant model
 10003 ;;
 10004                           
 10005                           	psect	text13
 10006  014640                     __ptext13:
 10007                           	opt stack 0
 10008  014640                     _fround:
 10009                           	opt stack 24
 10010                           
 10011                           ; BSR set to: 0
 10012                           ;incstack = 0
 10013                           ;fround@prec stored from wreg
 10014  014640  0100               	movlb	0	; () banked
 10015  014642  6FA4               	movwf	fround@prec& (0+255),b
 10016                           
 10017                           ;doprnt.c: 413: if(prec>=110)
 10018  014644  0E6D               	movlw	109
 10019  014646  0100               	movlb	0	; () banked
 10020  014648  65A4               	cpfsgt	fround@prec& (0+255),b
 10021  01464A  D0CD               	goto	l8615
 10022                           
 10023                           ; BSR set to: 0
 10024                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 10025  01464C  0E00               	movlw	0
 10026  01464E  0100               	movlb	0	; () banked
 10027  014650  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
 10028  014652  0E0A               	movlw	10
 10029  014654  6F79               	movwf	___awdiv@divisor& (0+255),b
 10030  014656  0E00               	movlw	0
 10031  014658  0100               	movlb	0	; () banked
 10032  01465A  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
 10033  01465C  0E64               	movlw	100
 10034  01465E  6F73               	movwf	___awmod@divisor& (0+255),b
 10035  014660  C0A4  F071         	movff	fround@prec,___awmod@dividend
 10036  014664  0100               	movlb	0	; () banked
 10037  014666  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
 10038  014668  EC96  F0AF         	call	___awmod	;wreg free
 10039  01466C  C071  F077         	movff	?___awmod,___awdiv@dividend
 10040  014670  C072  F078         	movff	?___awmod+1,___awdiv@dividend+1
 10041  014674  ECCB  F0AD         	call	___awdiv	;wreg free
 10042  014678  0100               	movlb	0	; () banked
 10043  01467A  90D8               	bcf	status,0,c
 10044  01467C  3777               	rlcf	?___awdiv& (0+255),f,b
 10045  01467E  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
 10046  014680  0100               	movlb	0	; () banked
 10047  014682  90D8               	bcf	status,0,c
 10048  014684  3777               	rlcf	?___awdiv& (0+255),f,b
 10049  014686  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
 10050  014688  0E24               	movlw	36
 10051  01468A  0100               	movlb	0	; () banked
 10052  01468C  2777               	addwf	?___awdiv& (0+255),f,b
 10053  01468E  0E00               	movlw	0
 10054  014690  0100               	movlb	0	; () banked
 10055  014692  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
 10056  014694  0ECD               	movlw	low __npowers_
 10057  014696  0100               	movlb	0	; () banked
 10058  014698  2577               	addwf	?___awdiv& (0+255),w,b
 10059  01469A  6EF6               	movwf	tblptrl,c
 10060  01469C  0EFC               	movlw	high __npowers_
 10061  01469E  0100               	movlb	0	; () banked
 10062  0146A0  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
 10063  0146A2  6EF7               	movwf	tblptrh,c
 10064  0146A4                     	if	1	;There are 3 active tblptr bytes
 10065  0146A4  6AF8               	clrf	tblptru,c
 10066  0146A6  0E00               	movlw	low (__mediumconst shr (0+16))
 10067  0146A8  22F8               	addwfc	tblptru,f,c
 10068  0146AA                     	endif
 10069  0146AA  0009               	tblrd		*+
 10070  0146AC  CFF5 F083          	movff	tablat,___flmul@a
 10071  0146B0  0009               	tblrd		*+
 10072  0146B2  CFF5 F084          	movff	tablat,___flmul@a+1
 10073  0146B6  0009               	tblrd		*+
 10074  0146B8  CFF5 F085          	movff	tablat,___flmul@a+2
 10075  0146BC  000A               	tblrd		*-
 10076  0146BE  CFF5 F086          	movff	tablat,___flmul@a+3
 10077  0146C2  0E00               	movlw	0
 10078  0146C4  0100               	movlb	0	; () banked
 10079  0146C6  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
 10080  0146C8  0E64               	movlw	100
 10081  0146CA  6F79               	movwf	___awdiv@divisor& (0+255),b
 10082  0146CC  C0A4  F077         	movff	fround@prec,___awdiv@dividend
 10083  0146D0  0100               	movlb	0	; () banked
 10084  0146D2  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
 10085  0146D4  ECCB  F0AD         	call	___awdiv	;wreg free
 10086  0146D8  0100               	movlb	0	; () banked
 10087  0146DA  90D8               	bcf	status,0,c
 10088  0146DC  3777               	rlcf	?___awdiv& (0+255),f,b
 10089  0146DE  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
 10090  0146E0  0100               	movlb	0	; () banked
 10091  0146E2  90D8               	bcf	status,0,c
 10092  0146E4  3777               	rlcf	?___awdiv& (0+255),f,b
 10093  0146E6  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
 10094  0146E8  0E48               	movlw	72
 10095  0146EA  0100               	movlb	0	; () banked
 10096  0146EC  2777               	addwf	?___awdiv& (0+255),f,b
 10097  0146EE  0E00               	movlw	0
 10098  0146F0  0100               	movlb	0	; () banked
 10099  0146F2  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
 10100  0146F4  0ECD               	movlw	low __npowers_
 10101  0146F6  0100               	movlb	0	; () banked
 10102  0146F8  2577               	addwf	?___awdiv& (0+255),w,b
 10103  0146FA  6EF6               	movwf	tblptrl,c
 10104  0146FC  0EFC               	movlw	high __npowers_
 10105  0146FE  0100               	movlb	0	; () banked
 10106  014700  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
 10107  014702  6EF7               	movwf	tblptrh,c
 10108  014704                     	if	1	;There are 3 active tblptr bytes
 10109  014704  6AF8               	clrf	tblptru,c
 10110  014706  0E00               	movlw	low (__mediumconst shr (0+16))
 10111  014708  22F8               	addwfc	tblptru,f,c
 10112  01470A                     	endif
 10113  01470A  0009               	tblrd		*+
 10114  01470C  CFF5 F07F          	movff	tablat,___flmul@b
 10115  014710  0009               	tblrd		*+
 10116  014712  CFF5 F080          	movff	tablat,___flmul@b+1
 10117  014716  0009               	tblrd		*+
 10118  014718  CFF5 F081          	movff	tablat,___flmul@b+2
 10119  01471C  000A               	tblrd		*-
 10120  01471E  CFF5 F082          	movff	tablat,___flmul@b+3
 10121  014722  EC1E  F09D         	call	___flmul	;wreg free
 10122  014726  C07F  F0A0         	movff	?___flmul,_fround$4191
 10123  01472A  C080  F0A1         	movff	?___flmul+1,_fround$4191+1
 10124  01472E  C081  F0A2         	movff	?___flmul+2,_fround$4191+2
 10125  014732  C082  F0A3         	movff	?___flmul+3,_fround$4191+3
 10126                           
 10127                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 10128  014736  0E00               	movlw	0
 10129  014738  0100               	movlb	0	; () banked
 10130  01473A  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
 10131  01473C  0E0A               	movlw	10
 10132  01473E  6F73               	movwf	___awmod@divisor& (0+255),b
 10133  014740  C0A4  F071         	movff	fround@prec,___awmod@dividend
 10134  014744  0100               	movlb	0	; () banked
 10135  014746  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
 10136  014748  EC96  F0AF         	call	___awmod	;wreg free
 10137  01474C  0100               	movlb	0	; () banked
 10138  01474E  90D8               	bcf	status,0,c
 10139  014750  3771               	rlcf	?___awmod& (0+255),f,b
 10140  014752  3772               	rlcf	(?___awmod+1)& (0+255),f,b
 10141  014754  0100               	movlb	0	; () banked
 10142  014756  90D8               	bcf	status,0,c
 10143  014758  3771               	rlcf	?___awmod& (0+255),f,b
 10144  01475A  3772               	rlcf	(?___awmod+1)& (0+255),f,b
 10145  01475C  0ECD               	movlw	low __npowers_
 10146  01475E  0100               	movlb	0	; () banked
 10147  014760  2571               	addwf	?___awmod& (0+255),w,b
 10148  014762  6EF6               	movwf	tblptrl,c
 10149  014764  0EFC               	movlw	high __npowers_
 10150  014766  0100               	movlb	0	; () banked
 10151  014768  2172               	addwfc	(?___awmod+1)& (0+255),w,b
 10152  01476A  6EF7               	movwf	tblptrh,c
 10153  01476C                     	if	1	;There are 3 active tblptr bytes
 10154  01476C  6AF8               	clrf	tblptru,c
 10155  01476E  0E00               	movlw	low (__mediumconst shr (0+16))
 10156  014770  22F8               	addwfc	tblptru,f,c
 10157  014772                     	endif
 10158  014772  0009               	tblrd		*+
 10159  014774  CFF5 F083          	movff	tablat,___flmul@a
 10160  014778  0009               	tblrd		*+
 10161  01477A  CFF5 F084          	movff	tablat,___flmul@a+1
 10162  01477E  0009               	tblrd		*+
 10163  014780  CFF5 F085          	movff	tablat,___flmul@a+2
 10164  014784  000A               	tblrd		*-
 10165  014786  CFF5 F086          	movff	tablat,___flmul@a+3
 10166  01478A  C0A0  F07F         	movff	_fround$4191,___flmul@b
 10167  01478E  C0A1  F080         	movff	_fround$4191+1,___flmul@b+1
 10168  014792  C0A2  F081         	movff	_fround$4191+2,___flmul@b+2
 10169  014796  C0A3  F082         	movff	_fround$4191+3,___flmul@b+3
 10170  01479A  EC1E  F09D         	call	___flmul	;wreg free
 10171  01479E  C07F  F09C         	movff	?___flmul,_fround$4192
 10172  0147A2  C080  F09D         	movff	?___flmul+1,_fround$4192+1
 10173  0147A6  C081  F09E         	movff	?___flmul+2,_fround$4192+2
 10174  0147AA  C082  F09F         	movff	?___flmul+3,_fround$4192+3
 10175                           
 10176                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 10177  0147AE  C09C  F07F         	movff	_fround$4192,___flmul@b
 10178  0147B2  C09D  F080         	movff	_fround$4192+1,___flmul@b+1
 10179  0147B6  C09E  F081         	movff	_fround$4192+2,___flmul@b+2
 10180  0147BA  C09F  F082         	movff	_fround$4192+3,___flmul@b+3
 10181  0147BE  0E00               	movlw	0
 10182  0147C0  0100               	movlb	0	; () banked
 10183  0147C2  6F83               	movwf	___flmul@a& (0+255),b
 10184  0147C4  0E00               	movlw	0
 10185  0147C6  6F84               	movwf	(___flmul@a+1)& (0+255),b
 10186  0147C8  0E00               	movlw	0
 10187  0147CA  6F85               	movwf	(___flmul@a+2)& (0+255),b
 10188  0147CC  0E3F               	movlw	63
 10189  0147CE  6F86               	movwf	(___flmul@a+3)& (0+255),b
 10190  0147D0  EC1E  F09D         	call	___flmul	;wreg free
 10191  0147D4  C07F  F098         	movff	?___flmul,?_fround
 10192  0147D8  C080  F099         	movff	?___flmul+1,?_fround+1
 10193  0147DC  C081  F09A         	movff	?___flmul+2,?_fround+2
 10194  0147E0  C082  F09B         	movff	?___flmul+3,?_fround+3
 10195  0147E4  0012               	return	
 10196  0147E6                     l8615:
 10197                           
 10198                           ;doprnt.c: 415: else if(prec > 10)
 10199  0147E6  0E0A               	movlw	10
 10200  0147E8  0100               	movlb	0	; () banked
 10201  0147EA  65A4               	cpfsgt	fround@prec& (0+255),b
 10202  0147EC  D078               	goto	l8623
 10203                           
 10204                           ; BSR set to: 0
 10205                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 10206  0147EE  0E00               	movlw	0
 10207  0147F0  0100               	movlb	0	; () banked
 10208  0147F2  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
 10209  0147F4  0E0A               	movlw	10
 10210  0147F6  6F73               	movwf	___awmod@divisor& (0+255),b
 10211  0147F8  C0A4  F071         	movff	fround@prec,___awmod@dividend
 10212  0147FC  0100               	movlb	0	; () banked
 10213  0147FE  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
 10214  014800  EC96  F0AF         	call	___awmod	;wreg free
 10215  014804  0100               	movlb	0	; () banked
 10216  014806  90D8               	bcf	status,0,c
 10217  014808  3771               	rlcf	?___awmod& (0+255),f,b
 10218  01480A  3772               	rlcf	(?___awmod+1)& (0+255),f,b
 10219  01480C  0100               	movlb	0	; () banked
 10220  01480E  90D8               	bcf	status,0,c
 10221  014810  3771               	rlcf	?___awmod& (0+255),f,b
 10222  014812  3772               	rlcf	(?___awmod+1)& (0+255),f,b
 10223  014814  0ECD               	movlw	low __npowers_
 10224  014816  0100               	movlb	0	; () banked
 10225  014818  2571               	addwf	?___awmod& (0+255),w,b
 10226  01481A  6EF6               	movwf	tblptrl,c
 10227  01481C  0EFC               	movlw	high __npowers_
 10228  01481E  0100               	movlb	0	; () banked
 10229  014820  2172               	addwfc	(?___awmod+1)& (0+255),w,b
 10230  014822  6EF7               	movwf	tblptrh,c
 10231  014824                     	if	1	;There are 3 active tblptr bytes
 10232  014824  6AF8               	clrf	tblptru,c
 10233  014826  0E00               	movlw	low (__mediumconst shr (0+16))
 10234  014828  22F8               	addwfc	tblptru,f,c
 10235  01482A                     	endif
 10236  01482A  0009               	tblrd		*+
 10237  01482C  CFF5 F083          	movff	tablat,___flmul@a
 10238  014830  0009               	tblrd		*+
 10239  014832  CFF5 F084          	movff	tablat,___flmul@a+1
 10240  014836  0009               	tblrd		*+
 10241  014838  CFF5 F085          	movff	tablat,___flmul@a+2
 10242  01483C  000A               	tblrd		*-
 10243  01483E  CFF5 F086          	movff	tablat,___flmul@a+3
 10244  014842  0E00               	movlw	0
 10245  014844  0100               	movlb	0	; () banked
 10246  014846  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
 10247  014848  0E0A               	movlw	10
 10248  01484A  6F79               	movwf	___awdiv@divisor& (0+255),b
 10249  01484C  C0A4  F077         	movff	fround@prec,___awdiv@dividend
 10250  014850  0100               	movlb	0	; () banked
 10251  014852  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
 10252  014854  ECCB  F0AD         	call	___awdiv	;wreg free
 10253  014858  0100               	movlb	0	; () banked
 10254  01485A  90D8               	bcf	status,0,c
 10255  01485C  3777               	rlcf	?___awdiv& (0+255),f,b
 10256  01485E  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
 10257  014860  0100               	movlb	0	; () banked
 10258  014862  90D8               	bcf	status,0,c
 10259  014864  3777               	rlcf	?___awdiv& (0+255),f,b
 10260  014866  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
 10261  014868  0E24               	movlw	36
 10262  01486A  0100               	movlb	0	; () banked
 10263  01486C  2777               	addwf	?___awdiv& (0+255),f,b
 10264  01486E  0E00               	movlw	0
 10265  014870  0100               	movlb	0	; () banked
 10266  014872  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
 10267  014874  0ECD               	movlw	low __npowers_
 10268  014876  0100               	movlb	0	; () banked
 10269  014878  2577               	addwf	?___awdiv& (0+255),w,b
 10270  01487A  6EF6               	movwf	tblptrl,c
 10271  01487C  0EFC               	movlw	high __npowers_
 10272  01487E  0100               	movlb	0	; () banked
 10273  014880  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
 10274  014882  6EF7               	movwf	tblptrh,c
 10275  014884                     	if	1	;There are 3 active tblptr bytes
 10276  014884  6AF8               	clrf	tblptru,c
 10277  014886  0E00               	movlw	low (__mediumconst shr (0+16))
 10278  014888  22F8               	addwfc	tblptru,f,c
 10279  01488A                     	endif
 10280  01488A  0009               	tblrd		*+
 10281  01488C  CFF5 F07F          	movff	tablat,___flmul@b
 10282  014890  0009               	tblrd		*+
 10283  014892  CFF5 F080          	movff	tablat,___flmul@b+1
 10284  014896  0009               	tblrd		*+
 10285  014898  CFF5 F081          	movff	tablat,___flmul@b+2
 10286  01489C  000A               	tblrd		*-
 10287  01489E  CFF5 F082          	movff	tablat,___flmul@b+3
 10288  0148A2  EC1E  F09D         	call	___flmul	;wreg free
 10289  0148A6  C07F  F0A0         	movff	?___flmul,_fround$4191
 10290  0148AA  C080  F0A1         	movff	?___flmul+1,_fround$4191+1
 10291  0148AE  C081  F0A2         	movff	?___flmul+2,_fround$4191+2
 10292  0148B2  C082  F0A3         	movff	?___flmul+3,_fround$4191+3
 10293                           
 10294                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 10295  0148B6  C0A0  F07F         	movff	_fround$4191,___flmul@b
 10296  0148BA  C0A1  F080         	movff	_fround$4191+1,___flmul@b+1
 10297  0148BE  C0A2  F081         	movff	_fround$4191+2,___flmul@b+2
 10298  0148C2  C0A3  F082         	movff	_fround$4191+3,___flmul@b+3
 10299  0148C6  0E00               	movlw	0
 10300  0148C8  0100               	movlb	0	; () banked
 10301  0148CA  6F83               	movwf	___flmul@a& (0+255),b
 10302  0148CC  0E00               	movlw	0
 10303  0148CE  6F84               	movwf	(___flmul@a+1)& (0+255),b
 10304  0148D0  0E00               	movlw	0
 10305  0148D2  6F85               	movwf	(___flmul@a+2)& (0+255),b
 10306  0148D4  0E3F               	movlw	63
 10307  0148D6  6F86               	movwf	(___flmul@a+3)& (0+255),b
 10308  0148D8  EC1E  F09D         	call	___flmul	;wreg free
 10309  0148DC  D77B               	goto	L10
 10310  0148DE                     l8623:
 10311                           
 10312                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 10313  0148DE  0100               	movlb	0	; () banked
 10314  0148E0  51A4               	movf	fround@prec& (0+255),w,b
 10315  0148E2  0D04               	mullw	4
 10316  0148E4  0ECD               	movlw	low __npowers_
 10317  0148E6  24F3               	addwf	prodl,w,c
 10318  0148E8  6EF6               	movwf	tblptrl,c
 10319  0148EA  0EFC               	movlw	high __npowers_
 10320  0148EC  20F4               	addwfc	prodh,w,c
 10321  0148EE  6EF7               	movwf	tblptrh,c
 10322  0148F0                     	if	1	;There are 3 active tblptr bytes
 10323  0148F0  6AF8               	clrf	tblptru,c
 10324  0148F2  0E00               	movlw	low (__mediumconst shr (0+16))
 10325  0148F4  22F8               	addwfc	tblptru,f,c
 10326  0148F6                     	endif
 10327  0148F6  0009               	tblrd		*+
 10328  0148F8  CFF5 F07F          	movff	tablat,___flmul@b
 10329  0148FC  0009               	tblrd		*+
 10330  0148FE  CFF5 F080          	movff	tablat,___flmul@b+1
 10331  014902  0009               	tblrd		*+
 10332  014904  CFF5 F081          	movff	tablat,___flmul@b+2
 10333  014908  000A               	tblrd		*-
 10334  01490A  CFF5 F082          	movff	tablat,___flmul@b+3
 10335  01490E  0E00               	movlw	0
 10336  014910  0100               	movlb	0	; () banked
 10337  014912  6F83               	movwf	___flmul@a& (0+255),b
 10338  014914  0E00               	movlw	0
 10339  014916  6F84               	movwf	(___flmul@a+1)& (0+255),b
 10340  014918  0E00               	movlw	0
 10341  01491A  6F85               	movwf	(___flmul@a+2)& (0+255),b
 10342  01491C  0E3F               	movlw	63
 10343  01491E  6F86               	movwf	(___flmul@a+3)& (0+255),b
 10344  014920  EC1E  F09D         	call	___flmul	;wreg free
 10345  014924  C07F  F098         	movff	?___flmul,?_fround
 10346  014928  C080  F099         	movff	?___flmul+1,?_fround+1
 10347  01492C  C081  F09A         	movff	?___flmul+2,?_fround+2
 10348  014930  C082  F09B         	movff	?___flmul+3,?_fround+3
 10349  014934  0012               	return	
 10350  014936                     __end_of_fround:
 10351                           	opt stack 0
 10352                           tblptru	equ	0xFF8
 10353                           tblptrh	equ	0xFF7
 10354                           tblptrl	equ	0xFF6
 10355                           tablat	equ	0xFF5
 10356                           prodh	equ	0xFF4
 10357                           prodl	equ	0xFF3
 10358                           intcon	equ	0xFF2
 10359                           postinc0	equ	0xFEE
 10360                           wreg	equ	0xFE8
 10361                           indf2	equ	0xFDF
 10362                           postinc2	equ	0xFDE
 10363                           fsr2h	equ	0xFDA
 10364                           fsr2l	equ	0xFD9
 10365                           status	equ	0xFD8
 10366                           
 10367 ;; *************** function ___flmul *****************
 10368 ;; Defined at:
 10369 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcmul.c"
 10370 ;; Parameters:    Size  Location     Type
 10371 ;;  b               4   31[BANK0 ] unsigned char 
 10372 ;;  a               4   35[BANK0 ] unsigned char 
 10373 ;; Auto vars:     Size  Location     Type
 10374 ;;  prod            4   50[BANK0 ] struct .
 10375 ;;  grs             4   45[BANK0 ] unsigned long 
 10376 ;;  temp            2   54[BANK0 ] struct .
 10377 ;;  bexp            1   49[BANK0 ] unsigned char 
 10378 ;;  aexp            1   44[BANK0 ] unsigned char 
 10379 ;;  sign            1   43[BANK0 ] unsigned char 
 10380 ;; Return value:  Size  Location     Type
 10381 ;;                  4   31[BANK0 ] unsigned char 
 10382 ;; Registers used:
 10383 ;;		wreg, status,2, status,0, prodl, prodh
 10384 ;; Tracked objects:
 10385 ;;		On entry : 0/0
 10386 ;;		On exit  : 0/0
 10387 ;;		Unchanged: 0/0
 10388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10389 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10390 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10391 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10392 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10393 ;;Total ram usage:       25 bytes
 10394 ;; Hardware stack levels used:    1
 10395 ;; Hardware stack levels required when called:    3
 10396 ;; This function calls:
 10397 ;;		Nothing
 10398 ;; This function is called by:
 10399 ;;		_main
 10400 ;;		_fround
 10401 ;;		_scale
 10402 ;;		_sprintf
 10403 ;; This function uses a non-reentrant model
 10404 ;;
 10405                           
 10406                           	psect	text14
 10407  013A3C                     __ptext14:
 10408                           	opt stack 0
 10409  013A3C                     ___flmul:
 10410                           	opt stack 27
 10411                           
 10412                           ;incstack = 0
 10413  013A3C  0100               	movlb	0	; () banked
 10414  013A3E  5182               	movf	(___flmul@b+3)& (0+255),w,b
 10415  013A40  0B80               	andlw	128
 10416  013A42  0100               	movlb	0	; () banked
 10417  013A44  6F8B               	movwf	___flmul@sign& (0+255),b
 10418  013A46  0100               	movlb	0	; () banked
 10419  013A48  5182               	movf	(___flmul@b+3)& (0+255),w,b
 10420  013A4A  2582               	addwf	(___flmul@b+3)& (0+255),w,b
 10421  013A4C  0100               	movlb	0	; () banked
 10422  013A4E  6F91               	movwf	___flmul@bexp& (0+255),b
 10423                           
 10424                           ; BSR set to: 0
 10425  013A50  0100               	movlb	0	; () banked
 10426  013A52  AF81               	btfss	(___flmul@b+2)& (0+255),7,b
 10427  013A54  D002               	goto	l8369
 10428                           
 10429                           ; BSR set to: 0
 10430  013A56  0100               	movlb	0	; () banked
 10431  013A58  8191               	bsf	___flmul@bexp& (0+255),0,b
 10432  013A5A                     l8369:
 10433                           
 10434                           ; BSR set to: 0
 10435  013A5A  0100               	movlb	0	; () banked
 10436  013A5C  5191               	movf	___flmul@bexp& (0+255),w,b
 10437  013A5E  0100               	movlb	0	; () banked
 10438  013A60  B4D8               	btfsc	status,2,c
 10439  013A62  D010               	goto	l8377
 10440                           
 10441                           ; BSR set to: 0
 10442  013A64  0100               	movlb	0	; () banked
 10443  013A66  2991               	incf	___flmul@bexp& (0+255),w,b
 10444  013A68  A4D8               	btfss	status,2,c
 10445  013A6A  D009               	goto	l8375
 10446                           
 10447                           ; BSR set to: 0
 10448  013A6C  0E00               	movlw	0
 10449  013A6E  0100               	movlb	0	; () banked
 10450  013A70  6F7F               	movwf	___flmul@b& (0+255),b
 10451  013A72  0E00               	movlw	0
 10452  013A74  6F80               	movwf	(___flmul@b+1)& (0+255),b
 10453  013A76  0E00               	movlw	0
 10454  013A78  6F81               	movwf	(___flmul@b+2)& (0+255),b
 10455  013A7A  0E00               	movlw	0
 10456  013A7C  6F82               	movwf	(___flmul@b+3)& (0+255),b
 10457  013A7E                     l8375:
 10458                           
 10459                           ; BSR set to: 0
 10460  013A7E  0100               	movlb	0	; () banked
 10461  013A80  8F81               	bsf	(___flmul@b+2)& (0+255),7,b
 10462  013A82  D009               	goto	l8379
 10463  013A84                     l8377:
 10464                           
 10465                           ; BSR set to: 0
 10466  013A84  0E00               	movlw	0
 10467  013A86  0100               	movlb	0	; () banked
 10468  013A88  6F7F               	movwf	___flmul@b& (0+255),b
 10469  013A8A  0E00               	movlw	0
 10470  013A8C  6F80               	movwf	(___flmul@b+1)& (0+255),b
 10471  013A8E  0E00               	movlw	0
 10472  013A90  6F81               	movwf	(___flmul@b+2)& (0+255),b
 10473  013A92  0E00               	movlw	0
 10474  013A94  6F82               	movwf	(___flmul@b+3)& (0+255),b
 10475  013A96                     l8379:
 10476                           
 10477                           ; BSR set to: 0
 10478  013A96  0100               	movlb	0	; () banked
 10479  013A98  5186               	movf	(___flmul@a+3)& (0+255),w,b
 10480  013A9A  0B80               	andlw	128
 10481  013A9C  0100               	movlb	0	; () banked
 10482  013A9E  1B8B               	xorwf	___flmul@sign& (0+255),f,b
 10483                           
 10484                           ; BSR set to: 0
 10485  013AA0  0100               	movlb	0	; () banked
 10486  013AA2  5186               	movf	(___flmul@a+3)& (0+255),w,b
 10487  013AA4  2586               	addwf	(___flmul@a+3)& (0+255),w,b
 10488  013AA6  0100               	movlb	0	; () banked
 10489  013AA8  6F8C               	movwf	___flmul@aexp& (0+255),b
 10490                           
 10491                           ; BSR set to: 0
 10492  013AAA  0100               	movlb	0	; () banked
 10493  013AAC  AF85               	btfss	(___flmul@a+2)& (0+255),7,b
 10494  013AAE  D002               	goto	l8387
 10495                           
 10496                           ; BSR set to: 0
 10497  013AB0  0100               	movlb	0	; () banked
 10498  013AB2  818C               	bsf	___flmul@aexp& (0+255),0,b
 10499  013AB4                     l8387:
 10500                           
 10501                           ; BSR set to: 0
 10502  013AB4  0100               	movlb	0	; () banked
 10503  013AB6  518C               	movf	___flmul@aexp& (0+255),w,b
 10504  013AB8  0100               	movlb	0	; () banked
 10505  013ABA  B4D8               	btfsc	status,2,c
 10506  013ABC  D010               	goto	l8395
 10507                           
 10508                           ; BSR set to: 0
 10509  013ABE  0100               	movlb	0	; () banked
 10510  013AC0  298C               	incf	___flmul@aexp& (0+255),w,b
 10511  013AC2  A4D8               	btfss	status,2,c
 10512  013AC4  D009               	goto	l8393
 10513                           
 10514                           ; BSR set to: 0
 10515  013AC6  0E00               	movlw	0
 10516  013AC8  0100               	movlb	0	; () banked
 10517  013ACA  6F83               	movwf	___flmul@a& (0+255),b
 10518  013ACC  0E00               	movlw	0
 10519  013ACE  6F84               	movwf	(___flmul@a+1)& (0+255),b
 10520  013AD0  0E00               	movlw	0
 10521  013AD2  6F85               	movwf	(___flmul@a+2)& (0+255),b
 10522  013AD4  0E00               	movlw	0
 10523  013AD6  6F86               	movwf	(___flmul@a+3)& (0+255),b
 10524  013AD8                     l8393:
 10525                           
 10526                           ; BSR set to: 0
 10527  013AD8  0100               	movlb	0	; () banked
 10528  013ADA  8F85               	bsf	(___flmul@a+2)& (0+255),7,b
 10529  013ADC  D009               	goto	l1665
 10530  013ADE                     l8395:
 10531                           
 10532                           ; BSR set to: 0
 10533  013ADE  0E00               	movlw	0
 10534  013AE0  0100               	movlb	0	; () banked
 10535  013AE2  6F83               	movwf	___flmul@a& (0+255),b
 10536  013AE4  0E00               	movlw	0
 10537  013AE6  6F84               	movwf	(___flmul@a+1)& (0+255),b
 10538  013AE8  0E00               	movlw	0
 10539  013AEA  6F85               	movwf	(___flmul@a+2)& (0+255),b
 10540  013AEC  0E00               	movlw	0
 10541  013AEE  6F86               	movwf	(___flmul@a+3)& (0+255),b
 10542  013AF0                     l1665:
 10543                           
 10544                           ; BSR set to: 0
 10545  013AF0  0100               	movlb	0	; () banked
 10546  013AF2  518C               	movf	___flmul@aexp& (0+255),w,b
 10547  013AF4  0100               	movlb	0	; () banked
 10548  013AF6  B4D8               	btfsc	status,2,c
 10549  013AF8  D005               	goto	l8399
 10550                           
 10551                           ; BSR set to: 0
 10552  013AFA  0100               	movlb	0	; () banked
 10553  013AFC  5191               	movf	___flmul@bexp& (0+255),w,b
 10554  013AFE  0100               	movlb	0	; () banked
 10555  013B00  A4D8               	btfss	status,2,c
 10556  013B02  D00A               	goto	l8403
 10557  013B04                     l8399:
 10558                           
 10559                           ; BSR set to: 0
 10560  013B04  0E00               	movlw	0
 10561  013B06  0100               	movlb	0	; () banked
 10562  013B08  6F7F               	movwf	?___flmul& (0+255),b
 10563  013B0A  0E00               	movlw	0
 10564  013B0C  6F80               	movwf	(?___flmul+1)& (0+255),b
 10565  013B0E  0E00               	movlw	0
 10566  013B10  6F81               	movwf	(?___flmul+2)& (0+255),b
 10567  013B12  0E00               	movlw	0
 10568  013B14  6F82               	movwf	(?___flmul+3)& (0+255),b
 10569                           
 10570                           ; BSR set to: 0
 10571  013B16  0012               	return	
 10572  013B18                     l8403:
 10573                           
 10574                           ; BSR set to: 0
 10575  013B18  0100               	movlb	0	; () banked
 10576  013B1A  5185               	movf	(___flmul@a+2)& (0+255),w,b
 10577  013B1C  0100               	movlb	0	; () banked
 10578  013B1E  037F               	mulwf	___flmul@b& (0+255),b
 10579  013B20  CFF3 F096          	movff	prodl,___flmul@temp
 10580  013B24  CFF4 F097          	movff	prodh,___flmul@temp+1
 10581                           
 10582                           ; BSR set to: 0
 10583  013B28  0100               	movlb	0	; () banked
 10584  013B2A  5196               	movf	___flmul@temp& (0+255),w,b
 10585  013B2C  0100               	movlb	0	; () banked
 10586  013B2E  6F8D               	movwf	___flmul@grs& (0+255),b
 10587  013B30  6B8E               	clrf	(___flmul@grs+1)& (0+255),b
 10588  013B32  6B8F               	clrf	(___flmul@grs+2)& (0+255),b
 10589  013B34  6B90               	clrf	(___flmul@grs+3)& (0+255),b
 10590                           
 10591                           ; BSR set to: 0
 10592  013B36  0100               	movlb	0	; () banked
 10593  013B38  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 10594  013B3A  0100               	movlb	0	; () banked
 10595  013B3C  6F92               	movwf	___flmul@prod& (0+255),b
 10596  013B3E  6B93               	clrf	(___flmul@prod+1)& (0+255),b
 10597  013B40  6B94               	clrf	(___flmul@prod+2)& (0+255),b
 10598  013B42  6B95               	clrf	(___flmul@prod+3)& (0+255),b
 10599  013B44  0100               	movlb	0	; () banked
 10600  013B46  5184               	movf	(___flmul@a+1)& (0+255),w,b
 10601  013B48  0100               	movlb	0	; () banked
 10602  013B4A  0380               	mulwf	(___flmul@b+1)& (0+255),b
 10603  013B4C  CFF3 F096          	movff	prodl,___flmul@temp
 10604  013B50  CFF4 F097          	movff	prodh,___flmul@temp+1
 10605                           
 10606                           ; BSR set to: 0
 10607  013B54  0100               	movlb	0	; () banked
 10608  013B56  5196               	movf	___flmul@temp& (0+255),w,b
 10609  013B58  0100               	movlb	0	; () banked
 10610  013B5A  278D               	addwf	___flmul@grs& (0+255),f,b
 10611  013B5C  0E00               	movlw	0
 10612  013B5E  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10613  013B60  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10614  013B62  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10615                           
 10616                           ; BSR set to: 0
 10617  013B64  0100               	movlb	0	; () banked
 10618  013B66  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 10619  013B68  0100               	movlb	0	; () banked
 10620  013B6A  2792               	addwf	___flmul@prod& (0+255),f,b
 10621  013B6C  0E00               	movlw	0
 10622  013B6E  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10623  013B70  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10624  013B72  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10625  013B74  0100               	movlb	0	; () banked
 10626  013B76  5183               	movf	___flmul@a& (0+255),w,b
 10627  013B78  0100               	movlb	0	; () banked
 10628  013B7A  0381               	mulwf	(___flmul@b+2)& (0+255),b
 10629  013B7C  CFF3 F096          	movff	prodl,___flmul@temp
 10630  013B80  CFF4 F097          	movff	prodh,___flmul@temp+1
 10631                           
 10632                           ; BSR set to: 0
 10633  013B84  0100               	movlb	0	; () banked
 10634  013B86  5196               	movf	___flmul@temp& (0+255),w,b
 10635  013B88  0100               	movlb	0	; () banked
 10636  013B8A  278D               	addwf	___flmul@grs& (0+255),f,b
 10637  013B8C  0E00               	movlw	0
 10638  013B8E  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10639  013B90  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10640  013B92  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10641                           
 10642                           ; BSR set to: 0
 10643  013B94  0100               	movlb	0	; () banked
 10644  013B96  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 10645  013B98  0100               	movlb	0	; () banked
 10646  013B9A  2792               	addwf	___flmul@prod& (0+255),f,b
 10647  013B9C  0E00               	movlw	0
 10648  013B9E  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10649  013BA0  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10650  013BA2  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10651                           
 10652                           ; BSR set to: 0
 10653  013BA4  C08F  F090         	movff	___flmul@grs+2,___flmul@grs+3
 10654  013BA8  C08E  F08F         	movff	___flmul@grs+1,___flmul@grs+2
 10655  013BAC  C08D  F08E         	movff	___flmul@grs,___flmul@grs+1
 10656  013BB0  0100               	movlb	0	; () banked
 10657  013BB2  6B8D               	clrf	___flmul@grs& (0+255),b
 10658                           
 10659                           ; BSR set to: 0
 10660  013BB4  0100               	movlb	0	; () banked
 10661  013BB6  5183               	movf	___flmul@a& (0+255),w,b
 10662  013BB8  0100               	movlb	0	; () banked
 10663  013BBA  0380               	mulwf	(___flmul@b+1)& (0+255),b
 10664  013BBC  CFF3 F096          	movff	prodl,___flmul@temp
 10665  013BC0  CFF4 F097          	movff	prodh,___flmul@temp+1
 10666                           
 10667                           ; BSR set to: 0
 10668  013BC4  0100               	movlb	0	; () banked
 10669  013BC6  5196               	movf	___flmul@temp& (0+255),w,b
 10670  013BC8  0100               	movlb	0	; () banked
 10671  013BCA  278D               	addwf	___flmul@grs& (0+255),f,b
 10672  013BCC  0100               	movlb	0	; () banked
 10673  013BCE  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 10674  013BD0  0100               	movlb	0	; () banked
 10675  013BD2  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10676  013BD4  0E00               	movlw	0
 10677  013BD6  0100               	movlb	0	; () banked
 10678  013BD8  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10679  013BDA  0E00               	movlw	0
 10680  013BDC  0100               	movlb	0	; () banked
 10681  013BDE  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10682                           
 10683                           ; BSR set to: 0
 10684  013BE0  0100               	movlb	0	; () banked
 10685  013BE2  5184               	movf	(___flmul@a+1)& (0+255),w,b
 10686  013BE4  0100               	movlb	0	; () banked
 10687  013BE6  037F               	mulwf	___flmul@b& (0+255),b
 10688  013BE8  CFF3 F096          	movff	prodl,___flmul@temp
 10689  013BEC  CFF4 F097          	movff	prodh,___flmul@temp+1
 10690                           
 10691                           ; BSR set to: 0
 10692  013BF0  0100               	movlb	0	; () banked
 10693  013BF2  5196               	movf	___flmul@temp& (0+255),w,b
 10694  013BF4  0100               	movlb	0	; () banked
 10695  013BF6  278D               	addwf	___flmul@grs& (0+255),f,b
 10696  013BF8  0100               	movlb	0	; () banked
 10697  013BFA  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 10698  013BFC  0100               	movlb	0	; () banked
 10699  013BFE  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10700  013C00  0E00               	movlw	0
 10701  013C02  0100               	movlb	0	; () banked
 10702  013C04  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10703  013C06  0E00               	movlw	0
 10704  013C08  0100               	movlb	0	; () banked
 10705  013C0A  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10706                           
 10707                           ; BSR set to: 0
 10708  013C0C  C08F  F090         	movff	___flmul@grs+2,___flmul@grs+3
 10709  013C10  C08E  F08F         	movff	___flmul@grs+1,___flmul@grs+2
 10710  013C14  C08D  F08E         	movff	___flmul@grs,___flmul@grs+1
 10711  013C18  0100               	movlb	0	; () banked
 10712  013C1A  6B8D               	clrf	___flmul@grs& (0+255),b
 10713  013C1C  0100               	movlb	0	; () banked
 10714  013C1E  5183               	movf	___flmul@a& (0+255),w,b
 10715  013C20  0100               	movlb	0	; () banked
 10716  013C22  037F               	mulwf	___flmul@b& (0+255),b
 10717  013C24  CFF3 F096          	movff	prodl,___flmul@temp
 10718  013C28  CFF4 F097          	movff	prodh,___flmul@temp+1
 10719                           
 10720                           ; BSR set to: 0
 10721  013C2C  0100               	movlb	0	; () banked
 10722  013C2E  5196               	movf	___flmul@temp& (0+255),w,b
 10723  013C30  0100               	movlb	0	; () banked
 10724  013C32  278D               	addwf	___flmul@grs& (0+255),f,b
 10725  013C34  0100               	movlb	0	; () banked
 10726  013C36  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 10727  013C38  0100               	movlb	0	; () banked
 10728  013C3A  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10729  013C3C  0E00               	movlw	0
 10730  013C3E  0100               	movlb	0	; () banked
 10731  013C40  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10732  013C42  0E00               	movlw	0
 10733  013C44  0100               	movlb	0	; () banked
 10734  013C46  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10735                           
 10736                           ; BSR set to: 0
 10737  013C48  0100               	movlb	0	; () banked
 10738  013C4A  5185               	movf	(___flmul@a+2)& (0+255),w,b
 10739  013C4C  0100               	movlb	0	; () banked
 10740  013C4E  0380               	mulwf	(___flmul@b+1)& (0+255),b
 10741  013C50  CFF3 F096          	movff	prodl,___flmul@temp
 10742  013C54  CFF4 F097          	movff	prodh,___flmul@temp+1
 10743  013C58  0100               	movlb	0	; () banked
 10744  013C5A  5196               	movf	___flmul@temp& (0+255),w,b
 10745  013C5C  0100               	movlb	0	; () banked
 10746  013C5E  2792               	addwf	___flmul@prod& (0+255),f,b
 10747  013C60  0100               	movlb	0	; () banked
 10748  013C62  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 10749  013C64  0100               	movlb	0	; () banked
 10750  013C66  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10751  013C68  0E00               	movlw	0
 10752  013C6A  0100               	movlb	0	; () banked
 10753  013C6C  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10754  013C6E  0E00               	movlw	0
 10755  013C70  0100               	movlb	0	; () banked
 10756  013C72  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10757                           
 10758                           ; BSR set to: 0
 10759  013C74  0100               	movlb	0	; () banked
 10760  013C76  5184               	movf	(___flmul@a+1)& (0+255),w,b
 10761  013C78  0100               	movlb	0	; () banked
 10762  013C7A  0381               	mulwf	(___flmul@b+2)& (0+255),b
 10763  013C7C  CFF3 F096          	movff	prodl,___flmul@temp
 10764  013C80  CFF4 F097          	movff	prodh,___flmul@temp+1
 10765                           
 10766                           ; BSR set to: 0
 10767  013C84  0100               	movlb	0	; () banked
 10768  013C86  5196               	movf	___flmul@temp& (0+255),w,b
 10769  013C88  0100               	movlb	0	; () banked
 10770  013C8A  2792               	addwf	___flmul@prod& (0+255),f,b
 10771  013C8C  0100               	movlb	0	; () banked
 10772  013C8E  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 10773  013C90  0100               	movlb	0	; () banked
 10774  013C92  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10775  013C94  0E00               	movlw	0
 10776  013C96  0100               	movlb	0	; () banked
 10777  013C98  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10778  013C9A  0E00               	movlw	0
 10779  013C9C  0100               	movlb	0	; () banked
 10780  013C9E  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10781  013CA0  0100               	movlb	0	; () banked
 10782  013CA2  5185               	movf	(___flmul@a+2)& (0+255),w,b
 10783  013CA4  0100               	movlb	0	; () banked
 10784  013CA6  0381               	mulwf	(___flmul@b+2)& (0+255),b
 10785  013CA8  CFF3 F096          	movff	prodl,___flmul@temp
 10786  013CAC  CFF4 F097          	movff	prodh,___flmul@temp+1
 10787                           
 10788                           ; BSR set to: 0
 10789  013CB0  0100               	movlb	0	; () banked
 10790  013CB2  5196               	movf	___flmul@temp& (0+255),w,b
 10791  013CB4  0100               	movlb	0	; () banked
 10792  013CB6  6F87               	movwf	??___flmul& (0+255),b
 10793  013CB8  0100               	movlb	0	; () banked
 10794  013CBA  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 10795  013CBC  0100               	movlb	0	; () banked
 10796  013CBE  6F88               	movwf	(??___flmul+1)& (0+255),b
 10797  013CC0  0100               	movlb	0	; () banked
 10798  013CC2  6B89               	clrf	(??___flmul+2)& (0+255),b
 10799  013CC4  0100               	movlb	0	; () banked
 10800  013CC6  6B8A               	clrf	(??___flmul+3)& (0+255),b
 10801  013CC8  C089  F08A         	movff	??___flmul+2,??___flmul+3
 10802  013CCC  C088  F089         	movff	??___flmul+1,??___flmul+2
 10803  013CD0  C087  F088         	movff	??___flmul,??___flmul+1
 10804  013CD4  0100               	movlb	0	; () banked
 10805  013CD6  6B87               	clrf	??___flmul& (0+255),b
 10806  013CD8  0100               	movlb	0	; () banked
 10807  013CDA  5187               	movf	??___flmul& (0+255),w,b
 10808  013CDC  0100               	movlb	0	; () banked
 10809  013CDE  2792               	addwf	___flmul@prod& (0+255),f,b
 10810  013CE0  0100               	movlb	0	; () banked
 10811  013CE2  5188               	movf	(??___flmul+1)& (0+255),w,b
 10812  013CE4  0100               	movlb	0	; () banked
 10813  013CE6  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10814  013CE8  0100               	movlb	0	; () banked
 10815  013CEA  5189               	movf	(??___flmul+2)& (0+255),w,b
 10816  013CEC  0100               	movlb	0	; () banked
 10817  013CEE  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10818  013CF0  0100               	movlb	0	; () banked
 10819  013CF2  518A               	movf	(??___flmul+3)& (0+255),w,b
 10820  013CF4  0100               	movlb	0	; () banked
 10821  013CF6  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10822                           
 10823                           ; BSR set to: 0
 10824  013CF8  C08D  F087         	movff	___flmul@grs,??___flmul
 10825  013CFC  C08E  F088         	movff	___flmul@grs+1,??___flmul+1
 10826  013D00  C08F  F089         	movff	___flmul@grs+2,??___flmul+2
 10827  013D04  C090  F08A         	movff	___flmul@grs+3,??___flmul+3
 10828  013D08  0E19               	movlw	25
 10829  013D0A  D006               	goto	u11270
 10830  013D0C                     u11275:
 10831  013D0C  0100               	movlb	0	; () banked
 10832  013D0E  90D8               	bcf	status,0,c
 10833  013D10  338A               	rrcf	(??___flmul+3)& (0+255),f,b
 10834  013D12  3389               	rrcf	(??___flmul+2)& (0+255),f,b
 10835  013D14  3388               	rrcf	(??___flmul+1)& (0+255),f,b
 10836  013D16  3387               	rrcf	??___flmul& (0+255),f,b
 10837  013D18                     u11270:
 10838  013D18  2EE8               	decfsz	wreg,f,c
 10839  013D1A  D7F8               	goto	u11275
 10840  013D1C  0100               	movlb	0	; () banked
 10841  013D1E  5187               	movf	??___flmul& (0+255),w,b
 10842  013D20  0100               	movlb	0	; () banked
 10843  013D22  2792               	addwf	___flmul@prod& (0+255),f,b
 10844  013D24  0100               	movlb	0	; () banked
 10845  013D26  5188               	movf	(??___flmul+1)& (0+255),w,b
 10846  013D28  0100               	movlb	0	; () banked
 10847  013D2A  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10848  013D2C  0100               	movlb	0	; () banked
 10849  013D2E  5189               	movf	(??___flmul+2)& (0+255),w,b
 10850  013D30  0100               	movlb	0	; () banked
 10851  013D32  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10852  013D34  0100               	movlb	0	; () banked
 10853  013D36  518A               	movf	(??___flmul+3)& (0+255),w,b
 10854  013D38  0100               	movlb	0	; () banked
 10855  013D3A  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10856                           
 10857                           ; BSR set to: 0
 10858  013D3C  C08F  F090         	movff	___flmul@grs+2,___flmul@grs+3
 10859  013D40  C08E  F08F         	movff	___flmul@grs+1,___flmul@grs+2
 10860  013D44  C08D  F08E         	movff	___flmul@grs,___flmul@grs+1
 10861  013D48  0100               	movlb	0	; () banked
 10862  013D4A  6B8D               	clrf	___flmul@grs& (0+255),b
 10863                           
 10864                           ; BSR set to: 0
 10865  013D4C  0100               	movlb	0	; () banked
 10866  013D4E  518C               	movf	___flmul@aexp& (0+255),w,b
 10867  013D50  C091  F087         	movff	___flmul@bexp,??___flmul
 10868  013D54  0100               	movlb	0	; () banked
 10869  013D56  6B88               	clrf	(??___flmul+1)& (0+255),b
 10870  013D58  0100               	movlb	0	; () banked
 10871  013D5A  2787               	addwf	??___flmul& (0+255),f,b
 10872  013D5C  0E00               	movlw	0
 10873  013D5E  2388               	addwfc	(??___flmul+1)& (0+255),f,b
 10874  013D60  0E82               	movlw	130
 10875  013D62  0100               	movlb	0	; () banked
 10876  013D64  2587               	addwf	??___flmul& (0+255),w,b
 10877  013D66  0100               	movlb	0	; () banked
 10878  013D68  6F96               	movwf	___flmul@temp& (0+255),b
 10879  013D6A  0EFF               	movlw	255
 10880  013D6C  0100               	movlb	0	; () banked
 10881  013D6E  2188               	addwfc	(??___flmul+1)& (0+255),w,b
 10882  013D70  0100               	movlb	0	; () banked
 10883  013D72  6F97               	movwf	(___flmul@temp+1)& (0+255),b
 10884  013D74  D015               	goto	l8451
 10885  013D76                     l8445:
 10886                           
 10887                           ; BSR set to: 0
 10888  013D76  0100               	movlb	0	; () banked
 10889  013D78  90D8               	bcf	status,0,c
 10890  013D7A  3792               	rlcf	___flmul@prod& (0+255),f,b
 10891  013D7C  3793               	rlcf	(___flmul@prod+1)& (0+255),f,b
 10892  013D7E  3794               	rlcf	(___flmul@prod+2)& (0+255),f,b
 10893  013D80  3795               	rlcf	(___flmul@prod+3)& (0+255),f,b
 10894                           
 10895                           ; BSR set to: 0
 10896  013D82  0100               	movlb	0	; () banked
 10897  013D84  AF90               	btfss	(___flmul@grs+3)& (0+255),7,b
 10898  013D86  D002               	goto	l1672
 10899                           
 10900                           ; BSR set to: 0
 10901  013D88  0100               	movlb	0	; () banked
 10902  013D8A  8192               	bsf	___flmul@prod& (0+255),0,b
 10903  013D8C                     l1672:
 10904                           
 10905                           ; BSR set to: 0
 10906  013D8C  0100               	movlb	0	; () banked
 10907  013D8E  90D8               	bcf	status,0,c
 10908  013D90  378D               	rlcf	___flmul@grs& (0+255),f,b
 10909  013D92  378E               	rlcf	(___flmul@grs+1)& (0+255),f,b
 10910  013D94  378F               	rlcf	(___flmul@grs+2)& (0+255),f,b
 10911  013D96  3790               	rlcf	(___flmul@grs+3)& (0+255),f,b
 10912  013D98  0100               	movlb	0	; () banked
 10913  013D9A  0796               	decf	___flmul@temp& (0+255),f,b
 10914  013D9C  A0D8               	btfss	status,0,c
 10915  013D9E  0797               	decf	(___flmul@temp+1)& (0+255),f,b
 10916  013DA0                     l8451:
 10917                           
 10918                           ; BSR set to: 0
 10919  013DA0  0100               	movlb	0	; () banked
 10920  013DA2  AF94               	btfss	(___flmul@prod+2)& (0+255),7,b
 10921  013DA4  D7E8               	goto	l8445
 10922                           
 10923                           ; BSR set to: 0
 10924                           
 10925                           ; BSR set to: 0
 10926  013DA6  0E00               	movlw	0
 10927  013DA8  0100               	movlb	0	; () banked
 10928  013DAA  6F8C               	movwf	___flmul@aexp& (0+255),b
 10929                           
 10930                           ; BSR set to: 0
 10931  013DAC  0100               	movlb	0	; () banked
 10932  013DAE  AF90               	btfss	(___flmul@grs+3)& (0+255),7,b
 10933  013DB0  D024               	goto	l1674
 10934                           
 10935                           ; BSR set to: 0
 10936  013DB2  0EFF               	movlw	255
 10937  013DB4  0100               	movlb	0	; () banked
 10938  013DB6  158D               	andwf	___flmul@grs& (0+255),w,b
 10939  013DB8  0100               	movlb	0	; () banked
 10940  013DBA  6F87               	movwf	??___flmul& (0+255),b
 10941  013DBC  0EFF               	movlw	255
 10942  013DBE  0100               	movlb	0	; () banked
 10943  013DC0  158E               	andwf	(___flmul@grs+1)& (0+255),w,b
 10944  013DC2  0100               	movlb	0	; () banked
 10945  013DC4  6F88               	movwf	(??___flmul+1)& (0+255),b
 10946  013DC6  0EFF               	movlw	255
 10947  013DC8  0100               	movlb	0	; () banked
 10948  013DCA  158F               	andwf	(___flmul@grs+2)& (0+255),w,b
 10949  013DCC  0100               	movlb	0	; () banked
 10950  013DCE  6F89               	movwf	(??___flmul+2)& (0+255),b
 10951  013DD0  0E7F               	movlw	127
 10952  013DD2  0100               	movlb	0	; () banked
 10953  013DD4  1590               	andwf	(___flmul@grs+3)& (0+255),w,b
 10954  013DD6  0100               	movlb	0	; () banked
 10955  013DD8  6F8A               	movwf	(??___flmul+3)& (0+255),b
 10956  013DDA  0100               	movlb	0	; () banked
 10957  013DDC  5187               	movf	??___flmul& (0+255),w,b
 10958  013DDE  0100               	movlb	0	; () banked
 10959  013DE0  1188               	iorwf	(??___flmul+1)& (0+255),w,b
 10960  013DE2  0100               	movlb	0	; () banked
 10961  013DE4  1189               	iorwf	(??___flmul+2)& (0+255),w,b
 10962  013DE6  0100               	movlb	0	; () banked
 10963  013DE8  118A               	iorwf	(??___flmul+3)& (0+255),w,b
 10964  013DEA  A4D8               	btfss	status,2,c
 10965  013DEC  D003               	goto	l8461
 10966                           
 10967                           ; BSR set to: 0
 10968                           
 10969                           ; BSR set to: 0
 10970  013DEE  0100               	movlb	0	; () banked
 10971  013DF0  A192               	btfss	___flmul@prod& (0+255),0,b
 10972  013DF2  D003               	goto	l1674
 10973  013DF4                     l8461:
 10974                           
 10975                           ; BSR set to: 0
 10976  013DF4  0E01               	movlw	1
 10977  013DF6  0100               	movlb	0	; () banked
 10978  013DF8  6F8C               	movwf	___flmul@aexp& (0+255),b
 10979  013DFA                     l1674:
 10980                           
 10981                           ; BSR set to: 0
 10982  013DFA  0100               	movlb	0	; () banked
 10983  013DFC  518C               	movf	___flmul@aexp& (0+255),w,b
 10984  013DFE  0100               	movlb	0	; () banked
 10985  013E00  B4D8               	btfsc	status,2,c
 10986  013E02  D023               	goto	l8471
 10987                           
 10988                           ; BSR set to: 0
 10989  013E04  0E01               	movlw	1
 10990  013E06  0100               	movlb	0	; () banked
 10991  013E08  2792               	addwf	___flmul@prod& (0+255),f,b
 10992  013E0A  0E00               	movlw	0
 10993  013E0C  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10994  013E0E  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10995  013E10  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10996                           
 10997                           ; BSR set to: 0
 10998  013E12  0100               	movlb	0	; () banked
 10999  013E14  A195               	btfss	(___flmul@prod+3)& (0+255),0,b
 11000  013E16  D019               	goto	l8471
 11001                           
 11002                           ; BSR set to: 0
 11003  013E18  C092  F087         	movff	___flmul@prod,??___flmul
 11004  013E1C  C093  F088         	movff	___flmul@prod+1,??___flmul+1
 11005  013E20  C094  F089         	movff	___flmul@prod+2,??___flmul+2
 11006  013E24  C095  F08A         	movff	___flmul@prod+3,??___flmul+3
 11007  013E28  0100               	movlb	0	; () banked
 11008  013E2A  358A               	rlcf	(??___flmul+3)& (0+255),w,b
 11009  013E2C  338A               	rrcf	(??___flmul+3)& (0+255),f,b
 11010  013E2E  3389               	rrcf	(??___flmul+2)& (0+255),f,b
 11011  013E30  3388               	rrcf	(??___flmul+1)& (0+255),f,b
 11012  013E32  3387               	rrcf	??___flmul& (0+255),f,b
 11013  013E34  C087  F092         	movff	??___flmul,___flmul@prod
 11014  013E38  C088  F093         	movff	??___flmul+1,___flmul@prod+1
 11015  013E3C  C089  F094         	movff	??___flmul+2,___flmul@prod+2
 11016  013E40  C08A  F095         	movff	??___flmul+3,___flmul@prod+3
 11017                           
 11018                           ; BSR set to: 0
 11019  013E44  0100               	movlb	0	; () banked
 11020  013E46  4B96               	infsnz	___flmul@temp& (0+255),f,b
 11021  013E48  2B97               	incf	(___flmul@temp+1)& (0+255),f,b
 11022  013E4A                     l8471:
 11023                           
 11024                           ; BSR set to: 0
 11025  013E4A  0100               	movlb	0	; () banked
 11026  013E4C  BF97               	btfsc	(___flmul@temp+1)& (0+255),7,b
 11027  013E4E  D010               	goto	l8475
 11028  013E50  0100               	movlb	0	; () banked
 11029  013E52  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 11030  013E54  E104               	bnz	u11350
 11031  013E56  0100               	movlb	0	; () banked
 11032  013E58  2996               	incf	___flmul@temp& (0+255),w,b
 11033  013E5A  A0D8               	btfss	status,0,c
 11034  013E5C  D009               	goto	l8475
 11035  013E5E                     u11350:
 11036                           
 11037                           ; BSR set to: 0
 11038  013E5E  0E00               	movlw	0
 11039  013E60  0100               	movlb	0	; () banked
 11040  013E62  6F92               	movwf	___flmul@prod& (0+255),b
 11041  013E64  0E00               	movlw	0
 11042  013E66  6F93               	movwf	(___flmul@prod+1)& (0+255),b
 11043  013E68  0E80               	movlw	128
 11044  013E6A  6F94               	movwf	(___flmul@prod+2)& (0+255),b
 11045  013E6C  0E7F               	movlw	127
 11046  013E6E  D02B               	goto	L11
 11047  013E70                     l8475:
 11048                           
 11049                           ; BSR set to: 0
 11050  013E70  0100               	movlb	0	; () banked
 11051  013E72  BF97               	btfsc	(___flmul@temp+1)& (0+255),7,b
 11052  013E74  D007               	goto	l8477
 11053  013E76  0100               	movlb	0	; () banked
 11054  013E78  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 11055  013E7A  E111               	bnz	l1682
 11056  013E7C  0100               	movlb	0	; () banked
 11057  013E7E  0596               	decf	___flmul@temp& (0+255),w,b
 11058  013E80  B0D8               	btfsc	status,0,c
 11059  013E82  D00D               	goto	l1682
 11060  013E84                     l8477:
 11061                           
 11062                           ; BSR set to: 0
 11063  013E84  0E00               	movlw	0
 11064  013E86  0100               	movlb	0	; () banked
 11065  013E88  6F92               	movwf	___flmul@prod& (0+255),b
 11066  013E8A  0E00               	movlw	0
 11067  013E8C  6F93               	movwf	(___flmul@prod+1)& (0+255),b
 11068  013E8E  0E00               	movlw	0
 11069  013E90  6F94               	movwf	(___flmul@prod+2)& (0+255),b
 11070  013E92  0E00               	movlw	0
 11071  013E94  6F95               	movwf	(___flmul@prod+3)& (0+255),b
 11072  013E96  0E00               	movlw	0
 11073  013E98  0100               	movlb	0	; () banked
 11074  013E9A  6F8B               	movwf	___flmul@sign& (0+255),b
 11075  013E9C  D015               	goto	l8487
 11076  013E9E                     l1682:
 11077                           
 11078                           ; BSR set to: 0
 11079  013E9E  C096  F091         	movff	___flmul@temp,___flmul@bexp
 11080                           
 11081                           ; BSR set to: 0
 11082  013EA2  0EFF               	movlw	255
 11083  013EA4  0100               	movlb	0	; () banked
 11084  013EA6  1792               	andwf	___flmul@prod& (0+255),f,b
 11085  013EA8  0EFF               	movlw	255
 11086  013EAA  1793               	andwf	(___flmul@prod+1)& (0+255),f,b
 11087  013EAC  0E7F               	movlw	127
 11088  013EAE  1794               	andwf	(___flmul@prod+2)& (0+255),f,b
 11089  013EB0  0E00               	movlw	0
 11090  013EB2  1795               	andwf	(___flmul@prod+3)& (0+255),f,b
 11091                           
 11092                           ; BSR set to: 0
 11093  013EB4  0100               	movlb	0	; () banked
 11094  013EB6  A191               	btfss	___flmul@bexp& (0+255),0,b
 11095  013EB8  D002               	goto	l8485
 11096                           
 11097                           ; BSR set to: 0
 11098  013EBA  0100               	movlb	0	; () banked
 11099  013EBC  8F94               	bsf	(___flmul@prod+2)& (0+255),7,b
 11100  013EBE                     l8485:
 11101                           
 11102                           ; BSR set to: 0
 11103  013EBE  0100               	movlb	0	; () banked
 11104  013EC0  90D8               	bcf	status,0,c
 11105  013EC2  3191               	rrcf	___flmul@bexp& (0+255),w,b
 11106  013EC4  0100               	movlb	0	; () banked
 11107  013EC6                     L11:
 11108  013EC6  6F95               	movwf	(___flmul@prod+3)& (0+255),b
 11109  013EC8                     l8487:
 11110                           
 11111                           ; BSR set to: 0
 11112  013EC8  0100               	movlb	0	; () banked
 11113  013ECA  518B               	movf	___flmul@sign& (0+255),w,b
 11114  013ECC  0100               	movlb	0	; () banked
 11115  013ECE  1395               	iorwf	(___flmul@prod+3)& (0+255),f,b
 11116                           
 11117                           ; BSR set to: 0
 11118  013ED0  C092  F07F         	movff	___flmul@prod,?___flmul
 11119  013ED4  C093  F080         	movff	___flmul@prod+1,?___flmul+1
 11120  013ED8  C094  F081         	movff	___flmul@prod+2,?___flmul+2
 11121  013EDC  C095  F082         	movff	___flmul@prod+3,?___flmul+3
 11122  013EE0  0012               	return	
 11123  013EE2                     __end_of___flmul:
 11124                           	opt stack 0
 11125                           tblptru	equ	0xFF8
 11126                           tblptrh	equ	0xFF7
 11127                           tblptrl	equ	0xFF6
 11128                           tablat	equ	0xFF5
 11129                           prodh	equ	0xFF4
 11130                           prodl	equ	0xFF3
 11131                           intcon	equ	0xFF2
 11132                           postinc0	equ	0xFEE
 11133                           wreg	equ	0xFE8
 11134                           indf2	equ	0xFDF
 11135                           postinc2	equ	0xFDE
 11136                           fsr2h	equ	0xFDA
 11137                           fsr2l	equ	0xFD9
 11138                           status	equ	0xFD8
 11139                           
 11140 ;; *************** function ___awmod *****************
 11141 ;; Defined at:
 11142 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
 11143 ;; Parameters:    Size  Location     Type
 11144 ;;  dividend        2   17[BANK0 ] int 
 11145 ;;  divisor         2   19[BANK0 ] int 
 11146 ;; Auto vars:     Size  Location     Type
 11147 ;;  sign            1   22[BANK0 ] unsigned char 
 11148 ;;  counter         1   21[BANK0 ] unsigned char 
 11149 ;; Return value:  Size  Location     Type
 11150 ;;                  2   17[BANK0 ] int 
 11151 ;; Registers used:
 11152 ;;		wreg, status,2, status,0
 11153 ;; Tracked objects:
 11154 ;;		On entry : 0/0
 11155 ;;		On exit  : 0/0
 11156 ;;		Unchanged: 0/0
 11157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11158 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11159 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11161 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11162 ;;Total ram usage:        6 bytes
 11163 ;; Hardware stack levels used:    1
 11164 ;; Hardware stack levels required when called:    3
 11165 ;; This function calls:
 11166 ;;		Nothing
 11167 ;; This function is called by:
 11168 ;;		_fround
 11169 ;;		_scale
 11170 ;; This function uses a non-reentrant model
 11171 ;;
 11172                           
 11173                           	psect	text15
 11174  015F2C                     __ptext15:
 11175                           	opt stack 0
 11176  015F2C                     ___awmod:
 11177                           	opt stack 24
 11178                           
 11179                           ; BSR set to: 0
 11180                           ;incstack = 0
 11181  015F2C  0E00               	movlw	0
 11182  015F2E  0100               	movlb	0	; () banked
 11183  015F30  6F76               	movwf	___awmod@sign& (0+255),b
 11184                           
 11185                           ; BSR set to: 0
 11186  015F32  0100               	movlb	0	; () banked
 11187  015F34  AF72               	btfss	(___awmod@dividend+1)& (0+255),7,b
 11188  015F36  D008               	goto	l8545
 11189                           
 11190                           ; BSR set to: 0
 11191  015F38  0100               	movlb	0	; () banked
 11192  015F3A  6D71               	negf	___awmod@dividend& (0+255),b
 11193  015F3C  1F72               	comf	(___awmod@dividend+1)& (0+255),f,b
 11194  015F3E  B0D8               	btfsc	status,0,c
 11195  015F40  2B72               	incf	(___awmod@dividend+1)& (0+255),f,b
 11196                           
 11197                           ; BSR set to: 0
 11198  015F42  0E01               	movlw	1
 11199  015F44  0100               	movlb	0	; () banked
 11200  015F46  6F76               	movwf	___awmod@sign& (0+255),b
 11201  015F48                     l8545:
 11202                           
 11203                           ; BSR set to: 0
 11204  015F48  0100               	movlb	0	; () banked
 11205  015F4A  AF74               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11206  015F4C  D005               	goto	l8549
 11207                           
 11208                           ; BSR set to: 0
 11209  015F4E  0100               	movlb	0	; () banked
 11210  015F50  6D73               	negf	___awmod@divisor& (0+255),b
 11211  015F52  1F74               	comf	(___awmod@divisor+1)& (0+255),f,b
 11212  015F54  B0D8               	btfsc	status,0,c
 11213  015F56  2B74               	incf	(___awmod@divisor+1)& (0+255),f,b
 11214  015F58                     l8549:
 11215                           
 11216                           ; BSR set to: 0
 11217  015F58  0100               	movlb	0	; () banked
 11218  015F5A  5173               	movf	___awmod@divisor& (0+255),w,b
 11219  015F5C  0100               	movlb	0	; () banked
 11220  015F5E  1174               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 11221  015F60  B4D8               	btfsc	status,2,c
 11222  015F62  D026               	goto	l8565
 11223                           
 11224                           ; BSR set to: 0
 11225  015F64  0E01               	movlw	1
 11226  015F66  0100               	movlb	0	; () banked
 11227  015F68  6F75               	movwf	___awmod@counter& (0+255),b
 11228  015F6A  D006               	goto	l8555
 11229  015F6C                     l8553:
 11230                           
 11231                           ; BSR set to: 0
 11232  015F6C  0100               	movlb	0	; () banked
 11233  015F6E  90D8               	bcf	status,0,c
 11234  015F70  3773               	rlcf	___awmod@divisor& (0+255),f,b
 11235  015F72  3774               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 11236  015F74  0100               	movlb	0	; () banked
 11237  015F76  2B75               	incf	___awmod@counter& (0+255),f,b
 11238  015F78                     l8555:
 11239                           
 11240                           ; BSR set to: 0
 11241  015F78  0100               	movlb	0	; () banked
 11242  015F7A  AF74               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11243  015F7C  D7F7               	goto	l8553
 11244  015F7E                     l8557:
 11245                           
 11246                           ; BSR set to: 0
 11247  015F7E  0100               	movlb	0	; () banked
 11248  015F80  5173               	movf	___awmod@divisor& (0+255),w,b
 11249  015F82  0100               	movlb	0	; () banked
 11250  015F84  5D71               	subwf	___awmod@dividend& (0+255),w,b
 11251  015F86  0100               	movlb	0	; () banked
 11252  015F88  5174               	movf	(___awmod@divisor+1)& (0+255),w,b
 11253  015F8A  0100               	movlb	0	; () banked
 11254  015F8C  5972               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 11255  015F8E  A0D8               	btfss	status,0,c
 11256  015F90  D008               	goto	l8561
 11257                           
 11258                           ; BSR set to: 0
 11259  015F92  0100               	movlb	0	; () banked
 11260  015F94  5173               	movf	___awmod@divisor& (0+255),w,b
 11261  015F96  0100               	movlb	0	; () banked
 11262  015F98  5F71               	subwf	___awmod@dividend& (0+255),f,b
 11263  015F9A  0100               	movlb	0	; () banked
 11264  015F9C  5174               	movf	(___awmod@divisor+1)& (0+255),w,b
 11265  015F9E  0100               	movlb	0	; () banked
 11266  015FA0  5B72               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 11267  015FA2                     l8561:
 11268                           
 11269                           ; BSR set to: 0
 11270  015FA2  0100               	movlb	0	; () banked
 11271  015FA4  90D8               	bcf	status,0,c
 11272  015FA6  3374               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 11273  015FA8  3373               	rrcf	___awmod@divisor& (0+255),f,b
 11274                           
 11275                           ; BSR set to: 0
 11276  015FAA  0100               	movlb	0	; () banked
 11277  015FAC  2F75               	decfsz	___awmod@counter& (0+255),f,b
 11278  015FAE  D7E7               	goto	l8557
 11279  015FB0                     l8565:
 11280                           
 11281                           ; BSR set to: 0
 11282  015FB0  0100               	movlb	0	; () banked
 11283  015FB2  5176               	movf	___awmod@sign& (0+255),w,b
 11284  015FB4  0100               	movlb	0	; () banked
 11285  015FB6  B4D8               	btfsc	status,2,c
 11286  015FB8  D005               	goto	l8569
 11287                           
 11288                           ; BSR set to: 0
 11289  015FBA  0100               	movlb	0	; () banked
 11290  015FBC  6D71               	negf	___awmod@dividend& (0+255),b
 11291  015FBE  1F72               	comf	(___awmod@dividend+1)& (0+255),f,b
 11292  015FC0  B0D8               	btfsc	status,0,c
 11293  015FC2  2B72               	incf	(___awmod@dividend+1)& (0+255),f,b
 11294  015FC4                     l8569:
 11295                           
 11296                           ; BSR set to: 0
 11297  015FC4  C071  F071         	movff	___awmod@dividend,?___awmod
 11298  015FC8  C072  F072         	movff	___awmod@dividend+1,?___awmod+1
 11299  015FCC  0012               	return	
 11300  015FCE                     __end_of___awmod:
 11301                           	opt stack 0
 11302                           tblptru	equ	0xFF8
 11303                           tblptrh	equ	0xFF7
 11304                           tblptrl	equ	0xFF6
 11305                           tablat	equ	0xFF5
 11306                           prodh	equ	0xFF4
 11307                           prodl	equ	0xFF3
 11308                           intcon	equ	0xFF2
 11309                           postinc0	equ	0xFEE
 11310                           wreg	equ	0xFE8
 11311                           indf2	equ	0xFDF
 11312                           postinc2	equ	0xFDE
 11313                           fsr2h	equ	0xFDA
 11314                           fsr2l	equ	0xFD9
 11315                           status	equ	0xFD8
 11316                           
 11317 ;; *************** function ___awdiv *****************
 11318 ;; Defined at:
 11319 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
 11320 ;; Parameters:    Size  Location     Type
 11321 ;;  dividend        2   23[BANK0 ] int 
 11322 ;;  divisor         2   25[BANK0 ] int 
 11323 ;; Auto vars:     Size  Location     Type
 11324 ;;  quotient        2   29[BANK0 ] int 
 11325 ;;  sign            1   28[BANK0 ] unsigned char 
 11326 ;;  counter         1   27[BANK0 ] unsigned char 
 11327 ;; Return value:  Size  Location     Type
 11328 ;;                  2   23[BANK0 ] int 
 11329 ;; Registers used:
 11330 ;;		wreg, status,2, status,0
 11331 ;; Tracked objects:
 11332 ;;		On entry : 0/0
 11333 ;;		On exit  : 0/0
 11334 ;;		Unchanged: 0/0
 11335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11336 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11337 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11339 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11340 ;;Total ram usage:        8 bytes
 11341 ;; Hardware stack levels used:    1
 11342 ;; Hardware stack levels required when called:    3
 11343 ;; This function calls:
 11344 ;;		Nothing
 11345 ;; This function is called by:
 11346 ;;		_main
 11347 ;;		_fround
 11348 ;;		_scale
 11349 ;;		_sprintf
 11350 ;; This function uses a non-reentrant model
 11351 ;;
 11352                           
 11353                           	psect	text16
 11354  015B96                     __ptext16:
 11355                           	opt stack 0
 11356  015B96                     ___awdiv:
 11357                           	opt stack 27
 11358                           
 11359                           ; BSR set to: 0
 11360                           ;incstack = 0
 11361  015B96  0E00               	movlw	0
 11362  015B98  0100               	movlb	0	; () banked
 11363  015B9A  6F7C               	movwf	___awdiv@sign& (0+255),b
 11364                           
 11365                           ; BSR set to: 0
 11366  015B9C  0100               	movlb	0	; () banked
 11367  015B9E  AF7A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 11368  015BA0  D008               	goto	l8501
 11369                           
 11370                           ; BSR set to: 0
 11371  015BA2  0100               	movlb	0	; () banked
 11372  015BA4  6D79               	negf	___awdiv@divisor& (0+255),b
 11373  015BA6  1F7A               	comf	(___awdiv@divisor+1)& (0+255),f,b
 11374  015BA8  B0D8               	btfsc	status,0,c
 11375  015BAA  2B7A               	incf	(___awdiv@divisor+1)& (0+255),f,b
 11376                           
 11377                           ; BSR set to: 0
 11378  015BAC  0E01               	movlw	1
 11379  015BAE  0100               	movlb	0	; () banked
 11380  015BB0  6F7C               	movwf	___awdiv@sign& (0+255),b
 11381  015BB2                     l8501:
 11382                           
 11383                           ; BSR set to: 0
 11384  015BB2  0100               	movlb	0	; () banked
 11385  015BB4  AF78               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 11386  015BB6  D008               	goto	l8507
 11387                           
 11388                           ; BSR set to: 0
 11389  015BB8  0100               	movlb	0	; () banked
 11390  015BBA  6D77               	negf	___awdiv@dividend& (0+255),b
 11391  015BBC  1F78               	comf	(___awdiv@dividend+1)& (0+255),f,b
 11392  015BBE  B0D8               	btfsc	status,0,c
 11393  015BC0  2B78               	incf	(___awdiv@dividend+1)& (0+255),f,b
 11394                           
 11395                           ; BSR set to: 0
 11396  015BC2  0E01               	movlw	1
 11397  015BC4  0100               	movlb	0	; () banked
 11398  015BC6  1B7C               	xorwf	___awdiv@sign& (0+255),f,b
 11399  015BC8                     l8507:
 11400                           
 11401                           ; BSR set to: 0
 11402  015BC8  0E00               	movlw	0
 11403  015BCA  0100               	movlb	0	; () banked
 11404  015BCC  6F7E               	movwf	(___awdiv@quotient+1)& (0+255),b
 11405  015BCE  0E00               	movlw	0
 11406  015BD0  6F7D               	movwf	___awdiv@quotient& (0+255),b
 11407                           
 11408                           ; BSR set to: 0
 11409  015BD2  0100               	movlb	0	; () banked
 11410  015BD4  5179               	movf	___awdiv@divisor& (0+255),w,b
 11411  015BD6  0100               	movlb	0	; () banked
 11412  015BD8  117A               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 11413  015BDA  B4D8               	btfsc	status,2,c
 11414  015BDC  D02C               	goto	l8529
 11415                           
 11416                           ; BSR set to: 0
 11417  015BDE  0E01               	movlw	1
 11418  015BE0  0100               	movlb	0	; () banked
 11419  015BE2  6F7B               	movwf	___awdiv@counter& (0+255),b
 11420  015BE4  D006               	goto	l8515
 11421  015BE6                     l8513:
 11422                           
 11423                           ; BSR set to: 0
 11424  015BE6  0100               	movlb	0	; () banked
 11425  015BE8  90D8               	bcf	status,0,c
 11426  015BEA  3779               	rlcf	___awdiv@divisor& (0+255),f,b
 11427  015BEC  377A               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 11428  015BEE  0100               	movlb	0	; () banked
 11429  015BF0  2B7B               	incf	___awdiv@counter& (0+255),f,b
 11430  015BF2                     l8515:
 11431                           
 11432                           ; BSR set to: 0
 11433  015BF2  0100               	movlb	0	; () banked
 11434  015BF4  AF7A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 11435  015BF6  D7F7               	goto	l8513
 11436  015BF8                     l8517:
 11437                           
 11438                           ; BSR set to: 0
 11439  015BF8  0100               	movlb	0	; () banked
 11440  015BFA  90D8               	bcf	status,0,c
 11441  015BFC  377D               	rlcf	___awdiv@quotient& (0+255),f,b
 11442  015BFE  377E               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 11443                           
 11444                           ; BSR set to: 0
 11445  015C00  0100               	movlb	0	; () banked
 11446  015C02  5179               	movf	___awdiv@divisor& (0+255),w,b
 11447  015C04  0100               	movlb	0	; () banked
 11448  015C06  5D77               	subwf	___awdiv@dividend& (0+255),w,b
 11449  015C08  0100               	movlb	0	; () banked
 11450  015C0A  517A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11451  015C0C  0100               	movlb	0	; () banked
 11452  015C0E  5978               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 11453  015C10  A0D8               	btfss	status,0,c
 11454  015C12  D00A               	goto	l8525
 11455                           
 11456                           ; BSR set to: 0
 11457  015C14  0100               	movlb	0	; () banked
 11458  015C16  5179               	movf	___awdiv@divisor& (0+255),w,b
 11459  015C18  0100               	movlb	0	; () banked
 11460  015C1A  5F77               	subwf	___awdiv@dividend& (0+255),f,b
 11461  015C1C  0100               	movlb	0	; () banked
 11462  015C1E  517A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11463  015C20  0100               	movlb	0	; () banked
 11464  015C22  5B78               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 11465                           
 11466                           ; BSR set to: 0
 11467  015C24  0100               	movlb	0	; () banked
 11468  015C26  817D               	bsf	___awdiv@quotient& (0+255),0,b
 11469  015C28                     l8525:
 11470                           
 11471                           ; BSR set to: 0
 11472  015C28  0100               	movlb	0	; () banked
 11473  015C2A  90D8               	bcf	status,0,c
 11474  015C2C  337A               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 11475  015C2E  3379               	rrcf	___awdiv@divisor& (0+255),f,b
 11476                           
 11477                           ; BSR set to: 0
 11478  015C30  0100               	movlb	0	; () banked
 11479  015C32  2F7B               	decfsz	___awdiv@counter& (0+255),f,b
 11480  015C34  D7E1               	goto	l8517
 11481  015C36                     l8529:
 11482                           
 11483                           ; BSR set to: 0
 11484  015C36  0100               	movlb	0	; () banked
 11485  015C38  517C               	movf	___awdiv@sign& (0+255),w,b
 11486  015C3A  0100               	movlb	0	; () banked
 11487  015C3C  B4D8               	btfsc	status,2,c
 11488  015C3E  D005               	goto	l8533
 11489                           
 11490                           ; BSR set to: 0
 11491  015C40  0100               	movlb	0	; () banked
 11492  015C42  6D7D               	negf	___awdiv@quotient& (0+255),b
 11493  015C44  1F7E               	comf	(___awdiv@quotient+1)& (0+255),f,b
 11494  015C46  B0D8               	btfsc	status,0,c
 11495  015C48  2B7E               	incf	(___awdiv@quotient+1)& (0+255),f,b
 11496  015C4A                     l8533:
 11497                           
 11498                           ; BSR set to: 0
 11499  015C4A  C07D  F077         	movff	___awdiv@quotient,?___awdiv
 11500  015C4E  C07E  F078         	movff	___awdiv@quotient+1,?___awdiv+1
 11501  015C52  0012               	return	
 11502  015C54                     __end_of___awdiv:
 11503                           	opt stack 0
 11504                           tblptru	equ	0xFF8
 11505                           tblptrh	equ	0xFF7
 11506                           tblptrl	equ	0xFF6
 11507                           tablat	equ	0xFF5
 11508                           prodh	equ	0xFF4
 11509                           prodl	equ	0xFF3
 11510                           intcon	equ	0xFF2
 11511                           postinc0	equ	0xFEE
 11512                           wreg	equ	0xFE8
 11513                           indf2	equ	0xFDF
 11514                           postinc2	equ	0xFDE
 11515                           fsr2h	equ	0xFDA
 11516                           fsr2l	equ	0xFD9
 11517                           status	equ	0xFD8
 11518                           
 11519 ;; *************** function __tdiv_to_l_ *****************
 11520 ;; Defined at:
 11521 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdivl.c"
 11522 ;; Parameters:    Size  Location     Type
 11523 ;;  f1              4   17[BANK0 ] float 
 11524 ;;  f2              4   21[BANK0 ] float 
 11525 ;; Auto vars:     Size  Location     Type
 11526 ;;  quot            4   28[BANK0 ] unsigned long 
 11527 ;;  exp1            1   33[BANK0 ] unsigned char 
 11528 ;;  cntr            1   32[BANK0 ] unsigned char 
 11529 ;; Return value:  Size  Location     Type
 11530 ;;                  4   17[BANK0 ] unsigned long 
 11531 ;; Registers used:
 11532 ;;		wreg, status,2, status,0
 11533 ;; Tracked objects:
 11534 ;;		On entry : 0/0
 11535 ;;		On exit  : 0/0
 11536 ;;		Unchanged: 0/0
 11537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11538 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11539 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11540 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11541 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11542 ;;Total ram usage:       17 bytes
 11543 ;; Hardware stack levels used:    1
 11544 ;; Hardware stack levels required when called:    3
 11545 ;; This function calls:
 11546 ;;		Nothing
 11547 ;; This function is called by:
 11548 ;;		_sprintf
 11549 ;; This function uses a non-reentrant model
 11550 ;;
 11551                           
 11552                           	psect	text17
 11553  01537A                     __ptext17:
 11554                           	opt stack 0
 11555  01537A                     __tdiv_to_l_:
 11556                           	opt stack 25
 11557                           
 11558                           ; BSR set to: 0
 11559                           ;incstack = 0
 11560  01537A  C073  F079         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 11561  01537E  0100               	movlb	0	; () banked
 11562  015380  6B7A               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 11563  015382  6B7B               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 11564  015384  0100               	movlb	0	; () banked
 11565  015386  3572               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 11566  015388  0100               	movlb	0	; () banked
 11567  01538A  3779               	rlcf	??__tdiv_to_l_& (0+255),f,b
 11568  01538C  E301               	bnc	u11611
 11569  01538E  817A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 11570  015390                     u11611:
 11571  015390  0100               	movlb	0	; () banked
 11572  015392  5179               	movf	??__tdiv_to_l_& (0+255),w,b
 11573  015394  0100               	movlb	0	; () banked
 11574  015396  6F81               	movwf	__tdiv_to_l_@exp1& (0+255),b
 11575  015398  0100               	movlb	0	; () banked
 11576  01539A  5181               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 11577  01539C  A4D8               	btfss	status,2,c
 11578  01539E  D00A               	goto	l8683
 11579                           
 11580                           ; BSR set to: 0
 11581  0153A0  0E00               	movlw	0
 11582  0153A2  0100               	movlb	0	; () banked
 11583  0153A4  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 11584  0153A6  0E00               	movlw	0
 11585  0153A8  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 11586  0153AA  0E00               	movlw	0
 11587  0153AC  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 11588  0153AE  0E00               	movlw	0
 11589  0153B0  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 11590                           
 11591                           ; BSR set to: 0
 11592  0153B2  0012               	return	
 11593  0153B4                     l8683:
 11594                           
 11595                           ; BSR set to: 0
 11596  0153B4  C077  F079         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 11597  0153B8  0100               	movlb	0	; () banked
 11598  0153BA  6B7A               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 11599  0153BC  6B7B               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 11600  0153BE  0100               	movlb	0	; () banked
 11601  0153C0  3576               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 11602  0153C2  0100               	movlb	0	; () banked
 11603  0153C4  3779               	rlcf	??__tdiv_to_l_& (0+255),f,b
 11604  0153C6  E301               	bnc	u11631
 11605  0153C8  817A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 11606  0153CA                     u11631:
 11607  0153CA  0100               	movlb	0	; () banked
 11608  0153CC  5179               	movf	??__tdiv_to_l_& (0+255),w,b
 11609  0153CE  0100               	movlb	0	; () banked
 11610  0153D0  6F80               	movwf	__tdiv_to_l_@cntr& (0+255),b
 11611  0153D2  0100               	movlb	0	; () banked
 11612  0153D4  5180               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 11613  0153D6  A4D8               	btfss	status,2,c
 11614  0153D8  D00A               	goto	l8689
 11615                           
 11616                           ; BSR set to: 0
 11617  0153DA  0E00               	movlw	0
 11618  0153DC  0100               	movlb	0	; () banked
 11619  0153DE  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 11620  0153E0  0E00               	movlw	0
 11621  0153E2  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 11622  0153E4  0E00               	movlw	0
 11623  0153E6  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 11624  0153E8  0E00               	movlw	0
 11625  0153EA  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 11626                           
 11627                           ; BSR set to: 0
 11628  0153EC  0012               	return	
 11629  0153EE                     l8689:
 11630                           
 11631                           ; BSR set to: 0
 11632  0153EE  0100               	movlb	0	; () banked
 11633  0153F0  8F72               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 11634                           
 11635                           ; BSR set to: 0
 11636  0153F2  0EFF               	movlw	255
 11637  0153F4  0100               	movlb	0	; () banked
 11638  0153F6  1771               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 11639  0153F8  0EFF               	movlw	255
 11640  0153FA  0100               	movlb	0	; () banked
 11641  0153FC  1772               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 11642  0153FE  0E00               	movlw	0
 11643  015400  0100               	movlb	0	; () banked
 11644  015402  1773               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 11645  015404  0100               	movlb	0	; () banked
 11646  015406  8F76               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 11647                           
 11648                           ; BSR set to: 0
 11649  015408  0EFF               	movlw	255
 11650  01540A  0100               	movlb	0	; () banked
 11651  01540C  1775               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 11652  01540E  0EFF               	movlw	255
 11653  015410  0100               	movlb	0	; () banked
 11654  015412  1776               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 11655  015414  0E00               	movlw	0
 11656  015416  0100               	movlb	0	; () banked
 11657  015418  1777               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 11658                           
 11659                           ; BSR set to: 0
 11660  01541A  0E00               	movlw	0
 11661  01541C  0100               	movlb	0	; () banked
 11662  01541E  6F7C               	movwf	__tdiv_to_l_@quot& (0+255),b
 11663  015420  0E00               	movlw	0
 11664  015422  6F7D               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 11665  015424  0E00               	movlw	0
 11666  015426  6F7E               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 11667  015428  0E00               	movlw	0
 11668  01542A  6F7F               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 11669                           
 11670                           ; BSR set to: 0
 11671  01542C  0E7F               	movlw	127
 11672  01542E  0100               	movlb	0	; () banked
 11673  015430  5F81               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 11674                           
 11675                           ; BSR set to: 0
 11676  015432  0100               	movlb	0	; () banked
 11677  015434  5180               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 11678  015436  0F98               	addlw	152
 11679  015438  0100               	movlb	0	; () banked
 11680  01543A  5F81               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 11681                           
 11682                           ; BSR set to: 0
 11683  01543C  0E18               	movlw	24
 11684  01543E  0100               	movlb	0	; () banked
 11685  015440  6F80               	movwf	__tdiv_to_l_@cntr& (0+255),b
 11686  015442                     l1389:
 11687                           
 11688                           ; BSR set to: 0
 11689  015442  0100               	movlb	0	; () banked
 11690  015444  90D8               	bcf	status,0,c
 11691  015446  377C               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 11692  015448  377D               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 11693  01544A  377E               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 11694  01544C  377F               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 11695                           
 11696                           ; BSR set to: 0
 11697  01544E  0100               	movlb	0	; () banked
 11698  015450  5175               	movf	__tdiv_to_l_@f2& (0+255),w,b
 11699  015452  0100               	movlb	0	; () banked
 11700  015454  5D71               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 11701  015456  0100               	movlb	0	; () banked
 11702  015458  5176               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 11703  01545A  0100               	movlb	0	; () banked
 11704  01545C  5972               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 11705  01545E  0100               	movlb	0	; () banked
 11706  015460  5177               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 11707  015462  0100               	movlb	0	; () banked
 11708  015464  5973               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 11709  015466  A0D8               	btfss	status,0,c
 11710  015468  D00E               	goto	l1390
 11711                           
 11712                           ; BSR set to: 0
 11713  01546A  0100               	movlb	0	; () banked
 11714  01546C  5175               	movf	__tdiv_to_l_@f2& (0+255),w,b
 11715  01546E  0100               	movlb	0	; () banked
 11716  015470  5F71               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 11717  015472  0100               	movlb	0	; () banked
 11718  015474  5176               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 11719  015476  0100               	movlb	0	; () banked
 11720  015478  5B72               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 11721  01547A  0100               	movlb	0	; () banked
 11722  01547C  5177               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 11723  01547E  0100               	movlb	0	; () banked
 11724  015480  5B73               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 11725                           
 11726                           ; BSR set to: 0
 11727  015482  0100               	movlb	0	; () banked
 11728  015484  817C               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 11729  015486                     l1390:
 11730                           
 11731                           ; BSR set to: 0
 11732  015486  0100               	movlb	0	; () banked
 11733  015488  90D8               	bcf	status,0,c
 11734  01548A  3771               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 11735  01548C  3772               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 11736  01548E  3773               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 11737                           
 11738                           ; BSR set to: 0
 11739  015490  0100               	movlb	0	; () banked
 11740  015492  2F80               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 11741  015494  D7D6               	goto	l1389
 11742                           
 11743                           ; BSR set to: 0
 11744                           
 11745                           ; BSR set to: 0
 11746  015496  0100               	movlb	0	; () banked
 11747  015498  AF81               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 11748  01549A  D01A               	goto	l8723
 11749                           
 11750                           ; BSR set to: 0
 11751  01549C  0100               	movlb	0	; () banked
 11752  01549E  5181               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 11753  0154A0  0A80               	xorlw	128
 11754  0154A2  0F97               	addlw	151
 11755  0154A4  B0D8               	btfsc	status,0,c
 11756  0154A6  D00A               	goto	l8719
 11757                           
 11758                           ; BSR set to: 0
 11759  0154A8  0E00               	movlw	0
 11760  0154AA  0100               	movlb	0	; () banked
 11761  0154AC  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 11762  0154AE  0E00               	movlw	0
 11763  0154B0  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 11764  0154B2  0E00               	movlw	0
 11765  0154B4  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 11766  0154B6  0E00               	movlw	0
 11767  0154B8  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 11768                           
 11769                           ; BSR set to: 0
 11770  0154BA  0012               	return	
 11771  0154BC                     l8719:
 11772                           
 11773                           ; BSR set to: 0
 11774  0154BC  0100               	movlb	0	; () banked
 11775  0154BE  90D8               	bcf	status,0,c
 11776  0154C0  337F               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 11777  0154C2  337E               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 11778  0154C4  337D               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 11779  0154C6  337C               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 11780                           
 11781                           ; BSR set to: 0
 11782  0154C8  0100               	movlb	0	; () banked
 11783  0154CA  3F81               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 11784  0154CC  D7F7               	goto	l8719
 11785                           
 11786                           ; BSR set to: 0
 11787  0154CE  D01B               	goto	l1396
 11788  0154D0                     l8723:
 11789                           
 11790                           ; BSR set to: 0
 11791  0154D0  0E17               	movlw	23
 11792  0154D2  0100               	movlb	0	; () banked
 11793  0154D4  6581               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 11794  0154D6  D012               	goto	l8731
 11795                           
 11796                           ; BSR set to: 0
 11797  0154D8  0E00               	movlw	0
 11798  0154DA  0100               	movlb	0	; () banked
 11799  0154DC  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 11800  0154DE  0E00               	movlw	0
 11801  0154E0  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 11802  0154E2  0E00               	movlw	0
 11803  0154E4  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 11804  0154E6  0E00               	movlw	0
 11805  0154E8  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 11806                           
 11807                           ; BSR set to: 0
 11808  0154EA  0012               	return	
 11809  0154EC                     l8729:
 11810                           
 11811                           ; BSR set to: 0
 11812  0154EC  0100               	movlb	0	; () banked
 11813  0154EE  90D8               	bcf	status,0,c
 11814  0154F0  377C               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 11815  0154F2  377D               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 11816  0154F4  377E               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 11817  0154F6  377F               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 11818  0154F8  0100               	movlb	0	; () banked
 11819  0154FA  0781               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 11820  0154FC                     l8731:
 11821                           
 11822                           ; BSR set to: 0
 11823  0154FC  0100               	movlb	0	; () banked
 11824  0154FE  5181               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 11825  015500  0100               	movlb	0	; () banked
 11826  015502  A4D8               	btfss	status,2,c
 11827  015504  D7F3               	goto	l8729
 11828  015506                     l1396:
 11829                           
 11830                           ; BSR set to: 0
 11831  015506  C07C  F071         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 11832  01550A  C07D  F072         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 11833  01550E  C07E  F073         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 11834  015512  C07F  F074         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 11835                           
 11836                           ; BSR set to: 0
 11837  015516  0012               	return		;funcret
 11838  015518                     __end_of__tdiv_to_l_:
 11839                           	opt stack 0
 11840                           tblptru	equ	0xFF8
 11841                           tblptrh	equ	0xFF7
 11842                           tblptrl	equ	0xFF6
 11843                           tablat	equ	0xFF5
 11844                           prodh	equ	0xFF4
 11845                           prodl	equ	0xFF3
 11846                           intcon	equ	0xFF2
 11847                           postinc0	equ	0xFEE
 11848                           wreg	equ	0xFE8
 11849                           indf2	equ	0xFDF
 11850                           postinc2	equ	0xFDE
 11851                           fsr2h	equ	0xFDA
 11852                           fsr2l	equ	0xFD9
 11853                           status	equ	0xFD8
 11854                           
 11855 ;; *************** function __div_to_l_ *****************
 11856 ;; Defined at:
 11857 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fldivl.c"
 11858 ;; Parameters:    Size  Location     Type
 11859 ;;  f1              4   17[BANK0 ] unsigned long 
 11860 ;;  f2              4   21[BANK0 ] unsigned long 
 11861 ;; Auto vars:     Size  Location     Type
 11862 ;;  quot            4   25[BANK0 ] unsigned long 
 11863 ;;  exp1            1   30[BANK0 ] unsigned char 
 11864 ;;  cntr            1   29[BANK0 ] unsigned char 
 11865 ;; Return value:  Size  Location     Type
 11866 ;;                  4   17[BANK0 ] unsigned long 
 11867 ;; Registers used:
 11868 ;;		wreg, status,2, status,0
 11869 ;; Tracked objects:
 11870 ;;		On entry : 0/0
 11871 ;;		On exit  : 0/0
 11872 ;;		Unchanged: 0/0
 11873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11874 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11875 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11877 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11878 ;;Total ram usage:       14 bytes
 11879 ;; Hardware stack levels used:    1
 11880 ;; Hardware stack levels required when called:    3
 11881 ;; This function calls:
 11882 ;;		Nothing
 11883 ;; This function is called by:
 11884 ;;		_sprintf
 11885 ;; This function uses a non-reentrant model
 11886 ;;
 11887                           
 11888                           	psect	text18
 11889  0156A8                     __ptext18:
 11890                           	opt stack 0
 11891  0156A8                     __div_to_l_:
 11892                           	opt stack 25
 11893                           
 11894                           ; BSR set to: 0
 11895                           ;incstack = 0
 11896  0156A8  0100               	movlb	0	; () banked
 11897  0156AA  3573               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 11898  0156AC  3574               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 11899  0156AE  0100               	movlb	0	; () banked
 11900  0156B0  6F7E               	movwf	__div_to_l_@exp1& (0+255),b
 11901  0156B2  0100               	movlb	0	; () banked
 11902  0156B4  517E               	movf	__div_to_l_@exp1& (0+255),w,b
 11903  0156B6  A4D8               	btfss	status,2,c
 11904  0156B8  D00A               	goto	l8739
 11905                           
 11906                           ; BSR set to: 0
 11907  0156BA  0E00               	movlw	0
 11908  0156BC  0100               	movlb	0	; () banked
 11909  0156BE  6F71               	movwf	?__div_to_l_& (0+255),b
 11910  0156C0  0E00               	movlw	0
 11911  0156C2  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 11912  0156C4  0E00               	movlw	0
 11913  0156C6  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 11914  0156C8  0E00               	movlw	0
 11915  0156CA  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 11916                           
 11917                           ; BSR set to: 0
 11918  0156CC  0012               	return	
 11919  0156CE                     l8739:
 11920                           
 11921                           ; BSR set to: 0
 11922  0156CE  0100               	movlb	0	; () banked
 11923  0156D0  3577               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 11924  0156D2  3578               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 11925  0156D4  0100               	movlb	0	; () banked
 11926  0156D6  6F7D               	movwf	__div_to_l_@cntr& (0+255),b
 11927  0156D8  0100               	movlb	0	; () banked
 11928  0156DA  517D               	movf	__div_to_l_@cntr& (0+255),w,b
 11929  0156DC  A4D8               	btfss	status,2,c
 11930  0156DE  D00A               	goto	l8745
 11931                           
 11932                           ; BSR set to: 0
 11933  0156E0  0E00               	movlw	0
 11934  0156E2  0100               	movlb	0	; () banked
 11935  0156E4  6F71               	movwf	?__div_to_l_& (0+255),b
 11936  0156E6  0E00               	movlw	0
 11937  0156E8  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 11938  0156EA  0E00               	movlw	0
 11939  0156EC  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 11940  0156EE  0E00               	movlw	0
 11941  0156F0  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 11942                           
 11943                           ; BSR set to: 0
 11944  0156F2  0012               	return	
 11945  0156F4                     l8745:
 11946                           
 11947                           ; BSR set to: 0
 11948  0156F4  0100               	movlb	0	; () banked
 11949  0156F6  8F73               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 11950                           
 11951                           ; BSR set to: 0
 11952  0156F8  0EFF               	movlw	255
 11953  0156FA  0100               	movlb	0	; () banked
 11954  0156FC  1771               	andwf	__div_to_l_@f1& (0+255),f,b
 11955  0156FE  0EFF               	movlw	255
 11956  015700  1772               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 11957  015702  0EFF               	movlw	255
 11958  015704  1773               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 11959  015706  0E00               	movlw	0
 11960  015708  1774               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 11961                           
 11962                           ; BSR set to: 0
 11963  01570A  0100               	movlb	0	; () banked
 11964  01570C  8F77               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 11965  01570E  0EFF               	movlw	255
 11966  015710  0100               	movlb	0	; () banked
 11967  015712  1775               	andwf	__div_to_l_@f2& (0+255),f,b
 11968  015714  0EFF               	movlw	255
 11969  015716  1776               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 11970  015718  0EFF               	movlw	255
 11971  01571A  1777               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 11972  01571C  0E00               	movlw	0
 11973  01571E  1778               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 11974                           
 11975                           ; BSR set to: 0
 11976  015720  0E00               	movlw	0
 11977  015722  0100               	movlb	0	; () banked
 11978  015724  6F79               	movwf	__div_to_l_@quot& (0+255),b
 11979  015726  0E00               	movlw	0
 11980  015728  6F7A               	movwf	(__div_to_l_@quot+1)& (0+255),b
 11981  01572A  0E00               	movlw	0
 11982  01572C  6F7B               	movwf	(__div_to_l_@quot+2)& (0+255),b
 11983  01572E  0E00               	movlw	0
 11984  015730  6F7C               	movwf	(__div_to_l_@quot+3)& (0+255),b
 11985                           
 11986                           ; BSR set to: 0
 11987  015732  0E7F               	movlw	127
 11988  015734  0100               	movlb	0	; () banked
 11989  015736  5F7E               	subwf	__div_to_l_@exp1& (0+255),f,b
 11990                           
 11991                           ; BSR set to: 0
 11992  015738  0100               	movlb	0	; () banked
 11993  01573A  517D               	movf	__div_to_l_@cntr& (0+255),w,b
 11994  01573C  0FA0               	addlw	160
 11995  01573E  0100               	movlb	0	; () banked
 11996  015740  5F7E               	subwf	__div_to_l_@exp1& (0+255),f,b
 11997                           
 11998                           ; BSR set to: 0
 11999  015742  0E20               	movlw	32
 12000  015744  0100               	movlb	0	; () banked
 12001  015746  6F7D               	movwf	__div_to_l_@cntr& (0+255),b
 12002  015748                     l8759:
 12003                           
 12004                           ; BSR set to: 0
 12005  015748  0100               	movlb	0	; () banked
 12006  01574A  90D8               	bcf	status,0,c
 12007  01574C  3779               	rlcf	__div_to_l_@quot& (0+255),f,b
 12008  01574E  377A               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 12009  015750  377B               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 12010  015752  377C               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 12011                           
 12012                           ; BSR set to: 0
 12013  015754  0100               	movlb	0	; () banked
 12014  015756  5175               	movf	__div_to_l_@f2& (0+255),w,b
 12015  015758  0100               	movlb	0	; () banked
 12016  01575A  5D71               	subwf	__div_to_l_@f1& (0+255),w,b
 12017  01575C  0100               	movlb	0	; () banked
 12018  01575E  5176               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 12019  015760  0100               	movlb	0	; () banked
 12020  015762  5972               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 12021  015764  0100               	movlb	0	; () banked
 12022  015766  5177               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 12023  015768  0100               	movlb	0	; () banked
 12024  01576A  5973               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 12025  01576C  0100               	movlb	0	; () banked
 12026  01576E  5178               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 12027  015770  0100               	movlb	0	; () banked
 12028  015772  5974               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 12029  015774  A0D8               	btfss	status,0,c
 12030  015776  D012               	goto	l8767
 12031                           
 12032                           ; BSR set to: 0
 12033  015778  0100               	movlb	0	; () banked
 12034  01577A  5175               	movf	__div_to_l_@f2& (0+255),w,b
 12035  01577C  0100               	movlb	0	; () banked
 12036  01577E  5F71               	subwf	__div_to_l_@f1& (0+255),f,b
 12037  015780  0100               	movlb	0	; () banked
 12038  015782  5176               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 12039  015784  0100               	movlb	0	; () banked
 12040  015786  5B72               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 12041  015788  0100               	movlb	0	; () banked
 12042  01578A  5177               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 12043  01578C  0100               	movlb	0	; () banked
 12044  01578E  5B73               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 12045  015790  0100               	movlb	0	; () banked
 12046  015792  5178               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 12047  015794  0100               	movlb	0	; () banked
 12048  015796  5B74               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 12049                           
 12050                           ; BSR set to: 0
 12051  015798  0100               	movlb	0	; () banked
 12052  01579A  8179               	bsf	__div_to_l_@quot& (0+255),0,b
 12053  01579C                     l8767:
 12054                           
 12055                           ; BSR set to: 0
 12056  01579C  0100               	movlb	0	; () banked
 12057  01579E  90D8               	bcf	status,0,c
 12058  0157A0  3771               	rlcf	__div_to_l_@f1& (0+255),f,b
 12059  0157A2  3772               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 12060  0157A4  3773               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 12061  0157A6  3774               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 12062                           
 12063                           ; BSR set to: 0
 12064  0157A8  0100               	movlb	0	; () banked
 12065  0157AA  2F7D               	decfsz	__div_to_l_@cntr& (0+255),f,b
 12066  0157AC  D7CD               	goto	l8759
 12067                           
 12068                           ; BSR set to: 0
 12069                           
 12070                           ; BSR set to: 0
 12071  0157AE  0100               	movlb	0	; () banked
 12072  0157B0  AF7E               	btfss	__div_to_l_@exp1& (0+255),7,b
 12073  0157B2  D01A               	goto	l8783
 12074                           
 12075                           ; BSR set to: 0
 12076  0157B4  0100               	movlb	0	; () banked
 12077  0157B6  517E               	movf	__div_to_l_@exp1& (0+255),w,b
 12078  0157B8  0A80               	xorlw	128
 12079  0157BA  0F9F               	addlw	159
 12080  0157BC  B0D8               	btfsc	status,0,c
 12081  0157BE  D00A               	goto	l8779
 12082                           
 12083                           ; BSR set to: 0
 12084  0157C0  0E00               	movlw	0
 12085  0157C2  0100               	movlb	0	; () banked
 12086  0157C4  6F71               	movwf	?__div_to_l_& (0+255),b
 12087  0157C6  0E00               	movlw	0
 12088  0157C8  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 12089  0157CA  0E00               	movlw	0
 12090  0157CC  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 12091  0157CE  0E00               	movlw	0
 12092  0157D0  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 12093                           
 12094                           ; BSR set to: 0
 12095  0157D2  0012               	return	
 12096  0157D4                     l8779:
 12097                           
 12098                           ; BSR set to: 0
 12099  0157D4  0100               	movlb	0	; () banked
 12100  0157D6  90D8               	bcf	status,0,c
 12101  0157D8  337C               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 12102  0157DA  337B               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 12103  0157DC  337A               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 12104  0157DE  3379               	rrcf	__div_to_l_@quot& (0+255),f,b
 12105                           
 12106                           ; BSR set to: 0
 12107  0157E0  0100               	movlb	0	; () banked
 12108  0157E2  3F7E               	incfsz	__div_to_l_@exp1& (0+255),f,b
 12109  0157E4  D7F7               	goto	l8779
 12110                           
 12111                           ; BSR set to: 0
 12112  0157E6  D01B               	goto	l1292
 12113  0157E8                     l8783:
 12114                           
 12115                           ; BSR set to: 0
 12116  0157E8  0E1F               	movlw	31
 12117  0157EA  0100               	movlb	0	; () banked
 12118  0157EC  657E               	cpfsgt	__div_to_l_@exp1& (0+255),b
 12119  0157EE  D012               	goto	l8791
 12120                           
 12121                           ; BSR set to: 0
 12122  0157F0  0E00               	movlw	0
 12123  0157F2  0100               	movlb	0	; () banked
 12124  0157F4  6F71               	movwf	?__div_to_l_& (0+255),b
 12125  0157F6  0E00               	movlw	0
 12126  0157F8  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 12127  0157FA  0E00               	movlw	0
 12128  0157FC  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 12129  0157FE  0E00               	movlw	0
 12130  015800  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 12131                           
 12132                           ; BSR set to: 0
 12133  015802  0012               	return	
 12134  015804                     l8789:
 12135                           
 12136                           ; BSR set to: 0
 12137  015804  0100               	movlb	0	; () banked
 12138  015806  90D8               	bcf	status,0,c
 12139  015808  3779               	rlcf	__div_to_l_@quot& (0+255),f,b
 12140  01580A  377A               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 12141  01580C  377B               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 12142  01580E  377C               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 12143  015810  0100               	movlb	0	; () banked
 12144  015812  077E               	decf	__div_to_l_@exp1& (0+255),f,b
 12145  015814                     l8791:
 12146                           
 12147                           ; BSR set to: 0
 12148  015814  0100               	movlb	0	; () banked
 12149  015816  517E               	movf	__div_to_l_@exp1& (0+255),w,b
 12150  015818  0100               	movlb	0	; () banked
 12151  01581A  A4D8               	btfss	status,2,c
 12152  01581C  D7F3               	goto	l8789
 12153  01581E                     l1292:
 12154                           
 12155                           ; BSR set to: 0
 12156  01581E  C079  F071         	movff	__div_to_l_@quot,?__div_to_l_
 12157  015822  C07A  F072         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 12158  015826  C07B  F073         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 12159  01582A  C07C  F074         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 12160                           
 12161                           ; BSR set to: 0
 12162  01582E  0012               	return		;funcret
 12163  015830                     __end_of__div_to_l_:
 12164                           	opt stack 0
 12165                           tblptru	equ	0xFF8
 12166                           tblptrh	equ	0xFF7
 12167                           tblptrl	equ	0xFF6
 12168                           tablat	equ	0xFF5
 12169                           prodh	equ	0xFF4
 12170                           prodl	equ	0xFF3
 12171                           intcon	equ	0xFF2
 12172                           postinc0	equ	0xFEE
 12173                           wreg	equ	0xFE8
 12174                           indf2	equ	0xFDF
 12175                           postinc2	equ	0xFDE
 12176                           fsr2h	equ	0xFDA
 12177                           fsr2l	equ	0xFD9
 12178                           status	equ	0xFD8
 12179                           
 12180 ;; *************** function ___xxtofl *****************
 12181 ;; Defined at:
 12182 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\xxtofl.c"
 12183 ;; Parameters:    Size  Location     Type
 12184 ;;  sign            1    wreg     unsigned char 
 12185 ;;  val             4   17[BANK0 ] long 
 12186 ;; Auto vars:     Size  Location     Type
 12187 ;;  sign            1   25[BANK0 ] unsigned char 
 12188 ;;  arg             4   27[BANK0 ] unsigned long 
 12189 ;;  exp             1   26[BANK0 ] unsigned char 
 12190 ;; Return value:  Size  Location     Type
 12191 ;;                  4   17[BANK0 ] unsigned char 
 12192 ;; Registers used:
 12193 ;;		wreg, status,2, status,0
 12194 ;; Tracked objects:
 12195 ;;		On entry : 0/0
 12196 ;;		On exit  : 0/0
 12197 ;;		Unchanged: 0/0
 12198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12199 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12200 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12201 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12202 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12203 ;;Total ram usage:       14 bytes
 12204 ;; Hardware stack levels used:    1
 12205 ;; Hardware stack levels required when called:    3
 12206 ;; This function calls:
 12207 ;;		Nothing
 12208 ;; This function is called by:
 12209 ;;		_main
 12210 ;;		_LCD_Handler
 12211 ;;		_sprintf
 12212 ;; This function uses a non-reentrant model
 12213 ;;
 12214                           
 12215                           	psect	text19
 12216  014E26                     __ptext19:
 12217                           	opt stack 0
 12218  014E26                     ___xxtofl:
 12219                           	opt stack 27
 12220                           
 12221                           ; BSR set to: 0
 12222                           ;incstack = 0
 12223                           ;___xxtofl@sign stored from wreg
 12224  014E26  0100               	movlb	0	; () banked
 12225  014E28  6F79               	movwf	___xxtofl@sign& (0+255),b
 12226  014E2A  0100               	movlb	0	; () banked
 12227  014E2C  5179               	movf	___xxtofl@sign& (0+255),w,b
 12228  014E2E  0100               	movlb	0	; () banked
 12229  014E30  B4D8               	btfsc	status,2,c
 12230  014E32  D01E               	goto	l1687
 12231                           
 12232                           ; BSR set to: 0
 12233  014E34  0100               	movlb	0	; () banked
 12234  014E36  AF74               	btfss	(___xxtofl@val+3)& (0+255),7,b
 12235  014E38  D01B               	goto	l1687
 12236                           
 12237                           ; BSR set to: 0
 12238  014E3A  C071  F075         	movff	___xxtofl@val,??___xxtofl
 12239  014E3E  C072  F076         	movff	___xxtofl@val+1,??___xxtofl+1
 12240  014E42  C073  F077         	movff	___xxtofl@val+2,??___xxtofl+2
 12241  014E46  C074  F078         	movff	___xxtofl@val+3,??___xxtofl+3
 12242  014E4A  0100               	movlb	0	; () banked
 12243  014E4C  1F75               	comf	??___xxtofl& (0+255),f,b
 12244  014E4E  1F76               	comf	(??___xxtofl+1)& (0+255),f,b
 12245  014E50  1F77               	comf	(??___xxtofl+2)& (0+255),f,b
 12246  014E52  1F78               	comf	(??___xxtofl+3)& (0+255),f,b
 12247  014E54  2B75               	incf	??___xxtofl& (0+255),f,b
 12248  014E56  0E00               	movlw	0
 12249  014E58  2376               	addwfc	(??___xxtofl+1)& (0+255),f,b
 12250  014E5A  2377               	addwfc	(??___xxtofl+2)& (0+255),f,b
 12251  014E5C  2378               	addwfc	(??___xxtofl+3)& (0+255),f,b
 12252  014E5E  C075  F07B         	movff	??___xxtofl,___xxtofl@arg
 12253  014E62  C076  F07C         	movff	??___xxtofl+1,___xxtofl@arg+1
 12254  014E66  C077  F07D         	movff	??___xxtofl+2,___xxtofl@arg+2
 12255  014E6A  C078  F07E         	movff	??___xxtofl+3,___xxtofl@arg+3
 12256  014E6E  D008               	goto	l8917
 12257  014E70                     l1687:
 12258                           
 12259                           ; BSR set to: 0
 12260  014E70  C071  F07B         	movff	___xxtofl@val,___xxtofl@arg
 12261  014E74  C072  F07C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12262  014E78  C073  F07D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12263  014E7C  C074  F07E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12264  014E80                     l8917:
 12265                           
 12266                           ; BSR set to: 0
 12267  014E80  0100               	movlb	0	; () banked
 12268  014E82  5171               	movf	___xxtofl@val& (0+255),w,b
 12269  014E84  0100               	movlb	0	; () banked
 12270  014E86  1172               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 12271  014E88  0100               	movlb	0	; () banked
 12272  014E8A  1173               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 12273  014E8C  0100               	movlb	0	; () banked
 12274  014E8E  1174               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 12275  014E90  A4D8               	btfss	status,2,c
 12276  014E92  D00A               	goto	l8923
 12277                           
 12278                           ; BSR set to: 0
 12279  014E94  0E00               	movlw	0
 12280  014E96  0100               	movlb	0	; () banked
 12281  014E98  6F71               	movwf	?___xxtofl& (0+255),b
 12282  014E9A  0E00               	movlw	0
 12283  014E9C  6F72               	movwf	(?___xxtofl+1)& (0+255),b
 12284  014E9E  0E00               	movlw	0
 12285  014EA0  6F73               	movwf	(?___xxtofl+2)& (0+255),b
 12286  014EA2  0E00               	movlw	0
 12287  014EA4  6F74               	movwf	(?___xxtofl+3)& (0+255),b
 12288                           
 12289                           ; BSR set to: 0
 12290  014EA6  0012               	return	
 12291  014EA8                     l8923:
 12292                           
 12293                           ; BSR set to: 0
 12294  014EA8  0E96               	movlw	150
 12295  014EAA  0100               	movlb	0	; () banked
 12296  014EAC  6F7A               	movwf	___xxtofl@exp& (0+255),b
 12297  014EAE  D008               	goto	l8927
 12298  014EB0                     l8925:
 12299                           
 12300                           ; BSR set to: 0
 12301  014EB0  0100               	movlb	0	; () banked
 12302  014EB2  2B7A               	incf	___xxtofl@exp& (0+255),f,b
 12303  014EB4  0100               	movlb	0	; () banked
 12304  014EB6  90D8               	bcf	status,0,c
 12305  014EB8  337E               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 12306  014EBA  337D               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 12307  014EBC  337C               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 12308  014EBE  337B               	rrcf	___xxtofl@arg& (0+255),f,b
 12309  014EC0                     l8927:
 12310                           
 12311                           ; BSR set to: 0
 12312  014EC0  0E00               	movlw	0
 12313  014EC2  0100               	movlb	0	; () banked
 12314  014EC4  157B               	andwf	___xxtofl@arg& (0+255),w,b
 12315  014EC6  0100               	movlb	0	; () banked
 12316  014EC8  6F75               	movwf	??___xxtofl& (0+255),b
 12317  014ECA  0E00               	movlw	0
 12318  014ECC  0100               	movlb	0	; () banked
 12319  014ECE  157C               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 12320  014ED0  0100               	movlb	0	; () banked
 12321  014ED2  6F76               	movwf	(??___xxtofl+1)& (0+255),b
 12322  014ED4  0E00               	movlw	0
 12323  014ED6  0100               	movlb	0	; () banked
 12324  014ED8  157D               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 12325  014EDA  0100               	movlb	0	; () banked
 12326  014EDC  6F77               	movwf	(??___xxtofl+2)& (0+255),b
 12327  014EDE  0EFE               	movlw	254
 12328  014EE0  0100               	movlb	0	; () banked
 12329  014EE2  157E               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 12330  014EE4  0100               	movlb	0	; () banked
 12331  014EE6  6F78               	movwf	(??___xxtofl+3)& (0+255),b
 12332  014EE8  0100               	movlb	0	; () banked
 12333  014EEA  5175               	movf	??___xxtofl& (0+255),w,b
 12334  014EEC  0100               	movlb	0	; () banked
 12335  014EEE  1176               	iorwf	(??___xxtofl+1)& (0+255),w,b
 12336  014EF0  0100               	movlb	0	; () banked
 12337  014EF2  1177               	iorwf	(??___xxtofl+2)& (0+255),w,b
 12338  014EF4  0100               	movlb	0	; () banked
 12339  014EF6  1178               	iorwf	(??___xxtofl+3)& (0+255),w,b
 12340  014EF8  B4D8               	btfsc	status,2,c
 12341  014EFA  D010               	goto	l1694
 12342  014EFC  D7D9               	goto	l8925
 12343  014EFE                     l8929:
 12344                           
 12345                           ; BSR set to: 0
 12346  014EFE  0100               	movlb	0	; () banked
 12347  014F00  2B7A               	incf	___xxtofl@exp& (0+255),f,b
 12348                           
 12349                           ; BSR set to: 0
 12350  014F02  0E01               	movlw	1
 12351  014F04  0100               	movlb	0	; () banked
 12352  014F06  277B               	addwf	___xxtofl@arg& (0+255),f,b
 12353  014F08  0E00               	movlw	0
 12354  014F0A  237C               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 12355  014F0C  237D               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 12356  014F0E  237E               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 12357                           
 12358                           ; BSR set to: 0
 12359  014F10  0100               	movlb	0	; () banked
 12360  014F12  90D8               	bcf	status,0,c
 12361  014F14  337E               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 12362  014F16  337D               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 12363  014F18  337C               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 12364  014F1A  337B               	rrcf	___xxtofl@arg& (0+255),f,b
 12365  014F1C                     l1694:
 12366                           
 12367                           ; BSR set to: 0
 12368  014F1C  0E00               	movlw	0
 12369  014F1E  0100               	movlb	0	; () banked
 12370  014F20  157B               	andwf	___xxtofl@arg& (0+255),w,b
 12371  014F22  0100               	movlb	0	; () banked
 12372  014F24  6F75               	movwf	??___xxtofl& (0+255),b
 12373  014F26  0E00               	movlw	0
 12374  014F28  0100               	movlb	0	; () banked
 12375  014F2A  157C               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 12376  014F2C  0100               	movlb	0	; () banked
 12377  014F2E  6F76               	movwf	(??___xxtofl+1)& (0+255),b
 12378  014F30  0E00               	movlw	0
 12379  014F32  0100               	movlb	0	; () banked
 12380  014F34  157D               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 12381  014F36  0100               	movlb	0	; () banked
 12382  014F38  6F77               	movwf	(??___xxtofl+2)& (0+255),b
 12383  014F3A  0EFF               	movlw	255
 12384  014F3C  0100               	movlb	0	; () banked
 12385  014F3E  157E               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 12386  014F40  0100               	movlb	0	; () banked
 12387  014F42  6F78               	movwf	(??___xxtofl+3)& (0+255),b
 12388  014F44  0100               	movlb	0	; () banked
 12389  014F46  5175               	movf	??___xxtofl& (0+255),w,b
 12390  014F48  0100               	movlb	0	; () banked
 12391  014F4A  1176               	iorwf	(??___xxtofl+1)& (0+255),w,b
 12392  014F4C  0100               	movlb	0	; () banked
 12393  014F4E  1177               	iorwf	(??___xxtofl+2)& (0+255),w,b
 12394  014F50  0100               	movlb	0	; () banked
 12395  014F52  1178               	iorwf	(??___xxtofl+3)& (0+255),w,b
 12396  014F54  B4D8               	btfsc	status,2,c
 12397  014F56  D009               	goto	l8937
 12398  014F58  D7D2               	goto	l8929
 12399  014F5A                     l8935:
 12400                           
 12401                           ; BSR set to: 0
 12402  014F5A  0100               	movlb	0	; () banked
 12403  014F5C  077A               	decf	___xxtofl@exp& (0+255),f,b
 12404  014F5E  0100               	movlb	0	; () banked
 12405  014F60  90D8               	bcf	status,0,c
 12406  014F62  377B               	rlcf	___xxtofl@arg& (0+255),f,b
 12407  014F64  377C               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 12408  014F66  377D               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 12409  014F68  377E               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 12410  014F6A                     l8937:
 12411                           
 12412                           ; BSR set to: 0
 12413  014F6A  0100               	movlb	0	; () banked
 12414  014F6C  BF7D               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 12415  014F6E  D004               	goto	l1701
 12416                           
 12417                           ; BSR set to: 0
 12418  014F70  0E02               	movlw	2
 12419  014F72  0100               	movlb	0	; () banked
 12420  014F74  617A               	cpfslt	___xxtofl@exp& (0+255),b
 12421  014F76  D7F1               	goto	l8935
 12422  014F78                     l1701:
 12423                           
 12424                           ; BSR set to: 0
 12425  014F78  0100               	movlb	0	; () banked
 12426  014F7A  B17A               	btfsc	___xxtofl@exp& (0+255),0,b
 12427  014F7C  D009               	goto	l1702
 12428                           
 12429                           ; BSR set to: 0
 12430  014F7E  0EFF               	movlw	255
 12431  014F80  0100               	movlb	0	; () banked
 12432  014F82  177B               	andwf	___xxtofl@arg& (0+255),f,b
 12433  014F84  0EFF               	movlw	255
 12434  014F86  177C               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 12435  014F88  0E7F               	movlw	127
 12436  014F8A  177D               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 12437  014F8C  0EFF               	movlw	255
 12438  014F8E  177E               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 12439  014F90                     l1702:
 12440                           
 12441                           ; BSR set to: 0
 12442  014F90  0100               	movlb	0	; () banked
 12443  014F92  90D8               	bcf	status,0,c
 12444  014F94  337A               	rrcf	___xxtofl@exp& (0+255),f,b
 12445  014F96  C07A  F075         	movff	___xxtofl@exp,??___xxtofl
 12446  014F9A  0100               	movlb	0	; () banked
 12447  014F9C  6B76               	clrf	(??___xxtofl+1)& (0+255),b
 12448  014F9E  6B77               	clrf	(??___xxtofl+2)& (0+255),b
 12449  014FA0  6B78               	clrf	(??___xxtofl+3)& (0+255),b
 12450  014FA2  C075  F078         	movff	??___xxtofl,??___xxtofl+3
 12451  014FA6  0100               	movlb	0	; () banked
 12452  014FA8  6B77               	clrf	(??___xxtofl+2)& (0+255),b
 12453  014FAA  6B76               	clrf	(??___xxtofl+1)& (0+255),b
 12454  014FAC  6B75               	clrf	??___xxtofl& (0+255),b
 12455  014FAE  0100               	movlb	0	; () banked
 12456  014FB0  5175               	movf	??___xxtofl& (0+255),w,b
 12457  014FB2  0100               	movlb	0	; () banked
 12458  014FB4  137B               	iorwf	___xxtofl@arg& (0+255),f,b
 12459  014FB6  0100               	movlb	0	; () banked
 12460  014FB8  5176               	movf	(??___xxtofl+1)& (0+255),w,b
 12461  014FBA  0100               	movlb	0	; () banked
 12462  014FBC  137C               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 12463  014FBE  0100               	movlb	0	; () banked
 12464  014FC0  5177               	movf	(??___xxtofl+2)& (0+255),w,b
 12465  014FC2  0100               	movlb	0	; () banked
 12466  014FC4  137D               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 12467  014FC6  0100               	movlb	0	; () banked
 12468  014FC8  5178               	movf	(??___xxtofl+3)& (0+255),w,b
 12469  014FCA  0100               	movlb	0	; () banked
 12470  014FCC  137E               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 12471                           
 12472                           ; BSR set to: 0
 12473  014FCE  0100               	movlb	0	; () banked
 12474  014FD0  5179               	movf	___xxtofl@sign& (0+255),w,b
 12475  014FD2  0100               	movlb	0	; () banked
 12476  014FD4  B4D8               	btfsc	status,2,c
 12477  014FD6  D005               	goto	l8949
 12478                           
 12479                           ; BSR set to: 0
 12480  014FD8  0100               	movlb	0	; () banked
 12481  014FDA  AF74               	btfss	(___xxtofl@val+3)& (0+255),7,b
 12482  014FDC  D002               	goto	l8949
 12483                           
 12484                           ; BSR set to: 0
 12485  014FDE  0100               	movlb	0	; () banked
 12486  014FE0  8F7E               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 12487  014FE2                     l8949:
 12488                           
 12489                           ; BSR set to: 0
 12490  014FE2  C07B  F071         	movff	___xxtofl@arg,?___xxtofl
 12491  014FE6  C07C  F072         	movff	___xxtofl@arg+1,?___xxtofl+1
 12492  014FEA  C07D  F073         	movff	___xxtofl@arg+2,?___xxtofl+2
 12493  014FEE  C07E  F074         	movff	___xxtofl@arg+3,?___xxtofl+3
 12494  014FF2  0012               	return	
 12495  014FF4                     __end_of___xxtofl:
 12496                           	opt stack 0
 12497                           tblptru	equ	0xFF8
 12498                           tblptrh	equ	0xFF7
 12499                           tblptrl	equ	0xFF6
 12500                           tablat	equ	0xFF5
 12501                           prodh	equ	0xFF4
 12502                           prodl	equ	0xFF3
 12503                           intcon	equ	0xFF2
 12504                           postinc0	equ	0xFEE
 12505                           wreg	equ	0xFE8
 12506                           indf2	equ	0xFDF
 12507                           postinc2	equ	0xFDE
 12508                           fsr2h	equ	0xFDA
 12509                           fsr2l	equ	0xFD9
 12510                           status	equ	0xFD8
 12511                           
 12512 ;; *************** function ___llmod *****************
 12513 ;; Defined at:
 12514 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\llmod.c"
 12515 ;; Parameters:    Size  Location     Type
 12516 ;;  dividend        4   17[BANK0 ] unsigned long 
 12517 ;;  divisor         4   21[BANK0 ] unsigned long 
 12518 ;; Auto vars:     Size  Location     Type
 12519 ;;  counter         1   25[BANK0 ] unsigned char 
 12520 ;; Return value:  Size  Location     Type
 12521 ;;                  4   17[BANK0 ] unsigned long 
 12522 ;; Registers used:
 12523 ;;		wreg, status,2, status,0
 12524 ;; Tracked objects:
 12525 ;;		On entry : 0/0
 12526 ;;		On exit  : 0/0
 12527 ;;		Unchanged: 0/0
 12528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12529 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12530 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12532 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12533 ;;Total ram usage:        9 bytes
 12534 ;; Hardware stack levels used:    1
 12535 ;; Hardware stack levels required when called:    3
 12536 ;; This function calls:
 12537 ;;		Nothing
 12538 ;; This function is called by:
 12539 ;;		_sprintf
 12540 ;; This function uses a non-reentrant model
 12541 ;;
 12542                           
 12543                           	psect	text20
 12544  015FCE                     __ptext20:
 12545                           	opt stack 0
 12546  015FCE                     ___llmod:
 12547                           	opt stack 25
 12548                           
 12549                           ; BSR set to: 0
 12550                           ;incstack = 0
 12551  015FCE  0100               	movlb	0	; () banked
 12552  015FD0  5175               	movf	___llmod@divisor& (0+255),w,b
 12553  015FD2  0100               	movlb	0	; () banked
 12554  015FD4  1176               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 12555  015FD6  0100               	movlb	0	; () banked
 12556  015FD8  1177               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 12557  015FDA  0100               	movlb	0	; () banked
 12558  015FDC  1178               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 12559  015FDE  B4D8               	btfsc	status,2,c
 12560  015FE0  D03A               	goto	l1495
 12561                           
 12562                           ; BSR set to: 0
 12563  015FE2  0E01               	movlw	1
 12564  015FE4  0100               	movlb	0	; () banked
 12565  015FE6  6F79               	movwf	___llmod@counter& (0+255),b
 12566  015FE8  D008               	goto	l8901
 12567  015FEA                     l8899:
 12568                           
 12569                           ; BSR set to: 0
 12570  015FEA  0100               	movlb	0	; () banked
 12571  015FEC  90D8               	bcf	status,0,c
 12572  015FEE  3775               	rlcf	___llmod@divisor& (0+255),f,b
 12573  015FF0  3776               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 12574  015FF2  3777               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 12575  015FF4  3778               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 12576  015FF6  0100               	movlb	0	; () banked
 12577  015FF8  2B79               	incf	___llmod@counter& (0+255),f,b
 12578  015FFA                     l8901:
 12579                           
 12580                           ; BSR set to: 0
 12581  015FFA  0100               	movlb	0	; () banked
 12582  015FFC  AF78               	btfss	(___llmod@divisor+3)& (0+255),7,b
 12583  015FFE  D7F5               	goto	l8899
 12584  016000                     l8903:
 12585                           
 12586                           ; BSR set to: 0
 12587  016000  0100               	movlb	0	; () banked
 12588  016002  5175               	movf	___llmod@divisor& (0+255),w,b
 12589  016004  0100               	movlb	0	; () banked
 12590  016006  5D71               	subwf	___llmod@dividend& (0+255),w,b
 12591  016008  0100               	movlb	0	; () banked
 12592  01600A  5176               	movf	(___llmod@divisor+1)& (0+255),w,b
 12593  01600C  0100               	movlb	0	; () banked
 12594  01600E  5972               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 12595  016010  0100               	movlb	0	; () banked
 12596  016012  5177               	movf	(___llmod@divisor+2)& (0+255),w,b
 12597  016014  0100               	movlb	0	; () banked
 12598  016016  5973               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 12599  016018  0100               	movlb	0	; () banked
 12600  01601A  5178               	movf	(___llmod@divisor+3)& (0+255),w,b
 12601  01601C  0100               	movlb	0	; () banked
 12602  01601E  5974               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 12603  016020  A0D8               	btfss	status,0,c
 12604  016022  D010               	goto	l8907
 12605                           
 12606                           ; BSR set to: 0
 12607  016024  0100               	movlb	0	; () banked
 12608  016026  5175               	movf	___llmod@divisor& (0+255),w,b
 12609  016028  0100               	movlb	0	; () banked
 12610  01602A  5F71               	subwf	___llmod@dividend& (0+255),f,b
 12611  01602C  0100               	movlb	0	; () banked
 12612  01602E  5176               	movf	(___llmod@divisor+1)& (0+255),w,b
 12613  016030  0100               	movlb	0	; () banked
 12614  016032  5B72               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 12615  016034  0100               	movlb	0	; () banked
 12616  016036  5177               	movf	(___llmod@divisor+2)& (0+255),w,b
 12617  016038  0100               	movlb	0	; () banked
 12618  01603A  5B73               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 12619  01603C  0100               	movlb	0	; () banked
 12620  01603E  5178               	movf	(___llmod@divisor+3)& (0+255),w,b
 12621  016040  0100               	movlb	0	; () banked
 12622  016042  5B74               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 12623  016044                     l8907:
 12624                           
 12625                           ; BSR set to: 0
 12626  016044  0100               	movlb	0	; () banked
 12627  016046  90D8               	bcf	status,0,c
 12628  016048  3378               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 12629  01604A  3377               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 12630  01604C  3376               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 12631  01604E  3375               	rrcf	___llmod@divisor& (0+255),f,b
 12632                           
 12633                           ; BSR set to: 0
 12634  016050  0100               	movlb	0	; () banked
 12635  016052  2F79               	decfsz	___llmod@counter& (0+255),f,b
 12636  016054  D7D5               	goto	l8903
 12637  016056                     l1495:
 12638                           
 12639                           ; BSR set to: 0
 12640  016056  C071  F071         	movff	___llmod@dividend,?___llmod
 12641  01605A  C072  F072         	movff	___llmod@dividend+1,?___llmod+1
 12642  01605E  C073  F073         	movff	___llmod@dividend+2,?___llmod+2
 12643  016062  C074  F074         	movff	___llmod@dividend+3,?___llmod+3
 12644                           
 12645                           ; BSR set to: 0
 12646  016066  0012               	return		;funcret
 12647  016068                     __end_of___llmod:
 12648                           	opt stack 0
 12649                           tblptru	equ	0xFF8
 12650                           tblptrh	equ	0xFF7
 12651                           tblptrl	equ	0xFF6
 12652                           tablat	equ	0xFF5
 12653                           prodh	equ	0xFF4
 12654                           prodl	equ	0xFF3
 12655                           intcon	equ	0xFF2
 12656                           postinc0	equ	0xFEE
 12657                           wreg	equ	0xFE8
 12658                           indf2	equ	0xFDF
 12659                           postinc2	equ	0xFDE
 12660                           fsr2h	equ	0xFDA
 12661                           fsr2l	equ	0xFD9
 12662                           status	equ	0xFD8
 12663                           
 12664 ;; *************** function ___lldiv *****************
 12665 ;; Defined at:
 12666 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lldiv.c"
 12667 ;; Parameters:    Size  Location     Type
 12668 ;;  dividend        4   17[BANK0 ] unsigned long 
 12669 ;;  divisor         4   21[BANK0 ] unsigned long 
 12670 ;; Auto vars:     Size  Location     Type
 12671 ;;  quotient        4   25[BANK0 ] unsigned long 
 12672 ;;  counter         1   29[BANK0 ] unsigned char 
 12673 ;; Return value:  Size  Location     Type
 12674 ;;                  4   17[BANK0 ] unsigned long 
 12675 ;; Registers used:
 12676 ;;		wreg, status,2, status,0
 12677 ;; Tracked objects:
 12678 ;;		On entry : 0/0
 12679 ;;		On exit  : 0/0
 12680 ;;		Unchanged: 0/0
 12681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12682 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12683 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12685 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12686 ;;Total ram usage:       13 bytes
 12687 ;; Hardware stack levels used:    1
 12688 ;; Hardware stack levels required when called:    3
 12689 ;; This function calls:
 12690 ;;		Nothing
 12691 ;; This function is called by:
 12692 ;;		_sprintf
 12693 ;; This function uses a non-reentrant model
 12694 ;;
 12695                           
 12696                           	psect	text21
 12697  015D12                     __ptext21:
 12698                           	opt stack 0
 12699  015D12                     ___lldiv:
 12700                           	opt stack 25
 12701                           
 12702                           ; BSR set to: 0
 12703                           ;incstack = 0
 12704  015D12  0E00               	movlw	0
 12705  015D14  0100               	movlb	0	; () banked
 12706  015D16  6F79               	movwf	___lldiv@quotient& (0+255),b
 12707  015D18  0E00               	movlw	0
 12708  015D1A  6F7A               	movwf	(___lldiv@quotient+1)& (0+255),b
 12709  015D1C  0E00               	movlw	0
 12710  015D1E  6F7B               	movwf	(___lldiv@quotient+2)& (0+255),b
 12711  015D20  0E00               	movlw	0
 12712  015D22  6F7C               	movwf	(___lldiv@quotient+3)& (0+255),b
 12713                           
 12714                           ; BSR set to: 0
 12715  015D24  0100               	movlb	0	; () banked
 12716  015D26  5175               	movf	___lldiv@divisor& (0+255),w,b
 12717  015D28  0100               	movlb	0	; () banked
 12718  015D2A  1176               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 12719  015D2C  0100               	movlb	0	; () banked
 12720  015D2E  1177               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 12721  015D30  0100               	movlb	0	; () banked
 12722  015D32  1178               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 12723  015D34  B4D8               	btfsc	status,2,c
 12724  015D36  D042               	goto	l1485
 12725                           
 12726                           ; BSR set to: 0
 12727  015D38  0E01               	movlw	1
 12728  015D3A  0100               	movlb	0	; () banked
 12729  015D3C  6F7D               	movwf	___lldiv@counter& (0+255),b
 12730  015D3E  D008               	goto	l8881
 12731  015D40                     l8879:
 12732                           
 12733                           ; BSR set to: 0
 12734  015D40  0100               	movlb	0	; () banked
 12735  015D42  90D8               	bcf	status,0,c
 12736  015D44  3775               	rlcf	___lldiv@divisor& (0+255),f,b
 12737  015D46  3776               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 12738  015D48  3777               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 12739  015D4A  3778               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 12740  015D4C  0100               	movlb	0	; () banked
 12741  015D4E  2B7D               	incf	___lldiv@counter& (0+255),f,b
 12742  015D50                     l8881:
 12743                           
 12744                           ; BSR set to: 0
 12745  015D50  0100               	movlb	0	; () banked
 12746  015D52  AF78               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 12747  015D54  D7F5               	goto	l8879
 12748  015D56                     l8883:
 12749                           
 12750                           ; BSR set to: 0
 12751  015D56  0100               	movlb	0	; () banked
 12752  015D58  90D8               	bcf	status,0,c
 12753  015D5A  3779               	rlcf	___lldiv@quotient& (0+255),f,b
 12754  015D5C  377A               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 12755  015D5E  377B               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 12756  015D60  377C               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 12757                           
 12758                           ; BSR set to: 0
 12759  015D62  0100               	movlb	0	; () banked
 12760  015D64  5175               	movf	___lldiv@divisor& (0+255),w,b
 12761  015D66  0100               	movlb	0	; () banked
 12762  015D68  5D71               	subwf	___lldiv@dividend& (0+255),w,b
 12763  015D6A  0100               	movlb	0	; () banked
 12764  015D6C  5176               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12765  015D6E  0100               	movlb	0	; () banked
 12766  015D70  5972               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 12767  015D72  0100               	movlb	0	; () banked
 12768  015D74  5177               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12769  015D76  0100               	movlb	0	; () banked
 12770  015D78  5973               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 12771  015D7A  0100               	movlb	0	; () banked
 12772  015D7C  5178               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12773  015D7E  0100               	movlb	0	; () banked
 12774  015D80  5974               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 12775  015D82  A0D8               	btfss	status,0,c
 12776  015D84  D012               	goto	l8891
 12777                           
 12778                           ; BSR set to: 0
 12779  015D86  0100               	movlb	0	; () banked
 12780  015D88  5175               	movf	___lldiv@divisor& (0+255),w,b
 12781  015D8A  0100               	movlb	0	; () banked
 12782  015D8C  5F71               	subwf	___lldiv@dividend& (0+255),f,b
 12783  015D8E  0100               	movlb	0	; () banked
 12784  015D90  5176               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12785  015D92  0100               	movlb	0	; () banked
 12786  015D94  5B72               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 12787  015D96  0100               	movlb	0	; () banked
 12788  015D98  5177               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12789  015D9A  0100               	movlb	0	; () banked
 12790  015D9C  5B73               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 12791  015D9E  0100               	movlb	0	; () banked
 12792  015DA0  5178               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12793  015DA2  0100               	movlb	0	; () banked
 12794  015DA4  5B74               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 12795                           
 12796                           ; BSR set to: 0
 12797  015DA6  0100               	movlb	0	; () banked
 12798  015DA8  8179               	bsf	___lldiv@quotient& (0+255),0,b
 12799  015DAA                     l8891:
 12800                           
 12801                           ; BSR set to: 0
 12802  015DAA  0100               	movlb	0	; () banked
 12803  015DAC  90D8               	bcf	status,0,c
 12804  015DAE  3378               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 12805  015DB0  3377               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 12806  015DB2  3376               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 12807  015DB4  3375               	rrcf	___lldiv@divisor& (0+255),f,b
 12808                           
 12809                           ; BSR set to: 0
 12810  015DB6  0100               	movlb	0	; () banked
 12811  015DB8  2F7D               	decfsz	___lldiv@counter& (0+255),f,b
 12812  015DBA  D7CD               	goto	l8883
 12813  015DBC                     l1485:
 12814                           
 12815                           ; BSR set to: 0
 12816  015DBC  C079  F071         	movff	___lldiv@quotient,?___lldiv
 12817  015DC0  C07A  F072         	movff	___lldiv@quotient+1,?___lldiv+1
 12818  015DC4  C07B  F073         	movff	___lldiv@quotient+2,?___lldiv+2
 12819  015DC8  C07C  F074         	movff	___lldiv@quotient+3,?___lldiv+3
 12820                           
 12821                           ; BSR set to: 0
 12822  015DCC  0012               	return		;funcret
 12823  015DCE                     __end_of___lldiv:
 12824                           	opt stack 0
 12825                           tblptru	equ	0xFF8
 12826                           tblptrh	equ	0xFF7
 12827                           tblptrl	equ	0xFF6
 12828                           tablat	equ	0xFF5
 12829                           prodh	equ	0xFF4
 12830                           prodl	equ	0xFF3
 12831                           intcon	equ	0xFF2
 12832                           postinc0	equ	0xFEE
 12833                           wreg	equ	0xFE8
 12834                           indf2	equ	0xFDF
 12835                           postinc2	equ	0xFDE
 12836                           fsr2h	equ	0xFDA
 12837                           fsr2l	equ	0xFD9
 12838                           status	equ	0xFD8
 12839                           
 12840 ;; *************** function ___fltol *****************
 12841 ;; Defined at:
 12842 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fltol.c"
 12843 ;; Parameters:    Size  Location     Type
 12844 ;;  f1              4   89[BANK0 ] unsigned long 
 12845 ;; Auto vars:     Size  Location     Type
 12846 ;;  exp1            1   98[BANK0 ] unsigned char 
 12847 ;;  sign1           1   97[BANK0 ] unsigned char 
 12848 ;; Return value:  Size  Location     Type
 12849 ;;                  4   89[BANK0 ] long 
 12850 ;; Registers used:
 12851 ;;		wreg, status,2, status,0
 12852 ;; Tracked objects:
 12853 ;;		On entry : 0/0
 12854 ;;		On exit  : 0/0
 12855 ;;		Unchanged: 0/0
 12856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12857 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12858 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12859 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12860 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12861 ;;Total ram usage:       10 bytes
 12862 ;; Hardware stack levels used:    1
 12863 ;; Hardware stack levels required when called:    3
 12864 ;; This function calls:
 12865 ;;		Nothing
 12866 ;; This function is called by:
 12867 ;;		_main
 12868 ;;		_sprintf
 12869 ;; This function uses a non-reentrant model
 12870 ;;
 12871                           
 12872                           	psect	text22
 12873  01599E                     __ptext22:
 12874                           	opt stack 0
 12875  01599E                     ___fltol:
 12876                           	opt stack 27
 12877                           
 12878                           ; BSR set to: 0
 12879                           ;incstack = 0
 12880  01599E  0100               	movlb	0	; () banked
 12881  0159A0  35BB               	rlcf	(___fltol@f1+2)& (0+255),w,b
 12882  0159A2  35BC               	rlcf	(___fltol@f1+3)& (0+255),w,b
 12883  0159A4  0100               	movlb	0	; () banked
 12884  0159A6  6FC2               	movwf	___fltol@exp1& (0+255),b
 12885  0159A8  0100               	movlb	0	; () banked
 12886  0159AA  51C2               	movf	___fltol@exp1& (0+255),w,b
 12887  0159AC  A4D8               	btfss	status,2,c
 12888  0159AE  D00A               	goto	l8835
 12889                           
 12890                           ; BSR set to: 0
 12891  0159B0  0E00               	movlw	0
 12892  0159B2  0100               	movlb	0	; () banked
 12893  0159B4  6FB9               	movwf	?___fltol& (0+255),b
 12894  0159B6  0E00               	movlw	0
 12895  0159B8  6FBA               	movwf	(?___fltol+1)& (0+255),b
 12896  0159BA  0E00               	movlw	0
 12897  0159BC  6FBB               	movwf	(?___fltol+2)& (0+255),b
 12898  0159BE  0E00               	movlw	0
 12899  0159C0  6FBC               	movwf	(?___fltol+3)& (0+255),b
 12900                           
 12901                           ; BSR set to: 0
 12902  0159C2  0012               	return	
 12903  0159C4                     l8835:
 12904                           
 12905                           ; BSR set to: 0
 12906  0159C4  C0B9  F0BD         	movff	___fltol@f1,??___fltol
 12907  0159C8  C0BA  F0BE         	movff	___fltol@f1+1,??___fltol+1
 12908  0159CC  C0BB  F0BF         	movff	___fltol@f1+2,??___fltol+2
 12909  0159D0  C0BC  F0C0         	movff	___fltol@f1+3,??___fltol+3
 12910  0159D4  0E20               	movlw	32
 12911  0159D6  D006               	goto	u11840
 12912  0159D8                     u11845:
 12913  0159D8  0100               	movlb	0	; () banked
 12914  0159DA  90D8               	bcf	status,0,c
 12915  0159DC  33C0               	rrcf	(??___fltol+3)& (0+255),f,b
 12916  0159DE  33BF               	rrcf	(??___fltol+2)& (0+255),f,b
 12917  0159E0  33BE               	rrcf	(??___fltol+1)& (0+255),f,b
 12918  0159E2  33BD               	rrcf	??___fltol& (0+255),f,b
 12919  0159E4                     u11840:
 12920  0159E4  2EE8               	decfsz	wreg,f,c
 12921  0159E6  D7F8               	goto	u11845
 12922  0159E8  0100               	movlb	0	; () banked
 12923  0159EA  51BD               	movf	??___fltol& (0+255),w,b
 12924  0159EC  0100               	movlb	0	; () banked
 12925  0159EE  6FC1               	movwf	___fltol@sign1& (0+255),b
 12926                           
 12927                           ; BSR set to: 0
 12928  0159F0  0100               	movlb	0	; () banked
 12929  0159F2  8FBB               	bsf	(___fltol@f1+2)& (0+255),7,b
 12930                           
 12931                           ; BSR set to: 0
 12932  0159F4  0EFF               	movlw	255
 12933  0159F6  0100               	movlb	0	; () banked
 12934  0159F8  17B9               	andwf	___fltol@f1& (0+255),f,b
 12935  0159FA  0EFF               	movlw	255
 12936  0159FC  17BA               	andwf	(___fltol@f1+1)& (0+255),f,b
 12937  0159FE  0EFF               	movlw	255
 12938  015A00  17BB               	andwf	(___fltol@f1+2)& (0+255),f,b
 12939  015A02  0E00               	movlw	0
 12940  015A04  17BC               	andwf	(___fltol@f1+3)& (0+255),f,b
 12941                           
 12942                           ; BSR set to: 0
 12943  015A06  0E96               	movlw	150
 12944  015A08  0100               	movlb	0	; () banked
 12945  015A0A  5FC2               	subwf	___fltol@exp1& (0+255),f,b
 12946                           
 12947                           ; BSR set to: 0
 12948  015A0C  0100               	movlb	0	; () banked
 12949  015A0E  AFC2               	btfss	___fltol@exp1& (0+255),7,b
 12950  015A10  D01A               	goto	l8855
 12951                           
 12952                           ; BSR set to: 0
 12953  015A12  0100               	movlb	0	; () banked
 12954  015A14  51C2               	movf	___fltol@exp1& (0+255),w,b
 12955  015A16  0A80               	xorlw	128
 12956  015A18  0F97               	addlw	151
 12957  015A1A  B0D8               	btfsc	status,0,c
 12958  015A1C  D00A               	goto	l8851
 12959                           
 12960                           ; BSR set to: 0
 12961  015A1E  0E00               	movlw	0
 12962  015A20  0100               	movlb	0	; () banked
 12963  015A22  6FB9               	movwf	?___fltol& (0+255),b
 12964  015A24  0E00               	movlw	0
 12965  015A26  6FBA               	movwf	(?___fltol+1)& (0+255),b
 12966  015A28  0E00               	movlw	0
 12967  015A2A  6FBB               	movwf	(?___fltol+2)& (0+255),b
 12968  015A2C  0E00               	movlw	0
 12969  015A2E  6FBC               	movwf	(?___fltol+3)& (0+255),b
 12970                           
 12971                           ; BSR set to: 0
 12972  015A30  0012               	return	
 12973  015A32                     l8851:
 12974                           
 12975                           ; BSR set to: 0
 12976  015A32  0100               	movlb	0	; () banked
 12977  015A34  90D8               	bcf	status,0,c
 12978  015A36  33BC               	rrcf	(___fltol@f1+3)& (0+255),f,b
 12979  015A38  33BB               	rrcf	(___fltol@f1+2)& (0+255),f,b
 12980  015A3A  33BA               	rrcf	(___fltol@f1+1)& (0+255),f,b
 12981  015A3C  33B9               	rrcf	___fltol@f1& (0+255),f,b
 12982                           
 12983                           ; BSR set to: 0
 12984  015A3E  0100               	movlb	0	; () banked
 12985  015A40  3FC2               	incfsz	___fltol@exp1& (0+255),f,b
 12986  015A42  D7F7               	goto	l8851
 12987                           
 12988                           ; BSR set to: 0
 12989  015A44  D01B               	goto	l8865
 12990  015A46                     l8855:
 12991                           
 12992                           ; BSR set to: 0
 12993  015A46  0E1F               	movlw	31
 12994  015A48  0100               	movlb	0	; () banked
 12995  015A4A  65C2               	cpfsgt	___fltol@exp1& (0+255),b
 12996  015A4C  D012               	goto	l8863
 12997                           
 12998                           ; BSR set to: 0
 12999  015A4E  0E00               	movlw	0
 13000  015A50  0100               	movlb	0	; () banked
 13001  015A52  6FB9               	movwf	?___fltol& (0+255),b
 13002  015A54  0E00               	movlw	0
 13003  015A56  6FBA               	movwf	(?___fltol+1)& (0+255),b
 13004  015A58  0E00               	movlw	0
 13005  015A5A  6FBB               	movwf	(?___fltol+2)& (0+255),b
 13006  015A5C  0E00               	movlw	0
 13007  015A5E  6FBC               	movwf	(?___fltol+3)& (0+255),b
 13008                           
 13009                           ; BSR set to: 0
 13010  015A60  0012               	return	
 13011  015A62                     l8861:
 13012                           
 13013                           ; BSR set to: 0
 13014  015A62  0100               	movlb	0	; () banked
 13015  015A64  90D8               	bcf	status,0,c
 13016  015A66  37B9               	rlcf	___fltol@f1& (0+255),f,b
 13017  015A68  37BA               	rlcf	(___fltol@f1+1)& (0+255),f,b
 13018  015A6A  37BB               	rlcf	(___fltol@f1+2)& (0+255),f,b
 13019  015A6C  37BC               	rlcf	(___fltol@f1+3)& (0+255),f,b
 13020  015A6E  0100               	movlb	0	; () banked
 13021  015A70  07C2               	decf	___fltol@exp1& (0+255),f,b
 13022  015A72                     l8863:
 13023                           
 13024                           ; BSR set to: 0
 13025  015A72  0100               	movlb	0	; () banked
 13026  015A74  51C2               	movf	___fltol@exp1& (0+255),w,b
 13027  015A76  0100               	movlb	0	; () banked
 13028  015A78  A4D8               	btfss	status,2,c
 13029  015A7A  D7F3               	goto	l8861
 13030  015A7C                     l8865:
 13031                           
 13032                           ; BSR set to: 0
 13033  015A7C  0100               	movlb	0	; () banked
 13034  015A7E  51C1               	movf	___fltol@sign1& (0+255),w,b
 13035  015A80  0100               	movlb	0	; () banked
 13036  015A82  B4D8               	btfsc	status,2,c
 13037  015A84  D009               	goto	l8869
 13038                           
 13039                           ; BSR set to: 0
 13040  015A86  0100               	movlb	0	; () banked
 13041  015A88  1FBC               	comf	(___fltol@f1+3)& (0+255),f,b
 13042  015A8A  1FBB               	comf	(___fltol@f1+2)& (0+255),f,b
 13043  015A8C  1FBA               	comf	(___fltol@f1+1)& (0+255),f,b
 13044  015A8E  6DB9               	negf	___fltol@f1& (0+255),b
 13045  015A90  0E00               	movlw	0
 13046  015A92  23BA               	addwfc	(___fltol@f1+1)& (0+255),f,b
 13047  015A94  23BB               	addwfc	(___fltol@f1+2)& (0+255),f,b
 13048  015A96  23BC               	addwfc	(___fltol@f1+3)& (0+255),f,b
 13049  015A98                     l8869:
 13050                           
 13051                           ; BSR set to: 0
 13052  015A98  C0B9  F0B9         	movff	___fltol@f1,?___fltol
 13053  015A9C  C0BA  F0BA         	movff	___fltol@f1+1,?___fltol+1
 13054  015AA0  C0BB  F0BB         	movff	___fltol@f1+2,?___fltol+2
 13055  015AA4  C0BC  F0BC         	movff	___fltol@f1+3,?___fltol+3
 13056  015AA8  0012               	return	
 13057  015AAA                     __end_of___fltol:
 13058                           	opt stack 0
 13059                           tblptru	equ	0xFF8
 13060                           tblptrh	equ	0xFF7
 13061                           tblptrl	equ	0xFF6
 13062                           tablat	equ	0xFF5
 13063                           prodh	equ	0xFF4
 13064                           prodl	equ	0xFF3
 13065                           intcon	equ	0xFF2
 13066                           postinc0	equ	0xFEE
 13067                           wreg	equ	0xFE8
 13068                           indf2	equ	0xFDF
 13069                           postinc2	equ	0xFDE
 13070                           fsr2h	equ	0xFDA
 13071                           fsr2l	equ	0xFD9
 13072                           status	equ	0xFD8
 13073                           
 13074 ;; *************** function ___flsub *****************
 13075 ;; Defined at:
 13076 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcadd.c"
 13077 ;; Parameters:    Size  Location     Type
 13078 ;;  b               4   89[BANK0 ] long 
 13079 ;;  a               4   93[BANK0 ] long 
 13080 ;; Auto vars:     Size  Location     Type
 13081 ;;		None
 13082 ;; Return value:  Size  Location     Type
 13083 ;;                  4   89[BANK0 ] long 
 13084 ;; Registers used:
 13085 ;;		wreg, status,2, status,0, cstack
 13086 ;; Tracked objects:
 13087 ;;		On entry : 0/0
 13088 ;;		On exit  : 0/0
 13089 ;;		Unchanged: 0/0
 13090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13091 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13094 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13095 ;;Total ram usage:        8 bytes
 13096 ;; Hardware stack levels used:    1
 13097 ;; Hardware stack levels required when called:    4
 13098 ;; This function calls:
 13099 ;;		___fladd
 13100 ;; This function is called by:
 13101 ;;		_sprintf
 13102 ;; This function uses a non-reentrant model
 13103 ;;
 13104                           
 13105                           	psect	text23
 13106  0164FE                     __ptext23:
 13107                           	opt stack 0
 13108  0164FE                     ___flsub:
 13109                           	opt stack 24
 13110                           
 13111                           ; BSR set to: 0
 13112                           ;incstack = 0
 13113  0164FE  0E00               	movlw	0
 13114  016500  0100               	movlb	0	; () banked
 13115  016502  1BBD               	xorwf	___flsub@a& (0+255),f,b
 13116  016504  0E00               	movlw	0
 13117  016506  1BBE               	xorwf	(___flsub@a+1)& (0+255),f,b
 13118  016508  0E00               	movlw	0
 13119  01650A  1BBF               	xorwf	(___flsub@a+2)& (0+255),f,b
 13120  01650C  0E80               	movlw	128
 13121  01650E  1BC0               	xorwf	(___flsub@a+3)& (0+255),f,b
 13122                           
 13123                           ; BSR set to: 0
 13124  016510  C0B9  F0A5         	movff	___flsub@b,___fladd@b
 13125  016514  C0BA  F0A6         	movff	___flsub@b+1,___fladd@b+1
 13126  016518  C0BB  F0A7         	movff	___flsub@b+2,___fladd@b+2
 13127  01651C  C0BC  F0A8         	movff	___flsub@b+3,___fladd@b+3
 13128  016520  C0BD  F0A9         	movff	___flsub@a,___fladd@a
 13129  016524  C0BE  F0AA         	movff	___flsub@a+1,___fladd@a+1
 13130  016528  C0BF  F0AB         	movff	___flsub@a+2,___fladd@a+2
 13131  01652C  C0C0  F0AC         	movff	___flsub@a+3,___fladd@a+3
 13132  016530  ECCA  F09A         	call	___fladd	;wreg free
 13133  016534  C0A5  F0B9         	movff	?___fladd,?___flsub
 13134  016538  C0A6  F0BA         	movff	?___fladd+1,?___flsub+1
 13135  01653C  C0A7  F0BB         	movff	?___fladd+2,?___flsub+2
 13136  016540  C0A8  F0BC         	movff	?___fladd+3,?___flsub+3
 13137  016544  0012               	return	
 13138  016546                     __end_of___flsub:
 13139                           	opt stack 0
 13140                           tblptru	equ	0xFF8
 13141                           tblptrh	equ	0xFF7
 13142                           tblptrl	equ	0xFF6
 13143                           tablat	equ	0xFF5
 13144                           prodh	equ	0xFF4
 13145                           prodl	equ	0xFF3
 13146                           intcon	equ	0xFF2
 13147                           postinc0	equ	0xFEE
 13148                           wreg	equ	0xFE8
 13149                           indf2	equ	0xFDF
 13150                           postinc2	equ	0xFDE
 13151                           fsr2h	equ	0xFDA
 13152                           fsr2l	equ	0xFD9
 13153                           status	equ	0xFD8
 13154                           
 13155 ;; *************** function ___fladd *****************
 13156 ;; Defined at:
 13157 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcadd.c"
 13158 ;; Parameters:    Size  Location     Type
 13159 ;;  b               4   69[BANK0 ] long 
 13160 ;;  a               4   73[BANK0 ] long 
 13161 ;; Auto vars:     Size  Location     Type
 13162 ;;  grs             1   88[BANK0 ] unsigned char 
 13163 ;;  bexp            1   87[BANK0 ] unsigned char 
 13164 ;;  aexp            1   86[BANK0 ] unsigned char 
 13165 ;;  signs           1   85[BANK0 ] unsigned char 
 13166 ;; Return value:  Size  Location     Type
 13167 ;;                  4   69[BANK0 ] unsigned char 
 13168 ;; Registers used:
 13169 ;;		wreg, status,2, status,0
 13170 ;; Tracked objects:
 13171 ;;		On entry : 0/0
 13172 ;;		On exit  : 0/0
 13173 ;;		Unchanged: 0/0
 13174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13175 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13176 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13177 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13178 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13179 ;;Total ram usage:       20 bytes
 13180 ;; Hardware stack levels used:    1
 13181 ;; Hardware stack levels required when called:    3
 13182 ;; This function calls:
 13183 ;;		Nothing
 13184 ;; This function is called by:
 13185 ;;		_main
 13186 ;;		_sprintf
 13187 ;;		___flsub
 13188 ;; This function uses a non-reentrant model
 13189 ;;
 13190                           
 13191                           	psect	text24
 13192  013594                     __ptext24:
 13193                           	opt stack 0
 13194  013594                     ___fladd:
 13195                           	opt stack 27
 13196                           
 13197                           ;incstack = 0
 13198  013594  0100               	movlb	0	; () banked
 13199  013596  51A8               	movf	(___fladd@b+3)& (0+255),w,b
 13200  013598  0B80               	andlw	128
 13201  01359A  0100               	movlb	0	; () banked
 13202  01359C  6FB5               	movwf	___fladd@signs& (0+255),b
 13203  01359E  0100               	movlb	0	; () banked
 13204  0135A0  51A8               	movf	(___fladd@b+3)& (0+255),w,b
 13205  0135A2  25A8               	addwf	(___fladd@b+3)& (0+255),w,b
 13206  0135A4  0100               	movlb	0	; () banked
 13207  0135A6  6FB7               	movwf	___fladd@bexp& (0+255),b
 13208                           
 13209                           ; BSR set to: 0
 13210  0135A8  0100               	movlb	0	; () banked
 13211  0135AA  AFA7               	btfss	(___fladd@b+2)& (0+255),7,b
 13212  0135AC  D002               	goto	l8167
 13213                           
 13214                           ; BSR set to: 0
 13215  0135AE  0100               	movlb	0	; () banked
 13216  0135B0  81B7               	bsf	___fladd@bexp& (0+255),0,b
 13217  0135B2                     l8167:
 13218                           
 13219                           ; BSR set to: 0
 13220  0135B2  0100               	movlb	0	; () banked
 13221  0135B4  51B7               	movf	___fladd@bexp& (0+255),w,b
 13222  0135B6  0100               	movlb	0	; () banked
 13223  0135B8  B4D8               	btfsc	status,2,c
 13224  0135BA  D012               	goto	l8177
 13225                           
 13226                           ; BSR set to: 0
 13227  0135BC  0100               	movlb	0	; () banked
 13228  0135BE  29B7               	incf	___fladd@bexp& (0+255),w,b
 13229  0135C0  A4D8               	btfss	status,2,c
 13230  0135C2  D009               	goto	l8173
 13231                           
 13232                           ; BSR set to: 0
 13233  0135C4  0E00               	movlw	0
 13234  0135C6  0100               	movlb	0	; () banked
 13235  0135C8  6FA5               	movwf	___fladd@b& (0+255),b
 13236  0135CA  0E00               	movlw	0
 13237  0135CC  6FA6               	movwf	(___fladd@b+1)& (0+255),b
 13238  0135CE  0E00               	movlw	0
 13239  0135D0  6FA7               	movwf	(___fladd@b+2)& (0+255),b
 13240  0135D2  0E00               	movlw	0
 13241  0135D4  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 13242  0135D6                     l8173:
 13243                           
 13244                           ; BSR set to: 0
 13245  0135D6  0100               	movlb	0	; () banked
 13246  0135D8  8FA7               	bsf	(___fladd@b+2)& (0+255),7,b
 13247                           
 13248                           ; BSR set to: 0
 13249  0135DA  0E00               	movlw	0
 13250  0135DC  0100               	movlb	0	; () banked
 13251  0135DE  D008               	goto	L12
 13252  0135E0                     l8177:
 13253                           
 13254                           ; BSR set to: 0
 13255  0135E0  0E00               	movlw	0
 13256  0135E2  0100               	movlb	0	; () banked
 13257  0135E4  6FA5               	movwf	___fladd@b& (0+255),b
 13258  0135E6  0E00               	movlw	0
 13259  0135E8  6FA6               	movwf	(___fladd@b+1)& (0+255),b
 13260  0135EA  0E00               	movlw	0
 13261  0135EC  6FA7               	movwf	(___fladd@b+2)& (0+255),b
 13262  0135EE  0E00               	movlw	0
 13263  0135F0                     L12:
 13264  0135F0  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 13265                           
 13266                           ; BSR set to: 0
 13267                           
 13268                           ; BSR set to: 0
 13269  0135F2  0100               	movlb	0	; () banked
 13270  0135F4  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 13271  0135F6  0B80               	andlw	128
 13272  0135F8  0100               	movlb	0	; () banked
 13273  0135FA  6FB6               	movwf	___fladd@aexp& (0+255),b
 13274                           
 13275                           ; BSR set to: 0
 13276  0135FC  0100               	movlb	0	; () banked
 13277  0135FE  51B5               	movf	___fladd@signs& (0+255),w,b
 13278  013600  0100               	movlb	0	; () banked
 13279  013602  19B6               	xorwf	___fladd@aexp& (0+255),w,b
 13280  013604  B4D8               	btfsc	status,2,c
 13281  013606  D002               	goto	l8185
 13282                           
 13283                           ; BSR set to: 0
 13284  013608  0100               	movlb	0	; () banked
 13285  01360A  8DB5               	bsf	___fladd@signs& (0+255),6,b
 13286  01360C                     l8185:
 13287                           
 13288                           ; BSR set to: 0
 13289  01360C  0100               	movlb	0	; () banked
 13290  01360E  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 13291  013610  25AC               	addwf	(___fladd@a+3)& (0+255),w,b
 13292  013612  0100               	movlb	0	; () banked
 13293  013614  6FB6               	movwf	___fladd@aexp& (0+255),b
 13294                           
 13295                           ; BSR set to: 0
 13296  013616  0100               	movlb	0	; () banked
 13297  013618  AFAB               	btfss	(___fladd@a+2)& (0+255),7,b
 13298  01361A  D002               	goto	l8191
 13299                           
 13300                           ; BSR set to: 0
 13301  01361C  0100               	movlb	0	; () banked
 13302  01361E  81B6               	bsf	___fladd@aexp& (0+255),0,b
 13303  013620                     l8191:
 13304                           
 13305                           ; BSR set to: 0
 13306  013620  0100               	movlb	0	; () banked
 13307  013622  51B6               	movf	___fladd@aexp& (0+255),w,b
 13308  013624  0100               	movlb	0	; () banked
 13309  013626  B4D8               	btfsc	status,2,c
 13310  013628  D012               	goto	l8201
 13311                           
 13312                           ; BSR set to: 0
 13313  01362A  0100               	movlb	0	; () banked
 13314  01362C  29B6               	incf	___fladd@aexp& (0+255),w,b
 13315  01362E  A4D8               	btfss	status,2,c
 13316  013630  D009               	goto	l8197
 13317                           
 13318                           ; BSR set to: 0
 13319  013632  0E00               	movlw	0
 13320  013634  0100               	movlb	0	; () banked
 13321  013636  6FA9               	movwf	___fladd@a& (0+255),b
 13322  013638  0E00               	movlw	0
 13323  01363A  6FAA               	movwf	(___fladd@a+1)& (0+255),b
 13324  01363C  0E00               	movlw	0
 13325  01363E  6FAB               	movwf	(___fladd@a+2)& (0+255),b
 13326  013640  0E00               	movlw	0
 13327  013642  6FAC               	movwf	(___fladd@a+3)& (0+255),b
 13328  013644                     l8197:
 13329                           
 13330                           ; BSR set to: 0
 13331  013644  0100               	movlb	0	; () banked
 13332  013646  8FAB               	bsf	(___fladd@a+2)& (0+255),7,b
 13333                           
 13334                           ; BSR set to: 0
 13335  013648  0E00               	movlw	0
 13336  01364A  0100               	movlb	0	; () banked
 13337  01364C  D008               	goto	L13
 13338  01364E                     l8201:
 13339                           
 13340                           ; BSR set to: 0
 13341  01364E  0E00               	movlw	0
 13342  013650  0100               	movlb	0	; () banked
 13343  013652  6FA9               	movwf	___fladd@a& (0+255),b
 13344  013654  0E00               	movlw	0
 13345  013656  6FAA               	movwf	(___fladd@a+1)& (0+255),b
 13346  013658  0E00               	movlw	0
 13347  01365A  6FAB               	movwf	(___fladd@a+2)& (0+255),b
 13348  01365C  0E00               	movlw	0
 13349  01365E                     L13:
 13350  01365E  6FAC               	movwf	(___fladd@a+3)& (0+255),b
 13351                           
 13352                           ; BSR set to: 0
 13353                           
 13354                           ; BSR set to: 0
 13355  013660  0100               	movlb	0	; () banked
 13356  013662  51B7               	movf	___fladd@bexp& (0+255),w,b
 13357  013664  0100               	movlb	0	; () banked
 13358  013666  5DB6               	subwf	___fladd@aexp& (0+255),w,b
 13359  013668  B0D8               	btfsc	status,0,c
 13360  01366A  D024               	goto	l8239
 13361                           
 13362                           ; BSR set to: 0
 13363  01366C  0100               	movlb	0	; () banked
 13364  01366E  ADB5               	btfss	___fladd@signs& (0+255),6,b
 13365  013670  D003               	goto	l8209
 13366                           
 13367                           ; BSR set to: 0
 13368  013672  0E80               	movlw	128
 13369  013674  0100               	movlb	0	; () banked
 13370  013676  1BB5               	xorwf	___fladd@signs& (0+255),f,b
 13371  013678                     l8209:
 13372                           
 13373                           ; BSR set to: 0
 13374  013678  C0B7  F0B8         	movff	___fladd@bexp,___fladd@grs
 13375                           
 13376                           ; BSR set to: 0
 13377  01367C  C0B6  F0B7         	movff	___fladd@aexp,___fladd@bexp
 13378                           
 13379                           ; BSR set to: 0
 13380  013680  C0B8  F0B6         	movff	___fladd@grs,___fladd@aexp
 13381                           
 13382                           ; BSR set to: 0
 13383  013684  C0A5  F0B8         	movff	___fladd@b,___fladd@grs
 13384                           
 13385                           ; BSR set to: 0
 13386  013688  C0A9  F0A5         	movff	___fladd@a,___fladd@b
 13387                           
 13388                           ; BSR set to: 0
 13389  01368C  C0B8  F0A9         	movff	___fladd@grs,___fladd@a
 13390                           
 13391                           ; BSR set to: 0
 13392  013690  C0A6  F0B8         	movff	___fladd@b+1,___fladd@grs
 13393                           
 13394                           ; BSR set to: 0
 13395  013694  C0AA  F0A6         	movff	___fladd@a+1,___fladd@b+1
 13396                           
 13397                           ; BSR set to: 0
 13398  013698  C0B8  F0AA         	movff	___fladd@grs,___fladd@a+1
 13399                           
 13400                           ; BSR set to: 0
 13401  01369C  C0A7  F0B8         	movff	___fladd@b+2,___fladd@grs
 13402                           
 13403                           ; BSR set to: 0
 13404  0136A0  C0AB  F0A7         	movff	___fladd@a+2,___fladd@b+2
 13405                           
 13406                           ; BSR set to: 0
 13407  0136A4  C0B8  F0AB         	movff	___fladd@grs,___fladd@a+2
 13408                           
 13409                           ; BSR set to: 0
 13410  0136A8  C0A8  F0B8         	movff	___fladd@b+3,___fladd@grs
 13411                           
 13412                           ; BSR set to: 0
 13413  0136AC  C0AC  F0A8         	movff	___fladd@a+3,___fladd@b+3
 13414                           
 13415                           ; BSR set to: 0
 13416  0136B0  C0B8  F0AC         	movff	___fladd@grs,___fladd@a+3
 13417  0136B4                     l8239:
 13418                           
 13419                           ; BSR set to: 0
 13420  0136B4  0E00               	movlw	0
 13421  0136B6  0100               	movlb	0	; () banked
 13422  0136B8  6FB8               	movwf	___fladd@grs& (0+255),b
 13423                           
 13424                           ; BSR set to: 0
 13425  0136BA  0100               	movlb	0	; () banked
 13426  0136BC  51B7               	movf	___fladd@bexp& (0+255),w,b
 13427  0136BE  0100               	movlb	0	; () banked
 13428  0136C0  6FAD               	movwf	??___fladd& (0+255),b
 13429  0136C2  6BAE               	clrf	(??___fladd+1)& (0+255),b
 13430  0136C4  0100               	movlb	0	; () banked
 13431  0136C6  1FAD               	comf	??___fladd& (0+255),f,b
 13432  0136C8  1FAE               	comf	(??___fladd+1)& (0+255),f,b
 13433  0136CA  4BAD               	infsnz	??___fladd& (0+255),f,b
 13434  0136CC  2BAE               	incf	(??___fladd+1)& (0+255),f,b
 13435  0136CE  0100               	movlb	0	; () banked
 13436  0136D0  51B6               	movf	___fladd@aexp& (0+255),w,b
 13437  0136D2  0100               	movlb	0	; () banked
 13438  0136D4  6FAF               	movwf	(??___fladd+2)& (0+255),b
 13439  0136D6  6BB0               	clrf	(??___fladd+3)& (0+255),b
 13440  0136D8  0100               	movlb	0	; () banked
 13441  0136DA  51AD               	movf	??___fladd& (0+255),w,b
 13442  0136DC  0100               	movlb	0	; () banked
 13443  0136DE  27AF               	addwf	(??___fladd+2)& (0+255),f,b
 13444  0136E0  0100               	movlb	0	; () banked
 13445  0136E2  51AE               	movf	(??___fladd+1)& (0+255),w,b
 13446  0136E4  0100               	movlb	0	; () banked
 13447  0136E6  23B0               	addwfc	(??___fladd+3)& (0+255),f,b
 13448  0136E8  0100               	movlb	0	; () banked
 13449  0136EA  BFB0               	btfsc	(??___fladd+3)& (0+255),7,b
 13450  0136EC  D03D               	goto	l1580
 13451  0136EE  0100               	movlb	0	; () banked
 13452  0136F0  51B0               	movf	(??___fladd+3)& (0+255),w,b
 13453  0136F2  E105               	bnz	u10890
 13454  0136F4  0E1A               	movlw	26
 13455  0136F6  0100               	movlb	0	; () banked
 13456  0136F8  5DAF               	subwf	(??___fladd+2)& (0+255),w,b
 13457  0136FA  A0D8               	btfss	status,0,c
 13458  0136FC  D035               	goto	l1580
 13459  0136FE                     u10890:
 13460                           
 13461                           ; BSR set to: 0
 13462  0136FE  0100               	movlb	0	; () banked
 13463  013700  51A5               	movf	___fladd@b& (0+255),w,b
 13464  013702  0100               	movlb	0	; () banked
 13465  013704  11A6               	iorwf	(___fladd@b+1)& (0+255),w,b
 13466  013706  0100               	movlb	0	; () banked
 13467  013708  11A7               	iorwf	(___fladd@b+2)& (0+255),w,b
 13468  01370A  0100               	movlb	0	; () banked
 13469  01370C  11A8               	iorwf	(___fladd@b+3)& (0+255),w,b
 13470  01370E  B4D8               	btfsc	status,2,c
 13471  013710  D002               	goto	u10900
 13472  013712  0E01               	movlw	1
 13473  013714  D001               	goto	u10910
 13474  013716                     u10900:
 13475  013716  0E00               	movlw	0
 13476  013718                     u10910:
 13477  013718  0100               	movlb	0	; () banked
 13478  01371A  6FB8               	movwf	___fladd@grs& (0+255),b
 13479                           
 13480                           ; BSR set to: 0
 13481  01371C  0E00               	movlw	0
 13482  01371E  0100               	movlb	0	; () banked
 13483  013720  6FA5               	movwf	___fladd@b& (0+255),b
 13484  013722  0E00               	movlw	0
 13485  013724  6FA6               	movwf	(___fladd@b+1)& (0+255),b
 13486  013726  0E00               	movlw	0
 13487  013728  6FA7               	movwf	(___fladd@b+2)& (0+255),b
 13488  01372A  0E00               	movlw	0
 13489  01372C  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 13490                           
 13491                           ; BSR set to: 0
 13492  01372E  C0B6  F0B7         	movff	___fladd@aexp,___fladd@bexp
 13493  013732  D020               	goto	l1579
 13494  013734                     l1581:
 13495                           
 13496                           ; BSR set to: 0
 13497  013734  0100               	movlb	0	; () banked
 13498  013736  A1B8               	btfss	___fladd@grs& (0+255),0,b
 13499  013738  D007               	goto	l8251
 13500                           
 13501                           ; BSR set to: 0
 13502  01373A  0100               	movlb	0	; () banked
 13503  01373C  90D8               	bcf	status,0,c
 13504  01373E  31B8               	rrcf	___fladd@grs& (0+255),w,b
 13505  013740  0901               	iorlw	1
 13506  013742  0100               	movlb	0	; () banked
 13507  013744  6FB8               	movwf	___fladd@grs& (0+255),b
 13508  013746  D003               	goto	l8253
 13509  013748                     l8251:
 13510                           
 13511                           ; BSR set to: 0
 13512  013748  0100               	movlb	0	; () banked
 13513  01374A  90D8               	bcf	status,0,c
 13514  01374C  33B8               	rrcf	___fladd@grs& (0+255),f,b
 13515  01374E                     l8253:
 13516                           
 13517                           ; BSR set to: 0
 13518  01374E  0100               	movlb	0	; () banked
 13519  013750  A1A5               	btfss	___fladd@b& (0+255),0,b
 13520  013752  D002               	goto	l8257
 13521                           
 13522                           ; BSR set to: 0
 13523  013754  0100               	movlb	0	; () banked
 13524  013756  8FB8               	bsf	___fladd@grs& (0+255),7,b
 13525  013758                     l8257:
 13526                           
 13527                           ; BSR set to: 0
 13528  013758  0100               	movlb	0	; () banked
 13529  01375A  35A8               	rlcf	(___fladd@b+3)& (0+255),w,b
 13530  01375C  33A8               	rrcf	(___fladd@b+3)& (0+255),f,b
 13531  01375E  33A7               	rrcf	(___fladd@b+2)& (0+255),f,b
 13532  013760  33A6               	rrcf	(___fladd@b+1)& (0+255),f,b
 13533  013762  33A5               	rrcf	___fladd@b& (0+255),f,b
 13534                           
 13535                           ; BSR set to: 0
 13536  013764  0100               	movlb	0	; () banked
 13537  013766  2BB7               	incf	___fladd@bexp& (0+255),f,b
 13538  013768                     l1580:
 13539                           
 13540                           ; BSR set to: 0
 13541  013768  0100               	movlb	0	; () banked
 13542  01376A  51B6               	movf	___fladd@aexp& (0+255),w,b
 13543  01376C  0100               	movlb	0	; () banked
 13544  01376E  5DB7               	subwf	___fladd@bexp& (0+255),w,b
 13545  013770  A0D8               	btfss	status,0,c
 13546  013772  D7E0               	goto	l1581
 13547  013774                     l1579:
 13548                           
 13549                           ; BSR set to: 0
 13550  013774  0100               	movlb	0	; () banked
 13551  013776  BDB5               	btfsc	___fladd@signs& (0+255),6,b
 13552  013778  D03F               	goto	l8285
 13553                           
 13554                           ; BSR set to: 0
 13555  01377A  0100               	movlb	0	; () banked
 13556  01377C  51B7               	movf	___fladd@bexp& (0+255),w,b
 13557  01377E  0100               	movlb	0	; () banked
 13558  013780  A4D8               	btfss	status,2,c
 13559  013782  D00A               	goto	l8267
 13560                           
 13561                           ; BSR set to: 0
 13562  013784  0E00               	movlw	0
 13563  013786  0100               	movlb	0	; () banked
 13564  013788  6FA5               	movwf	?___fladd& (0+255),b
 13565  01378A  0E00               	movlw	0
 13566  01378C  6FA6               	movwf	(?___fladd+1)& (0+255),b
 13567  01378E  0E00               	movlw	0
 13568  013790  6FA7               	movwf	(?___fladd+2)& (0+255),b
 13569  013792  0E00               	movlw	0
 13570  013794  6FA8               	movwf	(?___fladd+3)& (0+255),b
 13571                           
 13572                           ; BSR set to: 0
 13573  013796  0012               	return	
 13574  013798                     l8267:
 13575                           
 13576                           ; BSR set to: 0
 13577  013798  0100               	movlb	0	; () banked
 13578  01379A  51A9               	movf	___fladd@a& (0+255),w,b
 13579  01379C  0100               	movlb	0	; () banked
 13580  01379E  27A5               	addwf	___fladd@b& (0+255),f,b
 13581  0137A0  0100               	movlb	0	; () banked
 13582  0137A2  51AA               	movf	(___fladd@a+1)& (0+255),w,b
 13583  0137A4  0100               	movlb	0	; () banked
 13584  0137A6  23A6               	addwfc	(___fladd@b+1)& (0+255),f,b
 13585  0137A8  0100               	movlb	0	; () banked
 13586  0137AA  51AB               	movf	(___fladd@a+2)& (0+255),w,b
 13587  0137AC  0100               	movlb	0	; () banked
 13588  0137AE  23A7               	addwfc	(___fladd@b+2)& (0+255),f,b
 13589  0137B0  0100               	movlb	0	; () banked
 13590  0137B2  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 13591  0137B4  0100               	movlb	0	; () banked
 13592  0137B6  23A8               	addwfc	(___fladd@b+3)& (0+255),f,b
 13593                           
 13594                           ; BSR set to: 0
 13595  0137B8  0100               	movlb	0	; () banked
 13596  0137BA  A1A8               	btfss	(___fladd@b+3)& (0+255),0,b
 13597  0137BC  D0CC               	goto	l8321
 13598                           
 13599                           ; BSR set to: 0
 13600  0137BE  0100               	movlb	0	; () banked
 13601  0137C0  A1B8               	btfss	___fladd@grs& (0+255),0,b
 13602  0137C2  D009               	goto	l8275
 13603                           
 13604                           ; BSR set to: 0
 13605  0137C4  0100               	movlb	0	; () banked
 13606  0137C6  90D8               	bcf	status,0,c
 13607  0137C8  33B8               	rrcf	___fladd@grs& (0+255),f,b
 13608  0137CA  0100               	movlb	0	; () banked
 13609  0137CC  51B8               	movf	___fladd@grs& (0+255),w,b
 13610  0137CE  0901               	iorlw	1
 13611  0137D0  0100               	movlb	0	; () banked
 13612  0137D2  6FB8               	movwf	___fladd@grs& (0+255),b
 13613  0137D4  D003               	goto	l8277
 13614  0137D6                     l8275:
 13615                           
 13616                           ; BSR set to: 0
 13617  0137D6  0100               	movlb	0	; () banked
 13618  0137D8  90D8               	bcf	status,0,c
 13619  0137DA  33B8               	rrcf	___fladd@grs& (0+255),f,b
 13620  0137DC                     l8277:
 13621                           
 13622                           ; BSR set to: 0
 13623  0137DC  0100               	movlb	0	; () banked
 13624  0137DE  A1A5               	btfss	___fladd@b& (0+255),0,b
 13625  0137E0  D002               	goto	l8281
 13626                           
 13627                           ; BSR set to: 0
 13628  0137E2  0100               	movlb	0	; () banked
 13629  0137E4  8FB8               	bsf	___fladd@grs& (0+255),7,b
 13630  0137E6                     l8281:
 13631                           
 13632                           ; BSR set to: 0
 13633  0137E6  0100               	movlb	0	; () banked
 13634  0137E8  35A8               	rlcf	(___fladd@b+3)& (0+255),w,b
 13635  0137EA  33A8               	rrcf	(___fladd@b+3)& (0+255),f,b
 13636  0137EC  33A7               	rrcf	(___fladd@b+2)& (0+255),f,b
 13637  0137EE  33A6               	rrcf	(___fladd@b+1)& (0+255),f,b
 13638  0137F0  33A5               	rrcf	___fladd@b& (0+255),f,b
 13639                           
 13640                           ; BSR set to: 0
 13641  0137F2  0100               	movlb	0	; () banked
 13642  0137F4  2BB7               	incf	___fladd@bexp& (0+255),f,b
 13643                           
 13644                           ; BSR set to: 0
 13645  0137F6  D0AF               	goto	l8321
 13646  0137F8                     l8285:
 13647                           
 13648                           ; BSR set to: 0
 13649  0137F8  0100               	movlb	0	; () banked
 13650  0137FA  51A9               	movf	___fladd@a& (0+255),w,b
 13651  0137FC  0100               	movlb	0	; () banked
 13652  0137FE  5DA5               	subwf	___fladd@b& (0+255),w,b
 13653  013800  0100               	movlb	0	; () banked
 13654  013802  51AA               	movf	(___fladd@a+1)& (0+255),w,b
 13655  013804  0100               	movlb	0	; () banked
 13656  013806  59A6               	subwfb	(___fladd@b+1)& (0+255),w,b
 13657  013808  0100               	movlb	0	; () banked
 13658  01380A  51AB               	movf	(___fladd@a+2)& (0+255),w,b
 13659  01380C  0100               	movlb	0	; () banked
 13660  01380E  59A7               	subwfb	(___fladd@b+2)& (0+255),w,b
 13661  013810  0100               	movlb	0	; () banked
 13662  013812  51A8               	movf	(___fladd@b+3)& (0+255),w,b
 13663  013814  0A80               	xorlw	128
 13664  013816  0100               	movlb	0	; () banked
 13665  013818  6FAD               	movwf	??___fladd& (0+255),b
 13666  01381A  0100               	movlb	0	; () banked
 13667  01381C  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 13668  01381E  0A80               	xorlw	128
 13669  013820  0100               	movlb	0	; () banked
 13670  013822  59AD               	subwfb	??___fladd& (0+255),w,b
 13671  013824  B0D8               	btfsc	status,0,c
 13672  013826  D050               	goto	l8295
 13673                           
 13674                           ; BSR set to: 0
 13675  013828  C0A5  F0AD         	movff	___fladd@b,??___fladd
 13676  01382C  C0A6  F0AE         	movff	___fladd@b+1,??___fladd+1
 13677  013830  C0A7  F0AF         	movff	___fladd@b+2,??___fladd+2
 13678  013834  C0A8  F0B0         	movff	___fladd@b+3,??___fladd+3
 13679  013838  0100               	movlb	0	; () banked
 13680  01383A  1FAD               	comf	??___fladd& (0+255),f,b
 13681  01383C  1FAE               	comf	(??___fladd+1)& (0+255),f,b
 13682  01383E  1FAF               	comf	(??___fladd+2)& (0+255),f,b
 13683  013840  1FB0               	comf	(??___fladd+3)& (0+255),f,b
 13684  013842  2BAD               	incf	??___fladd& (0+255),f,b
 13685  013844  0E00               	movlw	0
 13686  013846  23AE               	addwfc	(??___fladd+1)& (0+255),f,b
 13687  013848  23AF               	addwfc	(??___fladd+2)& (0+255),f,b
 13688  01384A  23B0               	addwfc	(??___fladd+3)& (0+255),f,b
 13689  01384C  0100               	movlb	0	; () banked
 13690  01384E  51A9               	movf	___fladd@a& (0+255),w,b
 13691  013850  0100               	movlb	0	; () banked
 13692  013852  25AD               	addwf	??___fladd& (0+255),w,b
 13693  013854  0100               	movlb	0	; () banked
 13694  013856  6FB1               	movwf	(??___fladd+4)& (0+255),b
 13695  013858  0100               	movlb	0	; () banked
 13696  01385A  51AA               	movf	(___fladd@a+1)& (0+255),w,b
 13697  01385C  0100               	movlb	0	; () banked
 13698  01385E  21AE               	addwfc	(??___fladd+1)& (0+255),w,b
 13699  013860  0100               	movlb	0	; () banked
 13700  013862  6FB2               	movwf	(??___fladd+5)& (0+255),b
 13701  013864  0100               	movlb	0	; () banked
 13702  013866  51AB               	movf	(___fladd@a+2)& (0+255),w,b
 13703  013868  0100               	movlb	0	; () banked
 13704  01386A  21AF               	addwfc	(??___fladd+2)& (0+255),w,b
 13705  01386C  0100               	movlb	0	; () banked
 13706  01386E  6FB3               	movwf	(??___fladd+6)& (0+255),b
 13707  013870  0100               	movlb	0	; () banked
 13708  013872  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 13709  013874  0100               	movlb	0	; () banked
 13710  013876  21B0               	addwfc	(??___fladd+3)& (0+255),w,b
 13711  013878  0100               	movlb	0	; () banked
 13712  01387A  6FB4               	movwf	(??___fladd+7)& (0+255),b
 13713  01387C  0EFF               	movlw	255
 13714  01387E  0100               	movlb	0	; () banked
 13715  013880  25B1               	addwf	(??___fladd+4)& (0+255),w,b
 13716  013882  0100               	movlb	0	; () banked
 13717  013884  6FA5               	movwf	___fladd@b& (0+255),b
 13718  013886  0EFF               	movlw	255
 13719  013888  0100               	movlb	0	; () banked
 13720  01388A  21B2               	addwfc	(??___fladd+5)& (0+255),w,b
 13721  01388C  0100               	movlb	0	; () banked
 13722  01388E  6FA6               	movwf	(___fladd@b+1)& (0+255),b
 13723  013890  0EFF               	movlw	255
 13724  013892  0100               	movlb	0	; () banked
 13725  013894  21B3               	addwfc	(??___fladd+6)& (0+255),w,b
 13726  013896  0100               	movlb	0	; () banked
 13727  013898  6FA7               	movwf	(___fladd@b+2)& (0+255),b
 13728  01389A  0EFF               	movlw	255
 13729  01389C  0100               	movlb	0	; () banked
 13730  01389E  21B4               	addwfc	(??___fladd+7)& (0+255),w,b
 13731  0138A0  0100               	movlb	0	; () banked
 13732  0138A2  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 13733  0138A4  0E80               	movlw	128
 13734  0138A6  0100               	movlb	0	; () banked
 13735  0138A8  1BB5               	xorwf	___fladd@signs& (0+255),f,b
 13736                           
 13737                           ; BSR set to: 0
 13738  0138AA  0100               	movlb	0	; () banked
 13739  0138AC  6DB8               	negf	___fladd@grs& (0+255),b
 13740                           
 13741                           ; BSR set to: 0
 13742  0138AE  0100               	movlb	0	; () banked
 13743  0138B0  51B8               	movf	___fladd@grs& (0+255),w,b
 13744  0138B2  0100               	movlb	0	; () banked
 13745  0138B4  A4D8               	btfss	status,2,c
 13746  0138B6  D018               	goto	l1596
 13747                           
 13748                           ; BSR set to: 0
 13749  0138B8  0E01               	movlw	1
 13750  0138BA  0100               	movlb	0	; () banked
 13751  0138BC  27A5               	addwf	___fladd@b& (0+255),f,b
 13752  0138BE  0E00               	movlw	0
 13753  0138C0  23A6               	addwfc	(___fladd@b+1)& (0+255),f,b
 13754  0138C2  23A7               	addwfc	(___fladd@b+2)& (0+255),f,b
 13755  0138C4  23A8               	addwfc	(___fladd@b+3)& (0+255),f,b
 13756                           
 13757                           ; BSR set to: 0
 13758  0138C6  D010               	goto	l1596
 13759  0138C8                     l8295:
 13760                           
 13761                           ; BSR set to: 0
 13762  0138C8  0100               	movlb	0	; () banked
 13763  0138CA  51A9               	movf	___fladd@a& (0+255),w,b
 13764  0138CC  0100               	movlb	0	; () banked
 13765  0138CE  5FA5               	subwf	___fladd@b& (0+255),f,b
 13766  0138D0  0100               	movlb	0	; () banked
 13767  0138D2  51AA               	movf	(___fladd@a+1)& (0+255),w,b
 13768  0138D4  0100               	movlb	0	; () banked
 13769  0138D6  5BA6               	subwfb	(___fladd@b+1)& (0+255),f,b
 13770  0138D8  0100               	movlb	0	; () banked
 13771  0138DA  51AB               	movf	(___fladd@a+2)& (0+255),w,b
 13772  0138DC  0100               	movlb	0	; () banked
 13773  0138DE  5BA7               	subwfb	(___fladd@b+2)& (0+255),f,b
 13774  0138E0  0100               	movlb	0	; () banked
 13775  0138E2  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 13776  0138E4  0100               	movlb	0	; () banked
 13777  0138E6  5BA8               	subwfb	(___fladd@b+3)& (0+255),f,b
 13778  0138E8                     l1596:
 13779                           
 13780                           ; BSR set to: 0
 13781  0138E8  0100               	movlb	0	; () banked
 13782  0138EA  51A5               	movf	___fladd@b& (0+255),w,b
 13783  0138EC  0100               	movlb	0	; () banked
 13784  0138EE  11A6               	iorwf	(___fladd@b+1)& (0+255),w,b
 13785  0138F0  0100               	movlb	0	; () banked
 13786  0138F2  11A7               	iorwf	(___fladd@b+2)& (0+255),w,b
 13787  0138F4  0100               	movlb	0	; () banked
 13788  0138F6  11A8               	iorwf	(___fladd@b+3)& (0+255),w,b
 13789  0138F8  A4D8               	btfss	status,2,c
 13790  0138FA  D02A               	goto	l8319
 13791                           
 13792                           ; BSR set to: 0
 13793  0138FC  0100               	movlb	0	; () banked
 13794  0138FE  51B8               	movf	___fladd@grs& (0+255),w,b
 13795  013900  0100               	movlb	0	; () banked
 13796  013902  A4D8               	btfss	status,2,c
 13797  013904  D025               	goto	l8319
 13798                           
 13799                           ; BSR set to: 0
 13800  013906  0E00               	movlw	0
 13801  013908  0100               	movlb	0	; () banked
 13802  01390A  6FA5               	movwf	?___fladd& (0+255),b
 13803  01390C  0E00               	movlw	0
 13804  01390E  6FA6               	movwf	(?___fladd+1)& (0+255),b
 13805  013910  0E00               	movlw	0
 13806  013912  6FA7               	movwf	(?___fladd+2)& (0+255),b
 13807  013914  0E00               	movlw	0
 13808  013916  6FA8               	movwf	(?___fladd+3)& (0+255),b
 13809                           
 13810                           ; BSR set to: 0
 13811  013918  0012               	return	
 13812  01391A                     l8303:
 13813                           
 13814                           ; BSR set to: 0
 13815  01391A  0100               	movlb	0	; () banked
 13816  01391C  90D8               	bcf	status,0,c
 13817  01391E  37A5               	rlcf	___fladd@b& (0+255),f,b
 13818  013920  37A6               	rlcf	(___fladd@b+1)& (0+255),f,b
 13819  013922  37A7               	rlcf	(___fladd@b+2)& (0+255),f,b
 13820  013924  37A8               	rlcf	(___fladd@b+3)& (0+255),f,b
 13821                           
 13822                           ; BSR set to: 0
 13823  013926  0100               	movlb	0	; () banked
 13824  013928  AFB8               	btfss	___fladd@grs& (0+255),7,b
 13825  01392A  D002               	goto	l8309
 13826                           
 13827                           ; BSR set to: 0
 13828  01392C  0100               	movlb	0	; () banked
 13829  01392E  81A5               	bsf	___fladd@b& (0+255),0,b
 13830  013930                     l8309:
 13831                           
 13832                           ; BSR set to: 0
 13833  013930  0100               	movlb	0	; () banked
 13834  013932  A1B8               	btfss	___fladd@grs& (0+255),0,b
 13835  013934  D003               	goto	l8313
 13836                           
 13837                           ; BSR set to: 0
 13838  013936  80D8               	bsf	status,0,c
 13839  013938  0100               	movlb	0	; () banked
 13840  01393A  D002               	goto	L14
 13841  01393C                     l8313:
 13842                           
 13843                           ; BSR set to: 0
 13844  01393C  0100               	movlb	0	; () banked
 13845  01393E  90D8               	bcf	status,0,c
 13846  013940                     L14:
 13847  013940  37B8               	rlcf	___fladd@grs& (0+255),f,b
 13848                           
 13849                           ; BSR set to: 0
 13850                           
 13851                           ; BSR set to: 0
 13852  013942  0100               	movlb	0	; () banked
 13853  013944  51B7               	movf	___fladd@bexp& (0+255),w,b
 13854  013946  0100               	movlb	0	; () banked
 13855  013948  B4D8               	btfsc	status,2,c
 13856  01394A  D002               	goto	l8319
 13857                           
 13858                           ; BSR set to: 0
 13859  01394C  0100               	movlb	0	; () banked
 13860  01394E  07B7               	decf	___fladd@bexp& (0+255),f,b
 13861  013950                     l8319:
 13862                           
 13863                           ; BSR set to: 0
 13864  013950  0100               	movlb	0	; () banked
 13865  013952  AFA7               	btfss	(___fladd@b+2)& (0+255),7,b
 13866  013954  D7E2               	goto	l8303
 13867  013956                     l8321:
 13868                           
 13869                           ; BSR set to: 0
 13870  013956  0E00               	movlw	0
 13871  013958  0100               	movlb	0	; () banked
 13872  01395A  6FB6               	movwf	___fladd@aexp& (0+255),b
 13873                           
 13874                           ; BSR set to: 0
 13875  01395C  0100               	movlb	0	; () banked
 13876  01395E  AFB8               	btfss	___fladd@grs& (0+255),7,b
 13877  013960  D00D               	goto	l1605
 13878                           
 13879                           ; BSR set to: 0
 13880  013962  C0B8  F0AD         	movff	___fladd@grs,??___fladd
 13881  013966  0E7F               	movlw	127
 13882  013968  0100               	movlb	0	; () banked
 13883  01396A  17AD               	andwf	??___fladd& (0+255),f,b
 13884  01396C  A4D8               	btfss	status,2,c
 13885  01396E  D003               	goto	l8329
 13886                           
 13887                           ; BSR set to: 0
 13888                           
 13889                           ; BSR set to: 0
 13890  013970  0100               	movlb	0	; () banked
 13891  013972  A1A5               	btfss	___fladd@b& (0+255),0,b
 13892  013974  D003               	goto	l1605
 13893  013976                     l8329:
 13894                           
 13895                           ; BSR set to: 0
 13896  013976  0E01               	movlw	1
 13897  013978  0100               	movlb	0	; () banked
 13898  01397A  6FB6               	movwf	___fladd@aexp& (0+255),b
 13899  01397C                     l1605:
 13900                           
 13901                           ; BSR set to: 0
 13902  01397C  0100               	movlb	0	; () banked
 13903  01397E  51B6               	movf	___fladd@aexp& (0+255),w,b
 13904  013980  0100               	movlb	0	; () banked
 13905  013982  B4D8               	btfsc	status,2,c
 13906  013984  D026               	goto	l8339
 13907                           
 13908                           ; BSR set to: 0
 13909  013986  0E01               	movlw	1
 13910  013988  0100               	movlb	0	; () banked
 13911  01398A  27A5               	addwf	___fladd@b& (0+255),f,b
 13912  01398C  0E00               	movlw	0
 13913  01398E  23A6               	addwfc	(___fladd@b+1)& (0+255),f,b
 13914  013990  23A7               	addwfc	(___fladd@b+2)& (0+255),f,b
 13915  013992  23A8               	addwfc	(___fladd@b+3)& (0+255),f,b
 13916                           
 13917                           ; BSR set to: 0
 13918  013994  0100               	movlb	0	; () banked
 13919  013996  A1A8               	btfss	(___fladd@b+3)& (0+255),0,b
 13920  013998  D01C               	goto	l8339
 13921                           
 13922                           ; BSR set to: 0
 13923  01399A  C0A5  F0AD         	movff	___fladd@b,??___fladd
 13924  01399E  C0A6  F0AE         	movff	___fladd@b+1,??___fladd+1
 13925  0139A2  C0A7  F0AF         	movff	___fladd@b+2,??___fladd+2
 13926  0139A6  C0A8  F0B0         	movff	___fladd@b+3,??___fladd+3
 13927  0139AA  0100               	movlb	0	; () banked
 13928  0139AC  35B0               	rlcf	(??___fladd+3)& (0+255),w,b
 13929  0139AE  33B0               	rrcf	(??___fladd+3)& (0+255),f,b
 13930  0139B0  33AF               	rrcf	(??___fladd+2)& (0+255),f,b
 13931  0139B2  33AE               	rrcf	(??___fladd+1)& (0+255),f,b
 13932  0139B4  33AD               	rrcf	??___fladd& (0+255),f,b
 13933  0139B6  C0AD  F0A5         	movff	??___fladd,___fladd@b
 13934  0139BA  C0AE  F0A6         	movff	??___fladd+1,___fladd@b+1
 13935  0139BE  C0AF  F0A7         	movff	??___fladd+2,___fladd@b+2
 13936  0139C2  C0B0  F0A8         	movff	??___fladd+3,___fladd@b+3
 13937  0139C6  0100               	movlb	0	; () banked
 13938  0139C8  29B7               	incf	___fladd@bexp& (0+255),w,b
 13939  0139CA  B4D8               	btfsc	status,2,c
 13940  0139CC  D002               	goto	l8339
 13941                           
 13942                           ; BSR set to: 0
 13943  0139CE  0100               	movlb	0	; () banked
 13944  0139D0  2BB7               	incf	___fladd@bexp& (0+255),f,b
 13945  0139D2                     l8339:
 13946                           
 13947                           ; BSR set to: 0
 13948  0139D2  0100               	movlb	0	; () banked
 13949  0139D4  29B7               	incf	___fladd@bexp& (0+255),w,b
 13950  0139D6  B4D8               	btfsc	status,2,c
 13951  0139D8  D005               	goto	l8343
 13952                           
 13953                           ; BSR set to: 0
 13954  0139DA  0100               	movlb	0	; () banked
 13955  0139DC  51B7               	movf	___fladd@bexp& (0+255),w,b
 13956  0139DE  0100               	movlb	0	; () banked
 13957  0139E0  A4D8               	btfss	status,2,c
 13958  0139E2  D011               	goto	l8347
 13959  0139E4                     l8343:
 13960                           
 13961                           ; BSR set to: 0
 13962  0139E4  0E00               	movlw	0
 13963  0139E6  0100               	movlb	0	; () banked
 13964  0139E8  6FA5               	movwf	___fladd@b& (0+255),b
 13965  0139EA  0E00               	movlw	0
 13966  0139EC  6FA6               	movwf	(___fladd@b+1)& (0+255),b
 13967  0139EE  0E00               	movlw	0
 13968  0139F0  6FA7               	movwf	(___fladd@b+2)& (0+255),b
 13969  0139F2  0E00               	movlw	0
 13970  0139F4  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 13971  0139F6  0100               	movlb	0	; () banked
 13972  0139F8  51B7               	movf	___fladd@bexp& (0+255),w,b
 13973  0139FA  0100               	movlb	0	; () banked
 13974  0139FC  A4D8               	btfss	status,2,c
 13975  0139FE  D003               	goto	l8347
 13976                           
 13977                           ; BSR set to: 0
 13978  013A00  0E00               	movlw	0
 13979  013A02  0100               	movlb	0	; () banked
 13980  013A04  6FB5               	movwf	___fladd@signs& (0+255),b
 13981  013A06                     l8347:
 13982                           
 13983                           ; BSR set to: 0
 13984  013A06  0100               	movlb	0	; () banked
 13985  013A08  A1B7               	btfss	___fladd@bexp& (0+255),0,b
 13986  013A0A  D003               	goto	l8351
 13987                           
 13988                           ; BSR set to: 0
 13989  013A0C  0100               	movlb	0	; () banked
 13990  013A0E  8FA7               	bsf	(___fladd@b+2)& (0+255),7,b
 13991  013A10  D002               	goto	l8353
 13992  013A12                     l8351:
 13993                           
 13994                           ; BSR set to: 0
 13995  013A12  0100               	movlb	0	; () banked
 13996  013A14  9FA7               	bcf	(___fladd@b+2)& (0+255),7,b
 13997  013A16                     l8353:
 13998                           
 13999                           ; BSR set to: 0
 14000  013A16  0100               	movlb	0	; () banked
 14001  013A18  90D8               	bcf	status,0,c
 14002  013A1A  31B7               	rrcf	___fladd@bexp& (0+255),w,b
 14003  013A1C  0100               	movlb	0	; () banked
 14004  013A1E  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 14005                           
 14006                           ; BSR set to: 0
 14007  013A20  0100               	movlb	0	; () banked
 14008  013A22  AFB5               	btfss	___fladd@signs& (0+255),7,b
 14009  013A24  D002               	goto	l8359
 14010                           
 14011                           ; BSR set to: 0
 14012  013A26  0100               	movlb	0	; () banked
 14013  013A28  8FA8               	bsf	(___fladd@b+3)& (0+255),7,b
 14014  013A2A                     l8359:
 14015                           
 14016                           ; BSR set to: 0
 14017  013A2A  C0A5  F0A5         	movff	___fladd@b,?___fladd
 14018  013A2E  C0A6  F0A6         	movff	___fladd@b+1,?___fladd+1
 14019  013A32  C0A7  F0A7         	movff	___fladd@b+2,?___fladd+2
 14020  013A36  C0A8  F0A8         	movff	___fladd@b+3,?___fladd+3
 14021  013A3A  0012               	return	
 14022  013A3C                     __end_of___fladd:
 14023                           	opt stack 0
 14024                           tblptru	equ	0xFF8
 14025                           tblptrh	equ	0xFF7
 14026                           tblptrl	equ	0xFF6
 14027                           tablat	equ	0xFF5
 14028                           prodh	equ	0xFF4
 14029                           prodl	equ	0xFF3
 14030                           intcon	equ	0xFF2
 14031                           postinc0	equ	0xFEE
 14032                           wreg	equ	0xFE8
 14033                           indf2	equ	0xFDF
 14034                           postinc2	equ	0xFDE
 14035                           fsr2h	equ	0xFDA
 14036                           fsr2l	equ	0xFD9
 14037                           status	equ	0xFD8
 14038                           
 14039 ;; *************** function ___flneg *****************
 14040 ;; Defined at:
 14041 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\flneg.c"
 14042 ;; Parameters:    Size  Location     Type
 14043 ;;  f1              4   56[BANK0 ] unsigned char 
 14044 ;; Auto vars:     Size  Location     Type
 14045 ;;		None
 14046 ;; Return value:  Size  Location     Type
 14047 ;;                  4   56[BANK0 ] unsigned char 
 14048 ;; Registers used:
 14049 ;;		wreg, status,2, status,0
 14050 ;; Tracked objects:
 14051 ;;		On entry : 0/0
 14052 ;;		On exit  : 0/0
 14053 ;;		Unchanged: 0/0
 14054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14055 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14058 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14059 ;;Total ram usage:        4 bytes
 14060 ;; Hardware stack levels used:    1
 14061 ;; Hardware stack levels required when called:    3
 14062 ;; This function calls:
 14063 ;;		Nothing
 14064 ;; This function is called by:
 14065 ;;		_main
 14066 ;;		_sprintf
 14067 ;; This function uses a non-reentrant model
 14068 ;;
 14069                           
 14070                           	psect	text25
 14071  016648                     __ptext25:
 14072                           	opt stack 0
 14073  016648                     ___flneg:
 14074                           	opt stack 27
 14075                           
 14076                           ; BSR set to: 0
 14077                           ;incstack = 0
 14078  016648  0100               	movlb	0	; () banked
 14079  01664A  5198               	movf	___flneg@f1& (0+255),w,b
 14080  01664C  0100               	movlb	0	; () banked
 14081  01664E  1199               	iorwf	(___flneg@f1+1)& (0+255),w,b
 14082  016650  0100               	movlb	0	; () banked
 14083  016652  119A               	iorwf	(___flneg@f1+2)& (0+255),w,b
 14084  016654  0100               	movlb	0	; () banked
 14085  016656  119B               	iorwf	(___flneg@f1+3)& (0+255),w,b
 14086  016658  B4D8               	btfsc	status,2,c
 14087  01665A  D009               	goto	l8825
 14088                           
 14089                           ; BSR set to: 0
 14090  01665C  0E00               	movlw	0
 14091  01665E  0100               	movlb	0	; () banked
 14092  016660  1B98               	xorwf	___flneg@f1& (0+255),f,b
 14093  016662  0E00               	movlw	0
 14094  016664  1B99               	xorwf	(___flneg@f1+1)& (0+255),f,b
 14095  016666  0E00               	movlw	0
 14096  016668  1B9A               	xorwf	(___flneg@f1+2)& (0+255),f,b
 14097  01666A  0E80               	movlw	128
 14098  01666C  1B9B               	xorwf	(___flneg@f1+3)& (0+255),f,b
 14099  01666E                     l8825:
 14100                           
 14101                           ; BSR set to: 0
 14102  01666E  C098  F098         	movff	___flneg@f1,?___flneg
 14103  016672  C099  F099         	movff	___flneg@f1+1,?___flneg+1
 14104  016676  C09A  F09A         	movff	___flneg@f1+2,?___flneg+2
 14105  01667A  C09B  F09B         	movff	___flneg@f1+3,?___flneg+3
 14106  01667E  0012               	return	
 14107  016680                     __end_of___flneg:
 14108                           	opt stack 0
 14109                           tblptru	equ	0xFF8
 14110                           tblptrh	equ	0xFF7
 14111                           tblptrl	equ	0xFF6
 14112                           tablat	equ	0xFF5
 14113                           prodh	equ	0xFF4
 14114                           prodl	equ	0xFF3
 14115                           intcon	equ	0xFF2
 14116                           postinc0	equ	0xFEE
 14117                           wreg	equ	0xFE8
 14118                           indf2	equ	0xFDF
 14119                           postinc2	equ	0xFDE
 14120                           fsr2h	equ	0xFDA
 14121                           fsr2l	equ	0xFD9
 14122                           status	equ	0xFD8
 14123                           
 14124 ;; *************** function ___flge *****************
 14125 ;; Defined at:
 14126 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\flge.c"
 14127 ;; Parameters:    Size  Location     Type
 14128 ;;  ff1             4   17[BANK0 ] unsigned char 
 14129 ;;  ff2             4   21[BANK0 ] unsigned char 
 14130 ;; Auto vars:     Size  Location     Type
 14131 ;;		None
 14132 ;; Return value:  Size  Location     Type
 14133 ;;		None               void
 14134 ;; Registers used:
 14135 ;;		wreg, status,2, status,0
 14136 ;; Tracked objects:
 14137 ;;		On entry : 0/0
 14138 ;;		On exit  : 0/0
 14139 ;;		Unchanged: 0/0
 14140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14141 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14143 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14144 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14145 ;;Total ram usage:       12 bytes
 14146 ;; Hardware stack levels used:    1
 14147 ;; Hardware stack levels required when called:    3
 14148 ;; This function calls:
 14149 ;;		Nothing
 14150 ;; This function is called by:
 14151 ;;		_sprintf
 14152 ;; This function uses a non-reentrant model
 14153 ;;
 14154                           
 14155                           	psect	text26
 14156  015518                     __ptext26:
 14157                           	opt stack 0
 14158  015518                     ___flge:
 14159                           	opt stack 25
 14160                           
 14161                           ; BSR set to: 0
 14162                           ;incstack = 0
 14163  015518  0E00               	movlw	0
 14164  01551A  0100               	movlb	0	; () banked
 14165  01551C  1571               	andwf	___flge@ff1& (0+255),w,b
 14166  01551E  0100               	movlb	0	; () banked
 14167  015520  6F79               	movwf	??___flge& (0+255),b
 14168  015522  0E00               	movlw	0
 14169  015524  0100               	movlb	0	; () banked
 14170  015526  1572               	andwf	(___flge@ff1+1)& (0+255),w,b
 14171  015528  0100               	movlb	0	; () banked
 14172  01552A  6F7A               	movwf	(??___flge+1)& (0+255),b
 14173  01552C  0E80               	movlw	128
 14174  01552E  0100               	movlb	0	; () banked
 14175  015530  1573               	andwf	(___flge@ff1+2)& (0+255),w,b
 14176  015532  0100               	movlb	0	; () banked
 14177  015534  6F7B               	movwf	(??___flge+2)& (0+255),b
 14178  015536  0E7F               	movlw	127
 14179  015538  0100               	movlb	0	; () banked
 14180  01553A  1574               	andwf	(___flge@ff1+3)& (0+255),w,b
 14181  01553C  0100               	movlb	0	; () banked
 14182  01553E  6F7C               	movwf	(??___flge+3)& (0+255),b
 14183  015540  0100               	movlb	0	; () banked
 14184  015542  5179               	movf	??___flge& (0+255),w,b
 14185  015544  0100               	movlb	0	; () banked
 14186  015546  117A               	iorwf	(??___flge+1)& (0+255),w,b
 14187  015548  0100               	movlb	0	; () banked
 14188  01554A  117B               	iorwf	(??___flge+2)& (0+255),w,b
 14189  01554C  0100               	movlb	0	; () banked
 14190  01554E  117C               	iorwf	(??___flge+3)& (0+255),w,b
 14191  015550  A4D8               	btfss	status,2,c
 14192  015552  D009               	goto	l8803
 14193                           
 14194                           ; BSR set to: 0
 14195  015554  0E00               	movlw	0
 14196  015556  0100               	movlb	0	; () banked
 14197  015558  6F71               	movwf	___flge@ff1& (0+255),b
 14198  01555A  0E00               	movlw	0
 14199  01555C  6F72               	movwf	(___flge@ff1+1)& (0+255),b
 14200  01555E  0E00               	movlw	0
 14201  015560  6F73               	movwf	(___flge@ff1+2)& (0+255),b
 14202  015562  0E00               	movlw	0
 14203  015564  6F74               	movwf	(___flge@ff1+3)& (0+255),b
 14204  015566                     l8803:
 14205                           
 14206                           ; BSR set to: 0
 14207  015566  0E00               	movlw	0
 14208  015568  0100               	movlb	0	; () banked
 14209  01556A  1575               	andwf	___flge@ff2& (0+255),w,b
 14210  01556C  0100               	movlb	0	; () banked
 14211  01556E  6F79               	movwf	??___flge& (0+255),b
 14212  015570  0E00               	movlw	0
 14213  015572  0100               	movlb	0	; () banked
 14214  015574  1576               	andwf	(___flge@ff2+1)& (0+255),w,b
 14215  015576  0100               	movlb	0	; () banked
 14216  015578  6F7A               	movwf	(??___flge+1)& (0+255),b
 14217  01557A  0E80               	movlw	128
 14218  01557C  0100               	movlb	0	; () banked
 14219  01557E  1577               	andwf	(___flge@ff2+2)& (0+255),w,b
 14220  015580  0100               	movlb	0	; () banked
 14221  015582  6F7B               	movwf	(??___flge+2)& (0+255),b
 14222  015584  0E7F               	movlw	127
 14223  015586  0100               	movlb	0	; () banked
 14224  015588  1578               	andwf	(___flge@ff2+3)& (0+255),w,b
 14225  01558A  0100               	movlb	0	; () banked
 14226  01558C  6F7C               	movwf	(??___flge+3)& (0+255),b
 14227  01558E  0100               	movlb	0	; () banked
 14228  015590  5179               	movf	??___flge& (0+255),w,b
 14229  015592  0100               	movlb	0	; () banked
 14230  015594  117A               	iorwf	(??___flge+1)& (0+255),w,b
 14231  015596  0100               	movlb	0	; () banked
 14232  015598  117B               	iorwf	(??___flge+2)& (0+255),w,b
 14233  01559A  0100               	movlb	0	; () banked
 14234  01559C  117C               	iorwf	(??___flge+3)& (0+255),w,b
 14235  01559E  A4D8               	btfss	status,2,c
 14236  0155A0  D009               	goto	l8807
 14237                           
 14238                           ; BSR set to: 0
 14239  0155A2  0E00               	movlw	0
 14240  0155A4  0100               	movlb	0	; () banked
 14241  0155A6  6F75               	movwf	___flge@ff2& (0+255),b
 14242  0155A8  0E00               	movlw	0
 14243  0155AA  6F76               	movwf	(___flge@ff2+1)& (0+255),b
 14244  0155AC  0E00               	movlw	0
 14245  0155AE  6F77               	movwf	(___flge@ff2+2)& (0+255),b
 14246  0155B0  0E00               	movlw	0
 14247  0155B2  6F78               	movwf	(___flge@ff2+3)& (0+255),b
 14248  0155B4                     l8807:
 14249                           
 14250                           ; BSR set to: 0
 14251  0155B4  0100               	movlb	0	; () banked
 14252  0155B6  AF74               	btfss	(___flge@ff1+3)& (0+255),7,b
 14253  0155B8  D026               	goto	l8811
 14254                           
 14255                           ; BSR set to: 0
 14256  0155BA  C071  F079         	movff	___flge@ff1,??___flge
 14257  0155BE  C072  F07A         	movff	___flge@ff1+1,??___flge+1
 14258  0155C2  C073  F07B         	movff	___flge@ff1+2,??___flge+2
 14259  0155C6  C074  F07C         	movff	___flge@ff1+3,??___flge+3
 14260  0155CA  0100               	movlb	0	; () banked
 14261  0155CC  1F79               	comf	??___flge& (0+255),f,b
 14262  0155CE  1F7A               	comf	(??___flge+1)& (0+255),f,b
 14263  0155D0  1F7B               	comf	(??___flge+2)& (0+255),f,b
 14264  0155D2  1F7C               	comf	(??___flge+3)& (0+255),f,b
 14265  0155D4  2B79               	incf	??___flge& (0+255),f,b
 14266  0155D6  0E00               	movlw	0
 14267  0155D8  237A               	addwfc	(??___flge+1)& (0+255),f,b
 14268  0155DA  237B               	addwfc	(??___flge+2)& (0+255),f,b
 14269  0155DC  237C               	addwfc	(??___flge+3)& (0+255),f,b
 14270  0155DE  0E00               	movlw	0
 14271  0155E0  0100               	movlb	0	; () banked
 14272  0155E2  2579               	addwf	??___flge& (0+255),w,b
 14273  0155E4  0100               	movlb	0	; () banked
 14274  0155E6  6F71               	movwf	___flge@ff1& (0+255),b
 14275  0155E8  0E00               	movlw	0
 14276  0155EA  0100               	movlb	0	; () banked
 14277  0155EC  217A               	addwfc	(??___flge+1)& (0+255),w,b
 14278  0155EE  0100               	movlb	0	; () banked
 14279  0155F0  6F72               	movwf	(___flge@ff1+1)& (0+255),b
 14280  0155F2  0E00               	movlw	0
 14281  0155F4  0100               	movlb	0	; () banked
 14282  0155F6  217B               	addwfc	(??___flge+2)& (0+255),w,b
 14283  0155F8  0100               	movlb	0	; () banked
 14284  0155FA  6F73               	movwf	(___flge@ff1+2)& (0+255),b
 14285  0155FC  0E80               	movlw	128
 14286  0155FE  0100               	movlb	0	; () banked
 14287  015600  217C               	addwfc	(??___flge+3)& (0+255),w,b
 14288  015602  0100               	movlb	0	; () banked
 14289  015604  6F74               	movwf	(___flge@ff1+3)& (0+255),b
 14290  015606                     l8811:
 14291                           
 14292                           ; BSR set to: 0
 14293  015606  0100               	movlb	0	; () banked
 14294  015608  AF78               	btfss	(___flge@ff2+3)& (0+255),7,b
 14295  01560A  D026               	goto	l1302
 14296                           
 14297                           ; BSR set to: 0
 14298  01560C  C075  F079         	movff	___flge@ff2,??___flge
 14299  015610  C076  F07A         	movff	___flge@ff2+1,??___flge+1
 14300  015614  C077  F07B         	movff	___flge@ff2+2,??___flge+2
 14301  015618  C078  F07C         	movff	___flge@ff2+3,??___flge+3
 14302  01561C  0100               	movlb	0	; () banked
 14303  01561E  1F79               	comf	??___flge& (0+255),f,b
 14304  015620  1F7A               	comf	(??___flge+1)& (0+255),f,b
 14305  015622  1F7B               	comf	(??___flge+2)& (0+255),f,b
 14306  015624  1F7C               	comf	(??___flge+3)& (0+255),f,b
 14307  015626  2B79               	incf	??___flge& (0+255),f,b
 14308  015628  0E00               	movlw	0
 14309  01562A  237A               	addwfc	(??___flge+1)& (0+255),f,b
 14310  01562C  237B               	addwfc	(??___flge+2)& (0+255),f,b
 14311  01562E  237C               	addwfc	(??___flge+3)& (0+255),f,b
 14312  015630  0E00               	movlw	0
 14313  015632  0100               	movlb	0	; () banked
 14314  015634  2579               	addwf	??___flge& (0+255),w,b
 14315  015636  0100               	movlb	0	; () banked
 14316  015638  6F75               	movwf	___flge@ff2& (0+255),b
 14317  01563A  0E00               	movlw	0
 14318  01563C  0100               	movlb	0	; () banked
 14319  01563E  217A               	addwfc	(??___flge+1)& (0+255),w,b
 14320  015640  0100               	movlb	0	; () banked
 14321  015642  6F76               	movwf	(___flge@ff2+1)& (0+255),b
 14322  015644  0E00               	movlw	0
 14323  015646  0100               	movlb	0	; () banked
 14324  015648  217B               	addwfc	(??___flge+2)& (0+255),w,b
 14325  01564A  0100               	movlb	0	; () banked
 14326  01564C  6F77               	movwf	(___flge@ff2+2)& (0+255),b
 14327  01564E  0E80               	movlw	128
 14328  015650  0100               	movlb	0	; () banked
 14329  015652  217C               	addwfc	(??___flge+3)& (0+255),w,b
 14330  015654  0100               	movlb	0	; () banked
 14331  015656  6F78               	movwf	(___flge@ff2+3)& (0+255),b
 14332  015658                     l1302:
 14333                           
 14334                           ; BSR set to: 0
 14335  015658  0E00               	movlw	0
 14336  01565A  0100               	movlb	0	; () banked
 14337  01565C  1B71               	xorwf	___flge@ff1& (0+255),f,b
 14338  01565E  0E00               	movlw	0
 14339  015660  1B72               	xorwf	(___flge@ff1+1)& (0+255),f,b
 14340  015662  0E00               	movlw	0
 14341  015664  1B73               	xorwf	(___flge@ff1+2)& (0+255),f,b
 14342  015666  0E80               	movlw	128
 14343  015668  1B74               	xorwf	(___flge@ff1+3)& (0+255),f,b
 14344  01566A  0E00               	movlw	0
 14345  01566C  0100               	movlb	0	; () banked
 14346  01566E  1B75               	xorwf	___flge@ff2& (0+255),f,b
 14347  015670  0E00               	movlw	0
 14348  015672  1B76               	xorwf	(___flge@ff2+1)& (0+255),f,b
 14349  015674  0E00               	movlw	0
 14350  015676  1B77               	xorwf	(___flge@ff2+2)& (0+255),f,b
 14351  015678  0E80               	movlw	128
 14352  01567A  1B78               	xorwf	(___flge@ff2+3)& (0+255),f,b
 14353  01567C  0100               	movlb	0	; () banked
 14354  01567E  5175               	movf	___flge@ff2& (0+255),w,b
 14355  015680  0100               	movlb	0	; () banked
 14356  015682  5D71               	subwf	___flge@ff1& (0+255),w,b
 14357  015684  0100               	movlb	0	; () banked
 14358  015686  5176               	movf	(___flge@ff2+1)& (0+255),w,b
 14359  015688  0100               	movlb	0	; () banked
 14360  01568A  5972               	subwfb	(___flge@ff1+1)& (0+255),w,b
 14361  01568C  0100               	movlb	0	; () banked
 14362  01568E  5177               	movf	(___flge@ff2+2)& (0+255),w,b
 14363  015690  0100               	movlb	0	; () banked
 14364  015692  5973               	subwfb	(___flge@ff1+2)& (0+255),w,b
 14365  015694  0100               	movlb	0	; () banked
 14366  015696  5178               	movf	(___flge@ff2+3)& (0+255),w,b
 14367  015698  0100               	movlb	0	; () banked
 14368  01569A  5974               	subwfb	(___flge@ff1+3)& (0+255),w,b
 14369  01569C  B0D8               	btfsc	status,0,c
 14370  01569E  D002               	goto	l8817
 14371                           
 14372                           ; BSR set to: 0
 14373  0156A0  90D8               	bcf	status,0,c
 14374  0156A2  0012               	return	
 14375  0156A4                     l8817:
 14376                           
 14377                           ; BSR set to: 0
 14378  0156A4  80D8               	bsf	status,0,c
 14379                           
 14380                           ; BSR set to: 0
 14381  0156A6  0012               	return	
 14382  0156A8                     __end_of___flge:
 14383                           	opt stack 0
 14384                           tblptru	equ	0xFF8
 14385                           tblptrh	equ	0xFF7
 14386                           tblptrl	equ	0xFF6
 14387                           tablat	equ	0xFF5
 14388                           prodh	equ	0xFF4
 14389                           prodl	equ	0xFF3
 14390                           intcon	equ	0xFF2
 14391                           postinc0	equ	0xFEE
 14392                           wreg	equ	0xFE8
 14393                           indf2	equ	0xFDF
 14394                           postinc2	equ	0xFDE
 14395                           fsr2h	equ	0xFDA
 14396                           fsr2l	equ	0xFD9
 14397                           status	equ	0xFD8
 14398                           
 14399 ;; *************** function ___fldiv *****************
 14400 ;; Defined at:
 14401 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcdiv.c"
 14402 ;; Parameters:    Size  Location     Type
 14403 ;;  b               4   31[BANK0 ] unsigned char 
 14404 ;;  a               4   35[BANK0 ] unsigned char 
 14405 ;; Auto vars:     Size  Location     Type
 14406 ;;  grs             4   50[BANK0 ] unsigned long 
 14407 ;;  rem             4   44[BANK0 ] unsigned long 
 14408 ;;  new_exp         2   48[BANK0 ] int 
 14409 ;;  aexp            1   55[BANK0 ] unsigned char 
 14410 ;;  bexp            1   54[BANK0 ] unsigned char 
 14411 ;;  sign            1   43[BANK0 ] unsigned char 
 14412 ;; Return value:  Size  Location     Type
 14413 ;;                  4   31[BANK0 ] unsigned char 
 14414 ;; Registers used:
 14415 ;;		wreg, status,2, status,0
 14416 ;; Tracked objects:
 14417 ;;		On entry : 0/0
 14418 ;;		On exit  : 0/0
 14419 ;;		Unchanged: 0/0
 14420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14421 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14422 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14423 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14424 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14425 ;;Total ram usage:       25 bytes
 14426 ;; Hardware stack levels used:    1
 14427 ;; Hardware stack levels required when called:    3
 14428 ;; This function calls:
 14429 ;;		Nothing
 14430 ;; This function is called by:
 14431 ;;		_LCD_Handler
 14432 ;; This function uses a non-reentrant model
 14433 ;;
 14434                           
 14435                           	psect	text27
 14436  013EE2                     __ptext27:
 14437                           	opt stack 0
 14438  013EE2                     ___fldiv:
 14439                           	opt stack 26
 14440                           
 14441                           ; BSR set to: 0
 14442                           ;incstack = 0
 14443  013EE2  0100               	movlb	0	; () banked
 14444  013EE4  5182               	movf	(___fldiv@b+3)& (0+255),w,b
 14445  013EE6  0B80               	andlw	128
 14446  013EE8  0100               	movlb	0	; () banked
 14447  013EEA  6F8B               	movwf	___fldiv@sign& (0+255),b
 14448  013EEC  0100               	movlb	0	; () banked
 14449  013EEE  5182               	movf	(___fldiv@b+3)& (0+255),w,b
 14450  013EF0  2582               	addwf	(___fldiv@b+3)& (0+255),w,b
 14451  013EF2  0100               	movlb	0	; () banked
 14452  013EF4  6F96               	movwf	___fldiv@bexp& (0+255),b
 14453                           
 14454                           ; BSR set to: 0
 14455  013EF6  0100               	movlb	0	; () banked
 14456  013EF8  AF81               	btfss	(___fldiv@b+2)& (0+255),7,b
 14457  013EFA  D002               	goto	l6881
 14458                           
 14459                           ; BSR set to: 0
 14460  013EFC  0100               	movlb	0	; () banked
 14461  013EFE  8196               	bsf	___fldiv@bexp& (0+255),0,b
 14462  013F00                     l6881:
 14463                           
 14464                           ; BSR set to: 0
 14465  013F00  0100               	movlb	0	; () banked
 14466  013F02  5196               	movf	___fldiv@bexp& (0+255),w,b
 14467  013F04  0100               	movlb	0	; () banked
 14468  013F06  B4D8               	btfsc	status,2,c
 14469  013F08  D012               	goto	l6891
 14470                           
 14471                           ; BSR set to: 0
 14472  013F0A  0100               	movlb	0	; () banked
 14473  013F0C  2996               	incf	___fldiv@bexp& (0+255),w,b
 14474  013F0E  A4D8               	btfss	status,2,c
 14475  013F10  D009               	goto	l6887
 14476                           
 14477                           ; BSR set to: 0
 14478  013F12  0E00               	movlw	0
 14479  013F14  0100               	movlb	0	; () banked
 14480  013F16  6F7F               	movwf	___fldiv@b& (0+255),b
 14481  013F18  0E00               	movlw	0
 14482  013F1A  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 14483  013F1C  0E00               	movlw	0
 14484  013F1E  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 14485  013F20  0E00               	movlw	0
 14486  013F22  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 14487  013F24                     l6887:
 14488                           
 14489                           ; BSR set to: 0
 14490  013F24  0100               	movlb	0	; () banked
 14491  013F26  8F81               	bsf	(___fldiv@b+2)& (0+255),7,b
 14492                           
 14493                           ; BSR set to: 0
 14494  013F28  0E00               	movlw	0
 14495  013F2A  0100               	movlb	0	; () banked
 14496  013F2C  D008               	goto	L15
 14497  013F2E                     l6891:
 14498                           
 14499                           ; BSR set to: 0
 14500  013F2E  0E00               	movlw	0
 14501  013F30  0100               	movlb	0	; () banked
 14502  013F32  6F7F               	movwf	___fldiv@b& (0+255),b
 14503  013F34  0E00               	movlw	0
 14504  013F36  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 14505  013F38  0E00               	movlw	0
 14506  013F3A  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 14507  013F3C  0E00               	movlw	0
 14508  013F3E                     L15:
 14509  013F3E  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 14510                           
 14511                           ; BSR set to: 0
 14512                           
 14513                           ; BSR set to: 0
 14514  013F40  0100               	movlb	0	; () banked
 14515  013F42  5186               	movf	(___fldiv@a+3)& (0+255),w,b
 14516  013F44  0B80               	andlw	128
 14517  013F46  0100               	movlb	0	; () banked
 14518  013F48  1B8B               	xorwf	___fldiv@sign& (0+255),f,b
 14519                           
 14520                           ; BSR set to: 0
 14521  013F4A  0100               	movlb	0	; () banked
 14522  013F4C  5186               	movf	(___fldiv@a+3)& (0+255),w,b
 14523  013F4E  2586               	addwf	(___fldiv@a+3)& (0+255),w,b
 14524  013F50  0100               	movlb	0	; () banked
 14525  013F52  6F97               	movwf	___fldiv@aexp& (0+255),b
 14526                           
 14527                           ; BSR set to: 0
 14528  013F54  0100               	movlb	0	; () banked
 14529  013F56  AF85               	btfss	(___fldiv@a+2)& (0+255),7,b
 14530  013F58  D002               	goto	l6901
 14531                           
 14532                           ; BSR set to: 0
 14533  013F5A  0100               	movlb	0	; () banked
 14534  013F5C  8197               	bsf	___fldiv@aexp& (0+255),0,b
 14535  013F5E                     l6901:
 14536                           
 14537                           ; BSR set to: 0
 14538  013F5E  0100               	movlb	0	; () banked
 14539  013F60  5197               	movf	___fldiv@aexp& (0+255),w,b
 14540  013F62  0100               	movlb	0	; () banked
 14541  013F64  B4D8               	btfsc	status,2,c
 14542  013F66  D012               	goto	l6911
 14543                           
 14544                           ; BSR set to: 0
 14545  013F68  0100               	movlb	0	; () banked
 14546  013F6A  2997               	incf	___fldiv@aexp& (0+255),w,b
 14547  013F6C  A4D8               	btfss	status,2,c
 14548  013F6E  D009               	goto	l6907
 14549                           
 14550                           ; BSR set to: 0
 14551  013F70  0E00               	movlw	0
 14552  013F72  0100               	movlb	0	; () banked
 14553  013F74  6F83               	movwf	___fldiv@a& (0+255),b
 14554  013F76  0E00               	movlw	0
 14555  013F78  6F84               	movwf	(___fldiv@a+1)& (0+255),b
 14556  013F7A  0E00               	movlw	0
 14557  013F7C  6F85               	movwf	(___fldiv@a+2)& (0+255),b
 14558  013F7E  0E00               	movlw	0
 14559  013F80  6F86               	movwf	(___fldiv@a+3)& (0+255),b
 14560  013F82                     l6907:
 14561                           
 14562                           ; BSR set to: 0
 14563  013F82  0100               	movlb	0	; () banked
 14564  013F84  8F85               	bsf	(___fldiv@a+2)& (0+255),7,b
 14565                           
 14566                           ; BSR set to: 0
 14567  013F86  0E00               	movlw	0
 14568  013F88  0100               	movlb	0	; () banked
 14569  013F8A  D008               	goto	L16
 14570  013F8C                     l6911:
 14571                           
 14572                           ; BSR set to: 0
 14573  013F8C  0E00               	movlw	0
 14574  013F8E  0100               	movlb	0	; () banked
 14575  013F90  6F83               	movwf	___fldiv@a& (0+255),b
 14576  013F92  0E00               	movlw	0
 14577  013F94  6F84               	movwf	(___fldiv@a+1)& (0+255),b
 14578  013F96  0E00               	movlw	0
 14579  013F98  6F85               	movwf	(___fldiv@a+2)& (0+255),b
 14580  013F9A  0E00               	movlw	0
 14581  013F9C                     L16:
 14582  013F9C  6F86               	movwf	(___fldiv@a+3)& (0+255),b
 14583                           
 14584                           ; BSR set to: 0
 14585                           
 14586                           ; BSR set to: 0
 14587  013F9E  0100               	movlb	0	; () banked
 14588  013FA0  5183               	movf	___fldiv@a& (0+255),w,b
 14589  013FA2  0100               	movlb	0	; () banked
 14590  013FA4  1184               	iorwf	(___fldiv@a+1)& (0+255),w,b
 14591  013FA6  0100               	movlb	0	; () banked
 14592  013FA8  1185               	iorwf	(___fldiv@a+2)& (0+255),w,b
 14593  013FAA  0100               	movlb	0	; () banked
 14594  013FAC  1186               	iorwf	(___fldiv@a+3)& (0+255),w,b
 14595  013FAE  A4D8               	btfss	status,2,c
 14596  013FB0  D017               	goto	l6923
 14597                           
 14598                           ; BSR set to: 0
 14599  013FB2  0E00               	movlw	0
 14600  013FB4  0100               	movlb	0	; () banked
 14601  013FB6  6F7F               	movwf	___fldiv@b& (0+255),b
 14602  013FB8  0E00               	movlw	0
 14603  013FBA  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 14604  013FBC  0E00               	movlw	0
 14605  013FBE  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 14606  013FC0  0E00               	movlw	0
 14607  013FC2  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 14608                           
 14609                           ; BSR set to: 0
 14610  013FC4  0100               	movlb	0	; () banked
 14611  013FC6  0E80               	movlw	128
 14612  013FC8  1381               	iorwf	(___fldiv@b+2)& (0+255),f,b
 14613  013FCA  0E7F               	movlw	127
 14614  013FCC  1382               	iorwf	(___fldiv@b+3)& (0+255),f,b
 14615                           
 14616                           ; BSR set to: 0
 14617  013FCE  C07F  F07F         	movff	___fldiv@b,?___fldiv
 14618  013FD2  C080  F080         	movff	___fldiv@b+1,?___fldiv+1
 14619  013FD6  C081  F081         	movff	___fldiv@b+2,?___fldiv+2
 14620  013FDA  C082  F082         	movff	___fldiv@b+3,?___fldiv+3
 14621                           
 14622                           ; BSR set to: 0
 14623  013FDE  0012               	return	
 14624  013FE0                     l6923:
 14625                           
 14626                           ; BSR set to: 0
 14627  013FE0  0100               	movlb	0	; () banked
 14628  013FE2  5196               	movf	___fldiv@bexp& (0+255),w,b
 14629  013FE4  0100               	movlb	0	; () banked
 14630  013FE6  A4D8               	btfss	status,2,c
 14631  013FE8  D012               	goto	l6931
 14632                           
 14633                           ; BSR set to: 0
 14634  013FEA  0E00               	movlw	0
 14635  013FEC  0100               	movlb	0	; () banked
 14636  013FEE  6F7F               	movwf	___fldiv@b& (0+255),b
 14637  013FF0  0E00               	movlw	0
 14638  013FF2  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 14639  013FF4  0E00               	movlw	0
 14640  013FF6  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 14641  013FF8  0E00               	movlw	0
 14642  013FFA  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 14643                           
 14644                           ; BSR set to: 0
 14645  013FFC  C07F  F07F         	movff	___fldiv@b,?___fldiv
 14646  014000  C080  F080         	movff	___fldiv@b+1,?___fldiv+1
 14647  014004  C081  F081         	movff	___fldiv@b+2,?___fldiv+2
 14648  014008  C082  F082         	movff	___fldiv@b+3,?___fldiv+3
 14649                           
 14650                           ; BSR set to: 0
 14651  01400C  0012               	return	
 14652  01400E                     l6931:
 14653                           
 14654                           ; BSR set to: 0
 14655  01400E  0100               	movlb	0	; () banked
 14656  014010  5197               	movf	___fldiv@aexp& (0+255),w,b
 14657  014012  0100               	movlb	0	; () banked
 14658  014014  6F87               	movwf	??___fldiv& (0+255),b
 14659  014016  6B88               	clrf	(??___fldiv+1)& (0+255),b
 14660  014018  0100               	movlb	0	; () banked
 14661  01401A  1F87               	comf	??___fldiv& (0+255),f,b
 14662  01401C  1F88               	comf	(??___fldiv+1)& (0+255),f,b
 14663  01401E  4B87               	infsnz	??___fldiv& (0+255),f,b
 14664  014020  2B88               	incf	(??___fldiv+1)& (0+255),f,b
 14665  014022  0100               	movlb	0	; () banked
 14666  014024  5196               	movf	___fldiv@bexp& (0+255),w,b
 14667  014026  0100               	movlb	0	; () banked
 14668  014028  6F89               	movwf	(??___fldiv+2)& (0+255),b
 14669  01402A  6B8A               	clrf	(??___fldiv+3)& (0+255),b
 14670  01402C  0100               	movlb	0	; () banked
 14671  01402E  5187               	movf	??___fldiv& (0+255),w,b
 14672  014030  0100               	movlb	0	; () banked
 14673  014032  2789               	addwf	(??___fldiv+2)& (0+255),f,b
 14674  014034  0100               	movlb	0	; () banked
 14675  014036  5188               	movf	(??___fldiv+1)& (0+255),w,b
 14676  014038  0100               	movlb	0	; () banked
 14677  01403A  238A               	addwfc	(??___fldiv+3)& (0+255),f,b
 14678  01403C  0E7F               	movlw	127
 14679  01403E  0100               	movlb	0	; () banked
 14680  014040  2589               	addwf	(??___fldiv+2)& (0+255),w,b
 14681  014042  0100               	movlb	0	; () banked
 14682  014044  6F90               	movwf	___fldiv@new_exp& (0+255),b
 14683  014046  0E00               	movlw	0
 14684  014048  0100               	movlb	0	; () banked
 14685  01404A  218A               	addwfc	(??___fldiv+3)& (0+255),w,b
 14686  01404C  0100               	movlb	0	; () banked
 14687  01404E  6F91               	movwf	(___fldiv@new_exp+1)& (0+255),b
 14688                           
 14689                           ; BSR set to: 0
 14690  014050  C07F  F08C         	movff	___fldiv@b,___fldiv@rem
 14691  014054  C080  F08D         	movff	___fldiv@b+1,___fldiv@rem+1
 14692  014058  C081  F08E         	movff	___fldiv@b+2,___fldiv@rem+2
 14693  01405C  C082  F08F         	movff	___fldiv@b+3,___fldiv@rem+3
 14694                           
 14695                           ; BSR set to: 0
 14696  014060  0E00               	movlw	0
 14697  014062  0100               	movlb	0	; () banked
 14698  014064  6F7F               	movwf	___fldiv@b& (0+255),b
 14699  014066  0E00               	movlw	0
 14700  014068  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 14701  01406A  0E00               	movlw	0
 14702  01406C  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 14703  01406E  0E00               	movlw	0
 14704  014070  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 14705                           
 14706                           ; BSR set to: 0
 14707  014072  0E00               	movlw	0
 14708  014074  0100               	movlb	0	; () banked
 14709  014076  6F92               	movwf	___fldiv@grs& (0+255),b
 14710  014078  0E00               	movlw	0
 14711  01407A  6F93               	movwf	(___fldiv@grs+1)& (0+255),b
 14712  01407C  0E00               	movlw	0
 14713  01407E  6F94               	movwf	(___fldiv@grs+2)& (0+255),b
 14714  014080  0E00               	movlw	0
 14715  014082  6F95               	movwf	(___fldiv@grs+3)& (0+255),b
 14716                           
 14717                           ; BSR set to: 0
 14718  014084  0E00               	movlw	0
 14719  014086  0100               	movlb	0	; () banked
 14720  014088  6F97               	movwf	___fldiv@aexp& (0+255),b
 14721  01408A  D042               	goto	l1635
 14722  01408C                     l6941:
 14723                           
 14724                           ; BSR set to: 0
 14725  01408C  0100               	movlb	0	; () banked
 14726  01408E  5197               	movf	___fldiv@aexp& (0+255),w,b
 14727  014090  0100               	movlb	0	; () banked
 14728  014092  B4D8               	btfsc	status,2,c
 14729  014094  D017               	goto	l6949
 14730                           
 14731                           ; BSR set to: 0
 14732  014096  0100               	movlb	0	; () banked
 14733  014098  90D8               	bcf	status,0,c
 14734  01409A  378C               	rlcf	___fldiv@rem& (0+255),f,b
 14735  01409C  378D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 14736  01409E  378E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 14737  0140A0  378F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 14738  0140A2  0100               	movlb	0	; () banked
 14739  0140A4  90D8               	bcf	status,0,c
 14740  0140A6  377F               	rlcf	___fldiv@b& (0+255),f,b
 14741  0140A8  3780               	rlcf	(___fldiv@b+1)& (0+255),f,b
 14742  0140AA  3781               	rlcf	(___fldiv@b+2)& (0+255),f,b
 14743  0140AC  3782               	rlcf	(___fldiv@b+3)& (0+255),f,b
 14744                           
 14745                           ; BSR set to: 0
 14746  0140AE  0100               	movlb	0	; () banked
 14747  0140B0  AF95               	btfss	(___fldiv@grs+3)& (0+255),7,b
 14748  0140B2  D002               	goto	l1638
 14749                           
 14750                           ; BSR set to: 0
 14751  0140B4  0100               	movlb	0	; () banked
 14752  0140B6  817F               	bsf	___fldiv@b& (0+255),0,b
 14753  0140B8                     l1638:
 14754                           
 14755                           ; BSR set to: 0
 14756  0140B8  0100               	movlb	0	; () banked
 14757  0140BA  90D8               	bcf	status,0,c
 14758  0140BC  3792               	rlcf	___fldiv@grs& (0+255),f,b
 14759  0140BE  3793               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 14760  0140C0  3794               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 14761  0140C2  3795               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 14762  0140C4                     l6949:
 14763                           
 14764                           ; BSR set to: 0
 14765  0140C4  0100               	movlb	0	; () banked
 14766  0140C6  5183               	movf	___fldiv@a& (0+255),w,b
 14767  0140C8  0100               	movlb	0	; () banked
 14768  0140CA  5D8C               	subwf	___fldiv@rem& (0+255),w,b
 14769  0140CC  0100               	movlb	0	; () banked
 14770  0140CE  5184               	movf	(___fldiv@a+1)& (0+255),w,b
 14771  0140D0  0100               	movlb	0	; () banked
 14772  0140D2  598D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 14773  0140D4  0100               	movlb	0	; () banked
 14774  0140D6  5185               	movf	(___fldiv@a+2)& (0+255),w,b
 14775  0140D8  0100               	movlb	0	; () banked
 14776  0140DA  598E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 14777  0140DC  0100               	movlb	0	; () banked
 14778  0140DE  5186               	movf	(___fldiv@a+3)& (0+255),w,b
 14779  0140E0  0100               	movlb	0	; () banked
 14780  0140E2  598F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 14781  0140E4  A0D8               	btfss	status,0,c
 14782  0140E6  D012               	goto	l6955
 14783                           
 14784                           ; BSR set to: 0
 14785  0140E8  0100               	movlb	0	; () banked
 14786  0140EA  8D95               	bsf	(___fldiv@grs+3)& (0+255),6,b
 14787                           
 14788                           ; BSR set to: 0
 14789  0140EC  0100               	movlb	0	; () banked
 14790  0140EE  5183               	movf	___fldiv@a& (0+255),w,b
 14791  0140F0  0100               	movlb	0	; () banked
 14792  0140F2  5F8C               	subwf	___fldiv@rem& (0+255),f,b
 14793  0140F4  0100               	movlb	0	; () banked
 14794  0140F6  5184               	movf	(___fldiv@a+1)& (0+255),w,b
 14795  0140F8  0100               	movlb	0	; () banked
 14796  0140FA  5B8D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 14797  0140FC  0100               	movlb	0	; () banked
 14798  0140FE  5185               	movf	(___fldiv@a+2)& (0+255),w,b
 14799  014100  0100               	movlb	0	; () banked
 14800  014102  5B8E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 14801  014104  0100               	movlb	0	; () banked
 14802  014106  5186               	movf	(___fldiv@a+3)& (0+255),w,b
 14803  014108  0100               	movlb	0	; () banked
 14804  01410A  5B8F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 14805  01410C                     l6955:
 14806                           
 14807                           ; BSR set to: 0
 14808  01410C  0100               	movlb	0	; () banked
 14809  01410E  2B97               	incf	___fldiv@aexp& (0+255),f,b
 14810  014110                     l1635:
 14811                           
 14812                           ; BSR set to: 0
 14813  014110  0E19               	movlw	25
 14814  014112  0100               	movlb	0	; () banked
 14815  014114  6597               	cpfsgt	___fldiv@aexp& (0+255),b
 14816  014116  D7BA               	goto	l6941
 14817                           
 14818                           ; BSR set to: 0
 14819                           
 14820                           ; BSR set to: 0
 14821  014118  0100               	movlb	0	; () banked
 14822  01411A  518C               	movf	___fldiv@rem& (0+255),w,b
 14823  01411C  0100               	movlb	0	; () banked
 14824  01411E  118D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 14825  014120  0100               	movlb	0	; () banked
 14826  014122  118E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 14827  014124  0100               	movlb	0	; () banked
 14828  014126  118F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 14829  014128  B4D8               	btfsc	status,2,c
 14830  01412A  D018               	goto	l6967
 14831                           
 14832                           ; BSR set to: 0
 14833  01412C  0100               	movlb	0	; () banked
 14834  01412E  8192               	bsf	___fldiv@grs& (0+255),0,b
 14835                           
 14836                           ; BSR set to: 0
 14837  014130  D015               	goto	l6967
 14838  014132                     l6961:
 14839                           
 14840                           ; BSR set to: 0
 14841  014132  0100               	movlb	0	; () banked
 14842  014134  90D8               	bcf	status,0,c
 14843  014136  377F               	rlcf	___fldiv@b& (0+255),f,b
 14844  014138  3780               	rlcf	(___fldiv@b+1)& (0+255),f,b
 14845  01413A  3781               	rlcf	(___fldiv@b+2)& (0+255),f,b
 14846  01413C  3782               	rlcf	(___fldiv@b+3)& (0+255),f,b
 14847                           
 14848                           ; BSR set to: 0
 14849  01413E  0100               	movlb	0	; () banked
 14850  014140  AF95               	btfss	(___fldiv@grs+3)& (0+255),7,b
 14851  014142  D002               	goto	l1644
 14852                           
 14853                           ; BSR set to: 0
 14854  014144  0100               	movlb	0	; () banked
 14855  014146  817F               	bsf	___fldiv@b& (0+255),0,b
 14856  014148                     l1644:
 14857                           
 14858                           ; BSR set to: 0
 14859  014148  0100               	movlb	0	; () banked
 14860  01414A  90D8               	bcf	status,0,c
 14861  01414C  3792               	rlcf	___fldiv@grs& (0+255),f,b
 14862  01414E  3793               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 14863  014150  3794               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 14864  014152  3795               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 14865  014154  0100               	movlb	0	; () banked
 14866  014156  0790               	decf	___fldiv@new_exp& (0+255),f,b
 14867  014158  A0D8               	btfss	status,0,c
 14868  01415A  0791               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 14869  01415C                     l6967:
 14870                           
 14871                           ; BSR set to: 0
 14872  01415C  0100               	movlb	0	; () banked
 14873  01415E  AF81               	btfss	(___fldiv@b+2)& (0+255),7,b
 14874  014160  D7E8               	goto	l6961
 14875                           
 14876                           ; BSR set to: 0
 14877                           
 14878                           ; BSR set to: 0
 14879  014162  0E00               	movlw	0
 14880  014164  0100               	movlb	0	; () banked
 14881  014166  6F97               	movwf	___fldiv@aexp& (0+255),b
 14882                           
 14883                           ; BSR set to: 0
 14884  014168  0100               	movlb	0	; () banked
 14885  01416A  AF95               	btfss	(___fldiv@grs+3)& (0+255),7,b
 14886  01416C  D024               	goto	l1646
 14887                           
 14888                           ; BSR set to: 0
 14889  01416E  0EFF               	movlw	255
 14890  014170  0100               	movlb	0	; () banked
 14891  014172  1592               	andwf	___fldiv@grs& (0+255),w,b
 14892  014174  0100               	movlb	0	; () banked
 14893  014176  6F87               	movwf	??___fldiv& (0+255),b
 14894  014178  0EFF               	movlw	255
 14895  01417A  0100               	movlb	0	; () banked
 14896  01417C  1593               	andwf	(___fldiv@grs+1)& (0+255),w,b
 14897  01417E  0100               	movlb	0	; () banked
 14898  014180  6F88               	movwf	(??___fldiv+1)& (0+255),b
 14899  014182  0EFF               	movlw	255
 14900  014184  0100               	movlb	0	; () banked
 14901  014186  1594               	andwf	(___fldiv@grs+2)& (0+255),w,b
 14902  014188  0100               	movlb	0	; () banked
 14903  01418A  6F89               	movwf	(??___fldiv+2)& (0+255),b
 14904  01418C  0E7F               	movlw	127
 14905  01418E  0100               	movlb	0	; () banked
 14906  014190  1595               	andwf	(___fldiv@grs+3)& (0+255),w,b
 14907  014192  0100               	movlb	0	; () banked
 14908  014194  6F8A               	movwf	(??___fldiv+3)& (0+255),b
 14909  014196  0100               	movlb	0	; () banked
 14910  014198  5187               	movf	??___fldiv& (0+255),w,b
 14911  01419A  0100               	movlb	0	; () banked
 14912  01419C  1188               	iorwf	(??___fldiv+1)& (0+255),w,b
 14913  01419E  0100               	movlb	0	; () banked
 14914  0141A0  1189               	iorwf	(??___fldiv+2)& (0+255),w,b
 14915  0141A2  0100               	movlb	0	; () banked
 14916  0141A4  118A               	iorwf	(??___fldiv+3)& (0+255),w,b
 14917  0141A6  A4D8               	btfss	status,2,c
 14918  0141A8  D003               	goto	l6977
 14919                           
 14920                           ; BSR set to: 0
 14921                           
 14922                           ; BSR set to: 0
 14923  0141AA  0100               	movlb	0	; () banked
 14924  0141AC  A17F               	btfss	___fldiv@b& (0+255),0,b
 14925  0141AE  D003               	goto	l1646
 14926  0141B0                     l6977:
 14927                           
 14928                           ; BSR set to: 0
 14929  0141B0  0E01               	movlw	1
 14930  0141B2  0100               	movlb	0	; () banked
 14931  0141B4  6F97               	movwf	___fldiv@aexp& (0+255),b
 14932  0141B6                     l1646:
 14933                           
 14934                           ; BSR set to: 0
 14935  0141B6  0100               	movlb	0	; () banked
 14936  0141B8  5197               	movf	___fldiv@aexp& (0+255),w,b
 14937  0141BA  0100               	movlb	0	; () banked
 14938  0141BC  B4D8               	btfsc	status,2,c
 14939  0141BE  D023               	goto	l6987
 14940                           
 14941                           ; BSR set to: 0
 14942  0141C0  0E01               	movlw	1
 14943  0141C2  0100               	movlb	0	; () banked
 14944  0141C4  277F               	addwf	___fldiv@b& (0+255),f,b
 14945  0141C6  0E00               	movlw	0
 14946  0141C8  2380               	addwfc	(___fldiv@b+1)& (0+255),f,b
 14947  0141CA  2381               	addwfc	(___fldiv@b+2)& (0+255),f,b
 14948  0141CC  2382               	addwfc	(___fldiv@b+3)& (0+255),f,b
 14949                           
 14950                           ; BSR set to: 0
 14951  0141CE  0100               	movlb	0	; () banked
 14952  0141D0  A182               	btfss	(___fldiv@b+3)& (0+255),0,b
 14953  0141D2  D019               	goto	l6987
 14954                           
 14955                           ; BSR set to: 0
 14956  0141D4  C07F  F087         	movff	___fldiv@b,??___fldiv
 14957  0141D8  C080  F088         	movff	___fldiv@b+1,??___fldiv+1
 14958  0141DC  C081  F089         	movff	___fldiv@b+2,??___fldiv+2
 14959  0141E0  C082  F08A         	movff	___fldiv@b+3,??___fldiv+3
 14960  0141E4  0100               	movlb	0	; () banked
 14961  0141E6  358A               	rlcf	(??___fldiv+3)& (0+255),w,b
 14962  0141E8  338A               	rrcf	(??___fldiv+3)& (0+255),f,b
 14963  0141EA  3389               	rrcf	(??___fldiv+2)& (0+255),f,b
 14964  0141EC  3388               	rrcf	(??___fldiv+1)& (0+255),f,b
 14965  0141EE  3387               	rrcf	??___fldiv& (0+255),f,b
 14966  0141F0  C087  F07F         	movff	??___fldiv,___fldiv@b
 14967  0141F4  C088  F080         	movff	??___fldiv+1,___fldiv@b+1
 14968  0141F8  C089  F081         	movff	??___fldiv+2,___fldiv@b+2
 14969  0141FC  C08A  F082         	movff	??___fldiv+3,___fldiv@b+3
 14970                           
 14971                           ; BSR set to: 0
 14972  014200  0100               	movlb	0	; () banked
 14973  014202  4B90               	infsnz	___fldiv@new_exp& (0+255),f,b
 14974  014204  2B91               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 14975  014206                     l6987:
 14976                           
 14977                           ; BSR set to: 0
 14978  014206  0100               	movlb	0	; () banked
 14979  014208  BF91               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 14980  01420A  D014               	goto	l6991
 14981  01420C  0100               	movlb	0	; () banked
 14982  01420E  5191               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 14983  014210  E104               	bnz	u8830
 14984  014212  0100               	movlb	0	; () banked
 14985  014214  2990               	incf	___fldiv@new_exp& (0+255),w,b
 14986  014216  A0D8               	btfss	status,0,c
 14987  014218  D00D               	goto	l6991
 14988  01421A                     u8830:
 14989                           
 14990                           ; BSR set to: 0
 14991  01421A  0E00               	movlw	0
 14992  01421C  0100               	movlb	0	; () banked
 14993  01421E  6F91               	movwf	(___fldiv@new_exp+1)& (0+255),b
 14994  014220  6990               	setf	___fldiv@new_exp& (0+255),b
 14995  014222  0E00               	movlw	0
 14996  014224  0100               	movlb	0	; () banked
 14997  014226  6F7F               	movwf	___fldiv@b& (0+255),b
 14998  014228  0E00               	movlw	0
 14999  01422A  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 15000  01422C  0E00               	movlw	0
 15001  01422E  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 15002  014230  0E00               	movlw	0
 15003  014232  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 15004  014234                     l6991:
 15005                           
 15006                           ; BSR set to: 0
 15007  014234  0100               	movlb	0	; () banked
 15008  014236  BF91               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 15009  014238  D007               	goto	l6993
 15010  01423A  0100               	movlb	0	; () banked
 15011  01423C  5191               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 15012  01423E  E115               	bnz	l6995
 15013  014240  0100               	movlb	0	; () banked
 15014  014242  0590               	decf	___fldiv@new_exp& (0+255),w,b
 15015  014244  B0D8               	btfsc	status,0,c
 15016  014246  D011               	goto	l6995
 15017  014248                     l6993:
 15018                           
 15019                           ; BSR set to: 0
 15020  014248  0E00               	movlw	0
 15021  01424A  0100               	movlb	0	; () banked
 15022  01424C  6F91               	movwf	(___fldiv@new_exp+1)& (0+255),b
 15023  01424E  0E00               	movlw	0
 15024  014250  6F90               	movwf	___fldiv@new_exp& (0+255),b
 15025  014252  0E00               	movlw	0
 15026  014254  0100               	movlb	0	; () banked
 15027  014256  6F7F               	movwf	___fldiv@b& (0+255),b
 15028  014258  0E00               	movlw	0
 15029  01425A  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 15030  01425C  0E00               	movlw	0
 15031  01425E  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 15032  014260  0E00               	movlw	0
 15033  014262  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 15034  014264  0E00               	movlw	0
 15035  014266  0100               	movlb	0	; () banked
 15036  014268  6F8B               	movwf	___fldiv@sign& (0+255),b
 15037  01426A                     l6995:
 15038                           
 15039                           ; BSR set to: 0
 15040  01426A  C090  F096         	movff	___fldiv@new_exp,___fldiv@bexp
 15041                           
 15042                           ; BSR set to: 0
 15043  01426E  0100               	movlb	0	; () banked
 15044  014270  A196               	btfss	___fldiv@bexp& (0+255),0,b
 15045  014272  D003               	goto	l7001
 15046                           
 15047                           ; BSR set to: 0
 15048  014274  0100               	movlb	0	; () banked
 15049  014276  8F81               	bsf	(___fldiv@b+2)& (0+255),7,b
 15050  014278  D002               	goto	l7003
 15051  01427A                     l7001:
 15052                           
 15053                           ; BSR set to: 0
 15054  01427A  0100               	movlb	0	; () banked
 15055  01427C  9F81               	bcf	(___fldiv@b+2)& (0+255),7,b
 15056  01427E                     l7003:
 15057                           
 15058                           ; BSR set to: 0
 15059  01427E  0100               	movlb	0	; () banked
 15060  014280  90D8               	bcf	status,0,c
 15061  014282  3196               	rrcf	___fldiv@bexp& (0+255),w,b
 15062  014284  0100               	movlb	0	; () banked
 15063  014286  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 15064                           
 15065                           ; BSR set to: 0
 15066  014288  0100               	movlb	0	; () banked
 15067  01428A  518B               	movf	___fldiv@sign& (0+255),w,b
 15068  01428C  0100               	movlb	0	; () banked
 15069  01428E  1382               	iorwf	(___fldiv@b+3)& (0+255),f,b
 15070                           
 15071                           ; BSR set to: 0
 15072  014290  C07F  F07F         	movff	___fldiv@b,?___fldiv
 15073  014294  C080  F080         	movff	___fldiv@b+1,?___fldiv+1
 15074  014298  C081  F081         	movff	___fldiv@b+2,?___fldiv+2
 15075  01429C  C082  F082         	movff	___fldiv@b+3,?___fldiv+3
 15076  0142A0  0012               	return	
 15077  0142A2                     __end_of___fldiv:
 15078                           	opt stack 0
 15079                           tblptru	equ	0xFF8
 15080                           tblptrh	equ	0xFF7
 15081                           tblptrl	equ	0xFF6
 15082                           tablat	equ	0xFF5
 15083                           prodh	equ	0xFF4
 15084                           prodl	equ	0xFF3
 15085                           intcon	equ	0xFF2
 15086                           postinc0	equ	0xFEE
 15087                           wreg	equ	0xFE8
 15088                           indf2	equ	0xFDF
 15089                           postinc2	equ	0xFDE
 15090                           fsr2h	equ	0xFDA
 15091                           fsr2l	equ	0xFD9
 15092                           status	equ	0xFD8
 15093                           
 15094 ;; *************** function _LCD_write_integer *****************
 15095 ;; Defined at:
 15096 ;;		line 210 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15097 ;; Parameters:    Size  Location     Type
 15098 ;;  value           2   41[BANK0 ] int 
 15099 ;;  number_of_di    1   43[BANK0 ] unsigned char 
 15100 ;;  zero_cleanin    1   44[BANK0 ] unsigned char 
 15101 ;; Auto vars:     Size  Location     Type
 15102 ;;  convertedInt    6   50[BANK0 ] unsigned char [6]
 15103 ;;  index           1   56[BANK0 ] unsigned char 
 15104 ;; Return value:  Size  Location     Type
 15105 ;;                  1    wreg      void 
 15106 ;; Registers used:
 15107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15108 ;; Tracked objects:
 15109 ;;		On entry : 0/0
 15110 ;;		On exit  : 0/0
 15111 ;;		Unchanged: 0/0
 15112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15113 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15114 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15115 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15116 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15117 ;;Total ram usage:       16 bytes
 15118 ;; Hardware stack levels used:    1
 15119 ;; Hardware stack levels required when called:    9
 15120 ;; This function calls:
 15121 ;;		_LCD_write_string
 15122 ;;		_itoa
 15123 ;; This function is called by:
 15124 ;;		_LCD_Handler
 15125 ;; This function uses a non-reentrant model
 15126 ;;
 15127                           
 15128                           	psect	text28
 15129  0151BA                     __ptext28:
 15130                           	opt stack 0
 15131  0151BA                     _LCD_write_integer:
 15132                           	opt stack 20
 15133                           
 15134                           ;src\LCD_44780.c: 213: unsigned char convertedInt [6] = {0,0,0,0,0,0};
 15135                           
 15136                           ; BSR set to: 0
 15137                           ;incstack = 0
 15138  0151BA  EE21  F000         	lfsr	2,LCD_write_integer@F17134
 15139  0151BE  EE10  F092         	lfsr	1,LCD_write_integer@convertedInt
 15140  0151C2  0E05               	movlw	5
 15141  0151C4                     u12071:
 15142  0151C4  CFDB FFE3          	movff	plusw2,plusw1
 15143  0151C8  06E8               	decf	wreg,f,c
 15144  0151CA  E2FC               	bc	u12071
 15145                           
 15146                           ;src\LCD_44780.c: 216: unsigned char index;
 15147                           ;src\LCD_44780.c: 224: itoa ((unsigned char*) convertedInt, value,10);
 15148  0151CC  0E92               	movlw	low LCD_write_integer@convertedInt
 15149  0151CE  0100               	movlb	0	; () banked
 15150  0151D0  6F81               	movwf	itoa@buf& (0+255),b
 15151  0151D2  0E00               	movlw	high LCD_write_integer@convertedInt
 15152  0151D4  0100               	movlb	0	; () banked
 15153  0151D6  6F82               	movwf	(itoa@buf+1)& (0+255),b
 15154  0151D8  C089  F083         	movff	LCD_write_integer@value,itoa@val
 15155  0151DC  C08A  F084         	movff	LCD_write_integer@value+1,itoa@val+1
 15156  0151E0  0E00               	movlw	0
 15157  0151E2  0100               	movlb	0	; () banked
 15158  0151E4  6F86               	movwf	(itoa@base+1)& (0+255),b
 15159  0151E6  0E0A               	movlw	10
 15160  0151E8  6F85               	movwf	itoa@base& (0+255),b
 15161  0151EA  ECA3  F0B2         	call	_itoa	;wreg free
 15162                           
 15163                           ;src\LCD_44780.c: 228: if (number_of_digits >0 ) {
 15164  0151EE  0100               	movlb	0	; () banked
 15165  0151F0  518B               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 15166  0151F2  0100               	movlb	0	; () banked
 15167  0151F4  B4D8               	btfsc	status,2,c
 15168  0151F6  D0B8               	goto	l8993
 15169                           
 15170                           ; BSR set to: 0
 15171                           ;src\LCD_44780.c: 230: convertedInt[number_of_digits] = '\0';
 15172  0151F8  0100               	movlb	0	; () banked
 15173  0151FA  518B               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 15174  0151FC  0D01               	mullw	1
 15175  0151FE  0E92               	movlw	low LCD_write_integer@convertedInt
 15176  015200  24F3               	addwf	prodl,w,c
 15177  015202  6ED9               	movwf	fsr2l,c
 15178  015204  0E00               	movlw	high LCD_write_integer@convertedInt
 15179  015206  20F4               	addwfc	prodh,w,c
 15180  015208  6EDA               	movwf	fsr2h,c
 15181  01520A  0E00               	movlw	0
 15182  01520C  6EDF               	movwf	indf2,c
 15183                           
 15184                           ;src\LCD_44780.c: 234: while (!(convertedInt[number_of_digits-1] <= '9' && convertedInt[
      +                          number_of_digits-1] >= '0')){
 15185  01520E  D070               	goto	l8989
 15186  015210                     l8971:
 15187                           
 15188                           ; BSR set to: 0
 15189                           ;src\LCD_44780.c: 236: for (index = number_of_digits-1; index > 0; index--){
 15190  015210  0100               	movlb	0	; () banked
 15191  015212  058B               	decf	LCD_write_integer@number_of_digits& (0+255),w,b
 15192  015214  0100               	movlb	0	; () banked
 15193  015216  6F98               	movwf	LCD_write_integer@index& (0+255),b
 15194  015218                     l8973:
 15195                           
 15196                           ; BSR set to: 0
 15197  015218  0100               	movlb	0	; () banked
 15198  01521A  5198               	movf	LCD_write_integer@index& (0+255),w,b
 15199  01521C  0100               	movlb	0	; () banked
 15200  01521E  B4D8               	btfsc	status,2,c
 15201  015220  D067               	goto	l8989
 15202                           
 15203                           ; BSR set to: 0
 15204                           ;src\LCD_44780.c: 237: convertedInt[index] = convertedInt[index-1];
 15205                           
 15206                           ; BSR set to: 0
 15207                           
 15208                           ; BSR set to: 0
 15209  015222  0EFF               	movlw	255
 15210  015224  0100               	movlb	0	; () banked
 15211  015226  6F8D               	movwf	??_LCD_write_integer& (0+255),b
 15212  015228  0EFF               	movlw	255
 15213  01522A  0100               	movlb	0	; () banked
 15214  01522C  6F8E               	movwf	(??_LCD_write_integer+1)& (0+255),b
 15215  01522E  0100               	movlb	0	; () banked
 15216  015230  5198               	movf	LCD_write_integer@index& (0+255),w,b
 15217  015232  0100               	movlb	0	; () banked
 15218  015234  6F8F               	movwf	(??_LCD_write_integer+2)& (0+255),b
 15219  015236  6B90               	clrf	(??_LCD_write_integer+3)& (0+255),b
 15220  015238  0100               	movlb	0	; () banked
 15221  01523A  518D               	movf	??_LCD_write_integer& (0+255),w,b
 15222  01523C  0100               	movlb	0	; () banked
 15223  01523E  278F               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 15224  015240  0100               	movlb	0	; () banked
 15225  015242  518E               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 15226  015244  0100               	movlb	0	; () banked
 15227  015246  2390               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 15228  015248  0E92               	movlw	low LCD_write_integer@convertedInt
 15229  01524A  0100               	movlb	0	; () banked
 15230  01524C  258F               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 15231  01524E  6ED9               	movwf	fsr2l,c
 15232  015250  0E00               	movlw	high LCD_write_integer@convertedInt
 15233  015252  0100               	movlb	0	; () banked
 15234  015254  2190               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 15235  015256  6EDA               	movwf	fsr2h,c
 15236  015258  0100               	movlb	0	; () banked
 15237  01525A  5198               	movf	LCD_write_integer@index& (0+255),w,b
 15238  01525C  0D01               	mullw	1
 15239  01525E  0E92               	movlw	low LCD_write_integer@convertedInt
 15240  015260  24F3               	addwf	prodl,w,c
 15241  015262  6EE1               	movwf	fsr1l,c
 15242  015264  0E00               	movlw	high LCD_write_integer@convertedInt
 15243  015266  20F4               	addwfc	prodh,w,c
 15244  015268  6EE2               	movwf	fsr1h,c
 15245  01526A  CFDF FFE7          	movff	indf2,indf1
 15246                           
 15247                           ; BSR set to: 0
 15248                           ;src\LCD_44780.c: 239: if (zero_cleaning == 0x01) {
 15249  01526E  0100               	movlb	0	; () banked
 15250  015270  058C               	decf	LCD_write_integer@zero_cleaning& (0+255),w,b
 15251  015272  A4D8               	btfss	status,2,c
 15252  015274  D01D               	goto	l8983
 15253                           
 15254                           ; BSR set to: 0
 15255                           ;src\LCD_44780.c: 240: convertedInt[index-1] = ' ';
 15256  015276  0EFF               	movlw	255
 15257  015278  0100               	movlb	0	; () banked
 15258  01527A  6F8D               	movwf	??_LCD_write_integer& (0+255),b
 15259  01527C  0EFF               	movlw	255
 15260  01527E  0100               	movlb	0	; () banked
 15261  015280  6F8E               	movwf	(??_LCD_write_integer+1)& (0+255),b
 15262  015282  0100               	movlb	0	; () banked
 15263  015284  5198               	movf	LCD_write_integer@index& (0+255),w,b
 15264  015286  0100               	movlb	0	; () banked
 15265  015288  6F8F               	movwf	(??_LCD_write_integer+2)& (0+255),b
 15266  01528A  6B90               	clrf	(??_LCD_write_integer+3)& (0+255),b
 15267  01528C  0100               	movlb	0	; () banked
 15268  01528E  518D               	movf	??_LCD_write_integer& (0+255),w,b
 15269  015290  0100               	movlb	0	; () banked
 15270  015292  278F               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 15271  015294  0100               	movlb	0	; () banked
 15272  015296  518E               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 15273  015298  0100               	movlb	0	; () banked
 15274  01529A  2390               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 15275  01529C  0E92               	movlw	low LCD_write_integer@convertedInt
 15276  01529E  0100               	movlb	0	; () banked
 15277  0152A0  258F               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 15278  0152A2  6ED9               	movwf	fsr2l,c
 15279  0152A4  0E00               	movlw	high LCD_write_integer@convertedInt
 15280  0152A6  0100               	movlb	0	; () banked
 15281  0152A8  2190               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 15282  0152AA  6EDA               	movwf	fsr2h,c
 15283  0152AC  0E20               	movlw	32
 15284  0152AE  D01C               	goto	L17
 15285  0152B0                     l8983:
 15286                           
 15287                           ; BSR set to: 0
 15288                           ;src\LCD_44780.c: 242: convertedInt[index-1] = '0';
 15289  0152B0  0EFF               	movlw	255
 15290  0152B2  0100               	movlb	0	; () banked
 15291  0152B4  6F8D               	movwf	??_LCD_write_integer& (0+255),b
 15292  0152B6  0EFF               	movlw	255
 15293  0152B8  0100               	movlb	0	; () banked
 15294  0152BA  6F8E               	movwf	(??_LCD_write_integer+1)& (0+255),b
 15295  0152BC  0100               	movlb	0	; () banked
 15296  0152BE  5198               	movf	LCD_write_integer@index& (0+255),w,b
 15297  0152C0  0100               	movlb	0	; () banked
 15298  0152C2  6F8F               	movwf	(??_LCD_write_integer+2)& (0+255),b
 15299  0152C4  6B90               	clrf	(??_LCD_write_integer+3)& (0+255),b
 15300  0152C6  0100               	movlb	0	; () banked
 15301  0152C8  518D               	movf	??_LCD_write_integer& (0+255),w,b
 15302  0152CA  0100               	movlb	0	; () banked
 15303  0152CC  278F               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 15304  0152CE  0100               	movlb	0	; () banked
 15305  0152D0  518E               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 15306  0152D2  0100               	movlb	0	; () banked
 15307  0152D4  2390               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 15308  0152D6  0E92               	movlw	low LCD_write_integer@convertedInt
 15309  0152D8  0100               	movlb	0	; () banked
 15310  0152DA  258F               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 15311  0152DC  6ED9               	movwf	fsr2l,c
 15312  0152DE  0E00               	movlw	high LCD_write_integer@convertedInt
 15313  0152E0  0100               	movlb	0	; () banked
 15314  0152E2  2190               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 15315  0152E4  6EDA               	movwf	fsr2h,c
 15316  0152E6  0E30               	movlw	48
 15317  0152E8                     L17:
 15318  0152E8  6EDF               	movwf	indf2,c
 15319                           
 15320                           ; BSR set to: 0
 15321                           
 15322                           ; BSR set to: 0
 15323  0152EA  0100               	movlb	0	; () banked
 15324  0152EC  0798               	decf	LCD_write_integer@index& (0+255),f,b
 15325  0152EE  D794               	goto	l8973
 15326  0152F0                     l8989:
 15327                           
 15328                           ; BSR set to: 0
 15329  0152F0  0EFF               	movlw	255
 15330  0152F2  0100               	movlb	0	; () banked
 15331  0152F4  6F8D               	movwf	??_LCD_write_integer& (0+255),b
 15332  0152F6  0EFF               	movlw	255
 15333  0152F8  0100               	movlb	0	; () banked
 15334  0152FA  6F8E               	movwf	(??_LCD_write_integer+1)& (0+255),b
 15335  0152FC  0100               	movlb	0	; () banked
 15336  0152FE  518B               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 15337  015300  0100               	movlb	0	; () banked
 15338  015302  6F8F               	movwf	(??_LCD_write_integer+2)& (0+255),b
 15339  015304  6B90               	clrf	(??_LCD_write_integer+3)& (0+255),b
 15340  015306  0100               	movlb	0	; () banked
 15341  015308  518D               	movf	??_LCD_write_integer& (0+255),w,b
 15342  01530A  0100               	movlb	0	; () banked
 15343  01530C  278F               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 15344  01530E  0100               	movlb	0	; () banked
 15345  015310  518E               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 15346  015312  0100               	movlb	0	; () banked
 15347  015314  2390               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 15348  015316  0E92               	movlw	low LCD_write_integer@convertedInt
 15349  015318  0100               	movlb	0	; () banked
 15350  01531A  258F               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 15351  01531C  6ED9               	movwf	fsr2l,c
 15352  01531E  0E00               	movlw	high LCD_write_integer@convertedInt
 15353  015320  0100               	movlb	0	; () banked
 15354  015322  2190               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 15355  015324  6EDA               	movwf	fsr2h,c
 15356  015326  0E3A               	movlw	58
 15357  015328  60DF               	cpfslt	indf2,c
 15358  01532A  D772               	goto	l8971
 15359                           
 15360                           ; BSR set to: 0
 15361  01532C  0EFF               	movlw	255
 15362  01532E  0100               	movlb	0	; () banked
 15363  015330  6F8D               	movwf	??_LCD_write_integer& (0+255),b
 15364  015332  0EFF               	movlw	255
 15365  015334  0100               	movlb	0	; () banked
 15366  015336  6F8E               	movwf	(??_LCD_write_integer+1)& (0+255),b
 15367  015338  0100               	movlb	0	; () banked
 15368  01533A  518B               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 15369  01533C  0100               	movlb	0	; () banked
 15370  01533E  6F8F               	movwf	(??_LCD_write_integer+2)& (0+255),b
 15371  015340  6B90               	clrf	(??_LCD_write_integer+3)& (0+255),b
 15372  015342  0100               	movlb	0	; () banked
 15373  015344  518D               	movf	??_LCD_write_integer& (0+255),w,b
 15374  015346  0100               	movlb	0	; () banked
 15375  015348  278F               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 15376  01534A  0100               	movlb	0	; () banked
 15377  01534C  518E               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 15378  01534E  0100               	movlb	0	; () banked
 15379  015350  2390               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 15380  015352  0E92               	movlw	low LCD_write_integer@convertedInt
 15381  015354  0100               	movlb	0	; () banked
 15382  015356  258F               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 15383  015358  6ED9               	movwf	fsr2l,c
 15384  01535A  0E00               	movlw	high LCD_write_integer@convertedInt
 15385  01535C  0100               	movlb	0	; () banked
 15386  01535E  2190               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 15387  015360  6EDA               	movwf	fsr2h,c
 15388  015362  0E2F               	movlw	47
 15389  015364  64DF               	cpfsgt	indf2,c
 15390  015366  D754               	goto	l8971
 15391  015368                     l8993:
 15392                           
 15393                           ; BSR set to: 0
 15394                           ;src\LCD_44780.c: 243: }
 15395                           ;src\LCD_44780.c: 245: }
 15396                           ;src\LCD_44780.c: 246: }
 15397                           ;src\LCD_44780.c: 247: }
 15398                           ;src\LCD_44780.c: 249: LCD_write_string (convertedInt);
 15399  015368  0E92               	movlw	low LCD_write_integer@convertedInt
 15400  01536A  0100               	movlb	0	; () banked
 15401  01536C  6F82               	movwf	LCD_write_string@buffer& (0+255),b
 15402  01536E  0E00               	movlw	high LCD_write_integer@convertedInt
 15403  015370  0100               	movlb	0	; () banked
 15404  015372  6F83               	movwf	(LCD_write_string@buffer+1)& (0+255),b
 15405  015374  ECBC  F0B3         	call	_LCD_write_string	;wreg free
 15406  015378  0012               	return		;funcret
 15407  01537A                     __end_of_LCD_write_integer:
 15408                           	opt stack 0
 15409                           tblptru	equ	0xFF8
 15410                           tblptrh	equ	0xFF7
 15411                           tblptrl	equ	0xFF6
 15412                           tablat	equ	0xFF5
 15413                           prodh	equ	0xFF4
 15414                           prodl	equ	0xFF3
 15415                           intcon	equ	0xFF2
 15416                           postinc0	equ	0xFEE
 15417                           wreg	equ	0xFE8
 15418                           indf1	equ	0xFE7
 15419                           plusw1	equ	0xFE3
 15420                           fsr1h	equ	0xFE2
 15421                           fsr1l	equ	0xFE1
 15422                           indf2	equ	0xFDF
 15423                           postinc2	equ	0xFDE
 15424                           plusw2	equ	0xFDB
 15425                           fsr2h	equ	0xFDA
 15426                           fsr2l	equ	0xFD9
 15427                           status	equ	0xFD8
 15428                           
 15429 ;; *************** function _itoa *****************
 15430 ;; Defined at:
 15431 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\itoa.c"
 15432 ;; Parameters:    Size  Location     Type
 15433 ;;  buf             2   33[BANK0 ] PTR unsigned char 
 15434 ;;		 -> LCD_write_integer@convertedInt(6), 
 15435 ;;  val             2   35[BANK0 ] int 
 15436 ;;  base            2   37[BANK0 ] int 
 15437 ;; Auto vars:     Size  Location     Type
 15438 ;;  cp              2   39[BANK0 ] PTR unsigned char 
 15439 ;;		 -> LCD_write_integer@convertedInt(6), 
 15440 ;; Return value:  Size  Location     Type
 15441 ;;                  2   33[BANK0 ] PTR unsigned char 
 15442 ;; Registers used:
 15443 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15444 ;; Tracked objects:
 15445 ;;		On entry : 0/0
 15446 ;;		On exit  : 0/0
 15447 ;;		Unchanged: 0/0
 15448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15449 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15450 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15452 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15453 ;;Total ram usage:        8 bytes
 15454 ;; Hardware stack levels used:    1
 15455 ;; Hardware stack levels required when called:    5
 15456 ;; This function calls:
 15457 ;;		_utoa
 15458 ;; This function is called by:
 15459 ;;		_LCD_write_integer
 15460 ;; This function uses a non-reentrant model
 15461 ;;
 15462                           
 15463                           	psect	text29
 15464  016546                     __ptext29:
 15465                           	opt stack 0
 15466  016546                     _itoa:
 15467                           	opt stack 23
 15468                           
 15469                           ;incstack = 0
 15470  016546  C081  F087         	movff	itoa@buf,itoa@cp
 15471  01654A  C082  F088         	movff	itoa@buf+1,itoa@cp+1
 15472  01654E  0100               	movlb	0	; () banked
 15473  016550  AF84               	btfss	(itoa@val+1)& (0+255),7,b
 15474  016552  D00E               	goto	l5935
 15475                           
 15476                           ; BSR set to: 0
 15477  016554  C081  FFD9         	movff	itoa@buf,fsr2l
 15478  016558  C082  FFDA         	movff	itoa@buf+1,fsr2h
 15479  01655C  0E2D               	movlw	45
 15480  01655E  6EDF               	movwf	indf2,c
 15481                           
 15482                           ; BSR set to: 0
 15483  016560  0100               	movlb	0	; () banked
 15484  016562  4B81               	infsnz	itoa@buf& (0+255),f,b
 15485  016564  2B82               	incf	(itoa@buf+1)& (0+255),f,b
 15486                           
 15487                           ; BSR set to: 0
 15488  016566  0100               	movlb	0	; () banked
 15489  016568  6D83               	negf	itoa@val& (0+255),b
 15490  01656A  1F84               	comf	(itoa@val+1)& (0+255),f,b
 15491  01656C  B0D8               	btfsc	status,0,c
 15492  01656E  2B84               	incf	(itoa@val+1)& (0+255),f,b
 15493  016570                     l5935:
 15494                           
 15495                           ; BSR set to: 0
 15496  016570  C081  F078         	movff	itoa@buf,utoa@buf
 15497  016574  C082  F079         	movff	itoa@buf+1,utoa@buf+1
 15498  016578  C083  F07A         	movff	itoa@val,utoa@val
 15499  01657C  C084  F07B         	movff	itoa@val+1,utoa@val+1
 15500  016580  C085  F07C         	movff	itoa@base,utoa@base
 15501  016584  C086  F07D         	movff	itoa@base+1,utoa@base+1
 15502  016588  EC2A  F0AE         	call	_utoa	;wreg free
 15503  01658C  0012               	return	
 15504  01658E                     __end_of_itoa:
 15505                           	opt stack 0
 15506                           tblptru	equ	0xFF8
 15507                           tblptrh	equ	0xFF7
 15508                           tblptrl	equ	0xFF6
 15509                           tablat	equ	0xFF5
 15510                           prodh	equ	0xFF4
 15511                           prodl	equ	0xFF3
 15512                           intcon	equ	0xFF2
 15513                           postinc0	equ	0xFEE
 15514                           wreg	equ	0xFE8
 15515                           indf1	equ	0xFE7
 15516                           plusw1	equ	0xFE3
 15517                           fsr1h	equ	0xFE2
 15518                           fsr1l	equ	0xFE1
 15519                           indf2	equ	0xFDF
 15520                           postinc2	equ	0xFDE
 15521                           plusw2	equ	0xFDB
 15522                           fsr2h	equ	0xFDA
 15523                           fsr2l	equ	0xFD9
 15524                           status	equ	0xFD8
 15525                           
 15526 ;; *************** function _utoa *****************
 15527 ;; Defined at:
 15528 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\itoa.c"
 15529 ;; Parameters:    Size  Location     Type
 15530 ;;  buf             2   24[BANK0 ] PTR unsigned char 
 15531 ;;		 -> LCD_write_integer@convertedInt(6), 
 15532 ;;  val             2   26[BANK0 ] unsigned int 
 15533 ;;  base            2   28[BANK0 ] int 
 15534 ;; Auto vars:     Size  Location     Type
 15535 ;;  v               2   30[BANK0 ] unsigned int 
 15536 ;;  c               1   32[BANK0 ] unsigned char 
 15537 ;; Return value:  Size  Location     Type
 15538 ;;                  2   24[BANK0 ] PTR unsigned char 
 15539 ;; Registers used:
 15540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15541 ;; Tracked objects:
 15542 ;;		On entry : 0/0
 15543 ;;		On exit  : 0/0
 15544 ;;		Unchanged: 0/0
 15545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15546 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15547 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15549 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15550 ;;Total ram usage:        9 bytes
 15551 ;; Hardware stack levels used:    1
 15552 ;; Hardware stack levels required when called:    4
 15553 ;; This function calls:
 15554 ;;		___lwdiv
 15555 ;;		___lwmod
 15556 ;; This function is called by:
 15557 ;;		_itoa
 15558 ;; This function uses a non-reentrant model
 15559 ;;
 15560                           
 15561                           	psect	text30
 15562  015C54                     __ptext30:
 15563                           	opt stack 0
 15564  015C54                     _utoa:
 15565                           	opt stack 23
 15566                           
 15567                           ;incstack = 0
 15568  015C54  C07A  F07E         	movff	utoa@val,utoa@v
 15569  015C58  C07B  F07F         	movff	utoa@val+1,utoa@v+1
 15570  015C5C                     l5457:
 15571  015C5C  C07E  F071         	movff	utoa@v,___lwdiv@dividend
 15572  015C60  C07F  F072         	movff	utoa@v+1,___lwdiv@dividend+1
 15573  015C64  C07C  F073         	movff	utoa@base,___lwdiv@divisor
 15574  015C68  C07D  F074         	movff	utoa@base+1,___lwdiv@divisor+1
 15575  015C6C  ECC8  F0B0         	call	___lwdiv	;wreg free
 15576  015C70  C071  F07E         	movff	?___lwdiv,utoa@v
 15577  015C74  C072  F07F         	movff	?___lwdiv+1,utoa@v+1
 15578  015C78  0100               	movlb	0	; () banked
 15579  015C7A  4B78               	infsnz	utoa@buf& (0+255),f,b
 15580  015C7C  2B79               	incf	(utoa@buf+1)& (0+255),f,b
 15581                           
 15582                           ; BSR set to: 0
 15583  015C7E  0100               	movlb	0	; () banked
 15584  015C80  517E               	movf	utoa@v& (0+255),w,b
 15585  015C82  0100               	movlb	0	; () banked
 15586  015C84  117F               	iorwf	(utoa@v+1)& (0+255),w,b
 15587  015C86  A4D8               	btfss	status,2,c
 15588  015C88  D7E9               	goto	l5457
 15589                           
 15590                           ; BSR set to: 0
 15591                           
 15592                           ; BSR set to: 0
 15593  015C8A  C078  FFD9         	movff	utoa@buf,fsr2l
 15594  015C8E  C079  FFDA         	movff	utoa@buf+1,fsr2h
 15595  015C92  0E00               	movlw	0
 15596  015C94  6EDF               	movwf	indf2,c
 15597                           
 15598                           ; BSR set to: 0
 15599  015C96  0100               	movlb	0	; () banked
 15600  015C98  0778               	decf	utoa@buf& (0+255),f,b
 15601  015C9A  A0D8               	btfss	status,0,c
 15602  015C9C  0779               	decf	(utoa@buf+1)& (0+255),f,b
 15603  015C9E                     l5467:
 15604                           
 15605                           ; BSR set to: 0
 15606  015C9E  C07A  F071         	movff	utoa@val,___lwmod@dividend
 15607  015CA2  C07B  F072         	movff	utoa@val+1,___lwmod@dividend+1
 15608  015CA6  C07C  F073         	movff	utoa@base,___lwmod@divisor
 15609  015CAA  C07D  F074         	movff	utoa@base+1,___lwmod@divisor+1
 15610  015CAE  ECFE  F0B1         	call	___lwmod	;wreg free
 15611  015CB2  0100               	movlb	0	; () banked
 15612  015CB4  5171               	movf	?___lwmod& (0+255),w,b
 15613  015CB6  0100               	movlb	0	; () banked
 15614  015CB8  6F80               	movwf	utoa@c& (0+255),b
 15615                           
 15616                           ; BSR set to: 0
 15617  015CBA  C07A  F071         	movff	utoa@val,___lwdiv@dividend
 15618  015CBE  C07B  F072         	movff	utoa@val+1,___lwdiv@dividend+1
 15619  015CC2  C07C  F073         	movff	utoa@base,___lwdiv@divisor
 15620  015CC6  C07D  F074         	movff	utoa@base+1,___lwdiv@divisor+1
 15621  015CCA  ECC8  F0B0         	call	___lwdiv	;wreg free
 15622  015CCE  C071  F07A         	movff	?___lwdiv,utoa@val
 15623  015CD2  C072  F07B         	movff	?___lwdiv+1,utoa@val+1
 15624  015CD6  0E09               	movlw	9
 15625  015CD8  0100               	movlb	0	; () banked
 15626  015CDA  6580               	cpfsgt	utoa@c& (0+255),b
 15627  015CDC  D003               	goto	l1459
 15628                           
 15629                           ; BSR set to: 0
 15630  015CDE  0E07               	movlw	7
 15631  015CE0  0100               	movlb	0	; () banked
 15632  015CE2  2780               	addwf	utoa@c& (0+255),f,b
 15633  015CE4                     l1459:
 15634                           
 15635                           ; BSR set to: 0
 15636  015CE4  0E30               	movlw	48
 15637  015CE6  0100               	movlb	0	; () banked
 15638  015CE8  2780               	addwf	utoa@c& (0+255),f,b
 15639                           
 15640                           ; BSR set to: 0
 15641  015CEA  C078  FFD9         	movff	utoa@buf,fsr2l
 15642  015CEE  C079  FFDA         	movff	utoa@buf+1,fsr2h
 15643  015CF2  C080  FFDF         	movff	utoa@c,indf2
 15644                           
 15645                           ; BSR set to: 0
 15646  015CF6  0100               	movlb	0	; () banked
 15647  015CF8  0778               	decf	utoa@buf& (0+255),f,b
 15648  015CFA  A0D8               	btfss	status,0,c
 15649  015CFC  0779               	decf	(utoa@buf+1)& (0+255),f,b
 15650                           
 15651                           ; BSR set to: 0
 15652  015CFE  0100               	movlb	0	; () banked
 15653  015D00  517A               	movf	utoa@val& (0+255),w,b
 15654  015D02  0100               	movlb	0	; () banked
 15655  015D04  117B               	iorwf	(utoa@val+1)& (0+255),w,b
 15656  015D06  A4D8               	btfss	status,2,c
 15657  015D08  D7CA               	goto	l5467
 15658                           
 15659                           ; BSR set to: 0
 15660                           ;	Return value of _utoa is never used
 15661                           
 15662                           ; BSR set to: 0
 15663  015D0A  0100               	movlb	0	; () banked
 15664  015D0C  4B78               	infsnz	utoa@buf& (0+255),f,b
 15665  015D0E  2B79               	incf	(utoa@buf+1)& (0+255),f,b
 15666  015D10  0012               	return	
 15667  015D12                     __end_of_utoa:
 15668                           	opt stack 0
 15669                           tblptru	equ	0xFF8
 15670                           tblptrh	equ	0xFF7
 15671                           tblptrl	equ	0xFF6
 15672                           tablat	equ	0xFF5
 15673                           prodh	equ	0xFF4
 15674                           prodl	equ	0xFF3
 15675                           intcon	equ	0xFF2
 15676                           postinc0	equ	0xFEE
 15677                           wreg	equ	0xFE8
 15678                           indf1	equ	0xFE7
 15679                           plusw1	equ	0xFE3
 15680                           fsr1h	equ	0xFE2
 15681                           fsr1l	equ	0xFE1
 15682                           indf2	equ	0xFDF
 15683                           postinc2	equ	0xFDE
 15684                           plusw2	equ	0xFDB
 15685                           fsr2h	equ	0xFDA
 15686                           fsr2l	equ	0xFD9
 15687                           status	equ	0xFD8
 15688                           
 15689 ;; *************** function ___lwmod *****************
 15690 ;; Defined at:
 15691 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
 15692 ;; Parameters:    Size  Location     Type
 15693 ;;  dividend        2   17[BANK0 ] unsigned int 
 15694 ;;  divisor         2   19[BANK0 ] unsigned int 
 15695 ;; Auto vars:     Size  Location     Type
 15696 ;;  counter         1   21[BANK0 ] unsigned char 
 15697 ;; Return value:  Size  Location     Type
 15698 ;;                  2   17[BANK0 ] unsigned int 
 15699 ;; Registers used:
 15700 ;;		wreg, status,2, status,0
 15701 ;; Tracked objects:
 15702 ;;		On entry : 0/0
 15703 ;;		On exit  : 0/0
 15704 ;;		Unchanged: 0/0
 15705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15706 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15707 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15709 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15710 ;;Total ram usage:        5 bytes
 15711 ;; Hardware stack levels used:    1
 15712 ;; Hardware stack levels required when called:    3
 15713 ;; This function calls:
 15714 ;;		Nothing
 15715 ;; This function is called by:
 15716 ;;		_utoa
 15717 ;; This function uses a non-reentrant model
 15718 ;;
 15719                           
 15720                           	psect	text31
 15721  0163FC                     __ptext31:
 15722                           	opt stack 0
 15723  0163FC                     ___lwmod:
 15724                           	opt stack 23
 15725                           
 15726                           ; BSR set to: 0
 15727                           ;incstack = 0
 15728  0163FC  0100               	movlb	0	; () banked
 15729  0163FE  5173               	movf	___lwmod@divisor& (0+255),w,b
 15730  016400  0100               	movlb	0	; () banked
 15731  016402  1174               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 15732  016404  B4D8               	btfsc	status,2,c
 15733  016406  D026               	goto	l1548
 15734                           
 15735                           ; BSR set to: 0
 15736  016408  0E01               	movlw	1
 15737  01640A  0100               	movlb	0	; () banked
 15738  01640C  6F75               	movwf	___lwmod@counter& (0+255),b
 15739  01640E  D006               	goto	l5015
 15740  016410                     l5013:
 15741                           
 15742                           ; BSR set to: 0
 15743  016410  0100               	movlb	0	; () banked
 15744  016412  90D8               	bcf	status,0,c
 15745  016414  3773               	rlcf	___lwmod@divisor& (0+255),f,b
 15746  016416  3774               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 15747  016418  0100               	movlb	0	; () banked
 15748  01641A  2B75               	incf	___lwmod@counter& (0+255),f,b
 15749  01641C                     l5015:
 15750                           
 15751                           ; BSR set to: 0
 15752  01641C  0100               	movlb	0	; () banked
 15753  01641E  AF74               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 15754  016420  D7F7               	goto	l5013
 15755  016422                     l5017:
 15756                           
 15757                           ; BSR set to: 0
 15758  016422  0100               	movlb	0	; () banked
 15759  016424  5173               	movf	___lwmod@divisor& (0+255),w,b
 15760  016426  0100               	movlb	0	; () banked
 15761  016428  5D71               	subwf	___lwmod@dividend& (0+255),w,b
 15762  01642A  0100               	movlb	0	; () banked
 15763  01642C  5174               	movf	(___lwmod@divisor+1)& (0+255),w,b
 15764  01642E  0100               	movlb	0	; () banked
 15765  016430  5972               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 15766  016432  A0D8               	btfss	status,0,c
 15767  016434  D008               	goto	l5021
 15768                           
 15769                           ; BSR set to: 0
 15770  016436  0100               	movlb	0	; () banked
 15771  016438  5173               	movf	___lwmod@divisor& (0+255),w,b
 15772  01643A  0100               	movlb	0	; () banked
 15773  01643C  5F71               	subwf	___lwmod@dividend& (0+255),f,b
 15774  01643E  0100               	movlb	0	; () banked
 15775  016440  5174               	movf	(___lwmod@divisor+1)& (0+255),w,b
 15776  016442  0100               	movlb	0	; () banked
 15777  016444  5B72               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 15778  016446                     l5021:
 15779                           
 15780                           ; BSR set to: 0
 15781  016446  0100               	movlb	0	; () banked
 15782  016448  90D8               	bcf	status,0,c
 15783  01644A  3374               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 15784  01644C  3373               	rrcf	___lwmod@divisor& (0+255),f,b
 15785                           
 15786                           ; BSR set to: 0
 15787  01644E  0100               	movlb	0	; () banked
 15788  016450  2F75               	decfsz	___lwmod@counter& (0+255),f,b
 15789  016452  D7E7               	goto	l5017
 15790  016454                     l1548:
 15791                           
 15792                           ; BSR set to: 0
 15793  016454  C071  F071         	movff	___lwmod@dividend,?___lwmod
 15794  016458  C072  F072         	movff	___lwmod@dividend+1,?___lwmod+1
 15795                           
 15796                           ; BSR set to: 0
 15797  01645C  0012               	return		;funcret
 15798  01645E                     __end_of___lwmod:
 15799                           	opt stack 0
 15800                           tblptru	equ	0xFF8
 15801                           tblptrh	equ	0xFF7
 15802                           tblptrl	equ	0xFF6
 15803                           tablat	equ	0xFF5
 15804                           prodh	equ	0xFF4
 15805                           prodl	equ	0xFF3
 15806                           intcon	equ	0xFF2
 15807                           postinc0	equ	0xFEE
 15808                           wreg	equ	0xFE8
 15809                           indf1	equ	0xFE7
 15810                           plusw1	equ	0xFE3
 15811                           fsr1h	equ	0xFE2
 15812                           fsr1l	equ	0xFE1
 15813                           indf2	equ	0xFDF
 15814                           postinc2	equ	0xFDE
 15815                           plusw2	equ	0xFDB
 15816                           fsr2h	equ	0xFDA
 15817                           fsr2l	equ	0xFD9
 15818                           status	equ	0xFD8
 15819                           
 15820 ;; *************** function ___lwdiv *****************
 15821 ;; Defined at:
 15822 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
 15823 ;; Parameters:    Size  Location     Type
 15824 ;;  dividend        2   17[BANK0 ] unsigned int 
 15825 ;;  divisor         2   19[BANK0 ] unsigned int 
 15826 ;; Auto vars:     Size  Location     Type
 15827 ;;  quotient        2   21[BANK0 ] unsigned int 
 15828 ;;  counter         1   23[BANK0 ] unsigned char 
 15829 ;; Return value:  Size  Location     Type
 15830 ;;                  2   17[BANK0 ] unsigned int 
 15831 ;; Registers used:
 15832 ;;		wreg, status,2, status,0
 15833 ;; Tracked objects:
 15834 ;;		On entry : 0/0
 15835 ;;		On exit  : 0/0
 15836 ;;		Unchanged: 0/0
 15837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15838 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15839 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15841 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15842 ;;Total ram usage:        7 bytes
 15843 ;; Hardware stack levels used:    1
 15844 ;; Hardware stack levels required when called:    3
 15845 ;; This function calls:
 15846 ;;		Nothing
 15847 ;; This function is called by:
 15848 ;;		_utoa
 15849 ;; This function uses a non-reentrant model
 15850 ;;
 15851                           
 15852                           	psect	text32
 15853  016190                     __ptext32:
 15854                           	opt stack 0
 15855  016190                     ___lwdiv:
 15856                           	opt stack 23
 15857                           
 15858                           ; BSR set to: 0
 15859                           ;incstack = 0
 15860  016190  0E00               	movlw	0
 15861  016192  0100               	movlb	0	; () banked
 15862  016194  6F76               	movwf	(___lwdiv@quotient+1)& (0+255),b
 15863  016196  0E00               	movlw	0
 15864  016198  6F75               	movwf	___lwdiv@quotient& (0+255),b
 15865                           
 15866                           ; BSR set to: 0
 15867  01619A  0100               	movlb	0	; () banked
 15868  01619C  5173               	movf	___lwdiv@divisor& (0+255),w,b
 15869  01619E  0100               	movlb	0	; () banked
 15870  0161A0  1174               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 15871  0161A2  B4D8               	btfsc	status,2,c
 15872  0161A4  D02C               	goto	l1538
 15873                           
 15874                           ; BSR set to: 0
 15875  0161A6  0E01               	movlw	1
 15876  0161A8  0100               	movlb	0	; () banked
 15877  0161AA  6F77               	movwf	___lwdiv@counter& (0+255),b
 15878  0161AC  D006               	goto	l4995
 15879  0161AE                     l4993:
 15880                           
 15881                           ; BSR set to: 0
 15882  0161AE  0100               	movlb	0	; () banked
 15883  0161B0  90D8               	bcf	status,0,c
 15884  0161B2  3773               	rlcf	___lwdiv@divisor& (0+255),f,b
 15885  0161B4  3774               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 15886  0161B6  0100               	movlb	0	; () banked
 15887  0161B8  2B77               	incf	___lwdiv@counter& (0+255),f,b
 15888  0161BA                     l4995:
 15889                           
 15890                           ; BSR set to: 0
 15891  0161BA  0100               	movlb	0	; () banked
 15892  0161BC  AF74               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 15893  0161BE  D7F7               	goto	l4993
 15894  0161C0                     l4997:
 15895                           
 15896                           ; BSR set to: 0
 15897  0161C0  0100               	movlb	0	; () banked
 15898  0161C2  90D8               	bcf	status,0,c
 15899  0161C4  3775               	rlcf	___lwdiv@quotient& (0+255),f,b
 15900  0161C6  3776               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 15901                           
 15902                           ; BSR set to: 0
 15903  0161C8  0100               	movlb	0	; () banked
 15904  0161CA  5173               	movf	___lwdiv@divisor& (0+255),w,b
 15905  0161CC  0100               	movlb	0	; () banked
 15906  0161CE  5D71               	subwf	___lwdiv@dividend& (0+255),w,b
 15907  0161D0  0100               	movlb	0	; () banked
 15908  0161D2  5174               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 15909  0161D4  0100               	movlb	0	; () banked
 15910  0161D6  5972               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 15911  0161D8  A0D8               	btfss	status,0,c
 15912  0161DA  D00A               	goto	l5005
 15913                           
 15914                           ; BSR set to: 0
 15915  0161DC  0100               	movlb	0	; () banked
 15916  0161DE  5173               	movf	___lwdiv@divisor& (0+255),w,b
 15917  0161E0  0100               	movlb	0	; () banked
 15918  0161E2  5F71               	subwf	___lwdiv@dividend& (0+255),f,b
 15919  0161E4  0100               	movlb	0	; () banked
 15920  0161E6  5174               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 15921  0161E8  0100               	movlb	0	; () banked
 15922  0161EA  5B72               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 15923                           
 15924                           ; BSR set to: 0
 15925  0161EC  0100               	movlb	0	; () banked
 15926  0161EE  8175               	bsf	___lwdiv@quotient& (0+255),0,b
 15927  0161F0                     l5005:
 15928                           
 15929                           ; BSR set to: 0
 15930  0161F0  0100               	movlb	0	; () banked
 15931  0161F2  90D8               	bcf	status,0,c
 15932  0161F4  3374               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 15933  0161F6  3373               	rrcf	___lwdiv@divisor& (0+255),f,b
 15934                           
 15935                           ; BSR set to: 0
 15936  0161F8  0100               	movlb	0	; () banked
 15937  0161FA  2F77               	decfsz	___lwdiv@counter& (0+255),f,b
 15938  0161FC  D7E1               	goto	l4997
 15939  0161FE                     l1538:
 15940                           
 15941                           ; BSR set to: 0
 15942  0161FE  C075  F071         	movff	___lwdiv@quotient,?___lwdiv
 15943  016202  C076  F072         	movff	___lwdiv@quotient+1,?___lwdiv+1
 15944                           
 15945                           ; BSR set to: 0
 15946  016206  0012               	return		;funcret
 15947  016208                     __end_of___lwdiv:
 15948                           	opt stack 0
 15949                           tblptru	equ	0xFF8
 15950                           tblptrh	equ	0xFF7
 15951                           tblptrl	equ	0xFF6
 15952                           tablat	equ	0xFF5
 15953                           prodh	equ	0xFF4
 15954                           prodl	equ	0xFF3
 15955                           intcon	equ	0xFF2
 15956                           postinc0	equ	0xFEE
 15957                           wreg	equ	0xFE8
 15958                           indf1	equ	0xFE7
 15959                           plusw1	equ	0xFE3
 15960                           fsr1h	equ	0xFE2
 15961                           fsr1l	equ	0xFE1
 15962                           indf2	equ	0xFDF
 15963                           postinc2	equ	0xFDE
 15964                           plusw2	equ	0xFDB
 15965                           fsr2h	equ	0xFDA
 15966                           fsr2l	equ	0xFD9
 15967                           status	equ	0xFD8
 15968                           
 15969 ;; *************** function _LCD_write_string *****************
 15970 ;; Defined at:
 15971 ;;		line 194 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15972 ;; Parameters:    Size  Location     Type
 15973 ;;  buffer          2   34[BANK0 ] PTR unsigned char 
 15974 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
 15975 ;; Auto vars:     Size  Location     Type
 15976 ;;		None
 15977 ;; Return value:  Size  Location     Type
 15978 ;;                  1    wreg      void 
 15979 ;; Registers used:
 15980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15981 ;; Tracked objects:
 15982 ;;		On entry : 0/0
 15983 ;;		On exit  : 0/0
 15984 ;;		Unchanged: 0/0
 15985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15986 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15989 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15990 ;;Total ram usage:        2 bytes
 15991 ;; Hardware stack levels used:    1
 15992 ;; Hardware stack levels required when called:    8
 15993 ;; This function calls:
 15994 ;;		_LCD_write_char
 15995 ;; This function is called by:
 15996 ;;		_LCD_write_integer
 15997 ;;		_LCD_Handler
 15998 ;; This function uses a non-reentrant model
 15999 ;;
 16000                           
 16001                           	psect	text33
 16002  016778                     __ptext33:
 16003                           	opt stack 0
 16004  016778                     _LCD_write_string:
 16005                           	opt stack 21
 16006                           
 16007                           ;src\LCD_44780.c: 197: while(*buffer){
 16008                           
 16009                           ; BSR set to: 0
 16010                           ;incstack = 0
 16011  016778  D00A               	goto	l8599
 16012  01677A                     l8595:
 16013                           
 16014                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 16015  01677A  C082  FFD9         	movff	LCD_write_string@buffer,fsr2l
 16016  01677E  C083  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 16017  016782  50DF               	movf	indf2,w,c
 16018  016784  EC34  F0B0         	call	_LCD_write_char
 16019                           
 16020                           ;src\LCD_44780.c: 202: buffer++;
 16021  016788  0100               	movlb	0	; () banked
 16022  01678A  4B82               	infsnz	LCD_write_string@buffer& (0+255),f,b
 16023  01678C  2B83               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 16024  01678E                     l8599:
 16025  01678E  C082  FFD9         	movff	LCD_write_string@buffer,fsr2l
 16026  016792  C083  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 16027  016796  50DF               	movf	indf2,w,c
 16028  016798  B4D8               	btfsc	status,2,c
 16029  01679A  0012               	return	
 16030  01679C  D7EE               	goto	l8595
 16031  01679E                     __end_of_LCD_write_string:
 16032                           	opt stack 0
 16033                           tblptru	equ	0xFF8
 16034                           tblptrh	equ	0xFF7
 16035                           tblptrl	equ	0xFF6
 16036                           tablat	equ	0xFF5
 16037                           prodh	equ	0xFF4
 16038                           prodl	equ	0xFF3
 16039                           intcon	equ	0xFF2
 16040                           postinc0	equ	0xFEE
 16041                           wreg	equ	0xFE8
 16042                           indf1	equ	0xFE7
 16043                           plusw1	equ	0xFE3
 16044                           fsr1h	equ	0xFE2
 16045                           fsr1l	equ	0xFE1
 16046                           indf2	equ	0xFDF
 16047                           postinc2	equ	0xFDE
 16048                           plusw2	equ	0xFDB
 16049                           fsr2h	equ	0xFDA
 16050                           fsr2l	equ	0xFD9
 16051                           status	equ	0xFD8
 16052                           
 16053 ;; *************** function _LCD_goto_xy *****************
 16054 ;; Defined at:
 16055 ;;		line 136 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 16056 ;; Parameters:    Size  Location     Type
 16057 ;;  x               1    wreg     unsigned char 
 16058 ;;  y               1   32[BANK0 ] unsigned char 
 16059 ;; Auto vars:     Size  Location     Type
 16060 ;;  x               1   33[BANK0 ] unsigned char 
 16061 ;; Return value:  Size  Location     Type
 16062 ;;                  1    wreg      void 
 16063 ;; Registers used:
 16064 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16065 ;; Tracked objects:
 16066 ;;		On entry : 0/0
 16067 ;;		On exit  : 0/0
 16068 ;;		Unchanged: 0/0
 16069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16070 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16071 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16073 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16074 ;;Total ram usage:        2 bytes
 16075 ;; Hardware stack levels used:    1
 16076 ;; Hardware stack levels required when called:    8
 16077 ;; This function calls:
 16078 ;;		_LCD_goto_line
 16079 ;;		_LCD_shift_cursor
 16080 ;; This function is called by:
 16081 ;;		_LCD_Handler
 16082 ;; This function uses a non-reentrant model
 16083 ;;
 16084                           
 16085                           	psect	text34
 16086  01681E                     __ptext34:
 16087                           	opt stack 0
 16088  01681E                     _LCD_goto_xy:
 16089                           	opt stack 21
 16090                           
 16091                           ;incstack = 0
 16092                           ;LCD_goto_xy@x stored from wreg
 16093  01681E  0100               	movlb	0	; () banked
 16094  016820  6F81               	movwf	LCD_goto_xy@x& (0+255),b
 16095                           
 16096                           ;src\LCD_44780.c: 138: LCD_goto_line (y);
 16097  016822  0100               	movlb	0	; () banked
 16098  016824  5180               	movf	LCD_goto_xy@y& (0+255),w,b
 16099  016826  EC55  F0AD         	call	_LCD_goto_line
 16100                           
 16101                           ;src\LCD_44780.c: 139: LCD_shift_cursor (1, x-1);
 16102  01682A  0100               	movlb	0	; () banked
 16103  01682C  0581               	decf	LCD_goto_xy@x& (0+255),w,b
 16104  01682E  0100               	movlb	0	; () banked
 16105  016830  6F7D               	movwf	LCD_shift_cursor@number_of_shift& (0+255),b
 16106  016832  0E01               	movlw	1
 16107  016834  EC59  F0B2         	call	_LCD_shift_cursor
 16108  016838  0012               	return		;funcret
 16109  01683A                     __end_of_LCD_goto_xy:
 16110                           	opt stack 0
 16111                           tblptru	equ	0xFF8
 16112                           tblptrh	equ	0xFF7
 16113                           tblptrl	equ	0xFF6
 16114                           tablat	equ	0xFF5
 16115                           prodh	equ	0xFF4
 16116                           prodl	equ	0xFF3
 16117                           intcon	equ	0xFF2
 16118                           postinc0	equ	0xFEE
 16119                           wreg	equ	0xFE8
 16120                           indf1	equ	0xFE7
 16121                           plusw1	equ	0xFE3
 16122                           fsr1h	equ	0xFE2
 16123                           fsr1l	equ	0xFE1
 16124                           indf2	equ	0xFDF
 16125                           postinc2	equ	0xFDE
 16126                           plusw2	equ	0xFDB
 16127                           fsr2h	equ	0xFDA
 16128                           fsr2l	equ	0xFD9
 16129                           status	equ	0xFD8
 16130                           
 16131 ;; *************** function _LCD_shift_cursor *****************
 16132 ;; Defined at:
 16133 ;;		line 98 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 16134 ;; Parameters:    Size  Location     Type
 16135 ;;  shift           1    wreg     unsigned char 
 16136 ;;  number_of_sh    1   29[BANK0 ] unsigned char 
 16137 ;; Auto vars:     Size  Location     Type
 16138 ;;  shift           1   30[BANK0 ] unsigned char 
 16139 ;;  i               1   31[BANK0 ] unsigned char 
 16140 ;; Return value:  Size  Location     Type
 16141 ;;                  1    wreg      void 
 16142 ;; Registers used:
 16143 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16144 ;; Tracked objects:
 16145 ;;		On entry : 0/0
 16146 ;;		On exit  : 0/0
 16147 ;;		Unchanged: 0/0
 16148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16149 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16150 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16152 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16153 ;;Total ram usage:        3 bytes
 16154 ;; Hardware stack levels used:    1
 16155 ;; Hardware stack levels required when called:    7
 16156 ;; This function calls:
 16157 ;;		_LCD_send_command
 16158 ;; This function is called by:
 16159 ;;		_LCD_goto_xy
 16160 ;; This function uses a non-reentrant model
 16161 ;;
 16162                           
 16163                           	psect	text35
 16164  0164B2                     __ptext35:
 16165                           	opt stack 0
 16166  0164B2                     _LCD_shift_cursor:
 16167                           	opt stack 21
 16168                           
 16169                           ;incstack = 0
 16170                           ;LCD_shift_cursor@shift stored from wreg
 16171  0164B2  0100               	movlb	0	; () banked
 16172  0164B4  6F7E               	movwf	LCD_shift_cursor@shift& (0+255),b
 16173                           
 16174                           ;src\LCD_44780.c: 100: unsigned char i;
 16175                           ;src\LCD_44780.c: 102: for (i=0; i < number_of_shift; i++) {
 16176  0164B6  0E00               	movlw	0
 16177  0164B8  0100               	movlb	0	; () banked
 16178  0164BA  6F7F               	movwf	LCD_shift_cursor@i& (0+255),b
 16179  0164BC  D019               	goto	l8579
 16180  0164BE                     l8575:
 16181                           
 16182                           ; BSR set to: 0
 16183                           ;src\LCD_44780.c: 103: LCD_send_command (0,0,0,1);
 16184  0164BE  0E00               	movlw	0
 16185  0164C0  0100               	movlb	0	; () banked
 16186  0164C2  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16187  0164C4  0E00               	movlw	0
 16188  0164C6  0100               	movlb	0	; () banked
 16189  0164C8  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16190  0164CA  0E01               	movlw	1
 16191  0164CC  0100               	movlb	0	; () banked
 16192  0164CE  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16193  0164D0  0E00               	movlw	0
 16194  0164D2  ECEA  F0B2         	call	_LCD_send_command
 16195                           
 16196                           ;src\LCD_44780.c: 104: LCD_send_command (0,shift,0,0);
 16197  0164D6  C07E  F079         	movff	LCD_shift_cursor@shift,LCD_send_command@D2
 16198  0164DA  0E00               	movlw	0
 16199  0164DC  0100               	movlb	0	; () banked
 16200  0164DE  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16201  0164E0  0E00               	movlw	0
 16202  0164E2  0100               	movlb	0	; () banked
 16203  0164E4  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16204  0164E6  0E00               	movlw	0
 16205  0164E8  ECEA  F0B2         	call	_LCD_send_command
 16206  0164EC  0100               	movlb	0	; () banked
 16207  0164EE  2B7F               	incf	LCD_shift_cursor@i& (0+255),f,b
 16208  0164F0                     l8579:
 16209                           
 16210                           ; BSR set to: 0
 16211  0164F0  0100               	movlb	0	; () banked
 16212  0164F2  517D               	movf	LCD_shift_cursor@number_of_shift& (0+255),w,b
 16213  0164F4  0100               	movlb	0	; () banked
 16214  0164F6  5D7F               	subwf	LCD_shift_cursor@i& (0+255),w,b
 16215  0164F8  B0D8               	btfsc	status,0,c
 16216  0164FA  0012               	return	
 16217  0164FC  D7E0               	goto	l8575
 16218  0164FE                     __end_of_LCD_shift_cursor:
 16219                           	opt stack 0
 16220                           tblptru	equ	0xFF8
 16221                           tblptrh	equ	0xFF7
 16222                           tblptrl	equ	0xFF6
 16223                           tablat	equ	0xFF5
 16224                           prodh	equ	0xFF4
 16225                           prodl	equ	0xFF3
 16226                           intcon	equ	0xFF2
 16227                           postinc0	equ	0xFEE
 16228                           wreg	equ	0xFE8
 16229                           indf1	equ	0xFE7
 16230                           plusw1	equ	0xFE3
 16231                           fsr1h	equ	0xFE2
 16232                           fsr1l	equ	0xFE1
 16233                           indf2	equ	0xFDF
 16234                           postinc2	equ	0xFDE
 16235                           plusw2	equ	0xFDB
 16236                           fsr2h	equ	0xFDA
 16237                           fsr2l	equ	0xFD9
 16238                           status	equ	0xFD8
 16239                           
 16240 ;; *************** function _LCD_Gap *****************
 16241 ;; Defined at:
 16242 ;;		line 572 in file "RemoteCan.c"
 16243 ;; Parameters:    Size  Location     Type
 16244 ;;		None
 16245 ;; Auto vars:     Size  Location     Type
 16246 ;;		None
 16247 ;; Return value:  Size  Location     Type
 16248 ;;                  1    wreg      void 
 16249 ;; Registers used:
 16250 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16251 ;; Tracked objects:
 16252 ;;		On entry : 0/0
 16253 ;;		On exit  : 0/0
 16254 ;;		Unchanged: 0/0
 16255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16260 ;;Total ram usage:        0 bytes
 16261 ;; Hardware stack levels used:    1
 16262 ;; Hardware stack levels required when called:    9
 16263 ;; This function calls:
 16264 ;;		_LCD_clear
 16265 ;;		_LCD_goto_line
 16266 ;;		_LCD_initialize
 16267 ;;		_LCD_write_message
 16268 ;; This function is called by:
 16269 ;;		_main
 16270 ;; This function uses a non-reentrant model
 16271 ;;
 16272                           
 16273                           	psect	text36
 16274  0162D0                     __ptext36:
 16275                           	opt stack 0
 16276  0162D0                     _LCD_Gap:
 16277                           	opt stack 21
 16278                           
 16279                           ;RemoteCan.c: 573: LCD_initialize(16);
 16280                           
 16281                           ; BSR set to: 0
 16282                           ;incstack = 0
 16283  0162D0  0E10               	movlw	16
 16284  0162D2  EC18  F0AC         	call	_LCD_initialize
 16285                           
 16286                           ;RemoteCan.c: 574: LCD_clear();
 16287  0162D6  EC8E  F0B3         	call	_LCD_clear	;wreg free
 16288                           
 16289                           ;RemoteCan.c: 575: LCD_goto_line(1);
 16290  0162DA  0E01               	movlw	1
 16291  0162DC  EC55  F0AD         	call	_LCD_goto_line
 16292                           
 16293                           ;RemoteCan.c: 576: LCD_write_message("= PARKING MESSAGES =");
 16294  0162E0  0E16               	movlw	low STR_21
 16295  0162E2  0100               	movlb	0	; () banked
 16296  0162E4  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 16297  0162E6  0EFF               	movlw	high STR_21
 16298  0162E8  0100               	movlb	0	; () banked
 16299  0162EA  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 16300  0162EC  EC5B  F0B3         	call	_LCD_write_message	;wreg free
 16301                           
 16302                           ;RemoteCan.c: 577: LCD_goto_line(2);
 16303  0162F0  0E02               	movlw	2
 16304  0162F2  EC55  F0AD         	call	_LCD_goto_line
 16305                           
 16306                           ;RemoteCan.c: 578: LCD_write_message(" Parking space FOUND");
 16307  0162F6  0E7F               	movlw	low STR_22
 16308  0162F8  0100               	movlb	0	; () banked
 16309  0162FA  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 16310  0162FC  0EFF               	movlw	high STR_22
 16311  0162FE  0100               	movlb	0	; () banked
 16312  016300  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 16313  016302  EC5B  F0B3         	call	_LCD_write_message	;wreg free
 16314                           
 16315                           ;RemoteCan.c: 579: LCD_goto_line(3);
 16316  016306  0E03               	movlw	3
 16317  016308  EC55  F0AD         	call	_LCD_goto_line
 16318                           
 16319                           ;RemoteCan.c: 580: LCD_write_message("->  KEEP MOVING   <-");
 16320  01630C  0EC2               	movlw	low STR_23
 16321  01630E  0100               	movlb	0	; () banked
 16322  016310  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 16323  016312  0EFE               	movlw	high STR_23
 16324  016314  0100               	movlb	0	; () banked
 16325  016316  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 16326  016318  EC5B  F0B3         	call	_LCD_write_message	;wreg free
 16327                           
 16328                           ;RemoteCan.c: 581: LCD_goto_line(4);
 16329  01631C  0E04               	movlw	4
 16330  01631E  EC55  F0AD         	call	_LCD_goto_line
 16331                           
 16332                           ;RemoteCan.c: 582: LCD_write_message(" until next message ");
 16333  016322  0E59               	movlw	low STR_24
 16334  016324  0100               	movlb	0	; () banked
 16335  016326  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 16336  016328  0EFE               	movlw	high STR_24
 16337  01632A  0100               	movlb	0	; () banked
 16338  01632C  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 16339  01632E  EC5B  F0B3         	call	_LCD_write_message	;wreg free
 16340  016332  0012               	return		;funcret
 16341  016334                     __end_of_LCD_Gap:
 16342                           	opt stack 0
 16343                           tblptru	equ	0xFF8
 16344                           tblptrh	equ	0xFF7
 16345                           tblptrl	equ	0xFF6
 16346                           tablat	equ	0xFF5
 16347                           prodh	equ	0xFF4
 16348                           prodl	equ	0xFF3
 16349                           intcon	equ	0xFF2
 16350                           postinc0	equ	0xFEE
 16351                           wreg	equ	0xFE8
 16352                           indf1	equ	0xFE7
 16353                           plusw1	equ	0xFE3
 16354                           fsr1h	equ	0xFE2
 16355                           fsr1l	equ	0xFE1
 16356                           indf2	equ	0xFDF
 16357                           postinc2	equ	0xFDE
 16358                           plusw2	equ	0xFDB
 16359                           fsr2h	equ	0xFDA
 16360                           fsr2l	equ	0xFD9
 16361                           status	equ	0xFD8
 16362                           
 16363 ;; *************** function _LCD_Error *****************
 16364 ;; Defined at:
 16365 ;;		line 624 in file "RemoteCan.c"
 16366 ;; Parameters:    Size  Location     Type
 16367 ;;		None
 16368 ;; Auto vars:     Size  Location     Type
 16369 ;;		None
 16370 ;; Return value:  Size  Location     Type
 16371 ;;                  1    wreg      void 
 16372 ;; Registers used:
 16373 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16374 ;; Tracked objects:
 16375 ;;		On entry : 0/0
 16376 ;;		On exit  : 0/0
 16377 ;;		Unchanged: 0/0
 16378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16383 ;;Total ram usage:        0 bytes
 16384 ;; Hardware stack levels used:    1
 16385 ;; Hardware stack levels required when called:    9
 16386 ;; This function calls:
 16387 ;;		_LCD_clear
 16388 ;;		_LCD_goto_line
 16389 ;;		_LCD_initialize
 16390 ;;		_LCD_write_message
 16391 ;; This function is called by:
 16392 ;;		_main
 16393 ;; This function uses a non-reentrant model
 16394 ;;
 16395                           
 16396                           	psect	text37
 16397  0160FE                     __ptext37:
 16398                           	opt stack 0
 16399  0160FE                     _LCD_Error:
 16400                           	opt stack 21
 16401                           
 16402                           ;RemoteCan.c: 625: LCD_initialize(16);
 16403                           
 16404                           ;incstack = 0
 16405  0160FE  0E10               	movlw	16
 16406  016100  EC18  F0AC         	call	_LCD_initialize
 16407                           
 16408                           ;RemoteCan.c: 626: LCD_clear();
 16409  016104  EC8E  F0B3         	call	_LCD_clear	;wreg free
 16410                           
 16411                           ;RemoteCan.c: 627: LCD_goto_line(1);
 16412  016108  0E01               	movlw	1
 16413  01610A  EC55  F0AD         	call	_LCD_goto_line
 16414                           
 16415                           ;RemoteCan.c: 628: LCD_write_message("= PARKING MESSAGES =");
 16416  01610E  0E16               	movlw	low STR_21
 16417  016110  0100               	movlb	0	; () banked
 16418  016112  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 16419  016114  0EFF               	movlw	high STR_21
 16420  016116  0100               	movlb	0	; () banked
 16421  016118  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 16422  01611A  EC5B  F0B3         	call	_LCD_write_message	;wreg free
 16423                           
 16424                           ;RemoteCan.c: 629: LCD_goto_line(2);
 16425  01611E  0E02               	movlw	2
 16426  016120  EC55  F0AD         	call	_LCD_goto_line
 16427                           
 16428                           ;RemoteCan.c: 630: LCD_write_message(" Parking procedures ");
 16429  016124  0E98               	movlw	low STR_34
 16430  016126  0100               	movlb	0	; () banked
 16431  016128  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 16432  01612A  0EFE               	movlw	high STR_34
 16433  01612C  0100               	movlb	0	; () banked
 16434  01612E  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 16435  016130  EC5B  F0B3         	call	_LCD_write_message	;wreg free
 16436                           
 16437                           ;RemoteCan.c: 631: LCD_goto_line(3);
 16438  016134  0E03               	movlw	3
 16439  016136  EC55  F0AD         	call	_LCD_goto_line
 16440                           
 16441                           ;RemoteCan.c: 632: if (user_stop == 0) {
 16442  01613A  B24A               	btfsc	_user_stop/(0+8),_user_stop& (0+7),c	;volatile
 16443  01613C  D014               	goto	l940
 16444                           
 16445                           ;RemoteCan.c: 633: LCD_write_message("       FAILED!      ");
 16446  01613E  0E72               	movlw	low STR_39
 16447  016140  0100               	movlb	0	; () banked
 16448  016142  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 16449  016144  0EFD               	movlw	high STR_39
 16450  016146  0100               	movlb	0	; () banked
 16451  016148  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 16452  01614A  EC5B  F0B3         	call	_LCD_write_message	;wreg free
 16453                           
 16454                           ;RemoteCan.c: 634: LCD_goto_line(4);
 16455  01614E  0E04               	movlw	4
 16456  016150  EC55  F0AD         	call	_LCD_goto_line
 16457                           
 16458                           ;RemoteCan.c: 635: LCD_write_message("   due to an error  ");
 16459  016154  0E2F               	movlw	low STR_40
 16460  016156  0100               	movlb	0	; () banked
 16461  016158  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 16462  01615A  0EFE               	movlw	high STR_40
 16463  01615C  0100               	movlb	0	; () banked
 16464  01615E  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 16465  016160  EC5B  F0B3         	call	_LCD_write_message	;wreg free
 16466                           
 16467                           ;RemoteCan.c: 636: } else {
 16468  016164  0012               	return	
 16469  016166                     l940:
 16470                           
 16471                           ;RemoteCan.c: 637: user_stop = 0;
 16472  016166  924A               	bcf	_user_stop/(0+8),_user_stop& (0+7),c	;volatile
 16473                           
 16474                           ;RemoteCan.c: 638: LCD_write_message("      STOPPED!      ");
 16475  016168  0E87               	movlw	low STR_41
 16476  01616A  0100               	movlb	0	; () banked
 16477  01616C  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 16478  01616E  0EFD               	movlw	high STR_41
 16479  016170  0100               	movlb	0	; () banked
 16480  016172  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 16481  016174  EC5B  F0B3         	call	_LCD_write_message	;wreg free
 16482                           
 16483                           ;RemoteCan.c: 639: LCD_goto_line(4);
 16484  016178  0E04               	movlw	4
 16485  01617A  EC55  F0AD         	call	_LCD_goto_line
 16486                           
 16487                           ;RemoteCan.c: 640: LCD_write_message("    by the USER     ");
 16488  01617E  0EB1               	movlw	low STR_42
 16489  016180  0100               	movlb	0	; () banked
 16490  016182  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 16491  016184  0EFD               	movlw	high STR_42
 16492  016186  0100               	movlb	0	; () banked
 16493  016188  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 16494  01618A  EC5B  F0B3         	call	_LCD_write_message	;wreg free
 16495  01618E  0012               	return	
 16496  016190                     __end_of_LCD_Error:
 16497                           	opt stack 0
 16498                           tblptru	equ	0xFF8
 16499                           tblptrh	equ	0xFF7
 16500                           tblptrl	equ	0xFF6
 16501                           tablat	equ	0xFF5
 16502                           prodh	equ	0xFF4
 16503                           prodl	equ	0xFF3
 16504                           intcon	equ	0xFF2
 16505                           postinc0	equ	0xFEE
 16506                           wreg	equ	0xFE8
 16507                           indf1	equ	0xFE7
 16508                           plusw1	equ	0xFE3
 16509                           fsr1h	equ	0xFE2
 16510                           fsr1l	equ	0xFE1
 16511                           indf2	equ	0xFDF
 16512                           postinc2	equ	0xFDE
 16513                           plusw2	equ	0xFDB
 16514                           fsr2h	equ	0xFDA
 16515                           fsr2l	equ	0xFD9
 16516                           status	equ	0xFD8
 16517                           
 16518 ;; *************** function _LCD_End *****************
 16519 ;; Defined at:
 16520 ;;		line 611 in file "RemoteCan.c"
 16521 ;; Parameters:    Size  Location     Type
 16522 ;;		None
 16523 ;; Auto vars:     Size  Location     Type
 16524 ;;		None
 16525 ;; Return value:  Size  Location     Type
 16526 ;;                  1    wreg      void 
 16527 ;; Registers used:
 16528 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16529 ;; Tracked objects:
 16530 ;;		On entry : 0/0
 16531 ;;		On exit  : 0/0
 16532 ;;		Unchanged: 0/0
 16533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16538 ;;Total ram usage:        0 bytes
 16539 ;; Hardware stack levels used:    1
 16540 ;; Hardware stack levels required when called:    9
 16541 ;; This function calls:
 16542 ;;		_LCD_clear
 16543 ;;		_LCD_goto_line
 16544 ;;		_LCD_initialize
 16545 ;;		_LCD_write_message
 16546 ;; This function is called by:
 16547 ;;		_main
 16548 ;; This function uses a non-reentrant model
 16549 ;;
 16550                           
 16551                           	psect	text38
 16552  016334                     __ptext38:
 16553                           	opt stack 0
 16554  016334                     _LCD_End:
 16555                           	opt stack 21
 16556                           
 16557                           ;RemoteCan.c: 612: LCD_initialize(16);
 16558                           
 16559                           ;incstack = 0
 16560  016334  0E10               	movlw	16
 16561  016336  EC18  F0AC         	call	_LCD_initialize
 16562                           
 16563                           ;RemoteCan.c: 613: LCD_clear();
 16564  01633A  EC8E  F0B3         	call	_LCD_clear	;wreg free
 16565                           
 16566                           ;RemoteCan.c: 614: LCD_goto_line(1);
 16567  01633E  0E01               	movlw	1
 16568  016340  EC55  F0AD         	call	_LCD_goto_line
 16569                           
 16570                           ;RemoteCan.c: 615: LCD_write_message("= PARKING MESSAGES =");
 16571  016344  0E16               	movlw	low STR_21
 16572  016346  0100               	movlb	0	; () banked
 16573  016348  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 16574  01634A  0EFF               	movlw	high STR_21
 16575  01634C  0100               	movlb	0	; () banked
 16576  01634E  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 16577  016350  EC5B  F0B3         	call	_LCD_write_message	;wreg free
 16578                           
 16579                           ;RemoteCan.c: 616: LCD_goto_line(2);
 16580  016354  0E02               	movlw	2
 16581  016356  EC55  F0AD         	call	_LCD_goto_line
 16582                           
 16583                           ;RemoteCan.c: 617: LCD_write_message(" Parking procedures ");
 16584  01635A  0E98               	movlw	low STR_34
 16585  01635C  0100               	movlb	0	; () banked
 16586  01635E  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 16587  016360  0EFE               	movlw	high STR_34
 16588  016362  0100               	movlb	0	; () banked
 16589  016364  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 16590  016366  EC5B  F0B3         	call	_LCD_write_message	;wreg free
 16591                           
 16592                           ;RemoteCan.c: 618: LCD_goto_line(3);
 16593  01636A  0E03               	movlw	3
 16594  01636C  EC55  F0AD         	call	_LCD_goto_line
 16595                           
 16596                           ;RemoteCan.c: 619: LCD_write_message("    SUCCESSFULLY    ");
 16597  016370  0EC6               	movlw	low STR_35
 16598  016372  0100               	movlb	0	; () banked
 16599  016374  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 16600  016376  0EFD               	movlw	high STR_35
 16601  016378  0100               	movlb	0	; () banked
 16602  01637A  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 16603  01637C  EC5B  F0B3         	call	_LCD_write_message	;wreg free
 16604                           
 16605                           ;RemoteCan.c: 620: LCD_goto_line(4);
 16606  016380  0E04               	movlw	4
 16607  016382  EC55  F0AD         	call	_LCD_goto_line
 16608                           
 16609                           ;RemoteCan.c: 621: LCD_write_message("     COMPLETED!     ");
 16610  016386  0E9C               	movlw	low STR_36
 16611  016388  0100               	movlb	0	; () banked
 16612  01638A  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 16613  01638C  0EFD               	movlw	high STR_36
 16614  01638E  0100               	movlb	0	; () banked
 16615  016390  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 16616  016392  EC5B  F0B3         	call	_LCD_write_message	;wreg free
 16617  016396  0012               	return		;funcret
 16618  016398                     __end_of_LCD_End:
 16619                           	opt stack 0
 16620                           tblptru	equ	0xFF8
 16621                           tblptrh	equ	0xFF7
 16622                           tblptrl	equ	0xFF6
 16623                           tablat	equ	0xFF5
 16624                           prodh	equ	0xFF4
 16625                           prodl	equ	0xFF3
 16626                           intcon	equ	0xFF2
 16627                           postinc0	equ	0xFEE
 16628                           wreg	equ	0xFE8
 16629                           indf1	equ	0xFE7
 16630                           plusw1	equ	0xFE3
 16631                           fsr1h	equ	0xFE2
 16632                           fsr1l	equ	0xFE1
 16633                           indf2	equ	0xFDF
 16634                           postinc2	equ	0xFDE
 16635                           plusw2	equ	0xFDB
 16636                           fsr2h	equ	0xFDA
 16637                           fsr2l	equ	0xFD9
 16638                           status	equ	0xFD8
 16639                           
 16640 ;; *************** function _Joystick_Polling *****************
 16641 ;; Defined at:
 16642 ;;		line 687 in file "RemoteCan.c"
 16643 ;; Parameters:    Size  Location     Type
 16644 ;;		None
 16645 ;; Auto vars:     Size  Location     Type
 16646 ;;  i               1   18[BANK0 ] unsigned char 
 16647 ;; Return value:  Size  Location     Type
 16648 ;;                  1    wreg      void 
 16649 ;; Registers used:
 16650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16651 ;; Tracked objects:
 16652 ;;		On entry : 0/0
 16653 ;;		On exit  : 0/0
 16654 ;;		Unchanged: 0/0
 16655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16657 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16658 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16659 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16660 ;;Total ram usage:        2 bytes
 16661 ;; Hardware stack levels used:    1
 16662 ;; Hardware stack levels required when called:    3
 16663 ;; This function calls:
 16664 ;;		Nothing
 16665 ;; This function is called by:
 16666 ;;		_main
 16667 ;; This function uses a non-reentrant model
 16668 ;;
 16669                           
 16670                           	psect	text39
 16671  01645E                     __ptext39:
 16672                           	opt stack 0
 16673  01645E                     _Joystick_Polling:
 16674                           	opt stack 27
 16675                           
 16676                           ;RemoteCan.c: 688: for (unsigned char i = 0; i < 2; i++) {
 16677                           
 16678                           ;incstack = 0
 16679  01645E  0E00               	movlw	0
 16680  016460  0100               	movlb	0	; () banked
 16681  016462  6F72               	movwf	Joystick_Polling@i& (0+255),b
 16682  016464                     l7229:
 16683                           
 16684                           ; BSR set to: 0
 16685  016464  0E01               	movlw	1
 16686  016466  0100               	movlb	0	; () banked
 16687  016468  6572               	cpfsgt	Joystick_Polling@i& (0+255),b
 16688  01646A  D001               	goto	l969
 16689  01646C  0012               	return	
 16690  01646E                     l969:
 16691                           
 16692                           ; BSR set to: 0
 16693                           ;RemoteCan.c: 689: ADCON0bits.GO = 1;
 16694  01646E  82C2               	bsf	4034,1,c	;volatile
 16695  016470                     l971:
 16696  016470  B2C2               	btfsc	4034,1,c	;volatile
 16697  016472  D7FE               	goto	l971
 16698                           
 16699                           ;RemoteCan.c: 691: JoystickValues[i] = ADRESH;
 16700  016474  0100               	movlb	0	; () banked
 16701  016476  5172               	movf	Joystick_Polling@i& (0+255),w,b
 16702  016478  0D01               	mullw	1
 16703  01647A  0EDD               	movlw	low _JoystickValues
 16704  01647C  24F3               	addwf	prodl,w,c
 16705  01647E  6ED9               	movwf	fsr2l,c
 16706  016480  0E00               	movlw	high _JoystickValues
 16707  016482  20F4               	addwfc	prodh,w,c
 16708  016484  6EDA               	movwf	fsr2h,c
 16709  016486  CFC4 FFDF          	movff	4036,indf2	;volatile
 16710                           
 16711                           ; BSR set to: 0
 16712                           ;RemoteCan.c: 692: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 16713  01648A  A4C2               	btfss	4034,2,c	;volatile
 16714  01648C  D002               	goto	u9140
 16715  01648E  0E01               	movlw	1
 16716  016490  D001               	goto	u9146
 16717  016492                     u9140:
 16718  016492  0E00               	movlw	0
 16719  016494                     u9146:
 16720  016494  0AFF               	xorlw	255
 16721  016496  0100               	movlb	0	; () banked
 16722  016498  6F71               	movwf	??_Joystick_Polling& (0+255),b
 16723  01649A  0100               	movlb	0	; () banked
 16724  01649C  4771               	rlncf	??_Joystick_Polling& (0+255),f,b
 16725  01649E  4771               	rlncf	??_Joystick_Polling& (0+255),f,b
 16726  0164A0  50C2               	movf	4034,w,c	;volatile
 16727  0164A2  0100               	movlb	0	; () banked
 16728  0164A4  1971               	xorwf	??_Joystick_Polling& (0+255),w,b
 16729  0164A6  0BFB               	andlw	-5
 16730  0164A8  1971               	xorwf	??_Joystick_Polling& (0+255),w,b
 16731  0164AA  6EC2               	movwf	4034,c	;volatile
 16732                           
 16733                           ; BSR set to: 0
 16734  0164AC  0100               	movlb	0	; () banked
 16735  0164AE  2B72               	incf	Joystick_Polling@i& (0+255),f,b
 16736  0164B0  D7D9               	goto	l7229
 16737  0164B2                     __end_of_Joystick_Polling:
 16738                           	opt stack 0
 16739                           tblptru	equ	0xFF8
 16740                           tblptrh	equ	0xFF7
 16741                           tblptrl	equ	0xFF6
 16742                           tablat	equ	0xFF5
 16743                           prodh	equ	0xFF4
 16744                           prodl	equ	0xFF3
 16745                           intcon	equ	0xFF2
 16746                           postinc0	equ	0xFEE
 16747                           wreg	equ	0xFE8
 16748                           indf1	equ	0xFE7
 16749                           plusw1	equ	0xFE3
 16750                           fsr1h	equ	0xFE2
 16751                           fsr1l	equ	0xFE1
 16752                           indf2	equ	0xFDF
 16753                           postinc2	equ	0xFDE
 16754                           plusw2	equ	0xFDB
 16755                           fsr2h	equ	0xFDA
 16756                           fsr2l	equ	0xFD9
 16757                           status	equ	0xFD8
 16758                           
 16759 ;; *************** function _F2_Button_Polling *****************
 16760 ;; Defined at:
 16761 ;;		line 677 in file "RemoteCan.c"
 16762 ;; Parameters:    Size  Location     Type
 16763 ;;		None
 16764 ;; Auto vars:     Size  Location     Type
 16765 ;;		None
 16766 ;; Return value:  Size  Location     Type
 16767 ;;                  1    wreg      void 
 16768 ;; Registers used:
 16769 ;;		None
 16770 ;; Tracked objects:
 16771 ;;		On entry : 0/0
 16772 ;;		On exit  : 0/0
 16773 ;;		Unchanged: 0/0
 16774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16779 ;;Total ram usage:        0 bytes
 16780 ;; Hardware stack levels used:    1
 16781 ;; Hardware stack levels required when called:    3
 16782 ;; This function calls:
 16783 ;;		Nothing
 16784 ;; This function is called by:
 16785 ;;		_main
 16786 ;; This function uses a non-reentrant model
 16787 ;;
 16788                           
 16789                           	psect	text40
 16790  01683A                     __ptext40:
 16791                           	opt stack 0
 16792  01683A                     _F2_Button_Polling:
 16793                           	opt stack 27
 16794                           
 16795                           ;RemoteCan.c: 678: if ((PORTBbits.RB1 == 0) || (wait_low_3 == 0)) {
 16796                           
 16797                           ; BSR set to: 0
 16798                           ;incstack = 0
 16799  01683A  A281               	btfss	3969,1,c	;volatile
 16800  01683C  D002               	goto	l964
 16801  01683E  B84A               	btfsc	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 16802  016840  0012               	return	
 16803  016842                     l964:
 16804                           
 16805                           ;RemoteCan.c: 679: wait_low_3 = 0;
 16806  016842  984A               	bcf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 16807                           
 16808                           ;RemoteCan.c: 680: if (PORTBbits.RB1 == 1) {
 16809  016844  A281               	btfss	3969,1,c	;volatile
 16810  016846  0012               	return	
 16811                           
 16812                           ;RemoteCan.c: 681: F2_switch = ~F2_switch;
 16813  016848  B448               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 16814  01684A  D002               	goto	u9290
 16815  01684C  8448               	bsf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 16816  01684E  D001               	goto	u9305
 16817  016850                     u9290:
 16818  016850  9448               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 16819  016852                     u9305:
 16820                           
 16821                           ;RemoteCan.c: 682: wait_low_3 = 1;
 16822  016852  884A               	bsf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 16823  016854  0012               	return	
 16824  016856                     __end_of_F2_Button_Polling:
 16825                           	opt stack 0
 16826                           tblptru	equ	0xFF8
 16827                           tblptrh	equ	0xFF7
 16828                           tblptrl	equ	0xFF6
 16829                           tablat	equ	0xFF5
 16830                           prodh	equ	0xFF4
 16831                           prodl	equ	0xFF3
 16832                           intcon	equ	0xFF2
 16833                           postinc0	equ	0xFEE
 16834                           wreg	equ	0xFE8
 16835                           indf1	equ	0xFE7
 16836                           plusw1	equ	0xFE3
 16837                           fsr1h	equ	0xFE2
 16838                           fsr1l	equ	0xFE1
 16839                           indf2	equ	0xFDF
 16840                           postinc2	equ	0xFDE
 16841                           plusw2	equ	0xFDB
 16842                           fsr2h	equ	0xFDA
 16843                           fsr2l	equ	0xFD9
 16844                           status	equ	0xFD8
 16845                           
 16846 ;; *************** function _F1_Button_Polling *****************
 16847 ;; Defined at:
 16848 ;;		line 667 in file "RemoteCan.c"
 16849 ;; Parameters:    Size  Location     Type
 16850 ;;		None
 16851 ;; Auto vars:     Size  Location     Type
 16852 ;;		None
 16853 ;; Return value:  Size  Location     Type
 16854 ;;                  1    wreg      void 
 16855 ;; Registers used:
 16856 ;;		None
 16857 ;; Tracked objects:
 16858 ;;		On entry : 0/0
 16859 ;;		On exit  : 0/0
 16860 ;;		Unchanged: 0/0
 16861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16866 ;;Total ram usage:        0 bytes
 16867 ;; Hardware stack levels used:    1
 16868 ;; Hardware stack levels required when called:    3
 16869 ;; This function calls:
 16870 ;;		Nothing
 16871 ;; This function is called by:
 16872 ;;		_main
 16873 ;; This function uses a non-reentrant model
 16874 ;;
 16875                           
 16876                           	psect	text41
 16877  016856                     __ptext41:
 16878                           	opt stack 0
 16879  016856                     _F1_Button_Polling:
 16880                           	opt stack 27
 16881                           
 16882                           ;RemoteCan.c: 668: if ((PORTBbits.RB4 == 0) || (wait_low_2 == 0)) {
 16883                           
 16884                           ;incstack = 0
 16885  016856  A881               	btfss	3969,4,c	;volatile
 16886  016858  D002               	goto	l957
 16887  01685A  B64A               	btfsc	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 16888  01685C  0012               	return	
 16889  01685E                     l957:
 16890                           
 16891                           ;RemoteCan.c: 669: wait_low_2 = 0;
 16892  01685E  964A               	bcf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 16893                           
 16894                           ;RemoteCan.c: 670: if (PORTBbits.RB4 == 1) {
 16895  016860  A881               	btfss	3969,4,c	;volatile
 16896  016862  0012               	return	
 16897                           
 16898                           ;RemoteCan.c: 671: F1_switch = ~F1_switch;
 16899  016864  B248               	btfsc	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 16900  016866  D002               	goto	u9240
 16901  016868  8248               	bsf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 16902  01686A  D001               	goto	u9255
 16903  01686C                     u9240:
 16904  01686C  9248               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 16905  01686E                     u9255:
 16906                           
 16907                           ;RemoteCan.c: 672: wait_low_2 = 1;
 16908  01686E  864A               	bsf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 16909  016870  0012               	return	
 16910  016872                     __end_of_F1_Button_Polling:
 16911                           	opt stack 0
 16912                           tblptru	equ	0xFF8
 16913                           tblptrh	equ	0xFF7
 16914                           tblptrl	equ	0xFF6
 16915                           tablat	equ	0xFF5
 16916                           prodh	equ	0xFF4
 16917                           prodl	equ	0xFF3
 16918                           intcon	equ	0xFF2
 16919                           postinc0	equ	0xFEE
 16920                           wreg	equ	0xFE8
 16921                           indf1	equ	0xFE7
 16922                           plusw1	equ	0xFE3
 16923                           fsr1h	equ	0xFE2
 16924                           fsr1l	equ	0xFE1
 16925                           indf2	equ	0xFDF
 16926                           postinc2	equ	0xFDE
 16927                           plusw2	equ	0xFDB
 16928                           fsr2h	equ	0xFDA
 16929                           fsr2l	equ	0xFD9
 16930                           status	equ	0xFD8
 16931                           
 16932 ;; *************** function _Credits *****************
 16933 ;; Defined at:
 16934 ;;		line 644 in file "RemoteCan.c"
 16935 ;; Parameters:    Size  Location     Type
 16936 ;;		None
 16937 ;; Auto vars:     Size  Location     Type
 16938 ;;		None
 16939 ;; Return value:  Size  Location     Type
 16940 ;;                  1    wreg      void 
 16941 ;; Registers used:
 16942 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16943 ;; Tracked objects:
 16944 ;;		On entry : 0/0
 16945 ;;		On exit  : 0/0
 16946 ;;		Unchanged: 0/0
 16947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16952 ;;Total ram usage:        0 bytes
 16953 ;; Hardware stack levels used:    1
 16954 ;; Hardware stack levels required when called:    9
 16955 ;; This function calls:
 16956 ;;		_LCD_clear
 16957 ;;		_LCD_goto_line
 16958 ;;		_LCD_initialize
 16959 ;;		_LCD_write_message
 16960 ;; This function is called by:
 16961 ;;		_main
 16962 ;; This function uses a non-reentrant model
 16963 ;;
 16964                           
 16965                           	psect	text42
 16966  016398                     __ptext42:
 16967                           	opt stack 0
 16968  016398                     _Credits:
 16969                           	opt stack 21
 16970                           
 16971                           ;RemoteCan.c: 645: LCD_initialize(16);
 16972                           
 16973                           ;incstack = 0
 16974  016398  0E10               	movlw	16
 16975  01639A  EC18  F0AC         	call	_LCD_initialize
 16976                           
 16977                           ;RemoteCan.c: 646: LCD_clear();
 16978  01639E  EC8E  F0B3         	call	_LCD_clear	;wreg free
 16979                           
 16980                           ;RemoteCan.c: 647: LCD_goto_line(1);
 16981  0163A2  0E01               	movlw	1
 16982  0163A4  EC55  F0AD         	call	_LCD_goto_line
 16983                           
 16984                           ;RemoteCan.c: 648: LCD_write_message("=>    CREDITS!    <=");
 16985  0163A8  0E2B               	movlw	low STR_43
 16986  0163AA  0100               	movlb	0	; () banked
 16987  0163AC  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 16988  0163AE  0EFF               	movlw	high STR_43
 16989  0163B0  0100               	movlb	0	; () banked
 16990  0163B2  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 16991  0163B4  EC5B  F0B3         	call	_LCD_write_message	;wreg free
 16992                           
 16993                           ;RemoteCan.c: 649: LCD_goto_line(2);
 16994  0163B8  0E02               	movlw	2
 16995  0163BA  EC55  F0AD         	call	_LCD_goto_line
 16996                           
 16997                           ;RemoteCan.c: 650: LCD_write_message("  Massimo Clementi  ");
 16998  0163BE  0E05               	movlw	low STR_44
 16999  0163C0  0100               	movlb	0	; () banked
 17000  0163C2  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 17001  0163C4  0EFE               	movlw	high STR_44
 17002  0163C6  0100               	movlb	0	; () banked
 17003  0163C8  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 17004  0163CA  EC5B  F0B3         	call	_LCD_write_message	;wreg free
 17005                           
 17006                           ;RemoteCan.c: 651: LCD_goto_line(3);
 17007  0163CE  0E03               	movlw	3
 17008  0163D0  EC55  F0AD         	call	_LCD_goto_line
 17009                           
 17010                           ;RemoteCan.c: 652: LCD_write_message("  Gianlorenzo Moser ");
 17011  0163D4  0E83               	movlw	low STR_45
 17012  0163D6  0100               	movlb	0	; () banked
 17013  0163D8  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 17014  0163DA  0EFE               	movlw	high STR_45
 17015  0163DC  0100               	movlb	0	; () banked
 17016  0163DE  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 17017  0163E0  EC5B  F0B3         	call	_LCD_write_message	;wreg free
 17018                           
 17019                           ;RemoteCan.c: 653: LCD_goto_line(4);
 17020  0163E4  0E04               	movlw	4
 17021  0163E6  EC55  F0AD         	call	_LCD_goto_line
 17022                           
 17023                           ;RemoteCan.c: 654: LCD_write_message("  Simone Righetti   ");
 17024  0163EA  0EF0               	movlw	low STR_46
 17025  0163EC  0100               	movlb	0	; () banked
 17026  0163EE  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 17027  0163F0  0EFD               	movlw	high STR_46
 17028  0163F2  0100               	movlb	0	; () banked
 17029  0163F4  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 17030  0163F6  EC5B  F0B3         	call	_LCD_write_message	;wreg free
 17031  0163FA  0012               	return		;funcret
 17032  0163FC                     __end_of_Credits:
 17033                           	opt stack 0
 17034                           tblptru	equ	0xFF8
 17035                           tblptrh	equ	0xFF7
 17036                           tblptrl	equ	0xFF6
 17037                           tablat	equ	0xFF5
 17038                           prodh	equ	0xFF4
 17039                           prodl	equ	0xFF3
 17040                           intcon	equ	0xFF2
 17041                           postinc0	equ	0xFEE
 17042                           wreg	equ	0xFE8
 17043                           indf1	equ	0xFE7
 17044                           plusw1	equ	0xFE3
 17045                           fsr1h	equ	0xFE2
 17046                           fsr1l	equ	0xFE1
 17047                           indf2	equ	0xFDF
 17048                           postinc2	equ	0xFDE
 17049                           plusw2	equ	0xFDB
 17050                           fsr2h	equ	0xFDA
 17051                           fsr2l	equ	0xFD9
 17052                           status	equ	0xFD8
 17053                           
 17054 ;; *************** function _LCD_write_message *****************
 17055 ;; Defined at:
 17056 ;;		line 178 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 17057 ;; Parameters:    Size  Location     Type
 17058 ;;  buffer          2   34[BANK0 ] PTR const unsigned char 
 17059 ;;		 -> STR_46(21), STR_45(21), STR_44(21), STR_43(21), 
 17060 ;;		 -> STR_42(21), STR_41(21), STR_40(21), STR_39(21), 
 17061 ;;		 -> STR_38(21), STR_37(21), STR_36(21), STR_35(21), 
 17062 ;;		 -> STR_34(21), STR_33(21), STR_32(21), STR_31(21), 
 17063 ;;		 -> STR_30(21), STR_29(21), STR_28(21), STR_27(21), 
 17064 ;;		 -> STR_26(21), STR_25(21), STR_24(21), STR_23(21), 
 17065 ;;		 -> STR_22(21), STR_21(21), STR_20(21), STR_19(21), 
 17066 ;;		 -> STR_18(8), STR_17(8), STR_16(14), STR_15(21), 
 17067 ;;		 -> STR_14(5), STR_13(5), STR_12(5), STR_11(21), 
 17068 ;;		 -> STR_10(7), STR_9(14), STR_8(17), STR_7(12), 
 17069 ;;		 -> STR_6(21), STR_4(21), STR_3(21), STR_2(21), 
 17070 ;;		 -> STR_1(21), 
 17071 ;; Auto vars:     Size  Location     Type
 17072 ;;		None
 17073 ;; Return value:  Size  Location     Type
 17074 ;;                  1    wreg      void 
 17075 ;; Registers used:
 17076 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17077 ;; Tracked objects:
 17078 ;;		On entry : 0/0
 17079 ;;		On exit  : 0/0
 17080 ;;		Unchanged: 0/0
 17081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17082 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17085 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17086 ;;Total ram usage:        2 bytes
 17087 ;; Hardware stack levels used:    1
 17088 ;; Hardware stack levels required when called:    8
 17089 ;; This function calls:
 17090 ;;		_LCD_write_char
 17091 ;; This function is called by:
 17092 ;;		_main
 17093 ;;		_LCD_Handler
 17094 ;;		_LCD_Gap
 17095 ;;		_LCD_Park
 17096 ;;		_LCD_Parking
 17097 ;;		_LCD_End
 17098 ;;		_LCD_Error
 17099 ;;		_Credits
 17100 ;; This function uses a non-reentrant model
 17101 ;;
 17102                           
 17103                           	psect	text43
 17104  0166B6                     __ptext43:
 17105                           	opt stack 0
 17106  0166B6                     _LCD_write_message:
 17107                           	opt stack 22
 17108                           
 17109                           ;src\LCD_44780.c: 181: while(*buffer) {
 17110                           
 17111                           ;incstack = 0
 17112  0166B6  D00D               	goto	l8961
 17113  0166B8                     l8957:
 17114                           
 17115                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
 17116  0166B8  C082  FFF6         	movff	LCD_write_message@buffer,tblptrl
 17117  0166BC  C083  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 17118  0166C0                     	if	0	;tblptru may be non-zero
 17119  0166C0                     	endif
 17120  0166C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17121  0166C0  0E00               	movlw	low (__mediumconst shr (0+16))
 17122  0166C2  6EF8               	movwf	tblptru,c
 17123  0166C4                     	endif
 17124  0166C4  0008               	tblrd		*
 17125  0166C6  50F5               	movf	tablat,w,c
 17126  0166C8  EC34  F0B0         	call	_LCD_write_char
 17127                           
 17128                           ;src\LCD_44780.c: 186: buffer++;
 17129  0166CC  0100               	movlb	0	; () banked
 17130  0166CE  4B82               	infsnz	LCD_write_message@buffer& (0+255),f,b
 17131  0166D0  2B83               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
 17132  0166D2                     l8961:
 17133  0166D2  C082  FFF6         	movff	LCD_write_message@buffer,tblptrl
 17134  0166D6  C083  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 17135  0166DA                     	if	0	;tblptru may be non-zero
 17136  0166DA                     	endif
 17137  0166DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17138  0166DA  0E00               	movlw	low (__mediumconst shr (0+16))
 17139  0166DC  6EF8               	movwf	tblptru,c
 17140  0166DE                     	endif
 17141  0166DE  0008               	tblrd		*
 17142  0166E0  50F5               	movf	tablat,w,c
 17143  0166E2  0900               	iorlw	0
 17144  0166E4  B4D8               	btfsc	status,2,c
 17145  0166E6  0012               	return	
 17146  0166E8  D7E7               	goto	l8957
 17147  0166EA                     __end_of_LCD_write_message:
 17148                           	opt stack 0
 17149                           tblptru	equ	0xFF8
 17150                           tblptrh	equ	0xFF7
 17151                           tblptrl	equ	0xFF6
 17152                           tablat	equ	0xFF5
 17153                           prodh	equ	0xFF4
 17154                           prodl	equ	0xFF3
 17155                           intcon	equ	0xFF2
 17156                           postinc0	equ	0xFEE
 17157                           wreg	equ	0xFE8
 17158                           indf1	equ	0xFE7
 17159                           plusw1	equ	0xFE3
 17160                           fsr1h	equ	0xFE2
 17161                           fsr1l	equ	0xFE1
 17162                           indf2	equ	0xFDF
 17163                           postinc2	equ	0xFDE
 17164                           plusw2	equ	0xFDB
 17165                           fsr2h	equ	0xFDA
 17166                           fsr2l	equ	0xFD9
 17167                           status	equ	0xFD8
 17168                           
 17169 ;; *************** function _LCD_write_char *****************
 17170 ;; Defined at:
 17171 ;;		line 145 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 17172 ;; Parameters:    Size  Location     Type
 17173 ;;  value           1    wreg     unsigned char 
 17174 ;; Auto vars:     Size  Location     Type
 17175 ;;  value           1   33[BANK0 ] unsigned char 
 17176 ;;  D0              1   32[BANK0 ] unsigned char 
 17177 ;;  D1              1   31[BANK0 ] unsigned char 
 17178 ;;  D2              1   30[BANK0 ] unsigned char 
 17179 ;;  D3              1   29[BANK0 ] unsigned char 
 17180 ;; Return value:  Size  Location     Type
 17181 ;;                  1    wreg      void 
 17182 ;; Registers used:
 17183 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17184 ;; Tracked objects:
 17185 ;;		On entry : 0/0
 17186 ;;		On exit  : 0/0
 17187 ;;		Unchanged: 0/0
 17188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17190 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17192 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17193 ;;Total ram usage:        5 bytes
 17194 ;; Hardware stack levels used:    1
 17195 ;; Hardware stack levels required when called:    7
 17196 ;; This function calls:
 17197 ;;		_LCD_send_command
 17198 ;; This function is called by:
 17199 ;;		_LCD_write_message
 17200 ;;		_LCD_write_string
 17201 ;; This function uses a non-reentrant model
 17202 ;;
 17203                           
 17204                           	psect	text44
 17205  016068                     __ptext44:
 17206                           	opt stack 0
 17207  016068                     _LCD_write_char:
 17208                           	opt stack 22
 17209                           
 17210                           ;incstack = 0
 17211                           ;LCD_write_char@value stored from wreg
 17212  016068  0100               	movlb	0	; () banked
 17213  01606A  6F81               	movwf	LCD_write_char@value& (0+255),b
 17214                           
 17215                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 17216                           ;src\LCD_44780.c: 149: LATEbits.LATE2 = 1;
 17217  01606C  848D               	bsf	3981,2,c	;volatile
 17218                           
 17219                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 17220  01606E  0100               	movlb	0	; () banked
 17221  016070  4581               	rlncf	LCD_write_char@value& (0+255),w,b
 17222  016072  0B01               	andlw	1
 17223  016074  0100               	movlb	0	; () banked
 17224  016076  6F7D               	movwf	LCD_write_char@D3& (0+255),b
 17225                           
 17226                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 17227  016078  0100               	movlb	0	; () banked
 17228  01607A  4581               	rlncf	LCD_write_char@value& (0+255),w,b
 17229  01607C  46E8               	rlncf	wreg,f,c
 17230  01607E  0B03               	andlw	3
 17231  016080  0B01               	andlw	1
 17232  016082  0100               	movlb	0	; () banked
 17233  016084  6F7E               	movwf	LCD_write_char@D2& (0+255),b
 17234                           
 17235                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 17236  016086  0100               	movlb	0	; () banked
 17237  016088  3981               	swapf	LCD_write_char@value& (0+255),w,b
 17238  01608A  42E8               	rrncf	wreg,f,c
 17239  01608C  0B07               	andlw	7
 17240  01608E  0B01               	andlw	1
 17241  016090  0100               	movlb	0	; () banked
 17242  016092  6F7F               	movwf	LCD_write_char@D1& (0+255),b
 17243                           
 17244                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 17245  016094  0100               	movlb	0	; () banked
 17246  016096  3981               	swapf	LCD_write_char@value& (0+255),w,b
 17247  016098  0B0F               	andlw	15
 17248  01609A  0B01               	andlw	1
 17249  01609C  0100               	movlb	0	; () banked
 17250  01609E  6F80               	movwf	LCD_write_char@D0& (0+255),b
 17251                           
 17252                           ; BSR set to: 0
 17253                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 17254  0160A0  C07E  F079         	movff	LCD_write_char@D2,LCD_send_command@D2
 17255  0160A4  C07F  F07A         	movff	LCD_write_char@D1,LCD_send_command@D1
 17256  0160A8  C080  F07B         	movff	LCD_write_char@D0,LCD_send_command@D0
 17257  0160AC  0100               	movlb	0	; () banked
 17258  0160AE  517D               	movf	LCD_write_char@D3& (0+255),w,b
 17259  0160B0  ECEA  F0B2         	call	_LCD_send_command
 17260                           
 17261                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 17262  0160B4  0100               	movlb	0	; () banked
 17263  0160B6  3981               	swapf	LCD_write_char@value& (0+255),w,b
 17264  0160B8  46E8               	rlncf	wreg,f,c
 17265  0160BA  0B1F               	andlw	31
 17266  0160BC  0B01               	andlw	1
 17267  0160BE  0100               	movlb	0	; () banked
 17268  0160C0  6F7D               	movwf	LCD_write_char@D3& (0+255),b
 17269                           
 17270                           ; BSR set to: 0
 17271                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 17272  0160C2  0100               	movlb	0	; () banked
 17273  0160C4  4181               	rrncf	LCD_write_char@value& (0+255),w,b
 17274  0160C6  42E8               	rrncf	wreg,f,c
 17275  0160C8  0B3F               	andlw	63
 17276  0160CA  0B01               	andlw	1
 17277  0160CC  0100               	movlb	0	; () banked
 17278  0160CE  6F7E               	movwf	LCD_write_char@D2& (0+255),b
 17279                           
 17280                           ; BSR set to: 0
 17281                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 17282  0160D0  0100               	movlb	0	; () banked
 17283  0160D2  90D8               	bcf	status,0,c
 17284  0160D4  3181               	rrcf	LCD_write_char@value& (0+255),w,b
 17285  0160D6  0B01               	andlw	1
 17286  0160D8  0100               	movlb	0	; () banked
 17287  0160DA  6F7F               	movwf	LCD_write_char@D1& (0+255),b
 17288                           
 17289                           ; BSR set to: 0
 17290                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 17291  0160DC  0100               	movlb	0	; () banked
 17292  0160DE  5181               	movf	LCD_write_char@value& (0+255),w,b
 17293  0160E0  0B01               	andlw	1
 17294  0160E2  0100               	movlb	0	; () banked
 17295  0160E4  6F80               	movwf	LCD_write_char@D0& (0+255),b
 17296                           
 17297                           ; BSR set to: 0
 17298                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 17299  0160E6  C07E  F079         	movff	LCD_write_char@D2,LCD_send_command@D2
 17300  0160EA  C07F  F07A         	movff	LCD_write_char@D1,LCD_send_command@D1
 17301  0160EE  C080  F07B         	movff	LCD_write_char@D0,LCD_send_command@D0
 17302  0160F2  0100               	movlb	0	; () banked
 17303  0160F4  517D               	movf	LCD_write_char@D3& (0+255),w,b
 17304  0160F6  ECEA  F0B2         	call	_LCD_send_command
 17305                           
 17306                           ;src\LCD_44780.c: 167: LATEbits.LATE2 = 0;
 17307  0160FA  948D               	bcf	3981,2,c	;volatile
 17308  0160FC  0012               	return		;funcret
 17309  0160FE                     __end_of_LCD_write_char:
 17310                           	opt stack 0
 17311                           tblptru	equ	0xFF8
 17312                           tblptrh	equ	0xFF7
 17313                           tblptrl	equ	0xFF6
 17314                           tablat	equ	0xFF5
 17315                           prodh	equ	0xFF4
 17316                           prodl	equ	0xFF3
 17317                           intcon	equ	0xFF2
 17318                           postinc0	equ	0xFEE
 17319                           wreg	equ	0xFE8
 17320                           indf1	equ	0xFE7
 17321                           plusw1	equ	0xFE3
 17322                           fsr1h	equ	0xFE2
 17323                           fsr1l	equ	0xFE1
 17324                           indf2	equ	0xFDF
 17325                           postinc2	equ	0xFDE
 17326                           plusw2	equ	0xFDB
 17327                           fsr2h	equ	0xFDA
 17328                           fsr2l	equ	0xFD9
 17329                           status	equ	0xFD8
 17330                           
 17331 ;; *************** function _LCD_initialize *****************
 17332 ;; Defined at:
 17333 ;;		line 283 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 17334 ;; Parameters:    Size  Location     Type
 17335 ;;  quartz_frequ    1    wreg     unsigned char 
 17336 ;; Auto vars:     Size  Location     Type
 17337 ;;  quartz_frequ    1   31[BANK0 ] unsigned char 
 17338 ;; Return value:  Size  Location     Type
 17339 ;;                  1    wreg      void 
 17340 ;; Registers used:
 17341 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17342 ;; Tracked objects:
 17343 ;;		On entry : 0/0
 17344 ;;		On exit  : 0/0
 17345 ;;		Unchanged: 0/0
 17346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17348 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17350 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17351 ;;Total ram usage:        1 bytes
 17352 ;; Hardware stack levels used:    1
 17353 ;; Hardware stack levels required when called:    8
 17354 ;; This function calls:
 17355 ;;		_LCD_clear
 17356 ;;		_LCD_cursor
 17357 ;;		_LCD_send_command
 17358 ;;		_delay_ms
 17359 ;;		_delay_set_quartz
 17360 ;; This function is called by:
 17361 ;;		_main
 17362 ;;		_LCD_Handler
 17363 ;;		_LCD_Gap
 17364 ;;		_LCD_Park
 17365 ;;		_LCD_Parking
 17366 ;;		_LCD_End
 17367 ;;		_LCD_Error
 17368 ;;		_Credits
 17369 ;;		_board_initialization
 17370 ;; This function uses a non-reentrant model
 17371 ;;
 17372                           
 17373                           	psect	text45
 17374  015830                     __ptext45:
 17375                           	opt stack 0
 17376  015830                     _LCD_initialize:
 17377                           	opt stack 21
 17378                           
 17379                           ;incstack = 0
 17380                           ;LCD_initialize@quartz_frequency stored from wreg
 17381  015830  0100               	movlb	0	; () banked
 17382  015832  6F7F               	movwf	LCD_initialize@quartz_frequency& (0+255),b
 17383                           
 17384                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
 17385  015834  0100               	movlb	0	; () banked
 17386  015836  517F               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
 17387  015838  EC4F  F0B4         	call	_delay_set_quartz
 17388                           
 17389                           ;src\LCD_44780.c: 287: LATEbits.LATE2 = 0x00;
 17390  01583C  948D               	bcf	3981,2,c	;volatile
 17391                           
 17392                           ;src\LCD_44780.c: 288: LATCbits.LATC1 = 0x00;
 17393  01583E  928B               	bcf	3979,1,c	;volatile
 17394                           
 17395                           ;src\LCD_44780.c: 289: LATCbits.LATC0 = 0x00;
 17396  015840  908B               	bcf	3979,0,c	;volatile
 17397                           
 17398                           ;src\LCD_44780.c: 291: delay_ms (100);
 17399  015842  0E00               	movlw	0
 17400  015844  0100               	movlb	0	; () banked
 17401  015846  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
 17402  015848  0E64               	movlw	100
 17403  01584A  6F77               	movwf	delay_ms@value_ms& (0+255),b
 17404  01584C  EC07  F0B3         	call	_delay_ms	;wreg free
 17405                           
 17406                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
 17407  015850  0E00               	movlw	0
 17408  015852  0100               	movlb	0	; () banked
 17409  015854  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17410  015856  0E01               	movlw	1
 17411  015858  0100               	movlb	0	; () banked
 17412  01585A  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17413  01585C  0E01               	movlw	1
 17414  01585E  0100               	movlb	0	; () banked
 17415  015860  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17416  015862  0E00               	movlw	0
 17417  015864  ECEA  F0B2         	call	_LCD_send_command
 17418                           
 17419                           ;src\LCD_44780.c: 293: delay_ms (100);
 17420  015868  0E00               	movlw	0
 17421  01586A  0100               	movlb	0	; () banked
 17422  01586C  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
 17423  01586E  0E64               	movlw	100
 17424  015870  6F77               	movwf	delay_ms@value_ms& (0+255),b
 17425  015872  EC07  F0B3         	call	_delay_ms	;wreg free
 17426                           
 17427                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
 17428  015876  0E00               	movlw	0
 17429  015878  0100               	movlb	0	; () banked
 17430  01587A  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17431  01587C  0E01               	movlw	1
 17432  01587E  0100               	movlb	0	; () banked
 17433  015880  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17434  015882  0E01               	movlw	1
 17435  015884  0100               	movlb	0	; () banked
 17436  015886  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17437  015888  0E00               	movlw	0
 17438  01588A  ECEA  F0B2         	call	_LCD_send_command
 17439                           
 17440                           ;src\LCD_44780.c: 295: delay_ms (10);
 17441  01588E  0E00               	movlw	0
 17442  015890  0100               	movlb	0	; () banked
 17443  015892  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
 17444  015894  0E0A               	movlw	10
 17445  015896  6F77               	movwf	delay_ms@value_ms& (0+255),b
 17446  015898  EC07  F0B3         	call	_delay_ms	;wreg free
 17447                           
 17448                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
 17449  01589C  0E00               	movlw	0
 17450  01589E  0100               	movlb	0	; () banked
 17451  0158A0  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17452  0158A2  0E01               	movlw	1
 17453  0158A4  0100               	movlb	0	; () banked
 17454  0158A6  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17455  0158A8  0E01               	movlw	1
 17456  0158AA  0100               	movlb	0	; () banked
 17457  0158AC  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17458  0158AE  0E00               	movlw	0
 17459  0158B0  ECEA  F0B2         	call	_LCD_send_command
 17460                           
 17461                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
 17462  0158B4  0E00               	movlw	0
 17463  0158B6  0100               	movlb	0	; () banked
 17464  0158B8  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17465  0158BA  0E01               	movlw	1
 17466  0158BC  0100               	movlb	0	; () banked
 17467  0158BE  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17468  0158C0  0E00               	movlw	0
 17469  0158C2  0100               	movlb	0	; () banked
 17470  0158C4  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17471  0158C6  0E00               	movlw	0
 17472  0158C8  ECEA  F0B2         	call	_LCD_send_command
 17473                           
 17474                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
 17475  0158CC  0E00               	movlw	0
 17476  0158CE  0100               	movlb	0	; () banked
 17477  0158D0  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17478  0158D2  0E01               	movlw	1
 17479  0158D4  0100               	movlb	0	; () banked
 17480  0158D6  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17481  0158D8  0E00               	movlw	0
 17482  0158DA  0100               	movlb	0	; () banked
 17483  0158DC  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17484  0158DE  0E00               	movlw	0
 17485  0158E0  ECEA  F0B2         	call	_LCD_send_command
 17486                           
 17487                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
 17488  0158E4  0E00               	movlw	0
 17489  0158E6  0100               	movlb	0	; () banked
 17490  0158E8  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17491  0158EA  0E00               	movlw	0
 17492  0158EC  0100               	movlb	0	; () banked
 17493  0158EE  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17494  0158F0  0E00               	movlw	0
 17495  0158F2  0100               	movlb	0	; () banked
 17496  0158F4  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17497  0158F6  0E01               	movlw	1
 17498  0158F8  ECEA  F0B2         	call	_LCD_send_command
 17499                           
 17500                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
 17501  0158FC  0E00               	movlw	0
 17502  0158FE  0100               	movlb	0	; () banked
 17503  015900  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17504  015902  0E00               	movlw	0
 17505  015904  0100               	movlb	0	; () banked
 17506  015906  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17507  015908  0E00               	movlw	0
 17508  01590A  0100               	movlb	0	; () banked
 17509  01590C  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17510  01590E  0E00               	movlw	0
 17511  015910  ECEA  F0B2         	call	_LCD_send_command
 17512                           
 17513                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
 17514  015914  0E00               	movlw	0
 17515  015916  0100               	movlb	0	; () banked
 17516  015918  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17517  01591A  0E00               	movlw	0
 17518  01591C  0100               	movlb	0	; () banked
 17519  01591E  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17520  015920  0E00               	movlw	0
 17521  015922  0100               	movlb	0	; () banked
 17522  015924  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17523  015926  0E01               	movlw	1
 17524  015928  ECEA  F0B2         	call	_LCD_send_command
 17525                           
 17526                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
 17527  01592C  0E00               	movlw	0
 17528  01592E  0100               	movlb	0	; () banked
 17529  015930  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17530  015932  0E00               	movlw	0
 17531  015934  0100               	movlb	0	; () banked
 17532  015936  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17533  015938  0E00               	movlw	0
 17534  01593A  0100               	movlb	0	; () banked
 17535  01593C  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17536  01593E  0E00               	movlw	0
 17537  015940  ECEA  F0B2         	call	_LCD_send_command
 17538                           
 17539                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
 17540  015944  0E00               	movlw	0
 17541  015946  0100               	movlb	0	; () banked
 17542  015948  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17543  01594A  0E00               	movlw	0
 17544  01594C  0100               	movlb	0	; () banked
 17545  01594E  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17546  015950  0E01               	movlw	1
 17547  015952  0100               	movlb	0	; () banked
 17548  015954  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17549  015956  0E00               	movlw	0
 17550  015958  ECEA  F0B2         	call	_LCD_send_command
 17551                           
 17552                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
 17553  01595C  0E00               	movlw	0
 17554  01595E  0100               	movlb	0	; () banked
 17555  015960  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17556  015962  0E00               	movlw	0
 17557  015964  0100               	movlb	0	; () banked
 17558  015966  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17559  015968  0E00               	movlw	0
 17560  01596A  0100               	movlb	0	; () banked
 17561  01596C  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17562  01596E  0E00               	movlw	0
 17563  015970  ECEA  F0B2         	call	_LCD_send_command
 17564                           
 17565                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
 17566  015974  0E01               	movlw	1
 17567  015976  0100               	movlb	0	; () banked
 17568  015978  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17569  01597A  0E01               	movlw	1
 17570  01597C  0100               	movlb	0	; () banked
 17571  01597E  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17572  015980  0E00               	movlw	0
 17573  015982  0100               	movlb	0	; () banked
 17574  015984  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17575  015986  0E00               	movlw	0
 17576  015988  ECEA  F0B2         	call	_LCD_send_command
 17577                           
 17578                           ;src\LCD_44780.c: 312: LCD_clear ();
 17579  01598C  EC8E  F0B3         	call	_LCD_clear	;wreg free
 17580                           
 17581                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
 17582  015990  0E00               	movlw	0
 17583  015992  0100               	movlb	0	; () banked
 17584  015994  6F7D               	movwf	LCD_cursor@blinking& (0+255),b
 17585  015996  0E00               	movlw	0
 17586  015998  EC75  F0B3         	call	_LCD_cursor
 17587  01599C  0012               	return		;funcret
 17588  01599E                     __end_of_LCD_initialize:
 17589                           	opt stack 0
 17590                           tblptru	equ	0xFF8
 17591                           tblptrh	equ	0xFF7
 17592                           tblptrl	equ	0xFF6
 17593                           tablat	equ	0xFF5
 17594                           prodh	equ	0xFF4
 17595                           prodl	equ	0xFF3
 17596                           intcon	equ	0xFF2
 17597                           postinc0	equ	0xFEE
 17598                           wreg	equ	0xFE8
 17599                           indf1	equ	0xFE7
 17600                           plusw1	equ	0xFE3
 17601                           fsr1h	equ	0xFE2
 17602                           fsr1l	equ	0xFE1
 17603                           indf2	equ	0xFDF
 17604                           postinc2	equ	0xFDE
 17605                           plusw2	equ	0xFDB
 17606                           fsr2h	equ	0xFDA
 17607                           fsr2l	equ	0xFD9
 17608                           status	equ	0xFD8
 17609                           
 17610 ;; *************** function _delay_set_quartz *****************
 17611 ;; Defined at:
 17612 ;;		line 115 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 17613 ;; Parameters:    Size  Location     Type
 17614 ;;  frequency       1    wreg     unsigned char 
 17615 ;; Auto vars:     Size  Location     Type
 17616 ;;  frequency       1   17[BANK0 ] unsigned char 
 17617 ;; Return value:  Size  Location     Type
 17618 ;;                  1    wreg      void 
 17619 ;; Registers used:
 17620 ;;		wreg
 17621 ;; Tracked objects:
 17622 ;;		On entry : 0/0
 17623 ;;		On exit  : 0/0
 17624 ;;		Unchanged: 0/0
 17625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17627 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17629 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17630 ;;Total ram usage:        1 bytes
 17631 ;; Hardware stack levels used:    1
 17632 ;; Hardware stack levels required when called:    3
 17633 ;; This function calls:
 17634 ;;		Nothing
 17635 ;; This function is called by:
 17636 ;;		_LCD_initialize
 17637 ;; This function uses a non-reentrant model
 17638 ;;
 17639                           
 17640                           	psect	text46
 17641  01689E                     __ptext46:
 17642                           	opt stack 0
 17643  01689E                     _delay_set_quartz:
 17644                           	opt stack 25
 17645                           
 17646                           ;incstack = 0
 17647                           ;delay_set_quartz@frequency stored from wreg
 17648  01689E  0100               	movlb	0	; () banked
 17649  0168A0  6F71               	movwf	delay_set_quartz@frequency& (0+255),b
 17650                           
 17651                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
 17652  0168A2  C071  F0EC         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
 17653  0168A6  0012               	return		;funcret
 17654  0168A8                     __end_of_delay_set_quartz:
 17655                           	opt stack 0
 17656                           tblptru	equ	0xFF8
 17657                           tblptrh	equ	0xFF7
 17658                           tblptrl	equ	0xFF6
 17659                           tablat	equ	0xFF5
 17660                           prodh	equ	0xFF4
 17661                           prodl	equ	0xFF3
 17662                           intcon	equ	0xFF2
 17663                           postinc0	equ	0xFEE
 17664                           wreg	equ	0xFE8
 17665                           indf1	equ	0xFE7
 17666                           plusw1	equ	0xFE3
 17667                           fsr1h	equ	0xFE2
 17668                           fsr1l	equ	0xFE1
 17669                           indf2	equ	0xFDF
 17670                           postinc2	equ	0xFDE
 17671                           plusw2	equ	0xFDB
 17672                           fsr2h	equ	0xFDA
 17673                           fsr2l	equ	0xFD9
 17674                           status	equ	0xFD8
 17675                           
 17676 ;; *************** function _LCD_cursor *****************
 17677 ;; Defined at:
 17678 ;;		line 266 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 17679 ;; Parameters:    Size  Location     Type
 17680 ;;  active          1    wreg     unsigned char 
 17681 ;;  blinking        1   29[BANK0 ] unsigned char 
 17682 ;; Auto vars:     Size  Location     Type
 17683 ;;  active          1   30[BANK0 ] unsigned char 
 17684 ;; Return value:  Size  Location     Type
 17685 ;;                  1    wreg      void 
 17686 ;; Registers used:
 17687 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17688 ;; Tracked objects:
 17689 ;;		On entry : 0/0
 17690 ;;		On exit  : 0/0
 17691 ;;		Unchanged: 0/0
 17692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17693 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17694 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17696 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17697 ;;Total ram usage:        2 bytes
 17698 ;; Hardware stack levels used:    1
 17699 ;; Hardware stack levels required when called:    7
 17700 ;; This function calls:
 17701 ;;		_LCD_send_command
 17702 ;; This function is called by:
 17703 ;;		_LCD_initialize
 17704 ;; This function uses a non-reentrant model
 17705 ;;
 17706                           
 17707                           	psect	text47
 17708  0166EA                     __ptext47:
 17709                           	opt stack 0
 17710  0166EA                     _LCD_cursor:
 17711                           	opt stack 21
 17712                           
 17713                           ;incstack = 0
 17714                           ;LCD_cursor@active stored from wreg
 17715  0166EA  0100               	movlb	0	; () banked
 17716  0166EC  6F7E               	movwf	LCD_cursor@active& (0+255),b
 17717                           
 17718                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
 17719  0166EE  0E00               	movlw	0
 17720  0166F0  0100               	movlb	0	; () banked
 17721  0166F2  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17722  0166F4  0E00               	movlw	0
 17723  0166F6  0100               	movlb	0	; () banked
 17724  0166F8  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17725  0166FA  0E00               	movlw	0
 17726  0166FC  0100               	movlb	0	; () banked
 17727  0166FE  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17728  016700  0E00               	movlw	0
 17729  016702  ECEA  F0B2         	call	_LCD_send_command
 17730                           
 17731                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
 17732  016706  0E01               	movlw	1
 17733  016708  0100               	movlb	0	; () banked
 17734  01670A  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17735  01670C  C07E  F07A         	movff	LCD_cursor@active,LCD_send_command@D1
 17736  016710  C07D  F07B         	movff	LCD_cursor@blinking,LCD_send_command@D0
 17737  016714  0E01               	movlw	1
 17738  016716  ECEA  F0B2         	call	_LCD_send_command
 17739  01671A  0012               	return		;funcret
 17740  01671C                     __end_of_LCD_cursor:
 17741                           	opt stack 0
 17742                           tblptru	equ	0xFF8
 17743                           tblptrh	equ	0xFF7
 17744                           tblptrl	equ	0xFF6
 17745                           tablat	equ	0xFF5
 17746                           prodh	equ	0xFF4
 17747                           prodl	equ	0xFF3
 17748                           intcon	equ	0xFF2
 17749                           postinc0	equ	0xFEE
 17750                           wreg	equ	0xFE8
 17751                           indf1	equ	0xFE7
 17752                           plusw1	equ	0xFE3
 17753                           fsr1h	equ	0xFE2
 17754                           fsr1l	equ	0xFE1
 17755                           indf2	equ	0xFDF
 17756                           postinc2	equ	0xFDE
 17757                           plusw2	equ	0xFDB
 17758                           fsr2h	equ	0xFDA
 17759                           fsr2l	equ	0xFD9
 17760                           status	equ	0xFD8
 17761                           
 17762 ;; *************** function _LCD_clear *****************
 17763 ;; Defined at:
 17764 ;;		line 257 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 17765 ;; Parameters:    Size  Location     Type
 17766 ;;		None
 17767 ;; Auto vars:     Size  Location     Type
 17768 ;;		None
 17769 ;; Return value:  Size  Location     Type
 17770 ;;                  1    wreg      void 
 17771 ;; Registers used:
 17772 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17773 ;; Tracked objects:
 17774 ;;		On entry : 0/0
 17775 ;;		On exit  : 0/0
 17776 ;;		Unchanged: 0/0
 17777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17782 ;;Total ram usage:        0 bytes
 17783 ;; Hardware stack levels used:    1
 17784 ;; Hardware stack levels required when called:    7
 17785 ;; This function calls:
 17786 ;;		_LCD_send_command
 17787 ;; This function is called by:
 17788 ;;		_LCD_initialize
 17789 ;;		_LCD_Handler
 17790 ;;		_LCD_Gap
 17791 ;;		_LCD_Park
 17792 ;;		_LCD_Parking
 17793 ;;		_LCD_End
 17794 ;;		_LCD_Error
 17795 ;;		_Credits
 17796 ;;		_board_initialization
 17797 ;; This function uses a non-reentrant model
 17798 ;;
 17799                           
 17800                           	psect	text48
 17801  01671C                     __ptext48:
 17802                           	opt stack 0
 17803  01671C                     _LCD_clear:
 17804                           	opt stack 21
 17805                           
 17806                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 17807                           
 17808                           ;incstack = 0
 17809  01671C  0E00               	movlw	0
 17810  01671E  0100               	movlb	0	; () banked
 17811  016720  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17812  016722  0E00               	movlw	0
 17813  016724  0100               	movlb	0	; () banked
 17814  016726  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17815  016728  0E00               	movlw	0
 17816  01672A  0100               	movlb	0	; () banked
 17817  01672C  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17818  01672E  0E00               	movlw	0
 17819  016730  ECEA  F0B2         	call	_LCD_send_command
 17820                           
 17821                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 17822  016734  0E00               	movlw	0
 17823  016736  0100               	movlb	0	; () banked
 17824  016738  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17825  01673A  0E00               	movlw	0
 17826  01673C  0100               	movlb	0	; () banked
 17827  01673E  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17828  016740  0E01               	movlw	1
 17829  016742  0100               	movlb	0	; () banked
 17830  016744  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17831  016746  0E00               	movlw	0
 17832  016748  ECEA  F0B2         	call	_LCD_send_command
 17833  01674C  0012               	return		;funcret
 17834  01674E                     __end_of_LCD_clear:
 17835                           	opt stack 0
 17836                           tblptru	equ	0xFF8
 17837                           tblptrh	equ	0xFF7
 17838                           tblptrl	equ	0xFF6
 17839                           tablat	equ	0xFF5
 17840                           prodh	equ	0xFF4
 17841                           prodl	equ	0xFF3
 17842                           intcon	equ	0xFF2
 17843                           postinc0	equ	0xFEE
 17844                           wreg	equ	0xFE8
 17845                           indf1	equ	0xFE7
 17846                           plusw1	equ	0xFE3
 17847                           fsr1h	equ	0xFE2
 17848                           fsr1l	equ	0xFE1
 17849                           indf2	equ	0xFDF
 17850                           postinc2	equ	0xFDE
 17851                           plusw2	equ	0xFDB
 17852                           fsr2h	equ	0xFDA
 17853                           fsr2l	equ	0xFD9
 17854                           status	equ	0xFD8
 17855                           
 17856 ;; *************** function _LCD_goto_line *****************
 17857 ;; Defined at:
 17858 ;;		line 111 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 17859 ;; Parameters:    Size  Location     Type
 17860 ;;  line            1    wreg     unsigned char 
 17861 ;; Auto vars:     Size  Location     Type
 17862 ;;  line            1   29[BANK0 ] unsigned char 
 17863 ;; Return value:  Size  Location     Type
 17864 ;;                  1    wreg      void 
 17865 ;; Registers used:
 17866 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17867 ;; Tracked objects:
 17868 ;;		On entry : 0/0
 17869 ;;		On exit  : 0/0
 17870 ;;		Unchanged: 0/0
 17871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17873 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17875 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17876 ;;Total ram usage:        1 bytes
 17877 ;; Hardware stack levels used:    1
 17878 ;; Hardware stack levels required when called:    7
 17879 ;; This function calls:
 17880 ;;		_LCD_send_command
 17881 ;; This function is called by:
 17882 ;;		_LCD_goto_xy
 17883 ;;		_main
 17884 ;;		_LCD_Handler
 17885 ;;		_LCD_Gap
 17886 ;;		_LCD_Park
 17887 ;;		_LCD_Parking
 17888 ;;		_LCD_End
 17889 ;;		_LCD_Error
 17890 ;;		_Credits
 17891 ;;		_board_initialization
 17892 ;; This function uses a non-reentrant model
 17893 ;;
 17894                           
 17895                           	psect	text49
 17896  015AAA                     __ptext49:
 17897                           	opt stack 0
 17898  015AAA                     _LCD_goto_line:
 17899                           	opt stack 22
 17900                           
 17901                           ;incstack = 0
 17902                           ;LCD_goto_line@line stored from wreg
 17903  015AAA  0100               	movlb	0	; () banked
 17904  015AAC  6F7D               	movwf	LCD_goto_line@line& (0+255),b
 17905                           
 17906                           ;src\LCD_44780.c: 113: switch(line) {
 17907  015AAE  D064               	goto	l8591
 17908  015AB0                     l8583:
 17909  015AB0  0E00               	movlw	0
 17910  015AB2  0100               	movlb	0	; () banked
 17911  015AB4  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17912  015AB6  0E00               	movlw	0
 17913  015AB8  0100               	movlb	0	; () banked
 17914  015ABA  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17915  015ABC  0E00               	movlw	0
 17916  015ABE  0100               	movlb	0	; () banked
 17917  015AC0  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17918  015AC2  0E01               	movlw	1
 17919  015AC4  ECEA  F0B2         	call	_LCD_send_command
 17920                           
 17921                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 17922  015AC8  0E00               	movlw	0
 17923  015ACA  0100               	movlb	0	; () banked
 17924  015ACC  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17925  015ACE  0E00               	movlw	0
 17926  015AD0  0100               	movlb	0	; () banked
 17927  015AD2  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17928  015AD4  0E00               	movlw	0
 17929  015AD6  0100               	movlb	0	; () banked
 17930  015AD8  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17931  015ADA  0E00               	movlw	0
 17932  015ADC  ECEA  F0B2         	call	_LCD_send_command
 17933                           
 17934                           ;src\LCD_44780.c: 117: break;
 17935  015AE0  0012               	return	
 17936  015AE2                     l8585:
 17937  015AE2  0E01               	movlw	1
 17938  015AE4  0100               	movlb	0	; () banked
 17939  015AE6  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17940  015AE8  0E00               	movlw	0
 17941  015AEA  0100               	movlb	0	; () banked
 17942  015AEC  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17943  015AEE  0E00               	movlw	0
 17944  015AF0  0100               	movlb	0	; () banked
 17945  015AF2  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17946  015AF4  0E01               	movlw	1
 17947  015AF6  ECEA  F0B2         	call	_LCD_send_command
 17948                           
 17949                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 17950  015AFA  0E00               	movlw	0
 17951  015AFC  0100               	movlb	0	; () banked
 17952  015AFE  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17953  015B00  0E00               	movlw	0
 17954  015B02  0100               	movlb	0	; () banked
 17955  015B04  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17956  015B06  0E00               	movlw	0
 17957  015B08  0100               	movlb	0	; () banked
 17958  015B0A  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17959  015B0C  0E00               	movlw	0
 17960  015B0E  ECEA  F0B2         	call	_LCD_send_command
 17961                           
 17962                           ;src\LCD_44780.c: 121: break;
 17963  015B12  0012               	return	
 17964  015B14                     l8587:
 17965  015B14  0E00               	movlw	0
 17966  015B16  0100               	movlb	0	; () banked
 17967  015B18  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17968  015B1A  0E00               	movlw	0
 17969  015B1C  0100               	movlb	0	; () banked
 17970  015B1E  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17971  015B20  0E01               	movlw	1
 17972  015B22  0100               	movlb	0	; () banked
 17973  015B24  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17974  015B26  0E01               	movlw	1
 17975  015B28  ECEA  F0B2         	call	_LCD_send_command
 17976                           
 17977                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 17978  015B2C  0E01               	movlw	1
 17979  015B2E  0100               	movlb	0	; () banked
 17980  015B30  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17981  015B32  0E00               	movlw	0
 17982  015B34  0100               	movlb	0	; () banked
 17983  015B36  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17984  015B38  0E00               	movlw	0
 17985  015B3A  0100               	movlb	0	; () banked
 17986  015B3C  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17987  015B3E  0E00               	movlw	0
 17988  015B40  ECEA  F0B2         	call	_LCD_send_command
 17989                           
 17990                           ;src\LCD_44780.c: 125: break;
 17991  015B44  0012               	return	
 17992  015B46                     l8589:
 17993  015B46  0E01               	movlw	1
 17994  015B48  0100               	movlb	0	; () banked
 17995  015B4A  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17996  015B4C  0E00               	movlw	0
 17997  015B4E  0100               	movlb	0	; () banked
 17998  015B50  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17999  015B52  0E01               	movlw	1
 18000  015B54  0100               	movlb	0	; () banked
 18001  015B56  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 18002  015B58  0E01               	movlw	1
 18003  015B5A  ECEA  F0B2         	call	_LCD_send_command
 18004                           
 18005                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 18006  015B5E  0E01               	movlw	1
 18007  015B60  0100               	movlb	0	; () banked
 18008  015B62  6F79               	movwf	LCD_send_command@D2& (0+255),b
 18009  015B64  0E00               	movlw	0
 18010  015B66  0100               	movlb	0	; () banked
 18011  015B68  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 18012  015B6A  0E00               	movlw	0
 18013  015B6C  0100               	movlb	0	; () banked
 18014  015B6E  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 18015  015B70  0E00               	movlw	0
 18016  015B72  ECEA  F0B2         	call	_LCD_send_command
 18017                           
 18018                           ;src\LCD_44780.c: 129: }
 18019  015B76  0012               	return	
 18020  015B78                     l8591:
 18021  015B78  0100               	movlb	0	; () banked
 18022  015B7A  517D               	movf	LCD_goto_line@line& (0+255),w,b
 18023                           
 18024                           ; Switch size 1, requested type "space"
 18025                           ; Number of cases is 4, Range of values is 1 to 4
 18026                           ; switch strategies available:
 18027                           ; Name         Instructions Cycles
 18028                           ; simple_byte           13     7 (average)
 18029                           ;	Chosen strategy is simple_byte
 18030  015B7C  0A01               	xorlw	1	; case 1
 18031  015B7E  B4D8               	btfsc	status,2,c
 18032  015B80  D797               	goto	l8583
 18033  015B82  0A03               	xorlw	3	; case 2
 18034  015B84  B4D8               	btfsc	status,2,c
 18035  015B86  D7AD               	goto	l8585
 18036  015B88  0A01               	xorlw	1	; case 3
 18037  015B8A  B4D8               	btfsc	status,2,c
 18038  015B8C  D7C3               	goto	l8587
 18039  015B8E  0A07               	xorlw	7	; case 4
 18040  015B90  A4D8               	btfss	status,2,c
 18041  015B92  0012               	return	
 18042  015B94  D7D8               	goto	l8589
 18043  015B96                     __end_of_LCD_goto_line:
 18044                           	opt stack 0
 18045                           tblptru	equ	0xFF8
 18046                           tblptrh	equ	0xFF7
 18047                           tblptrl	equ	0xFF6
 18048                           tablat	equ	0xFF5
 18049                           prodh	equ	0xFF4
 18050                           prodl	equ	0xFF3
 18051                           intcon	equ	0xFF2
 18052                           postinc0	equ	0xFEE
 18053                           wreg	equ	0xFE8
 18054                           indf1	equ	0xFE7
 18055                           plusw1	equ	0xFE3
 18056                           fsr1h	equ	0xFE2
 18057                           fsr1l	equ	0xFE1
 18058                           indf2	equ	0xFDF
 18059                           postinc2	equ	0xFDE
 18060                           plusw2	equ	0xFDB
 18061                           fsr2h	equ	0xFDA
 18062                           fsr2l	equ	0xFD9
 18063                           status	equ	0xFD8
 18064                           
 18065 ;; *************** function _LCD_send_command *****************
 18066 ;; Defined at:
 18067 ;;		line 61 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 18068 ;; Parameters:    Size  Location     Type
 18069 ;;  D3              1    wreg     unsigned char 
 18070 ;;  D2              1   25[BANK0 ] unsigned char 
 18071 ;;  D1              1   26[BANK0 ] unsigned char 
 18072 ;;  D0              1   27[BANK0 ] unsigned char 
 18073 ;; Auto vars:     Size  Location     Type
 18074 ;;  D3              1   28[BANK0 ] unsigned char 
 18075 ;; Return value:  Size  Location     Type
 18076 ;;                  1    wreg      void 
 18077 ;; Registers used:
 18078 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 18079 ;; Tracked objects:
 18080 ;;		On entry : 0/0
 18081 ;;		On exit  : 0/0
 18082 ;;		Unchanged: 0/0
 18083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18084 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18085 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18087 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18088 ;;Total ram usage:        4 bytes
 18089 ;; Hardware stack levels used:    1
 18090 ;; Hardware stack levels required when called:    6
 18091 ;; This function calls:
 18092 ;;		_LCD_enable_pulse
 18093 ;; This function is called by:
 18094 ;;		_LCD_shift_cursor
 18095 ;;		_LCD_goto_line
 18096 ;;		_LCD_write_char
 18097 ;;		_LCD_clear
 18098 ;;		_LCD_cursor
 18099 ;;		_LCD_initialize
 18100 ;;		_LCD_home
 18101 ;;		_LCD_shift
 18102 ;; This function uses a non-reentrant model
 18103 ;;
 18104                           
 18105                           	psect	text50
 18106  0165D4                     __ptext50:
 18107                           	opt stack 0
 18108  0165D4                     _LCD_send_command:
 18109                           	opt stack 22
 18110                           
 18111                           ;incstack = 0
 18112                           ;LCD_send_command@D3 stored from wreg
 18113  0165D4  0100               	movlb	0	; () banked
 18114  0165D6  6F7C               	movwf	LCD_send_command@D3& (0+255),b
 18115                           
 18116                           ;src\LCD_44780.c: 63: LATCbits.LATC2 = D0;
 18117  0165D8  0100               	movlb	0	; () banked
 18118  0165DA  B17B               	btfsc	LCD_send_command@D0& (0+255),0,b
 18119  0165DC  D002               	bra	u10765
 18120  0165DE  948B               	bcf	3979,2,c	;volatile
 18121  0165E0  D001               	bra	u10766
 18122  0165E2                     u10765:
 18123  0165E2  848B               	bsf	3979,2,c	;volatile
 18124  0165E4                     u10766:
 18125                           
 18126                           ;src\LCD_44780.c: 64: LATCbits.LATC3 = D1;
 18127  0165E4  0100               	movlb	0	; () banked
 18128  0165E6  B17A               	btfsc	LCD_send_command@D1& (0+255),0,b
 18129  0165E8  D002               	bra	u10775
 18130  0165EA  968B               	bcf	3979,3,c	;volatile
 18131  0165EC  D001               	bra	u10776
 18132  0165EE                     u10775:
 18133  0165EE  868B               	bsf	3979,3,c	;volatile
 18134  0165F0                     u10776:
 18135                           
 18136                           ;src\LCD_44780.c: 65: LATDbits.LATD0 = D2;
 18137  0165F0  0100               	movlb	0	; () banked
 18138  0165F2  B179               	btfsc	LCD_send_command@D2& (0+255),0,b
 18139  0165F4  D002               	bra	u10785
 18140  0165F6  908C               	bcf	3980,0,c	;volatile
 18141  0165F8  D001               	bra	u10786
 18142  0165FA                     u10785:
 18143  0165FA  808C               	bsf	3980,0,c	;volatile
 18144  0165FC                     u10786:
 18145                           
 18146                           ;src\LCD_44780.c: 66: LATDbits.LATD1 = D3;
 18147  0165FC  0100               	movlb	0	; () banked
 18148  0165FE  B17C               	btfsc	LCD_send_command@D3& (0+255),0,b
 18149  016600  D002               	bra	u10795
 18150  016602  928C               	bcf	3980,1,c	;volatile
 18151  016604  D001               	bra	u10796
 18152  016606                     u10795:
 18153  016606  828C               	bsf	3980,1,c	;volatile
 18154  016608                     u10796:
 18155                           
 18156                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 18157  016608  ECE1  F0B3         	call	_LCD_enable_pulse	;wreg free
 18158  01660C  0012               	return		;funcret
 18159  01660E                     __end_of_LCD_send_command:
 18160                           	opt stack 0
 18161                           tblptru	equ	0xFF8
 18162                           tblptrh	equ	0xFF7
 18163                           tblptrl	equ	0xFF6
 18164                           tablat	equ	0xFF5
 18165                           prodh	equ	0xFF4
 18166                           prodl	equ	0xFF3
 18167                           intcon	equ	0xFF2
 18168                           postinc0	equ	0xFEE
 18169                           wreg	equ	0xFE8
 18170                           indf1	equ	0xFE7
 18171                           plusw1	equ	0xFE3
 18172                           fsr1h	equ	0xFE2
 18173                           fsr1l	equ	0xFE1
 18174                           indf2	equ	0xFDF
 18175                           postinc2	equ	0xFDE
 18176                           plusw2	equ	0xFDB
 18177                           fsr2h	equ	0xFDA
 18178                           fsr2l	equ	0xFD9
 18179                           status	equ	0xFD8
 18180                           
 18181 ;; *************** function _LCD_enable_pulse *****************
 18182 ;; Defined at:
 18183 ;;		line 49 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 18184 ;; Parameters:    Size  Location     Type
 18185 ;;		None
 18186 ;; Auto vars:     Size  Location     Type
 18187 ;;		None
 18188 ;; Return value:  Size  Location     Type
 18189 ;;                  1    wreg      void 
 18190 ;; Registers used:
 18191 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 18192 ;; Tracked objects:
 18193 ;;		On entry : 0/0
 18194 ;;		On exit  : 0/0
 18195 ;;		Unchanged: 0/0
 18196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18201 ;;Total ram usage:        0 bytes
 18202 ;; Hardware stack levels used:    1
 18203 ;; Hardware stack levels required when called:    5
 18204 ;; This function calls:
 18205 ;;		_delay_ms
 18206 ;; This function is called by:
 18207 ;;		_LCD_send_command
 18208 ;; This function uses a non-reentrant model
 18209 ;;
 18210                           
 18211                           	psect	text51
 18212  0167C2                     __ptext51:
 18213                           	opt stack 0
 18214  0167C2                     _LCD_enable_pulse:
 18215                           	opt stack 22
 18216                           
 18217                           ;src\LCD_44780.c: 51: LATCbits.LATC1 = 1;
 18218                           
 18219                           ;incstack = 0
 18220  0167C2  828B               	bsf	3979,1,c	;volatile
 18221                           
 18222                           ;src\LCD_44780.c: 52: delay_ms (1);
 18223  0167C4  0E00               	movlw	0
 18224  0167C6  0100               	movlb	0	; () banked
 18225  0167C8  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
 18226  0167CA  0E01               	movlw	1
 18227  0167CC  6F77               	movwf	delay_ms@value_ms& (0+255),b
 18228  0167CE  EC07  F0B3         	call	_delay_ms	;wreg free
 18229                           
 18230                           ;src\LCD_44780.c: 53: LATCbits.LATC1 = 0;
 18231  0167D2  928B               	bcf	3979,1,c	;volatile
 18232                           
 18233                           ;src\LCD_44780.c: 54: delay_ms (1);
 18234  0167D4  0E00               	movlw	0
 18235  0167D6  0100               	movlb	0	; () banked
 18236  0167D8  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
 18237  0167DA  0E01               	movlw	1
 18238  0167DC  6F77               	movwf	delay_ms@value_ms& (0+255),b
 18239  0167DE  EC07  F0B3         	call	_delay_ms	;wreg free
 18240  0167E2  0012               	return		;funcret
 18241  0167E4                     __end_of_LCD_enable_pulse:
 18242                           	opt stack 0
 18243                           tblptru	equ	0xFF8
 18244                           tblptrh	equ	0xFF7
 18245                           tblptrl	equ	0xFF6
 18246                           tablat	equ	0xFF5
 18247                           prodh	equ	0xFF4
 18248                           prodl	equ	0xFF3
 18249                           intcon	equ	0xFF2
 18250                           postinc0	equ	0xFEE
 18251                           wreg	equ	0xFE8
 18252                           indf1	equ	0xFE7
 18253                           plusw1	equ	0xFE3
 18254                           fsr1h	equ	0xFE2
 18255                           fsr1l	equ	0xFE1
 18256                           indf2	equ	0xFDF
 18257                           postinc2	equ	0xFDE
 18258                           plusw2	equ	0xFDB
 18259                           fsr2h	equ	0xFDA
 18260                           fsr2l	equ	0xFD9
 18261                           status	equ	0xFD8
 18262                           
 18263 ;; *************** function _delay_ms *****************
 18264 ;; Defined at:
 18265 ;;		line 61 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 18266 ;; Parameters:    Size  Location     Type
 18267 ;;  value_ms        2   23[BANK0 ] unsigned int 
 18268 ;; Auto vars:     Size  Location     Type
 18269 ;;		None
 18270 ;; Return value:  Size  Location     Type
 18271 ;;                  1    wreg      void 
 18272 ;; Registers used:
 18273 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 18274 ;; Tracked objects:
 18275 ;;		On entry : 0/0
 18276 ;;		On exit  : 0/0
 18277 ;;		Unchanged: 0/0
 18278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18279 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18282 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18283 ;;Total ram usage:        2 bytes
 18284 ;; Hardware stack levels used:    1
 18285 ;; Hardware stack levels required when called:    4
 18286 ;; This function calls:
 18287 ;;		___wmul
 18288 ;; This function is called by:
 18289 ;;		_LCD_enable_pulse
 18290 ;;		_LCD_initialize
 18291 ;;		_main
 18292 ;;		_delay_s
 18293 ;; This function uses a non-reentrant model
 18294 ;;
 18295                           
 18296                           	psect	text52
 18297  01660E                     __ptext52:
 18298                           	opt stack 0
 18299  01660E                     _delay_ms:
 18300                           	opt stack 26
 18301                           
 18302                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 18303                           
 18304                           ;incstack = 0
 18305  01660E  C0EC  F071         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 18306  016612  0100               	movlb	0	; () banked
 18307  016614  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
 18308  016616  C077  F073         	movff	delay_ms@value_ms,___wmul@multiplicand
 18309  01661A  C078  F074         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 18310  01661E  EC40  F0B3         	call	___wmul	;wreg free
 18311  016622  C071  F0E1         	movff	?___wmul,_clock_counter_reference	;volatile
 18312  016626  C072  F0E2         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 18313                           
 18314                           ;src\delay.c: 75: while (clock_counter_reference) {
 18315  01662A  D007               	goto	l591
 18316  01662C                     l8127:
 18317                           
 18318                           ;src\delay.c: 85: _delay(240);
 18319  01662C  0E50               	movlw	80
 18320  01662E                     u13227:
 18321  01662E  2EE8               	decfsz	wreg,f,c
 18322  016630  D7FE               	goto	u13227
 18323                           
 18324                           ;src\delay.c: 88: clock_counter_reference--;
 18325  016632  0100               	movlb	0	; () banked
 18326  016634  07E1               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 18327  016636  A0D8               	btfss	status,0,c
 18328  016638  07E2               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 18329  01663A                     l591:
 18330  01663A  0100               	movlb	0	; () banked
 18331  01663C  51E1               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 18332  01663E  0100               	movlb	0	; () banked
 18333  016640  11E2               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 18334  016642  B4D8               	btfsc	status,2,c
 18335  016644  0012               	return	
 18336  016646  D7F2               	goto	l8127
 18337  016648                     __end_of_delay_ms:
 18338                           	opt stack 0
 18339                           tblptru	equ	0xFF8
 18340                           tblptrh	equ	0xFF7
 18341                           tblptrl	equ	0xFF6
 18342                           tablat	equ	0xFF5
 18343                           prodh	equ	0xFF4
 18344                           prodl	equ	0xFF3
 18345                           intcon	equ	0xFF2
 18346                           postinc0	equ	0xFEE
 18347                           wreg	equ	0xFE8
 18348                           indf1	equ	0xFE7
 18349                           plusw1	equ	0xFE3
 18350                           fsr1h	equ	0xFE2
 18351                           fsr1l	equ	0xFE1
 18352                           indf2	equ	0xFDF
 18353                           postinc2	equ	0xFDE
 18354                           plusw2	equ	0xFDB
 18355                           fsr2h	equ	0xFDA
 18356                           fsr2l	equ	0xFD9
 18357                           status	equ	0xFD8
 18358                           
 18359 ;; *************** function ___wmul *****************
 18360 ;; Defined at:
 18361 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
 18362 ;; Parameters:    Size  Location     Type
 18363 ;;  multiplier      2   17[BANK0 ] unsigned int 
 18364 ;;  multiplicand    2   19[BANK0 ] unsigned int 
 18365 ;; Auto vars:     Size  Location     Type
 18366 ;;  product         2   21[BANK0 ] unsigned int 
 18367 ;; Return value:  Size  Location     Type
 18368 ;;                  2   17[BANK0 ] unsigned int 
 18369 ;; Registers used:
 18370 ;;		wreg, status,2, status,0, prodl, prodh
 18371 ;; Tracked objects:
 18372 ;;		On entry : 0/0
 18373 ;;		On exit  : 0/0
 18374 ;;		Unchanged: 0/0
 18375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18376 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18377 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18379 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18380 ;;Total ram usage:        6 bytes
 18381 ;; Hardware stack levels used:    1
 18382 ;; Hardware stack levels required when called:    3
 18383 ;; This function calls:
 18384 ;;		Nothing
 18385 ;; This function is called by:
 18386 ;;		_delay_ms
 18387 ;;		_sprintf
 18388 ;; This function uses a non-reentrant model
 18389 ;;
 18390                           
 18391                           	psect	text53
 18392  016680                     __ptext53:
 18393                           	opt stack 0
 18394  016680                     ___wmul:
 18395                           	opt stack 26
 18396                           
 18397                           ; BSR set to: 0
 18398                           ;incstack = 0
 18399  016680  0100               	movlb	0	; () banked
 18400  016682  5171               	movf	___wmul@multiplier& (0+255),w,b
 18401  016684  0100               	movlb	0	; () banked
 18402  016686  0373               	mulwf	___wmul@multiplicand& (0+255),b
 18403  016688  CFF3 F075          	movff	prodl,___wmul@product
 18404  01668C  CFF4 F076          	movff	prodh,___wmul@product+1
 18405  016690  0100               	movlb	0	; () banked
 18406  016692  5171               	movf	___wmul@multiplier& (0+255),w,b
 18407  016694  0100               	movlb	0	; () banked
 18408  016696  0374               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 18409  016698  50F3               	movf	prodl,w,c
 18410  01669A  0100               	movlb	0	; () banked
 18411  01669C  2776               	addwf	(___wmul@product+1)& (0+255),f,b
 18412  01669E  0100               	movlb	0	; () banked
 18413  0166A0  5172               	movf	(___wmul@multiplier+1)& (0+255),w,b
 18414  0166A2  0100               	movlb	0	; () banked
 18415  0166A4  0373               	mulwf	___wmul@multiplicand& (0+255),b
 18416  0166A6  50F3               	movf	prodl,w,c
 18417  0166A8  0100               	movlb	0	; () banked
 18418  0166AA  2776               	addwf	(___wmul@product+1)& (0+255),f,b
 18419                           
 18420                           ; BSR set to: 0
 18421  0166AC  C075  F071         	movff	___wmul@product,?___wmul
 18422  0166B0  C076  F072         	movff	___wmul@product+1,?___wmul+1
 18423  0166B4  0012               	return	
 18424  0166B6                     __end_of___wmul:
 18425                           	opt stack 0
 18426                           tblptru	equ	0xFF8
 18427                           tblptrh	equ	0xFF7
 18428                           tblptrl	equ	0xFF6
 18429                           tablat	equ	0xFF5
 18430                           prodh	equ	0xFF4
 18431                           prodl	equ	0xFF3
 18432                           intcon	equ	0xFF2
 18433                           postinc0	equ	0xFEE
 18434                           wreg	equ	0xFE8
 18435                           indf1	equ	0xFE7
 18436                           plusw1	equ	0xFE3
 18437                           fsr1h	equ	0xFE2
 18438                           fsr1l	equ	0xFE1
 18439                           indf2	equ	0xFDF
 18440                           postinc2	equ	0xFDE
 18441                           plusw2	equ	0xFDB
 18442                           fsr2h	equ	0xFDA
 18443                           fsr2l	equ	0xFD9
 18444                           status	equ	0xFD8
 18445                           
 18446 ;; *************** function _CAN_Tx *****************
 18447 ;; Defined at:
 18448 ;;		line 696 in file "RemoteCan.c"
 18449 ;; Parameters:    Size  Location     Type
 18450 ;;		None
 18451 ;; Auto vars:     Size  Location     Type
 18452 ;;		None
 18453 ;; Return value:  Size  Location     Type
 18454 ;;                  1    wreg      void 
 18455 ;; Registers used:
 18456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18457 ;; Tracked objects:
 18458 ;;		On entry : 0/0
 18459 ;;		On exit  : 0/0
 18460 ;;		Unchanged: 0/0
 18461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18466 ;;Total ram usage:        0 bytes
 18467 ;; Hardware stack levels used:    1
 18468 ;; Hardware stack levels required when called:    4
 18469 ;; This function calls:
 18470 ;;		_CANisTxReady
 18471 ;;		_CANsendMessage
 18472 ;; This function is called by:
 18473 ;;		_main
 18474 ;; This function uses a non-reentrant model
 18475 ;;
 18476                           
 18477                           	psect	text54
 18478  015DCE                     __ptext54:
 18479                           	opt stack 0
 18480  015DCE                     _CAN_Tx:
 18481                           	opt stack 26
 18482  015DCE                     l7261:
 18483  015DCE  ECCF  F0B3         	call	_CANisTxReady	;wreg free
 18484  015DD2  06E8               	decf	wreg,f,c
 18485  015DD4  A4D8               	btfss	status,2,c
 18486  015DD6  D7FB               	goto	l7261
 18487                           
 18488                           ;RemoteCan.c: 699: CANsendMessage(0b00000000111, data_steering, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 18489  015DD8  0E07               	movlw	7
 18490  015DDA  0100               	movlb	0	; () banked
 18491  015DDC  6F71               	movwf	CANsendMessage@identifier& (0+255),b
 18492  015DDE  0E00               	movlw	0
 18493  015DE0  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 18494  015DE2  0E00               	movlw	0
 18495  015DE4  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 18496  015DE6  0E00               	movlw	0
 18497  015DE8  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 18498  015DEA  0E3D               	movlw	low _data_steering
 18499  015DEC  0100               	movlb	0	; () banked
 18500  015DEE  6F75               	movwf	CANsendMessage@data& (0+255),b
 18501  015DF0  0E01               	movlw	high _data_steering
 18502  015DF2  0100               	movlb	0	; () banked
 18503  015DF4  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
 18504  015DF6  0E08               	movlw	8
 18505  015DF8  0100               	movlb	0	; () banked
 18506  015DFA  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
 18507  015DFC  0EBC               	movlw	188
 18508  015DFE  0100               	movlb	0	; () banked
 18509  015E00  6F78               	movwf	CANsendMessage@flags& (0+255),b
 18510  015E02  ECA9  F08E         	call	_CANsendMessage	;wreg free
 18511                           
 18512                           ;RemoteCan.c: 702: data_speed[0] = set_speed;
 18513  015E06  C0E3  F135         	movff	_set_speed,_data_speed	;volatile
 18514                           
 18515                           ;RemoteCan.c: 703: data_speed[1] = (set_speed >> 8);
 18516  015E0A  0100               	movlb	0	; () banked
 18517  015E0C  51E4               	movf	(_set_speed+1)& (0+255),w,b	;volatile
 18518  015E0E  0101               	movlb	1	; () banked
 18519  015E10  6F36               	movwf	(_data_speed+1)& (0+255),b
 18520                           
 18521                           ; BSR set to: 1
 18522                           ;RemoteCan.c: 704: data_speed[2] = dir;
 18523  015E12  C0E7  F137         	movff	_dir,_data_speed+2	;volatile
 18524  015E16                     l7271:
 18525  015E16  ECCF  F0B3         	call	_CANisTxReady	;wreg free
 18526  015E1A  06E8               	decf	wreg,f,c
 18527  015E1C  A4D8               	btfss	status,2,c
 18528  015E1E  D7FB               	goto	l7271
 18529                           
 18530                           ;RemoteCan.c: 706: CANsendMessage(0b00000000101, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 18531  015E20  0E05               	movlw	5
 18532  015E22  0100               	movlb	0	; () banked
 18533  015E24  6F71               	movwf	CANsendMessage@identifier& (0+255),b
 18534  015E26  0E00               	movlw	0
 18535  015E28  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 18536  015E2A  0E00               	movlw	0
 18537  015E2C  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 18538  015E2E  0E00               	movlw	0
 18539  015E30  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 18540  015E32  0E35               	movlw	low _data_speed
 18541  015E34  0100               	movlb	0	; () banked
 18542  015E36  6F75               	movwf	CANsendMessage@data& (0+255),b
 18543  015E38  0E01               	movlw	high _data_speed
 18544  015E3A  0100               	movlb	0	; () banked
 18545  015E3C  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
 18546  015E3E  0E08               	movlw	8
 18547  015E40  0100               	movlb	0	; () banked
 18548  015E42  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
 18549  015E44  0EBC               	movlw	188
 18550  015E46  0100               	movlb	0	; () banked
 18551  015E48  6F78               	movwf	CANsendMessage@flags& (0+255),b
 18552  015E4A  ECA9  F08E         	call	_CANsendMessage	;wreg free
 18553  015E4E                     l7275:
 18554  015E4E  ECCF  F0B3         	call	_CANisTxReady	;wreg free
 18555  015E52  06E8               	decf	wreg,f,c
 18556  015E54  A4D8               	btfss	status,2,c
 18557  015E56  D7FB               	goto	l7275
 18558                           
 18559                           ;RemoteCan.c: 710: CANsendMessage(0b00000000110, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 18560  015E58  0E06               	movlw	6
 18561  015E5A  0100               	movlb	0	; () banked
 18562  015E5C  6F71               	movwf	CANsendMessage@identifier& (0+255),b
 18563  015E5E  0E00               	movlw	0
 18564  015E60  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 18565  015E62  0E00               	movlw	0
 18566  015E64  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 18567  015E66  0E00               	movlw	0
 18568  015E68  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 18569  015E6A  0E2D               	movlw	low _data_brake
 18570  015E6C  0100               	movlb	0	; () banked
 18571  015E6E  6F75               	movwf	CANsendMessage@data& (0+255),b
 18572  015E70  0E01               	movlw	high _data_brake
 18573  015E72  0100               	movlb	0	; () banked
 18574  015E74  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
 18575  015E76  0E08               	movlw	8
 18576  015E78  0100               	movlb	0	; () banked
 18577  015E7A  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
 18578  015E7C  0EBC               	movlw	188
 18579  015E7E  0100               	movlb	0	; () banked
 18580  015E80  6F78               	movwf	CANsendMessage@flags& (0+255),b
 18581  015E82  ECA9  F08E         	call	_CANsendMessage	;wreg free
 18582  015E86  0012               	return		;funcret
 18583  015E88                     __end_of_CAN_Tx:
 18584                           	opt stack 0
 18585                           tblptru	equ	0xFF8
 18586                           tblptrh	equ	0xFF7
 18587                           tblptrl	equ	0xFF6
 18588                           tablat	equ	0xFF5
 18589                           prodh	equ	0xFF4
 18590                           prodl	equ	0xFF3
 18591                           intcon	equ	0xFF2
 18592                           postinc0	equ	0xFEE
 18593                           wreg	equ	0xFE8
 18594                           indf1	equ	0xFE7
 18595                           plusw1	equ	0xFE3
 18596                           fsr1h	equ	0xFE2
 18597                           fsr1l	equ	0xFE1
 18598                           indf2	equ	0xFDF
 18599                           postinc2	equ	0xFDE
 18600                           plusw2	equ	0xFDB
 18601                           fsr2h	equ	0xFDA
 18602                           fsr2l	equ	0xFD9
 18603                           status	equ	0xFD8
 18604                           
 18605 ;; *************** function _CANsendMessage *****************
 18606 ;; Defined at:
 18607 ;;		line 294 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 18608 ;; Parameters:    Size  Location     Type
 18609 ;;  identifier      4   17[BANK0 ] unsigned long 
 18610 ;;  data            2   21[BANK0 ] PTR unsigned char 
 18611 ;;		 -> data_speed(8), park_assist_state(8), data_steering(8), data_brake(8), 
 18612 ;;		 -> data(8), 
 18613 ;;  dataLength      1   23[BANK0 ] unsigned char 
 18614 ;;  flags           1   24[BANK0 ] enum E16771
 18615 ;; Auto vars:     Size  Location     Type
 18616 ;;  tamp            4   29[BANK0 ] unsigned long 
 18617 ;; Return value:  Size  Location     Type
 18618 ;;                  1    wreg      void 
 18619 ;; Registers used:
 18620 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18621 ;; Tracked objects:
 18622 ;;		On entry : 0/0
 18623 ;;		On exit  : 0/0
 18624 ;;		Unchanged: 0/0
 18625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18626 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18627 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18628 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18629 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18630 ;;Total ram usage:       16 bytes
 18631 ;; Hardware stack levels used:    1
 18632 ;; Hardware stack levels required when called:    3
 18633 ;; This function calls:
 18634 ;;		Nothing
 18635 ;; This function is called by:
 18636 ;;		_main
 18637 ;;		_LCD_Handler
 18638 ;;		_CAN_Tx
 18639 ;; This function uses a non-reentrant model
 18640 ;;
 18641                           
 18642                           	psect	text55
 18643  011D52                     __ptext55:
 18644                           	opt stack 0
 18645  011D52                     _CANsendMessage:
 18646                           	opt stack 26
 18647                           
 18648                           ;inc\CANlib.h: 296: unsigned long tamp;
 18649                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 18650                           
 18651                           ;incstack = 0
 18652  011D52  010F               	movlb	15	; () banked
 18653  011D54  B740               	btfsc	64,3,b	;volatile
 18654  011D56  D13F               	goto	l385
 18655                           
 18656                           ; BSR set to: 15
 18657                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 18658  011D58  C077  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
 18659                           
 18660                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 18661  011D5C  0100               	movlb	0	; () banked
 18662  011D5E  AD78               	btfss	CANsendMessage@flags& (0+255),6,b
 18663  011D60  D003               	goto	l386
 18664                           
 18665                           ; BSR set to: 0
 18666                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 18667  011D62  010F               	movlb	15	; () banked
 18668  011D64  8D45               	bsf	69,6,b	;volatile
 18669  011D66  D002               	goto	l387
 18670  011D68                     l386:
 18671                           
 18672                           ; BSR set to: 0
 18673                           ;inc\CANlib.h: 302: else
 18674                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 18675  011D68  010F               	movlb	15	; () banked
 18676  011D6A  9D45               	bcf	69,6,b	;volatile
 18677  011D6C                     l387:
 18678                           
 18679                           ; BSR set to: 15
 18680                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 18681  011D6C  0100               	movlb	0	; () banked
 18682  011D6E  A778               	btfss	CANsendMessage@flags& (0+255),3,b
 18683  011D70  D079               	goto	l388
 18684                           
 18685                           ; BSR set to: 0
 18686                           ;inc\CANlib.h: 306: {
 18687                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 18688  011D72  0100               	movlb	0	; () banked
 18689  011D74  5171               	movf	CANsendMessage@identifier& (0+255),w,b
 18690  011D76  0100               	movlb	0	; () banked
 18691  011D78  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18692  011D7A  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18693  011D7C  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18694  011D7E  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18695                           
 18696                           ; BSR set to: 0
 18697                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 18698  011D80  C07D  FF44         	movff	CANsendMessage@tamp,3908	;volatile
 18699                           
 18700                           ; BSR set to: 0
 18701                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 18702  011D84  0E00               	movlw	0
 18703  011D86  0100               	movlb	0	; () banked
 18704  011D88  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 18705  011D8A  0100               	movlb	0	; () banked
 18706  011D8C  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18707  011D8E  0EFF               	movlw	255
 18708  011D90  0100               	movlb	0	; () banked
 18709  011D92  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 18710  011D94  0100               	movlb	0	; () banked
 18711  011D96  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 18712  011D98  0E00               	movlw	0
 18713  011D9A  0100               	movlb	0	; () banked
 18714  011D9C  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 18715  011D9E  0100               	movlb	0	; () banked
 18716  011DA0  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18717  011DA2  0E00               	movlw	0
 18718  011DA4  0100               	movlb	0	; () banked
 18719  011DA6  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18720  011DA8  0100               	movlb	0	; () banked
 18721  011DAA  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18722                           
 18723                           ; BSR set to: 0
 18724                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 18725  011DAC  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 18726  011DB0  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18727  011DB4  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18728  011DB8  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18729  011DBC  C07A  F079         	movff	??_CANsendMessage+1,??_CANsendMessage
 18730  011DC0  C07B  F07A         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 18731  011DC4  C07C  F07B         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 18732  011DC8  0100               	movlb	0	; () banked
 18733  011DCA  6B7C               	clrf	(??_CANsendMessage+3)& (0+255),b
 18734  011DCC  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 18735  011DD0  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18736  011DD4  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18737  011DD8  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18738                           
 18739                           ; BSR set to: 0
 18740                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 18741  011DDC  C07D  FF43         	movff	CANsendMessage@tamp,3907	;volatile
 18742                           
 18743                           ; BSR set to: 0
 18744                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 18745  011DE0  0E00               	movlw	0
 18746  011DE2  010F               	movlb	15	; () banked
 18747  011DE4  6F42               	movwf	66,b	;volatile
 18748                           
 18749                           ; BSR set to: 15
 18750                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 18751  011DE6  010F               	movlb	15	; () banked
 18752  011DE8  8742               	bsf	66,3,b	;volatile
 18753                           
 18754                           ; BSR set to: 15
 18755                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 18756  011DEA  0100               	movlb	0	; () banked
 18757  011DEC  A173               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 18758  011DEE  D002               	goto	l389
 18759                           
 18760                           ; BSR set to: 0
 18761                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 18762  011DF0  010F               	movlb	15	; () banked
 18763  011DF2  8142               	bsf	66,0,b	;volatile
 18764  011DF4                     l389:
 18765                           
 18766                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 18767  011DF4  0100               	movlb	0	; () banked
 18768  011DF6  A373               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 18769  011DF8  D002               	goto	l390
 18770                           
 18771                           ; BSR set to: 0
 18772                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 18773  011DFA  010F               	movlb	15	; () banked
 18774  011DFC  8342               	bsf	66,1,b	;volatile
 18775  011DFE                     l390:
 18776                           
 18777                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 18778  011DFE  0100               	movlb	0	; () banked
 18779  011E00  A573               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 18780  011E02  D002               	goto	l391
 18781                           
 18782                           ; BSR set to: 0
 18783                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 18784  011E04  010F               	movlb	15	; () banked
 18785  011E06  8B42               	bsf	66,5,b	;volatile
 18786  011E08                     l391:
 18787                           
 18788                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 18789  011E08  0100               	movlb	0	; () banked
 18790  011E0A  A773               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 18791  011E0C  D002               	goto	l392
 18792                           
 18793                           ; BSR set to: 0
 18794                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 18795  011E0E  010F               	movlb	15	; () banked
 18796  011E10  8D42               	bsf	66,6,b	;volatile
 18797  011E12                     l392:
 18798                           
 18799                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 18800  011E12  0100               	movlb	0	; () banked
 18801  011E14  A973               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 18802  011E16  D002               	goto	l6375
 18803                           
 18804                           ; BSR set to: 0
 18805                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 18806  011E18  010F               	movlb	15	; () banked
 18807  011E1A  8F42               	bsf	66,7,b	;volatile
 18808  011E1C                     l6375:
 18809                           
 18810                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 18811  011E1C  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 18812  011E20  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18813  011E24  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18814  011E28  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18815  011E2C  0E16               	movlw	22
 18816  011E2E  D006               	goto	u7890
 18817  011E30                     u7895:
 18818  011E30  0100               	movlb	0	; () banked
 18819  011E32  90D8               	bcf	status,0,c
 18820  011E34  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18821  011E36  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18822  011E38  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18823  011E3A  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 18824  011E3C                     u7890:
 18825  011E3C  2EE8               	decfsz	wreg,f,c
 18826  011E3E  D7F8               	goto	u7895
 18827  011E40  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 18828  011E44  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18829  011E48  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18830  011E4C  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18831                           
 18832                           ; BSR set to: 0
 18833                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 18834  011E50  0100               	movlb	0	; () banked
 18835  011E52  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 18836  011E54  0100               	movlb	0	; () banked
 18837  011E56  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18838  011E58  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18839  011E5A  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18840  011E5C  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18841                           
 18842                           ; BSR set to: 0
 18843                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 18844  011E5E  C07D  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 18845                           
 18846                           ;inc\CANlib.h: 332: }
 18847  011E62  D059               	goto	l6395
 18848  011E64                     l388:
 18849                           
 18850                           ; BSR set to: 0
 18851                           ;inc\CANlib.h: 334: else
 18852                           ;inc\CANlib.h: 336: {
 18853                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 18854  011E64  010F               	movlb	15	; () banked
 18855  011E66  9742               	bcf	66,3,b	;volatile
 18856                           
 18857                           ; BSR set to: 15
 18858                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 18859  011E68  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 18860  011E6C  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18861  011E70  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18862  011E74  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18863  011E78  0E04               	movlw	4
 18864  011E7A  D006               	goto	u7900
 18865  011E7C                     u7905:
 18866  011E7C  0100               	movlb	0	; () banked
 18867  011E7E  90D8               	bcf	status,0,c
 18868  011E80  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18869  011E82  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18870  011E84  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18871  011E86  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 18872  011E88                     u7900:
 18873  011E88  2EE8               	decfsz	wreg,f,c
 18874  011E8A  D7F8               	goto	u7905
 18875  011E8C  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 18876  011E90  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18877  011E94  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18878  011E98  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18879                           
 18880                           ; BSR set to: 0
 18881                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 18882  011E9C  0100               	movlb	0	; () banked
 18883  011E9E  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 18884  011EA0  0100               	movlb	0	; () banked
 18885  011EA2  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18886  011EA4  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18887  011EA6  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18888  011EA8  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18889                           
 18890                           ; BSR set to: 0
 18891                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 18892  011EAA  C07D  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 18893                           
 18894                           ; BSR set to: 0
 18895                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 18896  011EAE  0E07               	movlw	7
 18897  011EB0  0100               	movlb	0	; () banked
 18898  011EB2  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 18899  011EB4  0100               	movlb	0	; () banked
 18900  011EB6  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18901  011EB8  0E00               	movlw	0
 18902  011EBA  0100               	movlb	0	; () banked
 18903  011EBC  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 18904  011EBE  0100               	movlb	0	; () banked
 18905  011EC0  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 18906  011EC2  0E00               	movlw	0
 18907  011EC4  0100               	movlb	0	; () banked
 18908  011EC6  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 18909  011EC8  0100               	movlb	0	; () banked
 18910  011ECA  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18911  011ECC  0E00               	movlw	0
 18912  011ECE  0100               	movlb	0	; () banked
 18913  011ED0  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18914  011ED2  0100               	movlb	0	; () banked
 18915  011ED4  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18916                           
 18917                           ; BSR set to: 0
 18918                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 18919  011ED6  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 18920  011EDA  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18921  011EDE  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18922  011EE2  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18923  011EE6  0E05               	movlw	5
 18924  011EE8                     u7915:
 18925  011EE8  90D8               	bcf	status,0,c
 18926  011EEA  0100               	movlb	0	; () banked
 18927  011EEC  3779               	rlcf	??_CANsendMessage& (0+255),f,b
 18928  011EEE  377A               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 18929  011EF0  377B               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 18930  011EF2  377C               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 18931  011EF4  2EE8               	decfsz	wreg,f,c
 18932  011EF6  D7F8               	goto	u7915
 18933  011EF8  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 18934  011EFC  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18935  011F00  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18936  011F04  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18937                           
 18938                           ; BSR set to: 0
 18939                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 18940  011F08  010F               	movlb	15	; () banked
 18941  011F0A  5142               	movf	66,w,b	;volatile
 18942  011F0C  0B1F               	andlw	31
 18943  011F0E  010F               	movlb	15	; () banked
 18944  011F10  6F42               	movwf	66,b	;volatile
 18945                           
 18946                           ; BSR set to: 15
 18947                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 18948  011F12  C07D  FF42         	movff	CANsendMessage@tamp,3906	;volatile
 18949  011F16                     l6395:
 18950                           
 18951                           ;inc\CANlib.h: 347: }
 18952                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 18953  011F16  0100               	movlb	0	; () banked
 18954  011F18  A178               	btfss	CANsendMessage@flags& (0+255),0,b
 18955  011F1A  D003               	goto	l395
 18956                           
 18957                           ; BSR set to: 0
 18958                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 18959  011F1C  010F               	movlb	15	; () banked
 18960  011F1E  8140               	bsf	64,0,b	;volatile
 18961  011F20  D002               	goto	l396
 18962  011F22                     l395:
 18963                           
 18964                           ; BSR set to: 0
 18965                           ;inc\CANlib.h: 351: else
 18966                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 18967  011F22  010F               	movlb	15	; () banked
 18968  011F24  9140               	bcf	64,0,b	;volatile
 18969  011F26                     l396:
 18970                           
 18971                           ; BSR set to: 15
 18972                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 18973  011F26  0100               	movlb	0	; () banked
 18974  011F28  A378               	btfss	CANsendMessage@flags& (0+255),1,b
 18975  011F2A  D003               	goto	l397
 18976                           
 18977                           ; BSR set to: 0
 18978                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 18979  011F2C  010F               	movlb	15	; () banked
 18980  011F2E  8340               	bsf	64,1,b	;volatile
 18981  011F30  D002               	goto	l6401
 18982  011F32                     l397:
 18983                           
 18984                           ; BSR set to: 0
 18985                           ;inc\CANlib.h: 355: else
 18986                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 18987  011F32  010F               	movlb	15	; () banked
 18988  011F34  9340               	bcf	64,1,b	;volatile
 18989  011F36                     l6401:
 18990                           
 18991                           ; BSR set to: 15
 18992                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 18993  011F36  C075  FFD9         	movff	CANsendMessage@data,fsr2l
 18994  011F3A  C076  FFDA         	movff	CANsendMessage@data+1,fsr2h
 18995  011F3E  50DF               	movf	indf2,w,c
 18996  011F40  010F               	movlb	15	; () banked
 18997  011F42  6F46               	movwf	70,b	;volatile
 18998                           
 18999                           ; BSR set to: 15
 19000                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 19001  011F44  0100               	movlb	0	; () banked
 19002  011F46  EE20 F001          	lfsr	2,1
 19003  011F4A  5175               	movf	CANsendMessage@data& (0+255),w,b
 19004  011F4C  26D9               	addwf	fsr2l,f,c
 19005  011F4E  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19006  011F50  22DA               	addwfc	fsr2h,f,c
 19007  011F52  50DF               	movf	indf2,w,c
 19008  011F54  010F               	movlb	15	; () banked
 19009  011F56  6F47               	movwf	71,b	;volatile
 19010                           
 19011                           ; BSR set to: 15
 19012                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 19013  011F58  0100               	movlb	0	; () banked
 19014  011F5A  EE20 F002          	lfsr	2,2
 19015  011F5E  5175               	movf	CANsendMessage@data& (0+255),w,b
 19016  011F60  26D9               	addwf	fsr2l,f,c
 19017  011F62  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19018  011F64  22DA               	addwfc	fsr2h,f,c
 19019  011F66  50DF               	movf	indf2,w,c
 19020  011F68  010F               	movlb	15	; () banked
 19021  011F6A  6F48               	movwf	72,b	;volatile
 19022                           
 19023                           ; BSR set to: 15
 19024                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 19025  011F6C  0100               	movlb	0	; () banked
 19026  011F6E  EE20 F003          	lfsr	2,3
 19027  011F72  5175               	movf	CANsendMessage@data& (0+255),w,b
 19028  011F74  26D9               	addwf	fsr2l,f,c
 19029  011F76  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19030  011F78  22DA               	addwfc	fsr2h,f,c
 19031  011F7A  50DF               	movf	indf2,w,c
 19032  011F7C  010F               	movlb	15	; () banked
 19033  011F7E  6F49               	movwf	73,b	;volatile
 19034                           
 19035                           ; BSR set to: 15
 19036                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 19037  011F80  0100               	movlb	0	; () banked
 19038  011F82  EE20 F004          	lfsr	2,4
 19039  011F86  5175               	movf	CANsendMessage@data& (0+255),w,b
 19040  011F88  26D9               	addwf	fsr2l,f,c
 19041  011F8A  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19042  011F8C  22DA               	addwfc	fsr2h,f,c
 19043  011F8E  50DF               	movf	indf2,w,c
 19044  011F90  010F               	movlb	15	; () banked
 19045  011F92  6F4A               	movwf	74,b	;volatile
 19046                           
 19047                           ; BSR set to: 15
 19048                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 19049  011F94  0100               	movlb	0	; () banked
 19050  011F96  EE20 F005          	lfsr	2,5
 19051  011F9A  5175               	movf	CANsendMessage@data& (0+255),w,b
 19052  011F9C  26D9               	addwf	fsr2l,f,c
 19053  011F9E  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19054  011FA0  22DA               	addwfc	fsr2h,f,c
 19055  011FA2  50DF               	movf	indf2,w,c
 19056  011FA4  010F               	movlb	15	; () banked
 19057  011FA6  6F4B               	movwf	75,b	;volatile
 19058                           
 19059                           ; BSR set to: 15
 19060                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 19061  011FA8  0100               	movlb	0	; () banked
 19062  011FAA  EE20 F006          	lfsr	2,6
 19063  011FAE  5175               	movf	CANsendMessage@data& (0+255),w,b
 19064  011FB0  26D9               	addwf	fsr2l,f,c
 19065  011FB2  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19066  011FB4  22DA               	addwfc	fsr2h,f,c
 19067  011FB6  50DF               	movf	indf2,w,c
 19068  011FB8  010F               	movlb	15	; () banked
 19069  011FBA  6F4C               	movwf	76,b	;volatile
 19070                           
 19071                           ; BSR set to: 15
 19072                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 19073  011FBC  0100               	movlb	0	; () banked
 19074  011FBE  EE20 F007          	lfsr	2,7
 19075  011FC2  5175               	movf	CANsendMessage@data& (0+255),w,b
 19076  011FC4  26D9               	addwf	fsr2l,f,c
 19077  011FC6  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19078  011FC8  22DA               	addwfc	fsr2h,f,c
 19079  011FCA  50DF               	movf	indf2,w,c
 19080  011FCC  010F               	movlb	15	; () banked
 19081  011FCE  6F4D               	movwf	77,b	;volatile
 19082                           
 19083                           ; BSR set to: 15
 19084                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 19085  011FD0  010F               	movlb	15	; () banked
 19086  011FD2  8740               	bsf	64,3,b	;volatile
 19087                           
 19088                           ; BSR set to: 15
 19089                           ;inc\CANlib.h: 368: return;
 19090  011FD4  0012               	return	
 19091  011FD6                     l385:
 19092                           
 19093                           ; BSR set to: 15
 19094                           ;inc\CANlib.h: 369: }
 19095                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 19096  011FD6  010F               	movlb	15	; () banked
 19097  011FD8  B730               	btfsc	48,3,b	;volatile
 19098  011FDA  D13F               	goto	l400
 19099                           
 19100                           ; BSR set to: 15
 19101                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 19102  011FDC  C077  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
 19103                           
 19104                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 19105  011FE0  0100               	movlb	0	; () banked
 19106  011FE2  AD78               	btfss	CANsendMessage@flags& (0+255),6,b
 19107  011FE4  D003               	goto	l401
 19108                           
 19109                           ; BSR set to: 0
 19110                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 19111  011FE6  010F               	movlb	15	; () banked
 19112  011FE8  8D35               	bsf	53,6,b	;volatile
 19113  011FEA  D002               	goto	l402
 19114  011FEC                     l401:
 19115                           
 19116                           ; BSR set to: 0
 19117                           ;inc\CANlib.h: 378: else
 19118                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 19119  011FEC  010F               	movlb	15	; () banked
 19120  011FEE  9D35               	bcf	53,6,b	;volatile
 19121  011FF0                     l402:
 19122                           
 19123                           ; BSR set to: 15
 19124                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 19125  011FF0  0100               	movlb	0	; () banked
 19126  011FF2  A778               	btfss	CANsendMessage@flags& (0+255),3,b
 19127  011FF4  D079               	goto	l403
 19128                           
 19129                           ; BSR set to: 0
 19130                           ;inc\CANlib.h: 382: {
 19131                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 19132  011FF6  0100               	movlb	0	; () banked
 19133  011FF8  5171               	movf	CANsendMessage@identifier& (0+255),w,b
 19134  011FFA  0100               	movlb	0	; () banked
 19135  011FFC  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 19136  011FFE  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 19137  012000  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 19138  012002  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 19139                           
 19140                           ; BSR set to: 0
 19141                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 19142  012004  C07D  FF34         	movff	CANsendMessage@tamp,3892	;volatile
 19143                           
 19144                           ; BSR set to: 0
 19145                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 19146  012008  0E00               	movlw	0
 19147  01200A  0100               	movlb	0	; () banked
 19148  01200C  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 19149  01200E  0100               	movlb	0	; () banked
 19150  012010  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 19151  012012  0EFF               	movlw	255
 19152  012014  0100               	movlb	0	; () banked
 19153  012016  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 19154  012018  0100               	movlb	0	; () banked
 19155  01201A  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 19156  01201C  0E00               	movlw	0
 19157  01201E  0100               	movlb	0	; () banked
 19158  012020  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 19159  012022  0100               	movlb	0	; () banked
 19160  012024  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 19161  012026  0E00               	movlw	0
 19162  012028  0100               	movlb	0	; () banked
 19163  01202A  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 19164  01202C  0100               	movlb	0	; () banked
 19165  01202E  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 19166                           
 19167                           ; BSR set to: 0
 19168                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 19169  012030  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 19170  012034  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 19171  012038  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 19172  01203C  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 19173  012040  C07A  F079         	movff	??_CANsendMessage+1,??_CANsendMessage
 19174  012044  C07B  F07A         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 19175  012048  C07C  F07B         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 19176  01204C  0100               	movlb	0	; () banked
 19177  01204E  6B7C               	clrf	(??_CANsendMessage+3)& (0+255),b
 19178  012050  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 19179  012054  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 19180  012058  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 19181  01205C  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 19182                           
 19183                           ; BSR set to: 0
 19184                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 19185  012060  C07D  FF33         	movff	CANsendMessage@tamp,3891	;volatile
 19186                           
 19187                           ; BSR set to: 0
 19188                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 19189  012064  0E00               	movlw	0
 19190  012066  010F               	movlb	15	; () banked
 19191  012068  6F32               	movwf	50,b	;volatile
 19192                           
 19193                           ; BSR set to: 15
 19194                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 19195  01206A  010F               	movlb	15	; () banked
 19196  01206C  8732               	bsf	50,3,b	;volatile
 19197                           
 19198                           ; BSR set to: 15
 19199                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 19200  01206E  0100               	movlb	0	; () banked
 19201  012070  A173               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 19202  012072  D002               	goto	l404
 19203                           
 19204                           ; BSR set to: 0
 19205                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 19206  012074  010F               	movlb	15	; () banked
 19207  012076  8132               	bsf	50,0,b	;volatile
 19208  012078                     l404:
 19209                           
 19210                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 19211  012078  0100               	movlb	0	; () banked
 19212  01207A  A373               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 19213  01207C  D002               	goto	l405
 19214                           
 19215                           ; BSR set to: 0
 19216                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 19217  01207E  010F               	movlb	15	; () banked
 19218  012080  8332               	bsf	50,1,b	;volatile
 19219  012082                     l405:
 19220                           
 19221                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 19222  012082  0100               	movlb	0	; () banked
 19223  012084  A573               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 19224  012086  D002               	goto	l406
 19225                           
 19226                           ; BSR set to: 0
 19227                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 19228  012088  010F               	movlb	15	; () banked
 19229  01208A  8B32               	bsf	50,5,b	;volatile
 19230  01208C                     l406:
 19231                           
 19232                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 19233  01208C  0100               	movlb	0	; () banked
 19234  01208E  A773               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 19235  012090  D002               	goto	l407
 19236                           
 19237                           ; BSR set to: 0
 19238                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 19239  012092  010F               	movlb	15	; () banked
 19240  012094  8D32               	bsf	50,6,b	;volatile
 19241  012096                     l407:
 19242                           
 19243                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 19244  012096  0100               	movlb	0	; () banked
 19245  012098  A973               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 19246  01209A  D002               	goto	l6451
 19247                           
 19248                           ; BSR set to: 0
 19249                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 19250  01209C  010F               	movlb	15	; () banked
 19251  01209E  8F32               	bsf	50,7,b	;volatile
 19252  0120A0                     l6451:
 19253                           
 19254                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 19255  0120A0  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 19256  0120A4  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 19257  0120A8  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 19258  0120AC  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 19259  0120B0  0E16               	movlw	22
 19260  0120B2  D006               	goto	u8020
 19261  0120B4                     u8025:
 19262  0120B4  0100               	movlb	0	; () banked
 19263  0120B6  90D8               	bcf	status,0,c
 19264  0120B8  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 19265  0120BA  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 19266  0120BC  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 19267  0120BE  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 19268  0120C0                     u8020:
 19269  0120C0  2EE8               	decfsz	wreg,f,c
 19270  0120C2  D7F8               	goto	u8025
 19271  0120C4  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 19272  0120C8  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 19273  0120CC  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 19274  0120D0  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 19275                           
 19276                           ; BSR set to: 0
 19277                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 19278  0120D4  0100               	movlb	0	; () banked
 19279  0120D6  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 19280  0120D8  0100               	movlb	0	; () banked
 19281  0120DA  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 19282  0120DC  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 19283  0120DE  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 19284  0120E0  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 19285                           
 19286                           ; BSR set to: 0
 19287                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 19288  0120E2  C07D  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 19289                           
 19290                           ;inc\CANlib.h: 407: }
 19291  0120E6  D059               	goto	l6471
 19292  0120E8                     l403:
 19293                           
 19294                           ; BSR set to: 0
 19295                           ;inc\CANlib.h: 409: else
 19296                           ;inc\CANlib.h: 411: {
 19297                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 19298  0120E8  010F               	movlb	15	; () banked
 19299  0120EA  9732               	bcf	50,3,b	;volatile
 19300                           
 19301                           ; BSR set to: 15
 19302                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 19303  0120EC  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 19304  0120F0  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 19305  0120F4  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 19306  0120F8  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 19307  0120FC  0E04               	movlw	4
 19308  0120FE  D006               	goto	u8030
 19309  012100                     u8035:
 19310  012100  0100               	movlb	0	; () banked
 19311  012102  90D8               	bcf	status,0,c
 19312  012104  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 19313  012106  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 19314  012108  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 19315  01210A  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 19316  01210C                     u8030:
 19317  01210C  2EE8               	decfsz	wreg,f,c
 19318  01210E  D7F8               	goto	u8035
 19319  012110  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 19320  012114  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 19321  012118  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 19322  01211C  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 19323                           
 19324                           ; BSR set to: 0
 19325                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 19326  012120  0100               	movlb	0	; () banked
 19327  012122  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 19328  012124  0100               	movlb	0	; () banked
 19329  012126  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 19330  012128  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 19331  01212A  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 19332  01212C  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 19333                           
 19334                           ; BSR set to: 0
 19335                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 19336  01212E  C07D  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 19337                           
 19338                           ; BSR set to: 0
 19339                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 19340  012132  0E07               	movlw	7
 19341  012134  0100               	movlb	0	; () banked
 19342  012136  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 19343  012138  0100               	movlb	0	; () banked
 19344  01213A  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 19345  01213C  0E00               	movlw	0
 19346  01213E  0100               	movlb	0	; () banked
 19347  012140  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 19348  012142  0100               	movlb	0	; () banked
 19349  012144  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 19350  012146  0E00               	movlw	0
 19351  012148  0100               	movlb	0	; () banked
 19352  01214A  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 19353  01214C  0100               	movlb	0	; () banked
 19354  01214E  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 19355  012150  0E00               	movlw	0
 19356  012152  0100               	movlb	0	; () banked
 19357  012154  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 19358  012156  0100               	movlb	0	; () banked
 19359  012158  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 19360                           
 19361                           ; BSR set to: 0
 19362                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 19363  01215A  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 19364  01215E  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 19365  012162  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 19366  012166  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 19367  01216A  0E05               	movlw	5
 19368  01216C                     u8045:
 19369  01216C  90D8               	bcf	status,0,c
 19370  01216E  0100               	movlb	0	; () banked
 19371  012170  3779               	rlcf	??_CANsendMessage& (0+255),f,b
 19372  012172  377A               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 19373  012174  377B               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 19374  012176  377C               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 19375  012178  2EE8               	decfsz	wreg,f,c
 19376  01217A  D7F8               	goto	u8045
 19377  01217C  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 19378  012180  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 19379  012184  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 19380  012188  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 19381                           
 19382                           ; BSR set to: 0
 19383                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 19384  01218C  010F               	movlb	15	; () banked
 19385  01218E  5132               	movf	50,w,b	;volatile
 19386  012190  0B1F               	andlw	31
 19387  012192  010F               	movlb	15	; () banked
 19388  012194  6F32               	movwf	50,b	;volatile
 19389                           
 19390                           ; BSR set to: 15
 19391                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 19392  012196  C07D  FF32         	movff	CANsendMessage@tamp,3890	;volatile
 19393  01219A                     l6471:
 19394                           
 19395                           ;inc\CANlib.h: 422: }
 19396                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 19397  01219A  0100               	movlb	0	; () banked
 19398  01219C  A178               	btfss	CANsendMessage@flags& (0+255),0,b
 19399  01219E  D003               	goto	l410
 19400                           
 19401                           ; BSR set to: 0
 19402                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 19403  0121A0  010F               	movlb	15	; () banked
 19404  0121A2  8130               	bsf	48,0,b	;volatile
 19405  0121A4  D002               	goto	l411
 19406  0121A6                     l410:
 19407                           
 19408                           ; BSR set to: 0
 19409                           ;inc\CANlib.h: 426: else
 19410                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 19411  0121A6  010F               	movlb	15	; () banked
 19412  0121A8  9130               	bcf	48,0,b	;volatile
 19413  0121AA                     l411:
 19414                           
 19415                           ; BSR set to: 15
 19416                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 19417  0121AA  0100               	movlb	0	; () banked
 19418  0121AC  A378               	btfss	CANsendMessage@flags& (0+255),1,b
 19419  0121AE  D003               	goto	l412
 19420                           
 19421                           ; BSR set to: 0
 19422                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 19423  0121B0  010F               	movlb	15	; () banked
 19424  0121B2  8330               	bsf	48,1,b	;volatile
 19425  0121B4  D002               	goto	l6477
 19426  0121B6                     l412:
 19427                           
 19428                           ; BSR set to: 0
 19429                           ;inc\CANlib.h: 430: else
 19430                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 19431  0121B6  010F               	movlb	15	; () banked
 19432  0121B8  9330               	bcf	48,1,b	;volatile
 19433  0121BA                     l6477:
 19434                           
 19435                           ; BSR set to: 15
 19436                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 19437  0121BA  C075  FFD9         	movff	CANsendMessage@data,fsr2l
 19438  0121BE  C076  FFDA         	movff	CANsendMessage@data+1,fsr2h
 19439  0121C2  50DF               	movf	indf2,w,c
 19440  0121C4  010F               	movlb	15	; () banked
 19441  0121C6  6F36               	movwf	54,b	;volatile
 19442                           
 19443                           ; BSR set to: 15
 19444                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 19445  0121C8  0100               	movlb	0	; () banked
 19446  0121CA  EE20 F001          	lfsr	2,1
 19447  0121CE  5175               	movf	CANsendMessage@data& (0+255),w,b
 19448  0121D0  26D9               	addwf	fsr2l,f,c
 19449  0121D2  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19450  0121D4  22DA               	addwfc	fsr2h,f,c
 19451  0121D6  50DF               	movf	indf2,w,c
 19452  0121D8  010F               	movlb	15	; () banked
 19453  0121DA  6F37               	movwf	55,b	;volatile
 19454                           
 19455                           ; BSR set to: 15
 19456                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 19457  0121DC  0100               	movlb	0	; () banked
 19458  0121DE  EE20 F002          	lfsr	2,2
 19459  0121E2  5175               	movf	CANsendMessage@data& (0+255),w,b
 19460  0121E4  26D9               	addwf	fsr2l,f,c
 19461  0121E6  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19462  0121E8  22DA               	addwfc	fsr2h,f,c
 19463  0121EA  50DF               	movf	indf2,w,c
 19464  0121EC  010F               	movlb	15	; () banked
 19465  0121EE  6F38               	movwf	56,b	;volatile
 19466                           
 19467                           ; BSR set to: 15
 19468                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 19469  0121F0  0100               	movlb	0	; () banked
 19470  0121F2  EE20 F003          	lfsr	2,3
 19471  0121F6  5175               	movf	CANsendMessage@data& (0+255),w,b
 19472  0121F8  26D9               	addwf	fsr2l,f,c
 19473  0121FA  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19474  0121FC  22DA               	addwfc	fsr2h,f,c
 19475  0121FE  50DF               	movf	indf2,w,c
 19476  012200  010F               	movlb	15	; () banked
 19477  012202  6F39               	movwf	57,b	;volatile
 19478                           
 19479                           ; BSR set to: 15
 19480                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 19481  012204  0100               	movlb	0	; () banked
 19482  012206  EE20 F004          	lfsr	2,4
 19483  01220A  5175               	movf	CANsendMessage@data& (0+255),w,b
 19484  01220C  26D9               	addwf	fsr2l,f,c
 19485  01220E  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19486  012210  22DA               	addwfc	fsr2h,f,c
 19487  012212  50DF               	movf	indf2,w,c
 19488  012214  010F               	movlb	15	; () banked
 19489  012216  6F3A               	movwf	58,b	;volatile
 19490                           
 19491                           ; BSR set to: 15
 19492                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 19493  012218  0100               	movlb	0	; () banked
 19494  01221A  EE20 F005          	lfsr	2,5
 19495  01221E  5175               	movf	CANsendMessage@data& (0+255),w,b
 19496  012220  26D9               	addwf	fsr2l,f,c
 19497  012222  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19498  012224  22DA               	addwfc	fsr2h,f,c
 19499  012226  50DF               	movf	indf2,w,c
 19500  012228  010F               	movlb	15	; () banked
 19501  01222A  6F3B               	movwf	59,b	;volatile
 19502                           
 19503                           ; BSR set to: 15
 19504                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 19505  01222C  0100               	movlb	0	; () banked
 19506  01222E  EE20 F006          	lfsr	2,6
 19507  012232  5175               	movf	CANsendMessage@data& (0+255),w,b
 19508  012234  26D9               	addwf	fsr2l,f,c
 19509  012236  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19510  012238  22DA               	addwfc	fsr2h,f,c
 19511  01223A  50DF               	movf	indf2,w,c
 19512  01223C  010F               	movlb	15	; () banked
 19513  01223E  6F3C               	movwf	60,b	;volatile
 19514                           
 19515                           ; BSR set to: 15
 19516                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 19517  012240  0100               	movlb	0	; () banked
 19518  012242  EE20 F007          	lfsr	2,7
 19519  012246  5175               	movf	CANsendMessage@data& (0+255),w,b
 19520  012248  26D9               	addwf	fsr2l,f,c
 19521  01224A  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19522  01224C  22DA               	addwfc	fsr2h,f,c
 19523  01224E  50DF               	movf	indf2,w,c
 19524  012250  010F               	movlb	15	; () banked
 19525  012252  6F3D               	movwf	61,b	;volatile
 19526                           
 19527                           ; BSR set to: 15
 19528                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 19529  012254  010F               	movlb	15	; () banked
 19530  012256  8730               	bsf	48,3,b	;volatile
 19531                           
 19532                           ; BSR set to: 15
 19533                           ;inc\CANlib.h: 444: return;
 19534  012258  0012               	return	
 19535  01225A                     l400:
 19536                           
 19537                           ; BSR set to: 15
 19538                           ;inc\CANlib.h: 445: }
 19539                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 19540  01225A  010F               	movlb	15	; () banked
 19541  01225C  B720               	btfsc	32,3,b	;volatile
 19542  01225E  0012               	return	
 19543                           
 19544                           ; BSR set to: 15
 19545                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 19546  012260  C077  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
 19547                           
 19548                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 19549  012264  0100               	movlb	0	; () banked
 19550  012266  AD78               	btfss	CANsendMessage@flags& (0+255),6,b
 19551  012268  D003               	goto	l415
 19552                           
 19553                           ; BSR set to: 0
 19554                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 19555  01226A  010F               	movlb	15	; () banked
 19556  01226C  8D25               	bsf	37,6,b	;volatile
 19557  01226E  D002               	goto	l416
 19558  012270                     l415:
 19559                           
 19560                           ; BSR set to: 0
 19561                           ;inc\CANlib.h: 454: else
 19562                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 19563  012270  010F               	movlb	15	; () banked
 19564  012272  9D25               	bcf	37,6,b	;volatile
 19565  012274                     l416:
 19566                           
 19567                           ; BSR set to: 15
 19568                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 19569  012274  0100               	movlb	0	; () banked
 19570  012276  A778               	btfss	CANsendMessage@flags& (0+255),3,b
 19571  012278  D079               	goto	l417
 19572                           
 19573                           ; BSR set to: 0
 19574                           ;inc\CANlib.h: 458: {
 19575                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 19576  01227A  0100               	movlb	0	; () banked
 19577  01227C  5171               	movf	CANsendMessage@identifier& (0+255),w,b
 19578  01227E  0100               	movlb	0	; () banked
 19579  012280  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 19580  012282  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 19581  012284  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 19582  012286  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 19583                           
 19584                           ; BSR set to: 0
 19585                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 19586  012288  C07D  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 19587                           
 19588                           ; BSR set to: 0
 19589                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 19590  01228C  0E00               	movlw	0
 19591  01228E  0100               	movlb	0	; () banked
 19592  012290  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 19593  012292  0100               	movlb	0	; () banked
 19594  012294  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 19595  012296  0EFF               	movlw	255
 19596  012298  0100               	movlb	0	; () banked
 19597  01229A  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 19598  01229C  0100               	movlb	0	; () banked
 19599  01229E  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 19600  0122A0  0E00               	movlw	0
 19601  0122A2  0100               	movlb	0	; () banked
 19602  0122A4  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 19603  0122A6  0100               	movlb	0	; () banked
 19604  0122A8  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 19605  0122AA  0E00               	movlw	0
 19606  0122AC  0100               	movlb	0	; () banked
 19607  0122AE  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 19608  0122B0  0100               	movlb	0	; () banked
 19609  0122B2  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 19610                           
 19611                           ; BSR set to: 0
 19612                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 19613  0122B4  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 19614  0122B8  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 19615  0122BC  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 19616  0122C0  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 19617  0122C4  C07A  F079         	movff	??_CANsendMessage+1,??_CANsendMessage
 19618  0122C8  C07B  F07A         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 19619  0122CC  C07C  F07B         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 19620  0122D0  0100               	movlb	0	; () banked
 19621  0122D2  6B7C               	clrf	(??_CANsendMessage+3)& (0+255),b
 19622  0122D4  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 19623  0122D8  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 19624  0122DC  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 19625  0122E0  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 19626                           
 19627                           ; BSR set to: 0
 19628                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 19629  0122E4  C07D  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 19630                           
 19631                           ; BSR set to: 0
 19632                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 19633  0122E8  0E00               	movlw	0
 19634  0122EA  010F               	movlb	15	; () banked
 19635  0122EC  6F22               	movwf	34,b	;volatile
 19636                           
 19637                           ; BSR set to: 15
 19638                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 19639  0122EE  010F               	movlb	15	; () banked
 19640  0122F0  8722               	bsf	34,3,b	;volatile
 19641                           
 19642                           ; BSR set to: 15
 19643                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 19644  0122F2  0100               	movlb	0	; () banked
 19645  0122F4  A173               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 19646  0122F6  D002               	goto	l418
 19647                           
 19648                           ; BSR set to: 0
 19649                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 19650  0122F8  010F               	movlb	15	; () banked
 19651  0122FA  8122               	bsf	34,0,b	;volatile
 19652  0122FC                     l418:
 19653                           
 19654                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 19655  0122FC  0100               	movlb	0	; () banked
 19656  0122FE  A373               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 19657  012300  D002               	goto	l419
 19658                           
 19659                           ; BSR set to: 0
 19660                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 19661  012302  010F               	movlb	15	; () banked
 19662  012304  8322               	bsf	34,1,b	;volatile
 19663  012306                     l419:
 19664                           
 19665                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 19666  012306  0100               	movlb	0	; () banked
 19667  012308  A573               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 19668  01230A  D002               	goto	l420
 19669                           
 19670                           ; BSR set to: 0
 19671                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 19672  01230C  010F               	movlb	15	; () banked
 19673  01230E  8B22               	bsf	34,5,b	;volatile
 19674  012310                     l420:
 19675                           
 19676                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 19677  012310  0100               	movlb	0	; () banked
 19678  012312  A773               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 19679  012314  D002               	goto	l421
 19680                           
 19681                           ; BSR set to: 0
 19682                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 19683  012316  010F               	movlb	15	; () banked
 19684  012318  8D22               	bsf	34,6,b	;volatile
 19685  01231A                     l421:
 19686                           
 19687                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 19688  01231A  0100               	movlb	0	; () banked
 19689  01231C  A973               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 19690  01231E  D002               	goto	l6527
 19691                           
 19692                           ; BSR set to: 0
 19693                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 19694  012320  010F               	movlb	15	; () banked
 19695  012322  8F22               	bsf	34,7,b	;volatile
 19696  012324                     l6527:
 19697                           
 19698                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 19699  012324  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 19700  012328  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 19701  01232C  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 19702  012330  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 19703  012334  0E16               	movlw	22
 19704  012336  D006               	goto	u8150
 19705  012338                     u8155:
 19706  012338  0100               	movlb	0	; () banked
 19707  01233A  90D8               	bcf	status,0,c
 19708  01233C  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 19709  01233E  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 19710  012340  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 19711  012342  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 19712  012344                     u8150:
 19713  012344  2EE8               	decfsz	wreg,f,c
 19714  012346  D7F8               	goto	u8155
 19715  012348  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 19716  01234C  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 19717  012350  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 19718  012354  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 19719                           
 19720                           ; BSR set to: 0
 19721                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 19722  012358  0100               	movlb	0	; () banked
 19723  01235A  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 19724  01235C  0100               	movlb	0	; () banked
 19725  01235E  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 19726  012360  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 19727  012362  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 19728  012364  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 19729                           
 19730                           ; BSR set to: 0
 19731                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 19732  012366  C07D  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 19733                           
 19734                           ;inc\CANlib.h: 483: }
 19735  01236A  D059               	goto	l6547
 19736  01236C                     l417:
 19737                           
 19738                           ; BSR set to: 0
 19739                           ;inc\CANlib.h: 485: else
 19740                           ;inc\CANlib.h: 487: {
 19741                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 19742  01236C  010F               	movlb	15	; () banked
 19743  01236E  9722               	bcf	34,3,b	;volatile
 19744                           
 19745                           ; BSR set to: 15
 19746                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 19747  012370  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 19748  012374  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 19749  012378  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 19750  01237C  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 19751  012380  0E04               	movlw	4
 19752  012382  D006               	goto	u8160
 19753  012384                     u8165:
 19754  012384  0100               	movlb	0	; () banked
 19755  012386  90D8               	bcf	status,0,c
 19756  012388  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 19757  01238A  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 19758  01238C  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 19759  01238E  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 19760  012390                     u8160:
 19761  012390  2EE8               	decfsz	wreg,f,c
 19762  012392  D7F8               	goto	u8165
 19763  012394  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 19764  012398  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 19765  01239C  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 19766  0123A0  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 19767                           
 19768                           ; BSR set to: 0
 19769                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 19770  0123A4  0100               	movlb	0	; () banked
 19771  0123A6  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 19772  0123A8  0100               	movlb	0	; () banked
 19773  0123AA  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 19774  0123AC  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 19775  0123AE  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 19776  0123B0  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 19777                           
 19778                           ; BSR set to: 0
 19779                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 19780  0123B2  C07D  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 19781                           
 19782                           ; BSR set to: 0
 19783                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 19784  0123B6  0E07               	movlw	7
 19785  0123B8  0100               	movlb	0	; () banked
 19786  0123BA  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 19787  0123BC  0100               	movlb	0	; () banked
 19788  0123BE  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 19789  0123C0  0E00               	movlw	0
 19790  0123C2  0100               	movlb	0	; () banked
 19791  0123C4  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 19792  0123C6  0100               	movlb	0	; () banked
 19793  0123C8  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 19794  0123CA  0E00               	movlw	0
 19795  0123CC  0100               	movlb	0	; () banked
 19796  0123CE  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 19797  0123D0  0100               	movlb	0	; () banked
 19798  0123D2  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 19799  0123D4  0E00               	movlw	0
 19800  0123D6  0100               	movlb	0	; () banked
 19801  0123D8  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 19802  0123DA  0100               	movlb	0	; () banked
 19803  0123DC  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 19804                           
 19805                           ; BSR set to: 0
 19806                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 19807  0123DE  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 19808  0123E2  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 19809  0123E6  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 19810  0123EA  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 19811  0123EE  0E05               	movlw	5
 19812  0123F0                     u8175:
 19813  0123F0  90D8               	bcf	status,0,c
 19814  0123F2  0100               	movlb	0	; () banked
 19815  0123F4  3779               	rlcf	??_CANsendMessage& (0+255),f,b
 19816  0123F6  377A               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 19817  0123F8  377B               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 19818  0123FA  377C               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 19819  0123FC  2EE8               	decfsz	wreg,f,c
 19820  0123FE  D7F8               	goto	u8175
 19821  012400  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 19822  012404  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 19823  012408  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 19824  01240C  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 19825                           
 19826                           ; BSR set to: 0
 19827                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 19828  012410  010F               	movlb	15	; () banked
 19829  012412  5122               	movf	34,w,b	;volatile
 19830  012414  0B1F               	andlw	31
 19831  012416  010F               	movlb	15	; () banked
 19832  012418  6F22               	movwf	34,b	;volatile
 19833                           
 19834                           ; BSR set to: 15
 19835                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 19836  01241A  C07D  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 19837  01241E                     l6547:
 19838                           
 19839                           ;inc\CANlib.h: 498: }
 19840                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 19841  01241E  0100               	movlb	0	; () banked
 19842  012420  A178               	btfss	CANsendMessage@flags& (0+255),0,b
 19843  012422  D003               	goto	l424
 19844                           
 19845                           ; BSR set to: 0
 19846                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 19847  012424  010F               	movlb	15	; () banked
 19848  012426  8120               	bsf	32,0,b	;volatile
 19849  012428  D002               	goto	l425
 19850  01242A                     l424:
 19851                           
 19852                           ; BSR set to: 0
 19853                           ;inc\CANlib.h: 502: else
 19854                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 19855  01242A  010F               	movlb	15	; () banked
 19856  01242C  9120               	bcf	32,0,b	;volatile
 19857  01242E                     l425:
 19858                           
 19859                           ; BSR set to: 15
 19860                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 19861  01242E  0100               	movlb	0	; () banked
 19862  012430  A378               	btfss	CANsendMessage@flags& (0+255),1,b
 19863  012432  D003               	goto	l426
 19864                           
 19865                           ; BSR set to: 0
 19866                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 19867  012434  010F               	movlb	15	; () banked
 19868  012436  8320               	bsf	32,1,b	;volatile
 19869  012438  D002               	goto	l6553
 19870  01243A                     l426:
 19871                           
 19872                           ; BSR set to: 0
 19873                           ;inc\CANlib.h: 506: else
 19874                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 19875  01243A  010F               	movlb	15	; () banked
 19876  01243C  9320               	bcf	32,1,b	;volatile
 19877  01243E                     l6553:
 19878                           
 19879                           ; BSR set to: 15
 19880                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 19881  01243E  C075  FFD9         	movff	CANsendMessage@data,fsr2l
 19882  012442  C076  FFDA         	movff	CANsendMessage@data+1,fsr2h
 19883  012446  50DF               	movf	indf2,w,c
 19884  012448  010F               	movlb	15	; () banked
 19885  01244A  6F26               	movwf	38,b	;volatile
 19886                           
 19887                           ; BSR set to: 15
 19888                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 19889  01244C  0100               	movlb	0	; () banked
 19890  01244E  EE20 F001          	lfsr	2,1
 19891  012452  5175               	movf	CANsendMessage@data& (0+255),w,b
 19892  012454  26D9               	addwf	fsr2l,f,c
 19893  012456  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19894  012458  22DA               	addwfc	fsr2h,f,c
 19895  01245A  50DF               	movf	indf2,w,c
 19896  01245C  010F               	movlb	15	; () banked
 19897  01245E  6F27               	movwf	39,b	;volatile
 19898                           
 19899                           ; BSR set to: 15
 19900                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 19901  012460  0100               	movlb	0	; () banked
 19902  012462  EE20 F002          	lfsr	2,2
 19903  012466  5175               	movf	CANsendMessage@data& (0+255),w,b
 19904  012468  26D9               	addwf	fsr2l,f,c
 19905  01246A  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19906  01246C  22DA               	addwfc	fsr2h,f,c
 19907  01246E  50DF               	movf	indf2,w,c
 19908  012470  010F               	movlb	15	; () banked
 19909  012472  6F28               	movwf	40,b	;volatile
 19910                           
 19911                           ; BSR set to: 15
 19912                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 19913  012474  0100               	movlb	0	; () banked
 19914  012476  EE20 F003          	lfsr	2,3
 19915  01247A  5175               	movf	CANsendMessage@data& (0+255),w,b
 19916  01247C  26D9               	addwf	fsr2l,f,c
 19917  01247E  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19918  012480  22DA               	addwfc	fsr2h,f,c
 19919  012482  50DF               	movf	indf2,w,c
 19920  012484  010F               	movlb	15	; () banked
 19921  012486  6F29               	movwf	41,b	;volatile
 19922                           
 19923                           ; BSR set to: 15
 19924                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 19925  012488  0100               	movlb	0	; () banked
 19926  01248A  EE20 F004          	lfsr	2,4
 19927  01248E  5175               	movf	CANsendMessage@data& (0+255),w,b
 19928  012490  26D9               	addwf	fsr2l,f,c
 19929  012492  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19930  012494  22DA               	addwfc	fsr2h,f,c
 19931  012496  50DF               	movf	indf2,w,c
 19932  012498  010F               	movlb	15	; () banked
 19933  01249A  6F2A               	movwf	42,b	;volatile
 19934                           
 19935                           ; BSR set to: 15
 19936                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 19937  01249C  0100               	movlb	0	; () banked
 19938  01249E  EE20 F005          	lfsr	2,5
 19939  0124A2  5175               	movf	CANsendMessage@data& (0+255),w,b
 19940  0124A4  26D9               	addwf	fsr2l,f,c
 19941  0124A6  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19942  0124A8  22DA               	addwfc	fsr2h,f,c
 19943  0124AA  50DF               	movf	indf2,w,c
 19944  0124AC  010F               	movlb	15	; () banked
 19945  0124AE  6F2B               	movwf	43,b	;volatile
 19946                           
 19947                           ; BSR set to: 15
 19948                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 19949  0124B0  0100               	movlb	0	; () banked
 19950  0124B2  EE20 F006          	lfsr	2,6
 19951  0124B6  5175               	movf	CANsendMessage@data& (0+255),w,b
 19952  0124B8  26D9               	addwf	fsr2l,f,c
 19953  0124BA  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19954  0124BC  22DA               	addwfc	fsr2h,f,c
 19955  0124BE  50DF               	movf	indf2,w,c
 19956  0124C0  010F               	movlb	15	; () banked
 19957  0124C2  6F2C               	movwf	44,b	;volatile
 19958                           
 19959                           ; BSR set to: 15
 19960                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 19961  0124C4  0100               	movlb	0	; () banked
 19962  0124C6  EE20 F007          	lfsr	2,7
 19963  0124CA  5175               	movf	CANsendMessage@data& (0+255),w,b
 19964  0124CC  26D9               	addwf	fsr2l,f,c
 19965  0124CE  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19966  0124D0  22DA               	addwfc	fsr2h,f,c
 19967  0124D2  50DF               	movf	indf2,w,c
 19968  0124D4  010F               	movlb	15	; () banked
 19969  0124D6  6F2D               	movwf	45,b	;volatile
 19970                           
 19971                           ; BSR set to: 15
 19972                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 19973  0124D8  010F               	movlb	15	; () banked
 19974  0124DA  8720               	bsf	32,3,b	;volatile
 19975                           
 19976                           ; BSR set to: 15
 19977                           ;inc\CANlib.h: 520: return;
 19978  0124DC  0012               	return	
 19979  0124DE                     __end_of_CANsendMessage:
 19980                           	opt stack 0
 19981                           tblptru	equ	0xFF8
 19982                           tblptrh	equ	0xFF7
 19983                           tblptrl	equ	0xFF6
 19984                           tablat	equ	0xFF5
 19985                           prodh	equ	0xFF4
 19986                           prodl	equ	0xFF3
 19987                           intcon	equ	0xFF2
 19988                           postinc0	equ	0xFEE
 19989                           wreg	equ	0xFE8
 19990                           indf1	equ	0xFE7
 19991                           plusw1	equ	0xFE3
 19992                           fsr1h	equ	0xFE2
 19993                           fsr1l	equ	0xFE1
 19994                           indf2	equ	0xFDF
 19995                           postinc2	equ	0xFDE
 19996                           plusw2	equ	0xFDB
 19997                           fsr2h	equ	0xFDA
 19998                           fsr2l	equ	0xFD9
 19999                           status	equ	0xFD8
 20000                           
 20001 ;; *************** function _CANisTxReady *****************
 20002 ;; Defined at:
 20003 ;;		line 1154 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 20004 ;; Parameters:    Size  Location     Type
 20005 ;;		None
 20006 ;; Auto vars:     Size  Location     Type
 20007 ;;		None
 20008 ;; Return value:  Size  Location     Type
 20009 ;;                  1    wreg      unsigned char 
 20010 ;; Registers used:
 20011 ;;		wreg, status,2
 20012 ;; Tracked objects:
 20013 ;;		On entry : 0/0
 20014 ;;		On exit  : 0/0
 20015 ;;		Unchanged: 0/0
 20016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20018 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20020 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20021 ;;Total ram usage:        1 bytes
 20022 ;; Hardware stack levels used:    1
 20023 ;; Hardware stack levels required when called:    3
 20024 ;; This function calls:
 20025 ;;		Nothing
 20026 ;; This function is called by:
 20027 ;;		_main
 20028 ;;		_LCD_Handler
 20029 ;;		_CAN_Tx
 20030 ;; This function uses a non-reentrant model
 20031 ;;
 20032                           
 20033                           	psect	text56
 20034  01679E                     __ptext56:
 20035                           	opt stack 0
 20036  01679E                     _CANisTxReady:
 20037                           	opt stack 26
 20038                           
 20039                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 20040                           
 20041                           ; BSR set to: 15
 20042                           ;incstack = 0
 20043  01679E  0E01               	movlw	1
 20044  0167A0  0100               	movlb	0	; () banked
 20045  0167A2  6F71               	movwf	_CANisTxReady$3168& (0+255),b
 20046                           
 20047                           ; BSR set to: 0
 20048  0167A4  010F               	movlb	15	; () banked
 20049  0167A6  A740               	btfss	64,3,b	;volatile
 20050  0167A8  D009               	goto	l578
 20051                           
 20052                           ; BSR set to: 15
 20053  0167AA  010F               	movlb	15	; () banked
 20054  0167AC  A730               	btfss	48,3,b	;volatile
 20055  0167AE  D006               	goto	l578
 20056                           
 20057                           ; BSR set to: 15
 20058  0167B0  010F               	movlb	15	; () banked
 20059  0167B2  A720               	btfss	32,3,b	;volatile
 20060  0167B4  D003               	goto	l578
 20061                           
 20062                           ; BSR set to: 15
 20063  0167B6  0E00               	movlw	0
 20064  0167B8  0100               	movlb	0	; () banked
 20065  0167BA  6F71               	movwf	_CANisTxReady$3168& (0+255),b
 20066  0167BC                     l578:
 20067  0167BC  0100               	movlb	0	; () banked
 20068  0167BE  5171               	movf	_CANisTxReady$3168& (0+255),w,b
 20069  0167C0  0012               	return	
 20070  0167C2                     __end_of_CANisTxReady:
 20071                           	opt stack 0
 20072                           tblptru	equ	0xFF8
 20073                           tblptrh	equ	0xFF7
 20074                           tblptrl	equ	0xFF6
 20075                           tablat	equ	0xFF5
 20076                           prodh	equ	0xFF4
 20077                           prodl	equ	0xFF3
 20078                           intcon	equ	0xFF2
 20079                           postinc0	equ	0xFEE
 20080                           wreg	equ	0xFE8
 20081                           indf1	equ	0xFE7
 20082                           plusw1	equ	0xFE3
 20083                           fsr1h	equ	0xFE2
 20084                           fsr1l	equ	0xFE1
 20085                           indf2	equ	0xFDF
 20086                           postinc2	equ	0xFDE
 20087                           plusw2	equ	0xFDB
 20088                           fsr2h	equ	0xFDA
 20089                           fsr2l	equ	0xFD9
 20090                           status	equ	0xFD8
 20091                           
 20092 ;; *************** function _ISR_bassa *****************
 20093 ;; Defined at:
 20094 ;;		line 209 in file "RemoteCan.c"
 20095 ;; Parameters:    Size  Location     Type
 20096 ;;		None
 20097 ;; Auto vars:     Size  Location     Type
 20098 ;;		None
 20099 ;; Return value:  Size  Location     Type
 20100 ;;                  1    wreg      void 
 20101 ;; Registers used:
 20102 ;;		wreg, status,2, status,0
 20103 ;; Tracked objects:
 20104 ;;		On entry : 0/0
 20105 ;;		On exit  : 0/0
 20106 ;;		Unchanged: 0/0
 20107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20110 ;;      Temps:          0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20111 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20112 ;;Total ram usage:       17 bytes
 20113 ;; Hardware stack levels used:    1
 20114 ;; Hardware stack levels required when called:    2
 20115 ;; This function calls:
 20116 ;;		Nothing
 20117 ;; This function is called by:
 20118 ;;		Interrupt level 1
 20119 ;; This function uses a non-reentrant model
 20120 ;;
 20121                           
 20122                           	psect	intcodelo
 20123  000018                     __pintcodelo:
 20124                           	opt stack 0
 20125  000018                     _ISR_bassa:
 20126                           	opt stack 20
 20127                           
 20128                           ; BSR set to: 0
 20129                           ;incstack = 0
 20130  000018  804B               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 20131  00001A  CFD8 F060          	movff	status,??_ISR_bassa
 20132  00001E  CFE8 F061          	movff	wreg,??_ISR_bassa+1
 20133  000022  CFE0 F062          	movff	bsr,??_ISR_bassa+2
 20134  000026  CFFA F063          	movff	pclath,??_ISR_bassa+3
 20135  00002A  CFFB F064          	movff	pclatu,??_ISR_bassa+4
 20136  00002E  CFE9 F065          	movff	fsr0l,??_ISR_bassa+5
 20137  000032  CFEA F066          	movff	fsr0h,??_ISR_bassa+6
 20138  000036  CFE1 F067          	movff	fsr1l,??_ISR_bassa+7
 20139  00003A  CFE2 F068          	movff	fsr1h,??_ISR_bassa+8
 20140  00003E  CFD9 F069          	movff	fsr2l,??_ISR_bassa+9
 20141  000042  CFDA F06A          	movff	fsr2h,??_ISR_bassa+10
 20142  000046  CFF3 F06B          	movff	prodl,??_ISR_bassa+11
 20143  00004A  CFF4 F06C          	movff	prodh,??_ISR_bassa+12
 20144  00004E  CFF6 F06D          	movff	tblptrl,??_ISR_bassa+13
 20145  000052  CFF7 F06E          	movff	tblptrh,??_ISR_bassa+14
 20146  000056  CFF8 F06F          	movff	tblptru,??_ISR_bassa+15
 20147  00005A  CFF5 F070          	movff	tablat,??_ISR_bassa+16
 20148                           
 20149                           ;RemoteCan.c: 210: if (PIR2bits.TMR3IF == 1) {
 20150  00005E  A2A1               	btfss	4001,1,c	;volatile
 20151  000060  D00B               	goto	i1l817
 20152                           
 20153                           ;RemoteCan.c: 211: time_counter++;
 20154  000062  0E01               	movlw	1
 20155  000064  2619               	addwf	_time_counter,f,c	;volatile
 20156  000066  0E00               	movlw	0
 20157  000068  221A               	addwfc	_time_counter+1,f,c	;volatile
 20158  00006A  221B               	addwfc	_time_counter+2,f,c	;volatile
 20159  00006C  221C               	addwfc	_time_counter+3,f,c	;volatile
 20160                           
 20161                           ;RemoteCan.c: 212: TMR3H = 0x63;
 20162  00006E  0E63               	movlw	99
 20163  000070  6EB3               	movwf	4019,c	;volatile
 20164                           
 20165                           ;RemoteCan.c: 213: TMR3L = 0xC0;
 20166  000072  0EC0               	movlw	192
 20167  000074  6EB2               	movwf	4018,c	;volatile
 20168                           
 20169                           ;RemoteCan.c: 214: PIR2bits.TMR3IF = 0;
 20170  000076  92A1               	bcf	4001,1,c	;volatile
 20171  000078                     i1l817:
 20172  000078  C070  FFF5         	movff	??_ISR_bassa+16,tablat
 20173  00007C  C06F  FFF8         	movff	??_ISR_bassa+15,tblptru
 20174  000080  C06E  FFF7         	movff	??_ISR_bassa+14,tblptrh
 20175  000084  C06D  FFF6         	movff	??_ISR_bassa+13,tblptrl
 20176  000088  C06C  FFF4         	movff	??_ISR_bassa+12,prodh
 20177  00008C  C06B  FFF3         	movff	??_ISR_bassa+11,prodl
 20178  000090  C06A  FFDA         	movff	??_ISR_bassa+10,fsr2h
 20179  000094  C069  FFD9         	movff	??_ISR_bassa+9,fsr2l
 20180  000098  C068  FFE2         	movff	??_ISR_bassa+8,fsr1h
 20181  00009C  C067  FFE1         	movff	??_ISR_bassa+7,fsr1l
 20182  0000A0  C066  FFEA         	movff	??_ISR_bassa+6,fsr0h
 20183  0000A4  C065  FFE9         	movff	??_ISR_bassa+5,fsr0l
 20184  0000A8  C064  FFFB         	movff	??_ISR_bassa+4,pclatu
 20185  0000AC  C063  FFFA         	movff	??_ISR_bassa+3,pclath
 20186  0000B0  C062  FFE0         	movff	??_ISR_bassa+2,bsr
 20187  0000B4  C061  FFE8         	movff	??_ISR_bassa+1,wreg
 20188  0000B8  C060  FFD8         	movff	??_ISR_bassa,status
 20189  0000BC  904B               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 20190  0000BE  0010               	retfie	
 20191  0000C0                     __end_of_ISR_bassa:
 20192                           	opt stack 0
 20193                           pclatu	equ	0xFFB
 20194                           pclath	equ	0xFFA
 20195                           tblptru	equ	0xFF8
 20196                           tblptrh	equ	0xFF7
 20197                           tblptrl	equ	0xFF6
 20198                           tablat	equ	0xFF5
 20199                           prodh	equ	0xFF4
 20200                           prodl	equ	0xFF3
 20201                           intcon	equ	0xFF2
 20202                           postinc0	equ	0xFEE
 20203                           fsr0h	equ	0xFEA
 20204                           fsr0l	equ	0xFE9
 20205                           wreg	equ	0xFE8
 20206                           indf1	equ	0xFE7
 20207                           plusw1	equ	0xFE3
 20208                           fsr1h	equ	0xFE2
 20209                           fsr1l	equ	0xFE1
 20210                           bsr	equ	0xFE0
 20211                           indf2	equ	0xFDF
 20212                           postinc2	equ	0xFDE
 20213                           plusw2	equ	0xFDB
 20214                           fsr2h	equ	0xFDA
 20215                           fsr2l	equ	0xFD9
 20216                           status	equ	0xFD8
 20217                           
 20218 ;; *************** function _ISR_alta *****************
 20219 ;; Defined at:
 20220 ;;		line 126 in file "RemoteCan.c"
 20221 ;; Parameters:    Size  Location     Type
 20222 ;;		None
 20223 ;; Auto vars:     Size  Location     Type
 20224 ;;		None
 20225 ;; Return value:  Size  Location     Type
 20226 ;;                  1    wreg      void 
 20227 ;; Registers used:
 20228 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20229 ;; Tracked objects:
 20230 ;;		On entry : 0/0
 20231 ;;		On exit  : 0/0
 20232 ;;		Unchanged: 0/0
 20233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20236 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20237 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20238 ;;Total ram usage:       18 bytes
 20239 ;; Hardware stack levels used:    1
 20240 ;; Hardware stack levels required when called:    1
 20241 ;; This function calls:
 20242 ;;		_CANisRxReady
 20243 ;;		_CANreceiveMessage
 20244 ;;		i2_CANisTxReady
 20245 ;;		i2_CANsendMessage
 20246 ;; This function is called by:
 20247 ;;		Interrupt level 2
 20248 ;; This function uses a non-reentrant model
 20249 ;;
 20250                           
 20251                           	psect	intcode
 20252  000008                     __pintcode:
 20253                           	opt stack 0
 20254  000008                     _ISR_alta:
 20255                           	opt stack 20
 20256                           
 20257                           ;incstack = 0
 20258  000008  824B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 20259  00000A  CFFA F03A          	movff	pclath,??_ISR_alta+4
 20260  00000E  CFFB F03B          	movff	pclatu,??_ISR_alta+5
 20261  000012  EFDD  F0A5         	goto	int_func
 20262                           pclatu	equ	0xFFB
 20263                           pclath	equ	0xFFA
 20264                           tblptru	equ	0xFF8
 20265                           tblptrh	equ	0xFF7
 20266                           tblptrl	equ	0xFF6
 20267                           tablat	equ	0xFF5
 20268                           prodh	equ	0xFF4
 20269                           prodl	equ	0xFF3
 20270                           intcon	equ	0xFF2
 20271                           postinc0	equ	0xFEE
 20272                           fsr0h	equ	0xFEA
 20273                           fsr0l	equ	0xFE9
 20274                           wreg	equ	0xFE8
 20275                           indf1	equ	0xFE7
 20276                           plusw1	equ	0xFE3
 20277                           fsr1h	equ	0xFE2
 20278                           fsr1l	equ	0xFE1
 20279                           bsr	equ	0xFE0
 20280                           indf2	equ	0xFDF
 20281                           postinc2	equ	0xFDE
 20282                           plusw2	equ	0xFDB
 20283                           fsr2h	equ	0xFDA
 20284                           fsr2l	equ	0xFD9
 20285                           status	equ	0xFD8
 20286                           
 20287                           	psect	intcode_body
 20288  014BBA                     __pintcode_body:
 20289                           	opt stack 20
 20290  014BBA                     int_func:
 20291                           	opt stack 20
 20292  014BBA  CFE9 F03C          	movff	fsr0l,??_ISR_alta+6
 20293  014BBE  CFEA F03D          	movff	fsr0h,??_ISR_alta+7
 20294  014BC2  CFE1 F03E          	movff	fsr1l,??_ISR_alta+8
 20295  014BC6  CFE2 F03F          	movff	fsr1h,??_ISR_alta+9
 20296  014BCA  CFD9 F040          	movff	fsr2l,??_ISR_alta+10
 20297  014BCE  CFDA F041          	movff	fsr2h,??_ISR_alta+11
 20298  014BD2  CFF3 F042          	movff	prodl,??_ISR_alta+12
 20299  014BD6  CFF4 F043          	movff	prodh,??_ISR_alta+13
 20300  014BDA  CFF6 F044          	movff	tblptrl,??_ISR_alta+14
 20301  014BDE  CFF7 F045          	movff	tblptrh,??_ISR_alta+15
 20302  014BE2  CFF8 F046          	movff	tblptru,??_ISR_alta+16
 20303  014BE6  CFF5 F047          	movff	tablat,??_ISR_alta+17
 20304                           
 20305                           ;RemoteCan.c: 127: if ((PIR3bits.RXB1IF == 1) || (PIR3bits.RXB0IF == 1)) {
 20306  014BEA  A2A4               	btfss	4004,1,c	;volatile
 20307  014BEC  B0A4               	btfsc	4004,0,c	;volatile
 20308  014BEE  D001               	goto	i2l7717
 20309  014BF0  D0FC               	goto	i2l813
 20310  014BF2                     i2l7717:
 20311                           
 20312                           ;RemoteCan.c: 128: if (CANisRxReady()) {
 20313  014BF2  EC44  F0B4         	call	_CANisRxReady	;wreg free
 20314  014BF6  0900               	iorlw	0
 20315  014BF8  B4D8               	btfsc	status,2,c
 20316  014BFA  D0F5               	goto	i2l796
 20317                           
 20318                           ;RemoteCan.c: 129: CANreceiveMessage(&msg);
 20319  014BFC  0E0A               	movlw	low _msg
 20320  014BFE  6E26               	movwf	CANreceiveMessage@msg,c
 20321  014C00  0E01               	movlw	high _msg
 20322  014C02  6E27               	movwf	CANreceiveMessage@msg+1,c
 20323  014C04  EC44  F098         	call	_CANreceiveMessage	;wreg free
 20324                           
 20325                           ;RemoteCan.c: 130: RTR_Flag = msg.RTR;
 20326  014C08  0101               	movlb	1	; () banked
 20327  014C0A  A118               	btfss	(_msg+14)& (0+255),0,b
 20328  014C0C  D002               	goto	i2u994_40
 20329  014C0E  8848               	bsf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 20330  014C10  D001               	goto	i2l7723
 20331  014C12                     i2u994_40:
 20332  014C12  9848               	bcf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 20333  014C14                     i2l7723:
 20334                           
 20335                           ;RemoteCan.c: 131: id = msg.identifier;
 20336  014C14  C10A  F005         	movff	_msg,_id	;volatile
 20337  014C18  C10B  F006         	movff	_msg+1,_id+1	;volatile
 20338  014C1C  C10C  F007         	movff	_msg+2,_id+2	;volatile
 20339  014C20  C10D  F008         	movff	_msg+3,_id+3	;volatile
 20340                           
 20341                           ;RemoteCan.c: 133: if (id == 0b00000001000) {
 20342  014C24  0E08               	movlw	8
 20343  014C26  1805               	xorwf	_id,w,c	;volatile
 20344  014C28  1006               	iorwf	_id+1,w,c	;volatile
 20345  014C2A  1007               	iorwf	_id+2,w,c	;volatile
 20346  014C2C  1008               	iorwf	_id+3,w,c	;volatile
 20347  014C2E  A4D8               	btfss	status,2,c
 20348  014C30  D022               	goto	i2l7735
 20349                           
 20350                           ;RemoteCan.c: 134: left_speed = msg.data[1];
 20351  014C32  C10F  F01F         	movff	_msg+5,_left_speed	;volatile
 20352  014C36  6A20               	clrf	_left_speed+1,c	;volatile
 20353                           
 20354                           ;RemoteCan.c: 135: left_speed = ((left_speed << 8) | (msg.data[0]));
 20355  014C38  501F               	movf	_left_speed,w,c	;volatile
 20356  014C3A  6E36               	movwf	??_ISR_alta& (0+255),c
 20357  014C3C  0101               	movlb	1	; () banked
 20358  014C3E  510E               	movf	(_msg+4)& (0+255),w,b
 20359  014C40  6E1F               	movwf	_left_speed,c	;volatile
 20360  014C42  C036  F020         	movff	??_ISR_alta,_left_speed+1	;volatile
 20361                           
 20362                           ; BSR set to: 1
 20363                           ;RemoteCan.c: 136: right_speed = msg.data[3];
 20364  014C46  C111  F021         	movff	_msg+7,_right_speed	;volatile
 20365  014C4A  6A22               	clrf	_right_speed+1,c	;volatile
 20366                           
 20367                           ;RemoteCan.c: 137: right_speed = ((right_speed << 8) | (msg.data[2]));
 20368  014C4C  5021               	movf	_right_speed,w,c	;volatile
 20369  014C4E  6E36               	movwf	??_ISR_alta& (0+255),c
 20370  014C50  0101               	movlb	1	; () banked
 20371  014C52  5110               	movf	(_msg+6)& (0+255),w,b
 20372  014C54  6E21               	movwf	_right_speed,c	;volatile
 20373  014C56  C036  F022         	movff	??_ISR_alta,_right_speed+1	;volatile
 20374                           
 20375                           ; BSR set to: 1
 20376                           ;RemoteCan.c: 138: actual_speed = (right_speed + left_speed) / 2;
 20377  014C5A  501F               	movf	_left_speed,w,c	;volatile
 20378  014C5C  2421               	addwf	_right_speed,w,c	;volatile
 20379  014C5E  6E36               	movwf	??_ISR_alta& (0+255),c
 20380  014C60  5020               	movf	_left_speed+1,w,c	;volatile
 20381  014C62  2022               	addwfc	_right_speed+1,w,c	;volatile
 20382  014C64  6E37               	movwf	(??_ISR_alta+1)& (0+255),c
 20383  014C66  90D8               	bcf	status,0,c
 20384  014C68  3037               	rrcf	??_ISR_alta+1,w,c
 20385  014C6A  6E38               	movwf	(??_ISR_alta+2)& (0+255),c
 20386  014C6C  3036               	rrcf	??_ISR_alta,w,c
 20387  014C6E  0100               	movlb	0	; () banked
 20388  014C70  6FDF               	movwf	_actual_speed& (0+255),b	;volatile
 20389  014C72  C038  F0E0         	movff	??_ISR_alta+2,_actual_speed+1	;volatile
 20390  014C76                     i2l7735:
 20391                           
 20392                           ;RemoteCan.c: 139: }
 20393                           ;RemoteCan.c: 141: if (id == 0b00000001101) {
 20394  014C76  0E0D               	movlw	13
 20395  014C78  1805               	xorwf	_id,w,c	;volatile
 20396  014C7A  1006               	iorwf	_id+1,w,c	;volatile
 20397  014C7C  1007               	iorwf	_id+2,w,c	;volatile
 20398  014C7E  1008               	iorwf	_id+3,w,c	;volatile
 20399  014C80  A4D8               	btfss	status,2,c
 20400  014C82  D041               	goto	i2l7767
 20401                           
 20402                           ;RemoteCan.c: 142: if (msg.data[0] == 1) {
 20403  014C84  0101               	movlb	1	; () banked
 20404  014C86  050E               	decf	(_msg+4)& (0+255),w,b
 20405  014C88  A4D8               	btfss	status,2,c
 20406  014C8A  D007               	goto	i2l7743
 20407                           
 20408                           ; BSR set to: 1
 20409                           ;RemoteCan.c: 143: space_available = 1;
 20410  014C8C  8C49               	bsf	_space_available/(0+8),_space_available& (0+7),c	;volatile
 20411                           
 20412                           ;RemoteCan.c: 144: space_gap_reached = 0;
 20413  014C8E  9E49               	bcf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
 20414                           
 20415                           ;RemoteCan.c: 145: F2_switch = 0;
 20416  014C90  9448               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 20417                           
 20418                           ;RemoteCan.c: 146: parking_message_E = 1;
 20419  014C92  8449               	bsf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
 20420                           
 20421                           ; BSR set to: 1
 20422                           ;RemoteCan.c: 147: parking_message_ID = 0;
 20423  014C94  0E00               	movlw	0
 20424  014C96  0100               	movlb	0	; () banked
 20425  014C98  6FE8               	movwf	_parking_message_ID& (0+255),b	;volatile
 20426  014C9A                     i2l7743:
 20427                           
 20428                           ;RemoteCan.c: 148: }
 20429                           ;RemoteCan.c: 150: if (msg.data[0] == 2) {
 20430  014C9A  0E02               	movlw	2
 20431  014C9C  0101               	movlb	1	; () banked
 20432  014C9E  190E               	xorwf	(_msg+4)& (0+255),w,b
 20433  014CA0  A4D8               	btfss	status,2,c
 20434  014CA2  D006               	goto	i2l7749
 20435                           
 20436                           ; BSR set to: 1
 20437                           ;RemoteCan.c: 151: space_available = 1;
 20438  014CA4  8C49               	bsf	_space_available/(0+8),_space_available& (0+7),c	;volatile
 20439                           
 20440                           ;RemoteCan.c: 152: space_gap_reached = 1;
 20441  014CA6  8E49               	bsf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
 20442                           
 20443                           ;RemoteCan.c: 153: Can_Tx_Force = 1;
 20444  014CA8  8048               	bsf	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
 20445                           
 20446                           ; BSR set to: 1
 20447                           ;RemoteCan.c: 154: parking_message_ID = 2;
 20448  014CAA  0E02               	movlw	2
 20449  014CAC  0100               	movlb	0	; () banked
 20450  014CAE  6FE8               	movwf	_parking_message_ID& (0+255),b	;volatile
 20451  014CB0                     i2l7749:
 20452                           
 20453                           ;RemoteCan.c: 155: }
 20454                           ;RemoteCan.c: 157: if (msg.data[0] == 3) {
 20455  014CB0  0E03               	movlw	3
 20456  014CB2  0101               	movlb	1	; () banked
 20457  014CB4  190E               	xorwf	(_msg+4)& (0+255),w,b
 20458  014CB6  A4D8               	btfss	status,2,c
 20459  014CB8  D010               	goto	i2l7757
 20460                           
 20461                           ; BSR set to: 1
 20462                           ;RemoteCan.c: 158: parking_message_ID = 6;
 20463  014CBA  0E06               	movlw	6
 20464  014CBC  0100               	movlb	0	; () banked
 20465  014CBE  6FE8               	movwf	_parking_message_ID& (0+255),b	;volatile
 20466                           
 20467                           ; BSR set to: 0
 20468                           ;RemoteCan.c: 159: F1_switch = 0;
 20469  014CC0  9248               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 20470                           
 20471                           ; BSR set to: 0
 20472                           ;RemoteCan.c: 160: pr_time_6 = time_counter + (2000 / 10);
 20473  014CC2  0EC8               	movlw	200
 20474  014CC4  2419               	addwf	_time_counter,w,c	;volatile
 20475  014CC6  6E15               	movwf	_pr_time_6,c	;volatile
 20476  014CC8  0E00               	movlw	0
 20477  014CCA  201A               	addwfc	_time_counter+1,w,c	;volatile
 20478  014CCC  6E16               	movwf	_pr_time_6+1,c	;volatile
 20479  014CCE  0E00               	movlw	0
 20480  014CD0  201B               	addwfc	_time_counter+2,w,c	;volatile
 20481  014CD2  6E17               	movwf	_pr_time_6+2,c	;volatile
 20482  014CD4  0E00               	movlw	0
 20483  014CD6  201C               	addwfc	_time_counter+3,w,c	;volatile
 20484  014CD8  6E18               	movwf	_pr_time_6+3,c	;volatile
 20485  014CDA                     i2l7757:
 20486                           
 20487                           ;RemoteCan.c: 161: }
 20488                           ;RemoteCan.c: 162: if (msg.data[0] == 4) {
 20489  014CDA  0E04               	movlw	4
 20490  014CDC  0101               	movlb	1	; () banked
 20491  014CDE  190E               	xorwf	(_msg+4)& (0+255),w,b
 20492  014CE0  A4D8               	btfss	status,2,c
 20493  014CE2  D011               	goto	i2l7767
 20494                           
 20495                           ; BSR set to: 1
 20496                           ;RemoteCan.c: 163: parking_message_ID = 6;
 20497  014CE4  0E06               	movlw	6
 20498  014CE6  0100               	movlb	0	; () banked
 20499  014CE8  6FE8               	movwf	_parking_message_ID& (0+255),b	;volatile
 20500                           
 20501                           ; BSR set to: 0
 20502                           ;RemoteCan.c: 164: parking_error = 1;
 20503  014CEA  8249               	bsf	_parking_error/(0+8),_parking_error& (0+7),c	;volatile
 20504                           
 20505                           ; BSR set to: 0
 20506                           ;RemoteCan.c: 165: F1_switch = 0;
 20507  014CEC  9248               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 20508                           
 20509                           ; BSR set to: 0
 20510                           ;RemoteCan.c: 166: pr_time_6 = time_counter + (2000 / 10);
 20511  014CEE  0EC8               	movlw	200
 20512  014CF0  2419               	addwf	_time_counter,w,c	;volatile
 20513  014CF2  6E15               	movwf	_pr_time_6,c	;volatile
 20514  014CF4  0E00               	movlw	0
 20515  014CF6  201A               	addwfc	_time_counter+1,w,c	;volatile
 20516  014CF8  6E16               	movwf	_pr_time_6+1,c	;volatile
 20517  014CFA  0E00               	movlw	0
 20518  014CFC  201B               	addwfc	_time_counter+2,w,c	;volatile
 20519  014CFE  6E17               	movwf	_pr_time_6+2,c	;volatile
 20520  014D00  0E00               	movlw	0
 20521  014D02  201C               	addwfc	_time_counter+3,w,c	;volatile
 20522  014D04  6E18               	movwf	_pr_time_6+3,c	;volatile
 20523  014D06                     i2l7767:
 20524                           
 20525                           ;RemoteCan.c: 167: }
 20526                           ;RemoteCan.c: 168: }
 20527                           ;RemoteCan.c: 170: if (id == 0b00000010000) {
 20528  014D06  0E10               	movlw	16
 20529  014D08  1805               	xorwf	_id,w,c	;volatile
 20530  014D0A  1006               	iorwf	_id+1,w,c	;volatile
 20531  014D0C  1007               	iorwf	_id+2,w,c	;volatile
 20532  014D0E  1008               	iorwf	_id+3,w,c	;volatile
 20533  014D10  A4D8               	btfss	status,2,c
 20534  014D12  D008               	goto	i2l7771
 20535                           
 20536                           ;RemoteCan.c: 171: steering_correction_dir = msg.data[1];
 20537  014D14  0101               	movlb	1	; () banked
 20538  014D16  A10F               	btfss	(_msg+5)& (0+255),0,b
 20539  014D18  D002               	goto	i2u1003_40
 20540  014D1A  804A               	bsf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
 20541  014D1C  D001               	goto	i2u1004_45
 20542  014D1E                     i2u1003_40:
 20543  014D1E  904A               	bcf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
 20544  014D20                     i2u1004_45:
 20545                           
 20546                           ;RemoteCan.c: 172: steering_correction = msg.data[0];
 20547  014D20  C10E  F0EA         	movff	_msg+4,_steering_correction	;volatile
 20548  014D24                     i2l7771:
 20549                           
 20550                           ;RemoteCan.c: 173: }
 20551                           ;RemoteCan.c: 175: if (id == 0b00000010001) {
 20552  014D24  0E11               	movlw	17
 20553  014D26  1805               	xorwf	_id,w,c	;volatile
 20554  014D28  1006               	iorwf	_id+1,w,c	;volatile
 20555  014D2A  1007               	iorwf	_id+2,w,c	;volatile
 20556  014D2C  1008               	iorwf	_id+3,w,c	;volatile
 20557  014D2E  A4D8               	btfss	status,2,c
 20558  014D30  D004               	goto	i2l7775
 20559                           
 20560                           ;RemoteCan.c: 176: collision_sensor_distance[1] = msg.data[0];
 20561  014D32  C10E  F01E         	movff	_msg+4,_collision_sensor_distance+1	;volatile
 20562                           
 20563                           ;RemoteCan.c: 177: collision_sensor_distance[0] = msg.data[1];
 20564  014D36  C10F  F01D         	movff	_msg+5,_collision_sensor_distance	;volatile
 20565  014D3A                     i2l7775:
 20566                           
 20567                           ;RemoteCan.c: 178: }
 20568                           ;RemoteCan.c: 180: if (id == 0xAA) {
 20569  014D3A  0EAA               	movlw	170
 20570  014D3C  1805               	xorwf	_id,w,c	;volatile
 20571  014D3E  1006               	iorwf	_id+1,w,c	;volatile
 20572  014D40  1007               	iorwf	_id+2,w,c	;volatile
 20573  014D42  1008               	iorwf	_id+3,w,c	;volatile
 20574  014D44  A4D8               	btfss	status,2,c
 20575  014D46  D00A               	goto	i2l7781
 20576                           
 20577                           ;RemoteCan.c: 181: user_data = msg.data[1];
 20578  014D48  C10F  F023         	movff	_msg+5,_user_data	;volatile
 20579  014D4C  6A24               	clrf	_user_data+1,c	;volatile
 20580                           
 20581                           ;RemoteCan.c: 182: user_data = ((user_data << 8) | msg.data[0]);
 20582  014D4E  5023               	movf	_user_data,w,c	;volatile
 20583  014D50  6E36               	movwf	??_ISR_alta& (0+255),c
 20584  014D52  0101               	movlb	1	; () banked
 20585  014D54  510E               	movf	(_msg+4)& (0+255),w,b
 20586  014D56  6E23               	movwf	_user_data,c	;volatile
 20587  014D58  C036  F024         	movff	??_ISR_alta,_user_data+1	;volatile
 20588  014D5C                     i2l7781:
 20589                           
 20590                           ;RemoteCan.c: 183: }
 20591                           ;RemoteCan.c: 185: if (id == 0b00000000100) {
 20592  014D5C  0E04               	movlw	4
 20593  014D5E  1805               	xorwf	_id,w,c	;volatile
 20594  014D60  1006               	iorwf	_id+1,w,c	;volatile
 20595  014D62  1007               	iorwf	_id+2,w,c	;volatile
 20596  014D64  1008               	iorwf	_id+3,w,c	;volatile
 20597  014D66  B4D8               	btfsc	status,2,c
 20598                           
 20599                           ;RemoteCan.c: 186: if (RTR_Flag == 1) {
 20600  014D68  A848               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 20601  014D6A  D026               	goto	i2l7795
 20602                           
 20603                           ;RemoteCan.c: 187: pr_time_4 = time_counter;
 20604  014D6C  C019  F106         	movff	_time_counter,_pr_time_4	;volatile
 20605  014D70  C01A  F107         	movff	_time_counter+1,_pr_time_4+1	;volatile
 20606  014D74  C01B  F108         	movff	_time_counter+2,_pr_time_4+2	;volatile
 20607  014D78  C01C  F109         	movff	_time_counter+3,_pr_time_4+3	;volatile
 20608                           
 20609                           ;RemoteCan.c: 188: data[0] = 0x03;
 20610  014D7C  0E03               	movlw	3
 20611  014D7E  0101               	movlb	1	; () banked
 20612  014D80  6F25               	movwf	_data& (0+255),b
 20613                           
 20614                           ; BSR set to: 1
 20615                           ;RemoteCan.c: 189: _delay((unsigned long)((10)*(16000000/4000000.0)));
 20616  014D82  0E0D               	movlw	13
 20617  014D84                     i2u1323_47:
 20618  014D84  2EE8               	decfsz	wreg,f,c
 20619  014D86  D7FE               	goto	i2u1323_47
 20620  014D88  F000               	nop	
 20621  014D8A                     i2l7791:
 20622  014D8A  ECF2  F0B3         	call	i2_CANisTxReady	;wreg free
 20623  014D8E  06E8               	decf	wreg,f,c
 20624  014D90  A4D8               	btfss	status,2,c
 20625  014D92  D7FB               	goto	i2l7791
 20626                           
 20627                           ;RemoteCan.c: 191: CANsendMessage(0b00000000100, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
 20628  014D94  0E04               	movlw	4
 20629  014D96  6E26               	movwf	i2CANsendMessage@identifier,c
 20630  014D98  0E00               	movlw	0
 20631  014D9A  6E27               	movwf	i2CANsendMessage@identifier+1,c
 20632  014D9C  0E00               	movlw	0
 20633  014D9E  6E28               	movwf	i2CANsendMessage@identifier+2,c
 20634  014DA0  0E00               	movlw	0
 20635  014DA2  6E29               	movwf	i2CANsendMessage@identifier+3,c
 20636  014DA4  0E25               	movlw	low _data
 20637  014DA6  6E2A               	movwf	i2CANsendMessage@data,c
 20638  014DA8  0E01               	movlw	high _data
 20639  014DAA  6E2B               	movwf	i2CANsendMessage@data+1,c
 20640  014DAC  0E08               	movlw	8
 20641  014DAE  6E2C               	movwf	i2CANsendMessage@dataLength,c
 20642  014DB0  0EBC               	movlw	188
 20643  014DB2  6E2D               	movwf	i2CANsendMessage@flags,c
 20644  014DB4  EC6F  F092         	call	i2_CANsendMessage	;wreg free
 20645  014DB8                     i2l7795:
 20646                           
 20647                           ;RemoteCan.c: 192: }
 20648                           ;RemoteCan.c: 193: }
 20649                           ;RemoteCan.c: 195: if ((id == 0b00000001011)&&(RTR_Flag == 1)) {
 20650  014DB8  0E0B               	movlw	11
 20651  014DBA  1805               	xorwf	_id,w,c	;volatile
 20652  014DBC  1006               	iorwf	_id+1,w,c	;volatile
 20653  014DBE  1007               	iorwf	_id+2,w,c	;volatile
 20654  014DC0  1008               	iorwf	_id+3,w,c	;volatile
 20655  014DC2  B4D8               	btfsc	status,2,c
 20656  014DC4  A848               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 20657  014DC6  D001               	goto	i2l7801
 20658                           
 20659                           ;RemoteCan.c: 196: low_battery = 1;
 20660  014DC8  8049               	bsf	_low_battery/(0+8),_low_battery& (0+7),c	;volatile
 20661  014DCA                     i2l7801:
 20662                           
 20663                           ;RemoteCan.c: 197: }
 20664                           ;RemoteCan.c: 199: if (id == 0b00000010010) {
 20665  014DCA  0E12               	movlw	18
 20666  014DCC  1805               	xorwf	_id,w,c	;volatile
 20667  014DCE  1006               	iorwf	_id+1,w,c	;volatile
 20668  014DD0  1007               	iorwf	_id+2,w,c	;volatile
 20669  014DD2  1008               	iorwf	_id+3,w,c	;volatile
 20670  014DD4  A4D8               	btfss	status,2,c
 20671  014DD6  D007               	goto	i2l796
 20672                           
 20673                           ;RemoteCan.c: 200: battery_charging = msg.data[0];
 20674  014DD8  0101               	movlb	1	; () banked
 20675  014DDA  A10E               	btfss	(_msg+4)& (0+255),0,b
 20676  014DDC  D002               	goto	i2u1013_40
 20677  014DDE  8A48               	bsf	_battery_charging/(0+8),_battery_charging& (0+7),c	;volatile
 20678  014DE0  D001               	goto	i2u1014_45
 20679  014DE2                     i2u1013_40:
 20680  014DE2  9A48               	bcf	_battery_charging/(0+8),_battery_charging& (0+7),c	;volatile
 20681  014DE4                     i2u1014_45:
 20682                           
 20683                           ;RemoteCan.c: 201: low_battery = 0;
 20684  014DE4  9049               	bcf	_low_battery/(0+8),_low_battery& (0+7),c	;volatile
 20685  014DE6                     i2l796:
 20686                           
 20687                           ;RemoteCan.c: 202: }
 20688                           ;RemoteCan.c: 203: }
 20689                           ;RemoteCan.c: 204: PIR3bits.RXB1IF = 0;
 20690  014DE6  92A4               	bcf	4004,1,c	;volatile
 20691                           
 20692                           ;RemoteCan.c: 205: PIR3bits.RXB0IF = 0;
 20693  014DE8  90A4               	bcf	4004,0,c	;volatile
 20694  014DEA                     i2l813:
 20695  014DEA  C047  FFF5         	movff	??_ISR_alta+17,tablat
 20696  014DEE  C046  FFF8         	movff	??_ISR_alta+16,tblptru
 20697  014DF2  C045  FFF7         	movff	??_ISR_alta+15,tblptrh
 20698  014DF6  C044  FFF6         	movff	??_ISR_alta+14,tblptrl
 20699  014DFA  C043  FFF4         	movff	??_ISR_alta+13,prodh
 20700  014DFE  C042  FFF3         	movff	??_ISR_alta+12,prodl
 20701  014E02  C041  FFDA         	movff	??_ISR_alta+11,fsr2h
 20702  014E06  C040  FFD9         	movff	??_ISR_alta+10,fsr2l
 20703  014E0A  C03F  FFE2         	movff	??_ISR_alta+9,fsr1h
 20704  014E0E  C03E  FFE1         	movff	??_ISR_alta+8,fsr1l
 20705  014E12  C03D  FFEA         	movff	??_ISR_alta+7,fsr0h
 20706  014E16  C03C  FFE9         	movff	??_ISR_alta+6,fsr0l
 20707  014E1A  C03B  FFFB         	movff	??_ISR_alta+5,pclatu
 20708  014E1E  C03A  FFFA         	movff	??_ISR_alta+4,pclath
 20709  014E22  924B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 20710  014E24  0011               	retfie		f
 20711  014E26                     __end_of_ISR_alta:
 20712                           	opt stack 0
 20713                           pclatu	equ	0xFFB
 20714                           pclath	equ	0xFFA
 20715                           tblptru	equ	0xFF8
 20716                           tblptrh	equ	0xFF7
 20717                           tblptrl	equ	0xFF6
 20718                           tablat	equ	0xFF5
 20719                           prodh	equ	0xFF4
 20720                           prodl	equ	0xFF3
 20721                           intcon	equ	0xFF2
 20722                           postinc0	equ	0xFEE
 20723                           fsr0h	equ	0xFEA
 20724                           fsr0l	equ	0xFE9
 20725                           wreg	equ	0xFE8
 20726                           indf1	equ	0xFE7
 20727                           plusw1	equ	0xFE3
 20728                           fsr1h	equ	0xFE2
 20729                           fsr1l	equ	0xFE1
 20730                           bsr	equ	0xFE0
 20731                           indf2	equ	0xFDF
 20732                           postinc2	equ	0xFDE
 20733                           plusw2	equ	0xFDB
 20734                           fsr2h	equ	0xFDA
 20735                           fsr2l	equ	0xFD9
 20736                           status	equ	0xFD8
 20737                           
 20738 ;; *************** function i2_CANsendMessage *****************
 20739 ;; Defined at:
 20740 ;;		line 294 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 20741 ;; Parameters:    Size  Location     Type
 20742 ;;  identifier      4    0[COMRAM] unsigned long 
 20743 ;;  data            2    4[COMRAM] PTR unsigned char 
 20744 ;;		 -> data_speed(8), park_assist_state(8), data_steering(8), data_brake(8), 
 20745 ;;		 -> data(8), 
 20746 ;;  dataLength      1    6[COMRAM] unsigned char 
 20747 ;;  flags           1    7[COMRAM] enum E16771
 20748 ;; Auto vars:     Size  Location     Type
 20749 ;;  CANsendMessa    4   12[COMRAM] unsigned long 
 20750 ;; Return value:  Size  Location     Type
 20751 ;;                  1    wreg      void 
 20752 ;; Registers used:
 20753 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20754 ;; Tracked objects:
 20755 ;;		On entry : 0/0
 20756 ;;		On exit  : 0/0
 20757 ;;		Unchanged: 0/0
 20758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20759 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20760 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20761 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20762 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20763 ;;Total ram usage:       16 bytes
 20764 ;; Hardware stack levels used:    1
 20765 ;; This function calls:
 20766 ;;		Nothing
 20767 ;; This function is called by:
 20768 ;;		_ISR_alta
 20769 ;; This function uses a non-reentrant model
 20770 ;;
 20771                           
 20772                           	psect	text59
 20773  0124DE                     __ptext59:
 20774                           	opt stack 0
 20775  0124DE                     i2_CANsendMessage:
 20776                           	opt stack 20
 20777                           
 20778                           ;inc\CANlib.h: 296: unsigned long tamp;
 20779                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 20780                           
 20781                           ;incstack = 0
 20782  0124DE  010F               	movlb	15	; () banked
 20783  0124E0  B740               	btfsc	64,3,b	;volatile
 20784  0124E2  D115               	goto	i2l385
 20785                           
 20786                           ; BSR set to: 15
 20787                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 20788  0124E4  C02C  FF45         	movff	i2CANsendMessage@dataLength,3909	;volatile
 20789                           
 20790                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 20791  0124E8  AC2D               	btfss	i2CANsendMessage@flags,6,c
 20792  0124EA  D003               	goto	i2l386
 20793                           
 20794                           ; BSR set to: 15
 20795                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 20796  0124EC  010F               	movlb	15	; () banked
 20797  0124EE  8D45               	bsf	69,6,b	;volatile
 20798  0124F0  D002               	goto	i2l387
 20799  0124F2                     i2l386:
 20800                           
 20801                           ; BSR set to: 15
 20802                           ;inc\CANlib.h: 302: else
 20803                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 20804  0124F2  010F               	movlb	15	; () banked
 20805  0124F4  9D45               	bcf	69,6,b	;volatile
 20806  0124F6                     i2l387:
 20807                           
 20808                           ; BSR set to: 15
 20809                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 20810  0124F6  A62D               	btfss	i2CANsendMessage@flags,3,c
 20811  0124F8  D066               	goto	i2l388
 20812                           
 20813                           ; BSR set to: 15
 20814                           ;inc\CANlib.h: 306: {
 20815                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 20816  0124FA  5026               	movf	i2CANsendMessage@identifier,w,c
 20817  0124FC  6E32               	movwf	i2CANsendMessage@tamp,c
 20818  0124FE  6A33               	clrf	i2CANsendMessage@tamp+1,c
 20819  012500  6A34               	clrf	i2CANsendMessage@tamp+2,c
 20820  012502  6A35               	clrf	i2CANsendMessage@tamp+3,c
 20821                           
 20822                           ; BSR set to: 15
 20823                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 20824  012504  C032  FF44         	movff	i2CANsendMessage@tamp,3908	;volatile
 20825                           
 20826                           ; BSR set to: 15
 20827                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 20828  012508  0E00               	movlw	0
 20829  01250A  1426               	andwf	i2CANsendMessage@identifier,w,c
 20830  01250C  6E32               	movwf	i2CANsendMessage@tamp,c
 20831  01250E  0EFF               	movlw	255
 20832  012510  1427               	andwf	i2CANsendMessage@identifier+1,w,c
 20833  012512  6E33               	movwf	i2CANsendMessage@tamp+1,c
 20834  012514  0E00               	movlw	0
 20835  012516  1428               	andwf	i2CANsendMessage@identifier+2,w,c
 20836  012518  6E34               	movwf	i2CANsendMessage@tamp+2,c
 20837  01251A  0E00               	movlw	0
 20838  01251C  1429               	andwf	i2CANsendMessage@identifier+3,w,c
 20839  01251E  6E35               	movwf	i2CANsendMessage@tamp+3,c
 20840                           
 20841                           ; BSR set to: 15
 20842                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 20843  012520  C032  F02E         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20844  012524  C033  F02F         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20845  012528  C034  F030         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20846  01252C  C035  F031         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20847  012530  C02F  F02E         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 20848  012534  C030  F02F         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 20849  012538  C031  F030         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 20850  01253C  6A31               	clrf	??i2_CANsendMessage+3,c
 20851  01253E  C02E  F032         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20852  012542  C02F  F033         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20853  012546  C030  F034         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20854  01254A  C031  F035         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20855                           
 20856                           ; BSR set to: 15
 20857                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 20858  01254E  C032  FF43         	movff	i2CANsendMessage@tamp,3907	;volatile
 20859                           
 20860                           ; BSR set to: 15
 20861                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 20862  012552  0E00               	movlw	0
 20863  012554  010F               	movlb	15	; () banked
 20864  012556  6F42               	movwf	66,b	;volatile
 20865                           
 20866                           ; BSR set to: 15
 20867                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 20868  012558  010F               	movlb	15	; () banked
 20869  01255A  8742               	bsf	66,3,b	;volatile
 20870                           
 20871                           ; BSR set to: 15
 20872                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 20873  01255C  A028               	btfss	i2CANsendMessage@identifier+2,0,c
 20874  01255E  D002               	goto	i2l389
 20875                           
 20876                           ; BSR set to: 15
 20877                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 20878  012560  010F               	movlb	15	; () banked
 20879  012562  8142               	bsf	66,0,b	;volatile
 20880  012564                     i2l389:
 20881                           
 20882                           ; BSR set to: 15
 20883                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 20884  012564  A228               	btfss	i2CANsendMessage@identifier+2,1,c
 20885  012566  D002               	goto	i2l390
 20886                           
 20887                           ; BSR set to: 15
 20888                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 20889  012568  010F               	movlb	15	; () banked
 20890  01256A  8342               	bsf	66,1,b	;volatile
 20891  01256C                     i2l390:
 20892                           
 20893                           ; BSR set to: 15
 20894                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 20895  01256C  A428               	btfss	i2CANsendMessage@identifier+2,2,c
 20896  01256E  D002               	goto	i2l391
 20897                           
 20898                           ; BSR set to: 15
 20899                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 20900  012570  010F               	movlb	15	; () banked
 20901  012572  8B42               	bsf	66,5,b	;volatile
 20902  012574                     i2l391:
 20903                           
 20904                           ; BSR set to: 15
 20905                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 20906  012574  A628               	btfss	i2CANsendMessage@identifier+2,3,c
 20907  012576  D002               	goto	i2l392
 20908                           
 20909                           ; BSR set to: 15
 20910                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 20911  012578  010F               	movlb	15	; () banked
 20912  01257A  8D42               	bsf	66,6,b	;volatile
 20913  01257C                     i2l392:
 20914                           
 20915                           ; BSR set to: 15
 20916                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 20917  01257C  A828               	btfss	i2CANsendMessage@identifier+2,4,c
 20918  01257E  D002               	goto	i2l7485
 20919                           
 20920                           ; BSR set to: 15
 20921                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 20922  012580  010F               	movlb	15	; () banked
 20923  012582  8F42               	bsf	66,7,b	;volatile
 20924  012584                     i2l7485:
 20925                           
 20926                           ; BSR set to: 15
 20927                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 20928  012584  C026  F02E         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20929  012588  C027  F02F         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20930  01258C  C028  F030         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20931  012590  C029  F031         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20932  012594  0E16               	movlw	22
 20933  012596  D005               	goto	i2u955_40
 20934  012598                     i2u955_45:
 20935  012598  90D8               	bcf	status,0,c
 20936  01259A  3231               	rrcf	??i2_CANsendMessage+3,f,c
 20937  01259C  3230               	rrcf	??i2_CANsendMessage+2,f,c
 20938  01259E  322F               	rrcf	??i2_CANsendMessage+1,f,c
 20939  0125A0  322E               	rrcf	??i2_CANsendMessage,f,c
 20940  0125A2                     i2u955_40:
 20941  0125A2  2EE8               	decfsz	wreg,f,c
 20942  0125A4  D7F9               	goto	i2u955_45
 20943  0125A6  C02E  F032         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20944  0125AA  C02F  F033         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20945  0125AE  C030  F034         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20946  0125B2  C031  F035         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20947                           
 20948                           ; BSR set to: 15
 20949                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 20950  0125B6  5032               	movf	i2CANsendMessage@tamp,w,c
 20951  0125B8  6E32               	movwf	i2CANsendMessage@tamp,c
 20952  0125BA  6A33               	clrf	i2CANsendMessage@tamp+1,c
 20953  0125BC  6A34               	clrf	i2CANsendMessage@tamp+2,c
 20954  0125BE  6A35               	clrf	i2CANsendMessage@tamp+3,c
 20955                           
 20956                           ; BSR set to: 15
 20957                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 20958  0125C0  C032  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 20959                           
 20960                           ;inc\CANlib.h: 332: }
 20961  0125C4  D04D               	goto	i2l7505
 20962  0125C6                     i2l388:
 20963                           
 20964                           ; BSR set to: 15
 20965                           ;inc\CANlib.h: 334: else
 20966                           ;inc\CANlib.h: 336: {
 20967                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 20968  0125C6  010F               	movlb	15	; () banked
 20969  0125C8  9742               	bcf	66,3,b	;volatile
 20970                           
 20971                           ; BSR set to: 15
 20972                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 20973  0125CA  C026  F02E         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20974  0125CE  C027  F02F         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20975  0125D2  C028  F030         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20976  0125D6  C029  F031         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20977  0125DA  0E04               	movlw	4
 20978  0125DC  D005               	goto	i2u956_40
 20979  0125DE                     i2u956_45:
 20980  0125DE  90D8               	bcf	status,0,c
 20981  0125E0  3231               	rrcf	??i2_CANsendMessage+3,f,c
 20982  0125E2  3230               	rrcf	??i2_CANsendMessage+2,f,c
 20983  0125E4  322F               	rrcf	??i2_CANsendMessage+1,f,c
 20984  0125E6  322E               	rrcf	??i2_CANsendMessage,f,c
 20985  0125E8                     i2u956_40:
 20986  0125E8  2EE8               	decfsz	wreg,f,c
 20987  0125EA  D7F9               	goto	i2u956_45
 20988  0125EC  C02E  F032         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20989  0125F0  C02F  F033         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20990  0125F4  C030  F034         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20991  0125F8  C031  F035         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20992                           
 20993                           ; BSR set to: 15
 20994                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 20995  0125FC  5032               	movf	i2CANsendMessage@tamp,w,c
 20996  0125FE  6E32               	movwf	i2CANsendMessage@tamp,c
 20997  012600  6A33               	clrf	i2CANsendMessage@tamp+1,c
 20998  012602  6A34               	clrf	i2CANsendMessage@tamp+2,c
 20999  012604  6A35               	clrf	i2CANsendMessage@tamp+3,c
 21000                           
 21001                           ; BSR set to: 15
 21002                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 21003  012606  C032  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 21004                           
 21005                           ; BSR set to: 15
 21006                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 21007  01260A  0E07               	movlw	7
 21008  01260C  1426               	andwf	i2CANsendMessage@identifier,w,c
 21009  01260E  6E32               	movwf	i2CANsendMessage@tamp,c
 21010  012610  0E00               	movlw	0
 21011  012612  1427               	andwf	i2CANsendMessage@identifier+1,w,c
 21012  012614  6E33               	movwf	i2CANsendMessage@tamp+1,c
 21013  012616  0E00               	movlw	0
 21014  012618  1428               	andwf	i2CANsendMessage@identifier+2,w,c
 21015  01261A  6E34               	movwf	i2CANsendMessage@tamp+2,c
 21016  01261C  0E00               	movlw	0
 21017  01261E  1429               	andwf	i2CANsendMessage@identifier+3,w,c
 21018  012620  6E35               	movwf	i2CANsendMessage@tamp+3,c
 21019                           
 21020                           ; BSR set to: 15
 21021                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 21022  012622  C032  F02E         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 21023  012626  C033  F02F         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 21024  01262A  C034  F030         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 21025  01262E  C035  F031         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 21026  012632  0E05               	movlw	5
 21027  012634                     i2u957_45:
 21028  012634  90D8               	bcf	status,0,c
 21029  012636  362E               	rlcf	??i2_CANsendMessage,f,c
 21030  012638  362F               	rlcf	??i2_CANsendMessage+1,f,c
 21031  01263A  3630               	rlcf	??i2_CANsendMessage+2,f,c
 21032  01263C  3631               	rlcf	??i2_CANsendMessage+3,f,c
 21033  01263E  2EE8               	decfsz	wreg,f,c
 21034  012640  D7F9               	goto	i2u957_45
 21035  012642  C02E  F032         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 21036  012646  C02F  F033         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 21037  01264A  C030  F034         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 21038  01264E  C031  F035         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 21039                           
 21040                           ; BSR set to: 15
 21041                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 21042  012652  010F               	movlb	15	; () banked
 21043  012654  5142               	movf	66,w,b	;volatile
 21044  012656  0B1F               	andlw	31
 21045  012658  010F               	movlb	15	; () banked
 21046  01265A  6F42               	movwf	66,b	;volatile
 21047                           
 21048                           ; BSR set to: 15
 21049                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 21050  01265C  C032  FF42         	movff	i2CANsendMessage@tamp,3906	;volatile
 21051  012660                     i2l7505:
 21052                           
 21053                           ; BSR set to: 15
 21054                           ;inc\CANlib.h: 347: }
 21055                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 21056  012660  A02D               	btfss	i2CANsendMessage@flags,0,c
 21057  012662  D003               	goto	i2l395
 21058                           
 21059                           ; BSR set to: 15
 21060                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 21061  012664  010F               	movlb	15	; () banked
 21062  012666  8140               	bsf	64,0,b	;volatile
 21063  012668  D002               	goto	i2l396
 21064  01266A                     i2l395:
 21065                           
 21066                           ; BSR set to: 15
 21067                           ;inc\CANlib.h: 351: else
 21068                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 21069  01266A  010F               	movlb	15	; () banked
 21070  01266C  9140               	bcf	64,0,b	;volatile
 21071  01266E                     i2l396:
 21072                           
 21073                           ; BSR set to: 15
 21074                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 21075  01266E  A22D               	btfss	i2CANsendMessage@flags,1,c
 21076  012670  D003               	goto	i2l397
 21077                           
 21078                           ; BSR set to: 15
 21079                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 21080  012672  010F               	movlb	15	; () banked
 21081  012674  8340               	bsf	64,1,b	;volatile
 21082  012676  D002               	goto	i2l7511
 21083  012678                     i2l397:
 21084                           
 21085                           ; BSR set to: 15
 21086                           ;inc\CANlib.h: 355: else
 21087                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 21088  012678  010F               	movlb	15	; () banked
 21089  01267A  9340               	bcf	64,1,b	;volatile
 21090  01267C                     i2l7511:
 21091                           
 21092                           ; BSR set to: 15
 21093                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 21094  01267C  C02A  FFD9         	movff	i2CANsendMessage@data,fsr2l
 21095  012680  C02B  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 21096  012684  50DF               	movf	indf2,w,c
 21097  012686  010F               	movlb	15	; () banked
 21098  012688  6F46               	movwf	70,b	;volatile
 21099                           
 21100                           ; BSR set to: 15
 21101                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 21102  01268A  EE20 F001          	lfsr	2,1
 21103  01268E  502A               	movf	i2CANsendMessage@data,w,c
 21104  012690  26D9               	addwf	fsr2l,f,c
 21105  012692  502B               	movf	i2CANsendMessage@data+1,w,c
 21106  012694  22DA               	addwfc	fsr2h,f,c
 21107  012696  50DF               	movf	indf2,w,c
 21108  012698  010F               	movlb	15	; () banked
 21109  01269A  6F47               	movwf	71,b	;volatile
 21110                           
 21111                           ; BSR set to: 15
 21112                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 21113  01269C  EE20 F002          	lfsr	2,2
 21114  0126A0  502A               	movf	i2CANsendMessage@data,w,c
 21115  0126A2  26D9               	addwf	fsr2l,f,c
 21116  0126A4  502B               	movf	i2CANsendMessage@data+1,w,c
 21117  0126A6  22DA               	addwfc	fsr2h,f,c
 21118  0126A8  50DF               	movf	indf2,w,c
 21119  0126AA  010F               	movlb	15	; () banked
 21120  0126AC  6F48               	movwf	72,b	;volatile
 21121                           
 21122                           ; BSR set to: 15
 21123                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 21124  0126AE  EE20 F003          	lfsr	2,3
 21125  0126B2  502A               	movf	i2CANsendMessage@data,w,c
 21126  0126B4  26D9               	addwf	fsr2l,f,c
 21127  0126B6  502B               	movf	i2CANsendMessage@data+1,w,c
 21128  0126B8  22DA               	addwfc	fsr2h,f,c
 21129  0126BA  50DF               	movf	indf2,w,c
 21130  0126BC  010F               	movlb	15	; () banked
 21131  0126BE  6F49               	movwf	73,b	;volatile
 21132                           
 21133                           ; BSR set to: 15
 21134                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 21135  0126C0  EE20 F004          	lfsr	2,4
 21136  0126C4  502A               	movf	i2CANsendMessage@data,w,c
 21137  0126C6  26D9               	addwf	fsr2l,f,c
 21138  0126C8  502B               	movf	i2CANsendMessage@data+1,w,c
 21139  0126CA  22DA               	addwfc	fsr2h,f,c
 21140  0126CC  50DF               	movf	indf2,w,c
 21141  0126CE  010F               	movlb	15	; () banked
 21142  0126D0  6F4A               	movwf	74,b	;volatile
 21143                           
 21144                           ; BSR set to: 15
 21145                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 21146  0126D2  EE20 F005          	lfsr	2,5
 21147  0126D6  502A               	movf	i2CANsendMessage@data,w,c
 21148  0126D8  26D9               	addwf	fsr2l,f,c
 21149  0126DA  502B               	movf	i2CANsendMessage@data+1,w,c
 21150  0126DC  22DA               	addwfc	fsr2h,f,c
 21151  0126DE  50DF               	movf	indf2,w,c
 21152  0126E0  010F               	movlb	15	; () banked
 21153  0126E2  6F4B               	movwf	75,b	;volatile
 21154                           
 21155                           ; BSR set to: 15
 21156                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 21157  0126E4  EE20 F006          	lfsr	2,6
 21158  0126E8  502A               	movf	i2CANsendMessage@data,w,c
 21159  0126EA  26D9               	addwf	fsr2l,f,c
 21160  0126EC  502B               	movf	i2CANsendMessage@data+1,w,c
 21161  0126EE  22DA               	addwfc	fsr2h,f,c
 21162  0126F0  50DF               	movf	indf2,w,c
 21163  0126F2  010F               	movlb	15	; () banked
 21164  0126F4  6F4C               	movwf	76,b	;volatile
 21165                           
 21166                           ; BSR set to: 15
 21167                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 21168  0126F6  EE20 F007          	lfsr	2,7
 21169  0126FA  502A               	movf	i2CANsendMessage@data,w,c
 21170  0126FC  26D9               	addwf	fsr2l,f,c
 21171  0126FE  502B               	movf	i2CANsendMessage@data+1,w,c
 21172  012700  22DA               	addwfc	fsr2h,f,c
 21173  012702  50DF               	movf	indf2,w,c
 21174  012704  010F               	movlb	15	; () banked
 21175  012706  6F4D               	movwf	77,b	;volatile
 21176                           
 21177                           ; BSR set to: 15
 21178                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 21179  012708  010F               	movlb	15	; () banked
 21180  01270A  8740               	bsf	64,3,b	;volatile
 21181                           
 21182                           ; BSR set to: 15
 21183                           ;inc\CANlib.h: 368: return;
 21184  01270C  0012               	return	
 21185  01270E                     i2l385:
 21186                           
 21187                           ; BSR set to: 15
 21188                           ;inc\CANlib.h: 369: }
 21189                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 21190  01270E  010F               	movlb	15	; () banked
 21191  012710  B730               	btfsc	48,3,b	;volatile
 21192  012712  D115               	goto	i2l400
 21193                           
 21194                           ; BSR set to: 15
 21195                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 21196  012714  C02C  FF35         	movff	i2CANsendMessage@dataLength,3893	;volatile
 21197                           
 21198                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 21199  012718  AC2D               	btfss	i2CANsendMessage@flags,6,c
 21200  01271A  D003               	goto	i2l401
 21201                           
 21202                           ; BSR set to: 15
 21203                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 21204  01271C  010F               	movlb	15	; () banked
 21205  01271E  8D35               	bsf	53,6,b	;volatile
 21206  012720  D002               	goto	i2l402
 21207  012722                     i2l401:
 21208                           
 21209                           ; BSR set to: 15
 21210                           ;inc\CANlib.h: 378: else
 21211                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 21212  012722  010F               	movlb	15	; () banked
 21213  012724  9D35               	bcf	53,6,b	;volatile
 21214  012726                     i2l402:
 21215                           
 21216                           ; BSR set to: 15
 21217                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 21218  012726  A62D               	btfss	i2CANsendMessage@flags,3,c
 21219  012728  D066               	goto	i2l403
 21220                           
 21221                           ; BSR set to: 15
 21222                           ;inc\CANlib.h: 382: {
 21223                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 21224  01272A  5026               	movf	i2CANsendMessage@identifier,w,c
 21225  01272C  6E32               	movwf	i2CANsendMessage@tamp,c
 21226  01272E  6A33               	clrf	i2CANsendMessage@tamp+1,c
 21227  012730  6A34               	clrf	i2CANsendMessage@tamp+2,c
 21228  012732  6A35               	clrf	i2CANsendMessage@tamp+3,c
 21229                           
 21230                           ; BSR set to: 15
 21231                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 21232  012734  C032  FF34         	movff	i2CANsendMessage@tamp,3892	;volatile
 21233                           
 21234                           ; BSR set to: 15
 21235                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 21236  012738  0E00               	movlw	0
 21237  01273A  1426               	andwf	i2CANsendMessage@identifier,w,c
 21238  01273C  6E32               	movwf	i2CANsendMessage@tamp,c
 21239  01273E  0EFF               	movlw	255
 21240  012740  1427               	andwf	i2CANsendMessage@identifier+1,w,c
 21241  012742  6E33               	movwf	i2CANsendMessage@tamp+1,c
 21242  012744  0E00               	movlw	0
 21243  012746  1428               	andwf	i2CANsendMessage@identifier+2,w,c
 21244  012748  6E34               	movwf	i2CANsendMessage@tamp+2,c
 21245  01274A  0E00               	movlw	0
 21246  01274C  1429               	andwf	i2CANsendMessage@identifier+3,w,c
 21247  01274E  6E35               	movwf	i2CANsendMessage@tamp+3,c
 21248                           
 21249                           ; BSR set to: 15
 21250                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 21251  012750  C032  F02E         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 21252  012754  C033  F02F         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 21253  012758  C034  F030         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 21254  01275C  C035  F031         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 21255  012760  C02F  F02E         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 21256  012764  C030  F02F         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 21257  012768  C031  F030         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 21258  01276C  6A31               	clrf	??i2_CANsendMessage+3,c
 21259  01276E  C02E  F032         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 21260  012772  C02F  F033         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 21261  012776  C030  F034         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 21262  01277A  C031  F035         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 21263                           
 21264                           ; BSR set to: 15
 21265                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 21266  01277E  C032  FF33         	movff	i2CANsendMessage@tamp,3891	;volatile
 21267                           
 21268                           ; BSR set to: 15
 21269                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 21270  012782  0E00               	movlw	0
 21271  012784  010F               	movlb	15	; () banked
 21272  012786  6F32               	movwf	50,b	;volatile
 21273                           
 21274                           ; BSR set to: 15
 21275                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 21276  012788  010F               	movlb	15	; () banked
 21277  01278A  8732               	bsf	50,3,b	;volatile
 21278                           
 21279                           ; BSR set to: 15
 21280                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 21281  01278C  A028               	btfss	i2CANsendMessage@identifier+2,0,c
 21282  01278E  D002               	goto	i2l404
 21283                           
 21284                           ; BSR set to: 15
 21285                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 21286  012790  010F               	movlb	15	; () banked
 21287  012792  8132               	bsf	50,0,b	;volatile
 21288  012794                     i2l404:
 21289                           
 21290                           ; BSR set to: 15
 21291                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 21292  012794  A228               	btfss	i2CANsendMessage@identifier+2,1,c
 21293  012796  D002               	goto	i2l405
 21294                           
 21295                           ; BSR set to: 15
 21296                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 21297  012798  010F               	movlb	15	; () banked
 21298  01279A  8332               	bsf	50,1,b	;volatile
 21299  01279C                     i2l405:
 21300                           
 21301                           ; BSR set to: 15
 21302                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 21303  01279C  A428               	btfss	i2CANsendMessage@identifier+2,2,c
 21304  01279E  D002               	goto	i2l406
 21305                           
 21306                           ; BSR set to: 15
 21307                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 21308  0127A0  010F               	movlb	15	; () banked
 21309  0127A2  8B32               	bsf	50,5,b	;volatile
 21310  0127A4                     i2l406:
 21311                           
 21312                           ; BSR set to: 15
 21313                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 21314  0127A4  A628               	btfss	i2CANsendMessage@identifier+2,3,c
 21315  0127A6  D002               	goto	i2l407
 21316                           
 21317                           ; BSR set to: 15
 21318                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 21319  0127A8  010F               	movlb	15	; () banked
 21320  0127AA  8D32               	bsf	50,6,b	;volatile
 21321  0127AC                     i2l407:
 21322                           
 21323                           ; BSR set to: 15
 21324                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 21325  0127AC  A828               	btfss	i2CANsendMessage@identifier+2,4,c
 21326  0127AE  D002               	goto	i2l7561
 21327                           
 21328                           ; BSR set to: 15
 21329                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 21330  0127B0  010F               	movlb	15	; () banked
 21331  0127B2  8F32               	bsf	50,7,b	;volatile
 21332  0127B4                     i2l7561:
 21333                           
 21334                           ; BSR set to: 15
 21335                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 21336  0127B4  C026  F02E         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 21337  0127B8  C027  F02F         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 21338  0127BC  C028  F030         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 21339  0127C0  C029  F031         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 21340  0127C4  0E16               	movlw	22
 21341  0127C6  D005               	goto	i2u968_40
 21342  0127C8                     i2u968_45:
 21343  0127C8  90D8               	bcf	status,0,c
 21344  0127CA  3231               	rrcf	??i2_CANsendMessage+3,f,c
 21345  0127CC  3230               	rrcf	??i2_CANsendMessage+2,f,c
 21346  0127CE  322F               	rrcf	??i2_CANsendMessage+1,f,c
 21347  0127D0  322E               	rrcf	??i2_CANsendMessage,f,c
 21348  0127D2                     i2u968_40:
 21349  0127D2  2EE8               	decfsz	wreg,f,c
 21350  0127D4  D7F9               	goto	i2u968_45
 21351  0127D6  C02E  F032         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 21352  0127DA  C02F  F033         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 21353  0127DE  C030  F034         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 21354  0127E2  C031  F035         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 21355                           
 21356                           ; BSR set to: 15
 21357                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 21358  0127E6  5032               	movf	i2CANsendMessage@tamp,w,c
 21359  0127E8  6E32               	movwf	i2CANsendMessage@tamp,c
 21360  0127EA  6A33               	clrf	i2CANsendMessage@tamp+1,c
 21361  0127EC  6A34               	clrf	i2CANsendMessage@tamp+2,c
 21362  0127EE  6A35               	clrf	i2CANsendMessage@tamp+3,c
 21363                           
 21364                           ; BSR set to: 15
 21365                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 21366  0127F0  C032  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 21367                           
 21368                           ;inc\CANlib.h: 407: }
 21369  0127F4  D04D               	goto	i2l7581
 21370  0127F6                     i2l403:
 21371                           
 21372                           ; BSR set to: 15
 21373                           ;inc\CANlib.h: 409: else
 21374                           ;inc\CANlib.h: 411: {
 21375                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 21376  0127F6  010F               	movlb	15	; () banked
 21377  0127F8  9732               	bcf	50,3,b	;volatile
 21378                           
 21379                           ; BSR set to: 15
 21380                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 21381  0127FA  C026  F02E         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 21382  0127FE  C027  F02F         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 21383  012802  C028  F030         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 21384  012806  C029  F031         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 21385  01280A  0E04               	movlw	4
 21386  01280C  D005               	goto	i2u969_40
 21387  01280E                     i2u969_45:
 21388  01280E  90D8               	bcf	status,0,c
 21389  012810  3231               	rrcf	??i2_CANsendMessage+3,f,c
 21390  012812  3230               	rrcf	??i2_CANsendMessage+2,f,c
 21391  012814  322F               	rrcf	??i2_CANsendMessage+1,f,c
 21392  012816  322E               	rrcf	??i2_CANsendMessage,f,c
 21393  012818                     i2u969_40:
 21394  012818  2EE8               	decfsz	wreg,f,c
 21395  01281A  D7F9               	goto	i2u969_45
 21396  01281C  C02E  F032         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 21397  012820  C02F  F033         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 21398  012824  C030  F034         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 21399  012828  C031  F035         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 21400                           
 21401                           ; BSR set to: 15
 21402                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 21403  01282C  5032               	movf	i2CANsendMessage@tamp,w,c
 21404  01282E  6E32               	movwf	i2CANsendMessage@tamp,c
 21405  012830  6A33               	clrf	i2CANsendMessage@tamp+1,c
 21406  012832  6A34               	clrf	i2CANsendMessage@tamp+2,c
 21407  012834  6A35               	clrf	i2CANsendMessage@tamp+3,c
 21408                           
 21409                           ; BSR set to: 15
 21410                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 21411  012836  C032  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 21412                           
 21413                           ; BSR set to: 15
 21414                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 21415  01283A  0E07               	movlw	7
 21416  01283C  1426               	andwf	i2CANsendMessage@identifier,w,c
 21417  01283E  6E32               	movwf	i2CANsendMessage@tamp,c
 21418  012840  0E00               	movlw	0
 21419  012842  1427               	andwf	i2CANsendMessage@identifier+1,w,c
 21420  012844  6E33               	movwf	i2CANsendMessage@tamp+1,c
 21421  012846  0E00               	movlw	0
 21422  012848  1428               	andwf	i2CANsendMessage@identifier+2,w,c
 21423  01284A  6E34               	movwf	i2CANsendMessage@tamp+2,c
 21424  01284C  0E00               	movlw	0
 21425  01284E  1429               	andwf	i2CANsendMessage@identifier+3,w,c
 21426  012850  6E35               	movwf	i2CANsendMessage@tamp+3,c
 21427                           
 21428                           ; BSR set to: 15
 21429                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 21430  012852  C032  F02E         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 21431  012856  C033  F02F         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 21432  01285A  C034  F030         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 21433  01285E  C035  F031         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 21434  012862  0E05               	movlw	5
 21435  012864                     i2u970_45:
 21436  012864  90D8               	bcf	status,0,c
 21437  012866  362E               	rlcf	??i2_CANsendMessage,f,c
 21438  012868  362F               	rlcf	??i2_CANsendMessage+1,f,c
 21439  01286A  3630               	rlcf	??i2_CANsendMessage+2,f,c
 21440  01286C  3631               	rlcf	??i2_CANsendMessage+3,f,c
 21441  01286E  2EE8               	decfsz	wreg,f,c
 21442  012870  D7F9               	goto	i2u970_45
 21443  012872  C02E  F032         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 21444  012876  C02F  F033         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 21445  01287A  C030  F034         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 21446  01287E  C031  F035         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 21447                           
 21448                           ; BSR set to: 15
 21449                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 21450  012882  010F               	movlb	15	; () banked
 21451  012884  5132               	movf	50,w,b	;volatile
 21452  012886  0B1F               	andlw	31
 21453  012888  010F               	movlb	15	; () banked
 21454  01288A  6F32               	movwf	50,b	;volatile
 21455                           
 21456                           ; BSR set to: 15
 21457                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 21458  01288C  C032  FF32         	movff	i2CANsendMessage@tamp,3890	;volatile
 21459  012890                     i2l7581:
 21460                           
 21461                           ; BSR set to: 15
 21462                           ;inc\CANlib.h: 422: }
 21463                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 21464  012890  A02D               	btfss	i2CANsendMessage@flags,0,c
 21465  012892  D003               	goto	i2l410
 21466                           
 21467                           ; BSR set to: 15
 21468                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 21469  012894  010F               	movlb	15	; () banked
 21470  012896  8130               	bsf	48,0,b	;volatile
 21471  012898  D002               	goto	i2l411
 21472  01289A                     i2l410:
 21473                           
 21474                           ; BSR set to: 15
 21475                           ;inc\CANlib.h: 426: else
 21476                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 21477  01289A  010F               	movlb	15	; () banked
 21478  01289C  9130               	bcf	48,0,b	;volatile
 21479  01289E                     i2l411:
 21480                           
 21481                           ; BSR set to: 15
 21482                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 21483  01289E  A22D               	btfss	i2CANsendMessage@flags,1,c
 21484  0128A0  D003               	goto	i2l412
 21485                           
 21486                           ; BSR set to: 15
 21487                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 21488  0128A2  010F               	movlb	15	; () banked
 21489  0128A4  8330               	bsf	48,1,b	;volatile
 21490  0128A6  D002               	goto	i2l7587
 21491  0128A8                     i2l412:
 21492                           
 21493                           ; BSR set to: 15
 21494                           ;inc\CANlib.h: 430: else
 21495                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 21496  0128A8  010F               	movlb	15	; () banked
 21497  0128AA  9330               	bcf	48,1,b	;volatile
 21498  0128AC                     i2l7587:
 21499                           
 21500                           ; BSR set to: 15
 21501                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 21502  0128AC  C02A  FFD9         	movff	i2CANsendMessage@data,fsr2l
 21503  0128B0  C02B  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 21504  0128B4  50DF               	movf	indf2,w,c
 21505  0128B6  010F               	movlb	15	; () banked
 21506  0128B8  6F36               	movwf	54,b	;volatile
 21507                           
 21508                           ; BSR set to: 15
 21509                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 21510  0128BA  EE20 F001          	lfsr	2,1
 21511  0128BE  502A               	movf	i2CANsendMessage@data,w,c
 21512  0128C0  26D9               	addwf	fsr2l,f,c
 21513  0128C2  502B               	movf	i2CANsendMessage@data+1,w,c
 21514  0128C4  22DA               	addwfc	fsr2h,f,c
 21515  0128C6  50DF               	movf	indf2,w,c
 21516  0128C8  010F               	movlb	15	; () banked
 21517  0128CA  6F37               	movwf	55,b	;volatile
 21518                           
 21519                           ; BSR set to: 15
 21520                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 21521  0128CC  EE20 F002          	lfsr	2,2
 21522  0128D0  502A               	movf	i2CANsendMessage@data,w,c
 21523  0128D2  26D9               	addwf	fsr2l,f,c
 21524  0128D4  502B               	movf	i2CANsendMessage@data+1,w,c
 21525  0128D6  22DA               	addwfc	fsr2h,f,c
 21526  0128D8  50DF               	movf	indf2,w,c
 21527  0128DA  010F               	movlb	15	; () banked
 21528  0128DC  6F38               	movwf	56,b	;volatile
 21529                           
 21530                           ; BSR set to: 15
 21531                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 21532  0128DE  EE20 F003          	lfsr	2,3
 21533  0128E2  502A               	movf	i2CANsendMessage@data,w,c
 21534  0128E4  26D9               	addwf	fsr2l,f,c
 21535  0128E6  502B               	movf	i2CANsendMessage@data+1,w,c
 21536  0128E8  22DA               	addwfc	fsr2h,f,c
 21537  0128EA  50DF               	movf	indf2,w,c
 21538  0128EC  010F               	movlb	15	; () banked
 21539  0128EE  6F39               	movwf	57,b	;volatile
 21540                           
 21541                           ; BSR set to: 15
 21542                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 21543  0128F0  EE20 F004          	lfsr	2,4
 21544  0128F4  502A               	movf	i2CANsendMessage@data,w,c
 21545  0128F6  26D9               	addwf	fsr2l,f,c
 21546  0128F8  502B               	movf	i2CANsendMessage@data+1,w,c
 21547  0128FA  22DA               	addwfc	fsr2h,f,c
 21548  0128FC  50DF               	movf	indf2,w,c
 21549  0128FE  010F               	movlb	15	; () banked
 21550  012900  6F3A               	movwf	58,b	;volatile
 21551                           
 21552                           ; BSR set to: 15
 21553                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 21554  012902  EE20 F005          	lfsr	2,5
 21555  012906  502A               	movf	i2CANsendMessage@data,w,c
 21556  012908  26D9               	addwf	fsr2l,f,c
 21557  01290A  502B               	movf	i2CANsendMessage@data+1,w,c
 21558  01290C  22DA               	addwfc	fsr2h,f,c
 21559  01290E  50DF               	movf	indf2,w,c
 21560  012910  010F               	movlb	15	; () banked
 21561  012912  6F3B               	movwf	59,b	;volatile
 21562                           
 21563                           ; BSR set to: 15
 21564                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 21565  012914  EE20 F006          	lfsr	2,6
 21566  012918  502A               	movf	i2CANsendMessage@data,w,c
 21567  01291A  26D9               	addwf	fsr2l,f,c
 21568  01291C  502B               	movf	i2CANsendMessage@data+1,w,c
 21569  01291E  22DA               	addwfc	fsr2h,f,c
 21570  012920  50DF               	movf	indf2,w,c
 21571  012922  010F               	movlb	15	; () banked
 21572  012924  6F3C               	movwf	60,b	;volatile
 21573                           
 21574                           ; BSR set to: 15
 21575                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 21576  012926  EE20 F007          	lfsr	2,7
 21577  01292A  502A               	movf	i2CANsendMessage@data,w,c
 21578  01292C  26D9               	addwf	fsr2l,f,c
 21579  01292E  502B               	movf	i2CANsendMessage@data+1,w,c
 21580  012930  22DA               	addwfc	fsr2h,f,c
 21581  012932  50DF               	movf	indf2,w,c
 21582  012934  010F               	movlb	15	; () banked
 21583  012936  6F3D               	movwf	61,b	;volatile
 21584                           
 21585                           ; BSR set to: 15
 21586                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 21587  012938  010F               	movlb	15	; () banked
 21588  01293A  8730               	bsf	48,3,b	;volatile
 21589                           
 21590                           ; BSR set to: 15
 21591                           ;inc\CANlib.h: 444: return;
 21592  01293C  0012               	return	
 21593  01293E                     i2l400:
 21594                           
 21595                           ; BSR set to: 15
 21596                           ;inc\CANlib.h: 445: }
 21597                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 21598  01293E  010F               	movlb	15	; () banked
 21599  012940  B720               	btfsc	32,3,b	;volatile
 21600  012942  0012               	return	
 21601                           
 21602                           ; BSR set to: 15
 21603                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 21604  012944  C02C  FF25         	movff	i2CANsendMessage@dataLength,3877	;volatile
 21605                           
 21606                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 21607  012948  AC2D               	btfss	i2CANsendMessage@flags,6,c
 21608  01294A  D003               	goto	i2l415
 21609                           
 21610                           ; BSR set to: 15
 21611                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 21612  01294C  010F               	movlb	15	; () banked
 21613  01294E  8D25               	bsf	37,6,b	;volatile
 21614  012950  D002               	goto	i2l416
 21615  012952                     i2l415:
 21616                           
 21617                           ; BSR set to: 15
 21618                           ;inc\CANlib.h: 454: else
 21619                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 21620  012952  010F               	movlb	15	; () banked
 21621  012954  9D25               	bcf	37,6,b	;volatile
 21622  012956                     i2l416:
 21623                           
 21624                           ; BSR set to: 15
 21625                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 21626  012956  A62D               	btfss	i2CANsendMessage@flags,3,c
 21627  012958  D066               	goto	i2l417
 21628                           
 21629                           ; BSR set to: 15
 21630                           ;inc\CANlib.h: 458: {
 21631                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 21632  01295A  5026               	movf	i2CANsendMessage@identifier,w,c
 21633  01295C  6E32               	movwf	i2CANsendMessage@tamp,c
 21634  01295E  6A33               	clrf	i2CANsendMessage@tamp+1,c
 21635  012960  6A34               	clrf	i2CANsendMessage@tamp+2,c
 21636  012962  6A35               	clrf	i2CANsendMessage@tamp+3,c
 21637                           
 21638                           ; BSR set to: 15
 21639                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 21640  012964  C032  FF24         	movff	i2CANsendMessage@tamp,3876	;volatile
 21641                           
 21642                           ; BSR set to: 15
 21643                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 21644  012968  0E00               	movlw	0
 21645  01296A  1426               	andwf	i2CANsendMessage@identifier,w,c
 21646  01296C  6E32               	movwf	i2CANsendMessage@tamp,c
 21647  01296E  0EFF               	movlw	255
 21648  012970  1427               	andwf	i2CANsendMessage@identifier+1,w,c
 21649  012972  6E33               	movwf	i2CANsendMessage@tamp+1,c
 21650  012974  0E00               	movlw	0
 21651  012976  1428               	andwf	i2CANsendMessage@identifier+2,w,c
 21652  012978  6E34               	movwf	i2CANsendMessage@tamp+2,c
 21653  01297A  0E00               	movlw	0
 21654  01297C  1429               	andwf	i2CANsendMessage@identifier+3,w,c
 21655  01297E  6E35               	movwf	i2CANsendMessage@tamp+3,c
 21656                           
 21657                           ; BSR set to: 15
 21658                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 21659  012980  C032  F02E         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 21660  012984  C033  F02F         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 21661  012988  C034  F030         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 21662  01298C  C035  F031         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 21663  012990  C02F  F02E         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 21664  012994  C030  F02F         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 21665  012998  C031  F030         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 21666  01299C  6A31               	clrf	??i2_CANsendMessage+3,c
 21667  01299E  C02E  F032         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 21668  0129A2  C02F  F033         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 21669  0129A6  C030  F034         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 21670  0129AA  C031  F035         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 21671                           
 21672                           ; BSR set to: 15
 21673                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 21674  0129AE  C032  FF23         	movff	i2CANsendMessage@tamp,3875	;volatile
 21675                           
 21676                           ; BSR set to: 15
 21677                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 21678  0129B2  0E00               	movlw	0
 21679  0129B4  010F               	movlb	15	; () banked
 21680  0129B6  6F22               	movwf	34,b	;volatile
 21681                           
 21682                           ; BSR set to: 15
 21683                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 21684  0129B8  010F               	movlb	15	; () banked
 21685  0129BA  8722               	bsf	34,3,b	;volatile
 21686                           
 21687                           ; BSR set to: 15
 21688                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 21689  0129BC  A028               	btfss	i2CANsendMessage@identifier+2,0,c
 21690  0129BE  D002               	goto	i2l418
 21691                           
 21692                           ; BSR set to: 15
 21693                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 21694  0129C0  010F               	movlb	15	; () banked
 21695  0129C2  8122               	bsf	34,0,b	;volatile
 21696  0129C4                     i2l418:
 21697                           
 21698                           ; BSR set to: 15
 21699                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 21700  0129C4  A228               	btfss	i2CANsendMessage@identifier+2,1,c
 21701  0129C6  D002               	goto	i2l419
 21702                           
 21703                           ; BSR set to: 15
 21704                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 21705  0129C8  010F               	movlb	15	; () banked
 21706  0129CA  8322               	bsf	34,1,b	;volatile
 21707  0129CC                     i2l419:
 21708                           
 21709                           ; BSR set to: 15
 21710                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 21711  0129CC  A428               	btfss	i2CANsendMessage@identifier+2,2,c
 21712  0129CE  D002               	goto	i2l420
 21713                           
 21714                           ; BSR set to: 15
 21715                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 21716  0129D0  010F               	movlb	15	; () banked
 21717  0129D2  8B22               	bsf	34,5,b	;volatile
 21718  0129D4                     i2l420:
 21719                           
 21720                           ; BSR set to: 15
 21721                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 21722  0129D4  A628               	btfss	i2CANsendMessage@identifier+2,3,c
 21723  0129D6  D002               	goto	i2l421
 21724                           
 21725                           ; BSR set to: 15
 21726                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 21727  0129D8  010F               	movlb	15	; () banked
 21728  0129DA  8D22               	bsf	34,6,b	;volatile
 21729  0129DC                     i2l421:
 21730                           
 21731                           ; BSR set to: 15
 21732                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 21733  0129DC  A828               	btfss	i2CANsendMessage@identifier+2,4,c
 21734  0129DE  D002               	goto	i2l7637
 21735                           
 21736                           ; BSR set to: 15
 21737                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 21738  0129E0  010F               	movlb	15	; () banked
 21739  0129E2  8F22               	bsf	34,7,b	;volatile
 21740  0129E4                     i2l7637:
 21741                           
 21742                           ; BSR set to: 15
 21743                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 21744  0129E4  C026  F02E         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 21745  0129E8  C027  F02F         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 21746  0129EC  C028  F030         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 21747  0129F0  C029  F031         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 21748  0129F4  0E16               	movlw	22
 21749  0129F6  D005               	goto	i2u981_40
 21750  0129F8                     i2u981_45:
 21751  0129F8  90D8               	bcf	status,0,c
 21752  0129FA  3231               	rrcf	??i2_CANsendMessage+3,f,c
 21753  0129FC  3230               	rrcf	??i2_CANsendMessage+2,f,c
 21754  0129FE  322F               	rrcf	??i2_CANsendMessage+1,f,c
 21755  012A00  322E               	rrcf	??i2_CANsendMessage,f,c
 21756  012A02                     i2u981_40:
 21757  012A02  2EE8               	decfsz	wreg,f,c
 21758  012A04  D7F9               	goto	i2u981_45
 21759  012A06  C02E  F032         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 21760  012A0A  C02F  F033         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 21761  012A0E  C030  F034         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 21762  012A12  C031  F035         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 21763                           
 21764                           ; BSR set to: 15
 21765                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 21766  012A16  5032               	movf	i2CANsendMessage@tamp,w,c
 21767  012A18  6E32               	movwf	i2CANsendMessage@tamp,c
 21768  012A1A  6A33               	clrf	i2CANsendMessage@tamp+1,c
 21769  012A1C  6A34               	clrf	i2CANsendMessage@tamp+2,c
 21770  012A1E  6A35               	clrf	i2CANsendMessage@tamp+3,c
 21771                           
 21772                           ; BSR set to: 15
 21773                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 21774  012A20  C032  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 21775                           
 21776                           ;inc\CANlib.h: 483: }
 21777  012A24  D04D               	goto	i2l7657
 21778  012A26                     i2l417:
 21779                           
 21780                           ; BSR set to: 15
 21781                           ;inc\CANlib.h: 485: else
 21782                           ;inc\CANlib.h: 487: {
 21783                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 21784  012A26  010F               	movlb	15	; () banked
 21785  012A28  9722               	bcf	34,3,b	;volatile
 21786                           
 21787                           ; BSR set to: 15
 21788                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 21789  012A2A  C026  F02E         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 21790  012A2E  C027  F02F         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 21791  012A32  C028  F030         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 21792  012A36  C029  F031         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 21793  012A3A  0E04               	movlw	4
 21794  012A3C  D005               	goto	i2u982_40
 21795  012A3E                     i2u982_45:
 21796  012A3E  90D8               	bcf	status,0,c
 21797  012A40  3231               	rrcf	??i2_CANsendMessage+3,f,c
 21798  012A42  3230               	rrcf	??i2_CANsendMessage+2,f,c
 21799  012A44  322F               	rrcf	??i2_CANsendMessage+1,f,c
 21800  012A46  322E               	rrcf	??i2_CANsendMessage,f,c
 21801  012A48                     i2u982_40:
 21802  012A48  2EE8               	decfsz	wreg,f,c
 21803  012A4A  D7F9               	goto	i2u982_45
 21804  012A4C  C02E  F032         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 21805  012A50  C02F  F033         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 21806  012A54  C030  F034         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 21807  012A58  C031  F035         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 21808                           
 21809                           ; BSR set to: 15
 21810                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 21811  012A5C  5032               	movf	i2CANsendMessage@tamp,w,c
 21812  012A5E  6E32               	movwf	i2CANsendMessage@tamp,c
 21813  012A60  6A33               	clrf	i2CANsendMessage@tamp+1,c
 21814  012A62  6A34               	clrf	i2CANsendMessage@tamp+2,c
 21815  012A64  6A35               	clrf	i2CANsendMessage@tamp+3,c
 21816                           
 21817                           ; BSR set to: 15
 21818                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 21819  012A66  C032  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 21820                           
 21821                           ; BSR set to: 15
 21822                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 21823  012A6A  0E07               	movlw	7
 21824  012A6C  1426               	andwf	i2CANsendMessage@identifier,w,c
 21825  012A6E  6E32               	movwf	i2CANsendMessage@tamp,c
 21826  012A70  0E00               	movlw	0
 21827  012A72  1427               	andwf	i2CANsendMessage@identifier+1,w,c
 21828  012A74  6E33               	movwf	i2CANsendMessage@tamp+1,c
 21829  012A76  0E00               	movlw	0
 21830  012A78  1428               	andwf	i2CANsendMessage@identifier+2,w,c
 21831  012A7A  6E34               	movwf	i2CANsendMessage@tamp+2,c
 21832  012A7C  0E00               	movlw	0
 21833  012A7E  1429               	andwf	i2CANsendMessage@identifier+3,w,c
 21834  012A80  6E35               	movwf	i2CANsendMessage@tamp+3,c
 21835                           
 21836                           ; BSR set to: 15
 21837                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 21838  012A82  C032  F02E         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 21839  012A86  C033  F02F         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 21840  012A8A  C034  F030         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 21841  012A8E  C035  F031         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 21842  012A92  0E05               	movlw	5
 21843  012A94                     i2u983_45:
 21844  012A94  90D8               	bcf	status,0,c
 21845  012A96  362E               	rlcf	??i2_CANsendMessage,f,c
 21846  012A98  362F               	rlcf	??i2_CANsendMessage+1,f,c
 21847  012A9A  3630               	rlcf	??i2_CANsendMessage+2,f,c
 21848  012A9C  3631               	rlcf	??i2_CANsendMessage+3,f,c
 21849  012A9E  2EE8               	decfsz	wreg,f,c
 21850  012AA0  D7F9               	goto	i2u983_45
 21851  012AA2  C02E  F032         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 21852  012AA6  C02F  F033         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 21853  012AAA  C030  F034         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 21854  012AAE  C031  F035         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 21855                           
 21856                           ; BSR set to: 15
 21857                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 21858  012AB2  010F               	movlb	15	; () banked
 21859  012AB4  5122               	movf	34,w,b	;volatile
 21860  012AB6  0B1F               	andlw	31
 21861  012AB8  010F               	movlb	15	; () banked
 21862  012ABA  6F22               	movwf	34,b	;volatile
 21863                           
 21864                           ; BSR set to: 15
 21865                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 21866  012ABC  C032  FF22         	movff	i2CANsendMessage@tamp,3874	;volatile
 21867  012AC0                     i2l7657:
 21868                           
 21869                           ; BSR set to: 15
 21870                           ;inc\CANlib.h: 498: }
 21871                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 21872  012AC0  A02D               	btfss	i2CANsendMessage@flags,0,c
 21873  012AC2  D003               	goto	i2l424
 21874                           
 21875                           ; BSR set to: 15
 21876                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 21877  012AC4  010F               	movlb	15	; () banked
 21878  012AC6  8120               	bsf	32,0,b	;volatile
 21879  012AC8  D002               	goto	i2l425
 21880  012ACA                     i2l424:
 21881                           
 21882                           ; BSR set to: 15
 21883                           ;inc\CANlib.h: 502: else
 21884                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 21885  012ACA  010F               	movlb	15	; () banked
 21886  012ACC  9120               	bcf	32,0,b	;volatile
 21887  012ACE                     i2l425:
 21888                           
 21889                           ; BSR set to: 15
 21890                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 21891  012ACE  A22D               	btfss	i2CANsendMessage@flags,1,c
 21892  012AD0  D003               	goto	i2l426
 21893                           
 21894                           ; BSR set to: 15
 21895                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 21896  012AD2  010F               	movlb	15	; () banked
 21897  012AD4  8320               	bsf	32,1,b	;volatile
 21898  012AD6  D002               	goto	i2l7663
 21899  012AD8                     i2l426:
 21900                           
 21901                           ; BSR set to: 15
 21902                           ;inc\CANlib.h: 506: else
 21903                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 21904  012AD8  010F               	movlb	15	; () banked
 21905  012ADA  9320               	bcf	32,1,b	;volatile
 21906  012ADC                     i2l7663:
 21907                           
 21908                           ; BSR set to: 15
 21909                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 21910  012ADC  C02A  FFD9         	movff	i2CANsendMessage@data,fsr2l
 21911  012AE0  C02B  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 21912  012AE4  50DF               	movf	indf2,w,c
 21913  012AE6  010F               	movlb	15	; () banked
 21914  012AE8  6F26               	movwf	38,b	;volatile
 21915                           
 21916                           ; BSR set to: 15
 21917                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 21918  012AEA  EE20 F001          	lfsr	2,1
 21919  012AEE  502A               	movf	i2CANsendMessage@data,w,c
 21920  012AF0  26D9               	addwf	fsr2l,f,c
 21921  012AF2  502B               	movf	i2CANsendMessage@data+1,w,c
 21922  012AF4  22DA               	addwfc	fsr2h,f,c
 21923  012AF6  50DF               	movf	indf2,w,c
 21924  012AF8  010F               	movlb	15	; () banked
 21925  012AFA  6F27               	movwf	39,b	;volatile
 21926                           
 21927                           ; BSR set to: 15
 21928                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 21929  012AFC  EE20 F002          	lfsr	2,2
 21930  012B00  502A               	movf	i2CANsendMessage@data,w,c
 21931  012B02  26D9               	addwf	fsr2l,f,c
 21932  012B04  502B               	movf	i2CANsendMessage@data+1,w,c
 21933  012B06  22DA               	addwfc	fsr2h,f,c
 21934  012B08  50DF               	movf	indf2,w,c
 21935  012B0A  010F               	movlb	15	; () banked
 21936  012B0C  6F28               	movwf	40,b	;volatile
 21937                           
 21938                           ; BSR set to: 15
 21939                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 21940  012B0E  EE20 F003          	lfsr	2,3
 21941  012B12  502A               	movf	i2CANsendMessage@data,w,c
 21942  012B14  26D9               	addwf	fsr2l,f,c
 21943  012B16  502B               	movf	i2CANsendMessage@data+1,w,c
 21944  012B18  22DA               	addwfc	fsr2h,f,c
 21945  012B1A  50DF               	movf	indf2,w,c
 21946  012B1C  010F               	movlb	15	; () banked
 21947  012B1E  6F29               	movwf	41,b	;volatile
 21948                           
 21949                           ; BSR set to: 15
 21950                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 21951  012B20  EE20 F004          	lfsr	2,4
 21952  012B24  502A               	movf	i2CANsendMessage@data,w,c
 21953  012B26  26D9               	addwf	fsr2l,f,c
 21954  012B28  502B               	movf	i2CANsendMessage@data+1,w,c
 21955  012B2A  22DA               	addwfc	fsr2h,f,c
 21956  012B2C  50DF               	movf	indf2,w,c
 21957  012B2E  010F               	movlb	15	; () banked
 21958  012B30  6F2A               	movwf	42,b	;volatile
 21959                           
 21960                           ; BSR set to: 15
 21961                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 21962  012B32  EE20 F005          	lfsr	2,5
 21963  012B36  502A               	movf	i2CANsendMessage@data,w,c
 21964  012B38  26D9               	addwf	fsr2l,f,c
 21965  012B3A  502B               	movf	i2CANsendMessage@data+1,w,c
 21966  012B3C  22DA               	addwfc	fsr2h,f,c
 21967  012B3E  50DF               	movf	indf2,w,c
 21968  012B40  010F               	movlb	15	; () banked
 21969  012B42  6F2B               	movwf	43,b	;volatile
 21970                           
 21971                           ; BSR set to: 15
 21972                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 21973  012B44  EE20 F006          	lfsr	2,6
 21974  012B48  502A               	movf	i2CANsendMessage@data,w,c
 21975  012B4A  26D9               	addwf	fsr2l,f,c
 21976  012B4C  502B               	movf	i2CANsendMessage@data+1,w,c
 21977  012B4E  22DA               	addwfc	fsr2h,f,c
 21978  012B50  50DF               	movf	indf2,w,c
 21979  012B52  010F               	movlb	15	; () banked
 21980  012B54  6F2C               	movwf	44,b	;volatile
 21981                           
 21982                           ; BSR set to: 15
 21983                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 21984  012B56  EE20 F007          	lfsr	2,7
 21985  012B5A  502A               	movf	i2CANsendMessage@data,w,c
 21986  012B5C  26D9               	addwf	fsr2l,f,c
 21987  012B5E  502B               	movf	i2CANsendMessage@data+1,w,c
 21988  012B60  22DA               	addwfc	fsr2h,f,c
 21989  012B62  50DF               	movf	indf2,w,c
 21990  012B64  010F               	movlb	15	; () banked
 21991  012B66  6F2D               	movwf	45,b	;volatile
 21992                           
 21993                           ; BSR set to: 15
 21994                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 21995  012B68  010F               	movlb	15	; () banked
 21996  012B6A  8720               	bsf	32,3,b	;volatile
 21997                           
 21998                           ; BSR set to: 15
 21999                           ;inc\CANlib.h: 520: return;
 22000  012B6C  0012               	return	
 22001  012B6E                     __end_ofi2_CANsendMessage:
 22002                           	opt stack 0
 22003                           pclatu	equ	0xFFB
 22004                           pclath	equ	0xFFA
 22005                           tblptru	equ	0xFF8
 22006                           tblptrh	equ	0xFF7
 22007                           tblptrl	equ	0xFF6
 22008                           tablat	equ	0xFF5
 22009                           prodh	equ	0xFF4
 22010                           prodl	equ	0xFF3
 22011                           intcon	equ	0xFF2
 22012                           postinc0	equ	0xFEE
 22013                           fsr0h	equ	0xFEA
 22014                           fsr0l	equ	0xFE9
 22015                           wreg	equ	0xFE8
 22016                           indf1	equ	0xFE7
 22017                           plusw1	equ	0xFE3
 22018                           fsr1h	equ	0xFE2
 22019                           fsr1l	equ	0xFE1
 22020                           bsr	equ	0xFE0
 22021                           indf2	equ	0xFDF
 22022                           postinc2	equ	0xFDE
 22023                           plusw2	equ	0xFDB
 22024                           fsr2h	equ	0xFDA
 22025                           fsr2l	equ	0xFD9
 22026                           status	equ	0xFD8
 22027                           
 22028 ;; *************** function i2_CANisTxReady *****************
 22029 ;; Defined at:
 22030 ;;		line 1154 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 22031 ;; Parameters:    Size  Location     Type
 22032 ;;		None
 22033 ;; Auto vars:     Size  Location     Type
 22034 ;;		None
 22035 ;; Return value:  Size  Location     Type
 22036 ;;                  1    wreg      unsigned char 
 22037 ;; Registers used:
 22038 ;;		wreg, status,2
 22039 ;; Tracked objects:
 22040 ;;		On entry : 0/0
 22041 ;;		On exit  : 0/0
 22042 ;;		Unchanged: 0/0
 22043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22045 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22047 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22048 ;;Total ram usage:        1 bytes
 22049 ;; Hardware stack levels used:    1
 22050 ;; This function calls:
 22051 ;;		Nothing
 22052 ;; This function is called by:
 22053 ;;		_ISR_alta
 22054 ;; This function uses a non-reentrant model
 22055 ;;
 22056                           
 22057                           	psect	text60
 22058  0167E4                     __ptext60:
 22059                           	opt stack 0
 22060  0167E4                     i2_CANisTxReady:
 22061                           	opt stack 20
 22062                           
 22063                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 22064                           
 22065                           ; BSR set to: 15
 22066                           ;incstack = 0
 22067  0167E4  0E01               	movlw	1
 22068  0167E6  6E26               	movwf	i2_CANisTxReady$3168,c
 22069  0167E8  010F               	movlb	15	; () banked
 22070  0167EA  A740               	btfss	64,3,b	;volatile
 22071  0167EC  D008               	goto	i2l578
 22072                           
 22073                           ; BSR set to: 15
 22074  0167EE  010F               	movlb	15	; () banked
 22075  0167F0  A730               	btfss	48,3,b	;volatile
 22076  0167F2  D005               	goto	i2l578
 22077                           
 22078                           ; BSR set to: 15
 22079  0167F4  010F               	movlb	15	; () banked
 22080  0167F6  A720               	btfss	32,3,b	;volatile
 22081  0167F8  D002               	goto	i2l578
 22082                           
 22083                           ; BSR set to: 15
 22084  0167FA  0E00               	movlw	0
 22085  0167FC  6E26               	movwf	i2_CANisTxReady$3168,c
 22086  0167FE                     i2l578:
 22087                           
 22088                           ; BSR set to: 15
 22089  0167FE  5026               	movf	i2_CANisTxReady$3168,w,c
 22090  016800  0012               	return	
 22091  016802                     __end_ofi2_CANisTxReady:
 22092                           	opt stack 0
 22093                           pclatu	equ	0xFFB
 22094                           pclath	equ	0xFFA
 22095                           tblptru	equ	0xFF8
 22096                           tblptrh	equ	0xFF7
 22097                           tblptrl	equ	0xFF6
 22098                           tablat	equ	0xFF5
 22099                           prodh	equ	0xFF4
 22100                           prodl	equ	0xFF3
 22101                           intcon	equ	0xFF2
 22102                           postinc0	equ	0xFEE
 22103                           fsr0h	equ	0xFEA
 22104                           fsr0l	equ	0xFE9
 22105                           wreg	equ	0xFE8
 22106                           indf1	equ	0xFE7
 22107                           plusw1	equ	0xFE3
 22108                           fsr1h	equ	0xFE2
 22109                           fsr1l	equ	0xFE1
 22110                           bsr	equ	0xFE0
 22111                           indf2	equ	0xFDF
 22112                           postinc2	equ	0xFDE
 22113                           plusw2	equ	0xFDB
 22114                           fsr2h	equ	0xFDA
 22115                           fsr2l	equ	0xFD9
 22116                           status	equ	0xFD8
 22117                           
 22118 ;; *************** function _CANreceiveMessage *****************
 22119 ;; Defined at:
 22120 ;;		line 528 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 22121 ;; Parameters:    Size  Location     Type
 22122 ;;  msg             2    0[COMRAM] PTR struct .
 22123 ;;		 -> msg(15), 
 22124 ;; Auto vars:     Size  Location     Type
 22125 ;;  tamp            1   11[COMRAM] unsigned char 
 22126 ;;  error           1   10[COMRAM] unsigned char 
 22127 ;; Return value:  Size  Location     Type
 22128 ;;                  1    wreg      unsigned char 
 22129 ;; Registers used:
 22130 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22131 ;; Tracked objects:
 22132 ;;		On entry : 0/0
 22133 ;;		On exit  : 0/0
 22134 ;;		Unchanged: 0/0
 22135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22136 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22137 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22138 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22139 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22140 ;;Total ram usage:       12 bytes
 22141 ;; Hardware stack levels used:    1
 22142 ;; This function calls:
 22143 ;;		Nothing
 22144 ;; This function is called by:
 22145 ;;		_ISR_alta
 22146 ;; This function uses a non-reentrant model
 22147 ;;
 22148                           
 22149                           	psect	text61
 22150  013088                     __ptext61:
 22151                           	opt stack 0
 22152  013088                     _CANreceiveMessage:
 22153                           	opt stack 20
 22154                           
 22155                           ;inc\CANlib.h: 530: BYTE tamp;
 22156                           ;inc\CANlib.h: 531: BYTE error = 0;
 22157                           
 22158                           ; BSR set to: 15
 22159                           ;incstack = 0
 22160  013088  0E00               	movlw	0
 22161  01308A  6E30               	movwf	CANreceiveMessage@error,c
 22162                           
 22163                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 22164  01308C  BE74               	btfsc	3956,7,c	;volatile
 22165                           
 22166                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 22167  01308E  8030               	bsf	CANreceiveMessage@error,0,c
 22168                           
 22169                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 22170  013090  BC74               	btfsc	3956,6,c	;volatile
 22171                           
 22172                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 22173  013092  8230               	bsf	CANreceiveMessage@error,1,c
 22174                           
 22175                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 22176  013094  010F               	movlb	15	; () banked
 22177  013096  AF50               	btfss	80,7,b	;volatile
 22178  013098  D143               	goto	i2l432
 22179                           
 22180                           ; BSR set to: 15
 22181                           ;inc\CANlib.h: 541: {
 22182                           ;inc\CANlib.h: 542: msg->identifier = 0;
 22183  01309A  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22184  01309E  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22185  0130A2  6ADE               	clrf	postinc2,c
 22186  0130A4  6ADE               	clrf	postinc2,c
 22187  0130A6  6ADE               	clrf	postinc2,c
 22188  0130A8  6ADD               	clrf	postdec2,c
 22189                           
 22190                           ; BSR set to: 15
 22191                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 22192  0130AA  EE20 F004          	lfsr	2,4
 22193  0130AE  5026               	movf	CANreceiveMessage@msg,w,c
 22194  0130B0  26D9               	addwf	fsr2l,f,c
 22195  0130B2  5027               	movf	CANreceiveMessage@msg+1,w,c
 22196  0130B4  22DA               	addwfc	fsr2h,f,c
 22197  0130B6  CF56 FFDF          	movff	3926,indf2	;volatile
 22198                           
 22199                           ; BSR set to: 15
 22200                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 22201  0130BA  EE20 F005          	lfsr	2,5
 22202  0130BE  5026               	movf	CANreceiveMessage@msg,w,c
 22203  0130C0  26D9               	addwf	fsr2l,f,c
 22204  0130C2  5027               	movf	CANreceiveMessage@msg+1,w,c
 22205  0130C4  22DA               	addwfc	fsr2h,f,c
 22206  0130C6  CF57 FFDF          	movff	3927,indf2	;volatile
 22207                           
 22208                           ; BSR set to: 15
 22209                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 22210  0130CA  EE20 F006          	lfsr	2,6
 22211  0130CE  5026               	movf	CANreceiveMessage@msg,w,c
 22212  0130D0  26D9               	addwf	fsr2l,f,c
 22213  0130D2  5027               	movf	CANreceiveMessage@msg+1,w,c
 22214  0130D4  22DA               	addwfc	fsr2h,f,c
 22215  0130D6  CF58 FFDF          	movff	3928,indf2	;volatile
 22216                           
 22217                           ; BSR set to: 15
 22218                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 22219  0130DA  EE20 F007          	lfsr	2,7
 22220  0130DE  5026               	movf	CANreceiveMessage@msg,w,c
 22221  0130E0  26D9               	addwf	fsr2l,f,c
 22222  0130E2  5027               	movf	CANreceiveMessage@msg+1,w,c
 22223  0130E4  22DA               	addwfc	fsr2h,f,c
 22224  0130E6  CF59 FFDF          	movff	3929,indf2	;volatile
 22225                           
 22226                           ; BSR set to: 15
 22227                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 22228  0130EA  EE20 F008          	lfsr	2,8
 22229  0130EE  5026               	movf	CANreceiveMessage@msg,w,c
 22230  0130F0  26D9               	addwf	fsr2l,f,c
 22231  0130F2  5027               	movf	CANreceiveMessage@msg+1,w,c
 22232  0130F4  22DA               	addwfc	fsr2h,f,c
 22233  0130F6  CF5A FFDF          	movff	3930,indf2	;volatile
 22234                           
 22235                           ; BSR set to: 15
 22236                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 22237  0130FA  EE20 F009          	lfsr	2,9
 22238  0130FE  5026               	movf	CANreceiveMessage@msg,w,c
 22239  013100  26D9               	addwf	fsr2l,f,c
 22240  013102  5027               	movf	CANreceiveMessage@msg+1,w,c
 22241  013104  22DA               	addwfc	fsr2h,f,c
 22242  013106  CF5B FFDF          	movff	3931,indf2	;volatile
 22243                           
 22244                           ; BSR set to: 15
 22245                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 22246  01310A  EE20 F00A          	lfsr	2,10
 22247  01310E  5026               	movf	CANreceiveMessage@msg,w,c
 22248  013110  26D9               	addwf	fsr2l,f,c
 22249  013112  5027               	movf	CANreceiveMessage@msg+1,w,c
 22250  013114  22DA               	addwfc	fsr2h,f,c
 22251  013116  CF5C FFDF          	movff	3932,indf2	;volatile
 22252                           
 22253                           ; BSR set to: 15
 22254                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 22255  01311A  EE20 F00B          	lfsr	2,11
 22256  01311E  5026               	movf	CANreceiveMessage@msg,w,c
 22257  013120  26D9               	addwf	fsr2l,f,c
 22258  013122  5027               	movf	CANreceiveMessage@msg+1,w,c
 22259  013124  22DA               	addwfc	fsr2h,f,c
 22260  013126  CF5D FFDF          	movff	3933,indf2	;volatile
 22261                           
 22262                           ; BSR set to: 15
 22263                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 22264  01312A  EE20 F00E          	lfsr	2,14
 22265  01312E  5026               	movf	CANreceiveMessage@msg,w,c
 22266  013130  26D9               	addwf	fsr2l,f,c
 22267  013132  5027               	movf	CANreceiveMessage@msg+1,w,c
 22268  013134  22DA               	addwfc	fsr2h,f,c
 22269  013136  010F               	movlb	15	; () banked
 22270  013138  AD55               	btfss	85,6,b	;volatile
 22271  01313A  D002               	goto	i2u889_40
 22272  01313C  0E01               	movlw	1
 22273  01313E  D001               	goto	i2u889_46
 22274  013140                     i2u889_40:
 22275  013140  0E00               	movlw	0
 22276  013142                     i2u889_46:
 22277  013142  6EDF               	movwf	indf2,c
 22278                           
 22279                           ; BSR set to: 15
 22280                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 22281  013144  EE20 F00D          	lfsr	2,13
 22282  013148  5026               	movf	CANreceiveMessage@msg,w,c
 22283  01314A  26D9               	addwf	fsr2l,f,c
 22284  01314C  5027               	movf	CANreceiveMessage@msg+1,w,c
 22285  01314E  22DA               	addwfc	fsr2h,f,c
 22286  013150  010F               	movlb	15	; () banked
 22287  013152  5155               	movf	85,w,b	;volatile
 22288  013154  0B0F               	andlw	15
 22289  013156  6EDF               	movwf	indf2,c
 22290                           
 22291                           ; BSR set to: 15
 22292                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 22293  013158  EE20 F00C          	lfsr	2,12
 22294  01315C  5026               	movf	CANreceiveMessage@msg,w,c
 22295  01315E  26D9               	addwf	fsr2l,f,c
 22296  013160  5027               	movf	CANreceiveMessage@msg+1,w,c
 22297  013162  22DA               	addwfc	fsr2h,f,c
 22298  013164  010F               	movlb	15	; () banked
 22299  013166  A752               	btfss	82,3,b	;volatile
 22300  013168  D002               	goto	i2u890_40
 22301  01316A  0E01               	movlw	1
 22302  01316C  D001               	goto	i2u890_46
 22303  01316E                     i2u890_40:
 22304  01316E  0E00               	movlw	0
 22305  013170                     i2u890_46:
 22306  013170  6EDF               	movwf	indf2,c
 22307                           
 22308                           ; BSR set to: 15
 22309                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 22310  013172  010F               	movlb	15	; () banked
 22311  013174  B752               	btfsc	82,3,b	;volatile
 22312  013176  D044               	goto	i2l7055
 22313                           
 22314                           ; BSR set to: 15
 22315                           ;inc\CANlib.h: 559: {
 22316                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 22317  013178  CF51 F028          	movff	3921,??_CANreceiveMessage	;volatile
 22318  01317C  6A29               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 22319  01317E  6A2A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 22320  013180  6A2B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 22321  013182  0E03               	movlw	3
 22322  013184                     i2u892_45:
 22323  013184  90D8               	bcf	status,0,c
 22324  013186  3628               	rlcf	??_CANreceiveMessage,f,c
 22325  013188  3629               	rlcf	??_CANreceiveMessage+1,f,c
 22326  01318A  362A               	rlcf	??_CANreceiveMessage+2,f,c
 22327  01318C  362B               	rlcf	??_CANreceiveMessage+3,f,c
 22328  01318E  2EE8               	decfsz	wreg,f,c
 22329  013190  D7F9               	goto	i2u892_45
 22330  013192  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22331  013196  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22332  01319A  C028  FFDE         	movff	??_CANreceiveMessage,postinc2
 22333  01319E  C029  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 22334  0131A2  C02A  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 22335  0131A6  C02B  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 22336                           
 22337                           ; BSR set to: 15
 22338                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 22339  0131AA  010F               	movlb	15	; () banked
 22340  0131AC  3952               	swapf	82,w,b	;volatile
 22341  0131AE  42E8               	rrncf	wreg,f,c
 22342  0131B0  0B07               	andlw	7
 22343  0131B2  0B07               	andlw	7
 22344  0131B4  6E31               	movwf	CANreceiveMessage@tamp,c
 22345                           
 22346                           ; BSR set to: 15
 22347                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 22348  0131B6  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22349  0131BA  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22350  0131BE  CFDE F028          	movff	postinc2,??_CANreceiveMessage
 22351  0131C2  CFDE F029          	movff	postinc2,??_CANreceiveMessage+1
 22352  0131C6  CFDE F02A          	movff	postinc2,??_CANreceiveMessage+2
 22353  0131CA  CFDE F02B          	movff	postinc2,??_CANreceiveMessage+3
 22354  0131CE  5031               	movf	CANreceiveMessage@tamp,w,c
 22355  0131D0  2428               	addwf	??_CANreceiveMessage,w,c
 22356  0131D2  6E2C               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 22357  0131D4  0E00               	movlw	0
 22358  0131D6  2029               	addwfc	??_CANreceiveMessage+1,w,c
 22359  0131D8  6E2D               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 22360  0131DA  0E00               	movlw	0
 22361  0131DC  202A               	addwfc	??_CANreceiveMessage+2,w,c
 22362  0131DE  6E2E               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 22363  0131E0  0E00               	movlw	0
 22364  0131E2  202B               	addwfc	??_CANreceiveMessage+3,w,c
 22365  0131E4  6E2F               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 22366  0131E6  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22367  0131EA  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22368  0131EE  C02C  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 22369  0131F2  C02D  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 22370  0131F6  C02E  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 22371  0131FA  C02F  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 22372                           
 22373                           ;inc\CANlib.h: 563: }
 22374  0131FE  D08D               	goto	i2l7081
 22375  013200                     i2l7055:
 22376                           
 22377                           ; BSR set to: 15
 22378                           ;inc\CANlib.h: 564: else
 22379                           ;inc\CANlib.h: 565: {
 22380                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 22381  013200  CF54 F028          	movff	3924,??_CANreceiveMessage	;volatile
 22382  013204  6A29               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 22383  013206  6A2A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 22384  013208  6A2B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 22385  01320A  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22386  01320E  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22387  013212  C028  FFDE         	movff	??_CANreceiveMessage,postinc2
 22388  013216  C029  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 22389  01321A  C02A  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 22390  01321E  C02B  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 22391                           
 22392                           ; BSR set to: 15
 22393                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 22394  013222  CF53 F028          	movff	3923,??_CANreceiveMessage	;volatile
 22395  013226  6A29               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 22396  013228  6A2A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 22397  01322A  6A2B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 22398  01322C  C02A  F02B         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 22399  013230  C029  F02A         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 22400  013234  C028  F029         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 22401  013238  6A28               	clrf	??_CANreceiveMessage,c
 22402  01323A  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22403  01323E  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22404  013242  5028               	movf	??_CANreceiveMessage,w,c
 22405  013244  26DE               	addwf	postinc2,f,c
 22406  013246  5029               	movf	??_CANreceiveMessage+1,w,c
 22407  013248  22DE               	addwfc	postinc2,f,c
 22408  01324A  502A               	movf	??_CANreceiveMessage+2,w,c
 22409  01324C  22DE               	addwfc	postinc2,f,c
 22410  01324E  502B               	movf	??_CANreceiveMessage+3,w,c
 22411  013250  22DE               	addwfc	postinc2,f,c
 22412                           
 22413                           ; BSR set to: 15
 22414                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 22415  013252  010F               	movlb	15	; () banked
 22416  013254  A152               	btfss	82,0,b	;volatile
 22417  013256  D00C               	goto	i2l7063
 22418                           
 22419                           ; BSR set to: 15
 22420                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 22421  013258  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22422  01325C  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22423  013260  0E00               	movlw	0
 22424  013262  12DE               	iorwf	postinc2,f,c
 22425  013264  0E00               	movlw	0
 22426  013266  12DE               	iorwf	postinc2,f,c
 22427  013268  0E01               	movlw	1
 22428  01326A  12DE               	iorwf	postinc2,f,c
 22429  01326C  0E00               	movlw	0
 22430  01326E  12DE               	iorwf	postinc2,f,c
 22431  013270                     i2l7063:
 22432                           
 22433                           ; BSR set to: 15
 22434                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 22435  013270  010F               	movlb	15	; () banked
 22436  013272  A352               	btfss	82,1,b	;volatile
 22437  013274  D00C               	goto	i2l7067
 22438                           
 22439                           ; BSR set to: 15
 22440                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 22441  013276  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22442  01327A  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22443  01327E  0E00               	movlw	0
 22444  013280  12DE               	iorwf	postinc2,f,c
 22445  013282  0E00               	movlw	0
 22446  013284  12DE               	iorwf	postinc2,f,c
 22447  013286  0E02               	movlw	2
 22448  013288  12DE               	iorwf	postinc2,f,c
 22449  01328A  0E00               	movlw	0
 22450  01328C  12DE               	iorwf	postinc2,f,c
 22451  01328E                     i2l7067:
 22452                           
 22453                           ; BSR set to: 15
 22454                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 22455  01328E  010F               	movlb	15	; () banked
 22456  013290  AB52               	btfss	82,5,b	;volatile
 22457  013292  D00C               	goto	i2l7071
 22458                           
 22459                           ; BSR set to: 15
 22460                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 22461  013294  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22462  013298  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22463  01329C  0E00               	movlw	0
 22464  01329E  12DE               	iorwf	postinc2,f,c
 22465  0132A0  0E00               	movlw	0
 22466  0132A2  12DE               	iorwf	postinc2,f,c
 22467  0132A4  0E04               	movlw	4
 22468  0132A6  12DE               	iorwf	postinc2,f,c
 22469  0132A8  0E00               	movlw	0
 22470  0132AA  12DE               	iorwf	postinc2,f,c
 22471  0132AC                     i2l7071:
 22472                           
 22473                           ; BSR set to: 15
 22474                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 22475  0132AC  010F               	movlb	15	; () banked
 22476  0132AE  AD52               	btfss	82,6,b	;volatile
 22477  0132B0  D00C               	goto	i2l7075
 22478                           
 22479                           ; BSR set to: 15
 22480                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 22481  0132B2  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22482  0132B6  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22483  0132BA  0E00               	movlw	0
 22484  0132BC  12DE               	iorwf	postinc2,f,c
 22485  0132BE  0E00               	movlw	0
 22486  0132C0  12DE               	iorwf	postinc2,f,c
 22487  0132C2  0E08               	movlw	8
 22488  0132C4  12DE               	iorwf	postinc2,f,c
 22489  0132C6  0E00               	movlw	0
 22490  0132C8  12DE               	iorwf	postinc2,f,c
 22491  0132CA                     i2l7075:
 22492                           
 22493                           ; BSR set to: 15
 22494                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 22495  0132CA  010F               	movlb	15	; () banked
 22496  0132CC  AF52               	btfss	82,7,b	;volatile
 22497  0132CE  D00C               	goto	i2l7079
 22498                           
 22499                           ; BSR set to: 15
 22500                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 22501  0132D0  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22502  0132D4  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22503  0132D8  0E00               	movlw	0
 22504  0132DA  12DE               	iorwf	postinc2,f,c
 22505  0132DC  0E00               	movlw	0
 22506  0132DE  12DE               	iorwf	postinc2,f,c
 22507  0132E0  0E10               	movlw	16
 22508  0132E2  12DE               	iorwf	postinc2,f,c
 22509  0132E4  0E00               	movlw	0
 22510  0132E6  12DE               	iorwf	postinc2,f,c
 22511  0132E8                     i2l7079:
 22512                           
 22513                           ; BSR set to: 15
 22514                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 22515  0132E8  CF51 F028          	movff	3921,??_CANreceiveMessage	;volatile
 22516  0132EC  6A29               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 22517  0132EE  6A2A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 22518  0132F0  6A2B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 22519  0132F2  0E15               	movlw	21
 22520  0132F4                     i2u898_45:
 22521  0132F4  90D8               	bcf	status,0,c
 22522  0132F6  3628               	rlcf	??_CANreceiveMessage,f,c
 22523  0132F8  3629               	rlcf	??_CANreceiveMessage+1,f,c
 22524  0132FA  362A               	rlcf	??_CANreceiveMessage+2,f,c
 22525  0132FC  362B               	rlcf	??_CANreceiveMessage+3,f,c
 22526  0132FE  2EE8               	decfsz	wreg,f,c
 22527  013300  D7F9               	goto	i2u898_45
 22528  013302  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22529  013306  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22530  01330A  5028               	movf	??_CANreceiveMessage,w,c
 22531  01330C  12DE               	iorwf	postinc2,f,c
 22532  01330E  5029               	movf	??_CANreceiveMessage+1,w,c
 22533  013310  12DE               	iorwf	postinc2,f,c
 22534  013312  502A               	movf	??_CANreceiveMessage+2,w,c
 22535  013314  12DE               	iorwf	postinc2,f,c
 22536  013316  502B               	movf	??_CANreceiveMessage+3,w,c
 22537  013318  12DE               	iorwf	postinc2,f,c
 22538  01331A                     i2l7081:
 22539                           
 22540                           ; BSR set to: 15
 22541                           ;inc\CANlib.h: 581: }
 22542                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 22543  01331A  010F               	movlb	15	; () banked
 22544  01331C  9F50               	bcf	80,7,b	;volatile
 22545                           
 22546                           ; BSR set to: 15
 22547                           ;inc\CANlib.h: 584: return (error);
 22548                           ;	Return value of _CANreceiveMessage is never used
 22549  01331E  0012               	return	
 22550  013320                     i2l432:
 22551                           
 22552                           ; BSR set to: 15
 22553                           ;inc\CANlib.h: 585: }
 22554                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 22555  013320  AE60               	btfss	3936,7,c	;volatile
 22556  013322  0012               	return	
 22557                           
 22558                           ; BSR set to: 15
 22559                           ;inc\CANlib.h: 588: {
 22560                           ;inc\CANlib.h: 589: msg->identifier = 0;
 22561  013324  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22562  013328  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22563  01332C  6ADE               	clrf	postinc2,c
 22564  01332E  6ADE               	clrf	postinc2,c
 22565  013330  6ADE               	clrf	postinc2,c
 22566  013332  6ADD               	clrf	postdec2,c
 22567                           
 22568                           ; BSR set to: 15
 22569                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 22570  013334  EE20 F004          	lfsr	2,4
 22571  013338  5026               	movf	CANreceiveMessage@msg,w,c
 22572  01333A  26D9               	addwf	fsr2l,f,c
 22573  01333C  5027               	movf	CANreceiveMessage@msg+1,w,c
 22574  01333E  22DA               	addwfc	fsr2h,f,c
 22575  013340  CF66 FFDF          	movff	3942,indf2	;volatile
 22576                           
 22577                           ; BSR set to: 15
 22578                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 22579  013344  EE20 F005          	lfsr	2,5
 22580  013348  5026               	movf	CANreceiveMessage@msg,w,c
 22581  01334A  26D9               	addwf	fsr2l,f,c
 22582  01334C  5027               	movf	CANreceiveMessage@msg+1,w,c
 22583  01334E  22DA               	addwfc	fsr2h,f,c
 22584  013350  CF67 FFDF          	movff	3943,indf2	;volatile
 22585                           
 22586                           ; BSR set to: 15
 22587                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 22588  013354  EE20 F006          	lfsr	2,6
 22589  013358  5026               	movf	CANreceiveMessage@msg,w,c
 22590  01335A  26D9               	addwf	fsr2l,f,c
 22591  01335C  5027               	movf	CANreceiveMessage@msg+1,w,c
 22592  01335E  22DA               	addwfc	fsr2h,f,c
 22593  013360  CF68 FFDF          	movff	3944,indf2	;volatile
 22594                           
 22595                           ; BSR set to: 15
 22596                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 22597  013364  EE20 F007          	lfsr	2,7
 22598  013368  5026               	movf	CANreceiveMessage@msg,w,c
 22599  01336A  26D9               	addwf	fsr2l,f,c
 22600  01336C  5027               	movf	CANreceiveMessage@msg+1,w,c
 22601  01336E  22DA               	addwfc	fsr2h,f,c
 22602  013370  CF69 FFDF          	movff	3945,indf2	;volatile
 22603                           
 22604                           ; BSR set to: 15
 22605                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 22606  013374  EE20 F008          	lfsr	2,8
 22607  013378  5026               	movf	CANreceiveMessage@msg,w,c
 22608  01337A  26D9               	addwf	fsr2l,f,c
 22609  01337C  5027               	movf	CANreceiveMessage@msg+1,w,c
 22610  01337E  22DA               	addwfc	fsr2h,f,c
 22611  013380  CF6A FFDF          	movff	3946,indf2	;volatile
 22612                           
 22613                           ; BSR set to: 15
 22614                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 22615  013384  EE20 F009          	lfsr	2,9
 22616  013388  5026               	movf	CANreceiveMessage@msg,w,c
 22617  01338A  26D9               	addwf	fsr2l,f,c
 22618  01338C  5027               	movf	CANreceiveMessage@msg+1,w,c
 22619  01338E  22DA               	addwfc	fsr2h,f,c
 22620  013390  CF6B FFDF          	movff	3947,indf2	;volatile
 22621                           
 22622                           ; BSR set to: 15
 22623                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 22624  013394  EE20 F00A          	lfsr	2,10
 22625  013398  5026               	movf	CANreceiveMessage@msg,w,c
 22626  01339A  26D9               	addwf	fsr2l,f,c
 22627  01339C  5027               	movf	CANreceiveMessage@msg+1,w,c
 22628  01339E  22DA               	addwfc	fsr2h,f,c
 22629  0133A0  CF6C FFDF          	movff	3948,indf2	;volatile
 22630                           
 22631                           ; BSR set to: 15
 22632                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 22633  0133A4  EE20 F00B          	lfsr	2,11
 22634  0133A8  5026               	movf	CANreceiveMessage@msg,w,c
 22635  0133AA  26D9               	addwf	fsr2l,f,c
 22636  0133AC  5027               	movf	CANreceiveMessage@msg+1,w,c
 22637  0133AE  22DA               	addwfc	fsr2h,f,c
 22638  0133B0  CF6D FFDF          	movff	3949,indf2	;volatile
 22639                           
 22640                           ; BSR set to: 15
 22641                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 22642  0133B4  EE20 F00E          	lfsr	2,14
 22643  0133B8  5026               	movf	CANreceiveMessage@msg,w,c
 22644  0133BA  26D9               	addwf	fsr2l,f,c
 22645  0133BC  5027               	movf	CANreceiveMessage@msg+1,w,c
 22646  0133BE  22DA               	addwfc	fsr2h,f,c
 22647  0133C0  AC65               	btfss	3941,6,c	;volatile
 22648  0133C2  D002               	goto	i2u900_40
 22649  0133C4  0E01               	movlw	1
 22650  0133C6  D001               	goto	i2u900_46
 22651  0133C8                     i2u900_40:
 22652  0133C8  0E00               	movlw	0
 22653  0133CA                     i2u900_46:
 22654  0133CA  6EDF               	movwf	indf2,c
 22655                           
 22656                           ; BSR set to: 15
 22657                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 22658  0133CC  EE20 F00D          	lfsr	2,13
 22659  0133D0  5026               	movf	CANreceiveMessage@msg,w,c
 22660  0133D2  26D9               	addwf	fsr2l,f,c
 22661  0133D4  5027               	movf	CANreceiveMessage@msg+1,w,c
 22662  0133D6  22DA               	addwfc	fsr2h,f,c
 22663  0133D8  5065               	movf	3941,w,c	;volatile
 22664  0133DA  0B0F               	andlw	15
 22665  0133DC  6EDF               	movwf	indf2,c
 22666                           
 22667                           ; BSR set to: 15
 22668                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 22669  0133DE  EE20 F00C          	lfsr	2,12
 22670  0133E2  5026               	movf	CANreceiveMessage@msg,w,c
 22671  0133E4  26D9               	addwf	fsr2l,f,c
 22672  0133E6  5027               	movf	CANreceiveMessage@msg+1,w,c
 22673  0133E8  22DA               	addwfc	fsr2h,f,c
 22674  0133EA  A662               	btfss	3938,3,c	;volatile
 22675  0133EC  D002               	goto	i2u901_40
 22676  0133EE  0E01               	movlw	1
 22677  0133F0  D001               	goto	i2u901_46
 22678  0133F2                     i2u901_40:
 22679  0133F2  0E00               	movlw	0
 22680  0133F4                     i2u901_46:
 22681  0133F4  6EDF               	movwf	indf2,c
 22682                           
 22683                           ; BSR set to: 15
 22684                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 22685  0133F6  B662               	btfsc	3938,3,c	;volatile
 22686  0133F8  D043               	goto	i2l7117
 22687                           
 22688                           ; BSR set to: 15
 22689                           ;inc\CANlib.h: 606: {
 22690                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 22691  0133FA  CF61 F028          	movff	3937,??_CANreceiveMessage	;volatile
 22692  0133FE  6A29               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 22693  013400  6A2A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 22694  013402  6A2B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 22695  013404  0E03               	movlw	3
 22696  013406                     i2u903_45:
 22697  013406  90D8               	bcf	status,0,c
 22698  013408  3628               	rlcf	??_CANreceiveMessage,f,c
 22699  01340A  3629               	rlcf	??_CANreceiveMessage+1,f,c
 22700  01340C  362A               	rlcf	??_CANreceiveMessage+2,f,c
 22701  01340E  362B               	rlcf	??_CANreceiveMessage+3,f,c
 22702  013410  2EE8               	decfsz	wreg,f,c
 22703  013412  D7F9               	goto	i2u903_45
 22704  013414  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22705  013418  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22706  01341C  C028  FFDE         	movff	??_CANreceiveMessage,postinc2
 22707  013420  C029  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 22708  013424  C02A  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 22709  013428  C02B  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 22710                           
 22711                           ; BSR set to: 15
 22712                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 22713  01342C  3862               	swapf	3938,w,c	;volatile
 22714  01342E  42E8               	rrncf	wreg,f,c
 22715  013430  0B07               	andlw	7
 22716  013432  0B07               	andlw	7
 22717  013434  6E31               	movwf	CANreceiveMessage@tamp,c
 22718                           
 22719                           ; BSR set to: 15
 22720                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 22721  013436  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22722  01343A  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22723  01343E  CFDE F028          	movff	postinc2,??_CANreceiveMessage
 22724  013442  CFDE F029          	movff	postinc2,??_CANreceiveMessage+1
 22725  013446  CFDE F02A          	movff	postinc2,??_CANreceiveMessage+2
 22726  01344A  CFDE F02B          	movff	postinc2,??_CANreceiveMessage+3
 22727  01344E  5031               	movf	CANreceiveMessage@tamp,w,c
 22728  013450  2428               	addwf	??_CANreceiveMessage,w,c
 22729  013452  6E2C               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 22730  013454  0E00               	movlw	0
 22731  013456  2029               	addwfc	??_CANreceiveMessage+1,w,c
 22732  013458  6E2D               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 22733  01345A  0E00               	movlw	0
 22734  01345C  202A               	addwfc	??_CANreceiveMessage+2,w,c
 22735  01345E  6E2E               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 22736  013460  0E00               	movlw	0
 22737  013462  202B               	addwfc	??_CANreceiveMessage+3,w,c
 22738  013464  6E2F               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 22739  013466  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22740  01346A  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22741  01346E  C02C  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 22742  013472  C02D  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 22743  013476  C02E  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 22744  01347A  C02F  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 22745                           
 22746                           ;inc\CANlib.h: 610: }
 22747  01347E  D088               	goto	i2l7143
 22748  013480                     i2l7117:
 22749                           
 22750                           ; BSR set to: 15
 22751                           ;inc\CANlib.h: 611: else
 22752                           ;inc\CANlib.h: 612: {
 22753                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 22754  013480  CF64 F028          	movff	3940,??_CANreceiveMessage	;volatile
 22755  013484  6A29               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 22756  013486  6A2A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 22757  013488  6A2B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 22758  01348A  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22759  01348E  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22760  013492  C028  FFDE         	movff	??_CANreceiveMessage,postinc2
 22761  013496  C029  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 22762  01349A  C02A  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 22763  01349E  C02B  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 22764                           
 22765                           ; BSR set to: 15
 22766                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 22767  0134A2  CF63 F028          	movff	3939,??_CANreceiveMessage	;volatile
 22768  0134A6  6A29               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 22769  0134A8  6A2A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 22770  0134AA  6A2B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 22771  0134AC  C02A  F02B         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 22772  0134B0  C029  F02A         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 22773  0134B4  C028  F029         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 22774  0134B8  6A28               	clrf	??_CANreceiveMessage,c
 22775  0134BA  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22776  0134BE  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22777  0134C2  5028               	movf	??_CANreceiveMessage,w,c
 22778  0134C4  26DE               	addwf	postinc2,f,c
 22779  0134C6  5029               	movf	??_CANreceiveMessage+1,w,c
 22780  0134C8  22DE               	addwfc	postinc2,f,c
 22781  0134CA  502A               	movf	??_CANreceiveMessage+2,w,c
 22782  0134CC  22DE               	addwfc	postinc2,f,c
 22783  0134CE  502B               	movf	??_CANreceiveMessage+3,w,c
 22784  0134D0  22DE               	addwfc	postinc2,f,c
 22785                           
 22786                           ; BSR set to: 15
 22787                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 22788  0134D2  A062               	btfss	3938,0,c	;volatile
 22789  0134D4  D00C               	goto	i2l7125
 22790                           
 22791                           ; BSR set to: 15
 22792                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 22793  0134D6  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22794  0134DA  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22795  0134DE  0E00               	movlw	0
 22796  0134E0  12DE               	iorwf	postinc2,f,c
 22797  0134E2  0E00               	movlw	0
 22798  0134E4  12DE               	iorwf	postinc2,f,c
 22799  0134E6  0E01               	movlw	1
 22800  0134E8  12DE               	iorwf	postinc2,f,c
 22801  0134EA  0E00               	movlw	0
 22802  0134EC  12DE               	iorwf	postinc2,f,c
 22803  0134EE                     i2l7125:
 22804                           
 22805                           ; BSR set to: 15
 22806                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 22807  0134EE  A262               	btfss	3938,1,c	;volatile
 22808  0134F0  D00C               	goto	i2l7129
 22809                           
 22810                           ; BSR set to: 15
 22811                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 22812  0134F2  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22813  0134F6  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22814  0134FA  0E00               	movlw	0
 22815  0134FC  12DE               	iorwf	postinc2,f,c
 22816  0134FE  0E00               	movlw	0
 22817  013500  12DE               	iorwf	postinc2,f,c
 22818  013502  0E02               	movlw	2
 22819  013504  12DE               	iorwf	postinc2,f,c
 22820  013506  0E00               	movlw	0
 22821  013508  12DE               	iorwf	postinc2,f,c
 22822  01350A                     i2l7129:
 22823                           
 22824                           ; BSR set to: 15
 22825                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 22826  01350A  AA62               	btfss	3938,5,c	;volatile
 22827  01350C  D00C               	goto	i2l7133
 22828                           
 22829                           ; BSR set to: 15
 22830                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 22831  01350E  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22832  013512  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22833  013516  0E00               	movlw	0
 22834  013518  12DE               	iorwf	postinc2,f,c
 22835  01351A  0E00               	movlw	0
 22836  01351C  12DE               	iorwf	postinc2,f,c
 22837  01351E  0E04               	movlw	4
 22838  013520  12DE               	iorwf	postinc2,f,c
 22839  013522  0E00               	movlw	0
 22840  013524  12DE               	iorwf	postinc2,f,c
 22841  013526                     i2l7133:
 22842                           
 22843                           ; BSR set to: 15
 22844                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 22845  013526  AC62               	btfss	3938,6,c	;volatile
 22846  013528  D00C               	goto	i2l7137
 22847                           
 22848                           ; BSR set to: 15
 22849                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 22850  01352A  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22851  01352E  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22852  013532  0E00               	movlw	0
 22853  013534  12DE               	iorwf	postinc2,f,c
 22854  013536  0E00               	movlw	0
 22855  013538  12DE               	iorwf	postinc2,f,c
 22856  01353A  0E08               	movlw	8
 22857  01353C  12DE               	iorwf	postinc2,f,c
 22858  01353E  0E00               	movlw	0
 22859  013540  12DE               	iorwf	postinc2,f,c
 22860  013542                     i2l7137:
 22861                           
 22862                           ; BSR set to: 15
 22863                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 22864  013542  AE62               	btfss	3938,7,c	;volatile
 22865  013544  D00C               	goto	i2l7141
 22866                           
 22867                           ; BSR set to: 15
 22868                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 22869  013546  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22870  01354A  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22871  01354E  0E00               	movlw	0
 22872  013550  12DE               	iorwf	postinc2,f,c
 22873  013552  0E00               	movlw	0
 22874  013554  12DE               	iorwf	postinc2,f,c
 22875  013556  0E10               	movlw	16
 22876  013558  12DE               	iorwf	postinc2,f,c
 22877  01355A  0E00               	movlw	0
 22878  01355C  12DE               	iorwf	postinc2,f,c
 22879  01355E                     i2l7141:
 22880                           
 22881                           ; BSR set to: 15
 22882                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 22883  01355E  CF61 F028          	movff	3937,??_CANreceiveMessage	;volatile
 22884  013562  6A29               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 22885  013564  6A2A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 22886  013566  6A2B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 22887  013568  0E15               	movlw	21
 22888  01356A                     i2u909_45:
 22889  01356A  90D8               	bcf	status,0,c
 22890  01356C  3628               	rlcf	??_CANreceiveMessage,f,c
 22891  01356E  3629               	rlcf	??_CANreceiveMessage+1,f,c
 22892  013570  362A               	rlcf	??_CANreceiveMessage+2,f,c
 22893  013572  362B               	rlcf	??_CANreceiveMessage+3,f,c
 22894  013574  2EE8               	decfsz	wreg,f,c
 22895  013576  D7F9               	goto	i2u909_45
 22896  013578  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22897  01357C  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22898  013580  5028               	movf	??_CANreceiveMessage,w,c
 22899  013582  12DE               	iorwf	postinc2,f,c
 22900  013584  5029               	movf	??_CANreceiveMessage+1,w,c
 22901  013586  12DE               	iorwf	postinc2,f,c
 22902  013588  502A               	movf	??_CANreceiveMessage+2,w,c
 22903  01358A  12DE               	iorwf	postinc2,f,c
 22904  01358C  502B               	movf	??_CANreceiveMessage+3,w,c
 22905  01358E  12DE               	iorwf	postinc2,f,c
 22906  013590                     i2l7143:
 22907                           
 22908                           ; BSR set to: 15
 22909                           ;inc\CANlib.h: 629: }
 22910                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 22911  013590  9E60               	bcf	3936,7,c	;volatile
 22912                           
 22913                           ; BSR set to: 15
 22914                           ;inc\CANlib.h: 632: return (error);
 22915                           ;	Return value of _CANreceiveMessage is never used
 22916  013592  0012               	return	
 22917  013594                     __end_of_CANreceiveMessage:
 22918                           	opt stack 0
 22919                           pclatu	equ	0xFFB
 22920                           pclath	equ	0xFFA
 22921                           tblptru	equ	0xFF8
 22922                           tblptrh	equ	0xFF7
 22923                           tblptrl	equ	0xFF6
 22924                           tablat	equ	0xFF5
 22925                           prodh	equ	0xFF4
 22926                           prodl	equ	0xFF3
 22927                           intcon	equ	0xFF2
 22928                           postinc0	equ	0xFEE
 22929                           fsr0h	equ	0xFEA
 22930                           fsr0l	equ	0xFE9
 22931                           wreg	equ	0xFE8
 22932                           indf1	equ	0xFE7
 22933                           plusw1	equ	0xFE3
 22934                           fsr1h	equ	0xFE2
 22935                           fsr1l	equ	0xFE1
 22936                           bsr	equ	0xFE0
 22937                           indf2	equ	0xFDF
 22938                           postinc2	equ	0xFDE
 22939                           postdec2	equ	0xFDD
 22940                           plusw2	equ	0xFDB
 22941                           fsr2h	equ	0xFDA
 22942                           fsr2l	equ	0xFD9
 22943                           status	equ	0xFD8
 22944                           
 22945 ;; *************** function _CANisRxReady *****************
 22946 ;; Defined at:
 22947 ;;		line 1163 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 22948 ;; Parameters:    Size  Location     Type
 22949 ;;		None
 22950 ;; Auto vars:     Size  Location     Type
 22951 ;;		None
 22952 ;; Return value:  Size  Location     Type
 22953 ;;                  1    wreg      unsigned char 
 22954 ;; Registers used:
 22955 ;;		wreg, status,2
 22956 ;; Tracked objects:
 22957 ;;		On entry : 0/0
 22958 ;;		On exit  : 0/0
 22959 ;;		Unchanged: 0/0
 22960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22962 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22964 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22965 ;;Total ram usage:        1 bytes
 22966 ;; Hardware stack levels used:    1
 22967 ;; This function calls:
 22968 ;;		Nothing
 22969 ;; This function is called by:
 22970 ;;		_ISR_alta
 22971 ;; This function uses a non-reentrant model
 22972 ;;
 22973                           
 22974                           	psect	text62
 22975  016888                     __ptext62:
 22976                           	opt stack 0
 22977  016888                     _CANisRxReady:
 22978                           	opt stack 20
 22979                           
 22980                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
 22981                           
 22982                           ; BSR set to: 15
 22983                           ;incstack = 0
 22984  016888  0E01               	movlw	1
 22985  01688A  6E26               	movwf	_CANisRxReady$3170,c
 22986  01688C  BE60               	btfsc	3936,7,c	;volatile
 22987  01688E  D005               	goto	i2l583
 22988  016890  010F               	movlb	15	; () banked
 22989  016892  BF50               	btfsc	80,7,b	;volatile
 22990  016894  D002               	goto	i2l583
 22991                           
 22992                           ; BSR set to: 15
 22993  016896  0E00               	movlw	0
 22994  016898  6E26               	movwf	_CANisRxReady$3170,c
 22995  01689A                     i2l583:
 22996  01689A  5026               	movf	_CANisRxReady$3170,w,c
 22997  01689C  0012               	return	
 22998  01689E                     __end_of_CANisRxReady:
 22999                           	opt stack 0
 23000                           pclatu	equ	0xFFB
 23001                           pclath	equ	0xFFA
 23002                           tblptru	equ	0xFF8
 23003                           tblptrh	equ	0xFF7
 23004                           tblptrl	equ	0xFF6
 23005                           tablat	equ	0xFF5
 23006                           prodh	equ	0xFF4
 23007                           prodl	equ	0xFF3
 23008                           intcon	equ	0xFF2
 23009                           postinc0	equ	0xFEE
 23010                           fsr0h	equ	0xFEA
 23011                           fsr0l	equ	0xFE9
 23012                           wreg	equ	0xFE8
 23013                           indf1	equ	0xFE7
 23014                           plusw1	equ	0xFE3
 23015                           fsr1h	equ	0xFE2
 23016                           fsr1l	equ	0xFE1
 23017                           bsr	equ	0xFE0
 23018                           indf2	equ	0xFDF
 23019                           postinc2	equ	0xFDE
 23020                           postdec2	equ	0xFDD
 23021                           plusw2	equ	0xFDB
 23022                           fsr2h	equ	0xFDA
 23023                           fsr2l	equ	0xFD9
 23024                           status	equ	0xFD8
 23025                           pclatu	equ	0xFFB
 23026                           pclath	equ	0xFFA
 23027                           tblptru	equ	0xFF8
 23028                           tblptrh	equ	0xFF7
 23029                           tblptrl	equ	0xFF6
 23030                           tablat	equ	0xFF5
 23031                           prodh	equ	0xFF4
 23032                           prodl	equ	0xFF3
 23033                           intcon	equ	0xFF2
 23034                           postinc0	equ	0xFEE
 23035                           fsr0h	equ	0xFEA
 23036                           fsr0l	equ	0xFE9
 23037                           wreg	equ	0xFE8
 23038                           indf1	equ	0xFE7
 23039                           plusw1	equ	0xFE3
 23040                           fsr1h	equ	0xFE2
 23041                           fsr1l	equ	0xFE1
 23042                           bsr	equ	0xFE0
 23043                           indf2	equ	0xFDF
 23044                           postinc2	equ	0xFDE
 23045                           postdec2	equ	0xFDD
 23046                           plusw2	equ	0xFDB
 23047                           fsr2h	equ	0xFDA
 23048                           fsr2l	equ	0xFD9
 23049                           status	equ	0xFD8
 23050                           
 23051                           	psect	rparam
 23052  0000                     pclatu	equ	0xFFB
 23053                           pclath	equ	0xFFA
 23054                           tblptru	equ	0xFF8
 23055                           tblptrh	equ	0xFF7
 23056                           tblptrl	equ	0xFF6
 23057                           tablat	equ	0xFF5
 23058                           prodh	equ	0xFF4
 23059                           prodl	equ	0xFF3
 23060                           intcon	equ	0xFF2
 23061                           postinc0	equ	0xFEE
 23062                           fsr0h	equ	0xFEA
 23063                           fsr0l	equ	0xFE9
 23064                           wreg	equ	0xFE8
 23065                           indf1	equ	0xFE7
 23066                           plusw1	equ	0xFE3
 23067                           fsr1h	equ	0xFE2
 23068                           fsr1l	equ	0xFE1
 23069                           bsr	equ	0xFE0
 23070                           indf2	equ	0xFDF
 23071                           postinc2	equ	0xFDE
 23072                           postdec2	equ	0xFDD
 23073                           plusw2	equ	0xFDB
 23074                           fsr2h	equ	0xFDA
 23075                           fsr2l	equ	0xFD9
 23076                           status	equ	0xFD8
 23077                           
 23078                           	psect	temp
 23079  00004B                     btemp:
 23080                           	opt stack 0
 23081  00004B                     	ds	1
 23082  0000                     int$flags	set	btemp
 23083                           pclatu	equ	0xFFB
 23084                           pclath	equ	0xFFA
 23085                           tblptru	equ	0xFF8
 23086                           tblptrh	equ	0xFF7
 23087                           tblptrl	equ	0xFF6
 23088                           tablat	equ	0xFF5
 23089                           prodh	equ	0xFF4
 23090                           prodl	equ	0xFF3
 23091                           intcon	equ	0xFF2
 23092                           postinc0	equ	0xFEE
 23093                           fsr0h	equ	0xFEA
 23094                           fsr0l	equ	0xFE9
 23095                           wreg	equ	0xFE8
 23096                           indf1	equ	0xFE7
 23097                           plusw1	equ	0xFE3
 23098                           fsr1h	equ	0xFE2
 23099                           fsr1l	equ	0xFE1
 23100                           bsr	equ	0xFE0
 23101                           indf2	equ	0xFDF
 23102                           postinc2	equ	0xFDE
 23103                           postdec2	equ	0xFDD
 23104                           plusw2	equ	0xFDB
 23105                           fsr2h	equ	0xFDA
 23106                           fsr2l	equ	0xFD9
 23107                           status	equ	0xFD8


Data Sizes:
    Strings     674
    Constant    144
    Data        1
    BSS         145
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      74
    BANK0           160    109     141
    BANK1           256     33     110
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_46(CODE[21]), STR_45(CODE[21]), STR_44(CODE[21]), STR_43(CODE[21]), 
		 -> STR_42(CODE[21]), STR_41(CODE[21]), STR_40(CODE[21]), STR_39(CODE[21]), 
		 -> STR_38(CODE[21]), STR_37(CODE[21]), STR_36(CODE[21]), STR_35(CODE[21]), 
		 -> STR_34(CODE[21]), STR_33(CODE[21]), STR_32(CODE[21]), STR_31(CODE[21]), 
		 -> STR_30(CODE[21]), STR_29(CODE[21]), STR_28(CODE[21]), STR_27(CODE[21]), 
		 -> STR_26(CODE[21]), STR_25(CODE[21]), STR_24(CODE[21]), STR_23(CODE[21]), 
		 -> STR_22(CODE[21]), STR_21(CODE[21]), STR_20(CODE[21]), STR_19(CODE[21]), 
		 -> STR_18(CODE[8]), STR_17(CODE[8]), STR_16(CODE[14]), STR_15(CODE[21]), 
		 -> STR_14(CODE[5]), STR_13(CODE[5]), STR_12(CODE[5]), STR_11(CODE[21]), 
		 -> STR_10(CODE[7]), STR_9(CODE[14]), STR_8(CODE[17]), STR_7(CODE[12]), 
		 -> STR_6(CODE[21]), STR_4(CODE[21]), STR_3(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_speed(BANK1[8]), park_assist_state(BANK1[8]), data_steering(BANK1[8]), data_brake(BANK1[8]), 
		 -> data(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->i2_CANsendMessage

Critical Paths under _main in BANK0

    _board_initialization->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _LCD_Parking->_LCD_write_message
    _LCD_Park->_LCD_write_message
    _LCD_Handler->_sprintf
    _sprintf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___awdiv->___awmod
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->_fround
    ___flneg->___flmul
    ___fldiv->___xxtofl
    _LCD_write_integer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_write_string->_LCD_write_char
    _LCD_goto_xy->_LCD_shift_cursor
    _LCD_shift_cursor->_LCD_send_command
    _LCD_Gap->_LCD_write_message
    _LCD_Error->_LCD_write_message
    _LCD_End->_LCD_write_message
    _Credits->_LCD_write_message
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul
    _CAN_Tx->_CANsendMessage

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_bassa in BANK3

    None.

Critical Paths under _ISR_alta in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_bassa in BANK4

    None.

Critical Paths under _ISR_alta in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_bassa in BANK5

    None.

Critical Paths under _ISR_alta in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_bassa in BANK6

    None.

Critical Paths under _ISR_alta in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_bassa in BANK7

    None.

Critical Paths under _ISR_alta in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_bassa in BANK8

    None.

Critical Paths under _ISR_alta in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_bassa in BANK9

    None.

Critical Paths under _ISR_alta in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_bassa in BANK10

    None.

Critical Paths under _ISR_alta in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_bassa in BANK11

    None.

Critical Paths under _ISR_alta in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_bassa in BANK12

    None.

Critical Paths under _ISR_alta in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  619502
                                             25 BANK1      8     8      0
                             _CAN_Tx
                       _CANisTxReady
                     _CANsendMessage
                            _Credits
                  _F1_Button_Polling
                  _F2_Button_Polling
                   _Joystick_Polling
                            _LCD_End
                          _LCD_Error
                            _LCD_Gap
                        _LCD_Handler
                           _LCD_Park
                        _LCD_Parking
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                 _PWR_Button_Polling
                            ___awdiv
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   51321
                      _CANInitialize
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             31 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             17 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             17 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWR_Button_Polling                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Parking                                          0     0      0   58217
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_Park                                             0     0      0   58217
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0  146565
                       _CANisTxReady
                     _CANsendMessage
                          _LCD_clear
                      _LCD_goto_line
                        _LCD_goto_xy
                     _LCD_initialize
                  _LCD_write_integer
                  _LCD_write_message
                   _LCD_write_string
                            ___fldiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   41932
                                             99 BANK0     10     2      8
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    9580
                                             56 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             17 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    9301
                                             56 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    4771
                                             31 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             17 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    2293
                                             23 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                             17 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                             17 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     784
                                             17 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                             17 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                             17 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     722
                                             89 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3851
                                             89 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             20    12      8    3518
                                             69 BANK0     20    12      8
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     219
                                             56 BANK0      4     0      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     728
                                             17 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1305
                                             31 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_write_integer                                   16    12      4   12052
                                             41 BANK0     16    12      4
                   _LCD_write_string
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    1554
                                             33 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1199
                                             24 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     287
                                             17 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     418
                                             17 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9519
                                             34 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_xy                                          2     1      1   18137
                                             32 BANK0      2     1      1
                      _LCD_goto_line
                   _LCD_shift_cursor
 ---------------------------------------------------------------------------------
 (3) _LCD_shift_cursor                                     3     2      1    8956
                                             29 BANK0      3     2      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _LCD_Gap                                              0     0      0   58217
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_Error                                            0     0      0   58217
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_End                                              0     0      0   58217
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     2     2      0      68
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _F2_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _F1_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Credits                                              0     0      0   58217
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_write_message                                    2     0      2   12830
                                             34 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_char                                       5     5      0    9300
                                             29 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   27796
                                             31 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    8919
                                             29 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    8780
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    8811
                                             29 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_send_command                                     4     1      3    8780
                                             25 BANK0      4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (4) _LCD_enable_pulse                                     0     0      0    1264
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1264
                                             23 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             17 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _CAN_Tx                                               0     0      0    4619
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4595
                                             17 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_bassa                                           17    17      0       0
                                              0 BANK0     17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR_alta                                           18    18      0    3428
                                             16 COMRAM    18    18      0
                       _CANisRxReady
                  _CANreceiveMessage
                     i2_CANisTxReady
                   i2_CANsendMessage
 ---------------------------------------------------------------------------------
 (11) i2_CANsendMessage                                   16     8      8    2243
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (11) i2_CANisTxReady                                      1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _CANreceiveMessage                                  12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (11) _CANisRxReady                                        1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_Tx
     _CANisTxReady
     _CANsendMessage
   _CANisTxReady
   _CANsendMessage
   _Credits
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _F1_Button_Polling
   _F2_Button_Polling
   _Joystick_Polling
   _LCD_End
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Error
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Gap
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Handler
     _CANisTxReady
     _CANsendMessage
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_xy
       _LCD_goto_line
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_shift_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_integer
       _LCD_write_string
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
   _LCD_Park
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Parking
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_initialize
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_cursor
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
     _delay_ms
       ___wmul
     _delay_set_quartz
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _PWR_Button_Polling
   ___awdiv
     ___awmod (ARG)
   ___fladd
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___xxtofl (ARG)
   ___flneg
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fltol
     ___fladd (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___xxtofl
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   i2_CANisTxReady
   i2_CANsendMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     21      6E       7       43.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6D      8D       5       88.1%
BITCOMRAM           5E      0       3       0        3.2%
COMRAM              5E     22      4A       1       78.7%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     145      20        0.0%
DATA                 0      0     145       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sun Jun 12 21:29:49 2016

                     ___fldiv@aexp 0097                       ___fldiv@bexp 0096  
                                _x 0255                                  _y 0256  
                                _z 0257          __size_of_delay_set_quartz 000A  
             __end_of_CANSetFilter 0B06                       ?_LCD_Handler 0026  
                     ___fldiv@sign 008B                       ___awdiv@sign 007C  
                               _id 0005                                 bsr 000FE0  
              ___wmul@multiplicand 0073                        __CFG_BORV$3 000000  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                     __CFG_CP2$OFF 000000                       ?_LCD_Parking 0026  
                     __CFG_CP3$OFF 000000                        __CFG_OSC$HS 000000  
                     __CFG_CP4$OFF 000000                       __CFG_CP5$OFF 000000  
                      _row_refresh 024D                                l400 225A  
                              l401 1FEC                                l410 21A6  
                              l402 1FF0                                l411 21AA  
                              l403 20E8                                l420 2310  
                              l412 21B6                                l404 2078  
                              l500 062A                                l421 231A  
                              l405 2082                                l501 062E  
                              l406 208C                                l510 073A  
                              l502 063A                                l415 2270  
                              l407 2096                                l511 0746  
                              l503 063E                                l424 242A  
                              l416 2274                                l520 0852  
                              l512 074A                                l504 064A  
                              l425 242E                                l417 236C  
                              l521 0856                                l513 0756  
                              l426 243A                                l418 22FC  
                              l530 0962                                l522 0862  
                              l514 075A                                l419 2306  
                              l531 096E                                l523 0866  
                              l515 0766                                l507 0726  
                              l540 0A7A                                l532 0972  
                              l524 0872                                l508 072A  
                              l460 44CC                                l380 50B0  
                              l541 0A7E                                l533 097E  
                              l525 0876                                l509 0736  
                              l461 44D0                                l381 50BA  
                              l390 1DFE                                l542 0A8A  
                              l534 0982                                l526 0882  
                              l518 0842                                l470 45D8  
                              l462 44DC                                l454 449C  
                              l391 1E08                                l543 0A8E  
                              l535 098E                                l519 0846  
                              l471 45E4                                l455 44A0  
                              l392 1E12                                l544 0A9A  
                              l536 0992                                l472 45E8  
                              l456 44AC                                l385 1FD6  
                              l545 0A9E                                l537 099E  
                              l529 095E                                l473 45F4  
                              l465 45B4                                l457 44B0  
                              l386 1D68                                l546 0AAA  
                              l490 0514                                l466 45B8  
                              l458 44BC                                l395 1F22  
                              l387 1D6C                                l547 0AAE  
                              l491 0520                                l467 45C4  
                              l459 44C0                                l396 1F26  
                              l388 1E64                                l548 0ABA  
                              l492 0524                                l468 45C8  
                      _pwr_credits 024C                                l397 1F32  
                              l389 1DF4                                l493 0530  
                              l485 04F0                                l469 45D4  
                              l910 4ADA                                l486 04F4  
                              l830 0CF2                                l822 0CE6  
                              l591 663A                                l487 0500  
                              l496 060A                                l488 0504  
                              l497 060E                                l489 0510  
                              l578 67BC                                l498 061A  
                              l834 0E9A                                l499 061E  
                              l940 6166                                l950 680A  
                              l847 0E70                                l839 0DCA  
                              l881 1350                                l866 10DE  
                              l971 6470                                l883 134C  
                              l859 10D6                                l964 6842  
                              l957 685E                                l969 646E  
             ??_PWR_Button_Polling 0071                       __CFG_CPB$OFF 000000  
                     __CFG_CPD$OFF 000000                        ?_LCD_cursor 007D  
                              _dir 00E7                                _msg 010A  
                              _str 0119                       ___awmod@sign 0076  
                              prod 000FF3                                wreg 000FE8  
                     ___flmul@aexp 008C                       ___flmul@bexp 0091  
                     ___flmul@sign 008B                       ___flmul@temp 0096  
                     ___flmul@prod 0092                    __end_of_LCD_Gap 6334  
                     __CFG_LVP$OFF 000000                    __end_of_LCD_End 6398  
           __size_of_LCD_goto_line 00EC                       ___fltol@exp1 00C2  
                     __CFG_WDT$OFF 000000                               l1302 5658  
                             l1067 1AB2                               l1292 581E  
                             l1605 397C                               l1701 4F78  
                             l1702 4F90                               l1390 5486  
                             l1538 61FE                               l1459 5CE4  
                             l1635 4110                               l1548 6454  
                             l1644 4148                               l1580 3768  
                             l1396 5506                               l5005 61F0  
                             l5021 6446                               l5013 6410  
                             l1581 3734                               l1485 5DBC  
                             l1389 5442                               l1646 41B6  
                             l1638 40B8                               l5015 641C  
                             l1495 6056                               l1672 3D8C  
                             l5017 6422                               l1665 3AF0  
                             l1682 3E9E                               l1674 3DFA  
                             l1579 3774                               l1596 38E8  
                             l1694 4F1C                               l1687 4E70  
                             l7001 427A                               l7003 427E  
                 _battery_charging 0245                               l6401 1F36  
                             l5521 4410                               l5505 435A  
                             l5603 00BE                               l6331 50BE  
                             l5621 0176                               l6335 50C6  
                             l5457 5C5C                               l8201 364E  
                             l5721 0534                               l5553 4526  
                             l6337 510A                               l6329 50A8  
                             l6451 20A0                               l5467 5C9E  
                             l5547 44E0                               l7261 5DCE  
                             l7229 6464                               l9101 16B2  
                             l6527 2324                               l6471 219A  
                             l6375 1E1C                               l7271 5E16  
                             l8127 662C                               l8303 391A  
                             l5487 687A                               l5823 0886  
                             l5727 057A                               l5639 0230  
                             l6553 243E                               l8313 393C  
                             l8321 3956                               l8209 3678  
                             l9113 1768                               l5761 0694  
                             l5657 02EA                               l6547 241E  
                             l6395 1F16                               l7275 5E4E  
                             l8251 3748                               l8403 3B18  
                             l9115 177E                               l5755 064E  
                             l5675 03A4                               l5579 45F8  
                             l6477 21BA                               l6901 3F5E  
                             l8309 3930                               l8253 374E  
                             l8173 35D6                               l8501 5BB2  
                             l9125 1822                               l9117 17BA  
                             l9109 1736                               l9053 151E  
                             l9045 14E8                               l5829 08CC  
                             l5693 045E                               l5935 6570  
                             l6911 3F8C                               l8351 3A12  
                             l8343 39E4                               l8319 3950  
                             l8239 36B4                               l8191 3620  
                             l8167 35B2                               l9231 1CF0  
                             l9223 1C98                               l9215 1C64  
                             l9207 1C3C                               l9143 1936  
                             l9119 17D0                               l9063 1592  
                             l9039 14CE                               l5863 09E8  
                             l4993 61AE                               l8353 3A16  
                             l8329 3976                               l8281 37E6  
                             l8257 3758                               l8185 360C  
                             l8177 35E0                               l8513 5BE6  
                             l9209 1C4A                               l9161 19B4  
                             l9145 193C                               l9129 1854  
                             l9217 1C72                               l9057 1568  
                             l5857 09A2                               l4995 61BA  
                             l6931 400E                               l6923 3FE0  
                             l6907 3F82                               l8347 3A06  
                             l8339 39D2                               l8275 37D6  
                             l8267 3798                               l8515 5BF2  
                             l8507 5BC8                               l8451 3DA0  
                             l9235 1D1C                               l9227 1CC0  
                             l9163 19BC                               l9171 1A58  
                             l9139 18BE                               l9075 15DC  
                             l9067 1598                               l9059 1582  
                             l9411 4AB6                               l9403 4A88  
                             l5891 0ABE                               l5795 07B0  
                             l4997 61C0                               l6941 408C  
                             l8277 37DC                               l8285 37F8  
                             l8197 3644                               l8533 5C4A  
                             l8525 5C28                               l8517 5BF8  
                             l8461 3DF4                               l8445 3D76  
                             l9181 1A94                               l9173 1A66  
                             l9157 1988                               l9085 162E  
                             l9069 15C2                               l9237 1D22  
                             l9413 4AC8                               l5789 076A  
                             l8359 3A2A                               l8295 38C8  
                             l8471 3E4A                               l8375 3A7E  
                             l8623 48DE                               l8615 47E6  
                             l9239 1D44                               l6961 4132  
                             l6881 3F00                               l8529 5C36  
                             l8561 5FA2                               l8553 5F6C  
                             l8545 5F48                               l8393 3AD8  
                             l8377 3A84                               l8369 3A5A  
                             l9193 1AE6                               l9185 1AB6  
                             l9441 4B66                               l6955 410C  
                             l6891 3F2E                               l8811 5606  
                             l8803 5566                               l8731 54FC  
                             l8723 54D0                               l8555 5F78  
                             l8475 3E70                               l8395 3ADE  
                             l8387 3AB4                               l8379 3A96  
                             l8643 2DD0                               l9179 1A80  
                             l9451 4BA8                               l9419 4AF2  
                             l9363 4936                               l9531 0B40  
                             l6949 40C4                               l8901 5FFA  
                             l8557 5F7E                               l8565 5FB0  
                             l8549 5F58                               l8485 3EBE  
                             l8477 3E84                               l8661 3056  
                             l8637 2CFE                               l9197 1B48  
                             l9445 4B8C                               l9605 0D32  
                             l9613 0D72                               l8583 5AB0  
                             l8591 5B78                               l8575 64BE  
                             l6991 4234                               l6967 415C  
                             l6887 3F24                               l8807 55B4  
                             l8903 6000                               l8719 54BC  
                             l8487 3EC8                               l8399 3B04  
                             l8655 2F84                               l8647 2E02  
                             l9439 4B54                               l9391 4A66  
                             l9711 11C2                               l9623 0D8C  
                             l9631 0DCC                               l8585 5AE2  
                             l6993 4248                               l6977 41B0  
                             l8817 56A4                               l8825 666E  
                             l8745 56F4                               l8729 54EC  
                             l8569 5FC4                               l8673 676E  
                             l9393 4A68                               l9801 14B2  
                             l9721 11F4                               l9641 0E74  
                             l8587 5B14                               l8579 64F0  
                             l8595 677A                               l6995 426A  
                             l6987 4206                               l8851 5A32  
                             l8835 59C4                               l8907 6044  
                             l8923 4EA8                               l8739 56CE  
                             l8683 53B4                               l9571 0C6C  
                             l8589 5B46                               l8861 5A62  
                             l8925 4EB0                               l8917 4E80  
                             l9389 4A56                               l9717 11E0  
                             l9725 1204                               l9709 11BA  
                             l9573 0CB2                               l9565 0BD4  
                             l8599 678E                               l8863 5A72  
                             l8855 5A46                               l8935 4F5A  
                             l8927 4EC0                               l8791 5814  
                             l8783 57E8                               l8767 579C  
                             l8759 5748                               l9647 0EC6  
                             l9655 0F06                               l9583 0CC6  
                             l8961 66D2                               l8865 5A7C  
                             l8881 5D50                               l8937 4F6A  
                             l8929 4EFE                               l8689 53EE  
                             l9753 1372                               l9745 12E0  
                             l9737 128A                               l9681 0F88  
                             l9657 0F08                               l9593 0D00  
                             l8971 5210                               l8891 5DAA  
                             l8883 5D56                               l8779 57D4  
                             l9771 1426                               l9675 0F4E  
                             l9659 0F0A                               l9595 0D0C  
                             l9587 0CD8                               l8957 66B8  
                             l8973 5218                               l8869 5A98  
                             l8949 4FE2                               l8789 5804  
                             l9757 1386                               l9693 10A6  
                             l8983 52B0                               l8879 5D40  
                             l9783 1450                               l9695 10AC  
                             STR_1 FF6A                               STR_2 FF40  
                             l8993 5368                               l9793 146E  
                             l9777 1438                               l9785 1458  
                             l9689 1040                               STR_3 FE1A  
                             STR_4 FF6A                               l8899 5FEA  
                             l9699 10CE                               STR_5 FFFA  
                             STR_6 FF55                               l8989 52F0  
                             STR_7 FFC8                               STR_8 FFA9  
                             l9799 14AE                               STR_9 FFBA  
                             _LATA 000F89                               _LATB 000F8A  
                             _LATC 000F8B                               _LATD 000F8C  
                             _LATE 000F8D                               u6300 438C  
                             u7110 09C2                               u7030 08A6  
                             u6305 4380                               u7115 09B6  
                             u7035 089A                               u6315 43EC  
                             u8020 20C0                               u6500 003A  
                             u6260 42D6                               u8030 210C  
                             u8025 20B4                               u6505 002E  
                             u6265 42CA                               u8035 2100  
                             u6515 009A                               u6275 4336  
                             u6700 03DA                               u6620 0266  
                             u6540 00F2                  _F2_Button_Polling 683A  
                             u8045 216C                               u8150 2344  
                             u7190 0ADE                               u6470 4618  
                             u6390 4500                               u8160 2390  
                             u6705 03CE                               u6625 025A  
                             u6545 00E6                               u8155 2338  
                             u7195 0AD2                               u6715 043A  
                             u6635 02C6                               u6555 0152  
                             u6475 460C                               u6395 44F4  
                             u9140 6492                               u6660 0320  
                             u6580 01AC                               u8165 2384  
                             u9205 681A                               u8175 23F0  
                             u9240 686C                               u9305 6852  
                             u6665 0314                               u6585 01A0  
                             u9146 6494                               u6675 0380  
                             u6595 020C                               u7900 1E88  
                             u9190 6818                               u6950 078A  
                             u6870 066E                               u6790 0554  
                             u9255 686E                               u7905 1E7C  
                             u9290 6850                               u7915 1EE8  
                             u6955 077E                               u6875 0662  
                             u6795 0548                               u8830 421A  
                             u7890 1E3C                               u7895 1E30  
              __size_of_CANSetMask 039E                       ?_LCD_goto_xy 0080  
                             _data 0125                               _main 0B06  
                             _itoa 6546                 ?_F2_Button_Polling 0026  
        __size_of_LCD_send_command 003A                               fsr0h 000FEA  
                             fsr1h 000FE2                               fsr0l 000FE9  
                             fsr2h 000FDA                               indf1 000FE7  
                             fsr1l 000FE1                               indf2 000FDF  
                             fsr2l 000FD9                               btemp 004B  
                             _utoa 5C54                 __size_of_LCD_Error 0092  
                             pclat 000FFA                               prodh 000FF4  
                             prodl 000FF3                               start 00C0  
                    __CFG_IESO$OFF 000000                    ___fldiv@new_exp 0090  
               __size_of_LCD_clear 0032                       _sprintf$4194 014D  
                    __CFG_MCLRE$ON 000000                    __end_of_Credits 63FC  
                     ___param_bank 000010                ??_F2_Button_Polling 0071  
         __end_of_LCD_enable_pulse 67E4                   _CANOperationMode 6872  
                     _Can_Tx_Force 0240                   __end_of_LCD_Park 62D0  
                  _space_available 024E            __size_of_LCD_initialize 016E  
       __size_of_CANreceiveMessage 050C                      ___fltol@sign1 00C1  
                  __end_of___fladd 3A3C                              ?_main 0026  
                  __end_of___fldiv 42A2                              ?_itoa 0081  
                  __end_of___awdiv 5C54                    __end_of___flneg 6680  
                            STR_10 FFE4                              STR_11 FD5D  
                            STR_12 FFF0                              STR_20 FF94  
                            STR_13 FFF5                              STR_21 FF16  
                            STR_14 FFEB                              STR_22 FF7F  
                            STR_30 FEEC                              STR_31 FF01  
                            STR_15 FED7                              STR_23 FEC2  
                            STR_16 FFBA                              STR_32 FF6A  
                            STR_24 FE59                              STR_40 FE2F  
                            STR_33 FF16                              STR_25 FF16  
                            STR_17 FFD4                              STR_41 FD87  
                            STR_18 FFDC                              STR_26 FEAD  
                            STR_34 FE98                              STR_42 FDB1  
                            STR_43 FF2B                              STR_27 FE6E  
                            STR_19 FE44                              STR_35 FDC6  
                            STR_44 FE05                              STR_28 FDDB  
                            STR_36 FD9C                    __end_of___awmod 5FCE  
                            STR_37 FF16                              STR_29 FF16  
                            STR_45 FE83                              STR_38 FE98  
                            STR_46 FDF0                              STR_39 FD72  
                  __end_of___flmul 3EE2                    __end_of___flsub 6546  
                  __end_of___fltol 5AAA                    __end_of___lldiv 5DCE  
                            ?_utoa 0078                    ___awdiv@divisor 0079  
                            u11350 3E5E                              u11270 3D18  
                            u12071 51C4                    __end_of___llmod 6068  
                            u11611 5390                              u11275 3D0C  
                            u10900 3716                              u13140 1400  
                            u10910 3718                              u11631 53CA  
                            u12360 1AAA                              u13090 1344  
                            u13227 662E                              u10765 65E2  
                            u10766 65E4                              u10775 65EE  
                            u10776 65F0                              u11840 59E4  
                            u12640 0C38                              _T3CON 000FB1  
                            u10785 65FA                              u10786 65FC  
                            u10890 36FE                              u10795 6606  
                            u10796 6608                              u12660 0C54  
                            u11845 59D8                              u12670 0C74  
                            u12840 0E30                              u12680 0C98  
                            u12666 0C56                              u12676 0C76  
                            u12686 0C9A                              u12880 0E54  
                            u12890 0E7C                              u12990 10CA  
                            u12886 0E56                              u12896 0E7E  
                  __end_of___lwdiv 6208                    __end_of___lwmod 645E  
                            i2l400 293E                              i2l401 2722  
                            i2l410 289A                              i2l402 2726  
                            i2l411 289E                              i2l403 27F6  
                            i2l420 29D4                              i2l412 28A8  
                            i2l404 2794                              i2l421 29DC  
                            i2l405 279C                              i2l406 27A4  
                            i2l415 2952                              i2l407 27AC  
                            i2l432 3320                              i2l424 2ACA  
                            i2l416 2956                              i2l425 2ACE  
                            i2l417 2A26                              i1l817 0078  
                            i2l426 2AD8                              i2l418 29C4  
                            i2l419 29CC                              i2l390 256C  
                            i2l391 2574                              i2l392 257C  
                            i2l385 270E                              i2l386 24F2  
                            i2l395 266A                              i2l387 24F6  
                            i2l396 266E                              i2l388 25C6  
                            i2l397 2678                              i2l389 2564  
                            i2l813 4DEA                              i2l583 689A  
                            i2l578 67FE                              i2l796 4DE6  
                  ___awdiv@counter 007B                              _TMR3H 000FB3  
                            _TMR3L 000FB2                  _CANisRxReady$3170 0026  
                            _TRISA 000F92                              _TRISB 000F93  
                            _TRISC 000F94                              _TRISD 000F95  
                            _TRISE 000F96                      __CFG_PWRT$OFF 000000  
                    __CFG_WRT0$OFF 000000                      __CFG_WRT1$OFF 000000  
                    __CFG_WRT2$OFF 000000                      __CFG_WRT3$OFF 000000  
                    __CFG_WRT4$OFF 000000                 __size_of_ISR_bassa 00A8  
                    __CFG_WRT5$OFF 000000                     __CFG_EBTR0$OFF 000000  
                   __CFG_FCMEN$OFF 000000                     __CFG_EBTR1$OFF 000000  
               CANInitialize@flags 0083                     __CFG_EBTR2$OFF 000000  
                   __CFG_EBTR3$OFF 000000                     __CFG_EBTR4$OFF 000000  
                 __end_of_ISR_alta 4E26                     __CFG_EBTR5$OFF 000000  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                              _check 00D5  
                   __CFG_EBTRB$OFF 000000          __end_of_F2_Button_Polling 6856  
                  __end_of_dpowers FD5D                              _scale 2B6E  
                  __end_of_isdigit 6778          __size_of_LCD_shift_cursor 004C  
                   __pbitbssCOMRAM 0240               __end_of_CANisRxReady 689E  
                            tablat 000FF5               __end_of_CANisTxReady 67C2  
                            plusw1 000FE3                              plusw2 000FDB  
                            utoa@c 0080                              utoa@v 007E  
                            status 000FD8                    __end_of_sprintf 1D52  
              __size_of_LCD_cursor 0032                    __initialization 658E  
                     __end_of_main 14BE                       __end_of_itoa 658E  
    __size_of_board_initialization 00A4                      _LCD_goto_line 5AAA  
                     __end_of_utoa 5D12                  ?_Joystick_Polling 0026  
               ??_Joystick_Polling 0071                  ?_LCD_write_string 0082  
                           ??_main 0166                             ??_itoa 0087  
                           ??_utoa 007E          __size_ofi2_CANsendMessage 0690  
                    __activetblptr 000003                  __end_of_LCD_Error 6190  
                        ??_LCD_Gap 0084                          ??_LCD_End 0084  
                   _JoystickValues 00DD                 ??_LCD_write_string 0084  
             __size_of__tdiv_to_l_ 019E                  _CANisTxReady$3168 0071  
                __end_of_LCD_clear 674E              i2CANsendMessage@flags 002D  
           LCD_write_string@buffer 0082                             _ADCON1 000FC1  
                           _CANCON 000F6F                   ___llmod@dividend 0071  
                           ?_scale 0098                             _ADRESH 000FC4  
                 ___awdiv@dividend 0077                             _CAN_Tx 5DCE  
                  __CFG_BBSIZ$1024 000000                             i2l7141 355E  
                           i2l7133 3526                             i2l7125 34EE  
                           i2l7117 3480                             i2l7143 3590  
                           i2l7071 32AC                             i2l7063 3270  
                           i2l7055 3200                             i2l7137 3542  
                           i2l7129 350A                             i2l7081 331A  
                           i2l7075 32CA                             i2l7067 328E  
                           i2l7079 32E8                             i2l7511 267C  
                           i2l7505 2660                             i2l7561 27B4  
                           i2l7801 4DCA                             i2l7723 4C14  
                           i2l7637 29E4                             i2l7581 2890  
                           i2l7485 2584                             i2l7717 4BF2  
                           i2l7663 2ADC                             i2l7743 4C9A  
                           i2l7735 4C76                             i2l7657 2AC0  
                           i2l7587 28AC                             i2l7771 4D24  
                           i2l7781 4D5C                             i2l7757 4CDA  
                           i2l7749 4CB0                             i2l7791 4D8A  
                           i2l7775 4D3A                             i2l7767 4D06  
                           i2l7795 4DB8                             _RXB0D0 000F66  
                           _RXB0D1 000F67                             _RXB0D2 000F68  
                           _RXB0D3 000F69                             _RXB0D4 000F6A  
                           _RXB1D0 000F56                             _RXB0D5 000F6B  
                           _RXB1D1 000F57                             _RXB0D6 000F6C  
                           _RXB1D2 000F58                             _RXB0D7 000F6D  
                           _RXB1D3 000F59                             _RXB1D4 000F5A  
                           _RXB1D5 000F5B                             _RXB1D6 000F5C  
                           _RXB1D7 000F5D                             _TXB0D0 000F46  
                           _TXB0D1 000F47                             _TXB0D2 000F48  
                           _TXB0D3 000F49                             _TXB1D0 000F36  
                           _TXB0D4 000F4A                             _TXB1D1 000F37  
                           _TXB0D5 000F4B                             _TXB1D2 000F38  
                           _TXB0D6 000F4C                             _TXB1D3 000F39  
                           _TXB0D7 000F4D                             _TXB2D0 000F26  
                           _TXB1D4 000F3A                             _TXB2D1 000F27  
                           _TXB1D5 000F3B                             _TXB2D2 000F28  
                           _TXB1D6 000F3C                             _TXB2D3 000F29  
                           _TXB1D7 000F3D                             _TXB2D4 000F2A  
                           _TXB2D5 000F2B                             _TXB2D6 000F2C  
                           _TXB2D7 000F2D                 CANsendMessage@data 0075  
                        ??_Credits 0084                 CANsendMessage@tamp 007D  
                 __end_of___xxtofl 4FF4                    _switch_position 00EB  
                 __end_of_delay_ms 6648              __size_of_CANSetFilter 0B06  
                   __CFG_XINST$OFF 000000                  __end_of_ISR_bassa 00C0  
                 __end_of__powers_ FD35                     ?_LCD_goto_line 0026  
                           ___flge 5518                          ??___fladd 00AD  
                 _delay_set_quartz 689E                             ___wmul 6680  
                        ??___fldiv 0087                          ??___awdiv 007B  
                        ??___flneg 009C                     __CFG_STVREN$ON 000000  
                        ??___awmod 0075                          ??___flmul 0087  
                        ??___flsub 00C1                          ??___fltol 00BD  
                        ??___lldiv 0079                          ??___llmod 0079  
                        ??___lwdiv 0075                       ??_CANSetMask 0076  
                        ??___lwmod 0075            __size_of_LCD_write_char 0096  
                           _fround 4640     LCD_initialize@quartz_frequency 007F  
                           clear_0 6594                             clear_1 65A0  
                           clear_2 65B2                   ___awdiv@quotient 007D  
                  ___awmod@divisor 0073               __size_of_LCD_Handler 0284  
                  ___awmod@counter 0075                    __CFG_BOREN$BOHW 000000  
                _JoystickConstants 00CD                             itoa@cp 0087  
                        ??_isdigit 0071               __size_of_LCD_Parking 0064  
                     __mediumconst FCCC                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
       __size_of_F2_Button_Polling 001C                          ??_sprintf 00CB  
                     _CANSetFilter 0000                         ___flge@ff1 0071  
                       ___flge@ff2 0075                       ___xxtofl@arg 007B  
                     ___xxtofl@exp 007A                       ___xxtofl@val 0071  
                       __accesstop 0060            __end_of__initialization 65CA  
               __end_of_CANSetMask 4640                          ?_LCD_Park 0026  
                  __CFG_PBADEN$OFF 000000                         ___flneg@f1 0098  
                 _LCD_send_command 65D4                      ___rparam_used 000001  
LCD_write_integer@number_of_digits 008B                         ___fltol@f1 00B9  
             __size_of_LCD_goto_xy 001C                     __pcstackCOMRAM 0026  
                     __pidataBANK0 68A8                          ?_ISR_alta 0026  
                     LCD_goto_xy@x 0081                       LCD_goto_xy@y 0080  
                    __end_of_scale 3088                     _LCD_initialize 5830  
                _LCD_write_integer 51BA                  _LCD_write_message 66B6  
            CANSetFilter@numBuffer 007A                 ?_LCD_write_integer 0089  
           LCD_write_integer@index 0098                 ?_LCD_write_message 0082  
                       __div_to_l_ 56A8                       ??_LCD_cursor 007E  
           LCD_write_integer@value 0089      LCD_write_integer@convertedInt 0092  
                _space_gap_reached 024F                       _actual_speed 00DF  
            __size_of_CANisRxReady 0016              __size_of_CANisTxReady 0024  
              ??_LCD_write_integer 008D                    __div_to_l_@exp1 007E  
              ??_LCD_write_message 0084                    __div_to_l_@cntr 007D  
                          ??_scale 009C                   _LCD_shift_cursor 64B2  
                  __div_to_l_@quot 0079           __end_of_CANOperationMode 6888  
                          ?_CAN_Tx 0026                         __pbssBANK0 00CD  
                       __pbssBANK1 0100                         _data_brake 012D  
                       ??_LCD_Park 0084            __size_of_CANsendMessage 078C  
                       _data_speed 0135                      __div_to_l_@f1 0071  
                    __div_to_l_@f2 0075                    ??_LCD_goto_line 007D  
               __end_of_LCD_cursor 671C             __end_of_LCD_initialize 599E  
                          ?___flge 0071                            ?___wmul 0071  
                       ??_ISR_alta 0036          __end_of_LCD_write_integer 537A  
        __end_of_LCD_write_message 66EA                  ?_LCD_enable_pulse 0026  
                          ?_fround 0098                       _CANisRxReady 6888  
                          _CANSTAT 000F6E                 ??_LCD_enable_pulse 0079  
                     _CANisTxReady 679E                            _BRGCON1 000F70  
                          _BRGCON2 000F71                            _BRGCON3 000F72  
                 i2_CANsendMessage 24DE        __size_of_PWR_Button_Polling 001C  
                          _LCD_Gap 62D0                            _LCD_End 6334  
                        ?___xxtofl 0071            __size_ofi2_CANisTxReady 001E  
           __size_of_CANInitialize 01C6                   LCD_cursor@active 007E  
                        ?_delay_ms 0077                            _RXB0DLC 000F65  
                          _RXB1DLC 000F55                            _RXB0CON 000F60  
                          _RXB1CON 000F50                            _TXB0DLC 000F45  
                          _TXB1DLC 000F35                            _TXB2DLC 000F25  
              CANsendMessage@flags 0078                  _parking_message_E 024A  
                  __size_of_CAN_Tx 00BA                            _Credits 6398  
                __end_of__npowers_ FD01                            __Hparam 0000  
                       _left_speed 001F                         _scale$4193 009C  
                          __Lparam 0000                   delay_ms@value_ms 0077  
                  ?_LCD_initialize 0026                    __size_of___flge 0190  
                          ___fladd 3594                            ___fldiv 3EE2  
                          ___awdiv 5B96                            ___flneg 6648  
                          ___awmod 5F2C                            ___flmul 3A3C  
                          ___flsub 64FE                            ___fltol 599E  
                          ___lldiv 5D12                    __size_of___wmul 0036  
                   _LCD_write_char 6068                            ___llmod 5FCE  
                          ___lwdiv 6190                            ___lwmod 63FC  
             CANInitialize@propSeg 0088                            __pcinit 658E  
                  __size_of_fround 02F6                            __ramtop 0D00  
                 _LCD_4TH_ROW_MODE 0243                LCD_write_char@value 0081  
                          __ptext0 0B06                            __ptext1 5E88  
                          __ptext2 4FF4                            __ptext3 42A2  
                          __ptext4 0000                            __ptext5 6872  
                          __ptext6 6802                            __ptext7 6208  
                          __ptext8 626C                            __ptext9 4936  
                      ?__div_to_l_ 0071                   LCD_write_char@D0 0080  
                 LCD_write_char@D1 007F                   LCD_write_char@D2 007E  
                 LCD_write_char@D3 007D                          _F1_switch 0241  
                          _dpowers FD35                          _F2_switch 0242  
                          _isdigit 674E                         ??___xxtofl 0075  
                 ___awmod@dividend 0071                         ??_delay_ms 0079  
                   _center_value_Y 00E5             CANreceiveMessage@error 0030  
     __end_of_board_initialization 5F2C          __size_of_Joystick_Polling 0054  
                        _LCD_Error 60FE           __end_of_delay_set_quartz 68A8  
                          _sprintf 14BE                     __pintcode_body 4BBA  
                        _LCD_clear 671C               end_of_initialization 65CA  
        __size_of_LCD_write_string 0026                            itoa@buf 0081  
                          itoa@val 0083                            int_func 4BBA  
                        i2u1003_40 4D1E                          i2u1004_45 4D20  
                        i2u1013_40 4DE2                          i2u1014_45 4DE4  
                        i2u1323_47 4D84                      _CANInitialize 4FF4  
                    _parking_error 0249                    ___lldiv@divisor 0075  
               LCD_cursor@blinking 007D                      _parking_state 00E9  
                  ___lldiv@counter 007D             __end_of_LCD_write_char 60FE  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc2 000FDE         __size_of_LCD_write_integer 01C0  
       __size_of_LCD_write_message 0034                            utoa@buf 0078  
                   __tdiv_to_l_@f1 0071                     __tdiv_to_l_@f2 0075  
                          utoa@val 007A                         _wait_low_1 0252  
                       _wait_low_2 0253                         _wait_low_3 0254  
                        _ISR_bassa 0018                      ??__tdiv_to_l_ 0079  
          _steering_correction_dir 0250                          _PORTAbits 000F80  
                        _PORTBbits 000F81                     CANSetMask@mask 0071  
                        _PORTDbits 000F83                     CANSetMask@tamp 007B  
         __end_of_LCD_send_command 660E                     CANSetMask@type 0075  
                      ___fladd@grs 00B8                      ___xxtofl@sign 0079  
                      ___fldiv@grs 0092                        ___fldiv@rem 008C  
                _F1_Button_Polling 6856                         ?_LCD_Error 0026  
                       ?_LCD_clear 0026                 ?_F1_Button_Polling 0026  
                   __end_of_CAN_Tx 5E88            _clock_counter_reference 00E1  
                      ___flmul@grs 008D                     _CANsendMessage 1D52  
                 CANInitialize@BRP 0082                   CANInitialize@SJW 0081  
                   ?_CANInitialize 007F                ??_F1_Button_Polling 0071  
                __size_of_LCD_Park 0064                __size_of__div_to_l_ 0188  
          LCD_write_integer@F17134 0100                    ?_LCD_write_char 0026  
                    ??_LCD_Handler 00CD           __end_of_LCD_shift_cursor 64FE  
                   __end_of___flge 56A8                         ?_ISR_bassa 0026  
                   __end_of___wmul 66B6                  __size_of_ISR_alta 4E1E  
                    ??_LCD_Parking 0084                  LCD_shift_cursor@i 007F  
                   __end_of_fround 4936                     i2_CANisTxReady 67E4  
        __end_of_F1_Button_Polling 6872                start_initialization 658E  
              __end_of__tdiv_to_l_ 5518                CANSetMask@numBuffer 007A  
           __end_of_CANsendMessage 24DE                           ??_CAN_Tx 0081  
                ?_CANOperationMode 0026                      _data_steering 013D  
                    ??_LCD_goto_xy 0081         i2CANsendMessage@dataLength 002C  
             i2CANsendMessage@data 002A                 ??_CANOperationMode 0071  
             i2CANsendMessage@tamp 0032                    ___llmod@divisor 0075  
         __end_ofi2_CANsendMessage 2B6E         CANInitialize@FilterConfig1 0089  
       CANInitialize@FilterConfig2 008A                    ___llmod@counter 0079  
              _steering_correction 00EA                           ??___flge 0079  
             _board_initialization 5E88                           ??___wmul 0075  
                      __pdataBANK0 00EC                   __CFG_LPT1OSC$OFF 000000  
                         ??_fround 009C             __end_ofi2_CANisTxReady 6802  
                    sprintf@tmpval 015B                          ___fladd@a 00A9  
                        ___fladd@b 00A5             CANInitialize@phaseSeg1 007F  
           CANInitialize@phaseSeg2 0080                         fround@prec 00A4  
              __end_of_LCD_Handler 4BBA                           ?_LCD_Gap 0026  
                         ?_LCD_End 0026                          ___fldiv@a 0083  
                        ___fldiv@b 007F                          ___flmul@a 0083  
                        ___flmul@b 007F                        __pbssCOMRAM 0001  
                        ___flsub@a 00BD                          ___flsub@b 00B9  
                    __pcstackBANK0 0060                      __pcstackBANK1 014D  
                      _BRGCON2bits 000F71                __end_of_LCD_Parking 626C  
                      _BRGCON3bits 000F72                   _Joystick_Polling 645E  
                      ??_LCD_Error 0084                  __size_of___xxtofl 01CE  
        __size_of_LCD_enable_pulse 0022                       _isdigit$3774 0072  
       i2CANsendMessage@identifier 0026                  _park_assist_state 0145  
                __size_of_delay_ms 003A                        ??_LCD_clear 007D  
                  ?_CANsendMessage 0071            LCD_write_message@buffer 0082  
                 _LCD_write_string 6778                    ??_CANInitialize 0084  
                      sprintf@flag 0153                        sprintf@fval 0161  
                         ?_Credits 0026                        sprintf@prec 015F  
                 ??_LCD_initialize 007F                 CANSetFilter@filter 0071  
        delay_set_quartz@frequency 0071                   ___lwdiv@dividend 0071  
               LCD_send_command@D0 007B                 LCD_send_command@D1 007A  
               LCD_send_command@D2 0079                 LCD_send_command@D3 007C  
              __end_of_LCD_goto_xy 683A              __end_of_LCD_goto_line 5B96  
            ?_board_initialization 0026                          __pintcode 0008  
                    __pmediumconst FCCC                           ?___fladd 00A5  
                         ?___fldiv 007F                           ?___awdiv 0077  
                         ?___flneg 0098                           ?___awmod 0071  
                         ?___flmul 007F                           ?___flsub 00B9  
                         ?___fltol 00B9                           ?___lldiv 0071  
                         ?___llmod 0071                          __npowers_ FCCD  
                         ?___lwdiv 0071                           ?___lwmod 0071  
                      ??_ISR_bassa 0060                        __pintcodelo 0018  
       __end_of_PWR_Button_Polling 681E                    ?i2_CANisTxReady 0026  
                      __tdiv_to_l_ 537A                       ??__div_to_l_ 0079  
                      _COMSTATbits 000F74                           ?_isdigit 0026  
       __size_of_F1_Button_Polling 001C                   ___lwdiv@quotient 0075  
                         ?_sprintf 00C3                     __size_of_scale 051A  
                ?_delay_set_quartz 0026              CANreceiveMessage@tamp 0031  
               ??_delay_set_quartz 0071                           _LCD_Park 626C  
                   ___wmul@product 0075                           _LATCbits 000F8B  
                         _LATDbits 000F8C                           _LATEbits 000F8D  
                         _IPR2bits 000FA2       _delay_quartz_frequency_value 00EC  
                         _IPR3bits 000FA5                           _PIE2bits 000FA0  
                         _PIE3bits 000FA3               _collision_risk_value 00E6  
               __end_of__div_to_l_ 5830                           _PIR2bits 000FA1  
                         _PIR3bits 000FA4                           i2u900_40 33C8  
                         i2u900_46 33CA                           i2u901_40 33F2  
                         i2u901_46 33F4                           i2u903_45 3406  
                         i2u909_45 356A                           _RXB0EIDH 000F63  
                         _RXB0EIDL 000F64                           i2u890_40 316E  
                         i2u970_45 2864                           i2u890_46 3170  
                         i2u955_40 25A2                           _RXB1EIDH 000F53  
                        _pr_time_1 00D9                          _pr_time_2 0009  
                         _RXB1EIDL 000F54                          _pr_time_3 000D  
                         i2u955_45 2598                          _pr_time_4 0106  
                        _pr_time_5 0011                          _pr_time_6 0015  
                         i2u956_40 25E8                           i2u892_45 3184  
                         i2u956_45 25DE                           i2u981_40 2A02  
                         i2u981_45 29F8                           i2u957_45 2634  
                         i2u982_40 2A48                          _set_speed 00E3  
                         i2u982_45 2A3E                           _RCONbits 000FD0  
                         i2u983_45 2A94                           i2u968_40 27D2  
                         i2u968_45 27C8                           i2u889_40 3140  
                         i2u969_40 2818                           i2u969_45 280E  
                         i2u889_46 3142                           i2u994_40 4C12  
                         i2u898_45 32F4                   __CFG_WDTPS$32768 000000  
                         _RXB0SIDH 000F61                           _RXB0SIDL 000F62  
                         _RXF0EIDH 000F02                           _RXB1SIDH 000F51  
                         _RXF0EIDL 000F03                           _RXB1SIDL 000F52  
                         _RXF1EIDH 000F06                           _RXF1EIDL 000F07  
                         _RXF2EIDH 000F0A                           _RXF2EIDL 000F0B  
                         _RXF3EIDH 000F0E                           _RXF3EIDL 000F0F  
                         _RXF4EIDH 000F12                           _RXF4EIDL 000F13  
                         _RXF5EIDH 000F16                           _RXF5EIDL 000F17  
                         _RXF0SIDH 000F00                           _RXF0SIDL 000F01  
                         _TXB0EIDH 000F43                           _RXF1SIDH 000F04  
                         _TXB0EIDL 000F44                           _RXF1SIDL 000F05  
                         _TXB1EIDH 000F33                           _RXF2SIDH 000F08  
                         _TXB1EIDL 000F34                           _RXF2SIDL 000F09  
                         _ISR_alta 0008                           _TXB2EIDH 000F23  
                         _RXF3SIDH 000F0C                           _TXB2EIDL 000F24  
                         _RXF3SIDL 000F0D                           _RXF4SIDH 000F10  
                         _RXF4SIDL 000F11                           _RXF5SIDH 000F14  
                         _RXF5SIDL 000F15                           _RXM0EIDH 000F1A  
                         _RXM0EIDL 000F1B                           _TXB0SIDH 000F41  
                         _RXM1EIDH 000F1E                           _TXB0SIDL 000F42  
                         _RXM1EIDL 000F1F                           _TXB1SIDH 000F31  
                         _TXB1SIDL 000F32                           _TXB2SIDH 000F21  
                         _TXB2SIDL 000F22                        _LCD_Handler 4936  
                         _RXM0SIDH 000F18                           _RXM0SIDL 000F19  
                         _RXM1SIDH 000F1C                           _RXM1SIDL 000F1D  
                         _RXERRCNT 000F75     LCD_write_integer@zero_cleaning 008C  
               _parking_message_ID 00E8                           _TXERRCNT 000F76  
                       _ADCON0bits 000FC2                        _LCD_Parking 6208  
                       _ADCON2bits 000FC0                  ___wmul@multiplier 0071  
                         _RTR_Flag 0244                  ?_LCD_send_command 0079  
                 _actual_speed_kmh 0001                          _user_data 0023  
                 __size_of_LCD_Gap 0064                   __size_of_LCD_End 0064  
                        _user_stop 0251                 ??_LCD_send_command 007C  
                    ?_CANSetFilter 0071                         _CANCONbits 000F6F  
                      _LCD_goto_xy 681E                   ??_LCD_write_char 007D  
                LCD_goto_line@line 007D                   __size_of_Credits 0064  
                         __Hrparam 0000                       _RXB0SIDLbits 000F62  
           ??_board_initialization 008B          _collision_sensor_distance 001D  
                         __Lrparam 0000                       _RXB1SIDLbits 000F52  
                 __size_of___fladd 04A8                         _CANSetMask 42A2  
                 __size_of___fldiv 03C0                   __size_of___awdiv 00BE  
                 __size_of___flneg 0038                   __size_of___awmod 00A2  
                 __size_of___flmul 04A6                  ?_LCD_shift_cursor 007D  
                 __size_of___flsub 0048                   __size_of___fltol 010C  
                 __size_of___lldiv 00BC                   __size_of___llmod 009A  
                 __size_of___lwdiv 0078                   __size_of___lwmod 0062  
                      _fround$4191 00A0                        _fround$4192 009C  
               ??_LCD_shift_cursor 007E                         sprintf@exp 0159  
                       sprintf@val 0155                           ___xxtofl 4E26  
                     _RXF0SIDLbits 000F01                   __size_of_isdigit 002A  
                         _delay_ms 660E                    ___lwdiv@divisor 0073  
                     _RXF1SIDLbits 000F05                    ___lwdiv@counter 0077  
                   ??_CANSetFilter 0076                   _LCD_enable_pulse 67C2  
                         __ptext10 14BE                           __ptext11 2B6E  
                         __ptext20 5FCE                           __ptext12 674E  
                         __ptext21 5D12                           __ptext13 4640  
                         __ptext30 5C54                           __ptext22 599E  
                         __ptext14 3A3C                           __ptext31 63FC  
                         __ptext23 64FE                           __ptext15 5F2C  
                         __ptext40 683A                           __ptext32 6190  
                         __ptext24 3594                           __ptext16 5B96  
                         __ptext41 6856                           __ptext33 6778  
                         __ptext25 6648                           __ptext17 537A  
                         __ptext50 65D4                           __ptext42 6398  
                         __ptext34 681E                           __ptext26 5518  
                         __ptext18 56A8                           __ptext51 67C2  
                         __ptext43 66B6                           __ptext35 64B2  
                         __ptext27 3EE2                           __ptext19 4E26  
                         __ptext60 67E4                           __ptext52 660E  
                         __ptext44 6068                           __ptext36 62D0  
                         __ptext28 51BA                           __ptext61 3088  
                         __ptext53 6680                           __ptext45 5830  
                         __ptext37 60FE                           __ptext29 6546  
                         __ptext62 6888                           __ptext54 5DCE  
                         __ptext46 689E                           __ptext38 6334  
                         __ptext55 1D52                           __ptext47 66EA  
                         __ptext39 645E                           __ptext56 679E  
                         __ptext48 671C                           __ptext49 5AAA  
                         __ptext59 24DE                       _RXF2SIDLbits 000F09  
                         __powers_ FD01                       _RXF3SIDLbits 000F0D  
                 __size_of_sprintf 0894                       _RXF4SIDLbits 000F11  
                     _RXF5SIDLbits 000F15           CANsendMessage@dataLength 0077  
                    __size_of_main 09B8                      __size_of_itoa 0048  
                    __size_of_utoa 00BE                  ?i2_CANsendMessage 0026  
             CANreceiveMessage@msg 0026              LCD_shift_cursor@shift 007E  
              i2_CANisTxReady$3168 0026                       _TXB0SIDLbits 000F42  
                Joystick_Polling@i 0072                 ??i2_CANsendMessage 002E  
                     _TXB1SIDLbits 000F32           __end_of_Joystick_Polling 64B2  
                     _TXB2SIDLbits 000F22                           int$flags 004B  
        __size_of_CANOperationMode 0016                      ?_CANisRxReady 0026  
                    ?_CANisTxReady 0026           __end_of_LCD_write_string 679E  
                      _RXB0DLCbits 000F65                        _RXB1DLCbits 000F55  
                     _RXM0SIDLbits 000F19                        _RXB0CONbits 000F60  
                       _LCD_cursor 66EA                        _RXB1CONbits 000F50  
                _CANreceiveMessage 3088                       _RXM1SIDLbits 000F1D  
                       _INTCONbits 000FF2                       _set_steering 0025  
                 ??_CANsendMessage 0079                 ?_CANreceiveMessage 0026  
                         itoa@base 0085                           isdigit@c 0073  
                      _low_battery 0248                           scale@scl 00A0  
         CANsendMessage@identifier 0071                       _time_counter 0019  
                         intlevel1 0000                           intlevel2 0000  
                        sprintf@ap 0151                   __tdiv_to_l_@exp1 0081  
                        sprintf@sp 00C3                   __tdiv_to_l_@cntr 0080  
                 CANSetFilter@tamp 007B                   __tdiv_to_l_@quot 007C  
                 CANSetFilter@type 0075                ??_CANreceiveMessage 0028  
                 ___lwmod@dividend 0071                   ___lldiv@dividend 0071  
                      _TXB0DLCbits 000F45                        _right_speed 0021  
                      _TXB1DLCbits 000F35                        _TXB0CONbits 000F40  
                      _TXB2DLCbits 000F25                        _TXB1CONbits 000F30  
                      _TXB2CONbits 000F20                    _display_refresh 0247  
                 ??i2_CANisTxReady 0026               CANOperationMode@mode 0071  
                   ??_CANisRxReady 0026                        ?_CANSetMask 0071  
                   ??_CANisTxReady 0071                       ?__tdiv_to_l_ 0071  
        __end_of_CANreceiveMessage 3594                           utoa@base 007C  
                         sprintf@c 0165                           sprintf@f 00C5  
                 ___lldiv@quotient 0079                    ___lwmod@divisor 0073  
  LCD_shift_cursor@number_of_shift 007D                    ___lwmod@counter 0075  
                    ___fladd@signs 00B5                 _PWR_Button_Polling 6802  
                    _collision_msg 0246                       ___fladd@aexp 00B6  
                     ___fladd@bexp 00B7              __end_of_CANInitialize 51BA  
              ?_PWR_Button_Polling 0026                       _power_switch 024B  
